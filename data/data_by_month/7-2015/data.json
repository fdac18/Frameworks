[{"title": "dynamically added svg mask wrong htmlunknownelement dom type", "body": "hi found strange issue connected svg mask elements ie mask adds dynamically ie example button click mask dom type htmlelementhtmlunknownelement see chrome devtools svgdefsmask properties mask created statically ie load see dom type svgelementsvgmaskelement svgdefsmask jsfiddle repeat problem bug description jquery", "num": "4535", "d": "7/2015"}, {"title": "callback ref passed null component", "body": "super simple react native component static root callback ref component mounted callback ref invoked root component call callback ref receives root component js class example extends reactcomponent constructor props context super props context consolelog constructor render return componentdidmount consolelog componentdidmount thissetstate console logs read ref confusing since ref view nt unmounted parent believe beta whatever rn master uses", "num": "4533", "d": "7/2015"}, {"title": "testutilssimulateclick nt work", "body": "javascript tabjsx\u7684\u6d4b\u8bd5\u7528\u4f8b jestdontmock tab var reactaddons require reactdistreactwithaddonsjs var react require reactdistreactjs var tab require tab var testutils reactaddonsaddonstestutils describe tab test function testutilssimulateclick nt work", "num": "4532", "d": "7/2015"}, {"title": "onmouseenter broken chrome", "body": "handler called mouse element jsx class box extends reactcomponent constructor props super props thisstate text leave let container documentgetelementbyid container reactrender container works browsers chrome stable canary however render list divs handler mouse enter works outside one divs", "num": "4531", "d": "7/2015"}, {"title": "feature higherlevel wormhole pattern", "body": "thinking code needs render react nodes somewhere direct dom child react component examples user tether library sometimes needs relocate dom node positioning work right react component planning render children decedent position things correctly bonus means popover component passed directly button controls react component uses party modal dialog library renders react children body created component could also slightly related need people keep dom node around even rendered assuming implementation able react render detached node current pattern kind use cases component children different dom node component unmounts understand called wormhole pattern however pattern problematic method context passed children way could add way component access internal context supposed see properties declared allow accept would expose internals ways exposed case thing internal react passed would help need higher level api declare fauxvirtualrelocated children pick name render separate dom component somewhere else dom still linked another component components simply pass api component responsible creating dom container telling reactdom would integrated react dom context piece data would flow normally component would responsible cleaning container unsure react responsible unmounting children fauxvirtualrelocated location would another function", "num": "4530", "d": "7/2015"}, {"title": "testing simple way run test individually", "body": "react git master jest srcisomorphicdeprecatedtestsclonewithpropstestjs notice node iojs merging august jest work iojs merger complete legacy node still available npm branch github using jest cli fail srcisomorphicdeprecatedtestsclonewithpropstestjs referenceerror userszhengzhongzhaodevelopreactreactscriptsjestenvironmentjs invalid lefthand side assignment test failed tests passed total react git master nodeenvtest jest well beer", "num": "4529", "d": "7/2015"}, {"title": "document onload onerror", "body": "elements support onload amp onerror nt listed eventshtml page apologies sending pull request easy thing nt sure whether new heading", "num": "4527", "d": "7/2015"}, {"title": "warning setstate unmounted component traceback", "body": "warning setstate update mounted mounting component usually means called setstate unmounted component noop would great get stack trace know warning referring", "num": "4526", "d": "7/2015"}, {"title": "deprecate reactaddonsbatchedupdates", "body": "shipped exposed master deprecate usage separately deprecation notices nt shipping standalone addon", "num": "4525", "d": "7/2015"}, {"title": "false warning use keyed object wrapped reactaddonscreatefragment object passed child", "body": "running code server side bootstraps alt stores displays warning message variable nested json objects js export default req res next gt cookiesetrawcookie reqheaderscookie let location new location reqpath reqquery routerrun routes location error state transition gt error return next error transitioniscancelled return resredirect transitionredirectinfopathname server output html react app authenticated truehomestatslogin logoutprojectsenvironment developmentplatform darwinmemoryusage snapshot variable example using source code available suggestions", "num": "4524", "d": "7/2015"}, {"title": "reactmount refactor rely dom", "body": "seen soon refactored rely dom share code two hard code id logic still wanted working project would help reactmount dependant dom different render target nt mind taking look want check wanted feature whether cases like mine go writing completely new renderer think would useful would make easier use react projects nt dom related", "num": "4523", "d": "7/2015"}, {"title": "enhance reactclass support perf functions", "body": "currently reactclass loops lifecycle methods created attaches prototype function sets null think would benefit reactclass check phase reroute lifecycle methods would allow advanced metrics line lifecycle methods executed think pr ready something core think", "num": "4521", "d": "7/2015"}, {"title": "warn checkbox element child textmarkup", "body": "seems conditionally rendering two elements ca nt different root node example switching input div order get around issue wrap everything common container element react able handle sample plunkr demonstrates behavior expect case switch showing test test activating checkbox instead ends duplicating node interestingly nt get errors simplified test case complex app react complains two unrelated nodes sharing react id activating checkbox", "num": "4520", "d": "7/2015"}, {"title": "creating element without reactcreatefactory reactcreateelement jsx", "body": "hi trying interface react scalajs scala class hello extends reactcomponent def render reactcreateelement div reactrender new hello dom node invariant violation reactrender invalid component element make work hello scala class available js world make available js world jsexport ing reactcreateelemnt jsdynamicglobalpackagepathhello props reactcreatefactory sdynamicglobalpackagepathhello props work languages compiles js interact react possible remove restrictions allow us use default class constructors create elements", "num": "4519", "d": "7/2015"}, {"title": "get lostfocus event get onfocus", "body": "get focus type something search appear click somewhere else get focus lost want disappearhow", "num": "4518", "d": "7/2015"}, {"title": "license via npm", "body": "add license npm package", "num": "4517", "d": "7/2015"}, {"title": "automatically add type button buttons without type", "body": "well known issue pressing enter input trigger click handler unrelated button somewhere else dom button nt wondering react automatically add creating elements nt already props left userland currently monkeypatching automatically add also wondering better way", "num": "4516", "d": "7/2015"}, {"title": "fixed issue happens latest stable edition", "body": "issue fixed pull comments seems works meet problem latest stable edition write todo list react use reactcsstransitiongroup animation however use button delete completed todo items last item deleted issue mentioned nt use reactcsstransitiongroup everything works fine see reacttransitiongroupjs code committed fix problem removed test case wonder happened", "num": "4515", "d": "7/2015"}, {"title": "defensive calling methods syntheticevent inside pool", "body": "known documented react syntheticevent pooled confusing many users nt understand event starts behave strangely used async callback like inside callback already attempt solve problem code syntheticevent default methods javascript preventdefault function thisdefaultprevented true var event thisnativeevent eventpreventdefault eventpreventdefault else eventreturnvalue false thisisdefaultprevented emptyfunctionthatreturnstrue stoppropagation function var event thisnativeevent eventstoppropagation eventstoppropagation else eventcancelbubble true thisispropagationstopped emptyfunctionthatreturnstrue may make sense defensive calling pooled event raise would useful add check like", "num": "4514", "d": "7/2015"}, {"title": "yet another invariant violation reactmount two valid unequal nodes", "body": "experiencing unexpected error related native dom events created owner component triggered dom elements rendered owned components number seemingly related issues closest might different edge case thought create new issue reproduction tried whittle much possible jsfiddle using get error using steps click go two click go one click go two second time component rendered react throws datareactid notes trying narrow cause found following scenarios error thrown onclick prop empty function added element component see input element component removed leaving form element see return value render methods components inlined render method component ie everything rendered single component see using form element component removed leaving input element sorry fiddle cdn still throws thanks", "num": "4511", "d": "7/2015"}, {"title": "factorytype deprecated without using type", "body": "hey using react typescript whenever use reactcreatefactory get warning despite using type anywhere smallest code reproduce issue minus imports ts export class boardappcomponent extends reactcomponent render return button null hey const boardapp reactcreatefactory boardappcomponent export default boardapp link project issue done", "num": "4510", "d": "7/2015"}, {"title": "class methods binded class instances", "body": "let say class like use baseplayer inside another component name refbaseplayer like problem class somecomponent ca nt call thisrefsbaseplayermymethod methods binded baseplayer instance fixed manually bindexpose methods baseplayer constructor like constructor props super props automatic better way achieve", "num": "4509", "d": "7/2015"}, {"title": "using braces props causes syntax error", "body": "following jsx produces following incorrect js reproducible jsx compiler page", "num": "4508", "d": "7/2015"}, {"title": "new macbook arrived trouble running test xd", "body": "beer react git master grunt test running jest task running jest may take notice node iojs merging august jest work iojs merger complete legacy node still available npm branch github using jest cli fail srcaddonstestsreactcomponentwithpurerendermixintestjs error worker process exited responding exit code null exit signal sigsegv stderr worker process quit unexpectedly bad news shutting jest failed error warning task jest failed use force continue aborted due warnings", "num": "4505", "d": "7/2015"}, {"title": "react custom rendering reactblessed", "body": "hello react team release separation rendering logic react core started scaffolding custom renderer blessed library used create terminal interfaces therefore wip nonetheless working version issue therefore way give feedback creation custom renderers ask advice check whether things correctly way would deem right one steps followed created based respectively upon creared mimicking behavior created injection file basically following js reactinjectionnativecomponentinjectgenericcomponentclass reactblessedcomponent reactinjectionnativecomponentinjecttextcomponentclass reactblessedtextcomponent reactinjectionupdatesinjectreconciletransaction reactblessedreconciletransaction screenreactserverrenderingreactcomponentenvironmentprocesschildrenupdates set noop updates work without dom working renderer working state reconciliation refs events etc things would missed would break renderer point", "num": "4500", "d": "7/2015"}, {"title": "unmount root components container", "body": "hi using react certain modules mature project primarily built around jquery serverside rendered html main routing mechanism loads particular url via replaces html content container page via using react components page noticed manually unmount root components leaving page loading new page case react components rendered deeply nested somewhere content container unmounting root components rendered content container manually via works expected concerned developers could forget unmount components could lead memory leaks unexpected behavior guess therefore would like unmount possible root components generic way directly router unfortunately nt know get dom nodes particular parent container generic way nt work components rendered directly content container somewhere content container hierarchy way retrieve root components given dom element selecting elements would select root components also child components would helpful react would directly support unmounting whole container thanks advance help keep good work benjamin", "num": "4498", "d": "7/2015"}, {"title": "reactchildrenmap index always", "body": "reactchildrenmap thispropschildren item gt consolelog im trying add event child need current index mapping get correct index thanks", "num": "4497", "d": "7/2015"}, {"title": "wrapping child elements possible need key wrapper", "body": "title may clear example easy understand javascript key set correctly var childs key set correctly var childswrapped childsmap function c return c often put wrapper components around components find often forget put back key attribute wrapper child already key wrapper could perhaps also uses key automatically nt know possible good idea wondering", "num": "4496", "d": "7/2015"}, {"title": "required props provided cloneelement still display warning console", "body": "made example easier understand basically warning displayed console missing required props props given element nt expecting get warning missing props understand could edge case though class extends reactcomponent render return reactchildrenmap thispropschildren function child return reactcloneelement child name thispropsname value thispropsvalue aproptypes name proptypesstringisrequired value proptypesstringisrequired class b extends reactcomponent render return thispropsname thispropsvalue bproptypes name proptypesstringisrequired value proptypesstringisrequired", "num": "4494", "d": "7/2015"}, {"title": "unreliable chrome", "body": "see jsfiddle chrome quickly move mouse list notice get stuck hover state works fine safari works chrome use stable key hover states think somehow nt firing underlying dom node replaced new one tick odd chromeonly bug", "num": "4492", "d": "7/2015"}, {"title": "verdict cycle js", "body": "new topic hacker news reactjs vs cyclejs anyone know", "num": "4491", "d": "7/2015"}, {"title": "onclick nt works iphone ipad works android", "body": "", "num": "4490", "d": "7/2015"}, {"title": "typeerror running nodeenv production", "body": "example repo using babelnode execute turn works fine production get error missing something really obvious", "num": "4489", "d": "7/2015"}, {"title": "animations working safari", "body": "tested basic animations working fine chrome firefox safari issues nothing seems work safari even fadeinfadeout eg", "num": "4488", "d": "7/2015"}, {"title": "implement declarative setstate handling", "body": "depend immutable library store properties triggerinvoke react rerender update properties often find need change properties corresponding state together one event handler function order keep synchronised scenarios would great able let immutable library alone responsible triggering rerender process turn automatic rerendering response setstate calls note thought moving setstate componentwillrecieveprops state values dependent given event handler would make sense able pass additional parameter setstate call allow developer explicitly control setstate handling perhaps use cases one would want batch set state property changes guaranteed processed tick something along lines x reactcreateupdatebatch xaddpropupdates many xaddstateupdates many recatsubmitupdatebatch x", "num": "4487", "d": "7/2015"}, {"title": "eventtarget set onchange event", "body": "version set event currenttarget set example works expected version intentional", "num": "4479", "d": "7/2015"}, {"title": "upgrade typescript dependency", "body": "lock since bunch apis changed nt want figure important thing still run typechecks fail appropriately using simple transpile api nt option see", "num": "4476", "d": "7/2015"}, {"title": "problem instance react", "body": "instance react empty object installation ran problems errors surrounding nt exist npm package registry deleted packagejson everything ran smoothly instance react empty object using linux version app build pipeline includes gulp commonjs", "num": "4475", "d": "7/2015"}, {"title": "implement sticky listview headers", "body": "scroll listview iosandroid apps see headers stays top replaced newest section headers scroll react native support feature investigation found jquery plugins react components modules use achieve effect react project librarypluginreact components recommend use", "num": "4468", "d": "7/2015"}, {"title": "best way access prod build webpack modules", "body": "let say including react prod build cdn script tag want get version ideal webpack config course could thinking better way seen surprisingly articles talk use production build cover dev case", "num": "4467", "d": "7/2015"}, {"title": "warning specify transition timed timeout occurs reactcsstransitiongroupchild", "body": "would great warning would specify transitionend event looking ie transitionname", "num": "4465", "d": "7/2015"}, {"title": "validatedomnesting warns optional tags missing", "body": "according html spec certain tags optional specific circumstances presence implied however getting warnings cases imagine complexity something worth accounting within wanted call", "num": "4464", "d": "7/2015"}, {"title": "perfprintwasted showing instances actual renders", "body": "hi trying analyse performance app use perfprintwasted heavily face weird behaviour usually activating perf single transition going one view another get long view performance waste digging tried get rid one single instance following example focusing index betroundgames gt game supposedly rerenders times without changing dom since using purerender curious often render betroundgames game component triggered added counter components render result betroundgames render games render different games every instance exactly rendered also saw sometimes adding new nodes still counting wasted time shown would explain wasted instances explain perf counting instances wasted time either understanding measurement wrong make wrong assumptions", "num": "4462", "d": "7/2015"}, {"title": "calling setstate componentwillmount shallow render results typeerror read property currentelement null", "body": "calling component shallow rendered result error thrown set test case javascript var expect require chai expect describe testing state function beforeeach function var window require dominolibwindow var domino require domino handle initial state function passes var react require react var reacttestutils require reactlibreacttestutils handling set state componentwillmount function fails var react require react var reacttestutils require reactlibreacttestutils", "num": "4461", "d": "7/2015"}, {"title": "block change events disabled", "body": "repro given least double click checkbox causes onchange called adding statement normalizing would nice may also affect elementsevents like misc screen readers etc workaround duplicate disabled boolean logic handler report irc verified", "num": "4457", "d": "7/2015"}, {"title": "error inside render function nt show error console", "body": "hello updated latest version react everything wonderful started notice something really important sometime components created nt started debug code found made exception inside render function something like stupid example show example never saw error console nt see anything error making crazy stated debug react code found something nt know bug need solve different way inside reactjs see try nt got catch added catch console started show errors inside render function hope ok mistake thanks", "num": "4454", "d": "7/2015"}, {"title": "chrome load events fired img tags detached trees cause infinite loop", "body": "web components", "num": "4452", "d": "7/2015"}, {"title": "getters mixin", "body": "want use style getters inside mixin blows comes line inside reactclass invokes getter method mixing unexpected behavior jsx const foomixin componentwillmount thismyfoo bar get foo return thismyfoo const mycomponent reactcreateclass mixins foomixin render return thisfoo", "num": "4450", "d": "7/2015"}, {"title": "deferred componentdidmount inside component tree", "body": "problem dom elements outside main dom document want render react components done original elements mounted main dom document need delay schedule components inside main dom document reason mainly logic inside works offsets element eg controls lazy loading images invoked seperate dom component wrong idea screen possible current version react achieve behaviour componentdidmount transaction invoked later give signal root component future refactoring allow use case", "num": "4448", "d": "7/2015"}, {"title": "contents", "body": "something like output script elements cdata content quoted", "num": "4446", "d": "7/2015"}, {"title": "jsx validator fails selfexecuting arrow functions still works", "body": "put code compiler gave syntax error however nt break app works intended jsx var hellomessage reactcreateclass render function return gt true return true else return false reactrender mountnode nt work based information section last example", "num": "4445", "d": "7/2015"}, {"title": "update data rest api", "body": "jsx var app reactcreateclass getinitialstate function return data updatedata function thissetstate function state state function state data return data function state cb get data data result statedata result cb state data render function return tried update state working way update manully commented portion even render second click tell proper way update state using rest api calls", "num": "4442", "d": "7/2015"}, {"title": "request support full range svg attributes jsx", "body": "noteworthy missing attributes include", "num": "4441", "d": "7/2015"}, {"title": "thissetstate function", "body": "running getting uncaught typeerror thissetstate function behavior something wrong please check", "num": "4440", "d": "7/2015"}, {"title": "support bgcolor td tag html emails", "body": "seems widest email client support using bgcolor attribute td tags best route would like write render emails react since building email components would alleviate pains using tables layout use inline styles via js would helpful inability use bgcolor attribute road block would ever supported future", "num": "4439", "d": "7/2015"}, {"title": "linkedvalueutils requestonchange eventtarget undefined", "body": "following example work console shows typing input field fwiw seems set correctly workaround fix thanks", "num": "4438", "d": "7/2015"}, {"title": "microsoft edge compat", "body": "hey reactors working assessing cataloging triaging library compat microsoft edge know version compat range react edge versions fully operable edge also bugs block features compat help escalate", "num": "4434", "d": "7/2015"}, {"title": "allow classname jsx element declaration", "body": "since jsx javascript identifiers class discouraged xml attribute names instead react dom components expect dom property names like classname htmlfor respectively instead able instead able true reserved keywords ecmascript however jsx part ecmascript jsx transpiled javascript jsx inlined javascript restricted limitations transpiler carry weight incompatibilities babel babel transpiler able read class attributes convert refer react support element properties throw warning", "num": "4433", "d": "7/2015"}, {"title": "mouseevent nt offsetxoffsety", "body": "try get position click relative element event nt offsetx onclick e consolelog eoffsetx returns undefined consolelog etargetoffsetx returns undefined render return get position click element", "num": "4431", "d": "7/2015"}, {"title": "component must raise error unknown property passed", "body": "component declaration contain whitelist properties eg could require list property name even assigned could mean type broader version property defined passed component declaration error must raised would provide several benefits would help catch typos would promote type declaration would prevent orphan properties catching typos suppose component generates different type input depending value component default value text js var input reactcreateclass getdefaultprops function return type text render function different logic defending type name thispropstype text instance declaration defined typo property would obvious error raising error unknown property tupe would help catch error promoting type declaration property names required listed requires little extra effort define types furthermore used think codelength terms lines code fact type declaration moment adds extra lines might discouraging developers thought boost importance earlier argument preventing orphan properties especially relevant using spread operator inheritance suppose instance simple component declared using spread operator object containing many properties apply component scenario instance would copy property values dead weight", "num": "4430", "d": "7/2015"}, {"title": "file exports single class displayname eq file name", "body": "single file used per module modules end derived equal would make sense use file name instead eg js proptypesjs jsx reactdom use strict var react require react moduleexports reactcreateclass render function return case", "num": "4429", "d": "7/2015"}, {"title": "lint unnecessarily complains trailing comma", "body": "tried write linter wants comma kind annoying anything", "num": "4428", "d": "7/2015"}, {"title": "ca nt get use classes react", "body": "new react want rewrite simple react demo seem ca nt get code javascript class timer extends reactcomponent constructor props super props thisstate elapsed methods tick thissetstate elapsed new date thispropsstart read property start undefined render var elapsed mathround thisstateelapsed var seconds elapsed tofixed return example started seconds seconds ago reactrender documentbody use thanks", "num": "4425", "d": "7/2015"}, {"title": "childrenonly called result childrenmap", "body": "intended called opaque object eg best tell intended return opaque object ca nt called return value per seems reasonable want map child another element clone element instance grab child map use render also surprising identity operation passed map thing comes semantically equivalent issue demonstrated", "num": "4424", "d": "7/2015"}, {"title": "implement custom lifecycle hooks", "body": "wondering implement custom lifecycle hooks want add fetch hook fetch data related component another hook know former use case dealt relay", "num": "4423", "d": "7/2015"}, {"title": "adjacent jsx elements must wrapped error", "body": "nt see anything wrong first two lines jsx transformer seems remove first two everything works fine someone explain going jsx new inbox sign", "num": "4418", "d": "7/2015"}, {"title": "input tag rendered self closing", "body": "", "num": "4417", "d": "7/2015"}, {"title": "invoke another component method", "body": "work reactjs meet problem divide entire page two components called xxxheader want click button xxxheader refresh xxxbody works well wrap xxxheader xxxbody parent ca nt wrap xxxheader xxxbody component try use mixin resolve mixin used wrap common give suggests", "num": "4416", "d": "7/2015"}, {"title": "could know dangerouslysetinnerhtml set innerhtml", "body": "use marked parse article get html string article use insert dom want use autoindexer generate index article code try get length content children node means innerhtml nt set time check test code content longer confused could know dangerouslysetinnerhtml set innerhtml seems short html set invoked longer html set invoked", "num": "4415", "d": "7/2015"}, {"title": "returned value weird", "body": "sure whether bug let look following code jsfiddle js var test reactcreateclass render function consolelog reactchildrenmap thispropschildren function child return child consolelog thispropschildren return thispropschildren reactrender reactcreateelement test reactcreateelement input documentbody think returned value surprise returned value something like misunderstand", "num": "4410", "d": "7/2015"}, {"title": "componentwillunmount triggered child component parent component unmounts child component", "body": "componentwillunmount triggered child component parent component unmounts child component", "num": "4406", "d": "7/2015"}, {"title": "flatten children array instead object", "body": "flattening children array times faster flattening object long list elements shows initial render flame graphs pretty hot", "num": "4405", "d": "7/2015"}, {"title": "checksum validation dev mode", "body": "validating checksums surprisingly expensive reasonable render wasting generating double checksum needs generated twice server client creating bug test waters anything else feel check dev mode failing harder dev mode fail check since would become serious problem production would longer validating checksum thus expected markup could differ actual hard justify spending many valuable milliseconds generating sanity check fully expect pass developers write code correctly", "num": "4401", "d": "7/2015"}, {"title": "inline styles rules overriding", "body": "always deal browser inconsistency still want use inline styling nice good property different name prefix like deal situation used override rule css eg", "num": "4399", "d": "7/2015"}, {"title": "chrome svg bug", "body": "chromium svg bug report july also see bug registered chromium chromium issue run reducedtestcase nt even need clone repo build folder get vickershtml vickerspackedjs save locally folder open html firefox chrom eium please note bug occurs chrome firefox app works fine firefox using chromium version ubuntu bit description app app implements minesweeper grid tiles beginning game tiles showing component currently fuzzy blue ring lightblue click tiles reveal nonmine tiles show number mined tiles show black mine glyph goldpurple gradient disk right clicking nonrevealed tile flag tile flag glyph fuzzy grey disk black background game end clicking revealing mine programmed behaviour development purposes description bug chrome clicking mined tile causes tiles revealed mine tile go completely black programmed behaviour feel free test firefox tiles stay programmed behaviour tiles go black right clicking flag tile variety possible unintended effects board fresh mines revealed first click toggle flag work second click remove flag also work third click make every tile board transparent except border region fourth click return tiles appropriate state visual state would without bug board tiles blackened revealing mine behaviour tiles revealed mines first bullet behaviour revealed mines cycle various states visual mutation decomposition svg glyph starts third toggling flag mine disappears halo ring reappears th fourth toggling fifth toggling goes subtle mutation cycles states subsequent togglings reducedtestcase attempted reducedtestcase bug unfortunately bug involves interaction logic visual detail nt able reduce much", "num": "4398", "d": "7/2015"}, {"title": "inherit class react work jest", "body": "dear use jest inherit class react cause error looks react issue jest post demo based jest example change two line add custom file paste gist errors using jest cli fail testscheckboxwithlabeltestjs checkboxwithlabel changes text click typeerror read property textcontent undefined spec jasmineblockexecute jasminequeuenext nullontimeout timerlistontimeout ontimeout test failed tests passed total run time npm err test failed see details npm err ok code node version react version jest version problem looks cause testutils always return undefined use customreact maybe use wrong way extend react works except adding testcase", "num": "4397", "d": "7/2015"}, {"title": "file", "body": "get warning latest beta npm installed warning text", "num": "4396", "d": "7/2015"}, {"title": "purerender decorator", "body": "wondering purerendermixin implemented decorator think importing another lib overkill also nt use cases pure render case nt default behavior", "num": "4394", "d": "7/2015"}, {"title": "render string slow", "body": "switched mustachelike templating isomorhpic framework building rendering server side noticed taking render whole page usually instant roughly line got props thought cause components call render function concatenate strings something hood", "num": "4392", "d": "7/2015"}, {"title": "thisstate empty render despite getinitialstate defined correctly", "body": "hey try best explain scenario making fiddle smallest possible case might hard essentially spa using reactrouter currently getting strange behavior specifically one version firefox two sidebar icons trigger change routes navigating new page occasion switch quickly getting error thisstatelist undefined list populate dropdown issue upon debugging consolelog thisstate returning empty object call errors thisstatelist happens render method however list defined getinitialstate along bunch state variables thisstate definitely nt empty thing could think would causing due quick switching confusion mountingunmounting components component still thinks mounted skips getinitialstate goes ahead tries render either bug reactrouter thoughts thanks advance help nick ps reiterate also occurs rarely quick switching normally componentdidmount getinitialstate render occurs expected simply error getinitialstate written etc edit using react react router", "num": "4391", "d": "7/2015"}, {"title": "reopening", "body": "another day development run chromium problems firefox still working fine minesweeper renders okay gameplay graphics behaviour unpredictable strange things chromium like revealing clicking mine turns every tile black repeatedly toggling flags rightclick causes tiles go transparent etc", "num": "4390", "d": "7/2015"}, {"title": "passing callback setstate using reactaddonslinkedstatemixin", "body": "think linkstate accept second argument callback passing setstate consider example widget includes couple inputs whenever inputs changes widget calls thispropsonchange based values inputs currently implement mixin passes callback setstate think would reasonable arguments linkstate consistent setstate", "num": "4389", "d": "7/2015"}, {"title": "unexpected behavior react", "body": "migrating unit tests reporting false positive failures seems though longer able find elements inside components javascript create simple component const test reactcreateclass render gt return render document const myelement reacttestutilsrenderintodocument make sure component svg element const svg reacttestutilsfindrendereddomcomponentwithtag myelement svg oops fails gt find exactly one match tag svg however works fine consolelog finddomnode myelement childnodes gt returns element", "num": "4388", "d": "7/2015"}, {"title": "css animation example", "body": "hey struggling animation issue almost hour css popenter transform translatex transition transform easein popenterpopenteractive transform translatex expert css animations simply copied docs turns solution css popenter transform translatex popenterpopenteractive transform translatex transition transform easein element rendered isnt initially set thus tried animate tag hits going back place thus appears animation occurred save someone like lot pain frustration fixed example docs", "num": "4385", "d": "7/2015"}, {"title": "add findrenderedcomponentswithattr", "body": "hello party people like find dom nodes attributes specifically ariaselected use case testing keyboard navigation around dom nodes ensure component accessible thoughts try avoid refs much possible classes nt specific enough state element thoughts made commit would accepted thanks", "num": "4380", "d": "7/2015"}, {"title": "reacttestutilsscryrenderedcomponentswithtype problem compiled code", "body": "edit react version hi trying use test result returns nt expected given components extends javascript let renderedel reacttestutilsrenderintodocument let projects reacttestutilsscryrenderedcomponentswithtype renderedel project consolelog projects get reason line evaluates reason believe minified webpack course nt equal something guys aware use incorrectly thanks", "num": "4378", "d": "7/2015"}, {"title": "random svg text tspan shows properly", "body": "app require sag text wrapping length editing functionality done computing text wrap text editing functionality thing stuck edit element width ie decrease element width make textin lines lines show ok refresh page looks ok stretch element show every thing ok ie text line looks like increase rows tspans working decrease tspans reflects oki key assigned element warning react browser console idea issue seems like react rendering new tspan properly see tspan properly dom", "num": "4376", "d": "7/2015"}, {"title": "testutilssimulate changekeydownkeypress working normal input field", "body": "hard time definitely behaving expected basically input field type text try change content click press keys rocket science editing stuff fails miserably wrote small jsbin showcase component testing also wrote small repo showcase failing tests going ps bin running repo running using still nevertheless also tried keeps failing", "num": "4375", "d": "7/2015"}, {"title": "render node client side", "body": "using isomorphic rendering app however want items present javascript disabled render method following works expected however get warning way make go away store check like however nt seem like right place live maybe wrong could also use however deprecated nt make much sense use anyone else thoughts best way approach", "num": "4374", "d": "7/2015"}, {"title": "faster way showhide components toggle component toggle display", "body": "toggle component toggle css display simple", "num": "4373", "d": "7/2015"}, {"title": "reopening chromium chokes svg path element", "body": "see", "num": "4372", "d": "7/2015"}, {"title": "walkthrough clarification", "body": "reporting bug issue wanted let know found part walkthrough unclear confusing others may get started using tutorial start editing publicindexhtml getting started tutorial use prebuilt javascript files cdn open favorite editor create new html document took figure whether supposed editing indexhtml file provided cloned repo whether make new file link two files necessary new react pretty new programming overall javascript javascript framework experience really enjoyed walkthrough simple get started thanks helpful resource", "num": "4369", "d": "7/2015"}, {"title": "react unhelpfully eats stacktraces", "body": "line code like following nt exist react code makes difficult debug going normally ask chrome debugger debuggers well pause exception halt debugger right line mouseover see however react code see errors happen swallowed losing useful stacktrace ability browser debug code understand react needs two lines finally clean would helpful could save exception thrown eg rethrow finished cleanup eg reason impossible alternative less useful solution would log error would least provide developer stacktrace although would nt let debug error", "num": "4368", "d": "7/2015"}, {"title": "checkbox rendering properly ajax", "body": "render following thispropsgenres populated ajax call body inputs doesnt get rendered populating static data render fine cases data passed array strings hopefully missing something obvious", "num": "4365", "d": "7/2015"}, {"title": "chromium chokes svg interaction", "body": "particular svg subissue related intial post solved different svg issue related post thread july opened different issue even though relate chrome svg issue findings svg related sort variable assignments function within return values may parsed span elements inside svg logically cause blowup generally issue generally still able compute usefull things within without vals turned fodder spans still think bug svg related limited path elements bug chromium firefox path command danger discarding unexpected node error chromium breaks render destroying app firefox problems svg path command render firefox renders fine chromium get danger discarding unexpected node warning render full file project context testcoffee", "num": "4364", "d": "7/2015"}, {"title": "getting started confused new starter", "body": "followed step page working need figure add steps start local server run hello world example compared angularjs getting started doc one bad waste time", "num": "4361", "d": "7/2015"}, {"title": "react testutils missing package", "body": "seems addons got separate package except testutils means get deprecation warning requiring reactaddons use expected missing something", "num": "4360", "d": "7/2015"}, {"title": "statics getdefaultprops wierdness", "body": "tripped today instead must call inside presume static method ends inside statics object hence must referenced siblings using filing bug bring attention though since user perspective behaviour bit unexpected", "num": "4359", "d": "7/2015"}, {"title": "docs getting started helloworldhtml example fails chrome osx yosemite", "body": "downloaded react starter kit today working separate file section place made following directory structure starter kit files source markup would nt load chrome console one spent time googling solutions nt seem work nt try restarting machine though however xhr worked safari include minor disclaimer case chrome since nt want barrier entry newcomers", "num": "4354", "d": "7/2015"}, {"title": "access lower leaves object loaded json put", "body": "loading json object adding manner shown react tutorial able access leaves first level given json file following results works simple keyvalue uncaught typeerror read property key undefined uncaught typeerror read property firstkey undefined putting debug variables function one see reference data fine json data structure adds full test file loading json file output work invoke error messages returns nothing html test referencing json object react state json test var contentbox reactcreateclass loadjsonfromserver function ajax url thispropsurl datatype json cache false success function data thissecondkey works thissetstate data data nt work bind error function xhr status err consoleerror thispropsurl status errtostring bind getinitialstate function return data componentdidmount function thisloadjsonfromserver render function var testvalue thisstatedatajunk return test thisstatedatasimple thissecondkey reactrender documentgetelementbyid content", "num": "4352", "d": "7/2015"}, {"title": "rerendering done efficient way data change flux architecture controller", "body": "controller consist many views controller state pass data views props problem suppose view depends number product say products product consist number properties related property also property change value subproperty rerender dispatch change event start rerendering controller process codes like condition checks loops etc time consuming achieve fluxreact architecture", "num": "4350", "d": "7/2015"}, {"title": "encoding declaration written several ways", "body": "reactexamples encoding declared described files however another example declared another writing think unify latter way possible provide short code using attribute", "num": "4347", "d": "7/2015"}, {"title": "maintain state mountunmount", "body": "really getting answer looking stackoverflow thought try possible instantiate component mount unmount remount allowing component maintain internal statecontext", "num": "4345", "d": "7/2015"}, {"title": "missing guard doublerequire invariant", "body": "tl dr propose create simple guard around doublyincluding react cause issues different blocks work different instances understand invariant nt going matter everyone two points many weeks fixed bug coworker project accidentally including react twice browser one browserify bundle standalone", "num": "4343", "d": "7/2015"}, {"title": "inherited prop classname", "body": "hey recently using react flux project approached quite intriguing problem following webcomponentslike approach try create bunch reusable components similar behaviours problem arises want put component logic different view different design different css class attached need create component different set class names usually default ones right seems possible passing props like tl dr would really cool react passed component definition actual dom elements would save us creating passing props ex initialization parent component js class parentcomponentalpha render return class parentcomponentbeta render return current way appending inherited classes js class mycomponent proptypes classes reactproptypesarrayof reactproptypesstring render var innerclasses cmp default cmp mobile nicer simpler way js class mycomponent render var innerclasses cmp default cmp mobile would love hear opinions needed functionality project ended passing inherited class names props feels little inelegant", "num": "4341", "d": "7/2015"}, {"title": "syntheticevent undefined target", "body": "syntheticevent set example works advise missing", "num": "4340", "d": "7/2015"}, {"title": "third argument reactchildrenforeach work", "body": "found optional argument could set another object toplevel api try run code javascript var obj num logs three times idea third argument work", "num": "4339", "d": "7/2015"}, {"title": "estoppropagation seems working expect", "body": "found issue attempted integrate reacjs jquery widget bind click event input element document like follow everytime click input element chrome devtool logs propagation message document element receive click event confused miss something", "num": "4335", "d": "7/2015"}, {"title": "rendertostring incorrectly supports select defaultvalue", "body": "code reproducing js var test reactcreateclass render function return var container documentgetelementbyid container var code documentgetelementbyid code var test var prerender reactrendertostring test codeinnertext prerenderreplace n lt containerinnerhtml prerender settimeout gt reactrender test container rendering server got small lag client", "num": "4333", "d": "7/2015"}, {"title": "attribute names class discouraged", "body": "docs note since jsx javascript identifiers discouraged xml attribute names instead react dom components expect dom property names like respectively jsx compiler seems smart enough quote keys like class work fine even environments problem discouraged exactly mean", "num": "4331", "d": "7/2015"}, {"title": "make eslint rule testing use jest mocha", "body": "using npm mocha necessarily thanks hoisting eg actually", "num": "4328", "d": "7/2015"}, {"title": "checksum inserted incorrectly selfclosing root tags", "body": "came diagnosing look closing adding checksum reactdomrendertostring reactcreateelement img reactdomrendertostring reactcreateelement div null reactcreateelement img", "num": "4323", "d": "7/2015"}, {"title": "reacttestutilssimulateclick react label element", "body": "dear faced issue testing collaboration label checkbox elements context custom checkbox label goal test behaviors one component fire user click title title case create link hotspots browser everything fine started cover tests faced click emulation label nt lead change checkbox value immediately works hack testing stack question happens plans improve behavior", "num": "4322", "d": "7/2015"}, {"title": "tag rendering differently client server invalidating checksum", "body": "hi tried find similar issues nt believe reduced case using react problem difference reactrender reactrendertostring dealing img tags closing kinda confuses assume exact thing hood tap inspect see difference server code const react require react reactapp require publicscriptscomponentsscaffoldappwrapper appcontent reactcreatefactory reactapp reactrendertostring appcontent client code import appwrapper componentsscaffoldappwrapper reactdomrender documentgetelementbyid appwrapper component appwrapper import react react class appwrapper extends reactcomponent export default appwrapper output markup rootmarkup note selfclosing tag something obvious incorrectly way enforce includingleaving closing tags thanks help offer", "num": "4321", "d": "7/2015"}, {"title": "example using testutilssimulatechange multiple select field", "body": "hi trying find working example driving multiple select element using react testutils single select works fine multiple select field get error instead pass array arguments nt seem triggering change handler reflected component state apologies missing something obvious anyone knows proper way help would appreciated thanks", "num": "4316", "d": "7/2015"}, {"title": "shallowcompare set reactaddons npm version", "body": "according docs reactcodemod react gt include used transformation installing npm case locally installed react node module missing line npm package date else wrong matters know error go away ca nt really upgrade beta", "num": "4315", "d": "7/2015"}, {"title": "keyboard selection nt fire onchange firefox", "body": "related bug bugzilla workaround use onkeydown allowing selection change calling handler manually wo nt bubble something could support", "num": "4313", "d": "7/2015"}, {"title": "multiple variation component mounted invariant violation reactmount", "body": "mounting component times different heading css hiding showing", "num": "4307", "d": "7/2015"}, {"title": "refs longer components", "body": "big change making release exposing refs dom components dom node means looked ref dom component realized useful thing call thisrefsgiraffegetdomnode get underlying dom node used perform custom method child component dom node accessible make longer possible better practice following call methods descendent components", "num": "4305", "d": "7/2015"}, {"title": "using extend create class react component shows error initialstate", "body": "maybe nt understand alternative warning getinitialstate defined campaignlist plain javascript class supported classes created using reactcreateclass mean define state property instead warning setstate update mounted mounting component usually means called setstate unmounted component noop", "num": "4304", "d": "7/2015"}, {"title": "add hooks warning output unit tests use cases", "body": "like configure testsuite fail react warnings triggered currently using variant answer js consolewarn function warn return function msg consolewarn basically works problem globalstate memoisation code triggers warning try trigger often could provide way clear state even better supported api optin erroring warnings", "num": "4302", "d": "7/2015"}, {"title": "problems using rendersubtreeintocontainer", "body": "nt know correct way integrate new hidden feature used used existing app migrating tooltips portals using hubspotdropjs render react components rendered content make use react context context changed ca nt use owner content anymore must use make context available see first got stacktrace undefined nt know nt get anymore tooltips efficiently displayed first requiring reactlibrendersubtreeintocontainer nt think reason right tooltips displayed works fine tooltips hovered clicked trigger actions also works fine strange thing found tooltip hovered produce lot errors tooltip produces errors first item list example imagine todo list first todo attribute tooltip hover tooltip causes errors stacktrace idea", "num": "4301", "d": "7/2015"}, {"title": "html components maintain state", "body": "say mycomp rendered dom user checks checkbox call mycomprender seems checkbox stell checked even though rerender checkbox statefullness come react handle maybe input element something like thisstatechecked apologize question covered docs suspect somewhat basic could find information", "num": "4298", "d": "7/2015"}, {"title": "issue react class variable references", "body": "weird behaviour probably undocumented done replicate react version javascript create react component var mycomponent require pathtomycomponent create reference var component mycomponent try render work reactrender target create new reference var component mycomponent try render work reactrender target desired behaviour missed something documentation", "num": "4297", "d": "7/2015"}, {"title": "proposal automatically compose refs cloneelement", "body": "currently clobbers original element ref provide new ref cloning proposal automatically compose callback refs works js var original var clone reactcloneelement original ref component gt consolelog clone ref upon mounting prints clone ref original ref implementation compose refs would look similar technique used js var element var originalref elementref originalref null amp amp typeof originalref function consolewarn string refs composable use callback ref instead ignoring ref originalref originalref null reactcloneelement element ref component gt whatever want writing higherorder components find composing refs lot write refcomposition code several times easy write utility helper thought could make sense build approaching cc spicyj sebmarkbage", "num": "4296", "d": "7/2015"}, {"title": "apps mount isomorphically rendered forms nt aware early input", "body": "consider following scenario run simple isomorphic app consists singleinput form form rendered server existing data sent browser along dehydrated state user edits form browser loads app slowly rehydrates state bootstraps form user hits save button point react found reason rerender form throw warning even though values form elements updated user app listening result app state sync form input values user resaved old data app state sees new data form values leave lose changes even though appears successfully saved decided solve problem putting ref every form input copying values app state probably make solution little dry sounds first thinking better solution might react include input values checksums technical reason isomorphic rendering already works", "num": "4293", "d": "7/2015"}, {"title": "regression etarget onchange ndefined", "body": "tried updating something changed releases making onchange synthetic event undefined", "num": "4288", "d": "7/2015"}, {"title": "guide document highlighting needs implemented create react renderer", "body": "announcement seems like one goal make easier create renderers different environments realize still beta love guide document talks interfaces need implement reading reactnative client dom renderer try get idea hard time wrapping head around everything navigating react reactnative source proven challenging", "num": "4286", "d": "7/2015"}, {"title": "error invariant violation addcomponentasrefto", "body": "code import react react import reactdom reactdom var mycomponent reactcreateclass render function return hello world var zoo reactcreateclass render function return giraffes name showname function previously var input thisrefsgiraffegetdomnode var input thisrefsgiraffe alert inputvalue var node documentgetelementbyid app reactdomrender node error msg anyone help", "num": "4281", "d": "7/2015"}, {"title": "use perf testutils", "body": "perf testutils nt publish npm package use libraries use directly ca nt find document mentioned", "num": "4279", "d": "7/2015"}, {"title": "meaning", "body": "", "num": "4277", "d": "7/2015"}, {"title": "onkeypress supported div", "body": "plain javascript div receive keyboard events see however tried react could set keyboard events see incorrectly configuring something", "num": "4274", "d": "7/2015"}, {"title": "elements know spread operator used", "body": "bug number memorized point keeps coming maintaining evergrowing whitelist infuriating baby step toward fixing bug think would nice know spread operator used element creation since primary way attributes could accidentally passed element could enforce whitelist elements using spread operator baby step toward eliminating whitelist altogether order though think need modify transform babel right want file bug issue mostly exploratory get idea would need involved effectively rfc spicyj sebmarkbage", "num": "4272", "d": "7/2015"}, {"title": "gettingstartedmd jsx watch nt work", "body": "cli command nt work windows digging found tried everything works fine doc problem miss something cli running windows node npm reacttools", "num": "4269", "d": "7/2015"}, {"title": "international symbols jsx", "body": "experimented international symbols inside react component failed simple example design behaviour javascript var helloworld reactcreateclass render function return \u7684\u306a\u3053\u3068\u306f \u0432\u0440\u0435\u043c\u044f thispropsdatetotimestring get despite jsfiddle works like charm tried os x sublime webstorm work like image", "num": "4267", "d": "7/2015"}, {"title": "documentation reactrender seems selfcontradict", "body": "correct misunderstood something documentation reactrender method says reactelement previously rendered container perform update mutate dom necessary later note reactrender replaces contents container node pass practice seems happen corresponds note", "num": "4265", "d": "7/2015"}, {"title": "testutil onmouseenter onmouseleave work", "body": "trying use testutils onmouseenter onmouseleave events like luck either simulates mouse events however found stackoverflow workaround use works also nt noticed open issue hence opening one already fix keep using workaround feel iffy using simulatenatives events opposed simulate works click events app", "num": "4264", "d": "7/2015"}, {"title": "react retain event listeners relevant elements unmounted", "body": "going make performance problem example events like retained element removed", "num": "4261", "d": "7/2015"}, {"body": "going merge known issue missing lot svg support see particularly comment explained nt added everything still nt want suck yes absolutely sorry", "d": "7/2015"}, {"body": "possibly namespacing issue reason say sounds intuitively reasonable may therefore tangentially related", "d": "7/2015"}, {"body": "yes thanks seems wrong namespace bug found fix last stable ca nt apply master create pr due removed rewrote completely seems pull request someone continue use support original stable fix could helpful fix last stable next add file object next property next property", "d": "7/2015"}, {"body": "moved repo dependency already supports nt think going backport nt foresee us releases", "d": "7/2015"}, {"body": "confirm reactdom js class example extends reactcomponent render return componentdidmount thissetstate", "d": "7/2015"}, {"body": "sounds like bug cc spicyj case expected behavior marking milestone assumption regression", "d": "7/2015"}, {"body": "yes seems wrong refs called component mounted unmounted", "d": "7/2015"}, {"body": "never mind actually right function instance different pass null old one component new one", "d": "7/2015"}, {"body": "spicyj whoa ok thanks looking", "d": "7/2015"}, {"body": "ca nt tell going without implementation details tab code suspect nt outright broken since many unit tests rely functionality usage example recommend", "d": "7/2015"}, {"body": "trying set online demo could nt find react amp reactdom main scripts directly linkable browsers", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "called solves problem conceptual child rendered instance body positioned like still needs access context also clear wormhole pattern completely different pattern wormholes parent needs pass information child usually level deep parent nt directly create instance component takes someone creates renders passes child component wants pass style whatever", "d": "7/2015"}, {"body": "rather suppose name", "d": "7/2015"}, {"body": "ok going look wonder none examples blog posts anything else mentioning pattern using made mention method", "d": "7/2015"}, {"body": "nt supported know nt actually exist myth", "d": "7/2015"}, {"body": "also nt shipped stable release nt mentioned docs yet", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "think looking lets specify single run within test documented", "d": "7/2015"}, {"body": "jimfb ah yeah run single test inside file jest still run files spins everything parallel nt sure wanted additionally run describe block file", "d": "7/2015"}, {"body": "sorry bad mean error looks wired invalid lefthand side assignment", "d": "7/2015"}, {"body": "yea result us changing testing infra little bit using determine apply certain transforms sanctioned testing methods set running eg similar running result transformed indeed invalid lefthand side assignment", "d": "7/2015"}, {"body": "oh also answer question running single work least npm gt think require anyway", "d": "7/2015"}, {"body": "duplicate fixed", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "problem due consumption party code alt probably want bring looks like pointing callsite something passing object keys children wo nt work already soon warning fired", "d": "7/2015"}, {"body": "zpao thanks wanted make sure react beta bugs think nt see warning sure", "d": "7/2015"}, {"body": "hmm warning next steps want confirm nt getting warning close assumption warning correctly printing warning", "d": "7/2015"}, {"body": "let close thanks", "d": "7/2015"}, {"body": "yes still goal lot work setup read beta blog post info though nt explicitly call reactnative think likely scenario point probably reactnative package reactmountlike implementation fact likely renderer package ship reactmount one upcoming goals spec renderer stuff give definitive answer think point actually changing reactmount reactdom might worth let loop sebmarkbage spicyj might context", "d": "7/2015"}, {"body": "okay cool thanks information think would cool see stuff reactmount could taken allow custom renderers bit manageable instead sharing similar code need investigate seen lot shared code reactmount react reactnative project care react components mounted memory custom components mixin implement etc", "d": "7/2015"}, {"body": "ca nt put text node inside checkbox node browsers change fly specifically pull text checkbox confusing react solve test case pull text input belongs going leave bug open warn case issue add warning checkbox contains markup", "d": "7/2015"}, {"body": "jimfb warning throw already emit warnings unless something broke nt allow throwdiscard", "d": "7/2015"}, {"body": "yeah nt see warning plunkr appears using react", "d": "7/2015"}, {"body": "weird", "d": "7/2015"}, {"body": "ca nt create instance class using constructor use element single element inserted dom several places need create instance class insertion point element elements instances class worth reading sebastian post motivation factory pattern particularly familiar scalajs rather using jsexport annotation assuming annotation might able create annotation reactcomponentexport automatically wraps output call createfactory exporting would basically get want short tried keep burden low possible calling single function createelement low know make looking something even lower friction like jsx scalajs guess would need implement transformationextension kind language since wasis best design decision know date nt actually bug react going go ahead close issue feel free continue discussion thread", "d": "7/2015"}, {"body": "fair enough thank detailed answer l start digging way", "d": "7/2015"}, {"body": "license specified packagejson mean actual license file", "d": "7/2015"}, {"body": "ah see great ideally would like license file build let check legal department referencing license name would sufficient", "d": "7/2015"}, {"body": "fwiw file header also shows bsd know dealing legal like though let us know concerns probably good idea ship license patents file regardless put list next release", "d": "7/2015"}, {"body": "awesome thank zpao", "d": "7/2015"}, {"body": "going add thing probably added reactdombuttonjs rather createelement said default behavior button believe submit defaulting button sounds like wrong behavior assuming ie finding next button type emitting event button case specifying default value explicitly would nt change behavior would think best practice always specify type button want fix think best could warn user nt specify type cc spicyj", "d": "7/2015"}, {"body": "yes html spec ie bug buttons default recommend create component behavior want use instead though agree spec little stupid nt really react place change", "d": "7/2015"}, {"body": "great thanks right nt mess spec inconsistent browser behavior pressing enter would trigger unrelated buttons chrome continue using patch", "d": "7/2015"}, {"body": "merged stable branch fix applied part code fix removed updated", "d": "7/2015"}, {"body": "oh yes build react manually really works", "d": "7/2015"}, {"body": "illustrate problem defensive would give commit made production workaround reacttappable basically user trying assign empty function syntheticevent put back pool call persist another pr time basically concurrent pr try different solutions exact problem", "d": "7/2015"}, {"body": "person made pr panic find code broke react preventdefault method tries call method simple check method noop null would great fix problem similar setstate handled unmounted component", "d": "7/2015"}, {"body": "nmm think react swallow error fail fast make sense preventdefault async callback default already applied react rather throw error opinion browser behavior dom events fail fast swallow bad usage preventdefault mean browser throw error simply effect like suggest nt like would rather change behavior react browser nt think much maybe least react could issue warning dev env", "d": "7/2015"}, {"body": "yeah think warning appropriate", "d": "7/2015"}, {"body": "warning would great", "d": "7/2015"}, {"body": "nodecache contains old node despite new dom element created afaik single node exists dom presumably node cache nt updated race condition setstate invocation event handler walking dom presumably cause though clear node cache date setstate completes sort batching spicyj", "d": "7/2015"}, {"body": "probably related possibly duplicate", "d": "7/2015"}, {"body": "think dupe", "d": "7/2015"}, {"body": "problem class somecomponent ca nt call thisrefsbaseplayermymethod methods binded baseplayer instance sould work fine called show solves assume something wrong classes set uphandled", "d": "7/2015"}, {"body": "fiddle agrees syranide", "d": "7/2015"}, {"body": "hum thanks cody using webpack babeljs transpiler maybe bug transpiled code babel", "d": "7/2015"}, {"body": "jpinho least problems", "d": "7/2015"}, {"body": "syranide sorry xd thanks help", "d": "7/2015"}, {"body": "reacttools deprecated babel compiles tried", "d": "7/2015"}, {"body": "ok read blog post babel case documentation defect babel mentioned anywhere docs guess change given time", "d": "7/2015"}, {"body": "update website complete documentation soon", "d": "7/2015"}, {"body": "run tests inside real different browsers", "d": "7/2015"}, {"body": "got rid see", "d": "7/2015"}, {"body": "yiminghe thx buddy wan na go ali reaction xd", "d": "7/2015"}, {"body": "would love see working react hot loader jlongster experience getting hmr running node want give go", "d": "7/2015"}, {"body": "would nice indeed see hot loader working blessed renderer would definitely make terminal dashboards development process easier", "d": "7/2015"}, {"body": "doable userland definitely awkward requires tree search find roots overselecting nodes check might handy expose roots way come tooling awkward cc sebmarkbage might suggest imperative wrapper around reactrender basically something tracks call render store reference target node call unmount really simple way could actually use similar pattern fb suspect sebmarkbage spicyj probably close suggest something", "d": "7/2015"}, {"body": "yea zpao said think rationale nt really good magic way trying expose api would broken flaky unnecessarily slow better solved environment specific way close zpao suggestion let revisit come clever idea suggest jimfb takes example upcoming blog post", "d": "7/2015"}, {"body": "sebmarkbage blog post want passing reference use case want exploration code blogpost blogpost already code talks reactcomponentrenderer note feedback latest draft let know probably good get ball moving blog post", "d": "7/2015"}, {"body": "thanks feedback stick solution proposed zpao however devs recognize use rendering wrapper instead using directly better prefer solution nt depend human factor suspect could lead serious memory leaks hard tackle remembering good old times angry would introduce kind dom marker root components eg special kind attribute attached root element mounts component could simply select root components located somewhere inside given container unmount manually however issue related legacy projects probably main focus cool proposed solution kudos ps sebmarkbage jimfb looking forward blogpost website going publish post", "d": "7/2015"}, {"body": "however devs recognize use rendering wrapper instead using reactrender directly better prefer solution nt depend human factor suspect could lead serious memory leaks hard tackle remembering good old times angry could always unset replace error", "d": "7/2015"}, {"body": "winterbe react blog post appear", "d": "7/2015"}, {"body": "mistake", "d": "7/2015"}, {"body": "sounds like much magic could always get key warning help forget", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "spicyj thanks good catch updated sucks special cased wish good way keep props without interfering user code", "d": "7/2015"}, {"body": "thanks yes would probably little magical guess could use higher order component instead runtime wrapper solve problem side without much magic", "d": "7/2015"}, {"body": "intentional validating props element creation time produces useful errors also closely matches behavior static type systems like flow best simply mark props optional also may introduce feature future called context give another supported way pass props parent like child like b", "d": "7/2015"}, {"body": "thought thanks spicyj", "d": "7/2015"}, {"body": "nt write react", "d": "7/2015"}, {"body": "best guess toplevel onmouseout nt fire removed node basically said sorry", "d": "7/2015"}, {"body": "petehunt works fine safari see bug safari well version firefox happens often", "d": "7/2015"}, {"body": "fyi happens without react well", "d": "7/2015"}, {"body": "well lovely time file chrome bug", "d": "7/2015"}, {"body": "spicyj ie perhaps actually weird spec thing", "d": "7/2015"}, {"body": "please use github issues bug reports react", "d": "7/2015"}, {"body": "looking way makes even sense", "d": "7/2015"}, {"body": "highondrive please close issue discussion stay hacker news", "d": "7/2015"}, {"body": "make issue tracker public discussion place", "d": "7/2015"}, {"body": "well question extremely vague believe issue safari need add elements onclick work", "d": "7/2015"}, {"body": "browniefed thank much works", "d": "7/2015"}, {"body": "work better released", "d": "7/2015"}, {"body": "problem changing runtime react lot initialization require time based value react starts thinking dev mode initialization reactelement prop mutation tracking warning messages switch prod mode leaves us great state dev code gets skipped since setup things still running eg use best thing change environment variables run time generally think good rule thumb general especially true react node fine recommended way run production app", "d": "7/2015"}, {"body": "ah see thanks reason setting nodeenv startup trying set environment variables crossplatform way work windows afaik anyway problem thanks", "d": "7/2015"}, {"body": "ah well long set nodeenv first require react think ok", "d": "7/2015"}, {"body": "moving transition active class seems work really sure details others issue see docs actually example result nt think really anything simply adding removing classes dom node might one browser quirks", "d": "7/2015"}, {"body": "solution would say updates events lifecycle methods automatically batched react", "d": "7/2015"}, {"body": "nasty bug fixed master already", "d": "7/2015"}, {"body": "thanks cody closing per", "d": "7/2015"}, {"body": "react devdependency nt installing normally", "d": "7/2015"}, {"body": "explain installed react pretty much way happening unless ed react linked wrong folder root would reacttools", "d": "7/2015"}, {"body": "followed readme cloned repo nodemodules directory followed installation instructions thu jul pm paul shannessy notifications githubcom wrote explain installed react pretty much way happening unless npm linked react linked wrong folder root would reacttools reply email directly view github", "d": "7/2015"}, {"body": "nt know read nt say readmes talking want beta unless working patch react cloning building talking nt using custom rules linting code", "d": "7/2015"}, {"body": "oh made big assumption thanks pointing right direction jul pm paul shannessy notifications githubcom wrote nt know read nt say readmes talking react npm install react react want beta unless working patch react cloning building talking eslintpluginreactinternal nt using custom rules linting code reply email directly view github", "d": "7/2015"}, {"body": "zpao trying submit pr going fail misread reply", "d": "7/2015"}, {"body": "trying submit pr clone repo separate folder follow instructions readme building probably never clone repo nodemodules folder", "d": "7/2015"}, {"body": "gfogle nt fail submitting pr meant nobody building copy react unless submitting pr expert", "d": "7/2015"}, {"body": "readme explicitly say use beta version every open source project npm installable might build jul pm paul shannessy notifications githubcom wrote gfogle npm install nt fail youre submitting pr meant nobody building copy react unless submitting pr expert reply email directly view github", "d": "7/2015"}, {"body": "support npm beta blog post explains install npm final release browser build releases", "d": "7/2015"}, {"body": "still seems fail oob reactinternal module kill dep kosher recheckout package file also seems break guess expected wo reactinternal", "d": "7/2015"}, {"body": "npm gt required dep syntax introduced make sure documented", "d": "7/2015"}, {"body": "please reserve github issues bug reports feature requests react", "d": "7/2015"}, {"body": "trying keep github focused issues react keep usage related questions stack overflow may also luck slack channel irc", "d": "7/2015"}, {"body": "asked think information belongs react webpage webpack deeply integrated react ecosystem weird tips react download page", "d": "7/2015"}, {"body": "asked specific question config use react webpack fwiw also nt talk using browserify jspm requirejs arguing documentation fact think would great section things asked best answer question right really ask people find people expertise", "d": "7/2015"}, {"body": "expected expertise since react built webpack anyone tried use way talking would facebook", "d": "7/2015"}, {"body": "facebook uses custom packager believe use webpack internally", "d": "7/2015"}, {"body": "weird thought last time looked sources looked like clearly webpack build look nt seem sorry got confused", "d": "7/2015"}, {"body": "react nt built webpack ever though pr one point nt actually use webpack fb though instagram understand think would experts actually nt tried trying genuinely think better luck asking elsewhere fwiw even expert would probably pointed elsewhere anyway maybe short answer really trying use github bug reports support apologize came harshly trying active pushing certain types discussions better place", "d": "7/2015"}, {"body": "seen lot react warnings errors nt specify component context warnings errors contextualized would huge win", "d": "7/2015"}, {"body": "best include context feel free file bugs others unclear", "d": "7/2015"}, {"body": "react supply buildreactwithaddonsjs run indexhtml example transitions", "d": "7/2015"}, {"body": "node presence implied seem like react could add without violating spec browser might cute way get around fact browsers add elements save engineers little headacheconfusion", "d": "7/2015"}, {"body": "jimfb problem browsers add dom though currently allow omitting lead invariant violations cases seems unavoidable seems like really bad idea continue react could fill let browser fine though sure realistic", "d": "7/2015"}, {"body": "well part spec welldefined means could fill saying would easy interesting idea especially since likely move away markup initial render use createelement instead could perfect time add logic", "d": "7/2015"}, {"body": "jimfb sure solvable practice though also consider following html html html last one generate especially consider interms dynamically generated say transitioning example", "d": "7/2015"}, {"body": "nt think worth complexity already nt allow optional end tags jsx handful optional start tags really nt seem worth supporting especially since bunch additional tracking prod", "d": "7/2015"}, {"body": "zpao adding would complete list far know", "d": "7/2015"}, {"body": "add tbody colgroup implicitly without lot extra work think would nice nt care much cases since think invalid omitted", "d": "7/2015"}, {"body": "joshdmiller clear validatedomnesting warns cases currently problematic react nt tbody example run problems reconciliation", "d": "7/2015"}, {"body": "spicyj ok another example html html html consider transition gets implicit example another needs added inside example needs added outside certainly done assume becomes forced always preprocess children rendering adds additional cost avoided personally curious meaningful really html makes sense becomes tedious repeat code react almost exclusively work components loops unlikely ever burden", "d": "7/2015"}, {"body": "spicyj thanks clarification helpful case warnings actually neither rendering serverside app uses fairly truncated component thrown produces errors like following however following passes validator rendered correctly tag omitted test far encountering warnings ignoring aware problems cause react world", "d": "7/2015"}, {"body": "try update tag react expect find child confused find tag better write explicitly", "d": "7/2015"}, {"body": "joshdmiller also running react clientside full page rendering discouraged common extensions code page add elements body page thereby breaking reconciliation", "d": "7/2015"}, {"body": "spicy gotcha case updateable components drawn within id problem nt occur direct parent always unless mistaken react internals however definitely explains necessity warning jimfb good tip server renders html static markup inclusive renders isomorphic components client ever update one div", "d": "7/2015"}, {"body": "could create simple example demonstrates issue would helpful helping us investigate", "d": "7/2015"}, {"body": "would best answer one spicyj graue", "d": "7/2015"}, {"body": "seems like valid bug report thanks drabinowitz test case rad may able look unfortunately", "d": "7/2015"}, {"body": "worries let know need info react beta btw sure matters", "d": "7/2015"}, {"body": "think already logic disable buttons doable", "d": "7/2015"}, {"body": "would great could get opinions react devs block safe us add catch block dev build order rendering exceptions eaten", "d": "7/2015"}, {"body": "regarding number see etc catch block nt want swallow exception exceptions gooduseful debugging regarding number would nt recommend changing source code would difficult predict ramifications changes would much better provide us test case demonstrates issue fix test internally unable reproduce able provide us simple testcaseexample happy reopen issue investigate", "d": "7/2015"}, {"body": "hmm surprisingly nt think come sure want support getterssetters mixins would nt terribly hard would probably slower use getownpropertydescriptor could guard dev warn though opinions sebmarkbage spicyj", "d": "7/2015"}, {"body": "kinda surprised nt come nonenumerable properties might want iterate", "d": "7/2015"}, {"body": "nonenumerable come mixin system flawed one way personally think coming whole new mixin system works class would much better leverage upgrading react old class system support reason nt like change would cause people upgrade work ensure nt break code seems like adding new class system would better since allows people optionally opt new better system", "d": "7/2015"}, {"body": "jastanton others curious use cases getters mixins mixins using property descriptors keys values generally better approach also requested reactmixin assumed came strange implementation thirdparty mixin", "d": "7/2015"}, {"body": "ca nt delay componentdidmount executed immediately render avoid initial render call components mounted dom sounds like usage question rather issue react codebase going close issue take bugtracking radar would recommend asking stackoverflow discussreactjsorg", "d": "7/2015"}, {"body": "thanks ask possible solution wo nt work record want delay whole render slowest part want original dom intact done looking source code could inject modify reactreconciletransaction delay notifyall destructor nexttick sure influence parts rendering new root component seems", "d": "7/2015"}, {"body": "might consider inserting markup allow markup insert markup second render delayed fairly fast", "d": "7/2015"}, {"body": "known issue dom css model preferred solution always render node already attached document however depending scenario legit use case want create dom tree ahead time later add view could nt automatically detect something gets attached dom could nt make solid guarantees firing guess reason disallow use case guarantee call would dom hooks framework around react hooks might viable example web components hook also interesting want actually generate nodes ahead time eg could generate html string apply later aleskafka could elaborate use case rendering existing document immediately another related scenario considered temporarily adding node document measurement ripping back example would allow measure subtree assuming css nt rely position document generating parent wrapperposition know size children would cause react temporarily insert tree calculate layout fire componentdidmount callbacks etc rip back would something like interesting use case jimfb going reopen question use react pointing timing issues ca nt solved way", "d": "7/2015"}, {"body": "sebmarkbage web components hook could inject webcomponent markup setup callback use trigger", "d": "7/2015"}, {"body": "sebmarkbage still pretty much work progress elaborate use case note applications serverbound want use server frameworks solve nonjavascript rendering well reason following plugin model javascript detected responses server pretty lightweight follows full markup rendered plugin loader queries elements dataplugin handles loading plugins calling eg plugin basically react component renders provided unique variable far good happens main document heavy rendered components sidebar etc want use ajax render element happens like http request parse response dom fragment resolve plugins unload plugins replace rendering takes time want done separate document mount right good reasons better ux replaced immediately document would blank element usually equals whole page content always rendering next request invoked throw away mounted elements confuse user framework around react hooks might viable yes hooks synchronously parse dom load plugins render react components componentdidmount happens mount element looking reactmountbatchedmountcomponentintonode transaction would called nexttick would solve everything follows load plugins render components mount element trigger componentdidmount finish dom ops handling componentdidmount sometimes take time would nt bad thing split one synchronous block two temporarily adding node document measurement ripping back could work trickier deferred transaction might elements id accurate detecting position element etc jimfb rendertostring component mount dom render render whole component tree somehow reuse markup creates components objects", "d": "7/2015"}, {"body": "aleskafka latter attempts reuse markup creates backing component instances", "d": "7/2015"}, {"body": "sebmarkbage fyi use modifing reactreconciletransaction achieve kind behaviour result module code like javascript import callbackqueue reactlibcallbackqueue import reactreconciletransaction reactlibreactreconciletransaction var defer export default function reactatomic fn defer fn deferforeach function reactmountready reactmountreadynotifyall callbackqueuerelease reactmountready defer undefined reactreconciletransactionprototypedestructor function defer deferpush thisreactmountready callbackqueuerelease thisreactmountready thisreactmountready null reactreconciletransactionprototypegettransactionwrappers close function defer amp amp thisreactmountreadynotifyall probably percent compatible original assume destructed transaction closed seems sideeffects works like charm call executes code executing code provided function", "d": "7/2015"}, {"body": "yea nt special case script content runs escaping code everything else strongly recommend using nt think plans change escaping behavior", "d": "7/2015"}, {"body": "recommended perhaps officially react team use babel compile correctly", "d": "7/2015"}, {"body": "read deprecating jstransform reacttools jstransform reacttools", "d": "7/2015"}, {"body": "oh works using meteorsupported version react uses babel", "d": "7/2015"}, {"body": "brigand official recommendation use babel specified thanks", "d": "7/2015"}, {"body": "primary issue code trying mutate directly ajax callback function want move call function call setstate within callback pass example usage recommend reading updating state section tutorial question rather bug react use github issues track bugs react going close issue tracking purposes feel free ask questions like stackoverflow discussreactjsorg", "d": "7/2015"}, {"body": "jimfb try something like", "d": "7/2015"}, {"body": "ideally stack overflow discussreactjsorg better architecture questions highlevel discussion", "d": "7/2015"}, {"body": "possible workaround presumably", "d": "7/2015"}, {"body": "confirmed reasonable workaround", "d": "7/2015"}, {"body": "going close point tracking discussion svg", "d": "7/2015"}, {"body": "better using article nt really explain said use anyway supported ifwhen switch allowing arbitrary props dom elements nt really want explicitly support something removed spec years ago wo nt add supported attributes list right", "d": "7/2015"}, {"body": "fixed beta currenttarget eventnativeeventtarget work", "d": "7/2015"}, {"body": "issues edge aware nt know done extensive testing cc spicyj sebmarkbage", "d": "7/2015"}, {"body": "also nt know incompatibilities version nt think currently workarounds edge", "d": "7/2015"}, {"body": "also nt know incompatibilities version nt think currently workarounds edge music ears fellas let know failing test runs next week rtm arrives july point contact address issues arise", "d": "7/2015"}, {"body": "great thanks csuwildcat going close issue since known bugs time sure ping discover anything", "d": "7/2015"}, {"body": "true writing virtual dom markup identical html developer need aware dom api property javascript reserved keywords fact developer trying represent dom structure described using htmlxml like markup", "d": "7/2015"}, {"body": "issue already raised declined many times", "d": "7/2015"}, {"body": "look pages issues found issue discussing problem latter issue give arguments support use attribute whats name original discussion thread", "d": "7/2015"}, {"body": "found already years deep commitment backing sorry", "d": "7/2015"}, {"body": "copying quora answer certainly could done way around argued transforms convert using names would nearly seamless babel includes one sticking couple reasons first tend look html properties like possible opposed attributes like attributes always stringtyped properties javascript object value gives flexibility circumstances one example property arguably better fit data model react nt support right certainly could given react behaves like html property name makes sense keep name another reason forwardthinking future idiomatic react may use object destructuring pick apart reactfuture repo shows one example could work even modern browsers would nt work keywords ca nt appear standalone identifiers even though appear property names third thinking jsx primary advantage symmetry matching closing tags make code easier read direct resemblance html xml convenient copypaste html directly minor differences selfclosing tags example make losing battle html jsx converter help anyway finally translate html idiomatic react code fair amount work usually involved breaking markup components make sense changing small part anyway", "d": "7/2015"}, {"body": "thank spicyj", "d": "7/2015"}, {"body": "oh well see get right approach", "d": "7/2015"}, {"body": "shows available values using fine", "d": "7/2015"}, {"body": "cody thanks", "d": "7/2015"}, {"body": "please close happy answer found bug", "d": "7/2015"}, {"body": "probably want pagex clientx want relative another element use getboundingclientrect element work well across browsers", "d": "7/2015"}, {"body": "disagree people know strip proptypes production code would cause issues unless verification", "d": "7/2015"}, {"body": "could latter suggestion less forcing type checking whitelisting property names", "d": "7/2015"}, {"body": "gajus place becomes untenable components allow full breadth reactsupported attributes using spread operator instance components allow consumer set etc props simply apply rendered element reasonable add every possible react attribute", "d": "7/2015"}, {"body": "reasonable add every possible react attribute proptypes completely reasonable youthe consumer would need object defines possible attribute names including variations", "d": "7/2015"}, {"body": "personally agree exist one way another maplike structure really support fixed set properties unexpected likely mistake please give warning perhaps could even happen automatically future part flow", "d": "7/2015"}, {"body": "syranide thought plans implement immutable map accept one", "d": "7/2015"}, {"body": "agree exist maybe optin percomponent least let optout", "d": "7/2015"}, {"body": "optinout would smooth concern raised earlier highly desired", "d": "7/2015"}, {"body": "yaycmyk meant nt treat like mapstructure like fixed set properties specified component dynamically indexed hence property provided nt list technically error would never read used anything", "d": "7/2015"}, {"body": "syranide nt common though define wrapper components seamlessly pass props wrapped child via spread optout would solve issue redefine proptypes layer would tedious", "d": "7/2015"}, {"body": "yaycmyk wrapping case could", "d": "7/2015"}, {"body": "interesting discussion messed around related idea awhile back probably simple form wonder standard practiceconvention opposed baked library", "d": "7/2015"}, {"body": "could accomplish react idea filename createclass method nt think something react worry something userland implement instance babelplugin", "d": "7/2015"}, {"body": "way knows variable assigned though filed jsx jsx infer class", "d": "7/2015"}, {"body": "yes would transformer jsx transformer deprecated favor babel likely candidate would plugin babel try asking babel team implement", "d": "7/2015"}, {"body": "yea killing reacttools jsxtransformer requests like end babel whatever transformer happen use", "d": "7/2015"}, {"body": "think would apropriate place put", "d": "7/2015"}, {"body": "thank read reacttools jsxtransformer deprecated favour babel plugins", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "spicyj must configurable eslintrc file help commadangle", "d": "7/2015"}, {"body": "kikilesinge want require commas separate lines though", "d": "7/2015"}, {"body": "spicyj think updating eslint solve eslinteslint", "d": "7/2015"}, {"body": "spicyj perhaps also shows inconsistency formatting haha", "d": "7/2015"}, {"body": "bgw thanks good find dcousens nt think goal lint rule make possible add another item list without changing previously last line example holds true object trailing comma nt hold true array way formatted holds true regardless whether trailing comma added since know array ever one element think formatting like clearest instead adding another level indentation", "d": "7/2015"}, {"body": "spicyj fair enough however spirit discussion argue since know array ever one element think formatting like clearest instead adding another level indentation special case something oddity anyway ever intend use element forced use data structure implicitly used collections vs guess depends much want separate syntax underlying type system approach solves making enforced elements last element therefore consistent underlying types bike shed", "d": "7/2015"}, {"body": "particular case unit test function takes list operations nt require trailing commas nt want one either use discussing", "d": "7/2015"}, {"body": "entirety code method called", "d": "7/2015"}, {"body": "think need manually bind instance methods using put thistick thistickbind constructor please let know wrong", "d": "7/2015"}, {"body": "right worked call method using thank ghost", "d": "7/2015"}, {"body": "lmovingon actually using code block componentdidmonut method put inside constructor nt need compoentdidmonut", "d": "7/2015"}, {"body": "lmovingon read autobinding noautobinding autobinding also use way arrow functions property initializers", "d": "7/2015"}, {"body": "kikilesinge thanks", "d": "7/2015"}, {"body": "actually using code block componentdidmonut method put inside constructor nt need compoentdidmonut one difference constructor componentdidmount constructor gets called server rendering case lmovingon code uses setinterval interval gets set server possible many times server become busy therefore advice use componentdidmount", "d": "7/2015"}, {"body": "intention used result jsx child guaranteed single child reason upgrade safety jsx would change behavior future", "d": "7/2015"}, {"body": "sebmarkbage nt intent map return data structure semantically equivalent specifically opaque data structure otherwise nt return value map completely useless use contract return type map", "d": "7/2015"}, {"body": "jsx produces children property downcast warns wrong type nt promise return anything compatible however always compatible child div example compatible", "d": "7/2015"}, {"body": "well documentation states return child children throws otherwise since signature per comment means least documentation wrong since function think downcast behavior unnecessarily complicated incorrectly documented least fix documentation preferred solution fix implementation regardless solution think valid bug", "d": "7/2015"}, {"body": "point whole thing unnecessarily complicated since purely perf optimization upgrade path perf optimization becomes unnecessary however people likely relying element anyway since nt enforce static type system think whole utility probably unnecessary", "d": "7/2015"}, {"body": "sometimes want component dom lifecycle logic write enforce onechildness asap otherwise assume error going cryptic consumer put several elements children container component misusing meant different use case", "d": "7/2015"}, {"body": "sebmarkbage ok well made points still feel like sort action item required deprecate fix document gaearon understanding correctly using helper example", "d": "7/2015"}, {"body": "tinganho lifecycle methods ones react calls call methods response event code issue tracker issues react ask stackoverflow get detailed answers", "d": "7/2015"}, {"body": "problem need define static methods recommended approach", "d": "7/2015"}, {"body": "tinganho entirely sure mean need define static methods lifecycle hooks defined class invoked instances elaborate concern also brigand correct use github issues track bugs react rather support issues going close issue order take bugtracking radar feel free continue discussion future stackoverflow better place posts like", "d": "7/2015"}, {"body": "jimfb want define custom life cycle hook invoke fetching data mounting right ca nt instance method want mounted see define static method pass data props component define instance method ca nt access need instantiate guess instantiates way hooking render process define hook somehow", "d": "7/2015"}, {"body": "componentwillmount instance method gets called mounting component", "d": "7/2015"}, {"body": "nt see nothing wrong either maybe surrounding jsx another fix problem code produces values use place handle one value example return value render get error problem please explain mean", "d": "7/2015"}, {"body": "code return root method component yes needs additional container element issues open track ways rendering without single root node yet", "d": "7/2015"}, {"body": "love people say would thanks cody amp yaycmyk issue follow interested return case fwiw error seen reacttools babel say adjacent jsx elements nt allowed must wrapped closing since seems solved reopen react issue somewhere future stack overflow excellent place support questions though understand suspecting bug case", "d": "7/2015"}, {"body": "thanks zpao yaycmyk cody combo understanding method operated template vague error message returned babel keep great work ca nt wait", "d": "7/2015"}, {"body": "davidhariri nt hesitate enhance babel error message clear enough help others", "d": "7/2015"}, {"body": "yetior void element nt need one", "d": "7/2015"}, {"body": "fixed closing tag gets rendered least rendertostring browsers mind nt put closing tag dom think firefox", "d": "7/2015"}, {"body": "cody correct", "d": "7/2015"}, {"body": "please ask questions stack overflow issue tracker supposed bugs issues react", "d": "7/2015"}, {"body": "store result reactrender outside react", "d": "7/2015"}, {"body": "ideally stack overflow discussreactjsorg better architecture questions highlevel discussion", "d": "7/2015"}, {"body": "nt think length content problem likely content expect either actually children browser moves stuff around fix illegal html hard say without fiddle", "d": "7/2015"}, {"body": "leozdgao agree cody seems likely issue tried reproduce based info provided could nt find bug provide fiddle investigate", "d": "7/2015"}, {"body": "cody jimfb thanks think figured smile request content asynchronously children content content empty string use solve issue time content ready", "d": "7/2015"}, {"body": "function differs intended take valid object return valid object treated opaque datastructure code never rely underlying typeimplementation working children always use one helpers trying get array children use following code treat black box never looking inside going close issue implementation correctly returns valid object details", "d": "7/2015"}, {"body": "explain error threw ok return see return result error threw actually met problem project going access directly return result error occurs confused sorry trouble", "d": "7/2015"}, {"body": "thispropschildren contains one child render throw error reactchildrenonly throw error", "d": "7/2015"}, {"body": "ok return thispropschildren see return result reactchildrenmap error threw yes weird special thing helpers deal case happens work returning single child multiple returning would thrown render must return valid reactelement single child one element return value reactchildrenmap", "d": "7/2015"}, {"body": "error threw curious one child seems handle case", "d": "7/2015"}, {"body": "calling return value incompatible error admittedly nonobvious misleading expects receive best handle different types may single element array elements deprecated object keys specifically failing last case due return type map", "d": "7/2015"}, {"body": "ok thank", "d": "7/2015"}, {"body": "provide code nt working", "d": "7/2015"}, {"body": "sorry realized made mistake case working expected thanks quick response", "d": "7/2015"}, {"body": "cc mridgway", "d": "7/2015"}, {"body": "especially felt small deployments standard nodejs projects blocks event loop time adds latency active requests request rendering computing checksum request b c received data database blocked completes request gets extra latency request b gets request c gets perhaps architectural problem extension rendertostring synchronous making situation worse avoided failing hard good add method telling react assume checksum invalid preserve current behavior eg priorities send useful html development time throwing initial dom", "d": "7/2015"}, {"body": "failing harder dev mode fail check showstopper slap wrist curious significant impact checksum relative whether suggestion use much simpler algorithm could make insignificant dropping checksum entirely means way detect failed resume sporadic inconsistency start spewing unintelligible errors user starts interacting confusing debug personally still think immediate traversal dom render right way go would provide necessary safety net immediate errors dom deviates without checksum production", "d": "7/2015"}, {"body": "currently nt possible inline styles suggest feature detect runtime browser use right value", "d": "7/2015"}, {"body": "going list possibly related chromium bugs similar symptoms full list open svg chromium bugs", "d": "7/2015"}, {"body": "nt sound like react bug going close issue find caused react let us know revisit", "d": "7/2015"}, {"body": "agreed thanks", "d": "7/2015"}, {"body": "log see output missing something going wrong", "d": "7/2015"}, {"body": "checked unfortunately exist add consolelog checkboxwithlabeltestjs consolelog react consolelog react react consolelog testutils reactaddonstestutils consolelog testutils testutils dump test export nodepathusrlocallibnodemodules nodemodules webmodules amp amp node binjestjs notice node iojs merging august jest work iojs merger complete legacy node still available npm branch github using jest cli waiting test fail testscheckboxwithlabeltestjs react react rendertostaticmarkup function rendertostaticmarkup ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function component function reactcomponent ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function initializetouchevents function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function withcontext function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function rendertostring function rendertostring ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function constructandrendercomponent function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function createmixin function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function proptypes array function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object bool function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object func function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object number function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object object function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object string function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object arrayof function createarrayoftypechecker ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function element function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object instanceof function createinstancetypechecker ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function node function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isrequired object objectof function createobjectoftypechecker ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function oneof function createenumtypechecker ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function oneoftype function createuniontypechecker ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function shape function createshapetypechecker ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function finddomnode function finddomnode ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function version render function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function displayname reactrender unmountcomponentatnode function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function createfactory function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dom canvas function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function track function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function title function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function ins function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function fieldset function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function iframe function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function details function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function meter function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function hr function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function section function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dfn function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function textarea function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function small function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function bdi function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function tr function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function embed function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function optgroup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function wbr function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function path function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function ul function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function meta function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function param function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function html function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function defs function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function footer function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function stop function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function rp function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function map function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dd function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function q function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function select function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function picture function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function tspan function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function bdo function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function caption function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function pre function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function b function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function datalist function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function clippath function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dialog function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function legend function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function style function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function sub function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function br function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function colgroup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function img function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function figcaption function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dl function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function em function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function col function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function tfoot function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function noscript function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function samp function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function nav function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function summary function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function keygen function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function address function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function sup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function polygon function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function del function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function radialgradient function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function progress function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function lineargradient function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function aside function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function svg function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dt function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function figure function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function form function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function strong function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function table function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function rect function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function tbody function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function line function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function pattern function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function link function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function u function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function menuitem function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function base function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mark function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function var function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function source function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function p function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function menu function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function time function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function g function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function output function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function button function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function head function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function text function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function kbd function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function span function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function script function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function video function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function header function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function rt function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function thead function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function big function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function label function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function main function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function area function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function body function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function audio function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function option function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function article function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function li function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function cite function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mask function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function abbr function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function polyline function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function code function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function ruby function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function th function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function data function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function blockquote function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function circle function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function div function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function ellipse function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function object function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function td function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function input function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function ol function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function cloneelement function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function addons csstransitiongroup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function displayname reactcsstransitiongroup proptypes object getdefaultprops object defaultprops linkedstatemixin linkstate object purerendermixin shouldcomponentupdate object transitiongroup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function displayname reacttransitiongroup proptypes object getdefaultprops object defaultprops object batchedupdates function batchedupdates ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function classset function cx ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function clonewithprops function clonewithprops ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function createfragment function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function update function update ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function perf start object stop object getlastmeasurements object printexclusive object printinclusive object getmeasurementssummarymap object printwasted object printdom object measure object testutils iscompositecomponentelement object simulate object isdomcomponent object createrenderer object findrendereddomcomponentwithclass object iselementoftype object iscompositecomponentwithtype object findrenderedcomponentwithtype object simulatenativeeventonnode object iscompositecomponentelementwithtype object simulatenativeeventondomcomponent object isdomcomponentelement object iselement object simulatenative object mockcomponent object findallinrenderedtree object iscompositecomponent object scryrendereddomcomponentswithclass object scryrendereddomcomponentswithtag object nativetouchdata object getrenderedchildofcompositecomponent object renderintodocument object findrendereddomcomponentwithtag object scryrenderedcomponentswithtype object children map function mapchildren ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function foreach function foreachchildren ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function count function countchildren ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function function onlychild ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function constructandrendercomponentbyid function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function foobar function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function createelement function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isvalidelement function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function createclass function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function testutils reactaddonstestutils testutils iscompositecomponentelement function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function simulate error function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function beforeinput function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseout function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragenter function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function change function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function drag function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragleave function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function select function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function compositionupdate function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchmove function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchend function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function blur function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function copy function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function keydown function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function wheel function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseover function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function paste function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function submit function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function click function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mousedown function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragstart function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function reset function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function cut function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function focus function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function contextmenu function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function keyup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchcancel function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function compositionend function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragexit function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function doubleclick function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragover function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseleave function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function compositionstart function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function keypress function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseenter function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function drop function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragend function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function scroll function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function load function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mousemove function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function input function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchstart function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isdomcomponent function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function createrenderer function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function findrendereddomcomponentwithclass function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function iselementoftype function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function iscompositecomponentwithtype function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function findrenderedcomponentwithtype function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function simulatenativeeventonnode function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function iscompositecomponentelementwithtype function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function simulatenativeeventondomcomponent function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function isdomcomponentelement function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function iselement function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function simulatenative error function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseout function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragenter function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function drag function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragleave function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function compositionupdate function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchmove function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function selectionchange function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function textinput function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchend function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function blur function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function copy function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function keydown function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function wheel function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mouseover function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function paste function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function submit function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function click function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mousedown function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragstart function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function reset function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function cut function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function focus function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function contextmenu function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function compositionstart function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function keyup function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function compositionend function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragexit function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function doubleclick function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragover function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchcancel function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function change function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function keypress function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function drop function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function dragend function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function scroll function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function load function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mousemove function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function input function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function touchstart function ismockfunction true mock object mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function mockcomponent function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function findallinrenderedtree function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function iscompositecomponent function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function scryrendereddomcomponentswithclass function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function scryrendereddomcomponentswithtag function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function nativetouchdata function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function getrenderedchildofcompositecomponent function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function renderintodocument function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function findrendereddomcomponentwithtag function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function scryrenderedcomponentswithtype function ismockfunction true mock calls instances mockclear function mockreturnvalueonce function mockreturnvalue function mockimpl function mockimplementation function mockreturnthis function getmockimplementation function checkboxwithlabel changes text click typeerror read property textcontent undefined spec jasmineblockexecute jasminequeuenext nullontimeout timerlistontimeout ontimeout test failed tests passed total run time", "d": "7/2015"}, {"body": "based react maybe module getting mocked make sure set rootdir config play around jest options confusing definitely bitten bad configs nt seem like react issue jest related going close still help bit", "d": "7/2015"}, {"body": "published tag yet", "d": "7/2015"}, {"body": "thing think react turned babel days nt think available", "d": "7/2015"}, {"body": "nt use decorators maybe spec stabalized way standardization", "d": "7/2015"}, {"body": "case nt default behavior component nt compatible purerender appears updating confusing especially confusing new users might use eg render along anyone using mutable objects", "d": "7/2015"}, {"body": "brigand fair initial interpretation pure render default confusing working given props", "d": "7/2015"}, {"body": "got little bit faster pure render mixin still think slow use case averaging around", "d": "7/2015"}, {"body": "ok pure render mixin worked first evaluation slow averaging ms", "d": "7/2015"}, {"body": "tinganho sharing pure render mixin might useful others though", "d": "7/2015"}, {"body": "add instance property array nothing special", "d": "7/2015"}, {"body": "issues development react looking help stackoverflow good place ask suggest including component get error code responsible data possible bug firefox version causing react reactrouter dependencies code behave incorrectly need narrow anything done best luck sounds like tough issue track", "d": "7/2015"}, {"body": "thanks reply post try narrow event ends react bug doubt considering specific version ff cheers", "d": "7/2015"}, {"body": "closing keep discussion place", "d": "7/2015"}, {"body": "example would nt want call rerendered otherwise causes update next batch cause render setstate callback componentdidmount componentdidupdate causing side effects dom timers ajax etc feature request feel like linkedstatemixin finite purpose trading flexibility terse twoway binding need flexibility nt use situation want different tradeoff usemake different tool say harm change nt see value", "d": "7/2015"}, {"body": "nt findrendereddomcomponentwithtag first argument supposed name react component tree defined myelement", "d": "7/2015"}, {"body": "niole oops typo code sample corrected", "d": "7/2015"}, {"body": "problem passed lowercase string converting uppercase hand nt hurt anyway guys think", "d": "7/2015"}, {"body": "old still open pull request", "d": "7/2015"}, {"body": "oh sweet", "d": "7/2015"}, {"body": "update realized accomplish task would really sugar top findallinrenderedtree fight simplicity sure added anymore", "d": "7/2015"}, {"body": "cc zpao spicyj", "d": "7/2015"}, {"body": "also please call", "d": "7/2015"}, {"body": "adding methods like days bunch issues use findallinrenderedtree like found", "d": "7/2015"}, {"body": "probably nt test minified code code depending identity least composite components would packaged together properly work anyway even name different copies function test would fail nt think anything us closing", "d": "7/2015"}, {"body": "zpao ok makes sense one interesting thing discovered looking source github method master branch works took content method master branch use project uses react works well live overriding current method workaround remove released perhaps patch fyi thanks quick response edit think problem entirely caused minification may caused class extensioninheritance although absolutely sure", "d": "7/2015"}, {"body": "seems like similar case mentioned", "d": "7/2015"}, {"body": "anyone idea fixed react fix", "d": "7/2015"}, {"body": "bump", "d": "7/2015"}, {"body": "take look uses specifically call something like simulating event similarly going need set firing event suspect solve problem future reference using testutilssimulate testscodebase entire class events working likely support question rather bug react support questions better addressed stackoverflow rather github issue try use github issues track bugs react tracking purposes going close bug since believe actually bug react take radar bugtracking perspective idea specifying value firing event nt solve problem feel free continue discussing thread stackoverflow", "d": "7/2015"}, {"body": "alright thanks try asap mind also update doc since telling something quite different", "d": "7/2015"}, {"body": "sure happy review pull request docs would great recommend try get working locally updating docs see working etc", "d": "7/2015"}, {"body": "yes course back cit", "d": "7/2015"}, {"body": "one idea render client twice", "d": "7/2015"}, {"body": "related basically cody said", "d": "7/2015"}, {"body": "would sufficient add router rendering serverside pass prop components need know client would set client component use avoid double render client netflix", "d": "7/2015"}, {"body": "would quickly get messy deep components need parent contexts would work though might make problem jury still", "d": "7/2015"}, {"body": "methods equivalent first one hiding component rendering entirely one course second dom tree triggers visibility fewer things render dom faster go usually stick first one never benchmarked also rely react diffs virtual dom renders easy client side terms conditions may apply", "d": "7/2015"}, {"body": "agree dmatteo first approach switching rendering different elements one hide show certain element", "d": "7/2015"}, {"body": "well course knew difference concentrate rendering performance first approach deal less dom seems trigger browser works second one cached dom dom manipulation seems trigger browser repaint stackoverflow question already discussion someone said ran benchmark css way think result may gon na change things got complicated", "d": "7/2015"}, {"body": "great question stack overflow discussreactjscom trying keep github issues actual bugs problems react general questions going close", "d": "7/2015"}, {"body": "closing got fix totally clear yet definitively avoid issue future see last notes comments", "d": "7/2015"}, {"body": "good catch amp thanks heads definitely call bug really need go tutorial make sure cohesive years ad hoc updating definitely showing age feedback especially somebody relatively new programming definitely appreciate", "d": "7/2015"}, {"body": "problem happy help definitely let know see anything else thanks great reactjs resources", "d": "7/2015"}, {"body": "opened pr minor change make bit mentioned little easier follow zpao making sure tutorial cohesive thoughts bringing actual tutorial subdirectory react project opposed separate repository even sure best way go least things would nt going sync look source code tutorial compare tutorial instructions react repo striking differences might catch people major drawback approach would clone entire react source want get tutorial actually nt think bad idea might even encourage people poke source code always good thing", "d": "7/2015"}, {"body": "yes please swallowed errors really annoying", "d": "7/2015"}, {"body": "tryfinally blocks work tryfinally block swallow exception see etc create simple example jsfiddle demonstrates issue react swallowing exceptions happy reopen investigate issue chance using promises", "d": "7/2015"}, {"body": "ca nt children browser tries fix moving react stumbles rerender dom changed normally get warning console maybe another problem", "d": "7/2015"}, {"body": "cody bet issue waltonseymour probably want html looks like", "d": "7/2015"}, {"body": "works thanks", "d": "7/2015"}, {"body": "react currently generate spans incompatible svg supply multiple text children need concatenate strings opposed", "d": "7/2015"}, {"body": "sounds like likely culprit feel free reopen", "d": "7/2015"}, {"body": "awesome thankyou try later wow totally misidentified cause wow think also totally misidentified cause still looking later please check hotfixchromestring branch isolated routine drawing horizontal lines firefox fine chromium choking string concatenations form suggested", "d": "7/2015"}, {"body": "okay cleared things happening cases running functions establish values within function line put transform reference assignment suspect right turned span cause svg wrong case able move assignment cases perform assignment function within loop need internal whole svg complex would happy hear thoughts best practice regard thanks clue spoton", "d": "7/2015"}, {"body": "another day development run chromium problems firefox still working fine minesweeper renders okay gameplay graphics behaviour unpredictable strange things chromium like revealing clicking mine turns every tile black repeatedly toggling flags rightclick causes tiles go transparent etc", "d": "7/2015"}, {"body": "reduce example something simple try help complex determine something going wrong react svg chrome could try reproducing identical dom behavior vanilla js see problem persists help narrow", "d": "7/2015"}, {"body": "nt understand reasoning compile coffeescript vanilla submit bug report less complex understand complex case especially errors thrown exceptions everything renders failing silently visually obvious way major clue though firefox experiencing problems whatsoever would seem combination react chrome problem fact intially renders correctly chrome another big clue case suggesting deltadiff computation postuserinteraction changes thrown dom react chrome interpretation changes", "d": "7/2015"}, {"body": "realise also last technically distinct issue one opened ticket relation involve svg appear chrome exclusive firefox think open different issue altogether", "d": "7/2015"}, {"body": "giving us app something goes wrong several layers deep nt really care language fact need look several components spread across several files bunch state interactions makes much difficult diagnose debug asking reduced test case nt spend ton time figuring real problem app code make happen single component bet nt happen nodes whole bunch minesweeper logic major clue though firefox experiencing problems whatsoever would seem combination react chrome problem said could try reproducing vanilla js reduced test case means nt write ton code show dom works chrome still nt work react could say react right could say found bug chrome svg implementation nontrivial chance right something happening react upsetting chrome ca nt prove right realise also last technically distinct issue one opened ticket think open different issue altogether fine reduced test case", "d": "7/2015"}, {"body": "cool cool thanks explanation looking work thanks nontrivial chance right something happening react upsetting chrome ca nt prove right guess responsibility mostly chrome found bug chrome svg implementation clearly something happening userinteractions state changes causing malfunctions working reduced test case may much reduction error requires complex minesweeper logic userinteraction order manifest", "d": "7/2015"}, {"body": "exacly first attempt rtc done lot necessity without knowing term situation hard reduce much bug involves userinteraction visual detail report thanks much kind explanation helpful pointers", "d": "7/2015"}, {"body": "anyone nt know start preferred webserver going really hard time making website using framework nt specify orthogonal framework agnostic web server configuration people use going close issue actionable comment nt specify start webserver nt see blocking point need assume minimum threshold prior knowledge actionable feedback could make getting started guide amenable new users reexamine issue", "d": "7/2015"}, {"body": "eh think pretty much add something docs ysihaoy sorry bad experience server piece compiling jsx files annoying well documented also nt apply browsers make bit better", "d": "7/2015"}, {"body": "dupe closing", "d": "7/2015"}, {"body": "would think would attached instance component thus making accessible within context would refer since prototype method pretty sure works sure someone experience jump correct wrong think might mixing scenario var mycomponent reactcreateclass statics foo bar getdefaultprops function return prop val mycomponentfoo outputs gt bar", "d": "7/2015"}, {"body": "getdefaultprops prototype method sure since cached per component type try", "d": "7/2015"}, {"body": "specific problem calling getdefaultprops lazily possible solution first instantiation component class aside static vs prototype confusion cleared es classes js class mycomponent mycomponentfoo bar mycomponentdefaultprops also function anymore something mycomponentfoo", "d": "7/2015"}, {"body": "examples use inbrowser transform run protocol security reasons examples run chrome osx throw simple web server load via details side note going stop building jsxtransformer favor using babelbrowser fine adding commentnote browser transformer explaining", "d": "7/2015"}, {"body": "nt update immediately need perform action state set pass callback second argument expected inside callback", "d": "7/2015"}, {"body": "andersekdahl correct set state queued going close since bug react core use github issues track core bugs said feel free continue discussion still running issue future usage questions like better addressed stackoverflow", "d": "7/2015"}, {"body": "thanks quick response added callback follows calls however output still blank although shows assignment perhaps assignment still taking place later possible use something return value function could use render ensure date updated perhaps checking variable updated within callback function nt id timing problem since part object worked rest nt strange behavior newbie question json loaded wo nt updated would better use prop instead state using setprops see crossposting jimfb thanks andersekdahl quick advice", "d": "7/2015"}, {"body": "reading variable data called suspect errors similar setprops deprecated use props usually better state component setting data needs state application parent component loading data prop usually ideal appear calling setstate otherwise performing new render first guess issue rerendering getting data", "d": "7/2015"}, {"body": "many thanks jimfb good catch typo however fixing error also simplified example wrote display problem another program tried huge variations trying figure getting error errors due typo fixed program weirdness shows corrected program working object works printing within would make look like data within getting set initially json loaded except fact leaf prints ok confused comment appear calling since called modified complete program typo fixed couple extra debugging lines html test referencing json object react state json test var contentbox reactcreateclass loadjsoncallback function still returned render consolelog shows consolelog loadjsonfromserver function ajax url thispropsurl datatype json cache false success function data thissecondkey works thissetstate data data thisloadjsoncallback consolelog still returned render bind error function xhr status err consoleerror thispropsurl status errtostring bind getinitialstate function return data componentdidmount function thisloadjsonfromserver render function var testvalue thisstatedatajunk return test thisstatedatasimple thissecondkey reactrender documentgetelementbyid content", "d": "7/2015"}, {"body": "confused comment loadjsoncallback appear calling setstate since loadjsoncallback called setstate yes point setstate already happened loadjsoncallback gets called getting callback set local variable last call setstate component rerender nothing told react component state changed setting local variable setstate callback really weird thing recommended call setstate within loadjsoncallback think force another rerender display data line occurs last call setstate going show render", "d": "7/2015"}, {"body": "jimfb thanks bearing finally figured going put words reason error messages occurring time getting called json object loaded yet yet keys error messages produced strange thing produce error message adding return values see called final time data reason react tutorial without created error would occurred time called initialize data structures example fail time everything works", "d": "7/2015"}, {"body": "concerned performance rerendering diffing might want look immutablejs makes possible skip rerendering components data nt changed", "d": "7/2015"}, {"body": "future might able something like options still discussion feel free let us know like better", "d": "7/2015"}, {"body": "going close since architectural question check issues consider discussing stack overflow discussion boards discussreactjscom", "d": "7/2015"}, {"body": "spicyj zpao assuming point aiming backwards compatibility", "d": "7/2015"}, {"body": "iirc meta charset tag doctype chosen older browsers already interpreted properly", "d": "7/2015"}, {"body": "oic ok sounds like reasonabledesirable thing us", "d": "7/2015"}, {"body": "ok create pull request", "d": "7/2015"}, {"body": "state part instance state maintained probably nt belong component live data store parent passed props could something little bit clever prop instead unmounting render null hidden something still involves moving state back parent", "d": "7/2015"}, {"body": "motivation able push pop components uinavigationcontrollerlike component would weird kind drawer open forms partially filled pop back form everything reset similarly uitabbarcontrollerlike component hiding components rather unmounting viable solution wo nt play nicely existing code relies mountingunmounting lifecycle", "d": "7/2015"}, {"body": "think make good suggestion think need mixin like render function check see hidden way component still instantiated even doesnt render anything", "d": "7/2015"}, {"body": "ca nt use csstransitiongroup pushpop animation", "d": "7/2015"}, {"body": "ccorcos render null hidden loose child component state need full control internal state always pull per", "d": "7/2015"}, {"body": "hmm want access internal state elsewhere want able remount component state trying make something similar react native far wrap rendered csstransitiongroup animate well problem state view lost push new view pop apparently ca nt keep instantiated component remount though working ideas", "d": "7/2015"}, {"body": "getset internal state save componentapplication use restore child component tree whenever want fully generalflexible solution requires little extra work", "d": "7/2015"}, {"body": "jimfb similar note reason nt called children components understand behaviour people implementing could forsee useful addition", "d": "7/2015"}, {"body": "yeah came way saving restoring state nice thing instantiated prop pushed navvc nt worry ever", "d": "7/2015"}, {"body": "dcousens nt know probably question zpao spicyj", "d": "7/2015"}, {"body": "duplicate tldr complicated might think something want eventually", "d": "7/2015"}, {"body": "thanks sorry dupe promise searched much could think first fri jul pm jim notifications githubcom wrote closed reply email directly view github", "d": "7/2015"}, {"body": "wanted override though think situation better react less opinionated leave implementor would pretty straightforward implement mixin", "d": "7/2015"}, {"body": "yeah strive implement general explicit solutions long nt introduce excessive burden developer single call want merge properties constitute excessive burden automatically merging styles particularly bad mycomponent creates wrapper div instance styles intended apply nested element instead wrapper going close since fairly certain something want feel free continue discussion thread", "d": "7/2015"}, {"body": "fixed use meantime", "d": "7/2015"}, {"body": "works exactly expect work native eg methods sets callback provided value reason work rather simple use methods autobound hence possible later change value inside methods eg via recap autobinding reactspecific able override bound functions normal javascript behavior", "d": "7/2015"}, {"body": "thx lot runs expected", "d": "7/2015"}, {"body": "react currently uses listener document almost events time component receives event already bubbled way document stopping stops synthetically bubbling react hierarchy related", "d": "7/2015"}, {"body": "got many thanks", "d": "7/2015"}, {"body": "well annoying", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "wording bit confusing short answer dom components use mostly js api opted use js properties welcome use components jsx compilers quote keys eg reacttools aware constraints tool choices", "d": "7/2015"}, {"body": "docs confusing leave issue open fix", "d": "7/2015"}, {"body": "found possible use eslinttester jest", "d": "7/2015"}, {"body": "zpao checking index char markup sufficient determine whether tag self closing tag ca nt think corner cases changing based suffice right", "d": "7/2015"}, {"body": "indexof sufficient attribute might contain character fix pushing", "d": "7/2015"}, {"body": "reading problem description nothing jumps simple jest test run repository reproduce bug side note testutils mostly internal api intended us able test react code aware nt stable external api nt technically supported", "d": "7/2015"}, {"body": "best provide jest example asap even ca nt assert happens using jest using see testutils think everybody unit testing react components use testutils sure internal", "d": "7/2015"}, {"body": "actually correct documented yeah reproduce bug first step towards fix thanks", "d": "7/2015"}, {"body": "seems behavior related jsdom bug fixed jsdom version works iojs try run tests latest jsdom figure jsdom bug", "d": "7/2015"}, {"body": "yeah seems related jsdom damn stupid decision support", "d": "7/2015"}, {"body": "nikolaymatrosov hm wrong tried replace issue still make simple test case promised", "d": "7/2015"}, {"body": "guessing running older version react serverside xmlcompatible output recent thing", "d": "7/2015"}, {"body": "using version log get one else problem perhaps something local try upgrading see issue still exists", "d": "7/2015"}, {"body": "ianfeather thanks", "d": "7/2015"}, {"body": "react checksum attribute gets inserted wrong place rendering self closing tag root ianfeather believe work around issue render function return know hacky let know doesdoes nt work", "d": "7/2015"}, {"body": "sure work happening previously multiple wrapping stripped one image isolate case try single wrapper also get back thanks replying soon", "d": "7/2015"}, {"body": "jimfb going file separately since seems tangential nt self closing tags", "d": "7/2015"}, {"body": "react nt generate self closing tags sure would ever contain also looks like using client code indicates might mixing versions require statement nt ca nt sure could double check version numbers rebuild client bundles clear caches etc sure", "d": "7/2015"}, {"body": "absolutely right bad react versions using reactdom used different project mention works fine figured kinda unsurprising sorry causing hassle", "d": "7/2015"}, {"body": "problem found legit bug result discussion investigation", "d": "7/2015"}, {"body": "testutils primarily internal testing purposes stable public apis usually nt implement particular piece functionality need one internal tests use case trying create pr repository", "d": "7/2015"}, {"body": "hmm landed shipped never took stable branch point going months later going add update docs reactcodemod figure right thing cc cpojer", "d": "7/2015"}, {"body": "thanks quick response suggestions best make use upgrading guessing perhaps hacking specific test", "d": "7/2015"}, {"body": "unfortunate thinking adding flag react components denotes whether pure cc sema update codemod accordingly pocketjoso would suggest main component sideeffectful component sets environment manually add reactaddonsshallowcompare able remove ship react version exports function add flag mentioned", "d": "7/2015"}, {"body": "cpojer unfortunate indeed makes codemod lot less useful box monkeypatch reactaddons add shallowcompare function", "d": "7/2015"}, {"body": "would great normalize annoying behavior firefox", "d": "7/2015"}, {"body": "yes would nice chance want look adding", "d": "7/2015"}, {"body": "simple example demonstrates issue", "d": "7/2015"}, {"body": "child component probably composite component dom component dom components like component function probably dom component technically could referring web component get physical webcomponent still able use play function likely issue continue get composite component everything continue work test see breaks app", "d": "7/2015"}, {"body": "yes component composite tested seems saying refs contain raw dom nodes way access react component sorry restating things know else ask seems obviously break based documented blog post thanks", "d": "7/2015"}, {"body": "clarify dom components wrap nodes dom things like refs components return underlying dom node longer need call getting dom node basically thing could anyway returning component wrapper instance pointless composite components components wroteimplemented things like refs components unaffected", "d": "7/2015"}, {"body": "looking blog post say references custom component classes work exactly since blog post technically correct explicitly state custom component classes work exactly going go ahead close issue feel free continue discussion enough people find confusing reopen issue work communicationmessaging", "d": "7/2015"}, {"body": "ah right ok makes sense read dom components components dom flavoured especially react separated react reactdom read overall think makes heaps sense api change", "d": "7/2015"}, {"body": "impression burntcaramel thanks clarifying", "d": "7/2015"}, {"body": "method use constructor classes see blog post", "d": "7/2015"}, {"body": "thanks chicoxyzzy correct answer going close issue since technically bug react use github issues track bugs react core feel free continue discussion thread move discussion stackoverflow preferred site questions", "d": "7/2015"}, {"body": "feel like really solve unit test isolation unit test run new javascript context nothing one test could possible influence test reason say fix lowpriority use case best nt want global react configuration states supporting optin erroringwarnings probably something going also related multiple instances react presumably warning memoizationdeduplication would mean would fire warnings poorman version test isolation", "d": "7/2015"}, {"body": "feel like really solve unit test isolation unit test run new javascript context nothing one test could possible influence test see argument purity point view reflect way react used practice last checked even jest use entirely separate context per test per file quite common people test using mocha jasmine even full browsers via karma similar spinning entirely new browser per test seems like poor developer experience getting fast feedback testsuite stuckouttongueclosedeyes nt want global react configuration states supporting optin erroringwarnings probably something going problem arises global state ca nt touch react tests sort check see also realised nt apply testsuites applies longrunning react application includes application developed via hotreloading ever get warning per browserreload even issue recurs later session would helpful way clearing global warnings state perhaps cache could changed onceperrender instead onceperjavascriptcontext", "d": "7/2015"}, {"body": "glenjamin existence low quality test frameworks reason us compromise designs plenty good options test isolation like jsc nt require spinning browsers long running applications exactly reason warn per javascript context informed developer bug nt need keep warning warning per render would nt make sense either want get point renders per second moving forward expect renders happen less frequently argument things like hotloading little harder refute personally nt use hotloading see useful allowing hotloader reset react would desirable think solution hotloading combination", "d": "7/2015"}, {"body": "seems bit heavyweight bundle remove state react thing particular hidden global state introduced improve developer experience one aspect getting spammed warnings imo negative impact another aspect able force warnings across multiple renders goal general remove global state react could come path achieve particular bit dug around bit found sortof dupe although mostly talking different usecases", "d": "7/2015"}, {"body": "yep tough problem talked idea adding function might possible solution still think best solution particular use case test isolation understand possible setupsenvironmentssituations leaving thread open tracking purposes nt really good solution moment feel free let us know ideas proposals solving", "d": "7/2015"}, {"body": "one possible option might move noduplicatemessages logic wrapper warning module instead custom code elementvalidator instead calling call clear injection point either hijacking warning function tests warning module", "d": "7/2015"}, {"body": "yep actually created diff exact idea months ago sure ever hit github know ultimately decided abandon problem deduplication logic often times specific use case warn globally per component per property name back logarithmically based time difficult generalize without awkward add warnings nt mean nt possible though harder sounds first glance far like idea providing kind reset functionality addons", "d": "7/2015"}, {"body": "guess part problem without moving state logic fairly central place quite tricky reset stayed distributed throughout need object coordinate resetting", "d": "7/2015"}, {"body": "yeah need way coordinating intent dump state incidentally realized possible solution might pass extra argument warning module specifically boolean indicate react thinks error message shown based deduplication rules warning module provide honor boolean print value true power users could override module implement preferred deduplication logic ignore deduplication flag altogether nt really see meaningful downsides approach", "d": "7/2015"}, {"body": "like idea logic whether repeat stays warnings module gets decide information able put together pr next weeks get back holiday slight kink function currently takes varargs space additional arguments would feel additional export module something along lines", "d": "7/2015"}, {"body": "nt mind inserting boolean condition format indicated zpao usually one strongest opinions modifying function signatures run investing time pr", "d": "7/2015"}, {"body": "see also full integration javascript use strict var react require react var require lodash var require jquery var tethertooltip require tethertooltip var withlonghoverbehavior require commonwithlonghoverbehavior see see see var rendersubtreeintocontainer require reactdom unstablerendersubtreeintocontainer var validtooltippositions top left left top left middle left bottom bottom left bottom center bottom right right bottom right middle right top top right top center var tooltipconstraints window attachment together wrapper set around components must tooltip tooltip knows reposition according constraints scrollresize see var withtooltip reactcreateclass proptypes children tooltip must displayed hover children reactproptypesnodeisrequired prefered position default try constrain tooltip window boundaries position reactproptypesoneof validtooltippositions moduleexports withtooltip", "d": "7/2015"}, {"body": "slorber nothing jumps mind code appears pretty complex believe issue react would helpful provide minimal jsfiddle demonstrates issue example imports bunch libraries bunch things going also youer debugging may worth looking nodes id value nodes may provide contextinfo makes obvious going", "d": "7/2015"}, {"body": "jimfb take closer look actually noticed error cases involving hovering tooltip rendersubtreeintocontainer wo nt use serious issue", "d": "7/2015"}, {"body": "slorber yeah simple jsfiddle would still helpful fix issue p", "d": "7/2015"}, {"body": "unfortunatly even sure related tooltip code nt really know reproduce sandbox say migrating console errors seem impact ui far seen tooltip code changed except usage rendersubtreeintocontainer instead reactrender need forward parent props reverting resolved problem would help get access migrated app nodeenv production source maps host somewhere", "d": "7/2015"}, {"body": "slorber still relevant close", "d": "7/2015"}, {"body": "dcousens think still relevant react try bugs give insights bug rc released", "d": "7/2015"}, {"body": "realistically bug nt actionable current state minimal jsfiddle would help us identify issue might related since place aware results error incorrectly thrown hard tell", "d": "7/2015"}, {"body": "jimfb try provide infos actually even sure something tell error", "d": "7/2015"}, {"body": "yeah hard imagine could cause issue since theory thing differently propagate context guess either user error ie one libraries manually modifying dom nodes related race condition react ala", "d": "7/2015"}, {"body": "fwiw shipped last night might able get repro case going", "d": "7/2015"}, {"body": "code swallowed markdown use triple backticks around code take code example render checkbox always checked use value checked react ensure stays correct way stackoverflow irc better places questions", "d": "7/2015"}, {"body": "thanks brigand great answer may find document helpful going close issue since use github issues track bugs react core bug core feel free continue discussion thread brigand suggested stackoverflow better place usage questions", "d": "7/2015"}, {"body": "yes desired behaviour convention see docs jsx element lower case tag name transformed instruct react produce dom element jsx element transformed render composite react component reference variable", "d": "7/2015"}, {"body": "building simple internal parser maps configuration certain classes loaded configuration file parsed required component modules kind structure rendering parsing simply required modules store variable named render using correct approach", "d": "7/2015"}, {"body": "yes sounds correct activatedgeek", "d": "7/2015"}, {"body": "thanks input", "d": "7/2015"}, {"body": "spicyj sebmarkbage correct people figure let final word question someone want replace ref whatever reason nt want preserve original ref way want completely override would new api worried new version cloneelement strictly less flexible personally feel like might take us wrong direction core like see refs get less specialmagical time specialmagical think great easy way wrap refs via utility consider publishing version nt think good part core", "d": "7/2015"}, {"body": "someone want replace ref whatever reason nt want preserve original ref way want completely override would new api possible version guess fair want escape hatch thinking time people want compose refs even nt know thinking experience may wrong anyway put preliminary version trying couple components like see refs get less specialmagical time specialmagical yeah believe actually possible kill refs almost entirely replace discrete version vjeux animated library animated value would simulate kronecker delta send impulse trigger animation give focus text field etc whole discussion another time", "d": "7/2015"}, {"body": "concern chaining refs implicitly may introduce subtle bugs two sources touching imperative api ca nt reason interact also lead subtle race conditions single source truth state react agree common people forget ref others might want access however think important make choice explicitly nt ask explicitly also one primary reasons discourage benefit direct refs since allow bypass contract child get access deeper ref regarding replacing refs data binding think every possible use case react could replaced data binding know many frp libraries done know also know lead massive complexity difficult us make call move towards direction since know usually turns think hesitant data binding pragmatic need eg animated ie general direction project refs espace hatch allows us access solutions nt thought think even briefly think come great alternatives example ideas around focus selection using parentbased context higher order components specifically usually case want passthrough ref current alternative passthrough proxy methods higher order component see seems weird use cloneelement higherorder components ide elaborate use finally mostly used way pass extra props parent child however nt work wrappers one primary features parentbased context expect lot uses replaced parentbased context anyway exception need ref ofc", "d": "7/2015"}, {"body": "sebmarkbage thanks indepth response totally board controlling complexity treating refs magically convinced two sources touching imperative api going close issue regarding use cases compose refs higherorder scroll views ex use passthrough proxy methods rather passing infinitescrollview ref scrollview works js render return outer c renderscrollcomponent props gt inner c gt gt refer thisouter thisinner separately needed methods defined infinitescrollview accessible via thisouter unique case infinitescrollview invertiblescrollview etc generic higherorder components rather conform standard scrollable component api composition happens renderscrollcomponent function rather class decorator similar pretty happy clonereferencedelement helper keep using", "d": "7/2015"}, {"body": "fyi asked properly developed opinion would best solved inside react", "d": "7/2015"}, {"body": "wow actually something really strange going srcrenderersdomserver reactmarkupchecksumjs seems take checksum existing markup app mounts existing react rendered markup markup include value attributes value attrs altered browser user edited values checksum check failing repro getting warning invariant violation something", "d": "7/2015"}, {"body": "user editing form markup attributes remain unchanged javascript value property changes markup validation fail keep mind markup validation intended sanity check ssr intended protect use case regards race condition yes exist little unclear couldshould one option enqueue events time required javascript loaded play events requires event listeners setup requires least minimal javascript loaded generally think terms user clicking menu noop javascript loads interactions lost form field modifications interesting case option specific form fields could check componentdidmount value property equal value attribute equal emit set events single change event always sufficient made equal perhaps worth", "d": "7/2015"}, {"body": "ah makes sense best idea far solving component renders form element manually fire onchange handlers inputs form componentdidmount method way lower level components simply inputs nt need anything special higher level component handle problem nt need know inputs map props farther hierarchy little concerned effect spurious onchange calls long logic based state props events ok", "d": "7/2015"}, {"body": "seems issue", "d": "7/2015"}, {"body": "issue since form inputs controlled requires dispatching actions update models dom values react takes amp renders page course issue checksum rendered component different server version yes race condition sure actual solution would", "d": "7/2015"}, {"body": "appears related bug accept argument pass however fix needed also needs pass something place expects also seems issue passed tried fixing however issues test setup andor test utils seem incapable triggering", "d": "7/2015"}, {"body": "yes confirm issue unfortunately makes beta unusable app synteticeventtarget null native event target", "d": "7/2015"}, {"body": "issue workaround using instead kinda wrong", "d": "7/2015"}, {"body": "use", "d": "7/2015"}, {"body": "excuse beginners react ask question use jsx watch srcbuild translate srchelloworldjs file plain javascrip", "d": "7/2015"}, {"body": "fact ca nt see result", "d": "7/2015"}, {"body": "jackien nt know place asking questions ask stackoverflow irc slack channels maybe", "d": "7/2015"}, {"body": "slorber thank answer", "d": "7/2015"}, {"body": "intuition bit scope also honest still figuring everything live subject change internal api nt rely think answer need implement whichever functions want provide obvious depending target environment use cases may want even fewer things instance server side renderer nt need provide unmount never mountunmount server web renderer provides sometimes helpful working web impossiblemeaningless implement serverside rendering react core provides helpers related elements component classes everything else domain renderer put shared renderer stuff think useful implementing renderer renderers canshould reuse code ultimately think supposed think core shared library shared renderer implementation renderer permitted call reuse much code practical largely depends similar environment already exists would much easier target xmllike output language one built top opengl instance react renderers currently optimized x html markup matter much code reuse instead reimplement good way get started would fork existing renderer ideally fork whichever closest whatever trying implement intuition close issue since bug react probably something want add formal documentation might make reasonably interesting blog post worth keeping mind", "d": "7/2015"}, {"body": "might end formal spec probably figure messaging launch think jimfb mostly right much ambiguity probably advantageous us cc sebmarkbage", "d": "7/2015"}, {"body": "based code assuming playing code looks fine runs fine environment running code provide jsfiddle", "d": "7/2015"}, {"body": "seeing react makes sense trying use googlemapreact component nt anything weird refs", "d": "7/2015"}, {"body": "seen error multiple instances react loaded might idea something take look using prepackaged component sometimes second instance react get pulled dependency one componentswhatever", "d": "7/2015"}, {"body": "yeah exactly triggering still nt understand loading react twice exact code somehow prefetchplugin fixed nt really know", "d": "7/2015"}, {"body": "probably two copies react repo might help illuminate", "d": "7/2015"}, {"body": "think case might one piece code requiring another maybe even prepackaged component requiring probably webpack alias latter", "d": "7/2015"}, {"body": "alone nt cause problems", "d": "7/2015"}, {"body": "also getting error app js npm ls grep react react indexjs var react require react reactdom require reactdom render method rendering simple div reactcreateelement div json ref heh huhuh edit somehow webpack including react twice check side", "d": "7/2015"}, {"body": "things moved fast nt think made make sure get done soon next beta", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "zpao would happen try require perf using react production env former addons include perf simply could use directly able require prod env", "d": "7/2015"}, {"body": "thanks tada", "d": "7/2015"}, {"body": "probably global env variable replaced build tool stripped minifier unreachable", "d": "7/2015"}, {"body": "build artifact allowing us create multiple development production builds", "d": "7/2015"}, {"body": "wrong select div keypress", "d": "7/2015"}, {"body": "huh modifying spread operator like makes sense jsx nt even htmldomspecific everyone uses see three possibilities makes sense right keep whitelist add new prop keep whitelist passthrough props asis drop whitelist passthrough props asis missing", "d": "7/2015"}, {"body": "also negative feelings whole point object spread works spreading", "d": "7/2015"}, {"body": "ways get prop typos explicit typos intentional objectassign object spread progression end goal going warn explicit typos first tackle spread spread always going remain unwarned point warning nonspread warning spread", "d": "7/2015"}, {"body": "sebmarkbage objectassign objectspread ultimately manifest jsxspread since go objectfullofprops element properties use cases covered assuming person using jsx working assumption person person might relying whitelist filter props explicitly setting props eg nt forwarding props whitelist filtering providing little value good first step unblocks anyone using custom attributes options create element without using spread invoke reactcreateelement directly sidestepping main blocker namely people using spread forward props nt intend inserted dom relying whitelist solves immediate issue hand way pass custom attributes dom element without blocked use spread operator allows us break migration two steps fix everything except spreads someday future fix spreads allowing us remove whitelist completely syranide correct nt htmldom specific everyone uses people nt use would need migrate code rely whitelist provide warnings help htmldom specific true making situation strictly better htmldom nonhtmldom ok", "d": "7/2015"}, {"body": "nt think big issue pass props much cases expect one two things break fb code maybe another one two external users importantly nt seem like good path weed switch unless figure attributes meaning currently passed logged think may well switch", "d": "7/2015"}, {"body": "files suffix suffix command docs gettingstartedmd correctly states translate file says nothing files correct assuming problem", "d": "7/2015"}, {"body": "jimfb right nt notice suffix example problem solved default suffix write inside valid javascript file think changed default", "d": "7/2015"}, {"body": "amitmtrn yeah sebastian wrote long rant somewhere basically side effect fact using transforms fairly standard thing javascript instance using classes use transform technically part javascript language using features using speculative features nt reached consensus using multiple language extensions decide order suffixes starts become mess since transformations part javascript builddeploy process nowadays stay decision made call everything javascript", "d": "7/2015"}, {"body": "update found sebastian original post talking nt long remembered another note think jsx command provided reacttools sunsetted favor transforms like babel jsx support built see reasons going go ahead close issue", "d": "7/2015"}, {"body": "check character encoding serving page likely", "d": "7/2015"}, {"body": "think failing support international characters design p tested jsfiddle one files examples directory seemed work fine seems imply react issue sure page encoding set correctly test try something like provide complete testcase steps repro", "d": "7/2015"}, {"body": "yeahh added meta works assume translation docs better add examples even present original example", "d": "7/2015"}, {"body": "yeah seems reasonable example containing nonascii characters probably meta tag related note might also want meta tag english versions consistency nothing else encourage bestpractice always specifying encoding let spicyj zpao gatekeepers decision", "d": "7/2015"}, {"body": "jimfb agree consistency better add charset meta everywhere resolve future confusions", "d": "7/2015"}, {"body": "guess okay though reality charset use html files business react nt really care people probably want though add", "d": "7/2015"}, {"body": "cc takoblack", "d": "7/2015"}, {"body": "works although far worse solution using correct http headers without http header browsers examine first kilobytes page guess charset character frequency start parsing guess encounters tag realizes got charset wrong stop reparse entire page going make suggestion defining charset suggest appropriate http headers meta tag buggy horrible perf characteristics", "d": "7/2015"}, {"body": "bgw users run opening local html files nt server headers yes agree said anyone knows set server header know remove meta tag markup p point solve problem someone opens local translated example blows", "d": "7/2015"}, {"body": "jimfb change japanese documents", "d": "7/2015"}, {"body": "takoblack yep want inline example translated documents renders full html markup like first code block example probably contain header ccing mostly context aware issue since primarily affects translations", "d": "7/2015"}, {"body": "jimfb ok understand make pr add tag header html", "d": "7/2015"}, {"body": "documentation contradictory call render twice element second invocation effectively noop nothing update pass similar element type maybe different property instance resulting slightly different render result dom updated documentation correct description behavior note saying container already random dom nodes invoke initial render nodes blown away since documentation selfcontradicting merely describing behavior edge cases requires reader semantically careful reading api inclined close issue said curious proposed wording would clear", "d": "7/2015"}, {"body": "perhaps reactrender replaces contents container node nt originate previous call", "d": "7/2015"}, {"body": "new wording nt technically true either though suppose worse existing wording mutate nodes container initial render changes may may blown away think another point note trying indicate update effect rendering specified element container children rather container updating element place lots people mistakenly think reactrender update node passed instance pass component ultimately renders body node mount body think replace body instead attempting insert rendered body node existing body node", "d": "7/2015"}, {"body": "perhaps said reactrender replaces contentschildren container node pass rather updating container node future may possible insert component existing dom node without overwriting existing children unclear actually solves initial complaint though", "d": "7/2015"}, {"body": "part docs misunderstood many times would suggest give example make things clear future may possible insert component existing dom node without overwriting existing children maybe get removed sounds like belongs reactfuture", "d": "7/2015"}, {"body": "reactrender controls contents container node pass existing dom elements inside replaced first called later calls use react dom diffing algorithm efficient updates", "d": "7/2015"}, {"body": "reactrender controls contents container node pass existing dom elements inside replaced first called later calls use react dom diffing algorithm efficient updates reactrender modify container node modifies children container future may possible insert component existing dom node without overwriting existing children", "d": "7/2015"}, {"body": "jimfb opened pr text supplied final cheers", "d": "7/2015"}, {"body": "dupe mouseentermouseleave work beta already comes", "d": "7/2015"}, {"body": "react adds one top level listener event nt stop listening components unmounted never seen performance problem", "d": "7/2015"}, {"body": "spicyj yes right react performance problems unused event listeners big deal makes little bit sad see number listener growing inspect spa chrome timeline tools would consider remove unused listener better", "d": "7/2015"}, {"body": "could removing listeners better cases cases soon mount new component needs events case wasting effort removing readding", "d": "7/2015"}, {"body": "perfectly valid question since bug react core going close issue take radar feel free continue discussion stackoverflow animations super hard best animation library aware ryan florence library see great video digging start stuff awesome magicmove might exactly looking know vjeux also working animation stuff probably also worth asking stackoverflow people might great ideas", "d": "7/2015"}, {"body": "asked twitter thinking react forums nt ask yet case anyone interested follow along post solution", "d": "7/2015"}, {"body": "plan move away proptypes favor flow future expecting people define getdefaultprops define proptypes", "d": "7/2015"}, {"body": "would seem less weird required default like flow hope another dynamic type system maybe using flow syntax eventually takes responsibility react proptypes really nothing react however dynamic alternative still keep however much work making really good type system think wasted effort trying specifically react putting lot effort atm nt really neat syntax collocate default value type definition flow right think neat syntax propose", "d": "7/2015"}, {"body": "great question discussion group discussreactjscom issue react going close", "d": "7/2015"}, {"body": "syranide sebmarkbage", "d": "7/2015"}, {"body": "ca nt use objectassign pull mixin mixin subsequently anything want specifically override new function call old one could even make helper function automatically drifting away mixins anyway going close issue nt think making changes mixins", "d": "7/2015"}, {"body": "liondancer nopantsmonkey comment resolve issue side point future questions like better asked stackoverflow since github issues intended track bugs react core rather usage questions", "d": "7/2015"}, {"body": "fix released ran issue", "d": "7/2015"}, {"body": "davidreher beta already released beta fix working getting ready final release follow checkmarks", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "summarize discussions sounds like ideal solution transform would happily accept inlining ifexists check classes instead see relevant discussions", "d": "7/2015"}, {"body": "threepointone case changes code let animations go smoothly without rerendering content combination shouldcomponentupdate gt false moving things change updated component", "d": "7/2015"}, {"body": "question regarding mostly starting see pull requests come containing correct feature preferred way ensure correct spacing client following choices tough choose winner react way generates far much boiler plate rather difficult read space seems ripe developer remove refactor react nbsp", "d": "7/2015"}, {"body": "related facebookjsx facebookjsx facebookjsx think important note jsx html jsx compiles js target frontend may expect implicit whitespace appear certain places currently nt due familiarity html check resulting code without whitespace trimming see definitely want current whitespace rules generates without would generate intended pretty sure especially consider frontends would expected take whitespace literally trim like html disabled really nice personally count number times use codebase one hand even prefer way also shows explicitly wanted", "d": "7/2015"}, {"body": "sorry kinda forgot issue due work try create minimal replication issue update root cause iswas", "d": "7/2015"}, {"body": "indeed outputs sane html left closed probably mishap wire protocol selenium firefox happens", "d": "7/2015"}, {"body": "think still xmlns svg image supported", "d": "7/2015"}, {"body": "intuition splitting renderers core easierbetter separate renderer server side substantial portion logic simplifiedremoved streaming implemented skipping component instantiation becomes possibility ok maybe one hardquestionable etc things common client server moved shared things different forked tend like strategy better injectionfactories find difficult reason flow control latter patterns said curious sebmarkbage thinks", "d": "7/2015"}, {"body": "jimfb problem want fork something middle nt want fork everything want system injections would like become statically resolved eg overrides requires shared code would copied renderer build ie shared npm minified deadcode eliminated unit", "d": "7/2015"}, {"body": "mridgway current set really ad hoc messy part incremental refactoring plan shooting would renderers two layer system generic react reconciler part turn could split server side client side environment specific part eg dom specific pieces reactnative specific pieces reactart etc etc make trivial target new imperative api plugging environment specific parts generic reconciler part currently necessary cycle reactcompositecomponent reactdomcomponent reactdomcomponent causes recursion may lead back reactcompositecomponent solve using dynamic hacky injection workaround unfortunate static analysis vm optimization reasons however recursion implementation detail would like get environment specific logic ie dom specific code nt recursion part generic react reconciler way entire cycle move reactreconciler unit module cycles", "d": "7/2015"}, {"body": "back day bunch amp fans team reference historically used scry indicate helper finds set results framework matures start choosing function names based functions actually instead fantasy words little meaning typical developer", "d": "7/2015"}, {"body": "going close point tracking discussion svg", "d": "7/2015"}, {"body": "sorry delayed response sound like movement right direction", "d": "7/2015"}, {"body": "new contextsensitive warning working everyone getting old warning without context", "d": "7/2015"}, {"body": "shipped", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "fix landed additional pure noise please stop", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "one thing might helpful test utilities define wrapper function takes context object generates new wrapper component defines childcontext renders provided component using rendersubtreeintocontainer get almost exactly looking solution entirely userspace", "d": "7/2015"}, {"body": "let close revisit need later going anything near term", "d": "7/2015"}, {"body": "jimfb thanks suggestion try", "d": "7/2015"}, {"body": "slorber done something look warning code examples quite outdated read tests define something like ready use well tested sadly lack examples yet", "d": "7/2015"}, {"body": "gaearon using meteor react basically lot components loading data sideways meteor since mixin similarly nt add state transitions like whenever needed use component wrap another component loads data passes props felt annoyed refactoring rather implement existed", "d": "7/2015"}, {"body": "ways like idea able load observed data directly function however could still achieved mixin separate method caches results returns implementation sure mixins actually define render would still smaller change core make possible mixins define since people may end using variety apis sideways data loading meteor biggest example sure reactive frameworks come probably ca nt integrate proposal anyway think would better people pick choose mixins need sideways data loading", "d": "7/2015"}, {"body": "slorber generally time use promises client side go ahead render spinner whatever render something new promise resolves instead leaving user hanging stuff shows hope agree kinder users would avoid using promises", "d": "7/2015"}, {"body": "slorber whoa sorry nt actually read code see talking", "d": "7/2015"}, {"body": "would use trying test interactions element needs context also needs find dom node simulate events edit realize naive question looking way context problem trying solve", "d": "7/2015"}, {"body": "noting constructor replacement use cases falls category currently mentioned docs question use came babel blog post react", "d": "7/2015"}, {"body": "clean way using react lt use getdomnode thisrefsyourselecttag", "d": "7/2015"}, {"body": "also run issue sometimes jimfb another thing probably done good errorwarning messages case using syntheticevent methods object put back pool example case tried call syntheticevent put back got ca nt call preventdefault null following code javascript preventdefault function thisdefaultprevented true var event thisnativeevent eventpreventdefault eventpreventdefault else eventreturnvalue false thisisdefaultprevented emptyfunctionthatreturnstrue stoppropagation function var event thisnativeevent eventstoppropagation eventstoppropagation else eventcancelbubble true thisispropagationstopped emptyfunctionthatreturnstrue think syntheticevent methods rather defensive explain pooling user face", "d": "7/2015"}, {"body": "news issue work around", "d": "7/2015"}, {"body": "andreimc using react amp react beta server found wise move logic within otherwise seen document defined read property currentelement null", "d": "7/2015"}, {"body": "thanks ericclemmons", "d": "7/2015"}, {"body": "ran similar issue react nt say peep string provided style stringvar jsx attribute figured simply setting plain old style attribute string reason supported someone also explain would least big red warning", "d": "7/2015"}, {"body": "unphased tried reproduce problem react would nt let use style stringvar fiddle gives error uncaught error invariant violation prop expects mapping style properties values string example style marginright spacing em using jsx give code example repros problem", "d": "7/2015"}, {"body": "hmm checked codebase appear react version logic inside something happening nt minimal reproducing example hand sorry post back come one", "d": "7/2015"}, {"body": "bloodyowl would prefer first option since react seems whitelist valid attributes seems like would easy project yellow list warnings lowercasing whitelist", "d": "7/2015"}, {"body": "mjackson jimbolla pr updated", "d": "7/2015"}, {"body": "common use case yahoo forcing keys would nice addition", "d": "7/2015"}, {"body": "fyi currently using utility based purpose", "d": "7/2015"}, {"body": "folks interested came meantime works nicely us", "d": "7/2015"}, {"body": "camp using comments rather extending api documentation purposes saw figured would plumbing form field info text something could see people trying use new api purposes like might fit intention", "d": "7/2015"}, {"body": "proptypes largely getting replaced flow nt actively developing proptypes feature even developing proptypes likely would nt add new functionality recommendation use commentsdocs", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "kellyrmilligan think would best asked stack overflow nt seem like bug react", "d": "7/2015"}, {"body": "agree nt sound like bug react going close take bugtracking radar feel free continue discussion thread move stackoverflow", "d": "7/2015"}, {"body": "similar issue error message originally envify installed top level dependency later uninstalled course meant react longer dependency rely reinstalled react module included envify module problem solved", "d": "7/2015"}, {"body": "sounds like plausible case activity original reporter closing", "d": "7/2015"}, {"body": "infolock thank source bug", "d": "7/2015"}, {"body": "error trying include component inside component javascript var foo require foojsx var bar require mainjsx var main reactcreateclass render function return moduleexports main error", "d": "7/2015"}, {"body": "get something like message invariant violation element type invalid expected string builtin components classfunction composite components got null", "d": "7/2015"}, {"body": "usually means multiple reacts loaded page", "d": "7/2015"}, {"body": "agree andreypopp likely issue multiple instances react often second copy react gets pulled one dependencies loaded recommend examining dependencies since react quite nt sound like anything particularly fancy think unlikely bug react likely issue setup github issues used track bugs react going go ahead close issue since nt think bug react core feel free continue discussion thread stackoverflow", "d": "7/2015"}, {"body": "right issue multiple instances react caused way atom electron handles dependency loading windows details available case anyone else get issue well electron", "d": "7/2015"}, {"body": "current hack jsx componentdidmount thismounted true componentwillunmount thismounted false forgive sins works", "d": "7/2015"}, {"body": "probably fixed drd", "d": "7/2015"}, {"body": "reading commits suspect partially fixed deals html entities rendered differently nt fix bad error indication actually different server client rendering partly issue pertains since folded maybe issue closed issue reopened", "d": "7/2015"}, {"body": "jordansexton far tell problem warning message useful browsers slightly change format html gets passed", "d": "7/2015"}, {"body": "think got solve state problem sideways data loading derivative data consistent way makes stateless reactway found way maintain state consistency point time fits pattern unlikely hands make completely bulletproof add examples make good presentation hand well tested using production projects iteratively clever minds welcome contribute", "d": "7/2015"}, {"body": "hi funny nt stumble thread company running problems addressed proposal half year ago started using react large scale project think editor complexity microsoft visio cyclic data vanilla react count nt keep performance demands flux bit nogo us due large amount boilerplate error proneness subscriptions figured needed observable data structures well could nt find anything available ready use built observables lib based principles knockout observables especially automatic subscriptions fits actually neatly current lifecycle react components nt need weird hacks even child rendering callbacks observermixin used loc improved dx lot worked tremendously well team decided publish open source mean time quite battle proven provides observable array polyfill example highly optimized short timer example also available jsfiddle imho dx could nt much better relieved javascript var store add observable properties store mobservableprops store timer course could put fluxstyle dispatchable actions demo model view function resettimer storetimer setinterval function storetimer var timerview reactcreateclass component actually observer store properties accessed last rendering need declare data use seemingly state component combination mobservableprops observermixin magic us ui updates nowhere forced views un subscribe data automatically mixins mobservableobservermixin var timerapp reactcreateclass render function var new date demonstrate timerview updates independently timerapp return started rendering nowtostring pass store component tree could also access directly global vars whatever suits style reactrender documentbody details approach see blog btw make sure decorator andor container added lib using classes saddly nt see thread reacteurope otherwise would nice opportunity discuss react amp observables big thanks inspiring talks especially loved abstractions graphql thought work behind redux", "d": "7/2015"}, {"body": "mweststrate feel community end need choose observables immutable data solutions ultimately maybe need mix way strengths approach one solution solution implemented immutable data approach focus consistency state point time planning support observables generators well example rules using fetch derivative supplement data page body assets recommendations comments likes maintain consistency app state complex realworld production code example shows handle api redirects location header javascript import r superagentbluebirdpromise import router router export default request function req let route routermatch requrl let session reqsession routeurl requrl return set route route set session reqsession route deps request set function route request let name params id route name login return let url routerurl name params id let method requestmethod requestmethodtolowercase get let req rmethod post put indexof method reqsend requestbody return reqthen resp gt let ctx thisctx let path urlsubstr replace respbody let location respheaderslocation location ctxset request method get url locationreplace api else ctxset path respbody return ctxcommit rest approach except direct binding react required case believe need join forces somehow archive common goal", "d": "7/2015"}, {"body": "think bad idea many edgecases hard consider comments list possible scopes needs thinked end user time wants create dataful component serverside rendering initialization entanglement asynchronous rendering think proposal lead error prone unstable hard debug components agree proposed glenjamin lifecycle hooks", "d": "7/2015"}, {"body": "apologies offtopic ca nt quite tell example think exposing api interacting component tree would interesting way approach problem method hackery walk tree question would public api kind thing enable innovation sideways dataloading think boils renderer nt work topdown", "d": "7/2015"}, {"body": "example think exposing api interacting component tree would interesting way approach problem believe swannodette talked reactconf wonder om next", "d": "7/2015"}, {"body": "yep suggested kind thing first reactconf nt seen latest omnext heard euroclojure talk previously om would use structure users build order", "d": "7/2015"}, {"body": "method hackery walk tree question would public api kind thing enable innovation sideways dataloading think boils renderer nt work topdown think roughly equivalent shallow rendering found test utils mentioned making firstclass api peer dom amp string rendering sebmarkbage reacteurope changes seem pave way nicely initial reaction might bit low level similar way extensible web stuff think would make easier experiment user space", "d": "7/2015"}, {"body": "agree way render get tree walk find data needs pass", "d": "7/2015"}, {"body": "getting access entire virtual dom tree amazingly powerful useful feature would love get access even treated completely separate issue think makes ton sense considering path react taking onwards", "d": "7/2015"}, {"body": "given complexity observables humbly suggest fine gentlemen thread look meteor implementation reactive data reconciling react takes literally lines code method something like nt know tracker easily extracted separate library obviates need observable support react sure seems way", "d": "7/2015"}, {"body": "mobservable follows similar pattern refresh component sideways observable values changed seems current lifecycle methods decorators offer enough flexibility third party libraries express kind patterns imho third data source concept would complicate things", "d": "7/2015"}, {"body": "mitranim agree really good read thanks finding effectively suggesting undecided proposal better played mostly convinced reactive programming linked way go nt reached consensus still trying figure makes sense feedback welcomed", "d": "7/2015"}, {"body": "seems nt documented signature actually", "d": "7/2015"}, {"body": "tvaroh correct official signature context officially supported currently second parameter think previous props still available component instance also worth noting documented api guarantees componentwillreceiveprops get called props change invocation guaranteed imply props changed guaranteed componentwillreceiveprops get called props change assume componentwillreceiveprops called props change", "d": "7/2015"}, {"body": "case playing reacttappable lib maybe related nt use perfstart render phase touch perf code since months", "d": "7/2015"}, {"body": "yeah seems reasonable also going reopen purpose providing useful error message", "d": "7/2015"}, {"body": "jimfb problem perf reacttappable related bug reacttappable basically bug makes app code something like listener fired setstate callback produces weird behaviors perf showing bug provide good error message", "d": "7/2015"}, {"body": "closing duplicate", "d": "7/2015"}, {"body": "issue think caused library expecting something commons chunk", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "yea closing issues mentioned", "d": "7/2015"}, {"body": "zpao issue tracked please", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "component controls flow user navigated different screens surrounding component uses state model state machine transitioning different flows purpose replacestate perfect fit", "d": "7/2015"}, {"body": "simulate replacestate component using single state variable ie always setstate mystate effectively replacestate except component updated future without huge refactor per sebsatian original post fact even define replacestate function component always use replacestate function oppose ever using setstate behaves almost exactly original function philosophy maintain minimal api surface especially important public facing open source projects like react since need keep learning curve low documentation littered functions continue support recommend nt use suboptimal confusing people nt eatsleepandbreath react move fast try new things deprecate anything nt stand test time", "d": "7/2015"}, {"body": "sebmarkbage new change would reference actual component instance example would implement hypothetical component acts like osx dock class dockitem bounce bounces dock item render return class dock componentdidmount listen event app bounce dock icon systemgetapp xcode addeventlistener alert e gt thisxcodebounce", "d": "7/2015"}, {"body": "work lowlevel dom components eg affected", "d": "7/2015"}, {"body": "spicyj ah ok great know thanks", "d": "7/2015"}, {"body": "fact released beta without mean dropping", "d": "7/2015"}, {"body": "nbostrom promises think still going try squeeze little busy reactconf europe nt quite ready time", "d": "7/2015"}, {"body": "thanks quick answer hope find time end day guess really nicetohave", "d": "7/2015"}, {"body": "hit block unfortunate timing initialization code forcing unfortunate branch think probably fix get better implementation restructuring code priorities terms releases sometimes get prioritized based gets blocked ie nt adddeprecate certain things release ca nt something else release b kind sequencing important new apis like one often nt block anything else easy bump always go adhoc release later though able get soon", "d": "7/2015"}, {"body": "currently experimenting migrating beta lot trouble deprecation due fact app makes lot use portal components ie modals like request official release include extra docsexamples migrate away current error message sufficient immediately clear call reactrender component already mounted especially using edit feel free message slack reactiflux additional info username", "d": "7/2015"}, {"body": "recall reactrender container component update always recommended way update toplevel component", "d": "7/2015"}, {"body": "spicyj nt solve setprops problem wants blog post reactcomponentrenderer includes setprops replaceprops helper sebmarkbage let figure blog post today couple drafts google doc let know want put", "d": "7/2015"}, {"body": "jsfb read immediately clear call reactrender component already mounted let get blog post", "d": "7/2015"}, {"body": "going anything", "d": "7/2015"}, {"body": "hey zpao similar issue function handling input changes component following input follows everything works test via browser tests using jest reactutils nt work simulate onchange event state component remains unchanged tried three versions must missing something ideas thanks advance", "d": "7/2015"}, {"body": "figured issue issue caused forgetting mock mixin ultimately ended following", "d": "7/2015"}, {"body": "note anyone else getting error also occur resulting html would invalid example case trying mount node inside another resulted unknown runtime exception", "d": "7/2015"}, {"body": "stress test isomorphic application found another issue related topic default laptop express handles requestsecond app handles requestseconds profiler found rendertostring rendertotstaticmarkup blocks event loop reason express dispatch less requestsecond", "d": "7/2015"}, {"body": "abrahamalcaina dynamically generating anything complex ondemand obviously going costly need implement caching prebuild static responses", "d": "7/2015"}, {"body": "syranide caching always good idea case rendering timeline user user timeline good idea improve performance method less ms take mind render string nt needed keep track changes state props etc remove checks improve performance idea", "d": "7/2015"}, {"body": "abrahamalcaina yes hope implement optimizations like", "d": "7/2015"}, {"body": "thanks guys spicyj syranide good job", "d": "7/2015"}, {"body": "yup let chat", "d": "7/2015"}, {"body": "may good reasons would nt work along lines used strings instead references child components would obviate need shallowrender would invert control components register components centrallypass", "d": "7/2015"}, {"body": "someone interested packaged solution similar npm package", "d": "7/2015"}, {"body": "closing internals removed usage userland avoid", "d": "7/2015"}, {"body": "duplicate fixed", "d": "7/2015"}, {"body": "deprecating jsx transform going close", "d": "7/2015"}, {"body": "ran think made jsfiddle", "d": "7/2015"}, {"body": "idea expect patched feel really dirty manually patch app reactjs version due fact using component struggles issue", "d": "7/2015"}, {"body": "sorry long wait working", "d": "7/2015"}, {"body": "setstate callback xd gaearon", "d": "7/2015"}, {"body": "callback passed second argument called done see", "d": "7/2015"}, {"body": "still seeing issue verify happens return null react addons", "d": "7/2015"}, {"body": "yes fix", "d": "7/2015"}, {"body": "ahh well would explain things get hands", "d": "7/2015"}, {"body": "sorry released yet hopefully next weeks npm see react blog", "d": "7/2015"}, {"body": "long time ignoring error found trying unmount component react trigger event react nt support crazy event dispatcher behind solution unmount trigger next browser tick", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "idea timeframe might official solution curious meantime probably monkeypatch everything", "d": "7/2015"}, {"body": "looked problem still using react reactbootstrap test latest reactbootstrap changes broke abandonded project ways would require major rewrites could changes affect issue", "d": "7/2015"}, {"body": "would like nt figured way get github cc rather bcc without explicitly participating sorry noise", "d": "7/2015"}, {"body": "mathieumg button", "d": "7/2015"}, {"body": "joeybaker think still nt cc bcc sadly moreover watching repo already different inbox github ccs", "d": "7/2015"}, {"body": "fyi ongoing pr", "d": "7/2015"}, {"body": "nt answer may help output", "d": "7/2015"}, {"body": "updates js handlehomeonmouseenter e etargettext home handlehomeonmouseout e etargettext home render home snippet repros problem hope helps", "d": "7/2015"}, {"body": "genxstylez replace instances demo appears work fine using safari version", "d": "7/2015"}, {"body": "genxstylez think unrelated reported issue specifically addon using also work nt think standard reports test cases original issue closing", "d": "7/2015"}, {"body": "updates plans supporting svg namespaced elements attributes", "d": "7/2015"}, {"body": "seems still necessary implement svgs using", "d": "7/2015"}, {"body": "recommend use combination react ever need use namespaced attributes use method", "d": "7/2015"}, {"body": "request need react render inline svg image inside clipping path getting hung attr tag", "d": "7/2015"}, {"body": "dujuanxian workaround helped get provided double single braces used course", "d": "7/2015"}, {"body": "show example using nonreactsvgstuff used react able set attribute tags", "d": "7/2015"}, {"body": "npm install merge var merge require merge works", "d": "7/2015"}, {"body": "hey read whole thread render optimization usecase may require feature", "d": "7/2015"}, {"body": "feature released reactcsstransitiongroup wo nt need wrapper node anymore right", "d": "7/2015"}, {"body": "slorber yes probably true", "d": "7/2015"}, {"body": "react native use parent context well seems like still uses owner context", "d": "7/2015"}, {"body": "react native still react update final release", "d": "7/2015"}, {"body": "cool glad know way also used context pass stores desire avoid singletons used cases well", "d": "7/2015"}, {"body": "ran issue initially solved creating displayflexbox class per suggestions tracking issue materialui noticed foundthought alternative apparently add display properties specifying value display key bit hack nt seem bad solves issue safari things still working chrome ff nt checked ie older browsers kind regards", "d": "7/2015"}, {"body": "wow stunned works tue jul elger lambert notifications githubcom wrote ran issue initially solved creating displayflexbox class per suggestions tracking issue materialui noticed foundthought alternative apparently add display properties specifying value display key display webkitbox display mozbox display msflexbox display webkitflex display flex bit hack nt seem bad solves issue safari things still working chrome ff nt checked ie older browsers kind regards reply email directly view github wout typed mobile excuse terseness", "d": "7/2015"}, {"body": "fwiw hack works initial render use updates break point change actually using guarantee continue work", "d": "7/2015"}, {"body": "thanks comment zpao good knowbe aware", "d": "7/2015"}, {"body": "spent realising happening shame firefox nt usecase showing toolbar mouseup div keep toolbar showing clicks enough time guess still", "d": "7/2015"}, {"body": "keats due use code still wo nt work interested module use workaround js use strict var react require react function relatedtarget e fn jshint browser true var relatedtarget e relatedtargetcontains function root var require jquery moduleexports relatedtarget basically pollyfill setimmediate use either relatedtarget event activeelement setimmediate required may wrong event bit optional nt need use find makes common use case testing focus left container easier", "d": "7/2015"}, {"body": "thanks keep mind try ie", "d": "7/2015"}, {"body": "looking comment without half asleep like yesterday much better explicitoriginaltarget already contains well isdescendant case cheers", "d": "7/2015"}, {"body": "nt forget react synthetic events purge event event property want need copied local variable use callback", "d": "7/2015"}, {"body": "dantman takes care", "d": "7/2015"}, {"body": "think point things pretty fast make changes build process general", "d": "7/2015"}, {"body": "ever resolved reactaddonsperf still behaving similarly newly inserted dom nodes printed wasted time also could get clarity first fiddle prints wasted time second", "d": "7/2015"}, {"body": "resolved nt think either", "d": "7/2015"}, {"body": "nt chance look improving perf tooling goals wo nt happen", "d": "7/2015"}, {"body": "jaehunro fiddles different implementation first fiddle implemented returns always true second fiddle implemented returns true contents different result first one many wasted times second one nt wasted time ca nt understand second fiddle prints wasted time sometimes", "d": "7/2015"}, {"body": "thank much quick responses took look source code gain understanding works saw wasted time based time spent clean components decides whether components cleandirty testreactdefaultperfanalysisjs checks component ids contained keys however newly inserted dom nodes counted clean testreactdefaultperfjs recording parent component id key new children inserted tried work around keeping record created components checking added record used count newly created nodes dirty thinking right track misguided", "d": "7/2015"}, {"body": "fwiw going leverage npm", "d": "7/2015"}, {"body": "aetet reactcomponents hope help", "d": "7/2015"}, {"body": "perhaps createenumtypechecker needs give warning suggesting using finds nonstrings", "d": "7/2015"}, {"body": "fixing warning message drifting away proptypes toward flow anyway someone looking easy pr improving error message would good one", "d": "7/2015"}, {"body": "nelix comment example bootstrap css number utility classes use important hidden pullright etc would nt able override without important inline styles totally agree important abused probably bootstrap matter think react still able work", "d": "7/2015"}, {"body": "pulling research reviving thread chrome firefox safari ie modern browsers support notion checkbox indeterminate state set cleared using property checkbox input node set using attributes state commonly used top list tree checkboxes indicate checkboxes underneath checked behavior seems reasonably welldefined modern chrome firefox safari ie checkbox indeterminate property set checkbox renders indeterminate state regardless checked state checked state programmatically toggled clicking checkbox clears indeterminate state unfortunately little bit inconsistency chrome firefox safari clicking indeterminate checkbox clears indeterminate state also toggles checked state triggering change click event ie clears indeterminate state leaves checked state alone triggering click event react support prop checkbox inputs supported uncontrolled checkboxes via similar prop clicking indeterminate checkbox follow browser checkedtoggling behavior claims come playing jsfiddle chrome firefox safari ie", "d": "7/2015"}, {"body": "running problem well", "d": "7/2015"}, {"body": "getting issue callback isnt called oy vey", "d": "7/2015"}, {"body": "matthewwithanm jsfiddle updated version react callback never gets called wtf ps noticed people mentioned well", "d": "7/2015"}, {"body": "need something use function patch js var hello reactcreateclass getinitialstate function return componentwillmount function hotfixsetstate thissetstate testing function function hotfixsetstate instance var original componentwillmount instancecomponentwillmount setstate instancesetstate componentdidmount instancecomponentdidmount var traced new error", "d": "7/2015"}, {"body": "da man", "d": "7/2015"}, {"body": "fixed callback fires client server", "d": "7/2015"}, {"body": "glad onload event iframes nt find docs though something added spicyj", "d": "7/2015"}, {"body": "jketcham yes want send pull request think missing onerror onload probably go new subsection called generic events special properties also onreset listed form events", "d": "7/2015"}, {"body": "error happened css classes child element animated removed css classes worked properly dont know css classes issues want point", "d": "7/2015"}, {"body": "filter", "d": "7/2015"}, {"body": "use support", "d": "7/2015"}, {"body": "namespaced attributes", "d": "7/2015"}, {"body": "attributes support", "d": "7/2015"}, {"body": "support need react render inline svg image inside clipping path getting hung attr tag", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "considering zpao comment issue locked least update op information subscribed thread updates zpao comment buried along fact work already done kinda confusing anybody nt read entire thread", "d": "7/2015"}, {"body": "zpao comment explains decision currently built react better explanation addon nt exist something still explored", "d": "7/2015"}, {"body": "vote netbeans jxs support", "d": "7/2015"}, {"body": "etaig sorry delay change simple take without tests complex maybe write want post pr code", "d": "7/2015"}, {"body": "spicyj thanks answering make pr tomorrow small change", "d": "7/2015"}, {"body": "spicyj looks like deleted changes local react clone since though still test written even though ca nt run anwyay merged react master locally checked code explain problem possible solutions pr later want sorry lengthy think clear going move onwards get radio work according spec problem caused fact react uses native click event listen user interaction radio calls onchange input reason least according comment code fire change event blur order compatible click event used tradeoff supporting normal radio losing standard radio also causing anyone uses react wants specifically know radio selection changed write stateful code possible solutions problem support listen change event probably unwanted due fact solutions fix done intentionally make radio input stateful keep track current selection wo nt call onchange radio button clicked although generally like keep things stateless possible solution good anyway react library currently forces developers using state use case bubbling state written properly keep state hood assume always either checked prop passed radio one checked good since changing api state must pass checked checked radio button forces developer declarative legitimate requirement react work even checked passed radio work otherwise probably cleanest solution smallest amount code possible try check dom value since click event arrives change already occurred personally like good maybe something else nt think think", "d": "7/2015"}, {"body": "anchor tags issue well href set link remains active clicking effect removing anything url temporary workaround add key jsx output custom link component", "d": "7/2015"}, {"body": "opened bug ie team feel free upvote", "d": "7/2015"}, {"body": "got rid closing", "d": "7/2015"}, {"body": "noncss case created modified version solves problem altering semantics component added back finishes leaving example called likewise called finished component added removed quickly ignores callbacks component nt appropriate state calls etc appropriate callback fired component leaving etc state completely analogous css transitions reverse midflight think must component added removed finish transitioning nt handle problem event children reordered since cssspecific issue provide reliable consistent base behavior abstract transitions anyone want turn pull request pretty sure eventual core solution problem something similar", "d": "7/2015"}, {"body": "agree csstransitiongroup working terribly reliably keep getting warning time would great worked better least love know animation isnt firing transitionend", "d": "7/2015"}, {"body": "tracking ccorcos request obviously already knows linking threads future reference", "d": "7/2015"}, {"body": "update far maybe workarounds", "d": "7/2015"}, {"body": "kureev fixed april see messages release search workaround page see also posted workaround year ago", "d": "7/2015"}, {"body": "sorry really missed thanks", "d": "7/2015"}, {"body": "sorry resurrecting thread still mystery require react document already available come mocha test works fixed meantime js import react reactaddons import jsdomify jsdomify import assert assert describeonly example gt gt jsdomifycreate works react required document available gt const div reactaddonstestutilsrenderintodocument assert divpropsexists gt jsdomifydestroy required react initialized jsdom jsdomify convenience wrapper around jsdom", "d": "7/2015"}, {"body": "nevermind breaks soon call simulate event etc", "d": "7/2015"}, {"body": "issue still occurring", "d": "7/2015"}, {"body": "weird found interesting link talk cursor pointer however understand element cursor pointer click listenerr first click trigger hover state second fire click happens app adding cursor pointer managed solve problem click listener called directly hover", "d": "7/2015"}, {"body": "spicyj sorry bit lost revert reverts reverts finally available version overhead adding much click listeners everywhere ca nt ios nt understand solution add click listener example clicking children hover triggered seems hover whole div actually click fired reclicking children solution put click listeners exactly solve problem", "d": "7/2015"}, {"body": "yes landed master diff adds empty onclick listener mobile safari knows div clickable mirrors would happen wrote directly html called without using react sure interacts hover could probably ios nt know browsers use similar heuristics hopefully minimal performance impact planning benchmarking soon significant figure way speed", "d": "7/2015"}, {"body": "ok thanks start using beta still sure understand node onclick listener setup example div already one guess means others install click listener", "d": "7/2015"}, {"body": "yes seems work updated initial jsfiddle test ios", "d": "7/2015"}, {"body": "still issue", "d": "7/2015"}, {"body": "fixed beta final well", "d": "7/2015"}, {"body": "earlier comment thread already says", "d": "7/2015"}, {"body": "safari dispatch change events autofill nt bubble nt reach react handler", "d": "7/2015"}, {"body": "getting error chrome firefox", "d": "7/2015"}, {"body": "kulicuu could different browsers handling incorrect markup differently without information best say", "d": "7/2015"}, {"body": "zpao see reopening please tell markup incorrect edit see referring thread context would nt markup anyways nt touch actual dom would react right whether incorrect relative opinion respective browser approaches apparently old crossbrowser banes", "d": "7/2015"}, {"body": "mmmh know bit old discussion spicyj proposal smile", "d": "7/2015"}, {"body": "nuragic planning add sorry", "d": "7/2015"}, {"body": "spicyj sob ok thanks update anyway sake curiosity usually without", "d": "7/2015"}, {"body": "deprecating reacttools closing", "d": "7/2015"}, {"body": "reacttools deprecated closing", "d": "7/2015"}, {"body": "see update jbrantly current state affairs", "d": "7/2015"}, {"body": "spicyj docs better make core usually use react core", "d": "7/2015"}, {"body": "ah yes", "d": "7/2015"}, {"body": "issue generally see planning add event many cases popups modals add backdrop element either transparent capture clicks others add toplevel listener document catch clicks tracks adding complete solution though manually calling addeventlistener case probably best", "d": "7/2015"}, {"body": "currently using mousetrap", "d": "7/2015"}, {"body": "using angular material react attributes layout introduced angular material nt work whitelisted attributes moment", "d": "7/2015"}, {"body": "based nfroidure approach serverside rendering eg rendering archaic table attributes html emails workaround experimenting using meantime", "d": "7/2015"}, {"body": "splitting could alternative module created allow archaic html attributes something like", "d": "7/2015"}, {"body": "want notify react still nt support svg mask attribute please nt mix mask tag ie next allowed using mask possible react removes attribute jsfiddle example details could found next comment", "d": "7/2015"}, {"body": "open separate ticket", "d": "7/2015"}, {"body": "still issue", "d": "7/2015"}, {"body": "fixed beta final well", "d": "7/2015"}, {"title": "nt work even base attr", "body": "hello getting error tried use error instantiation locationstrategy app gt router gt function platformstrategy href var thisplatformstrategy platformstrategy thissubject new eventemitter var browserbasehref ispresent href href thisplatformstrategygetbasehref isblank browserbasehref throw new baseexception base href set either provide binding appbasehreftoken add base element thisbasehref striptrailingslash stripindexhtml browserbasehref thisplatformstrategyonpopstate function return gt locationstrategy original error typeerror baseelementattr function original stack typeerror baseelementattr function getbaseelementhref browserdomadapterexecutebrowserdomadaptergetbasehref new executereflectioncapabilitiesfactory injectorexecuteinjectornew injectordynamicstrategyexecuteinjectordynamicstrategygetobjbykeyid injectorexecuteinjectorgetbykeyunbounded injectorexecuteinjectorgetbykey injectorexecuteinjectorgetbydependency injectorexecuteinjectornew error null instantiationerrorbaseexception instantiationerrorabstractbindingerror new instantiationerror injectorexecuteinjectornew injectordynamicstrategyexecuteinjectordynamicstrategygetobjbykeyid injectorexecuteinjectorgetbykeyunbounded injectorexecuteinjectorgetbykey injectorexecuteinjectorgetbydependency injectorexecuteinjectornew injectordynamicstrategyexecuteinjectordynamicstrategygetobjbykeyid already added attribute base head html ticket solved similar issue bootstrap app js import app appts import bootstrap bind import routerinjectables locationstrategy appbasehreftoken import reflector import reflectioncapabilities export function main reflectorreflectioncapabilities new reflectioncapabilities think error could line nt environment angular google chrome fedora necessary third party libraries traceur systemjs typescript many thanks", "num": "3441", "d": "7/2015"}, {"title": "develop linter looks nonprod code output", "body": "currently little idea ends output moreover would nice protect future regressions accidental inclusion nonprod code production output proposal introduce following annotations placed libraries classes functions methods annotates code meant run production sole field annotation describes reason example typescript prod uses browser dom apis export class domrenderer prod manipulates dom nodes function movenodesaftersibling sibling nodes annotates code run production sole field annotation describes reason example checker build checker would transformer installed file application transformer load generated json file verify none code marked annotating code work need make sure code well annotated end introduce travis build checker verifies every file repo meets one following conditions file annotated every toplevel member file annotated avoid big bang update entire repo annotate code two phases phase nonfailing warnings amp clean phase travis produce warnings fail build phase nonannotated code fails build travis fails build finds code annotated final state things", "num": "3440", "d": "7/2015"}, {"title": "root element injectors ordered properly presence ngfor", "body": "consider following view injectors containing textdirectives root injectors view ordered currently observed viewquery however general injector tree contraction dom tree cc tbosch", "num": "3438", "d": "7/2015"}, {"title": "remove need use generated reflector getterssetters element injector", "body": "allow us stop generating getterssetters polymorphic untyped slow execute closures contribute code size minified use string names", "num": "3436", "d": "7/2015"}, {"title": "generate event expressions change detectors instead using reflection", "body": "allow us stop generating getterssetters polymorphic untyped slow execute closures contribute code size minified use string names", "num": "3435", "d": "7/2015"}, {"title": "upgrade released typescript", "body": "would nice ensure codebase compile next version typescript could make another travis matrix build tricky part bringing different npm dependency version build discussion listing versions packagejson", "num": "3431", "d": "7/2015"}, {"title": "add dartshapeshift test watches breaking api changes", "body": "utility compares two versions package produces diff api proposal introduce test compares workspace version api currently checked version fails different make author change aware changes introducing public api prompt document breaking changes commit description", "num": "3430", "d": "7/2015"}, {"title": "pipes allow specify locale", "body": "see code uses ecma intl module get number date formatters moment seems hardcoded enus locale value passed able specify locale application somehow thanks", "num": "3429", "d": "7/2015"}, {"title": "listed twice changelogmd", "body": "second one looks like duplicate", "num": "3428", "d": "7/2015"}, {"title": "elements schema handwritten schema dart serverside compilation", "body": "environments dart sererside compilation ca nt properly detect properties available elements thus ca nt report dangling properties need handwrite schema environments based html specs dart apis etc important right ca nt give good error messages dart folks new parser straightforward implement also important security need whitelist properties ok write", "num": "3427", "d": "7/2015"}, {"title": "elements schema detect invalid events", "body": "detect report invalid event handlers builtin dom events customelement events need handcoded schema support also need take directive events account able remap event names example correctly handle events mixed dashcase", "num": "3426", "d": "7/2015"}, {"title": "elements schema detect dangling attributes", "body": "ideal world able detect dangling attributes example report dangling foo valid html attribute come identify valid attributes spec schema matching directive consumed binding event handler var declaration ngspecific construct prefixed practice dangling attributes templates probably attributes introduced due typos forgetting add directive annotation match given attribute", "num": "3425", "d": "7/2015"}, {"title": "elements schema support web components", "body": "today element schema dombased implementation nt detect web components correctly checks otherwise could allowing web component component dom element see correctly detecting bindings web component properties explore could better support web components environments js dart browser serverside compilation change schema accordingly", "num": "3424", "d": "7/2015"}, {"title": "export type definitions testlib", "body": "considered exposing typings module maybe even top level module use exposed methods unit tests components write think might case many others unless plan lib unit tests", "num": "3423", "d": "7/2015"}, {"title": "pipesextend type definition", "body": "looks like typings definition", "num": "3422", "d": "7/2015"}, {"title": "routerdts typings throws error used compile typescript assets", "body": "keep getting compile files use typings definitelytyped", "num": "3421", "d": "7/2015"}, {"title": "providing value unset isolated scoped var linked oneway binding longer works", "body": "prior version providing default value unset onebound variable working fine directive mydirective function return restrict scope dirvar template dirvar link function scope scopedirvar scopedirvar default introduced either bug conscious breaking change seen release notes worse happened minor version update plunker angularjs ver", "num": "3420", "d": "7/2015"}, {"title": "fragment creation code broken", "body": "faulty following fixes needed libsrcrenderdomutildart line make list growable listwrappercreategrowablesize fragmentsrootnodecount fragmentindex libsrcrenderdomviewprotoviewmergerdart lines add marker comment node beginning fragment fragmentsskip foreach nodes nodesinsert domcreatecomment line make growable copy child nodes return domchildnodesaslist domcontent fragmentelement tolist", "num": "3418", "d": "7/2015"}, {"title": "refactor di move di toplevel module", "body": "since modules live outside core example use di di moved module way dependents use di without dependency whole module", "num": "3416", "d": "7/2015"}, {"title": "refactor facade move facade separate toplevel module", "body": "process moving http module still requirement depend facades dependency injection facades moved toplevel package toplevel modules need depend right planning take finish since process fresh head waiting selfassign clear things plate", "num": "3415", "d": "7/2015"}, {"title": "throw", "body": "compiler throw", "num": "3412", "d": "7/2015"}, {"title": "benchpress work chrome events changed", "body": "benchpress report script time gc upcoming chrome changes tracing events script time reported category name used category gc time reported via category name used category different name also name reported category", "num": "3411", "d": "7/2015"}, {"title": "di stack trace lost binding failed created", "body": "instead seeing stack traceerror factoryconstructor binding failed see stack trace called", "num": "3408", "d": "7/2015"}, {"title": "angulardts show suggestion", "body": "angulardts showing suggestions components importing using visual studio code", "num": "3407", "d": "7/2015"}, {"title": "click event triggers ngmodel changes value", "body": "something like want checkbox clicked changes value itemcompleted fires click event happening click events get fired ngmodel changes value itemcompleted", "num": "3406", "d": "7/2015"}, {"title": "angular testability api require root node", "body": "right order get access angular testability api need know root node app example var el documentqueryselector rootselector windowgetangulartestability el whenstable however way identify root nodes page marked makes complicated write nonflaky webdriver tests whenstable api test author essentially provide root node selectors angular apps heshe wants wait fix either way query page root nodes testability api require root node", "num": "3404", "d": "7/2015"}, {"title": "rename requestcheck clarity", "body": "first saw method changedetectorref assumed manually run change detection others assumed well think descriptively named cc vsavkin", "num": "3403", "d": "7/2015"}, {"title": "host styling nt work root component", "body": "angular applies nghost attribute components uses css shimming host selector see example seem happen top level component angular application see root component selector root contain nghost attribute would expect components behave regardless whether root component nested component", "num": "3402", "d": "7/2015"}, {"title": "local variable camelcased", "body": "name local variable using camelcasing eg sizehandler use local variable another element angular throws error expected reason variable name camelcased eg throws error however change variable name lowercase eg sizehandler things work fine without error also simply declaring local variable camelcasing using component dom element error error seems occur change detection happens variable attempted evaluated change detection camelcasing used variable naming behavior consistent situations ie angular complain incorrect variable name angular loaded initially local variable naming rules documented perhaps already case please redirect documentation personally would like variable naming allow camelcasing quite common camelcased variable names programming world least allowed even considered best practice languages", "num": "3398", "d": "7/2015"}, {"title": "ngcontent select work content ngfor loop", "body": "providing element selector ngcontent tag contents transcluded example mycomponent template items caller template example components transcluded loop picked example", "num": "3397", "d": "7/2015"}, {"title": "remove", "body": "remove hostactions since agreed using elementref renderer directly better approach breaking change", "num": "3396", "d": "7/2015"}, {"title": "lifecycle exported public api", "body": "right way get hold import exported toplevel module well", "num": "3395", "d": "7/2015"}, {"title": "override events", "body": "hi possible override event function need component standard behaviour certain times want override event came outside component either small hack since inside topbar component callback function standard passed parameter possible override events least check anyone outside component listening event outside topbar component inside topbar component result using option prints close view inside component using option b prints close view outside component prints close view inside component", "num": "3392", "d": "7/2015"}, {"title": "shall allow component web component", "body": "working schema support stumbled upon situation let say got real web components produces content question would shall allow component directives real web components would get us situation parties competing creating shadow dom entries currently got test assumes component matched given dom element element ca nt web component kind backwards would rather say nt allow component directives web components tbosch imo test wrong replace logic compiler either properly detect web components disallow components web components cc mhevery", "num": "3391", "d": "7/2015"}, {"title": "dart using routerdirectives view annotation crashes browser", "body": "using dartium error exception uncaught error find method onclick idea causing thanx advance", "num": "3387", "d": "7/2015"}, {"title": "implement ngvaluechecked ngvalueunchecked", "body": "using checkbox inputs great also get input rather boolean input checked would similar also relate form posted checkbox submitted input nt value value would submitted plnkr form control telling checkboxes checked really like know values rather crossreference somewhere else code means value", "num": "3385", "d": "7/2015"}, {"title": "binding nt work value attribute element", "body": "sample illustrates see progress element stays seen angular", "num": "3384", "d": "7/2015"}, {"title": "global export", "body": "started playing public built code version doesnt export global object intentional", "num": "3382", "d": "7/2015"}, {"title": "router link stop event propagation", "body": "click router link stop event propagation prevent default action typical use case bootstrap dropdown item close click link routerlink routerlink stop event propagation", "num": "3381", "d": "7/2015"}, {"title": "dynamic classes", "body": "angular used create dynamic classes using see angular use way", "num": "3380", "d": "7/2015"}, {"title": "use released typescript", "body": "upgrade upstream typescript resolved", "num": "3379", "d": "7/2015"}, {"title": "proposal observable wrapper socketio", "body": "modern web applications often make use powerful communication abstraction http provides technologies like longpolling websockets make possible bidirectional communication stream user agents backends popular socketio library expands abstraction offering namespaced communication message acknowledgement reconnection selection appropriate transport depending backend capabilities propose building abstraction bidirectional communication capabilities angular based observable standard utilized rest framework abstraction would promote usability testability bidirectional backend communications angular applications given many angular customers utilize socketio capabilities already propose basing new abstraction socketio providing implementation wrapper thus angular users could enjoy observablesbased interface socketio capabilities provides hood namespaced communication client subscribe specific topicsnamespaces optional acknowledgement message receipt transport fallback long polling jsonp web sockets available automatic reconnection event network instability addition socketio implementation provide mock implementation enable easy testing apps rely bidirectional connection backends", "num": "3376", "d": "7/2015"}, {"title": "allow users specify parts event string run ui thread", "body": "currently nulling anything event object ca nt serialized passed worker way specify specific values passed worker event", "num": "3374", "d": "7/2015"}, {"title": "inconsistency properties syntax events", "body": "properties define property properties const propertyname fine translate propertyname html also internalname propertyname fine well strange kind ok behavior even internalname propertyname autotranslate propertyname problem events option broken ie events const eventctrl eventname able eventname callthing", "num": "3371", "d": "7/2015"}, {"title": "convert hyphencase camelcase componentdirective properties", "body": "currently specifying property camel case like works attributes written hyphens like conversion also work way intuitive list properties component exact strings accessed template", "num": "3369", "d": "7/2015"}, {"title": "syntax error source file cause stop serving", "body": "developing app dart using error source file cause become unresponsive", "num": "3368", "d": "7/2015"}, {"title": "replace currentproto currentbinding", "body": "currently use currentproto generate good error messages need binding currentproto replace currentproto field currentbinding case nt reassign currentproto every single proto record", "num": "3366", "d": "7/2015"}, {"title": "fix use jsonpbindings httpbindings injector", "body": "create injector follows http use jsonpbackend instead xhrbackend injectables bind abstract class specific implementation able easily fixed binding factories dependencies concrete backends instead overriding bindings", "num": "3365", "d": "7/2015"}, {"title": "support svg browsers without elements", "body": "cases serializing templates strings see right breaks svg support parsing via create right nodes also angular assumes many places browsers support element breaks eg", "num": "3364", "d": "7/2015"}, {"title": "component use inject already rendered view", "body": "hi let say browser already rendered html contains view would like use component scenario supported thank", "num": "3362", "d": "7/2015"}, {"title": "transformer template inlined class format different", "body": "using legal dart transformer nt seem like dart abstract class foomixin abstract class barbase component selector baz view template package bazbazhtml class bazcomponent barbase foomixin work change slightly", "num": "3360", "d": "7/2015"}, {"title": "gulp throws cryptic error dist directory already present", "body": "already built following error shows run", "num": "3358", "d": "7/2015"}, {"title": "configure router json file", "body": "hi would like know possible configure router data json file yes small example code would helpful achieve thank", "num": "3357", "d": "7/2015"}, {"title": "investiage high memory usenode count benchmark app switching views", "body": "internal node count repeatedly created destroyed crashed chrome tests", "num": "3356", "d": "7/2015"}, {"title": "ngif myarray index binding like myarray index", "body": "use access array element ngif scope scopemyarray array scopeindex index use interpolate finding good example", "num": "3354", "d": "7/2015"}, {"title": "chinese input", "body": "plunker think input value change keypress event", "num": "3352", "d": "7/2015"}, {"title": "support custom events webworker apps", "body": "currently support limited subset events specified webworkersuiimplts like somehow support userdefined events custom serializers", "num": "3350", "d": "7/2015"}, {"title": "remove mirrors serializer code dart", "body": "currently using webworkersuieventserializerdart", "num": "3348", "d": "7/2015"}, {"title": "fuse expressions", "body": "expression currently generating checking code separately want combine one checking expression done ts side fusing proto records", "num": "3343", "d": "7/2015"}, {"title": "move fields change detectors", "body": "currently generated change detectors declare field per checked expression fields need typed therefore exist superclass today dart class foodetector var oldvalue detectchangesinrecords var newvalue loosenotidentical newvalue oldvalue notify newvalue oldvalue newvalue shared fields class var class foodetector extends gone var oldvalue detectchangesinrecords var newvalue loosenotidentical newvalue notify newvalue newvalue", "num": "3342", "d": "7/2015"}, {"title": "provide mechanism conditionally exporting type js dart", "body": "want document link type langts js api docs correctly link dart docs dartdoc side need make sure working", "num": "3341", "d": "7/2015"}, {"title": "chore remove unused properties request response", "body": "properties added objects nt anything right like credentials mode cache added consistency constructs defined fetch spec removed behavior designed", "num": "3339", "d": "7/2015"}, {"title": "chore ci add check git message formatting", "body": "script runs travis enforce git commit message guidelines prevent accidental merging commits messages nt conform requirements established yes would slight inconvenience wip prs worth assurance preventing pushes master forgetting check commit message needing forcepush fix", "num": "3337", "d": "7/2015"}, {"title": "fix router linking redirects", "body": "example link parent grandchild would work link default child routeconfig path child component childcmp child class parentcmp view template routeconfig path redirectto default path name component usercmp name class childcmp way provide defaults params might cover use case link default child routeconfig path child component childcmp child class parentcmp view template routeconfig means fill params nt present values path name component usercmp name defaults name default class childcmp alternatively could mark certain child routes default would work link default child routeconfig path child component childcmp child class parentcmp view template routeconfig path redirectto default default true means choose children path name component usercmp name class childcmp", "num": "3335", "d": "7/2015"}, {"title": "docs router add documentation lifecycle hooks", "body": "added", "num": "3334", "d": "7/2015"}, {"title": "issues ecmascript internationalization api", "body": "running unit tests nonchrome browsers raised doubts api currently used date currency pipes start supported safari versions desktop mobile older browsers browsers support result nt match chrome firefox one test fires years old bug tests failing due discrepancies output formatting white space special chars etc end day seems reliable chrome also difficult polyfill anyone good solution please speak", "num": "3333", "d": "7/2015"}, {"title": "dart provider http error", "body": "hi started friendship thought try dart becaouse love language anyway try write n todo example want simple restful backend backend ready start developing client get xhr part get confused code dart import package import package show http baserequestoptions xhrbackend import package show reflector import package show reflectioncapabilities var injector injectorresolveandcreate baserequestoptions xhrbackend bind http tofactory backend defaultoptions gt new http backend defaultoptions xhrbackend baserequestoptions class todo string createdat string updatedat string todo injectable class todoservice http todoservice http thishttp component selector todoapp viewinjector const todoservice view template create new item add todo index todo done todo directives const ngfor class todoapp todoservice todoserv todoapp todoservice service thistodoserv service list todos phone calls friends take garbage systemgc list done done addtodo input todosadd inputvalue inputvalue setdone int index string todo todosremoveat index doneadd todo main reflectorreflectioncapabilities new reflectioncapabilities bootstrap todoapp run pub serve server stand get error console uncaught uncaught error provider http todoapp todoservice http stack trace provider http todoapp todoservice http dartwrapexception injectordartinjectorgetbykey injectordartinjectorgetbydependency injectordartinjectornew injectorinlinestrategydartinjectorinlinestrategygetobjbykeyid injectordartinjectorgetbykey injectordartinjectorgetbydependency injectordartinjectornew injectorinlinestrategydartinjectorinlinestrategyhydrate elementinjectordartelementinjectorhydrate anonymous function nt know maybe bug http injectable nt get whats going", "num": "3331", "d": "7/2015"}, {"title": "watchgroup unexpected behaviour", "body": "using watchgroup watch range fields trigger range functions depending particular field changed set following plnkr demonstrate unexpected behaviour came across scope watchgroup first second third function newvalues oldvalues var message first newvalues second newvalues third newvalues firstold oldvalues secondold oldvalues thirdold oldvalues scenario involves three watched fields like trigger function depending field changed using newvalues oldvalues monitor field changed problem came across changed second field go change first third field second function triggered storing previous newvalues oldvalues makes look like second field changed demonstrated image highlighted anomaly picture expect started changing third field newvalues oldvalues second nt field changing angular documentation watchgroup states watchexpressions array expressions individually watched using watch makes think nt intended functionality clarification bug intended functionality would appreciated", "num": "3327", "d": "7/2015"}, {"title": "update dgeni docs templates harp", "body": "harp vars must declared need update templates possibly", "num": "3325", "d": "7/2015"}, {"title": "multiple apps page time css conflict", "body": "environment run multiple separate angular applications page css emulation uses static application counter determine css class names multiple apps page conflict code contained propose making nextcomponentuid feed variable page space instead value application", "num": "3324", "d": "7/2015"}, {"title": "limitto pipe list throws change detection exception dartium checked mode", "body": "foodart import package component selector foocomponent view templateurl package foohtml class foocomponent list foolist foo bar baz foohtml f stack trace happens run dartium checked mode seems work fine checked mode turned", "num": "3321", "d": "7/2015"}, {"title": "change detection needs fire allviewchangesdone callback", "body": "would similar allchangesdone include change detectors view tree needed viewquery fire onchange callback guaranteeing directives might materialized cd turn see failing test", "num": "3319", "d": "7/2015"}, {"title": "analyze code size hello world app dart", "body": "used gzipped minified need find code coming develop plan eliminating dead code", "num": "3315", "d": "7/2015"}, {"title": "question webcomponents vs", "body": "hi unterstand wo nt real web components lightversion web components able work web components seamlessly wondering take write real web components angular plans wishes manfred", "num": "3313", "d": "7/2015"}, {"title": "broken tests development mode", "body": "turns following commands run tests executed bunch tests inside keyeventsspects fail keyevents display correct key names message expected equal enter stack error failed expectation object message expected shift equal shiftenter stack error failed expectation object message expected controlshift equal controlshiftenter stack error failed expectation object message expected equal space stack error failed expectation object message expected equal u stack error failed expectation object message expected control equal controlb stack error failed expectation object message expected equal stack error failed expectation object message expected alt equal stack error failed expectation object message expected control equal stack error failed expectation object keyevents correctly react specified key message expected equal pressed shiftenter stack error failed expectation object", "num": "3311", "d": "7/2015"}, {"title": "bootstrap return values unusable transform", "body": "way rewrite calls makes impossible use even assign result variable example transformer rewrites nt allow user use app reference cc tedsander kegluneq ref", "num": "3309", "d": "7/2015"}, {"title": "provide error context event handler throws exception", "body": "see", "num": "3308", "d": "7/2015"}, {"title": "dynamic change detectors wrap exceptions", "body": "currently wrap exceptions thrown expression evaluation wrap exceptions happen change detection", "num": "3307", "d": "7/2015"}, {"title": "ngswitch using syntax", "body": "manipulating dom unless miss something called using like another value maybe would make sense something like another value would closer user", "num": "3306", "d": "7/2015"}, {"title": "nested componentsviewstemplates", "body": "hi would like create nested components reduce amount html goal first read coul nt understand solve also created thread people easily get possible answer reason want apply huge html present viewcontainer component somewhere referenced topbar component list ngfor custombutton need support event called viewcontainer managed using components properties goes topbar component html topbar component could something like refcustombutton html nt work way ca nt exatly define callbacks eventemitter viewcontainer component possible read shadow dom searched git issues could nt find anything searched nested components nested views nested templates shadow dom missing best regards tiago braga", "num": "3305", "d": "7/2015"}, {"title": "styleurlresolver strips quotes inlined svg styles", "body": "following css added component following css added document notice quotes stripped inlined svg causes svg rendered incorrectly believe bug styleurlresolver shortcut regular expressions svgs rendered correctly", "num": "3304", "d": "7/2015"}, {"title": "feature di better developer story large applications", "body": "current di system compared something like guice limitations large internal clients finding lacking use term mean dart least requests internal clients two modules would resolve bindings differently option warn throw would used help detect may intend binding overriden dart const servicebindings const const binding mapsservice toclass defaultmapsservice const debugbindings const const binding mapsservice toclass debugmapsservice accidentally override defaultmapsservice debugmapsservice mode debug may want print console throw something void main bootstrap servicebindings debugbindings required binding marker remind developers fillin implementations flags dart const mapsserviceprefixtoken const opaquetoken mapsserviceprefix const servicebindings const const binding mapsservice toclass defaultmapsservice const requirebinding mapsserviceprefixtoken reason define api prefix use mapsservice token type bindings throw earlier dart const mapsserviceprefixtoken const opaquetoken mapsserviceprefix const servicebindings const const binding mapsserviceprefixtoken throw fast devmode x reduce cost duplicaterebinding resolving bindings possible build time already done dart const servicebindings const const binding mapsservice toclass defaultmapsservice const mapsrenderingbindings const servicebindings otherbindings binding two identical runtime even though resolve exactly could detect build time void main bootstrap servicebindings mapsrenderingbindings related issues add create subissues makes current system easier digest requires input tedsander yjbanov possible pushing misko victor", "num": "3303", "d": "7/2015"}, {"title": "longer working alpha", "body": "consider example typescript import component view bootstrap component selector app view template class app bootstrap app html would expect content appear page fact actual content tags used work alpha ca nt find anything related changelog", "num": "3301", "d": "7/2015"}, {"title": "fix typings return", "body": "", "num": "3299", "d": "7/2015"}, {"title": "lifecycle events available livecycleevent enum since alpha mention changelogmd", "body": "hi since lifecycle events available enum since alpha mentioned changelogmd document regards josef", "num": "3298", "d": "7/2015"}, {"title": "find right", "body": "javascript function find c abstractcontrol path list string isblank path return null path instanceof list path stringwrappersplit path new regexp path instanceof list amp amp listwrapperisempty path return null return listwrapperreduce gt path v name gt v instanceof controlgroup return ispresent vcontrols name vcontrols name null else v instanceof controlarray var index name return ispresent vat index vat index null else return null c return lambda function handle list path param null arrayreduce execute function next time think code like javascript function find c abstractcontrol path list string isblank path return null path instanceof list path stringwrappersplit path new regexp path instanceof list amp amp listwrapperisempty path return null var rtn listwrapperreduce gt path v name gt v instanceof controlgroup return ispresent vcontrols name vcontrols name v else v instanceof controlarray var index name return ispresent vat index vat index v else return v c return rtn c null rtn", "num": "3297", "d": "7/2015"}, {"title": "chinese input", "body": "like input characters", "num": "3296", "d": "7/2015"}, {"title": "nt support remove browseradapterts", "body": "get error message simple application end text sorry first two messages german nt get switch ie english language typeerror das objekt unterst\u00fctzt die eigenschaft oder methode remove nicht typeerror das objekt unterst\u00fctzt die eigenschaft oder methode remove nicht clearnodes appendcomponentnodestohost mergecomponent mergecomponents mergeprotoviewsrecursively mergeprotoviewsrecursively anonymous function mergeunmergedprotoviews import component view bootstrap component selector app view template export class myappcomponent constructor bootstrap myappcomponent chrome firefox nt show error message also behave strange zippy example nt work div shownhidden click mouse setup typescript visual studio vs code angular alpha windows", "num": "3295", "d": "7/2015"}, {"title": "onchange triggered anymore via directive property binding", "body": "repo running code reproduce issue check readme running instructions issue custom directive trying pass input value via property binding component template trigger directive binding button get clicked click handler get executed property input data changed custom directive never sees new value via lifecycle callback like used custom directive directive selector customdirective properties input lifecycle onchange export class custom constructor consolelog directive constructor called", "num": "3293", "d": "7/2015"}, {"title": "fix typings include routeroutlet constructor signature type definitions", "body": "sample error something along lines extending routeroutlet generated type definition include constructor signature compiling something like gives typescript warnings", "num": "3291", "d": "7/2015"}, {"title": "add type information state amp local variables change detectors", "body": "example right variables using actual types may allow remove interceptors potentially catch bugs early running checked mode", "num": "3285", "d": "7/2015"}, {"title": "dirty check intermediate results", "body": "point dirty check intermediate results expressions like dirty check intermediate results arguments pure function", "num": "3284", "d": "7/2015"}, {"title": "change detectors protorecord reuse single stateless detector", "body": "dart size see changedetectorcodegendart search generates static factory method returning change detector class empty change detectors return handwritten class constructor similar", "num": "3283", "d": "7/2015"}, {"title": "routerdts untested", "body": "need sanity test router dts file target update router definitelytyped fails definitelytyped tests example instruction class referenced defined ca nt release typings router fixed", "num": "3282", "d": "7/2015"}, {"title": "dart serve package urls relative approoturl", "body": "work better nonpub servers context", "num": "3281", "d": "7/2015"}, {"title": "webworkers applicationcommonts lot duplicate code", "body": "webworkersworkerapplicationcommonts duplicates lot code coreapplicationcommonts primarily duplicating di bindings talked vsavkin today current plan move export bindings webworker needs separate file import file coreapplicationcommonts webworkersworkerapplicationcommonts", "num": "3277", "d": "7/2015"}, {"title": "specifying lifecycle interfaces causes invalid generated code", "body": "repro would cause transformer generate following", "num": "3276", "d": "7/2015"}, {"title": "systemjs slow reexporting", "body": "steps reproduce delete everything starting line add try running examples hello world observe takes seconds launch app", "num": "3275", "d": "7/2015"}, {"title": "define style encapsulation components annotation", "body": "goal right components contain configuration compiler needs analyze annotation however way style encapsulation defined globally components via easily break reuse component projects component expects style encapsulation using application disables style encapsulation proposal add field annotation values seems verbose solution array see examples component work application wo nt side effect making green component would application used right", "num": "3273", "d": "7/2015"}, {"title": "structural assertions component nesting", "body": "gloal html parsers know inside elements allowed something similar angular components would prevent user errors like ca nt see element xzy would also allow nice tooling support eg auto completion child elements template editor proposal add assertions around elements non whitespace text light dom angular component projected throw see support attributes allow define many elements projected given note possible content projection already compilation ie know elements projected examples tab component requires exactly one child element one child element label body class tab usage label hello usages would detected errors hello label", "num": "3272", "d": "7/2015"}, {"title": "idea specify bindings annotations decorators methods rather host configuration", "body": "would nt nicer something like javascript component selector comp view template export default class comp property expression attrtest set testprop value string event name click stoppropagation false onclick event mouseevent rather know gon na bit different working template nt think much convenient", "num": "3267", "d": "7/2015"}, {"title": "consume rest service basic authentication", "body": "hi java rest services consumer angularjs services json based expect basic authentication usernamepassword agjs used factory code found google creating basic authentication token username password able consume services successfully read http class agjs documentation nt find information basic authentication could anybody please provide sample code consume rest services angularjs using basic authentication thanks advance best regards agjs code var url number basic username password applicationjson", "num": "3266", "d": "7/2015"}, {"title": "routeconfig non existing components issue", "body": "hi quick pain came across route config route non existing component error thrown fact application nt even load stay awesome tiago braga", "num": "3265", "d": "7/2015"}, {"title": "import formbuilder component throw error", "body": "error message resolve parameters xxxx make sure valid type annotations right", "num": "3263", "d": "7/2015"}, {"title": "iso string support date pipes", "body": "new date pipe supports date objects numbers iso strings valid made displaying simple json api ui easy little conversion process plunker behavior date filter iso", "num": "3261", "d": "7/2015"}, {"title": "support popular package managers outofthebox", "body": "capability set package relative urls currently support pub provider resolvers npm bower webpack jspm", "num": "3257", "d": "7/2015"}, {"title": "local vars makes sense one read", "body": "moves field access local vars save multiple access ads code size se notice one read may well access field directly change perf example dart void detectchangesinrecords throwonchange var context null lt var null var null var changecontext false lt var false var false var ischanged false currentproto null var changes null becomes dart void detectchangesinrecords throwonchange var null var null var false var false var ischanged false currentproto null var changes null", "num": "3255", "d": "7/2015"}, {"title": "expecting content transclusion wo nt happen failthrow fast", "body": "example define outlet effectively nothing best case wasting ops worst case cause errors underlying elements may expect dom", "num": "3254", "d": "7/2015"}, {"title": "generate dev mode", "body": "code needs generated code running dev mode prod mode throwonchange always falls", "num": "3253", "d": "7/2015"}, {"title": "remove leaf operations sideeffects", "body": "lot statements code make sense next item following leaf removed example dart var false needed notice else assignment end needed would next item dereferencing dart currentproto protos null genlooseidentical throwonchange genchangedetectionutilthrowonchange protos genchangedetectionutilsimplechange requires form detecting leaves stripping vars used chaining", "num": "3252", "d": "7/2015"}, {"title": "tooling determine resolved bindings given app entrypoint component", "body": "know sort tool like angular", "num": "3251", "d": "7/2015"}, {"title": "reused ngfor elements nt clear old css classes", "body": "smallish reproduction case dart component selector example view directives const ngfor cssclass template increment item class examplecomponent var next var items void increment items next happens example click increment button times resulting dom html instead expect div class contain instead numbers", "num": "3249", "d": "7/2015"}, {"title": "general code generation cleanups", "body": "normalize string interpolation x replace note require import method think creates extra unneeded checks simple string concat better case inline assignments x take advantage multiple assignments per line becomes x also call constructor nt duplicate code constructor inline assignments usages inline ever possible becomes helper create super notice always view code longer abstract use concrete names becomes requires method superclass x allow us change one char everywhere inline context assignment unused x code never used output never read change method call static field x save chars", "num": "3248", "d": "7/2015"}, {"title": "refactor hydratedehydratehydrated superclass", "body": "currently dart void hydrate acxtablecomponent context locals directives pipes mode alwayscheck context context locals locals directivesgetdirectivefor directiverecords directiveindex directivesgetdirectivefor directiverecords directiveindex void dehydrate context null genchangedetectionutiluninitialized genchangedetectionutiluninitialized genchangedetectionutiluninitialized genchangedetectionutiluninitialized locals null pipes null hydrated gt context null proposal moved super class dart void hydrate acxtablecomponent context locals directives pipes mode alwayscheck context context locals locals alreadychecked false pipes pipes hydratedirectives void hydrate void dehydrate context null locals null pipes null dehydratedirectives void dehydratedirectives hydrated gt context null dynamic getdirectiveatindex int index return directivesgetdirectivefor directiverecords index directiveindex stay subclass dart void hydratedirectives getdirectiveatindex getdirectiveatindex void dehydratedirectives null null todo move common superclass super call generated subclass methods nonzero directives implement superclass move superclass", "num": "3245", "d": "7/2015"}, {"title": "move callonallchangesdone super override necessary", "body": "cds generate usually needed directive implement relatively rare move code superclass override method need create behavior different shown example", "num": "3244", "d": "7/2015"}, {"title": "move common fields supercalss", "body": "currently generated cd dart class extends genabstractchangedetector final dynamic dispatcher genpipes pipes final genlist lt genprotorecord gt protos final genlist lt gendirectiverecord gt directiverecords dynamic locals null dynamic alreadychecked false dynamic currentproto null acxtablecomponent context null dynamic genchangedetectionutiluninitialized dynamic genchangedetectionutiluninitialized dynamic genchangedetectionutiluninitialized dynamic genchangedetectionutiluninitialized thisdispatcher thisprotos thisdirectiverecords super dart class extends basechangedetector lt gt dynamic genchangedetectionutiluninitialized dynamic genchangedetectionutiluninitialized dynamic genchangedetectionutiluninitialized dynamic genchangedetectionutiluninitialized dispatcher protos directiverecords super dispatcher protos directiverecords todo move move move move move move remove needed inlined directly move rewrite constructor", "num": "3243", "d": "7/2015"}, {"title": "shrink generated change detector code size", "body": "build step apps large numbers components gt running memory abstracting duplicated boilerplate code generated change detectors utilities andor give less code process help memory pressure", "num": "3242", "d": "7/2015"}, {"title": "bug webworker destroyview remove view store", "body": "currently views ever added view store along fragments properly removed destroyed", "num": "3240", "d": "7/2015"}, {"title": "dangling view data due failed hydration causes unexpected behavior", "body": "hydration fails partway clean view state created causes kinds unexpected behavior running change detection nonexistent things bogus log messages etc", "num": "3239", "d": "7/2015"}, {"title": "ngcontent transclusion compiler fails interpolated text mixed selector", "body": "removing works properly", "num": "3236", "d": "7/2015"}, {"title": "docs dgeni provide way document xlink vars functions types", "body": "currently able use crosslink documentation classes would useful able also link back vars including const functions types example like define type exported line langts provide documentation linked possible think currently implemented", "num": "3235", "d": "7/2015"}, {"title": "abstractchangedetector swallows stack trace", "body": "wraps least dart results partial stack trace", "num": "3234", "d": "7/2015"}, {"title": "handling data store changes event emitters di", "body": "hi trying set sample ecommerce application right series products ability add shopping cart check shoppingcartstore currentshoppingcart property collection products call method store add product cart fire productadded event want components able subscribe javascript import injectable inject import shoppingcart modelsshoppingcart import eventemitter var currentcart shoppingcart new shoppingcart injectable export class shoppingcartstore public productadded eventemitter new eventemitter issue use viewinjector inject shoppingcartstore application register event appears component gets new copy shopping cart store means addtocart gets called one component thisproductadded nt observers associated even though component subscribed code subscribing event something differently data stores treated treated singletons could turn class static methods getinstance assume would lose ability inject via di makes less testable javascript import component view import injectable inject import product modelsproduct import shoppingcartstore servicesshoppingcartstore import observablewrapper eventemitter component selector cartsummary viewinjector shoppingcartstore view templateurl componentscartsummarycartsummaryhtml export class cartsummary shoppingcartstore shoppingcartstore made far thanks reading helpguidance would appreciated thanks bryan", "num": "3233", "d": "7/2015"}, {"title": "darttransformer support prefixed identifiers within directive aliases dart", "body": "adds support directive aliases simple identifiers supported might worth future adding support referring types prefixes well parsing easy main complexity deal merging ngmeta amp flattening need way normalize prefixes", "num": "3232", "d": "7/2015"}, {"title": "components listen event streamsemitters even listener template", "body": "quick repo dart import dart async component selector areyoulistening events const event view template haslistener class areyoulistening final eventcontroller new streamcontroller stream get event gt eventcontrollerstream bool get haslistener gt eventcontrollerhaslistener expected false unless used actual true", "num": "3231", "d": "7/2015"}, {"title": "domelementbinder hasnativeshadowroot null false resulting npe", "body": "reported internally hotfixed accordingly needs fixed next release domrenderer check used actually see problem across angular code base bools set false people instead use check first seems error prone", "num": "3230", "d": "7/2015"}, {"title": "bug typeerror undefined function evaluating safari using eventemitter", "body": "safari throws following error page load chrome firefox work fine topbarts import component view ngif import routerlink import material srcdirectivesmaterial import storage srcservicesstorage import sidebar srcservicesuisidebar import sessionfactory srcservicessession component selector topbar viewinjector storage sidebar view templateurl templatescomponentstopbarhtml directives ngif routerlink material export class topbar loggedin false session sessionfactorybuild sessionts sesions import eventemitter injector bind export class session loggedinemitter new eventemitter useremitter new eventemitter var injector injectorresolveandcreate bind session tofactory gt return new session export class sessionfactory static build return injectorget session", "num": "3227", "d": "7/2015"}, {"title": "implement library import directive processor", "body": "following method implemented restricts splitting code dart", "num": "3226", "d": "7/2015"}, {"title": "property found called template angular throws fatal error blows", "body": "property nt exist called template fatal error thrown angular blows sometimes unavoidable example malformed api response main problem prevents subsequent activity ie router links wont navigate anymore suggest catch error silently", "num": "3223", "d": "7/2015"}, {"title": "child component root parent component get rendered", "body": "reason parent component view consists child component child component get rendered anymore happens use used like shown nt inject shadowdominjectables created visible previous url everything seems work fine also works wrap another dom element", "num": "3222", "d": "7/2015"}, {"title": "bug getbaseelementhref browseradapter", "body": "hi changed newest alpha build came across error solved adding base tag indexhtml file like done got new error see would appear someone tried call function attr exist particular object syntax almost makes seem like attr function jquery downloaded source instead loading directly cdn changed line vanilla javascript everything working fine seems like something bring attention best regards andr\u00e9", "num": "3220", "d": "7/2015"}, {"title": "typeerror illegal invocation", "body": "typeerror illegal invocation isarraylike foreach copy copy copy copy copy copy copy copy undefined", "num": "3219", "d": "7/2015"}, {"title": "gettestability whenstable never returns using busy websockets", "body": "sounds like designed behaviour putting see workaround perhaps something large angular app uses rabbitmq websocket open stomp trying use protractor test protractor makes heavy use whenstable ensure page stable running tests however run instance app traffic couple messages coming second noticed outstandingrequestcount angular browser sky rockets sits naturally tests time waiting protractor sync way get ignore websocket traffic need something stop requests present requests seem coming defer function browser ideas", "num": "3218", "d": "7/2015"}, {"title": "override xmlhttprequest comes", "body": "jquery ajax specify function xhr equivalent angular", "num": "3217", "d": "7/2015"}, {"title": "forward declaration parent child dependency injection user friendly", "body": "describes problem also visual studio typescript solution using nt think user friendly cause normal use case parent component uses child component child component tries inject parent component result forward declaration requires line code leads constructors always need preferred way handle parentchild di better way ts thanks best regards josef", "num": "3216", "d": "7/2015"}, {"title": "docs dgeni datajson files nt getting generated", "body": "pete look run files generate fine nt get datajson files synced", "num": "3212", "d": "7/2015"}, {"title": "change router typescript", "body": "exmaple use routerlink like change router start typescript code", "num": "3210", "d": "7/2015"}, {"title": "feat router api determining route active", "body": "come across challenge using new router build navigation menu tabs tab contains link route different component takes html home forum routeconfig new route path home want add css class corresponding tab selected order create component method root component something like gets even complex url paths grow seeing value already attached route could somehow relayed router something like child routes could implement reverse list routes going current router root something like js would work routerisactive forumpost would also work routerisactive forumpost forum could also maybe reuse routerlink builder syntax sound", "num": "3209", "d": "7/2015"}, {"title": "routerlink ca nt eval function", "body": "use like", "num": "3208", "d": "7/2015"}, {"title": "monkey patch window object within angular webworkers", "body": "currently webworker examples use loaderjs monkey patch window object needs happen within angular user nt slightly complicated depend libraries expect window object already patched loaded zonejs specifically maybe others", "num": "3207", "d": "7/2015"}, {"title": "regression unconditional component cycle using dynamiccomponentloader", "body": "much share externally stracktrace tests nt catch even though maybe test environment subtly different", "num": "3206", "d": "7/2015"}, {"title": "webworker naming inconsistent", "body": "use worker webworker webworker interchangeably throughout codebase pick one stick suggest webworker", "num": "3205", "d": "7/2015"}, {"title": "changelog nt show breaking change", "body": "example looks like one breaking change commits breaking change description example", "num": "3204", "d": "7/2015"}, {"title": "statictreetreebenchmarkts dart results deviate much baseline", "body": "note js baseline close dart slower javascript baseline dart baseline", "num": "3200", "d": "7/2015"}, {"title": "angularmerge turns regexps empty objects", "body": "yields yields", "num": "3199", "d": "7/2015"}, {"title": "query able find transcluded children", "body": "sure component belongs pretty nasty reported internally dart component selector rootcomponent view directives const querycomponent contentcomponent template click class rootcomponent querylist components rootcomponent query querycomponent thiscomponents void onclick print componentslength output component selector contentcomponent view directives const template class contentcomponent component selector querycomponent view directives const template toquery class querycomponent tried using query getting really weird behavior first first attempt interaction get randomly disappear appear descendants true calling reset querylist removal element multiple times nt adding back array ngfor got element added tried using directly listening listen onchange behaved even randomly", "num": "3197", "d": "7/2015"}, {"title": "nt import cleanly new definitelytyped", "body": "done still get errors copying generated dts across definitelytyped eg", "num": "3195", "d": "7/2015"}, {"title": "add tests fully cover generated change detector output", "body": "see reference nt necessarily want template compiler tests test give full coverage generated change detectors documentation debugging sanity checking purposes", "num": "3194", "d": "7/2015"}, {"title": "upgrade npm", "body": "npm solve many issues around nodemodules inconsistent state shrinkwrap issues changelog still beta need test well jumping bug track issues found testing way verify state nodemodules copying shrinkwrapjson fingerprint compatible fact unnecessary remove npm postinstall new dedupe algorithm changes paths dts files tslint paths neeed updated update travisyaml update gulpfilejs update dependencies reshrinkwrap dependency tree resolve issues peerdependencies work differently must explicitly required parent component benchmark difference install time using travis", "num": "3193", "d": "7/2015"}, {"title": "css class odd behaviour", "body": "hi came accross odd behaviour binding css classes html elements supposed use expression class property example html element css class properties visible html background color see used expression bind class element output hyphens instead capital letters expected output class menuitembluecolor way class exists expected output would background color best regards tiago braga", "num": "3192", "d": "7/2015"}, {"title": "experimentaldecorators find module", "body": "min quickstart guide run get error error option experimentaldecorators must also specified option emitdecoratormetadata specified added experimentaldecorators parameters list command get error log appts error find module though causing sort error application client end", "num": "3188", "d": "7/2015"}, {"title": "angulario error", "body": "ctrlf hi find hello name name name thank much", "num": "3187", "d": "7/2015"}, {"title": "question communicate events", "body": "asking gitter channel luck idea pretty much question make different components communicate events parentchild type components like let say emmited event called listens", "num": "3186", "d": "7/2015"}, {"title": "support type annotations functions", "body": "written", "num": "3183", "d": "7/2015"}, {"title": "directivemetadatareader take lifecycle interfaces account", "body": "right directivemetadatareader correctly populate lifecycle booleans lifecycle interfaces implemented result interfacebased lifecycle methods work mirror mode fail transformed mode workaround explicitly declare lifecycle methods parameter", "num": "3181", "d": "7/2015"}, {"title": "directives ngfor takes protoview somewhere", "body": "", "num": "3180", "d": "7/2015"}, {"title": "turn typechecking typescript target", "body": "", "num": "3178", "d": "7/2015"}, {"title": "static methods missing", "body": "reported current published dts contains original source contains", "num": "3175", "d": "7/2015"}, {"title": "default pipes default", "body": "alpha default pipes default application bootstrapped without extra configuration following code gets rendered instead typescript setup problem reproduced like clone npm install gulp servedev add code string get uppercased apparently default pipes indicated", "num": "3173", "d": "7/2015"}, {"title": "conventionalchangelog release", "body": "wondering guys cool switch latest version issues changelog related repos fixed rewrite syntax completely changed people using using nt found problems far related modules conventionalgithubreleaser also good use need tests tests comprehensive", "num": "3172", "d": "7/2015"}, {"title": "angular router error use cssclass directive", "body": "html link angular router throw errors syntaxerror failed execute add domtokenlist token provided must empty stacktrace error failed execute add domtokenlist token provided must empty error native browserdomadapterexecutebrowserdomadapteraddclass domviewexecutedomviewsetelementclass executecssclasstoggleclass iterablechangesexecuteiterablechangesforeachaddeditem executecssclassapplyarraychanges executecssclassoncheck eval", "num": "3170", "d": "7/2015"}, {"title": "template error binding value", "body": "hello experimenting preparing integrate project released used project inspiration build trying something similar getting error suggestion gitter chat also tried error persists", "num": "3169", "d": "7/2015"}, {"title": "bound cssclass replaced router navigation", "body": "noticed bound cssclass value updated router navigation old value replaced new value data binding instead leaves existing one behind adds new one next rebound updating class via function works ok click reason class replaced navigating using new router element class updated correctly initiated via click via router navigation see behavior repro steps successful click left nav see active link update correctly bootstrap blue active clas failure select left nav links first element click link top navigation click demo link top navigation observe two highlighted links left nav debugging noticed correct functions fire class property overwritten binding source code found", "num": "3168", "d": "7/2015"}, {"title": "annotations showing documentation", "body": "see docs notice annotation showing separate section called show", "num": "3167", "d": "7/2015"}, {"title": "determine ordering matters render compiler change detector generation code", "body": "currently mismatch iteration order transformer amp runtime code cause change detection fail works around problem stable sorting map keys iterating need figure order matters fix code avoid problem add regression test make sure nt happen", "num": "3166", "d": "7/2015"}, {"title": "interpolated text always projected correctly", "body": "fails project component select view template class main template reason protoviewmerger nt add new classes elements bound elements projected", "num": "3163", "d": "7/2015"}, {"title": "add value accessor numbers ordermanagerment amp personmanagement samples", "body": "currently running examples dart even dartium without transformers throw exception soon input field number value updated eg change date birth person management limit ordermanagement vsavkin", "num": "3162", "d": "7/2015"}, {"title": "add error context changedetectionerror", "body": "see", "num": "3161", "d": "7/2015"}, {"title": "add error context instantiationerror", "body": "see", "num": "3160", "d": "7/2015"}, {"title": "binding model div innertext throws error", "body": "getting error binding div innertext modeldescription one templates change modeldescription works fine assume binding wrong property thats property name would think choose also tried innertext textcontent textcontent field using fine saw use dom attribute associated error ca nt bind innertext since nt know property div element matching directives corresponding property template html model controller class javascript component selector productitem properties model view templateurl componentsproductitemproductitemhtml directives routerlink export class productitem model product", "num": "3157", "d": "7/2015"}, {"title": "basehref", "body": "hi troubles setting simple app routing served directly server root example javascript routeconfig path component workbench path login component auth path home component home export class app root url http server right navigating home login results navigating investigation problem seems result normalize inside locationts besides url set login result thisstripbasehref stripindexhtml url empty string happens url basehref using exactly looking getbasehref function last version browseradapter call getbasehref expected outcome current implementation getting login seems get instead btford please let know thoughts change getbasehref fix seems quite simple submit pr checking guys expected behaviour anything best regards", "num": "3156", "d": "7/2015"}, {"title": "microsoft edge compat", "body": "hey angularians working assessing cataloging triaging library compat microsoft edge know version compat range angular edge versions fully operable edge also bugs block features compat help escalate", "num": "3155", "d": "7/2015"}, {"title": "ability annotate constructor servicescomponents multiple constructors", "body": "right behavior use default constructor gives warning would nice remove warning build step annotating constructor want", "num": "3152", "d": "7/2015"}, {"title": "form implement updatevalue controlgroup controlarray", "body": "currently control updatevalue", "num": "3151", "d": "7/2015"}, {"title": "change merging protoviews n instead ndepth", "body": "way merging proto views right algorithm merges bottom every components makes overall runtime ndepth per component", "num": "3150", "d": "7/2015"}, {"title": "add mouseover", "body": "documentation directive must add mouseover like host mouseover show thanks", "num": "3148", "d": "7/2015"}, {"title": "http request subscribe try catch finally clause", "body": "hi far concerned ca nt use common try catch finally clauses http request tried ways request object option option result none trigger finally clause source option source option best regards tiago braga", "num": "3147", "d": "7/2015"}, {"title": "http headers", "body": "hi wondering http headers class nt think functionality clear code req object see headers json course object use class add headers http request option requestheaders json option iterate header object add headers property nt see advantage using header class ca nt simply javascript var header new header json var header new header headerappend key value requestheaders headerstojson something like best regards tiago braga", "num": "3146", "d": "7/2015"}, {"title": "better use ngform ngformmodel", "body": "use ngformmodel ngform davideast btford ngformmodel way define validators bindings models class centralized nt need ngmodel ngform way exists angular sometimes ngcontrol ngmodel redundant could answer", "num": "3145", "d": "7/2015"}, {"title": "add support manipulating meta tags inside head element", "body": "hi think would quite useful meta tags could manipulable angular app mean meta tags like meta description attribute meta robots attribute related current subpage global tags whole domain global app means enough set page load would nice tag informations could loaded rest api one example source data", "num": "3144", "d": "7/2015"}, {"title": "router current status sibling outlet support", "body": "hi would like get update support sibling outlet new router read article month old mentioned attention components property removed feature reintroduced different mechanism linked issue closed splitting issues seperate tickets however nt realy see part feature went status supporting thank", "num": "3143", "d": "7/2015"}, {"title": "forms include module", "body": "attempting follow examples related using forms looks like easy way start importing since file include definitions module seem registered though currently trying work around issue figured file request meantime", "num": "3142", "d": "7/2015"}, {"title": "find external module", "body": "dont know submit used latest angulardts angulardevjs execute tsc compile typescript code says find external module", "num": "3141", "d": "7/2015"}, {"title": "bindingbuilder longer seems", "body": "using alpha returned longer seems method allows specify returning method resolve service new way", "num": "3140", "d": "7/2015"}, {"title": "builds export components", "body": "builds dev build specifically file export required components name generated file build really eqv base moment attempt load using webpack alias start get dependency errors", "num": "3139", "d": "7/2015"}, {"title": "functionwithparamtokensexecute return result apply", "body": "useful async methods", "num": "3131", "d": "7/2015"}, {"title": "bug keyup parent elementcomponent seem function", "body": "example template following legal working standalone", "num": "3130", "d": "7/2015"}, {"title": "ngblur nt work chrome ubuntu chrome android", "body": "obs nt angular extension chrome", "num": "3128", "d": "7/2015"}, {"title": "angulario gt step step guide gt user input small typos", "body": "user input page angulario docs final code section two typos need change ngfor ngfor nif ngif", "num": "3123", "d": "7/2015"}, {"title": "decoratorsts needs parameter names function signatures", "body": "currently interfaces provided nt parameter names caught compilation step due microsofttypescript", "num": "3121", "d": "7/2015"}, {"title": "benchpress docs provided", "body": "need rename folder deploying benchpress probably also need file describes layout", "num": "3120", "d": "7/2015"}, {"title": "dart support observe", "body": "hardwired moment like support future releases well per", "num": "3117", "d": "7/2015"}, {"title": "routerlinkrouteroutlet refresh", "body": "use accompanying proper component template appears outlet issue user refreshes proper url extension ie templates loaded including original app template leaving page blank far tell happening url marked use template outlet show chance wrong everything else working properly", "num": "3113", "d": "7/2015"}, {"title": "run unit tests checked mode", "body": "", "num": "3111", "d": "7/2015"}, {"title": "feat observable swap underlying rxjs implementation used eventemitter rxjsnext", "body": "already started breaking task instead lumping breaking change since api observable returned different semantically change", "num": "3110", "d": "7/2015"}, {"title": "generic class binding", "body": "wrote code would return string set template following issue html important part however running gives found references valid syntax implies fact nt work bug asyet unimplemented feature also could nt find reference", "num": "3109", "d": "7/2015"}, {"title": "ignore whitespace bindings", "body": "component template html aesthetics originally wrote like html obviously similar tests line done like set correctly delete trailing spaces also nt know better way still playing", "num": "3108", "d": "7/2015"}, {"title": "input typeradio handled correctly ngmodel", "body": "snippet select first value correctly follow changes ignored", "num": "3104", "d": "7/2015"}, {"title": "feature request last support ngfor", "body": "would like able something like html foo", "num": "3102", "d": "7/2015"}, {"title": "reserve namespace angular npm", "body": "right angular npm packages however npm introduced namespaces allow things like problem namespace owned somebody else see ping person ask whether could namespace", "num": "3101", "d": "7/2015"}, {"title": "tsc let public methods require parametersreturn values private type build", "body": "running tsc manually sources errors given errors caught build step", "num": "3098", "d": "7/2015"}, {"title": "messagebroker deserialize return values", "body": "currently worker renderer deserializing return values nt make sense broker serialize renderer deserialize broker", "num": "3097", "d": "7/2015"}, {"title": "fails update path routernavigate", "body": "appears hashlocationstrategy updates url calls routernavigate change locationstrategy urls longer update navigating products productid navigation occur though happening code using component controller code javascript updateproduct product productid string name string description string thisproductstoreupdateproduct product routes bootstrap javascript import import bootstrap bind import routerinjectables locationstrategy hashlocationstrategy import onboarding componentsonboardingonboarding bootstrap onboarding bind locationstrategy toclass", "num": "3096", "d": "7/2015"}, {"title": "remove traceur nodetree", "body": "carved compile running tests node currently uses traceur nt need", "num": "3094", "d": "7/2015"}, {"title": "ngif failing works dartium regression", "body": "related release", "num": "3091", "d": "7/2015"}, {"title": "rely fact types canonicalized", "body": "currently check injector work dart certain situations", "num": "3090", "d": "7/2015"}, {"title": "dart debugreflectioncapabilities logging duplicate application", "body": "following unfortunately applications usually install logger means logging messages duplicated ideally debugreflectioncapabilities would install root logger", "num": "3089", "d": "7/2015"}, {"title": "elementinjector errenously ignores imperativelycreatedinjector", "body": "means use methods like pass ultimately ignored constructing new injector vsavkin thx tbosch helping track", "num": "3087", "d": "7/2015"}, {"title": "http requests http injectables", "body": "hi think working completely problem service throws bootstrap change bootstrap run code ideas happening mean want service component distributed applications need add bootstrap seems wrong idea build scalable independent components problem request non existing resource also happens locally status body id correct status code always returns best regards tiago braga", "num": "3086", "d": "7/2015"}, {"title": "router nested router problems", "body": "hi may understanding something main router html home login commercial problem router component construtor ca nt get specified page refreshing page also locationlocationhash way get hash value example login problem redirect click home currently login page router works url change first click twice click change url problem see nested router commercial never triggers put debugger commercial constructor url commercial commercial commercial component see using home component problem still ca nt get router work use url commercial changes url commercialfavorites nt load home component used make router help usefull best regards tiago braga", "num": "3084", "d": "7/2015"}, {"title": "router links badly generated", "body": "may missing something alpha links like generating urls generates users router config looks like related matrix parameters introduced matsko maybe intended behaviour need change routerlink expressions see anything changelog sorry missed", "num": "3083", "d": "7/2015"}, {"title": "document compile angular application npm distro without definitelytyped", "body": "hi would possible automatically include release correspondent typings file current process pushing files good specially use tsd get sync release process alexeagle jeffbcross cheers", "num": "3082", "d": "7/2015"}, {"title": "always get error provider string", "body": "hi guys newbie want learn followed quick start get error error provider string myappcomponent string baseexception abstractbindingerror nobindingerror getbykey getbykey get getbykey getbydependency new getobjbykeyid hydrate hydrate hydrateview hydrateroothostview createroothostview run zoneboundfn lib promise internal trycatch lib promise internal invokecallback lib promise internal publish microtask run zoneboundfn flush logerror line defaulterrorreporter line onerror line onerror line run line anonymous function line zoneboundfn line lib promise internal trycatch line lib promise internal invokecallback line lib promise internal publish line anonymous function line microtask line run line anonymous function line zoneboundfn line flush line", "num": "3079", "d": "7/2015"}, {"title": "nt make pub", "body": "cc rkirov", "num": "3077", "d": "7/2015"}, {"title": "ngmodel work custom angular components", "body": "fix", "num": "3076", "d": "7/2015"}, {"title": "ngmodel resets caret position", "body": "open templatedrivenforms demo type hello put caret e type something else caret jump end", "num": "3075", "d": "7/2015"}, {"title": "use observablewrapper best way", "body": "version myservicejs mycomponentsjs myservicejs mycomponentsjs well new version type advantage new way need observablewrapper every component btford jeffbcross mhevery", "num": "3074", "d": "7/2015"}, {"title": "new router angular", "body": "hello project using angular started use new router want go component based approach flux architectural pattern hoping approach could migrate easily angular far work great still issues router like multiple named viewports one view address time ago hoping would fixed next router release discovered router source moved angular repository seems like releases angularnewrouter support us shall proceed able use new router bug fixes angular still possible angularnewrouter released angular shall use somehow modules angular thanks advance regards beata", "num": "3065", "d": "7/2015"}, {"title": "unknown provider qprovider lt q lt animate lt compile lt modalstack", "body": "error unknown provider qprovider lt q lt animate lt compile lt modalstack problem exactly described code colleague running fine console error undefined role invalid role validation objectpermissionfindmatchingrole objectpermissionrejectifmatch objectpermissionauthorize scope broadcast objecttransitionto array objectinvoke handleifmatch always prompt nt exactly know select try option result bowerjson name easyblogfrontend version authors rodion rodion brocoderscom description easyblog frontend main mainjs license mit private true ignore nodemodules bowercomponents test tests dependencies jquery lodash angular angularuiutils angularuirouter restangular angularbootstrap bootstrap satellizer angularpermission malihucustomscrollbarplugin angularloadingbar angularanimate angularfileupload ngimgcrop animatecss nginfinitescroll angularoffclick angularelastic angularmoment angularpnotify angularxeditable angularsanitize angulargooglemaps angularsocial oauthjs angularuimap angularimagespinner devdependencies bourbon overrides ngimgcrop main compileunminifiedngimgcropjs compileminifiedngimgcropcss bourbon main resolutions angular", "num": "3064", "d": "7/2015"}, {"title": "generated didecoratorsdts missing annotations di refactor", "body": "log using npm lines look like", "num": "3062", "d": "7/2015"}, {"title": "dom properties capitalization", "body": "accessing dom properties capital ng requires really necessary mean want address innertext becomes innertext template take code app say hello hello nt look nice works supposed ca nt drop need really way around autolowercasing dom", "num": "3061", "d": "7/2015"}, {"title": "zonejs webworker environment", "body": "webworkers need use zonejs change detection currently relies browser apis implemented webworkers looks like modules touch browser api mutationobserver defineproperty registerelement propertydescriptor geolocation cc btford", "num": "3060", "d": "7/2015"}, {"title": "change pipesappend pipesextend", "body": "right semantics actually prepend new pipes append take precedence talking jeff decided use name instead use", "num": "3059", "d": "7/2015"}, {"title": "remove normalizeblank dart output", "body": "turns useful functionality also destroys types proposal similar compiletime type substitution eg able substitute functions case substitute empty string ok leave parens unless easy clean becomes", "num": "3055", "d": "7/2015"}, {"title": "support reexports dart transformers", "body": "transformers complain ca nt find directives example even though exported", "num": "3054", "d": "7/2015"}, {"title": "make serializer injectable", "body": "", "num": "3053", "d": "7/2015"}, {"title": "implement renderviewstore webworker", "body": "serializer convert renderviewrefs tofrom serializable references probably int whenever sent wire", "num": "3052", "d": "7/2015"}, {"title": "transformer share global logger among transformers", "body": "currently transformers importing using single logger unfortunatelly transformers may interleaved point async calls made result pub might report errors wrong file properly pass logger calls made transformer kegluneq", "num": "3051", "d": "7/2015"}, {"title": "transformerdi support typedefs", "body": "following possible dart typedef animal animalfactoryfn const binding animalfactoryfn tofactory animalfactoryfnimpl right complains expects either token class", "num": "3049", "d": "7/2015"}, {"title": "build web worker demo app", "body": "", "num": "3047", "d": "7/2015"}, {"title": "support dom events within webworkers", "body": "event encoding amp support basic events clicks scroll keyboard", "num": "3046", "d": "7/2015"}, {"title": "implement web worker renderer", "body": "x proxy renderer calls app thread ui thread x calls queued zone finishes sent", "num": "3045", "d": "7/2015"}, {"title": "implement serialization protocol render api message types", "body": "parameters return objects renderer render compiler methods need serializable x create renderview store x remove asts binders x replace maps stringmaps renderapi prototype map ca nt easily serialized", "num": "3044", "d": "7/2015"}, {"title": "implement crosslanguage worker messaging api", "body": "implement messagebus ts dart smooths differences web worker isolate api implement messagebroker top messagebus allows worker thread easily run renderer methods main thread receive result", "num": "3043", "d": "7/2015"}, {"title": "replace querylist interface", "body": "currenlty transpiled dart extends handwriten dart documentation would live two places better solution would put documentation interface transpiled dart implement", "num": "3035", "d": "7/2015"}, {"title": "implement query filters", "body": "support flexible queries implement option pass filter query example see discussion info", "num": "3034", "d": "7/2015"}, {"title": "viewquery match dom order directives", "body": "broken test fix reenable", "num": "3033", "d": "7/2015"}, {"title": "generated ngdeps need respect deferred library bounds", "body": "currently call deferred causing everything deferred library go main part internal ref", "num": "3032", "d": "7/2015"}, {"title": "dart build slow gt", "body": "slows us lot especially vetting prs marking substitute high severity discussed vsavkin tbosch theory every time add example another expensive invocation dart analyzer additional entry point really need run one examples dart smoke test", "num": "3030", "d": "7/2015"}, {"title": "testcomponentbuilder support mocking viewhostinjector component", "body": "given arbitrary component like appshellcomponent dart const uispecificbindings const routerinjectables component selector appshellcomponent viewinjector const uispecificbindings class appshellcomponent sometimes may want slightly alter mock dependency testing part component interaction works child proposal", "num": "3029", "d": "7/2015"}, {"title": "add test lifecycle methods posttransform", "body": "probably easiest way would creating new example uses lifecycle methodsinterfaces", "num": "3027", "d": "7/2015"}, {"title": "forms validations broken used modulesexamples", "body": "looks like iterabletolist returns array undefined", "num": "3026", "d": "7/2015"}, {"title": "implement tests csp mode js dart", "body": "eg performance reasons need switch slower version using instead", "num": "3025", "d": "7/2015"}, {"title": "remove parent di", "body": "", "num": "3024", "d": "7/2015"}, {"title": "remove default visibility di", "body": "directives services default unbounded", "num": "3023", "d": "7/2015"}, {"title": "fix router router throw reserved characters used route definition", "body": "throw explain use appear path throw reserved auxiliary routes reserved matrixquery params", "num": "3021", "d": "7/2015"}, {"title": "implement correctly speed property access", "body": "compiler creates bindings elements returns true property dart running transformer server also generating change detectors server implementations need sync right always return true checks runtime whether property exists schema support implement via schema", "num": "3019", "d": "7/2015"}, {"title": "feat router use query params toplevel component params", "body": "followup", "num": "3017", "d": "7/2015"}, {"title": "definition query work dts file alpha", "body": "using query dts file results error file currently contains seemingly dupllicate definitions typescript class queryannotation extends dependencyannotation descendants boolean selector void isvarbindingquery boolean varbindings list tostring string class query extends dependencyannotation descendants boolean selector void isvarbindingquery boolean varbindings list tostring string adapting dts file removing query class annotation works expected another issue seen length first last properties declared void also constantly need adapt working code", "num": "3016", "d": "7/2015"}, {"title": "bootstrap throws errors safari", "body": "repro load hello world example safari stack trace", "num": "3015", "d": "7/2015"}, {"title": "ca nt bind since nt know property label element", "body": "using template throw following error nt possible", "num": "3014", "d": "7/2015"}, {"title": "host properties set root component", "body": "repro seems caused fact creating second temporary host element root component calling attach content target host element cc", "num": "3013", "d": "7/2015"}, {"title": "ca nt add host attributes root element", "body": "lets say following dart library example import dart html import package import package show reflector import package show reflectioncapabilities main reflectorreflectioncapabilities new reflectioncapabilities bootstrap myapp component selector myapp host const foo bar view template hello class myapp set attribute onto element lives html actually set attribute element one dom appears sort temporary element created attribute set one", "num": "3012", "d": "7/2015"}, {"title": "instantiate one directive playing particular role", "body": "need provide way tell compiler instantiate directive another specialized directive job imagine default value accessor directive used forms let add specialized value accessor handle checkboxes following template would like first input use defaultvalueaccessor second input use checkeboxvalueaccessor unfortunately second input end two value accessors approach work right write mutually exclusive selectors look like even though approach elegant sort works one personteam provides set directives however would like add thirdparty value accessor end problem two value accessors created element proposal mechanism tell compiler value accessors play role compiler instantiate one element compiler take last directives list directives matches element directive selector ngcontrol role valueaccessor class defaultvalueaccessor directive selector custom stuff role valueaccessor class customvalueaccessor const directives defaultvalueaccessor customvalueaccessor customvalueaccessor matches element defaultvalueaccessor instantiated also try unify concept role local name always match proposal generic mechanism directive specify compiletime predicate determine instantiated function lastvalueaccessor thisbinding bindings find thisbinding bindings make sure last value accessor directive selector ngcontrol predicate lastvalueaccessor class defaultvalueaccessor directive selector custom stuff predicate lastvalueaccessor class customvalueaccessor useful scenarios example want make sure dom structure matches required shape may work dart transformers mhevery tbosch jeffbcross", "num": "3011", "d": "7/2015"}, {"title": "forms add support parsers formatters", "body": "implementing custom formatters parsers common way extend control types angular think two ways angular implement parsers formatters similar angular make defining new value accessors easier use case handled defining new accessor", "num": "3009", "d": "7/2015"}, {"title": "dgeni generating docs dgeni preserve annotation", "body": "see also include annotation annotations important documentation purposes", "num": "3008", "d": "7/2015"}, {"title": "interpolation property writes null undefined rather empty string", "body": "quick test quick start reproduce change line see work null written screen change thisname alice thisname null", "num": "3007", "d": "7/2015"}, {"title": "used angular app top html tree", "body": "hi possible thing achieved top level html", "num": "3006", "d": "7/2015"}, {"title": "nobindingerror thrown upgrading alpha", "body": "todo example throwing nobindingerror injectorexecuteinjectorgetbykey method upgrading alpha error null nobindingerrorbaseexception nobindingerrorabstractbindingerror new nobindingerror injectorexecuteinjectorgetbykey injectorexecuteinjectorgetbydependency injectorexecuteinjectornew injectorinlinestrategyexecuteinjectorinlinestrategyhydrate elementinjectorexecuteelementinjectorreattachinjector elementinjectorexecuteelementinjectorhydrateinjector elementinjectorexecuteelementinjectorhydrate", "num": "3005", "d": "7/2015"}, {"title": "using private class extends need change implements", "body": "class foo class bar extends foo private constructor generate class foo interface bar implements foo", "num": "3002", "d": "7/2015"}, {"title": "ability turn dash case cssclass directive", "body": "finding problems css uses camel case using cssclass line automatically converts class dashed case choice camel case raw input using cssclass directive would nice could provide means configure cssclass directive per component", "num": "3001", "d": "7/2015"}, {"title": "terminate", "body": "building inside docker container establish standard working environment runs builds project without problems run process hang terminal continue reaching portion build process portion works perfectly fine run ran project root running either command output npm bin gulp build output npm bin gulp builddart environment container running project sh env dartiumbin env dartsdk homeangularuseroptdartsdk env path usrlocalsbin usrlocalbin usrsbin usrbin sbin bin homeangularuseroptdartsdkbin env nvmdir homeangularusernvm run aptget install softwarepropertiescommon amp amp addaptrepository ppa chrisleanodejs amp amp aptget update amp amp aptget install curl wget vim nano man manpages apttransport nodejs g opensshclient git unzip python python run wget amp amp tar xvf amp amp ls amp amp rm amp amp cd amp amp configure amp amp make install amp amp checkinstall dart run get google linux package signing key sh c curl aptkey add amp amp set location stable repository sh c curl gt etcaptsourceslistddartstablelist amp amp set stable channel sh c curl gt etcaptsourceslistddartunstablelist amp amp aptget update amp amp aptget install dartstable run adduser disabledpassword gecos angularuser amp amp chown r angularuser angularuser homeangularuser amp amp adduser angularuser sudo user angularuser dart sdk run wget directoryprefixhomeangularuseropt amp amp unzip homeangularuseropt amp amp rm dartium run wget directoryprefixhomeangularuseropt amp amp unzip homeangularuseropt amp amp rm nvm run curl bash workdir homeangularuser install npm dependencies onto container run nvmnvmsh amp amp sshkeygen q rsa b n c sobibortreblinka gmailcom f sshidrsa amp amp sshkeyscan githubcom gt gt sshknownhosts amp amp git clone amp amp cd angular amp amp use version nvmrc nvm install amp amp nvm use amp amp npm cache clean amp amp npm install bower protractor gulp nodegyp amp amp npm install amp amp npm bin gulp docs cmd binbash", "num": "2997", "d": "7/2015"}, {"title": "provide context runtime errors", "body": "currently throw exception give developer lot information often see messages like hard developer know went wrong think wrap user errors add context error occured interface errorcontext componentinstance context evaluation componentelement elementref host element component directiveinstance directive caused problem optional element node element problem occurred injector injector injector element expression string expression caused problem adding context automatically already wrap exceptions triggered inside change detection exception take instance errorcontext exception happens binding developer see binding threw context evaluation element binding also hover dev tools chrome highlight element page wrap exceptions triggered event handlers supply errorcontext provide errorcontext error happens di developer see find service cover majority errors developers see adding context manually also provide way obtain context directive developer use throw exceptions handled change detection directive instantiation maybe like todos x add error context instantiationerror x add error context changedetectionerror x add error event throw error x adding context manually", "num": "2992", "d": "7/2015"}, {"title": "implement standard universal absolute schema angular resource uri", "body": "support relative uris proved difficult able implement standard absolute uri schema background js js world angular components distributed via two methods bundles bundle contains components single js file model html templates css would inlined js code therefore url resolution would required npm source resource npm source package identified using two pieces information package name path file within package dart dart common distribute source bundles used like npm resource identified via package name path within package relative considerations certain projects target js dart therefore desirable uri schema languageagnostic dart eventually js applications may run two modes dynamic static dynamic mode urls resolved browser static mode urls resolved server transformer without actually running application want uris work inside well outside browser dart folders resources imported packages therefore resource covered proposal want use either relative urls pagerelative urls starting outside scope proposal proposal adopt following absolute uri schema example material button component use following advantages unambiguous ability reuse templates packages eg component package may set pointing package long package specifies dependency package tool unambiguously locate template works across languages npm pub could support likely package manager would support well works inside outside browser dart case inbrowser resolver would turn via existing pub convention transformer would translation locate resource via file system instantly familiar typescript dart developers exactly files disadvantages need prefix adds boilerplate alternatives prefix makes clear resolution done relative package npm pub prefix dropped clear whether first part path refers package simply first part relative path want implement relative paths point future use prefixless schema nt shorter could work would misusing intent behind schema part uri usually limited number possible values schema eg ftp putting package name schema means schema take unlimited number values might want support package schemas future perhaps support url well see also", "num": "2991", "d": "7/2015"}, {"title": "best way include messages form validators", "body": "angular template file error validators html field required field must least characters field must less characters html way angular nt found nothing source code jeffbcross mhevery jeffbcross pkozlowskiopensource", "num": "2988", "d": "7/2015"}, {"title": "routing error change url url bar", "body": "using code steps page loaded correctly go url bar change press enter always go default component url", "num": "2987", "d": "7/2015"}, {"title": "ngfor ngif break transformer generated change detectors", "body": "provides test fails simple example fail transformer", "num": "2984", "d": "7/2015"}, {"title": "default route always loaded", "body": "first time load app route angular loading constructor component home default loads think component home nt loaded btford igorminar jeffbcross", "num": "2983", "d": "7/2015"}, {"title": "make dart transformers work material samples", "body": "currently known issue hitting nt resolve correctly crosspackage urls need change current convention using relative url baseuri instead rely package urls possibly relative urls find way compute using dart mirrors components declared plain libraries part files", "num": "2982", "d": "7/2015"}, {"title": "typescript atscript instead", "body": "new reasons guys decided pick ts script instead plain javascript even option write plain javascript given decorator syntax angular move standard instead using external tool reasons", "num": "2977", "d": "7/2015"}, {"title": "output gulp buildmaterialdart missing dist folder travis", "body": "resulting css files need included snapshots publish cloud storage", "num": "2976", "d": "7/2015"}, {"title": "move pubspeccleanerjs builddart", "body": "present build dart artifacts dir build package overrides tests leave dist folder state later publish pub run get real files upload publish dart snapshots every green travis build would better cleaner build run tests finished nt anything fancy keep working", "num": "2969", "d": "7/2015"}, {"title": "template attributes support binding nonstrings use tostring", "body": "otherwise something like must something like", "num": "2968", "d": "7/2015"}, {"title": "feat router implement otherwiseroutenotfound hook", "body": "need way deal following cases route nt match canactivate returns candeactivate returns might implemented way", "num": "2965", "d": "7/2015"}, {"title": "better error messages component property misspelled binding", "body": "directive missing view directives property following error message displayed ca nt bind esscontext since nt know property essform element matching directives corresponding property change ca nt bind esscontext since nt know property essform element matching directives corresponding property please check directives attributes view defines necessary components display current list directives say directive esscontext missing people get used original error message first time see hard understand trying say", "num": "2963", "d": "7/2015"}, {"title": "add validators forms verifying basic data types", "body": "data types email url number date time week month", "num": "2962", "d": "7/2015"}, {"title": "implement basic validations", "body": "need support following validations required minlength maxlength min max patternn currently support required", "num": "2961", "d": "7/2015"}, {"title": "add submitted flag forms api", "body": "need implement something similar submitted angular following fix form", "num": "2960", "d": "7/2015"}, {"title": "pass objects via routeparams", "body": "hello plans support passing objects routeparams routeparams currently handles map returns strings interested able pass complex data structures around use case following say warrants including feature certainly work around limitation pagesservice whose responsibility fetch blog pages including metadata amp contents service used component generates navigation menu containing router links currently generated router links look follows routerlink pagerenderer pagetorender pagetitle component link points uses received router parameter retrieve amp display page contents order needs interact pagesservice could avoided able rather generate router links like routerlink pagerenderer pagetorender page ie pass whole page object", "num": "2959", "d": "7/2015"}, {"title": "find typings file zonedts", "body": "file globalsdts references file typingszonezonedts nt typings directory", "num": "2958", "d": "7/2015"}, {"title": "di hostinjectorviewinjector support nested lists", "body": "assume based documentation api following legal dart class class b const modulea const const moduleb const b component selector test hostinjector const modulea moduleb view template class testcomponentwithnesteddependencies following thrown though stack trace bindingwithvisibilitybindingwithvisibility package protoelementinjectorcreatebindingwithvisibility package protoelementinjectorcreatehostinjectorbindingwithvisibility package listforeach dart listwrapperforeach package protoelementinjectorcreatehostinjectorbindingwithvisibility package listforeach dart listwrapperforeach package protoelementinjectorcreatehostinjectorbindingwithvisibility package protoelementinjectorcreate package createprotoelementinjector package createelementbinders package createappprotoview package protoviewfactorycreateappprotoviews package listforeach dart listwrapperforeach package protoviewfactorycreateappprotoviews package also blocking proper use deferred loading since ideally deferred loaded components declare dependencies services etc vsavkin yjbanov could take look", "num": "2954", "d": "7/2015"}, {"title": "attach global object", "body": "subject says include script tag longer available global variable tested problem", "num": "2953", "d": "7/2015"}, {"title": "ngfor support observable collections dart", "body": "observable collection implements delivers example support custom implementations rely specifically cc matanlurey", "num": "2950", "d": "7/2015"}, {"title": "fix typings typings template make module name end file dynamic", "body": "template causing routerdts output redundant declaration template location", "num": "2948", "d": "7/2015"}, {"title": "awesome dev experience detect infinite loops change detection", "body": "right possibly hook listener trigger change turn cause function called adinfinitum dev mode could angular detect loop likely never complete maybe gt times throwfail", "num": "2947", "d": "7/2015"}, {"title": "behaves differently using dart transformer", "body": "nt know bug behaviour different using transformer eg works okay without transformer adding transformer result error make work transformer change either comes issue work remove transformer project layout lib appdart apphtml pubspecyaml web indexhtml maindart tested alpha", "num": "2945", "d": "7/2015"}, {"title": "rendercore conditionally add event handlers dom elements", "body": "angular register single event handler top document forward request appropriate statement means multiple registration would result single call note care needs taken crossing shadow root boundaries original text right add something like mouseenter handler dom html however coupled could become really expensive common practice conditionally add event handlers needed remove example pressing something like reorder could add mousedowndrag event list items plans able something like html sure categorize", "num": "2940", "d": "7/2015"}, {"title": "dart transformer nt add getters formdirectives", "body": "add transformer application uses result following error ngmodel exception uncaught error find getter update stack trace noreflectioncapabilitiesgetter package reflectorgetter package parseastparseaccessmemberormethodcall package defaultvalueaccessor exception uncaught error find getter target stack trace noreflectioncapabilitiesgetter package reflectorgetter package parseastparseaccessmemberormethodcall package", "num": "2939", "d": "7/2015"}, {"title": "get changes googleinternal dart users faster", "body": "related see cc jeffbcross", "num": "2937", "d": "7/2015"}, {"title": "di adding bindings viewinjector causes elementref injectable", "body": "ran today vs adding somebindings bootstrap function former gives exception uncaught error provider elementref foocomponent gt elementref stack trace injectorgetbykey package injectorget package injectorgetbykey package injectorgetbydependency package injectornew package injectorinlinestrategyhydrate package", "num": "2936", "d": "7/2015"}, {"title": "example ngfor ngif directives fails dart version gt", "body": "code taken examples works correctly angular dart version updating injector view template name myname friends name many friends directives const ngfor ngif using code fails ngfor ngif using code fails", "num": "2935", "d": "7/2015"}, {"title": "emulated shadow dom properly shim shadow deep selectors", "body": "reproduction case css expected html actual element incremented html html rule rewritten essentially dropped", "num": "2932", "d": "7/2015"}, {"title": "provide way bind class runtime template", "body": "currently provide way bind css class great also bind runtime something like simply simple example example bootstrap form html html thanks", "num": "2927", "d": "7/2015"}, {"title": "component two interfaces generate error transformers", "body": "component two interfaces declaration create invalid ngdeps example class materialinput implements controlvalueaccessor ngvalidator ngdepsdart interfaces const controlvalueaccessorngvalidator looks like missing coma codegen", "num": "2921", "d": "7/2015"}, {"title": "current route reloaded page refreshed", "body": "happens used", "num": "2920", "d": "7/2015"}, {"title": "transformer support multiple independent entry points", "body": "tl dr resolved remove transformer config today looks like reflection entry point end importing ngdeps file every entry point attempt initialize since two independent lists transformer config ca nt tell entry point corresponds reflection entry point however implemented longer need reflectionentrypoints option remove", "num": "2919", "d": "7/2015"}, {"title": "query annotation nt work typescript alpha", "body": "something terribly wrong course basic example typescript import query querylist component view bootstrap component selector view template class component selector c view template directives class c constructor query ds querylist consolelog ds component selector app view template directives c class app bootstrap app run code logging console results also adding descendants true effect", "num": "2916", "d": "7/2015"}, {"title": "make scriptspublishchangelogjs accept arbitrary fromto sha", "body": "produce changelogs ad hoc releases cc naomiblack", "num": "2913", "d": "7/2015"}, {"title": "upgrade zonejs gt heavy cpu usage time zone requestanimationframe", "body": "game manages time loop using requestanimationframe ported works really well except experience pretty severely degraded performance time capture cpu profiles zone ends replacing idle time page loaded sure make easy reproduce open page take profile wait minute take another profile example", "num": "2912", "d": "7/2015"}, {"title": "mirror dom property values attribute values debug mode", "body": "needed web workers use cases make easy locate elements binding assigning tbosch spec figure best implement", "num": "2910", "d": "7/2015"}, {"title": "di trying inject template element results provider found", "body": "discussed offline following working current release visibility naomiblack yjbanov", "num": "2907", "d": "7/2015"}, {"title": "throw changedetectionerror jit mode", "body": "", "num": "2906", "d": "7/2015"}, {"title": "chore convert requestmethods const list", "body": "made class big refactoring support dart could declared toplevel enums module class takes enum integer returns corresponding enum name like able constant provide usefulness converting enum values strings vice versa less overhead", "num": "2904", "d": "7/2015"}, {"title": "feat automatically set request contenttype header based body type", "body": "specific xhrbackend implementation based request body types nt automatically set contenttype headers forming write requests inside contenttype header set certain request body types user agent nt implicitly set using body extraction steps described json applicationjson urlsearchparams applicationxwwwformurlencoded blob blob set type property set value also documented leave useragent set appropriate boundary", "num": "2903", "d": "7/2015"}, {"title": "provide easy way create stateless pipes", "body": "pipes api flexible overwhelming adding simple stateless pipes need make simpler proposal class mypipe extends simplepipe supports obj return true transform args", "num": "2902", "d": "7/2015"}, {"title": "provide easy way configure new pipes", "body": "currently pipes global easily configurable need make scoped component provide way easily configure proposal", "num": "2901", "d": "7/2015"}, {"title": "remove workaround", "body": "force public reexport export consistent api surface fixing add horrible hack file causes problems see reference", "num": "2900", "d": "7/2015"}, {"title": "remove interfaces generated reflector data", "body": "done generated change detectors featurecomplete background currently use transformers dynamic change detector generated change detectors still buggy dynamic change detector needs look interfaces reflectively temporary measure adds interfaces reflector however generated change detectors finished information reflector becomes redundant increases code size eventually remove", "num": "2898", "d": "7/2015"}, {"title": "feat support use angularjs applications", "body": "order ease transition angularjs apps angular http module possible used angularjs applications though necessarily dropin replacement considerations di module systems different current architecture allow easily creating module service make easier currently notion global interceptors transformers though could encapsulated angularjs serviceprovider new library based observables instead promises observable easily converted promise convenience encouraged path use observable http nt hook angularjs digest loop test lib would also need bundled separately made work documentation live", "num": "2897", "d": "7/2015"}, {"title": "static reflection add getters local variables templates", "body": "usages local variables templates fail transformer see running todo example app", "num": "2895", "d": "7/2015"}, {"title": "change detection coalesce host properties different elementdirective indicies", "body": "example fix coalescedart dart bool compare var null null var null null var null null var null null return amp amp", "num": "2894", "d": "7/2015"}, {"title": "introduce interception mechanism", "body": "would nice interception mechanism similar http interception angularjs based services working together injection api would allow introduce service behaviors based aspect oriented programming example authorization exception handling logging etc reference would like mention unity dependency injection framework net could imagine working interceptors looks like following snippets interceptor implementation javascript class myinterceptionbehavior implements interceptionbehavior intercept input functioninvocation getnext getnextcallback functionreturn let result functionreturn interceptor registration based decorators also manual interceptor registration types control eg router http interception api unity one drawback support interface interception without target implementation would also nice imagine several service interface provide generic implementation without forced implementing every single interface way example usage could service proxy may could look like following", "num": "2893", "d": "7/2015"}, {"title": "clean injector", "body": "merge two injection systems take shortcuts removed except one", "num": "2892", "d": "7/2015"}, {"title": "appviewmanagergethostelement method name semantics match", "body": "method implies return value host element actual return value first element component shadow view issues name missmatch host element vs shadow view dom semantic missmatch returning first element rather elements root shadow view proposal remove api completely used needs get hold component instead add would retrieve component without need go additionally code incorect loadasroot typeorbinding type binding overrideselector string injector injector promise return thiscompilercompileinhost typeorbinding hostprotoviewref gt var hostviewref thisviewmanagercreateroothostview hostprotoviewref overrideselector injector var newlocation thisviewmanagergethostelement hostviewref var component thisviewmanagergetcomponent newlocation", "num": "2891", "d": "7/2015"}, {"title": "calling appviewmanagergetcomponentview thrown npe rather returning null non component elementref", "body": "ngdirective selector probe class probe constructor public appviewmanager ngappviewmanager public elementref ngelementref oninit inccorrect usage return null rather throw consolelog thisappviewmanagergetcomponentview thiselementref ngcomponent selector augreeter ngview directives ngngfor probe template class app items b c user string constructor public appviewmanager ngappviewmanager public elementref ngelementref thisuser world correct usage consolelog thisappviewmanagergetcomponentview thiselementref greet alert hello thisuser ngbootstrap app", "num": "2890", "d": "7/2015"}, {"title": "shrinkwrap broken", "body": "ran receive errors appears includes dev dependencies machine idea ed package npm shrinkwrap dev npm err darwin npm err argv node usersmartinprobsthomebrewbinnpm shrinkwrap dev npm err node npm err npm npm err problems encountered npm err please correct try npm err extraneous npm err extraneous temp npm err extraneous chai npm err extraneous gulpsourcemaps npm err extraneous npm err extraneous gulpmocha npm err extraneous gulputil npm err extraneous gulp npm err extraneous gulptypescript npm err npm err need help may report error npm err possible fix deleting mentioned directories", "num": "2889", "d": "7/2015"}, {"title": "cssclass directive issue", "body": "playing around latest build noticed small issue cssclass directive application please use latest chromefirefoxopera working safari step reproduce navigate others using tab component switch tab navigate todo others last selected tab keeps active css class check console logs well constructors called component recreated css classes removed source code tabs components available", "num": "2888", "d": "7/2015"}, {"title": "usage enums templates possible", "body": "hi tried use typescript enum array index template create data binding html attribute way compiles ok typescript get error message browser enums allowed templates bug thanks", "num": "2885", "d": "7/2015"}, {"title": "declaring private constructors", "body": "generating file sometimes nice able export class noninstantiable classes visible developer never meant instantiated developer would like hide constructor assume class source needs exported class sometype private way mark constructor private constructor someprivatedep someprivatedep somemethod void generating two options generate class hide constructor create interface injectable ref think option either one fine", "num": "2883", "d": "7/2015"}, {"title": "ambiguous ngfor errors", "body": "sometimes mess things getting used ngfor provided error nt help quickly overcome problem would hope see descriptive error example missing expression error ca nt bind ngfor since nt know property template element matching directives corresponding property suggestion ngfor expression invalid syntax expected form", "num": "2875", "d": "7/2015"}, {"title": "emulatedscopedshadowdom requiring host wrap everything stylesheet", "body": "way native shadow dom works entire stylesheet encapsulated component css style html template html hello world however required today wrap everything ok workaround lot extra boilerplate", "num": "2872", "d": "7/2015"}, {"title": "transformer angular builtins still need reflection using transformer", "body": "result typical run unit test uses transformers least sit someone go details wanted file tracking currently blocking able disable use reflection least unit tests", "num": "2871", "d": "7/2015"}, {"title": "property setters smarter using properties attributes", "body": "consider wanting create component use attributes properties attributebased configuration propertybased configuration good news works today bad news requires little nonintuitive massaging could lot cleaner angular component authors example today utility functions dart utility functions shared among component authors dynamic getdynamic inputvalue defaultvalue onstring string strvalue inputvalue null return defaultvalue else inputvalue string return onstring inputvalue else return inputvalue bool getbool inputvalue bool defaultvalue false bool onstring string strvalue inputvalue string amp amp onstring null return parsebool inputvalue defaultvalue return getdynamic inputvalue defaultvalue defaultvalue onstring onstring property setter proposal alternativeangular framework assisted way maybe annotationbased realize could done using pipes following needed register pipe may may used inject create transformer registry use transformer property setter could lot cleanersimpler natural nativeweb components slightly related", "num": "2870", "d": "7/2015"}, {"title": "host attributes able conditionally add remove attribute", "body": "common scss technique styling component within selector using existence attribute drive style example polymer works something like unfortunately way manipulate one attributes simple bindings inject access unamused ok workarounds also mean trivial use polymer components rely existence attribute value proposal alternative syntax addingremoving attributes", "num": "2869", "d": "7/2015"}, {"title": "change detector throws typeerror null object bindings", "body": "building set ui components eventually provided data point creation change detector throws typeerrors looks bindings given template error produced set valid value would expect bindings would need aware null reference errors angular desired behavior example plunkr", "num": "2868", "d": "7/2015"}, {"title": "build task cleanupbuilder errors typeerror read property cleanup null", "body": "typeerror read property cleanup null diffingpluginwrappercleanup newstyletreewrappercleanup cleanuptree see see quite often locally lately", "num": "2866", "d": "7/2015"}, {"title": "alpha bundle available", "body": "title says everything thanks uploading bundle", "num": "2865", "d": "7/2015"}, {"title": "problem modular app", "body": "little problem think error code anyway creating modular application using typescript definitions create modules one modules work fine called directly called module ai get error files use import works use get error component happens looks something wrong router importing homecomponent", "num": "2863", "d": "7/2015"}, {"title": "incorrectly generated dts file generics", "body": "generates", "num": "2859", "d": "7/2015"}, {"title": "mismatch dependencies controller declaration causes bizarre error typeerror object function", "body": "perhaps misunderstanding controllers declared came across particularly large snake grass took awhile solve aforementioned error caused following code would seem parameters passed function argument order declared array design find miracle nowhere else codebase miss order dependencies passed function parameters insight would much appreciated", "num": "2855", "d": "7/2015"}, {"title": "compile components one js file", "body": "trying work compile typescript components one javascript file app components obviously feasible load individually using concatenating compiled javascript files nt work duplicate code concatenating typescript files almost works except duplicate symbols", "num": "2850", "d": "7/2015"}, {"title": "docs missing features dgeni dts generation", "body": "interfaces calls source generates optional properties generates", "num": "2849", "d": "7/2015"}, {"title": "feat router improve routerlink usability link dsl", "body": "crash badly see expected syntax allowing former syntax using array overkill simple use cases want support array check value set cc delagen", "num": "2845", "d": "7/2015"}, {"title": "allow easy way subclassing views", "body": "goal listing directives verbose reason easy make subclass views preconfigured set directives implementation rename current introduce concept extending subclassing easy list preset values introduce field points existing instance update angular compiler logic flatten fields view recursively var coreview new baseview directives codedirectives var view coreviewcreateprototype view angular directives etc var myappview new view directives myapp mymenu createprototype component myappview template class mycomponent class baseview prototype view new field existing fields constructor prototype thisprototype prototype createprototype var self return function baseviewapply arguments thisprototype self dart dart one create classes fly need take subclass approach const myapp const view directives myapp class myapp extends view myapp super prototype myapp", "num": "2844", "d": "7/2015"}, {"title": "router broken", "body": "code works directives routeroutlet routerlink routeconfig path redirectto path component path component class myapp bootstrap myapp routerinjectables", "num": "2843", "d": "7/2015"}, {"title": "always use get", "body": "send get request instead supplied post", "num": "2842", "d": "7/2015"}, {"title": "http always return status", "body": "network tab developer tools browser status console always object status", "num": "2841", "d": "7/2015"}, {"title": "feat accept string method requestoptions class interface", "body": "currently method must typescript enum really integer create request typescript one would use enum describe method instead passing method string adds convenience typescript dart users get idecompiler help make sure method valid value plain old users probably nt want pass method value instead property union type validate provided string amp throw recognized method sure class needs accept method string though ideally could reduce instances type ambiguity public apis", "num": "2840", "d": "7/2015"}, {"title": "add make integration specs sync", "body": "right provides returns promise however also working implement would return component instance synchronously like given tests made synchronous", "num": "2835", "d": "7/2015"}, {"title": "types decorators lost", "body": "current published defeats editor intellisense writing first line code need way carry types annotation decorator code uses see also misko properly represents api surface using decorators new sugar calling functions", "num": "2834", "d": "7/2015"}, {"title": "much public api lacks types method parameters", "body": "similar work handles return types add tslint check public api methods declare types parameters important consumers like dart api docs otherwise show", "num": "2833", "d": "7/2015"}, {"title": "remove abstract workaround", "body": "nonidiomatic ts code like believe could represent try remove awkward pure abstract classes angular codebase", "num": "2832", "d": "7/2015"}, {"title": "di support factories return null", "body": "currently cause cyclic dependency error", "num": "2831", "d": "7/2015"}, {"title": "remove subproject figure way trigger development mode", "body": "", "num": "2830", "d": "7/2015"}, {"title": "remove traceur build", "body": "also removes traceurruntime replacing perfeature polyfills see wip obstacles documented", "num": "2829", "d": "7/2015"}, {"title": "provide way modify modules via tests", "body": "provide way end end test modify modules page load angularjs done setting variable window angular searches bootstraps allows test writer override potentially expensive modules want used test pseudocode something like suppose emailsender binding nt actually want active tests js test file browseroverrideapplicationbinding emailsender function thissend function return null browserget myurl things test", "num": "2826", "d": "7/2015"}, {"title": "implement findbindings testability", "body": "work working implementation may want take different strategy", "num": "2825", "d": "7/2015"}, {"title": "forms submit fires synchronously model changes happen async", "body": "see settimeout used force correct order events ngmodel settles first submit handled per discussion victor current rx version use delivery ngmodel events async change switch next weeks deal otherwise need come workaround like forcing submit handled asynchronously", "num": "2824", "d": "7/2015"}, {"title": "feat helpersguides short polling", "body": "short polling consists application requesting data endpoint specified interval ie request new comments github issues every seconds opposed long polling consists making request backend waiting complete request data send ie request new comments github issue wait comments returned open new request rxjs short polling relatively easy one understands semantics rx well enough example http apis shown yet implemented part think requires deeper rx understanding creation interval observable piping function generate request perhaps could made simpler could also made provide similar functionality dart streams addition providing framework help good docs properly polling", "num": "2822", "d": "7/2015"}, {"title": "feat add jsonp jsonpbackend", "body": "create new subclass called uses new perform requests using jsonp techniques callback name provide url similar angularjs implementation throw asked perform request method get users nt need nt get extra bytes", "num": "2818", "d": "7/2015"}, {"title": "chore add xmlhttprequest type xhrconnection", "body": "pending merging private var typed", "num": "2816", "d": "7/2015"}, {"title": "injectpromise behaves inject", "body": "may relate using component get exception telling load synchronously provided promise", "num": "2813", "d": "7/2015"}, {"title": "feat add timeout support", "body": "since jsbrowser dart allow specifying timeout automatically abort requests object allow specifying property fetch nt yet support manual cancellation userdefined timeout could undesired effects timeout functionality implemented library example fetchbacked request timed observable retried times could actually open connections time retries run course recommended fetch uncancelable backends add logic support cancellation timeout specification try manually implement timeout behavior jsonp could probably made consistently cancelable thus could support timeout timeout property documented optimization active underlying backend supports part implementing feature provide means fastforwarding virtual time", "num": "2812", "d": "7/2015"}, {"title": "feat simple dynamic retrying failed requests", "body": "dart javascript common way perform simple retries failed requests way provide logic determine whether request retried functionality top methods rxjs javascript side dart think wrapper would created create new streams previous streams error api may look something like", "num": "2810", "d": "7/2015"}, {"title": "clangformat idempotent", "body": "diff code state left side diff transforms state right state right transforms state left", "num": "2809", "d": "7/2015"}, {"title": "provide whenstable asynchronously notify unit tests angular ready", "body": "eg onstable task available testing include ability also check events relevant unit tests nt part change detection eg animations cf internal bug also see related issues", "num": "2808", "d": "7/2015"}, {"title": "feat router support deeplinking siblings", "body": "currently supports routes beginning order add link one route component links sibling route need add support links beginning", "num": "2807", "d": "7/2015"}, {"title": "chore assert url present requestoptions creating request", "body": "", "num": "2806", "d": "7/2015"}, {"title": "feat support many types body requestresponse connectionbackend implementations", "body": "types supported backends much backend technically capable supporting formdata request blob document response text string json tbd arraybufferviewarraybuffer expected response types able explicitly declared optimized underlying primitive see request body types wo nt explicitly declared", "num": "2803", "d": "7/2015"}, {"body": "cc mhevery kegluneq sigmundch vsavkin", "d": "7/2015"}, {"body": "seems also definitions declared another typings file", "d": "7/2015"}, {"body": "sorry wrong repo", "d": "7/2015"}, {"body": "would really nice tend use many methods exposed facade especially wrappers", "d": "7/2015"}, {"body": "vsavkin planning check parser level somewhere else compiler property text parser", "d": "7/2015"}, {"body": "thinking check parser think empty input parser invalid regardless comes hostproperties properties text", "d": "7/2015"}, {"body": "right actually bumping corner case passing accident agree informative err message would help", "d": "7/2015"}, {"body": "maybe change parsing categories detect multiple categories property event keep track changes without us debugging tracing events manually find right source file chrome dev tools firefox dev tools consumes protocol well", "d": "7/2015"}, {"body": "per irl conversation tbosch since names nt change often think stable months since devtools likely change file locations structures probably better solution add logic examine structure data returned chrome figure named old names new names according tobias still getting data back current implementation parsing correctly name mismatch right tobias", "d": "7/2015"}, {"body": "yes still getting data different categories", "d": "7/2015"}, {"body": "mean specify version referring", "d": "7/2015"}, {"body": "closing provide detail please add comment mention reopen issue", "d": "7/2015"}, {"body": "tsd init tsd v tsd install save code import component view bootstrap component selector myapp view template hello name component controller class myappcomponent name string constructor thisname alice bootstrap myappcomponent writing import pressing ctrl enter inside bracket shows suggestion earlier working selector template etc working inside decorators", "d": "7/2015"}, {"body": "cited internal issue", "d": "7/2015"}, {"body": "see", "d": "7/2015"}, {"body": "came across thing stated however thought would okay angular cares stylings inside root component actually true", "d": "7/2015"}, {"body": "reason follows angular applies classes compilation might happen build step however angular know element bootstrap ca nt apply styles storing styles read apply root element", "d": "7/2015"}, {"body": "browser lowercases html attributes angular anything makes sense since html casesensitive casepreserving workaround got convention place declare variables mixedcase like", "d": "7/2015"}, {"body": "sure much one since ca nt guess user wanted use foobar foobar browser simply removes info looking error message actually saying exactly happening know might confusing nt great technical solution", "d": "7/2015"}, {"body": "theoretically protoview compiler could convert camelcase camelcase probably much magic", "d": "7/2015"}, {"body": "think wai tbosch would know best", "d": "7/2015"}, {"body": "yes work right however work item ie checking element projected actually shorthand code however probably want support case well", "d": "7/2015"}, {"body": "without hostactions recommended way focus element", "d": "7/2015"}, {"body": "tested thiscloseviewcallback property options equal used ideas solve thread", "d": "7/2015"}, {"body": "yes allow web components custom elements angular elements dom element trouble ca nt check web components compilation compilation might soon happen build step web components alive", "d": "7/2015"}, {"body": "yeh could detect web components inbrowser compilation guess tough serverside environment guess different element schemas come play dombased schema used inbrowser compilation could autodetect web components throw errors accordingly serverside compilation would another schema either handwritten dumb wdyt", "d": "7/2015"}, {"body": "sounds good jul pawel kozlowski notifications githubcom wrote yeh could detect web components inbrowser compilation guess tough serverside environment guess different element schemas come play dombased schema used inbrowser compilation could autodetect web components throw errors accordingly serverside compilation would another schema either handwritten dumb wdyt reply email directly view github", "d": "7/2015"}, {"body": "changed version error changed exception class string instance method fold nosuchmethoderror method found fold receiver start arguments instance growablelist closure dynamic dynamic gt dynamic start null original exception class string instance method fold nosuchmethoderror method found fold receiver start arguments instance growablelist closure dynamic dynamic gt dynamic original stacktrace objectnosuchmethod dart objectnosuchmethod dart listwrapperreduce package splitandflattenlinkparams package routergenerate package routerlinkrouteparams package package package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package lifecycletick package commonbootstrap package ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futurewait dart ngzonerununary package rootrun dart zonedelegaterun dart ngzonerun package ngzonerununary package customzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart ngzoneschedulemicrotask package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart microtaskloopentry dart scheduleimmediatehelperhandlemutation dart", "d": "7/2015"}, {"body": "figured routerlink attribute defined wrong way", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "tkrugg repo angular please report issues thnx", "d": "7/2015"}, {"body": "global since requirement work alongside ises", "d": "7/2015"}, {"body": "right closing", "d": "7/2015"}, {"body": "problem returning false", "d": "7/2015"}, {"body": "yes", "d": "7/2015"}, {"body": "impression event handler returning false preventing default stopping propagation see", "d": "7/2015"}, {"body": "return false stop event propagation see", "d": "7/2015"}, {"body": "oh jquery sure angular far know prevents default see also docs issue mentioned using manually stop propagation app", "d": "7/2015"}, {"body": "thanks information close issue", "d": "7/2015"}, {"body": "class api", "d": "7/2015"}, {"body": "kittencup think thats old documentation getting error first thought would work nt saw examples repo saw used", "d": "7/2015"}, {"body": "import cssclass view directives cssclass component class annotation add code", "d": "7/2015"}, {"body": "think missing still working expected", "d": "7/2015"}, {"body": "class object function function return dynamic string object function defined component class", "d": "7/2015"}, {"body": "issue mhevery done clever stuff definitions decorators used dsl well callable newable parameter decorators get error compiler code see uses parameter decorator defined type replace type need additional constructor signature figured right thing add signature additional method assignable required spec nt resolve compile error probably need decorator expert help", "d": "7/2015"}, {"body": "work progress", "d": "7/2015"}, {"body": "writing detail seems helped return type must assignable adding signature seems fix get compiler crash emitserializedtypenode instead", "d": "7/2015"}, {"body": "typescript stack", "d": "7/2015"}, {"body": "decided ask users use angular continue build could optionally add another build confirms work well", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "make service much like connectionstrategy bindings optional trivial others make connectionstrategy web services fayepubnub even versions socketio easily port service wrapper string token di easy enough sidenote eventemitter rxsubject probably correct", "d": "7/2015"}, {"body": "also strategy replaced strategy serversent events strategy rails users strategy replaced", "d": "7/2015"}, {"body": "agree implementation would great currently testing simple web application requests data nodejsexpress server using socketio however cant get angular recognize properties updated receive data socket listener currently open question stackoverflow current workaround performs simple requestcheck component think expecting data also ticket sample git repo cloned executes socket event app init receives simple array strings", "d": "7/2015"}, {"body": "might want wrap engineio instead socketio adds extra features rooms channels etc want support multiple transport fallbacks engineio might preferable", "d": "7/2015"}, {"body": "jgainfort sounds like might bug zones correctly intercepting events socketio", "d": "7/2015"}, {"body": "jeffbcross guess im looking engineio see work better", "d": "7/2015"}, {"body": "one angularsails uses socketioclient see afair works fine hold next version rx merges wrapped rxsubject works nicely see also based implementation need rewriting match rxnext spec chatted bit urigo angularmeteor keep meaning dig big fan socketio frankly nt think right abstraction bet farm jeffbcross btford one thing unclear observable subject optin onpush change detection zone involved obviously going patch global apis seems bit counterintuitive would required using push cd", "d": "7/2015"}, {"body": "engineio", "d": "7/2015"}, {"body": "robwormald two different concerns question triggering change detection dirty checking zones concerned triggering change detection right time onpush tells change detector nt dirty check values change detection cycle unless explicitly requested check yeah zones still thing trigger change detection", "d": "7/2015"}, {"body": "problem lifecycle hooks overloaded example directive api currently might mistakes typos typescript directive selector input typecheckbox control textarea control properties samename directiveprop elprop async events statuschange lifecycle lifecycleeventonchange lifecycleeventondestroy lifecycleeventoninit host listeners change onchange eventtargetvalue window resize onresize event action emitfocus focus prop value hostvalue attr role button hostinjector bind shadowdomstrategy toclass nativeshadowdomstrategy viewinjector greeter compilechildren true exportas child class mydirective elprop samename hostvalue null emitfocus observable new eventemitter statuschange observable new eventemitter constructor private el elementref private greeter greeter oninit focus thisemitfocusnext conflicts onchange two things lifecycle hostlisteners onresize resize logic oncomplete thisstatuschangenext completed ondestroy clean including shadow dom change router way handling lifecycle methods decorators prefer since fixes conflict example also question ca nt convert event listeners callbacks eventemitter example", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "typotter sure page talking properties expressed annotation ex could used like notice fence argue important write template class somehow closer terms write code class definition specify properties mixedcase", "d": "7/2015"}, {"body": "said think could support versions obvious question though want support one way things", "d": "7/2015"}, {"body": "already one way map properties really myotherothervar actually translated myotherothervar", "d": "7/2015"}, {"body": "already one way map properties really typotter ok actionable change proposing", "d": "7/2015"}, {"body": "please support specifying properties hyphencase shorthand rewritten accessing component class instance ie converse existing rewritten searching dom", "d": "7/2015"}, {"body": "cc", "d": "7/2015"}, {"body": "merged via", "d": "7/2015"}, {"body": "think trying suggest server rendering case check video talking client version angular replaces view server rendered security performance reasons suggesting different scenarios mind elaborating works close issue", "d": "7/2015"}, {"body": "watched video basically would use solve issue time usable decide would like try searched net nt find example achieve changelog also nt see mention released alpha version thank", "d": "7/2015"}, {"body": "hiding plain sight also npm show works figure use cases want close open issue chat gitter", "d": "7/2015"}, {"body": "ready give try", "d": "7/2015"}, {"body": "jump chat using", "d": "7/2015"}, {"body": "speaking chat", "d": "7/2015"}, {"body": "context use case cms live preview previously done via iframe", "d": "7/2015"}, {"body": "yes kinda something like var jsonfile require jsonfilejson component view routeconfig convertvaluetotypes jsonfile nt reference types well importing using maybe something dynamic var jsonfileasarray require jsonfileasarrayjson var app ng component view routeconfig jsonfileasarraymap function config configcomponent ng configcomponent return config class constructor func would nt use hacks though since probably looking something like typescript component view class app constructor router router http oninit thisroutesobs next configs routerconfig configs ondestroy thisroutesobsdispose", "d": "7/2015"}, {"body": "yes last part nicest way possible code way latest alpha new feature request", "d": "7/2015"}, {"body": "probably better rendering json file inside index page save ajax call html systemimport app function main return mainbootstrap lt jsonserverroutes gt sure router throws error directive something nt defined unable generate href", "d": "7/2015"}, {"body": "solution", "d": "7/2015"}, {"body": "jugnupathak wrong repo one angular said use try ask support questions using dedicated channel future", "d": "7/2015"}, {"body": "throwing synstax error", "d": "7/2015"}, {"body": "jugnupathak please ask question using one indicated support channels remember add live reproduce scenario using plunker similar greatly increase chance getting meaningful answer", "d": "7/2015"}, {"body": "use elvis operator make sense check expression separately gt idea async value may show later time", "d": "7/2015"}, {"body": "going change semantics change detection make generated code smaller readable", "d": "7/2015"}, {"body": "sure implementations caught spec yet edition dart language spec defines elvis operator eventually use", "d": "7/2015"}, {"body": "hi devmetal looks like manually creating injector actually getting provided app manually creating injectors usually done tests instead provide bindings second argument bootstrap use alreadyprepared provided modules already importing", "d": "7/2015"}, {"body": "closing issue feel free add comment mention find problems", "d": "7/2015"}, {"body": "thank working", "d": "7/2015"}, {"body": "hello could please ask angular repo instead one meant stuff related angular", "d": "7/2015"}, {"body": "alright sorry close thread nt know dropping js", "d": "7/2015"}, {"body": "nt worry smile", "d": "7/2015"}, {"body": "well still get files js extension also definitions classes functions stuff wan na use typescript", "d": "7/2015"}, {"body": "change needs go one angulario goes otherwise break ability publish api docs", "d": "7/2015"}, {"body": "provided pr", "d": "7/2015"}, {"body": "naomiblack triage", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "looks like task tbosch tobias anyone besides might able get know already heavily loaded week", "d": "7/2015"}, {"body": "ted counter global shared angular applications page could provide demo link debug maybe buganizer issue internal app mon jul pm naomi black notifications githubcom wrote looks like task tbosch tobias anyone besides might able get know already heavily loaded week reply email directly view github", "d": "7/2015"}, {"body": "matt code easily reproduce sync also sync tomorrow seeing", "d": "7/2015"}, {"body": "talked matt offline found example app using dart isolates", "d": "7/2015"}, {"body": "talked mhevery add defined binding call probably land tomorrow morning", "d": "7/2015"}, {"body": "closed via", "d": "7/2015"}, {"body": "internal tracking bug", "d": "7/2015"}, {"body": "issue limitto creates new collection every single time need change create new collection actually different", "d": "7/2015"}, {"body": "able write angular component wrap int real component exact details still tbd", "d": "7/2015"}, {"body": "great thx quick reply", "d": "7/2015"}, {"body": "divdavem looks like tests started fail probably due changes compiler maybe spot something quickly author original code base", "d": "7/2015"}, {"body": "merged via", "d": "7/2015"}, {"body": "reason use syntax specifically reserved indicator sugar conditionally revealing content stamping multiple times think proposal remove requiring syntax may possible go way", "d": "7/2015"}, {"body": "hmm actually want enable people switchwhen several sibling elements using tag", "d": "7/2015"}, {"body": "ah maybe right sure exactly implemented angular tbosch", "d": "7/2015"}, {"body": "works intended know bit strange change another value would say created decides needs created means nested would never created would somehow skip would remove would change user behavior simple way create nesting think container always think templates may net may container removed hence", "d": "7/2015"}, {"body": "worked like magic reading though could nt help since nested different way works use throughout components successively import content target ngcontent exactly wanted content content goes viewcontainer topbar hope helps someone best regards tiago braga", "d": "7/2015"}, {"body": "naomiblack assign someone look", "d": "7/2015"}, {"body": "could fix way handle quotes however think generally nt attempt resolve urls going resolving urls solution lmk disagree", "d": "7/2015"}, {"body": "sgtm nt see reason process data urls", "d": "7/2015"}, {"body": "looking zippy component example ngcontent", "d": "7/2015"}, {"body": "see shadow dom emulation longer supports uses instead believe differs native shadow dom", "d": "7/2015"}, {"body": "aha would expected least something changelog", "d": "7/2015"}, {"body": "changelog updated", "d": "7/2015"}, {"body": "fixed yesterday", "d": "7/2015"}, {"body": "still improving process sure want go back rewrite change log get better time still alpha", "d": "7/2015"}, {"body": "mhevery thanks", "d": "7/2015"}, {"body": "problem keyboard event detected input value changed ime complete press space enter", "d": "7/2015"}, {"body": "change try", "d": "7/2015"}, {"body": "look like angular issue guess nt right encoding something like html angular concerned reading data issue disable angular see works still broken angular please provide plunker reopen think framework issue", "d": "7/2015"}, {"body": "plunker think input value change keypress event", "d": "7/2015"}, {"body": "robwormald cite gitter answer looks like ie nt support also mentioned ie nt support regarding article ie use instead", "d": "7/2015"}, {"body": "similar issue vs code warned anymore found enum type definition file sits import lifecycleevent directive lifecycle lifecycleeventonchange might", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "closed via", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "fix reverted due build breakage reopening", "d": "7/2015"}, {"body": "kegluneq going punt issue turned contents directories depend whether created put resources nonroot look resources using absolute url could change build account defeats purpose feature supposed standard way resolve urls", "d": "7/2015"}, {"body": "guybedford would great could take look", "d": "7/2015"}, {"body": "tbosch confirm versions systemjs es module compiler using typescript optimization recently implemented", "d": "7/2015"}, {"body": "guybedford think bundling using systemjsbuilder bundled file", "d": "7/2015"}, {"body": "definitely using oooold build systemjs builder planning upgrading latest betas become stable release using system building source vs using bundle nets significantly faster boot see also", "d": "7/2015"}, {"body": "main thing upgrading current master version typescript output performant systemregister output systemjs builder use bundle file need run systemjs greater includes support updated output mean major upgrade builder though turn unfortunately let know anything help", "d": "7/2015"}, {"body": "guybedford problem output builder file slow loading files dynamically slow using setup development run examples unit tests locally would awesome could take minutes try debug", "d": "7/2015"}, {"body": "tbosch robwormald pkozlowskiopensource background issue fix look merged typescript recently master would good reason run upgrade alternatively simply avoid deep chains happy assist", "d": "7/2015"}, {"body": "tbosch terms questions testing workflows optimizations help include development server supports optimized many parallel loads enabling caching development server browser nt need request files time alternatively running build part development workflow important point set build workflow incremental rebuilding cache involves hooking cache builder project nt integrate watching server currently want discuss let know always happy chat", "d": "7/2015"}, {"body": "guybedford current build good however make changes load time goes even though loading files", "d": "7/2015"}, {"body": "tbosch exactly due performance issue want avoid full systemjs upgrade could hotfix local systemjs happy help saves time normal sfx build", "d": "7/2015"}, {"body": "guybedford ah ok thanks version systemjs use", "d": "7/2015"}, {"body": "patch systemjs", "d": "7/2015"}, {"body": "patch would easiest understand may difficult distribute hotfixed version upgrade systemjs involves going upgrade described easy hard depending use custom file extensions codebase let know route thinking taking best help get easily", "d": "7/2015"}, {"body": "mhevery let talk", "d": "7/2015"}, {"body": "note important breaking change affect lot components", "d": "7/2015"}, {"body": "closed via", "d": "7/2015"}, {"body": "tbosch note documented anywhere changelogmd breaking change using typing also seems missing might published dt yet furthermore set view supported browser running fallback lastly way set components one place instead every component", "d": "7/2015"}, {"body": "mhevery let talk", "d": "7/2015"}, {"body": "wondering inside html components deleted rendering outside component example compiling outsidecmp inside gone avoid use ngcontent far concerned opposite need inside component disappear explicitly say best regards tiago braga", "d": "7/2015"}, {"body": "angular component defines template via semantics view defines children component elements directly ordered relative elements template behavior also similar shadowdom works whenever shadow root elements direct children element visible", "d": "7/2015"}, {"body": "early affect many components", "d": "7/2015"}, {"body": "note inside becomes optional", "d": "7/2015"}, {"body": "also allows specify options rely hard remember limited symbol characters", "d": "7/2015"}, {"body": "also allows specify options rely hard remember limited symbol characters gionkunz exact characters ones used template nt thin got problem limited symbol characters said differently got pb got templates well would rather keep syntax consistent got templates manipulating dom element rather introduce new syntax", "d": "7/2015"}, {"body": "yeah using string tokens configure component within javascript feels wrong token approach consequence limited text html javascript thinks wrong keep limitation sake consistency one benefit annotations decorators accessors methods would contextual right place even look simple example like material button already bit confusing associate host bindings functions properties imagine tooling could also work better using decorators specify bindings within components", "d": "7/2015"}, {"body": "using string tokens configure component within javascript feels wrong could elaborate feels wrong feels right since specifying part host element template really one proposal syntax look like even closer write template anyway need stronger arguments feelings", "d": "7/2015"}, {"body": "mental model everything part host element template like extending host element template directive", "d": "7/2015"}, {"body": "scope different right adding event binding component element html never work context component context included directive completely wrong feels wrong think writing kind template fragment inside javascript wrong look problem like writing fragments back view would like could simplified sorry invented notation nt access drawing tools right hope makes least little bit sense", "d": "7/2015"}, {"body": "someone would use configuration file template api product annotations", "d": "7/2015"}, {"body": "similar", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "hi kittencup thank much reply gone source code understand use could nt get exactly use iti downloaded code started web page loading console showing resources missing errors see used httpservice githubservice calling services config setting base url surely missing important steps could please try get easy example showing consume rest service basic authentication thanks advance best regards balram", "d": "7/2015"}, {"body": "issues could take help gitter stackoverflow", "d": "7/2015"}, {"body": "js viewinjector formbuilder js constructor inject formbuilder fb formbuilder", "d": "7/2015"}, {"body": "yes", "d": "7/2015"}, {"body": "could please set plnker something", "d": "7/2015"}, {"body": "closing plnker repro", "d": "7/2015"}, {"body": "may suggest adding jspm list", "d": "7/2015"}, {"body": "alxandr course", "d": "7/2015"}, {"body": "would also worth custom path config option bower lets us define directory name bowerrc file uses storing packages", "d": "7/2015"}, {"body": "nt automatically inline vars optimization compiler handle", "d": "7/2015"}, {"body": "please evaluate determine gives benefit compilation", "d": "7/2015"}, {"body": "definitely change booleans get filtered value never used", "d": "7/2015"}, {"body": "yjbanov still relevant based changes coming", "d": "7/2015"}, {"body": "sorry fixed accident reassigning", "d": "7/2015"}, {"body": "closed via", "d": "7/2015"}, {"body": "problem related view reuse every click destroying creating however directive cleaning destroy", "d": "7/2015"}, {"body": "fyi per discussion currently working", "d": "7/2015"}, {"body": "step determine normalize string interpolation provides benefit step already underway", "d": "7/2015"}, {"body": "issue proposes optimize size code generating therefore fixing net effect code size stop generating rather spent time ultimate solution ultimate solution move value fields comparison notification logic common classes generated code responsible evaluating expressions typed monomorphic manner two ways combine", "d": "7/2015"}, {"body": "yjbanov commented doc summary confident able implement scheme without performance impact result code like propose need runtime checks figure course action take mean time process cutting code duplication make ultimate solution easier implement", "d": "7/2015"}, {"body": "doublechecked least dart interpolation better concat intention complete piece issue unless someone wants discuss pushing remaining parts next milestone bigger win closer completion inline assignments usages notifyonbinding helper wo nt finishing either milestone next couple days", "d": "7/2015"}, {"body": "tim creating change detectors using clear", "d": "7/2015"}, {"body": "trying generate less code change detector significantly affecting execution speed", "d": "7/2015"}, {"body": "closing since better covered issues hotlist", "d": "7/2015"}, {"body": "first thing note publicly exported thing would appear angulario docs case look whether possible link nonclass things", "d": "7/2015"}, {"body": "ok work docs class following would work docs", "d": "7/2015"}, {"body": "list docs currently available link run gist item doc specifying see plenty docs doctype different doc doctype remember specific unique identifier doc doc also list used links example also alias", "d": "7/2015"}, {"body": "think deals issue naomiblack", "d": "7/2015"}, {"body": "still confused linking link type work mhevery keeps adding back compiler api docs something wants link type documented see example", "d": "7/2015"}, {"body": "thing exported public modules appear docs order able link needs exist docs exist docs must exported say modules", "d": "7/2015"}, {"body": "vsavkin doning lot work making errors better may already fixed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "ok walked away came back posting updated code working fine basically changed eventemitter object staticshared across instances shoppingcartstore closing issue updated sections case anyone else runs javascript export class cartsummary shoppingcartstore shoppingcartstore", "d": "7/2015"}, {"body": "clear mean dart import formdart coolio coolioformdirectives would fail added view", "d": "7/2015"}, {"body": "good question would supported nt support", "d": "7/2015"}, {"body": "updated title bug bit precise", "d": "7/2015"}, {"body": "sure goes", "d": "7/2015"}, {"body": "downgrading since perf optimization", "d": "7/2015"}, {"body": "important least may actually want conditionally change ui someone listening event versus sound reasonable", "d": "7/2015"}, {"body": "cause probably text nodes projected place binding", "d": "7/2015"}, {"body": "possible duplicate", "d": "7/2015"}, {"body": "duplicate see comment", "d": "7/2015"}, {"body": "closing duplicate", "d": "7/2015"}, {"body": "markharding check done compile time template added avoid hardtodebug errors suggestion catching errors silently goes spirit change developers see correct errors soon possible sometimes unavoidable example malformed api response main problem prevents subsequent activity ie router links wont navigate anymore could provide details exact reproduce btford guess decide happens compilation dynamically fetched template fails", "d": "7/2015"}, {"body": "eg activityownerobjname todate activitytimecreated much problem overcome verify ownerobj property however main concern blows error user perspective longer anything else debug mode", "d": "7/2015"}, {"body": "markharding oh sorry thought talking different error need stop looking gh issues coding sth else sorry noise disregard previous comment", "d": "7/2015"}, {"body": "works intended use property could null", "d": "7/2015"}, {"body": "also noticed wrap fixes issue component rendered component longer uses native shadow dom find element inspector", "d": "7/2015"}, {"body": "could add plnkrco", "d": "7/2015"}, {"body": "mhevery actually app running sure reproduce circumstances would nt easier clone repo run locally", "d": "7/2015"}, {"body": "see", "d": "7/2015"}, {"body": "thanks headsup", "d": "7/2015"}, {"body": "wrong repo guess wanted file issue filled like actionable please see submit issue enough context help", "d": "7/2015"}, {"body": "could easily bindings", "d": "7/2015"}, {"body": "blah ok sorry close reopen angular repo names good", "d": "7/2015"}, {"body": "limitation js function declarations get hoisted whenever circular dependency need nt see away around would argue situation parent needs know children children need know parent take care use cases sorry agree pain rare cases nt see way hence issue actionable close", "d": "7/2015"}, {"body": "hi router yet officially released full documentation meantime try asking question forum gitter closing issue really bug", "d": "7/2015"}, {"body": "btford igorminar ping", "d": "7/2015"}, {"body": "maybe ast sugar syntax ready could something like", "d": "7/2015"}, {"body": "feature want", "d": "7/2015"}, {"body": "tried something using directives also leaded another issue sure create new issue described basically possible bind upfront attribute generated router", "d": "7/2015"}, {"body": "hi router yet officially released full documentation meantime try asking question forum gitter closing issue really bug", "d": "7/2015"}, {"body": "please see", "d": "7/2015"}, {"body": "close submit issue", "d": "7/2015"}, {"body": "right appropriate repo one", "d": "7/2015"}, {"body": "sorry guys totally right created", "d": "7/2015"}, {"body": "adds similar setup test case passing head might fixed ping reopen issue still see problem", "d": "7/2015"}, {"body": "generated file imports cleanly pushed without manual edits opened fixing router typings", "d": "7/2015"}, {"body": "duplicate please add usecase", "d": "7/2015"}, {"body": "pkozlowskiopensource thank could nt find anything", "d": "7/2015"}, {"body": "suspect related bug installing typescript beta referenced guide may irrelevant fact given second point coding atom typescript get errors practise code compiled ran correctly errors bit offputting following introductory guide", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "ca nt reproduse", "d": "7/2015"}, {"body": "works screenshoot", "d": "7/2015"}, {"body": "hi eric lot different options inject common parent component service use message bus use syntax pass one directive another parent component use syntax coordinate two", "d": "7/2015"}, {"body": "matanlurey thank quick answer give try also nt work event happens one charge dealing example", "d": "7/2015"}, {"body": "sounds reasonable", "d": "7/2015"}, {"body": "case someone looks ended implementing simple message bus code thing different whenever component listening something make ngzone run manually code since events happening callbacks executed inside array wo nt update view default", "d": "7/2015"}, {"body": "metadata types usable decorator eg currently would", "d": "7/2015"}, {"body": "dependent", "d": "7/2015"}, {"body": "push since occupied syncmaster onduty", "d": "7/2015"}, {"body": "jhades noticed uppercase lowercase pipes work adding however still work default believe", "d": "7/2015"}, {"body": "jhades jessegood fault sorry pushed pr correct fix problem work transforming reference change would allow work since providing new reference bindings would correctly transform value", "d": "7/2015"}, {"body": "igorminar comment", "d": "7/2015"}, {"body": "fixed bugs good use", "d": "7/2015"}, {"body": "closed properly message say btw test script completely correct", "d": "7/2015"}, {"body": "ah magic string parsing strikes new changelogmk checked change gened script least basic functionality working send pr fixing issues", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "gastrodia please try latest release testing almost old version lot movement repo", "d": "7/2015"}, {"body": "sorry pkozlowskiopensource change error", "d": "7/2015"}, {"body": "syntaxerror failed execute add domtokenlist token provided must empty start active null stacktrace error syntaxerror failed execute add domtokenlist token provided must empty start active null", "d": "7/2015"}, {"body": "seen issue trying bind empty string class changing undefined instead blank string fixed", "d": "7/2015"}, {"body": "thelgevold could please share minimal reproduce scenario trying bind empty string class", "d": "7/2015"}, {"body": "pkozlowskiopensource sure empty string part design still fail empty string assigned class simple case error seen import component view cssclass component selector demo view template test directives cssclass export class cssempty someclass fails someclass empty error msg syntaxerror failed execute add domtokenlist token provided must empty someclass cssempty stacktrace error syntaxerror failed execute add domtokenlist token provided must empty someclass cssempty changedetectionerrorbaseexception new changedetectionerror abstractchangedetectorexecuteabstractchangedetectorthrowerror eval abstractchangedetectorexecuteabstractchangedetectordetectchanges abstractchangedetectorexecuteabstractchangedetectordetectchangesinshadowdomchildren abstractchangedetectorexecuteabstractchangedetectordetectchanges abstractchangedetectorexecuteabstractchangedetectordetectchangesinshadowdomchildren abstractchangedetectorexecuteabstractchangedetectordetectchanges abstractchangedetectorexecuteabstractchangedetectordetectchangesinlightdomchildren run promise asap flush uncaught syntaxerror failed execute add domtokenlist token provided must empty someclass cssempty", "d": "7/2015"}, {"body": "please create plnkrcoedit example showing error refile issue", "d": "7/2015"}, {"body": "alternative way fix plan", "d": "7/2015"}, {"body": "styles bindings get moved different location shared components", "d": "7/2015"}, {"body": "sure anything css class rather updating", "d": "7/2015"}, {"body": "yeah might issue css property seems issue updating class routing trigger caused bindings reevaluated seeing new bound value nt replace old value instead left values new old works ok button click though", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "alpha version fixes problem", "d": "7/2015"}, {"body": "fixed master accessible npm thu jul pm torgeir helgevold notifications githubcom wrote alpha version fixes problem reply email directly view github", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "issue fixed upgraded samples", "d": "7/2015"}, {"body": "mean annotations look thursday", "d": "7/2015"}, {"body": "bet recreating change records application bootstraps already lot issues caused serialize change records change detector transformation two clearly tightly linked", "d": "7/2015"}, {"body": "think bump priority one ie serializing change records make system stable vsavkin mhevery think", "d": "7/2015"}, {"body": "serializing records great idea though remember looking bit back thinking would bit tricky lot records link related issue", "d": "7/2015"}, {"body": "actually closing assume would likely cause browser issues anyways", "d": "7/2015"}, {"body": "bryantharpe need remember html casesensitive want bind properties mixed case need use snakecase dashcase conversion short work case probably easier better", "d": "7/2015"}, {"body": "thanks pkozlowskiopensource totally forgot trying flip innertext thanks tip said agree binding innertext odd anyways changed prop syntax", "d": "7/2015"}, {"body": "duplicate see discussion", "d": "7/2015"}, {"body": "work edge file specific issues see", "d": "7/2015"}, {"body": "tests verification mechanisms check trying engage service lib authors like get much info ok", "d": "7/2015"}, {"body": "nt think support js named constructors going close reopen specific use case", "d": "7/2015"}, {"body": "would dart version since dart transformer dart injectable class myservice useforinjectable", "d": "7/2015"}, {"body": "ca nt default constructor injectable one free create named constructors wouldt solve issue", "d": "7/2015"}, {"body": "occurs transformer build step warns sees multiple constructors behavior want always use default constructor let warn", "d": "7/2015"}, {"body": "mourahi probably sloppy notice needs added quick scan doc see could please point exact line better yet send pull request correction", "d": "7/2015"}, {"body": "english bad sorry problem example must add mouseover like host mouseover show thanks sorry", "d": "7/2015"}, {"body": "mourahi linked exact line code place added", "d": "7/2015"}, {"body": "exact line", "d": "7/2015"}, {"body": "option correct nt use observablewrapper internal api", "d": "7/2015"}, {"body": "better way since wanted first one option best regards tiago braga", "d": "7/2015"}, {"body": "pr open", "d": "7/2015"}, {"body": "closed", "d": "7/2015"}, {"body": "still alpha many things flux sorry order get overflowed nonactionable issues going close", "d": "7/2015"}, {"body": "seems fair continue use json object", "d": "7/2015"}, {"body": "possible bind formbuilder control javascript variable model mhevery davideast btford jeffbcross vsavkin igorminar js thispersonform fbgroup name thismodelname binding validatorsrequired required age optional onsubmit consolelog thismodel model name changed receive model api endpoint want update resource model name changed send put server need map form object new object sent api think nt know case ngformmodel would better nt model binding", "d": "7/2015"}, {"body": "issue danicomas also tried update form control value threw following error anyway approach supposed hack solve issue really wanted work like danicomas exemplified anyone better suggestion ears thanks advance", "d": "7/2015"}, {"body": "still alpha many things flux sorry order get overflowed nonactionable issues going close", "d": "7/2015"}, {"body": "ok mhevery need keep consideration ngform valid cases devs call ws ws return json data json data added js variable model update fields form send updated model put ws need update model form fields ugly", "d": "7/2015"}, {"body": "elaborate bit use case understand requirements example analytics sdk nt web client reads meta tags care seo want app visible search engine crawlers facebook previews understanding meta tags useful web crawlers google search facebooktwitter preview means meta tags matter server serving initial web page able run angular app server means helper service let call allows configure concern related server settings settings document title course meta tags ways imagine working include decorator component allow user configure server settings let make extremely simple useragent twitterbot disallow useragent disallow class app routeconfig data property simular would handle auth typescript var robottxt useragent twitterbot disallow useragent disallow var metatags component view routeconfig path component home data metatags robottxt class app configure via helper service typescript var robottxt useragent twitterbot disallow useragent disallow var metatags component view routeconfig class app constructor server server serverset title home page serverset robottxt robottxt serverset metatags metatags going back original description metatags meaningful web crawlers increase initial load indexhtml little bit including users use also directives manage meta tags service could either via bindings server config remove build step", "d": "7/2015"}, {"body": "titles nt useful crawlers changes name tab useful change traverse app", "d": "7/2015"}, {"body": "intellix changing title already supported title service", "d": "7/2015"}, {"body": "crawlers read metatags angular executes reason asking feasible", "d": "7/2015"}, {"body": "sorry place file update requests currently alpha many things flux", "d": "7/2015"}, {"body": "hi ok understand ticket available feature issue valid points important missing feature also planed get implemented", "d": "7/2015"}, {"body": "nevermind looks like everything required already module modeldrivenforms example showed use everything assuming eventually forms modules split following works adaptation time typescript import formdirectives validators formbuilder controlgroup bootstrap component view component selector mimic viewinjector formbuilder view template directives formdirectives class appcomponent form controlgroup builder formbuilder constructor b formbuilder thisbuilder b thisform bgroup name bootstrap appcomponent", "d": "7/2015"}, {"body": "due missing type definitions typescript thing", "d": "7/2015"}, {"body": "suggestion version dts use order http module work way use ts beta", "d": "7/2015"}, {"body": "yeah include somewhere tsconfig file typescript figure typescript declare module class http backend defaultoptions constructor backend defaultoptions request url string options get url string options post url string body options put url string body options delete url string options patch url string body options head url string options class mockbackend constructor req class headers constructor config class xhrbackend class baserequestoptions var array eventually would nt problem http typings live tsd repo works close issue sidenote need starter repo check one feedback welcome", "d": "7/2015"}, {"body": "many thanks create typings folder add reference tsddts works try look webpack starter thanks", "d": "7/2015"}, {"body": "dupe", "d": "7/2015"}, {"body": "temporary workaround copy seem work ok", "d": "7/2015"}, {"body": "another temporary workaround remap files using webpack", "d": "7/2015"}, {"body": "sounds like difference transpilation tool webpack still use traceur step root dir npm package traceur transpiled using commonjs module loading note file correct using module semantics file reexports symbols exports etc looks like shimmed properly commonjs needs inline symbols implementation detail shim nothing change source", "d": "7/2015"}, {"body": "cc juliemr", "d": "7/2015"}, {"body": "ehjay close issue belongs another repo made pr based comments", "d": "7/2015"}, {"body": "dupe", "d": "7/2015"}, {"body": "kevmoo submit pr fix", "d": "7/2015"}, {"body": "way ahead ya", "d": "7/2015"}, {"body": "thank much", "d": "7/2015"}, {"body": "version angular please steps reproduce", "d": "7/2015"}, {"body": "working properly indexhtml would select link would display everything area fine well make url fine dandy would refresh page url page would appear blank upon inspection page developer console element component contains even dom dom ended looking like like said earlier like reiterate expert feel though problem upon refresh page requests template component outlet display inside may well wrong feel like may issue", "d": "7/2015"}, {"body": "missing base href tag html router nt give good error message definitely confusing point landed gives prescriptive error message issue duplicate see discussion", "d": "7/2015"}, {"body": "sincerest apologies looked depth issues thank pointing problem good luck rest development", "d": "7/2015"}, {"body": "moved alpha since still trying figure proper way load new lib tests apps consume angular", "d": "7/2015"}, {"body": "unassigning new rxjs alpha release since much churn codebase right helping rxjs project accelerate alpha", "d": "7/2015"}, {"body": "also tried returning object looking like implied dice", "d": "7/2015"}, {"body": "already works class directive need make sure referenced view annotation", "d": "7/2015"}, {"body": "missing view annotation problem nt expecting specify since nt attribute even explicit thanks", "d": "7/2015"}, {"body": "yeah make sense", "d": "7/2015"}, {"body": "kind make sense sure much since type browser sees attributes value value kind broken browser angularjs anything way solving issue would parse template strings instead live dom already parsed browser even case kind breaking attributes naming convention short ca nt spaces attribute names example ca nt write instead also ca nt write going close one nt think much", "d": "7/2015"}, {"body": "clarify today right", "d": "7/2015"}, {"body": "also makes sense length calculation expensive", "d": "7/2015"}, {"body": "iterable would true hasnext false length approach would nt work iterables workaround using right item itemslast issues equals overridden", "d": "7/2015"}, {"body": "also try get", "d": "7/2015"}, {"body": "naomiblack reach owner see get transferred ownership", "d": "7/2015"}, {"body": "yes pinged", "d": "7/2015"}, {"body": "trouble reproducing mhegazy working change broccoli build stop ignoring ts errors think proper enforcement nt regress", "d": "7/2015"}, {"body": "entry point page specify tag found similar behaviour milestones back think app nt base tag edit went back tried app yes removing base tag causes issue navigation routes works however attempting go back route updates page components url", "d": "7/2015"}, {"body": "thanks tip added base tag works always going required strategy exactly hard add page big deal", "d": "7/2015"}, {"body": "bryantharpe either add tag set app base href like currently router uses determine base uri think might better remove option entirely make app base href binding required", "d": "7/2015"}, {"body": "thanks input btford makes sense went ahead updated code work like", "d": "7/2015"}, {"body": "merged", "d": "7/2015"}, {"body": "tried repo everything looks good closing", "d": "7/2015"}, {"body": "cc", "d": "7/2015"}, {"body": "closed", "d": "7/2015"}, {"body": "discussed planning", "d": "7/2015"}, {"body": "investigated repro case possible html exposes via dart dclloadnexttolocation childcomponent bind dynamicbox tovalue class childcomponent childcomponent dynamicbox dynamicbox fails today gets", "d": "7/2015"}, {"body": "need add http injectables angular ca nt possibly know intend use across application example may use party http router solution second issue looks legit alxhub", "d": "7/2015"}, {"body": "first problem due appinjector boostrap bindings vs viewinjector vs hostinjector second problem might solved", "d": "7/2015"}, {"body": "thank replying imagine application need http requests component found useful would like component component uses importante component nothing opinion still gon na close best regards tiago braga", "d": "7/2015"}, {"body": "route config become error change etc want bind want hashchange routing try changes let know still trouble", "d": "7/2015"}, {"body": "used url path would become indexhtmllogin static url refreshing page would work also tried bind thank closing reopen issue persists", "d": "7/2015"}, {"body": "btford sorry reopen thread upgraded alpha coulndt get routers work properly first things first router nested router problem relative paths upgrading threw following error solved way also refer result still enter page code constructor enter nested router use something like problem doenst work url commercial problem following redirect nt work problem nested router nested router triggers debugger construtor nt resolve commercial page nested router component problem router link change router router link nested router like nt forget nested router category parameter like sorry trouble best regards tiago braga", "d": "7/2015"}, {"body": "manage make nested routing work pasted code end example working correctly mapped routerlink start routerlink contact routerlink aboutus routerlink routerlink routerlink component selector mainapp routeconfig new route path start component start new route path contact contact component contact new route path aboutus aboutus component aboutus new route path nested nested component nestedrouterexample export class mainapp component selector nestedrouterexample view directives routeroutlet template routeconfig new route path component start new route path component contact new route path component aboutus export class nestedrouterexample", "d": "7/2015"}, {"body": "seems still broken basically seems way triggering route within nested router", "d": "7/2015"}, {"body": "sorry late feedback works ca nt access see ca nt use routerlink something like guess nt exactly configuration mind mean routers need independent want say go commercial child router job possible yet anyway first option works ca nt access routeparams property nested router living problems refresh page working back page working best regards tiago braga", "d": "7/2015"}, {"body": "able generate urls correctly alpha using style odd part though required reference route name add slash front like referencing path assume bug got going", "d": "7/2015"}, {"body": "may mis configuration part indeed works tweak things weird working previous alpha well close", "d": "7/2015"}, {"body": "seem dts files define contracts exposed module root npm package although ca nt really figure use since nt seem wrap exports named external module reference dts files path inconvenient perhaps someone familiar typescript comment correct way use", "d": "7/2015"}, {"body": "hi masaeedu npm package directly results compilation usable set typings knowledge ca nt use something similar cheers", "d": "7/2015"}, {"body": "open research topic determine could use files distributed via npm inputs typescript compiler along sources right thing possible files distribution since provide typings well implementation planning figure sometime", "d": "7/2015"}, {"body": "alexeagle jpsfs case interested managed find slightly hackish workflow allows use dts files npm package directly create symlink named adjacent tsconfigjson pointing subdirectory npm package resides using jspm allows typescript built module resolution find dts files npm package folder makes compilation intellisense work vs code atomtypescript know using definition files directly npm package works much better definitelytyped file believe bit date probably way map subfolders top level namespace using tsconfig nt would make good feature request would avoid necessity symlink overall nt think anything necessarily needs changed angular package", "d": "7/2015"}, {"body": "thanks really good info open feature request typescript team support multiple include paths think would achieve thing symlink thu jul asad saeeduddin notifications githubcom wrote alexeagle jpsfs case interested managed find slightly hackish workflow allows use dts files npm package directly create symlink named adjacent tsconfigjson pointing subdirectory npm package resides using jspm allows typescript built module resolution find dts files npm package folder makes compilation intellisense work vs code atomtypescript know using definition files directly npm package works much better definitelytyped file believe bit date probably way map subfolders top level namespace using tsconfig nt would make good feature request would avoid necessity symlink overall nt think anything necessarily needs changed angular package reply email directly view github", "d": "7/2015"}, {"body": "anyone could help", "d": "7/2015"}, {"body": "vincentsong free screensharing debug", "d": "7/2015"}, {"body": "please provide replicated error closing actionable", "d": "7/2015"}, {"body": "thanks pointing published tag verified also added steps release doc make sure releaser checks npm pub running scripts forgot script issue nt actually follow publishing presumably passing f line prompts actually publishing submit pr fix", "d": "7/2015"}, {"body": "turns issue", "d": "7/2015"}, {"body": "internal api used application needed create facade differences js dart use direct apis", "d": "7/2015"}, {"body": "mhevery possible use observablewrapper due commit", "d": "7/2015"}, {"body": "best best js call torx observable returned http give rxjs subject subscribe im actively working removing step work getting rid observable facade observablewrapper purpose jsanddartfriendly solution source code wed jul pm daniel comas fern\u00e1ndez lt notifications githubcom wrote mhevery possible use observablewrapper due commit temporary issue resolved observables returned directly http class methods reply email directly view github jeff cross software engineer crossj googlecom", "d": "7/2015"}, {"body": "thanks jeffbcross", "d": "7/2015"}, {"body": "beataa track working week get able produce build component router angular includes many bug fixes", "d": "7/2015"}, {"body": "great thanks info brain", "d": "7/2015"}, {"body": "error seems dependency also please bring bugs related instead", "d": "7/2015"}, {"body": "alright really cause error running perfectly fine without error colleague computer suggest exactly right", "d": "7/2015"}, {"body": "bower list show angular incompatible available latest angularanimate available latest angular incompatible available latest angularbootstrap latest angular available latest angularelastic angular available angularfileupload angular available latest angulargooglemaps angular available lodash angularimagespinner angular available latest spinjs latest angularloadingbar latest angular available angularmoment angular available moment angularoffclick angular available angularpermission latest angularuirouter angularpnotify angular available latest jquery available pnotify angularsanitize available latest angular angularsocial angular incompatible gt available angularuimap angular available angularuiutils latest angularuirouter angular available angularuiutils latest angular available angularxeditable angular available animatecss latest bootstrap jquery available bourbon jquery latest lodash incompatible available latest malihucustomscrollbarplugin jquery available jquerymousewheel jquery available ngimgcrop nginfinitescroll angular available oauthjs restangular latest angular lodash incompatible gt lt available latest satellizer latest angular", "d": "7/2015"}, {"body": "closing since wrong repo general support question would better asked stack overflow similar", "d": "7/2015"}, {"body": "alright thanks wed jul pm pawel kozlowski notifications githubcom wrote closing since wrong repo general support question would better asked stack overflow similar reply email directly view github", "d": "7/2015"}, {"body": "ca nt drop need really way around autolowercasing dom nt think least current strategy compiling live dom already parsed text browser basically browsers lowercase everything angular chance kick solve problem would html text dom parsing framework sort needed serverside rendering anyway would substantial change way framework operates drawbacks larger codebase discrepancy browsers custom parsers etc coming back problem got specialcasing commonly used properties including innerhtml simply working making specialcasing configurable generic closing reasonable workarounds working generic solution would love continue discussion got questions remarks", "d": "7/2015"}, {"body": "looks like able implement applying subset zonejs patches similarly implemented zones reactnative", "d": "7/2015"}, {"body": "proof concept", "d": "7/2015"}, {"body": "closed via", "d": "7/2015"}, {"body": "bug also easy add see map maybe take stab", "d": "7/2015"}, {"body": "logged angularspecific thought would fixed repo show team issues dashboard take stab", "d": "7/2015"}, {"body": "sorry noise seems reexports work problem formdirectives actually constlist subdirectives issue closing issue", "d": "7/2015"}, {"body": "store implemented injectable service requires fixing serializer injectable", "d": "7/2015"}, {"body": "dup", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "needs design discussed passing every object opaque filter prohibit optimizations road", "d": "7/2015"}, {"body": "discussed misko tackle benchmarking query performance improvements first adding general apis", "d": "7/2015"}, {"body": "closed", "d": "7/2015"}, {"body": "started working tbosch wo nt done milestone", "d": "7/2015"}, {"body": "currently blocked issue serve jsonp content serve file could renamed previously served contenttype okay strict mime checking turned chrome however includes header turns strict mime checking means file needs control", "d": "7/2015"}, {"body": "huh maybe cleanest solution pub mime resolver support jsonp mime type could turn nosniff completely feels like may lead users path app works pub serve deploy talk nweiz probably informed opinion see thinks either way relatively straightforward fix", "d": "7/2015"}, {"body": "thanks think also workaround rewriting content type extra middleware proxying node connect tue jul pm bob nystrom notifications githubcom wrote huh maybe cleanest solution pub mime resolver support jsonp mime type applicationjavascript could turn nosniff completely feels like may lead users path app works pub serve deploy talk nweiz probably informed opinion see thinks either way relatively straightforward fix reply email directly view github", "d": "7/2015"}, {"body": "note future reference solution serve dart tests differently prs three major packages put behind proxy server run tests skip precompiling dart code js however adds risk write code executes correctly dartium nt work correctly translation js mitigate continue take slow approach postcommit builds nonprs ensure bugs nt get introduced means possibility breaking build merging pr green travis ideal however keep precommit build fast enough keep developers productive means running tests faster mode", "d": "7/2015"}, {"body": "cc juliemr vsavkin", "d": "7/2015"}, {"body": "see well context", "d": "7/2015"}, {"body": "vsavkin ran problem trying create workaround fix merged turns everything worked included directives stopped investigating reason including one directives creates side effect test try reproduce array worked locally travis might due typescript compiles syntax", "d": "7/2015"}, {"body": "fixed via", "d": "7/2015"}, {"body": "igorminar may opinion done", "d": "7/2015"}, {"body": "need special mode server sends right http headers turn csp mode", "d": "7/2015"}, {"body": "got something almost complete", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "think first problem fixed master take look", "d": "7/2015"}, {"body": "think totally fixed sha petebacondarwin mentioned closing", "d": "7/2015"}, {"body": "misko still issue getters return type looked ast typescript generates nt see better type information", "d": "7/2015"}, {"body": "yep still also file introduces number implicit types nt previous version", "d": "7/2015"}, {"body": "mhevery maybe look angular start fielding", "d": "7/2015"}, {"body": "misko sorry", "d": "7/2015"}, {"body": "query methods explicitly typed", "d": "7/2015"}, {"body": "also reproduced application error typeerror undefined function evaluating ynext values createlistofbindings resolve resolveandcreate createappinjector run run bootstrap triggerevents trigger run zoneboundfn lib promise internal trycatch lib promise internal invokecallback lib promise internal publish run zoneboundfn lib promise asap flush logerror line defaulterrorreporter line onerror line onerror line run line anonymous function line run line bootstrap line anonymous function line anonymous function powcorejs line anonymous function underscoreminjs line triggerevents powcorejs line trigger powcorejs line anonymous function line run line zoneboundfn line lib promise internal trycatch line lib promise internal invokecallback line lib promise internal publish line anonymous function line run line zoneboundfn line lib promise asap flush line", "d": "7/2015"}, {"body": "found root cause issue safari nt implement used traceurruntime polyfill used facade makes unit tests fail sure try fix traceur knowing go away work around bug thoughts please", "d": "7/2015"}, {"body": "appears issue addressed latest version previously using version experienced issue running safari runs fine latest traceur", "d": "7/2015"}, {"body": "default angularjs binds elements properties attributes attribute property element see use syntax bind attributes", "d": "7/2015"}, {"body": "note might fixed changing", "d": "7/2015"}, {"body": "let make sure following scenarios work set property component also works dynamically loaded components also works rootlevel eg application shell component", "d": "7/2015"}, {"body": "pr verifies set properties attributes classes root element angular supports using work property dom elements", "d": "7/2015"}, {"body": "checked matanlurey ok", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "vsavkin trying replicate parsers formatters pipeline note problems try find better solution hard control order execution parsers formatters multiple directives trying add things pipeline next impossible control order inclusion execution parsing formatting coupled validation causing problems", "d": "7/2015"}, {"body": "petebacondarwin idea get leave maybe", "d": "7/2015"}, {"body": "naomiblack mhevery dealt right", "d": "7/2015"}, {"body": "work epxected js", "d": "7/2015"}, {"body": "angular could bind variable like name name null nothing shown screen angular name seems output word null may expected nt friendly nt want something like name templates missing something another way approach thanks simon", "d": "7/2015"}, {"body": "vicb true consistent js behaviour nt think users would expect least find surprising things work going reopen one discuss cc mhevery", "d": "7/2015"}, {"body": "vicb true consistent js behaviour nt think users would expect least find surprising things work would expect jus place", "d": "7/2015"}, {"body": "yep empty string handled", "d": "7/2015"}, {"body": "dunno think value matching language eg whatever people want", "d": "7/2015"}, {"body": "templates definitely handle nulls undefined empty string otherwise needs done user every place holder every template pkozlowskiopensource right behaviour angular", "d": "7/2015"}, {"body": "empty string used value dynamicchangedetection jitchangedetection angular detections best strategy bootstrap might good idea default values change detection strategy pregeneratedchangedetection jitchangedetection dynamicchangedetection", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "compare really nice feature one lots developers used plays well elvis operator also everyone used well operator behaviour grrrr introducing btw tbh nt fiddled around much nt know usefulness defaulting diminished", "d": "7/2015"}, {"body": "specific reason different behavior dynamicchangedetection jitchangedetection detection mode selected startup assume kind featureenvironment detection would end result different developers agree gkalpak pkozlowskiopensource bla default ui nt think undefined null visible ui ever useful default values option complicated assuming binding points class instance property maybe hook enable debug logging development might interesting ie providing way let developers know might something wrong", "d": "7/2015"}, {"body": "empty string user never see", "d": "7/2015"}, {"body": "topic also make attributes otherwise makes http call null", "d": "7/2015"}, {"body": "direct equivalent directive angular bootstrap application element target element css selector", "d": "7/2015"}, {"body": "following systemimport app appts import component view bootstrap component selector myapp view template angular second title component controller class myappcomponent name string constructor thisname alice bootstrap myappcomponent course working text ca nt printed directly html tag would like reach able manipulate title tag inside head tag angular app needs changed navigation", "d": "7/2015"}, {"body": "davidgangel setting title using service inject places want change title", "d": "7/2015"}, {"body": "hi thank response okay take look modules meta tag manipulation well thank", "d": "7/2015"}, {"body": "nope services manipulating meta tags yet could reasonable feature request depending usecase could please open separate issue specifically asking way manipulate meta tags", "d": "7/2015"}, {"body": "okay thank raised ticket meta manipulation", "d": "7/2015"}, {"body": "unable reproduce clearing cache", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "wow quick", "d": "7/2015"}, {"body": "four hours quick", "d": "7/2015"}, {"body": "pflannery causing issues practice afaik css class names casesensitive ca nt mixed cases html markup finding problems css uses camel case could precise exact usecase choice camel case raw input using cssclass directive would nice could provide means configure cssclass directive per component would nt work party components would dependent app settings thus could break without warning would keen knowing exact usecase sounds like might mixedcase css classes great trying replicate markup html", "d": "7/2015"}, {"body": "pkozlowskiopensource problem comes using writing libraries follow camel case guidelines like oocss using libraries like animatecss camel case preference dashed case would convert previous libraries dashed case would forced write lower case angular get around dash case transformer personally want keep readability using camel case classes code html would nt work party components would dependent app settings thus could break without warning perhaps separate directive better approach", "d": "7/2015"}, {"body": "ok see readability right perhaps separate directive better approach coded today conversion affects places css class set element separate directive would nt work nt enough tbosch maybe aggressive conversion css class name comes html attribute value using syntax", "d": "7/2015"}, {"body": "nt see choice css class names causes issue could provide working example demonstrating problem", "d": "7/2015"}, {"body": "hi also came issue goes html provide output html see used expression bind class element output hyphens instead capital letters expected output actual output result see actual output nt darker blue color expected output also dashes appear output html best regards tiago braga", "d": "7/2015"}, {"body": "quick workaround make sure css class names lowercased makes sense anyway since browsers dealing casesensitive css", "d": "7/2015"}, {"body": "pkozlowskiopensource thing actually ton css classes capital letters worked ca nt use", "d": "7/2015"}, {"body": "marked workaround", "d": "7/2015"}, {"body": "found case workaround nt work baffled first sure classes case sensitive realised angular project nt doctype defined added top page workaround stops working firefox chrome didnt try browser something else noticed article posted last updated mar think ability output wysiwyg would resolve", "d": "7/2015"}, {"body": "mhevery tried post working plunker example cant get angular work always see require undefined template plunker fiddler etc happy try demonstrate", "d": "7/2015"}, {"body": "pflannery go note hello world sample cdn angular alpha system note traceur options ca nt exactly remember options put configjs since nt code also goes google traceur could nt find system cdn sake plunker fine best regards tiago braga", "d": "7/2015"}, {"body": "thank much example issue", "d": "7/2015"}, {"body": "yup behaviour changing dash case pkozlowskiopensource said works way", "d": "7/2015"}, {"body": "maintaining original capitalization dashes use css class names dynamically bind worked fine using ngclass much like continue", "d": "7/2015"}, {"body": "verified differentiate case class names", "d": "7/2015"}, {"body": "hi tnx denormalizing css class name", "d": "7/2015"}, {"body": "cc matanlurey andresaraujo vicb sigmundch jelbourn", "d": "7/2015"}, {"body": "works box", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "cc tedsander", "d": "7/2015"}, {"body": "js see need enforce also supports absolute paths anyway sure relative paths successfully implemented still dev dropped topic using globally configured components component resolving would nice", "d": "7/2015"}, {"body": "rolandjitsu would enforced recommended would make things consistent across multiple interdependent packages distributed source idea provide implementation popular environments outofthebox pub amp npm attribute string put whatever want long suitable knows attempt implement relative paths unsuccessful far plan come back point global already simply implement however unless dependencies also follow convention might hard reuse share code", "d": "7/2015"}, {"body": "yjbanov ok could use resolve components path try though sure mean say might hard reuse share code", "d": "7/2015"}, {"body": "rolandjitsu think yjbanov referring problem different people refer components consistent way people develop components separately refer component component b b developer would need know find respect app point everyone needs agree convention example components means another group people follows different convention may trouble using components urls different allow us separate problem two layout project separate dependencies written example b import url b developers nt need know layout app still use map urls specific locations resolved hope clarifies idea bit", "d": "7/2015"}, {"body": "rolandjitsu one example like use template reallyawesometemplates package relative uris worrying type system user etc", "d": "7/2015"}, {"body": "rolandjitsu sigmundch matanlurey summed pretty nicely", "d": "7/2015"}, {"body": "sigmundch matanlurey thanks detailed explanation get problem global configured point custom place", "d": "7/2015"}, {"body": "point reference jspmsystemjs use syntax already maybe know registry sure conflicts dovetails fyi", "d": "7/2015"}, {"body": "bumping wo nt make", "d": "7/2015"}, {"body": "robwormald thanks pointer yes proposal similar although like try something package manager independent want support pub npm simultaneously already", "d": "7/2015"}, {"body": "yjbanov change also apply apps use ts js dart", "d": "7/2015"}, {"body": "rolandjitsu adds dart support js support tracked", "d": "7/2015"}, {"body": "duplicate rule parts messages eg characters horrible especially comes play suggested idea important point broken rules carries enough metadata done opens door much powerful error reporting strategies", "d": "7/2015"}, {"body": "nt see example point plalx sounds interesting", "d": "7/2015"}, {"body": "solved", "d": "7/2015"}, {"body": "actual issue dom adapter used compiler used directiveprocessor transformer incorrectly reflects elements adapter detect properly properties dom element problem manifests via change detection", "d": "7/2015"}, {"body": "anyone tackling tbosch mentioned something registering schema last week", "d": "7/2015"}, {"body": "matanlurey figure plan today looks like providing schema would proper solution may take time may provide temporary solution unblock", "d": "7/2015"}, {"body": "assigned tbosch already looking reflection issue", "d": "7/2015"}, {"body": "pr go today", "d": "7/2015"}, {"body": "verified dartium awesome metal", "d": "7/2015"}, {"body": "looks good thanks guys", "d": "7/2015"}, {"body": "todomvc works transformer well", "d": "7/2015"}, {"body": "include url instead bind also prefer decorators calling directly", "d": "7/2015"}, {"body": "thanks btford today try best way something like routechangesuccess angular routersubscribe exist watch detect changes location", "d": "7/2015"}, {"body": "use", "d": "7/2015"}, {"body": "btford changed nav url enter redirect home component home loaded ok click hyperlink routelink redirect ok nav url enter home component loaded ko enter component loaded ko worked better", "d": "7/2015"}, {"body": "sorry btford problems version updated works well things said last comment", "d": "7/2015"}, {"body": "fyi might easier get working yegor fixed", "d": "7/2015"}, {"body": "take shot", "d": "7/2015"}, {"body": "nvm package urls enough examples unless want define dart npm package example different worms prepared open", "d": "7/2015"}, {"body": "try fri jul pm jacob macdonald notifications githubcom wrote nvm package urls enough examples unless want define dart npm package example different worms prepared open reply email directly view github", "d": "7/2015"}, {"body": "workarounds able use material dart app", "d": "7/2015"}, {"body": "tomaseilsoe nobody using components internal testing stage", "d": "7/2015"}, {"body": "ohh ok", "d": "7/2015"}, {"body": "approved eo june current browser fully supports es release cycles faster starting thing today option using transpiler", "d": "7/2015"}, {"body": "various changing decorators proposals ie early stages may necessarily ever ratified said projects like ember aurelia plenty others choose rely features compiletojs toolchains like typescript help inform technical committee admittedly questionable need features could say helping push proposal along helping gain wider adoption future toolchains nt needed worth something right", "d": "7/2015"}, {"body": "vicb yeah know browser support optimal right even using using babel transpiler gives much wider support check see babel support typescript difference babel uses actual standard syntax instead custom typescript syntax", "d": "7/2015"}, {"body": "note probably removed time", "d": "7/2015"}, {"body": "ca nt rolled last step", "d": "7/2015"}, {"body": "yeah today previously wanted avoid prevent coupling angularmaterial big deal fri jul rado kirov notifications githubcom wrote ca nt builddartmaterial rolled last step builddart reply email directly view github", "d": "7/2015"}, {"body": "jelbourn get fixed", "d": "7/2015"}, {"body": "yet wrote change forgot send pr send today", "d": "7/2015"}, {"body": "write", "d": "7/2015"}, {"body": "seem like types bindings work expected dart issue closing ca nt replicate reopen work dart", "d": "7/2015"}, {"body": "idea interpolation even worked inside attributes angular", "d": "7/2015"}, {"body": "irfantusneem thnx suggestions nt think change error messages exactly proposing ca nt bind esscontext since nt know property essform element matching directives corresponding property please check directives attributes view defines necessary components issue error thrown misspell fail declare property directive lack directive lack property gives error could think different error massage would capture case well want extraawesome error messages want hear error messages people would like see time need make sure error messages accurate btw working different check try detect nonstandard elements like without corresponding component directive throw error case suggested error message would nonstandard essform element web component nt matched directive maybe misspelled name forgotten add directive list view error would thrown property binding one wdyt", "d": "7/2015"}, {"body": "caitp started needs someone pair design decisions vs forms work angular", "d": "7/2015"}, {"body": "similar ui router", "d": "7/2015"}, {"body": "seems reasonable related", "d": "7/2015"}, {"body": "installed tool run dir land", "d": "7/2015"}, {"body": "tried output max osx tsd main install lt pattern gt install definitions using one globbing patterns tsd install mocha install mocha tsd install angularjs install full angularjs bundle followed install options", "d": "7/2015"}, {"body": "oops double hyphen", "d": "7/2015"}, {"body": "thanks worked related getting errors important thought would show", "d": "7/2015"}, {"body": "closing issue resolved ongoing work complete dts file", "d": "7/2015"}, {"body": "matanlurey take look today", "d": "7/2015"}, {"body": "still different error today exception uncaught error class list instance getter key nosuchmethoderror method found key receiver list arguments stack trace objectnosuchmethod dart objectnosuchmethod dart bindingwithvisibilitygetkeyid package protoinjectorinlinestrategyprotoinjectorinlinestrategy package protoinjectorprotoinjector package protoelementinjectorprotoelementinjector package protoelementinjectorcreate package createprotoelementinjector package createelementbinders package createappprotoview package protoviewfactorycreateappprotoviews package", "d": "7/2015"}, {"body": "disregard previous bad working great thanks victor", "d": "7/2015"}, {"body": "available", "d": "7/2015"}, {"body": "robwormald said renamed", "d": "7/2015"}, {"body": "closed via", "d": "7/2015"}, {"body": "use place requests iterablediff uses observablelist observe package use observablelistdiff observablelistdiff following diffs collection collection changes notifies change detection needed onpush change detection", "d": "7/2015"}, {"body": "thanks try", "d": "7/2015"}, {"body": "change detection runs angular design post code repro problem", "d": "7/2015"}, {"body": "sure let clarify onallchangesdone lifecycle event could update model triggers child update triggers event forth make sense create repro feel like simple enough case understand", "d": "7/2015"}, {"body": "onallchangesdone change model dev mode check would fail allow infinite digest strict limit one use case reproduces", "d": "7/2015"}, {"body": "per discussion matanlurey closing reopen repro case", "d": "7/2015"}, {"body": "andres try using absolute urls eg plugin following enable support dart injectable class darturlresolver implements urlresolver static final baseurlresolver new urlresolver final string urlprefix const darturlresolver urlprefix const darturlresolverwithurlprefix thisurlprefix override string resolve string baseurl string url delegate angular get final url final angularresolvedurl baseurlresolverresolve baseurl url add via di add function yjbanov may better answer", "d": "7/2015"}, {"body": "thanks worked great", "d": "7/2015"}, {"body": "yjbanov make sense bundle dart version angular", "d": "7/2015"}, {"body": "turned proposal covers typescript well", "d": "7/2015"}, {"body": "closing please reopen insufficient", "d": "7/2015"}, {"body": "prefer value nt register handler something like", "d": "7/2015"}, {"body": "understanding optimization request case better solved registering single event handler application root forward events appropriate target would still write one actual registration would happen per app", "d": "7/2015"}, {"body": "click events makes sense mousemove mouseenter", "d": "7/2015"}, {"body": "andresaraujo add simple repro program context", "d": "7/2015"}, {"body": "alpha produces following error exception uncaught error find method ontouched stack trace noreflectioncapabilitiesmethod package reflectormethod package parseastparseaccessmemberormethodcall package parseastparseprimary package parseastparsecallchain package", "d": "7/2015"}, {"body": "done", "d": "7/2015"}, {"body": "might fixed assigned self verify close", "d": "7/2015"}, {"body": "verified", "d": "7/2015"}, {"body": "happens add dart transformer", "d": "7/2015"}, {"body": "look one please", "d": "7/2015"}, {"body": "pretty sure duplicate", "d": "7/2015"}, {"body": "nt think would ever possible content dynamic would impossible preprocess styles compile time would style component work notes css shim port polymer shim meant exahaustive cover vast majority use cases cases shim known work cases use rules info shadowcssts rkirov mentionned bug shim gh issue please also make sure check polymer bug might fixed might need fixed sure shim still used post", "d": "7/2015"}, {"body": "issue", "d": "7/2015"}, {"body": "actually sass mixin applied component something like", "d": "7/2015"}, {"body": "matanlurey checked exactly behavior webcomponentsjs bug port example given means nt live shadow dom think shim interpret correctly nt care match within shadow dom rather match elements use would translate sure would play nicely sass", "d": "7/2015"}, {"body": "able use class example", "d": "7/2015"}, {"body": "thanks exactly want", "d": "7/2015"}, {"body": "rkirov", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "internal", "d": "7/2015"}, {"body": "removing milestone unassigning able get go vacation next week", "d": "7/2015"}, {"body": "blocked", "d": "7/2015"}, {"body": "querylist live list updated change detection construction time early see directives notified changes attach callback using", "d": "7/2015"}, {"body": "jeff try part", "d": "7/2015"}, {"body": "yep", "d": "7/2015"}, {"body": "run outside zonejs", "d": "7/2015"}, {"body": "interesting idea would exclude app changedetection yes reason filed issue renderer stable degrades quickly suggests kind resource leak zone notice large amount time spent appears patching getset properties", "d": "7/2015"}, {"body": "dug little bit appears requestanimationframe wrapper zonejs flawed filed issue", "d": "7/2015"}, {"body": "assigned btford", "d": "7/2015"}, {"body": "also cited internal", "d": "7/2015"}, {"body": "create token root injector called default value false user set value true want properties reflected attributes", "d": "7/2015"}, {"body": "attributes dashcased prefix ngreflect", "d": "7/2015"}, {"body": "resolved working intended little background interested used possible pre inject parent template directive working design true representation dom looks like found workaround thx rkirov tbosch instead exports popup directive uses view locals able something like anybody interested pattern works expand thanks", "d": "7/2015"}, {"body": "thanks writeup", "d": "7/2015"}, {"body": "removed milestone unassigned vsavkin suggested talk problem mhevery later", "d": "7/2015"}, {"body": "btford matsko heads renaming think changing", "d": "7/2015"}, {"body": "works", "d": "7/2015"}, {"body": "think better name since many class names already may better name chat decide", "d": "7/2015"}, {"body": "first step add lint check api surface stays consistent work blocked adds typings decorators also removes instances", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "one blocked change detection complete putting", "d": "7/2015"}, {"body": "gone milestone tim back assigned", "d": "7/2015"}, {"body": "yjbanov still feasible given using implement derivative features also see thought implement lifecycle methods differently", "d": "7/2015"}, {"body": "cc sigmundch urgent way reflection determine instance implements arbitrary interface", "d": "7/2015"}, {"body": "kegluneq unfortunately ca nt think way", "d": "7/2015"}, {"body": "sigmundch reason lack support language level seems amount runtime information whether support supported", "d": "7/2015"}, {"body": "discussions example see amount runtime information depends lot representation choose nt represent subtyping relations explicitly store object whether certain type properties amount information would different fully support said rakudrama plans moving different representation checked mode could potentially exactly need", "d": "7/2015"}, {"body": "actually nvm looks like caused separate error compile pipeline", "d": "7/2015"}, {"body": "tracking idea", "d": "7/2015"}, {"body": "lehmamic sounds like provider api angular http interceptors api would nt say", "d": "7/2015"}, {"body": "jeffbcross would rather compare connect module node js provider http interceptors api angular interceptor api proposing would create proxy around service proxy pipeline interceptors similar middleware pipeline connect gets executed every method property call service calling interceptor invoke next interceptor pipeline case last interceptor original service function interceptor would get fix defined parameter like req resp metadata called service method would include information parameter types values return types values etc called functioninvocation sample would allow us attach behaviors written service powerful consider valuable large enterprise applications", "d": "7/2015"}, {"body": "method supposed used host views ie views contain single element host element component method missing assert statement part handy eg debugging user easily inspect underlying dom element via create another component sibling via", "d": "7/2015"}, {"body": "ie would vote changing keeping elementref result although nt strong opinion name", "d": "7/2015"}, {"body": "actually return returns first child ie first element number root elements something right", "d": "7/2015"}, {"body": "also think take rather also return null rather throw", "d": "7/2015"}, {"body": "also seem like nt need since", "d": "7/2015"}, {"body": "note refactoring compiler new content projection method go away", "d": "7/2015"}, {"body": "closing removed via", "d": "7/2015"}, {"body": "tried repro nt successful upon investigation believe must ed invoked caused dev dependencies installed look list extraneous dependencies see exactly list dev dependencies specified packagejson testing npm resolve issues seeing according changelog proves stable enough usecase switch", "d": "7/2015"}, {"body": "dawidmyslak without looking details much later really nt like hardcode css class name widget class imo preferred", "d": "7/2015"}, {"body": "pkozlowskiopensource thanks could nt find examples conditional syntax cssclass managed create ugly workaround documentation still quite empty", "d": "7/2015"}, {"body": "pkozlowskiopensource thanks pawel looks like fixed issue closed", "d": "7/2015"}, {"body": "dawidmyslak add test particular usecase close thnx getting back", "d": "7/2015"}, {"body": "dawidmyslak ca nt reproduce exact issue submitted pr make sure nt bump future going close one ca nt reproduce anymore solved pb differently anyways", "d": "7/2015"}, {"body": "angular make enum property controllercomponent class class yourcontroller", "d": "7/2015"}, {"body": "correct martinmcwhorter states component class basically execution context angular applications properties defined component interpolated component template", "d": "7/2015"}, {"body": "jomeier hope answers provided martinmcwhorter pascalprecht thnx guys sorting pb please reopen issue live reproduce scenario thnx", "d": "7/2015"}, {"body": "thanks problem", "d": "7/2015"}, {"body": "mhevery give bit info option works reused situation private constructor", "d": "7/2015"}, {"body": "hint developer net trying instantiate typescript interfaces runtime representation reason runtime reference hence di work combat need create references using could declare think giving nice type give user file nice hint really simple turning class sometype private way mark constructor private constructor someprivatedep someprivatedep somemethod void", "d": "7/2015"}, {"body": "ok think", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "option idiomatic way ts declare interface types need runtime retention", "d": "7/2015"}, {"body": "consider option change angular sources move private constructor exported symbol", "d": "7/2015"}, {"body": "wondering guess adds extra unnecessary type system", "d": "7/2015"}, {"body": "nt alexeagle option manual option", "d": "7/2015"}, {"body": "actually work need export real reference di", "d": "7/2015"}, {"body": "yes means less magic codegen", "d": "7/2015"}, {"body": "option still var retained dts runtime", "d": "7/2015"}, {"body": "points di would work", "d": "7/2015"}, {"body": "would something like export interface sometype somemethod void class sometypeimpl implements sometype constructor someprivatedep someprivatedep var sometype void sometypeimpl runtime retention would bloat angular codebase", "d": "7/2015"}, {"body": "justindujardin would ideal error messages cases several improvements error messages sometimes obvious keep framework generic flexible precise error messages important get feedback users would like see message would make know instantly going", "d": "7/2015"}, {"body": "pkozlowskiopensource always hard problem nt sure great added suggestions original post", "d": "7/2015"}, {"body": "related", "d": "7/2015"}, {"body": "justindujardin thnx suggestion regarding one valid directives properties found ngforof think actually confusing existing one drops important context info element binding fails try rephrase things need keep info aid debugging ngfor expression invalid syntax expected form item items tricky error thrown checks ngfor level need see ca nt see obvious solution btw nt think schema support help much would see aiding particular situation", "d": "7/2015"}, {"body": "pkozlowskiopensource right could append element valid directives properties found ngforof element div know component selector could alert user component associated error valid directives properties found ngforof element div mycomponent might misunderstood original post mentioned better error reporting around invalid expression cases imagined could identify bad syntax errors schema validation given expands ever valid could hint needing ever valid could hint expecting instead sure would report maintaining good separation concerns perhaps could mapping schema validation errors friendly messages decorator schema validation code could look meta data encountering validation errors sorry suggestions impractical familiar internals", "d": "7/2015"}, {"body": "think wrong see unit test note attr added every single element inside cmp attr added host might selectable via tag selector real issue please reopen add details", "d": "7/2015"}, {"body": "actually regression yjbanov", "d": "7/2015"}, {"body": "lookups nt happening suspecting latest di changes assigning vsavkin", "d": "7/2015"}, {"body": "changing talking matan actually affect tests production code logging issue", "d": "7/2015"}, {"body": "bumped one today well would cool make slightly easier component authors nt great proposal though btw exact duplicate matanlurey jelbourn maybe close one centralize discussion one place", "d": "7/2015"}, {"body": "name issue bit example given still disabled property dom element want set either way close one dupe matanlurey wants paste issue text", "d": "7/2015"}, {"body": "boolean attributes instead", "d": "7/2015"}, {"body": "request sounds reasonable would trivial implement imo need pick right syntax semantic proposals nt change syntax remove attribute assigned value make sense attributes value would require boolean attributes either assigned null string equal name pretty similar syntax", "d": "7/2015"}, {"body": "nt covered existing syntax sounds like need make sure removes attribute", "d": "7/2015"}, {"body": "yes sounds reasonable misko thanks", "d": "7/2015"}, {"body": "closing already works", "d": "7/2015"}, {"body": "yep confirmed works latest host attributes", "d": "7/2015"}, {"body": "getting error plunker think accurate reproduction issue", "d": "7/2015"}, {"body": "wesleycho updated link thanks", "d": "7/2015"}, {"body": "try", "d": "7/2015"}, {"body": "appears fix immediate issue workaround", "d": "7/2015"}, {"body": "justindujardin called elvis operator equivalentish angular everything explicit design ensure predictability framework assuming properties defined later time since async", "d": "7/2015"}, {"body": "mean p", "d": "7/2015"}, {"body": "trying make sure understand requires marking templates creates work upgrading might make templates bit less readable want make sure designed", "d": "7/2015"}, {"body": "readability fine imo little verbose mainly seems angular swallow exception would angular safely checking first minor performance gain little developer inconvenience", "d": "7/2015"}, {"body": "understand appreciate better performing bindings issue resolved", "d": "7/2015"}, {"body": "need one elvis operator unless also async defined angular one defining default values everything template", "d": "7/2015"}, {"body": "another example pb seams cleanup task fails cleanup properly diffingtscompiler encounters pb", "d": "7/2015"}, {"body": "use bundle cdn far easiest fastest way get stuff done", "d": "7/2015"}, {"body": "hi nt mind borrowing thread news typing alpha mostly appinject change updated typings smooth alpha gt transition", "d": "7/2015"}, {"body": "still available cry", "d": "7/2015"}, {"body": "alpha also available", "d": "7/2015"}, {"body": "bundle available", "d": "7/2015"}, {"body": "yes sorry changing release process dropped closing issue problem fixed milestones onward", "d": "7/2015"}, {"body": "yo codebase looking codebase angularangularjs said yes design personally nt manually annotate controller please consider adding ngannotate build step", "d": "7/2015"}, {"body": "danhalliday need chose one supported module formats would suggest systemregister transpiling ts concatenate files module transport formats concatenationfriendly might want look setup got see mean pointers learning materials repo well going complete stepbystep instructions future moving parts atm going close one since general support question detailed instructions stuff worked need digging experimenting afraid many tools used alpha beta prerelease state many moving parts", "d": "7/2015"}, {"body": "might also interested following build two steps transpiles ts bundles production assume final version typescript able switch system module format", "d": "7/2015"}, {"body": "correct syntax since static value otherwise correct nt like use slash dealing alias route example link would rather", "d": "7/2015"}, {"body": "sure get first part comment also considering master edit updated first message remove square bracket still value side required master", "d": "7/2015"}, {"body": "igorminar matsko totally agree cumbersome planned binding ast transformation feature allow us reintroduce nice dsl feature still ways think better close issue chat couple weeks", "d": "7/2015"}, {"body": "tracking via issue todo comment code", "d": "7/2015"}, {"body": "think good start talking feature bit ast transformer bits important generic mechanism features besides routelink dsl going start email thread figure slate feature follow github issues discuss publicly", "d": "7/2015"}, {"body": "would nice user friendly error spent last hours trying understand whats causing declaring using syntax help discovered thread least please update", "d": "7/2015"}, {"body": "noted better error messages theme current iteration", "d": "7/2015"}, {"body": "looking closer error originates change detection could add something routerlink boundary seems like case change detection could produce better error general rkirov tbosch would possible", "d": "7/2015"}, {"body": "knowing caused error error makes sense said using stack trace locate interpretation attribute value impossible error stack trace easy enough see value property treated array would enough trigger suspicion using wrong syntax make every dynamically generated error clear improve debugging experience jul brian ford notifications githubcom wrote looking closer error originates change detection could add something routerlink boundary seems like case change detection could produce better error general rkirov tbosch would possible reply email directly view github", "d": "7/2015"}, {"body": "gajus suggesting end user look stack trace make sense things suggesting improve error message change detection level rather routerlink level strategy general also helping users diagnose specific case", "d": "7/2015"}, {"body": "btford suggesting end user able look stack trace make sense things strategy general also helping users diagnose specific case", "d": "7/2015"}, {"body": "creating subview component optional right eg nt need anything template still use decorator", "d": "7/2015"}, {"body": "pascalprecht understood proposal correctly decorator renamed continue use usual imho creating different view types listing directives looks like completely overkill also think easier reason code directives listed explicitly", "d": "7/2015"}, {"body": "pascalprecht understood proposal correctly view decorator renamed baseview continue use usual correct imho creating different view types listing directives looks like completely overkill also think easier reason code directives listed explicitly agreed imo complex listing directives time nt fun either", "d": "7/2015"}, {"body": "pascalprecht yes optional", "d": "7/2015"}, {"body": "defining dependencies themplate like aurelia framework html include syntax special directive would work good seperation concern well maybe subclassing method used themplates", "d": "7/2015"}, {"body": "muhammedea think angular designed work html imports like addition prolly lose lot tooling capabilities", "d": "7/2015"}, {"body": "nt progress one moving", "d": "7/2015"}, {"body": "please add information expect result actual result release repro case issue helpless", "d": "7/2015"}, {"body": "sorry updated top entry", "d": "7/2015"}, {"body": "browser", "d": "7/2015"}, {"body": "opera windows nt khtml like gecko edition developer", "d": "7/2015"}, {"body": "debugged method come string example string reduce method", "d": "7/2015"}, {"body": "issue must somewhere else function expects list", "d": "7/2015"}, {"body": "see template nt supply route params", "d": "7/2015"}, {"body": "updated template works actual documentation missing", "d": "7/2015"}, {"body": "documented behind updated shortly", "d": "7/2015"}, {"body": "thanks delagen", "d": "7/2015"}, {"body": "release", "d": "7/2015"}, {"body": "latest alpha npm release", "d": "7/2015"}, {"body": "spotted happy work", "d": "7/2015"}, {"body": "seems like bug mergeoptions method iirc looking yesterday", "d": "7/2015"}, {"body": "fixed expect test case http verb", "d": "7/2015"}, {"body": "think null think ordering mergeoptions wrong want send get request default specified request options way mergeoptions written always overwrite optionsspecified method default method jul tim jacobi notifications githubcom wrote think problem passing requestmethodsget null instead test case verify reply email directly view github", "d": "7/2015"}, {"body": "lets wait jeffbcross get take look might misreading intent definitely looks like method parameter mergeoptions meant default specified nt implemented way", "d": "7/2015"}, {"body": "would indeed make sense since already set default option", "d": "7/2015"}, {"body": "yeah got mangled great refactoring support dart add comments pr", "d": "7/2015"}, {"body": "timjacobi open pr travis run meantime leaving comments", "d": "7/2015"}, {"body": "hey timjacobi planning open pr", "d": "7/2015"}, {"body": "yes another question", "d": "7/2015"}, {"body": "release please", "d": "7/2015"}, {"body": "latest alpha npm release", "d": "7/2015"}, {"body": "looks like actual status code among properties returned happy provide fix could anyone point properties expected returned please", "d": "7/2015"}, {"body": "timjacobi get status code weird things sometimes though like incorrectly reporting network error status file requests iirc code http working around", "d": "7/2015"}, {"body": "thanks info plan action time weekend", "d": "7/2015"}, {"body": "well otoh mvp fix would pass response constructor adding another property object may enough could worry translating network error status mobile later feel free send pr", "d": "7/2015"}, {"body": "pr open fix", "d": "7/2015"}, {"body": "side effect get real stack traces one integration tests fail js", "d": "7/2015"}, {"body": "checked newly generated works nicely vscode", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "think still used di ie explain occurrence pattern", "d": "7/2015"}, {"body": "think two separate builds users one dev enabled one disabled thoughts", "d": "7/2015"}, {"body": "mhevery could flag set bootstrapconfig app instead two builds perhaps bootstrap function js import bootstrap import app componentsapp bootstrap app true dev mode maybe app already production dev mode disabled could enabled calling function console way angular reloadwithdebuginfo", "d": "7/2015"}, {"body": "yes think could runtime based atscript needed compile time solution nt think requirement exist typescript jul roland groza notifications githubcom wrote mhevery could flag set bootstrapconfig app instead two builds perhaps bootstrap function import bootstrap import app componentsapp bootstrap app true dev mode maybe app already production dev mode disabled could enabled calling function console way angular reloadwithdebuginfo reply email directly view github", "d": "7/2015"}, {"body": "would global variable sure access di places need js could dev mode enabled non minified build disable minified build eg react dart could special transformer disables used fri jul mi\u0161ko hevery notifications githubcom wrote yes think could runtime based atscript needed compile time solution nt think requirement exist typescript jul roland groza notifications githubcom wrote mhevery could flag set bootstrapconfig app instead two builds perhaps bootstrap function import bootstrap import app componentsapp bootstrap app true dev mode maybe app already production dev mode disabled could enabled calling function console way angular reloadwithdebuginfo reply email directly view github reply email directly view github", "d": "7/2015"}, {"body": "case global var ok constant change duration application friday july tobias bosch notifications githubcom wrote would global variable sure access di places need js could dev mode enabled non minified build disable minified build eg react dart could special transformer disables used fri jul mi\u0161ko hevery yes think could runtime based atscript needed compile time solution nt think requirement exist typescript jul roland groza mhevery could flag set bootstrapconfig app instead two builds perhaps bootstrap function import bootstrap import app componentsapp bootstrap app true dev mode maybe app already production dev mode disabled could enabled calling function console way angular reloadwithdebuginfo lt reply email directly view github reply email directly view github reply email directly view github", "d": "7/2015"}, {"body": "tbosch oh yeah forgot right global variables exposed within library users use right mhevery says impact application performance unless done exposing global constant browser anyway would rather switching two scripts enabledisable dev mode personal opinion would rather keep consistent previous version angular yet dev mode enabled means lot code affects application performance rather swittch two scripts", "d": "7/2015"}, {"body": "also needs happen remove npm releases cc ttowncompiled", "d": "7/2015"}, {"body": "alexeagle investigate commonjs path forward", "d": "7/2015"}, {"body": "carved subtask pushing remaining work later", "d": "7/2015"}, {"body": "requires breakdown ttowncompiled onduty sync may wait later week", "d": "7/2015"}, {"body": "workaround use ngsubmit instead submit ngsubmit goes rx stream order updates correct switch rxnext revisit", "d": "7/2015"}, {"body": "custom operator request observable type let call could actually return behaviorsubject like hot observable subscribe get recent response one tricky bit polling want make sure previous one completes next one otherwise could second polling interval nothing ever completes seconds everything ed away two examples jsbin different approaches polling basic idea one two things either wait response come back set delay request jsbin wait either interval response come back request jsbin code bin posterity js var poller request subscribing show single subscription behavior pollersubscribe x gt consolelog x err gt consoleerror err gt consolelog done pollersubscribe x gt consolelog x err gt consoleerror err gt consolelog done function poll interval consolelog polling delay interval ms timeout ms timeout var subject new rxbehaviorsubject null return thistimeout timeout delay interval repeat multicast subject refcount skip function interval consolelog polling wait interval ms timeout ms timeout var subject new rxbehaviorsubject null return observabletimer interval zip x gt x timeout timeout repeat multicast subject refcount skip feel like probably preferred behavior caveat current rxjs returns connectableobservable resubscribed rxjs solved improving simplifying multicast", "d": "7/2015"}, {"body": "jeff suggested might take one implemented work", "d": "7/2015"}, {"body": "closing effort making work dart nt worth since dart html would imported facade httprequest would reexported", "d": "7/2015"}, {"body": "rolandjitsu angular version using huge refactoring lately di system refactoring removed also binding", "d": "7/2015"}, {"body": "pascalprecht using alpha removed use async di", "d": "7/2015"}, {"body": "rolandjitsu nt know tbh trying catch latest changes pretty much fulltime job", "d": "7/2015"}, {"body": "rolandjitsu apparently done using", "d": "7/2015"}, {"body": "pascalprecht yeah hard time catching changes seems like stabilizing little bit api nt drastically changed latest versions think refactoring yet version using", "d": "7/2015"}, {"body": "pascalprecht actually seems like find code npm version even though commit seems days old edit actually saw thought version alpha refactoring saw", "d": "7/2015"}, {"body": "seems like expects directive unsure load service may due version", "d": "7/2015"}, {"body": "removed via", "d": "7/2015"}, {"body": "yeah pascalprecht mentioned thought could use load service async work instead following see source downside ask dependency promise sure way get value promise ask dependency instead promise", "d": "7/2015"}, {"body": "deal resolving promise injecting fix async problems injector want delay bootstrapping nt would wait firebase ready importing app simplest solution html firebasereadypromisethen function firebaseref return systemimport app function module return modulemain firebaseref", "d": "7/2015"}, {"body": "think stick currently instead delaying app bootstrap idea async injection handled future", "d": "7/2015"}, {"body": "weird removed team taking suggestions shape take future would great something similar following class fooservicefactory injectorfor fooservice static loadfooservice promise return promise resolves instance fooservice class dependsonfooservice constructor foosrv promise whatever want", "d": "7/2015"}, {"body": "mprobst look", "d": "7/2015"}, {"body": "clang format know issue template string see closing issue already reported clangformat repo", "d": "7/2015"}, {"body": "hankduan could take look one understanding issue finishing tasks specifically unit tests related api like make testability", "d": "7/2015"}, {"body": "making private api lifecycle exposing via testability decided api used asynchronous unit tests end end tests", "d": "7/2015"}, {"body": "closed via hook reliable may called multiple times single event guarantee everything stabilized information", "d": "7/2015"}, {"body": "yjbanov nt think current structure exactly namely nt notify angular currently processing events moment example override oneventdone angular currently processing events wait forever already done ever notify done instead api check angular currently anything call back immediately otherwise angular settles callback unregister call back ie call api every time want know angular stable instead downside performance nt see tests needing call frequently performance would matter", "d": "7/2015"}, {"body": "hankduan normal situation angular installs zone root level therefore always processes every browser event would therefore call every time running code outside angular zone eg via course angular even aware possibly notify anything idea behind running outside angular want logic could something like bool angularisrunning false ngzoneoverrideonturnstart angularisrunning true void onetimeoneventdone cb angularisrunning install event done else invoke callback immediately angularisrunning false", "d": "7/2015"}, {"body": "worried might miss turnstart event think guess inject zone testability would never miss thanks good", "d": "7/2015"}, {"body": "btford please add labels effort type priority shows tracker", "d": "7/2015"}, {"body": "naomiblack sure thing", "d": "7/2015"}, {"body": "submitted fix master hopefully available next dev release", "d": "7/2015"}, {"body": "cc tbosch reactivate dev build fixed sigmundch kevmoo could update issue new dev build available could reactivate dev pipeline", "d": "7/2015"}, {"body": "sure thing fyi bug tracks request merge change dev channel gets closed matter time bots update release new sdk fix", "d": "7/2015"}, {"body": "please revert version dart publicly available dev channel", "d": "7/2015"}, {"body": "going make focus milestone part going attempt bring rxjs next project place rxjs cc vsavkin blesh caitp", "d": "7/2015"}, {"body": "esobservable spec seems good deal flux around behaviorsapi want meet also want create something provides best experience consumers lib nt foresee major changes outward api rxjs next project time may minor changes behavior try keep ahead changes informed directly prealpha reason haha", "d": "7/2015"}, {"body": "moved next milestone since internal needs taken precedence sounds like good timing circle back blesh potential api changes", "d": "7/2015"}, {"body": "starting experiment installing rxjsnext lift branch per blesh recommendation right testing javascript keeping apis observableeventemitterobservablewrapper switching implementation underneath", "d": "7/2015"}, {"body": "removing favor focused task", "d": "7/2015"}, {"body": "mhevery issue metaissue created github deficiencies organizing prioritizing issues represents open issues completed many milestones order priority none labels adequately capture purpose nt want issue lumped feature issues filtering labels nice type backlog label would keep issues like separate featurebug issues different views well keep showing untriaged naomiblack sound reasonable", "d": "7/2015"}, {"body": "backlog sounds reasonable nt create priority need", "d": "7/2015"}, {"body": "bumped priority moving http module since dart inclusion jsonp file imports dart html causes problems importing toplevel module nonbrowser environment", "d": "7/2015"}, {"body": "add repro case least stack trace actionable", "d": "7/2015"}, {"body": "yes post repros cases", "d": "7/2015"}, {"body": "matanlurey update", "d": "7/2015"}, {"body": "get today sorry delay", "d": "7/2015"}, {"body": "hey shallow understanding di works still learning curve encountered issue related one using alpha amp typescript scenario component inject service class get instantiated amp injected angular thanks appinjector property service class wanted angular inject instance http first added app bootstrap thinking angular di system would always know inject objects nt quite work way found http object injected add component annotation service class appinjector property amp service class configured di system instantiate amp inject http object injecting object nt particularly intuitive works way coming javaverse di pretty mature used configuring di system confident automagically recognize inject", "d": "7/2015"}, {"body": "jeffbcross yeap passed going setup repo play code dsebastien passed function injectables available application wide means need make service component use able however issue states seems problem exactly could work around using explicit decorators la class myservice constructor inject http entirely new recommend article", "d": "7/2015"}, {"body": "pascalprecht appinjector still alpha impression using something else nt know", "d": "7/2015"}, {"body": "dsebastien currently things moving fast sure already part local version tho", "d": "7/2015"}, {"body": "pascalprecht take look thanks get try play alpha software interesting allows better understand progressively evolves biggest pain fact typings definitelytyped always lag behingare incomplete know worked upon", "d": "7/2015"}, {"body": "jeffbcross okay repository need checkout branch run prolly get errors due non existing server reproduce problem try change line let know need help reproduce issue", "d": "7/2015"}, {"body": "works fine using systemjs possible webpack handling something differently", "d": "7/2015"}, {"body": "problem due typescript deconstructing paramtypes example working using component webpack appsimplets try inject service typescript nt picking correctly works since overwrites paramtypes use correct type paramtypes typedefinition use works using typescript", "d": "7/2015"}, {"body": "scratch reproduce dropping external file", "d": "7/2015"}, {"body": "kool", "d": "7/2015"}, {"body": "thanks digging bug typescript dedicated issue ts project already", "d": "7/2015"}, {"body": "hmm poked around bit today felt like taking crazy pills backed exact behaviour appeared whim imported injectable annotation tagged service fixed issue whim made donothing decorator tagged service also fixed issue best guess typescript nt metadata thing unless decorator appears file", "d": "7/2015"}, {"body": "ah okay use useful compiling dart decorator force typescript correctly attach metadata", "d": "7/2015"}, {"body": "poking around yesterday setup worked least looking incorporating comments suggestions javascript import bootstrap import import routerinjectables import myapp myapp bootstrap myapp routerinjectables javascript import component view inject import http plus imports eg routeconfig routeroutlet routerlink router export class myapp constructor inject http consolelog previously wo nt get far wo last thing source doc says thingy nt work leave component fyi env webpack typescript angular macosx", "d": "7/2015"}, {"body": "rixrix yeah basic issue theory nt manual inject http bit using typescript", "d": "7/2015"}, {"body": "current workaround forcing typescript compile metadata correctly using decorator use", "d": "7/2015"}, {"body": "hmm able reproduce issue adding injectable decorator nt fix case look", "d": "7/2015"}, {"body": "seems work fine hack custom typings beyond could pretty much follow examples angular repo code interested would awesome get http typings definitelytyped avoid hacking custom temporary files", "d": "7/2015"}, {"body": "thelgevold typings definitelytyped working properly", "d": "7/2015"}, {"body": "jeffbcross ah see think reason impression http lived module named see module declared temporarily declared locally looks like setup get http dependencies directly module seems ok run typescript compiler comments typings file still reference though", "d": "7/2015"}, {"body": "another update one getting error use type annotation dependency injection service eg import http class myservice constructor http use component viewinjector class mycomponent case dependencies ca nt resolved issue occurs changing class myservice constructor inject http http however solves issue class myservice constructor inject http think related", "d": "7/2015"}, {"body": "reproduce please create full repro reopen issue", "d": "7/2015"}, {"body": "zonejs github repo version angular repo may new bug fixesfeatures hopefully merged thr main repo", "d": "7/2015"}, {"body": "one thing dart equivalent native zone thing built top split separate package would probably make sense move renamed zonejs repo", "d": "7/2015"}, {"body": "talk later rush", "d": "7/2015"}, {"body": "regards dart test things test lib generalizable simple functions wrap around testing functions like think actually nothing would helpful pull separate adapter dart test also several matchers spy functions may nice doable basic dart test mock library dart recommends mockito", "d": "7/2015"}, {"body": "agreeing juliemr really nice split helpers vs imperative functions", "d": "7/2015"}, {"body": "juliemr figure handoff one nt landing ooo", "d": "7/2015"}, {"body": "documentation use testbedtestcomponentbuilder somewhere personally interested js side things thanks", "d": "7/2015"}, {"body": "update stuck injector issues decoupling bumping next milestone", "d": "7/2015"}, {"body": "working example unit test written using dart test using test injector testcomponentbuilder next adding useful helpers testlib", "d": "7/2015"}, {"body": "continues progress see bumping since nonurgent", "d": "7/2015"}, {"body": "issue needs better explanation seen vs expected behavior done", "d": "7/2015"}, {"body": "talked matanl offline referring feature angulardart", "d": "7/2015"}, {"body": "already similar feature implemented see difference shim upper bound css encapsulation component protected dom parents css css affect children leaves css rule unshimmed thus potentially affecting ancestors descendants would using get unblocked", "d": "7/2015"}, {"body": "afaikt polyfillnonstrict longer supported webcomponentsjs mechanism nonstrict polyfilling exposed global flag configurable per rule however think syntax would consistent polyfillunscopedrule existing modifiers used resulting css would still vicb info polyfillnonstrict implemented webcomponents nt use content angulardart", "d": "7/2015"}, {"body": "second thought looks would translate basically provide functionality think used going forward ideally would like keep featureparity port webcomponents repo jmesserly reason behind removing webcomponentsjs also intended replacement", "d": "7/2015"}, {"body": "jmesserly reason behind removing polyfillnonstrict webcomponentsjs also host intended replacement hey pretty familiar shadow dom familiar shadow css polyfill try help though nt recall polyfillnonstrict shadow css possibly angular feature could memory recall lot spec churn shadow css may helpful look current spec draft also polymer docs cover current state things webcomponentslitejs issue needs better explanation seen vs expected behavior done yeah kind boat maybe example would help eg given htmlcss expect happen happening instead", "d": "7/2015"}, {"body": "right looks like polyfillnonstrict polyfillunscopednextselector custom angular polyfill extensions added angulardart gathered vsavkin time needed workarounds incorrect shimming selectors exactly issue jmesserly nt see mention directives mean planning removing", "d": "7/2015"}, {"body": "jmesserly nt see mention polyfill directives mean planning removing ah ca nt answer plans stuff since code super familiar polyfill knowledge spec level want know shadow dom polyfill though know plenty one try read together figure maybe comment explaining though looks like help deal cases got native shadowdom available got polyfill selectors different historically lot churn spec imagine polyfill helpers pretty useful", "d": "7/2015"}, {"body": "polyfillunscopedrule seem anything polyfillunscopedrule content tableheader minheight backgroundcolor white comes polyfillunscopedrule content tableheader minheight backgroundcolor white", "d": "7/2015"}, {"body": "jmesserly thanks offering work shim talk psunkari looks like good enough usecase investigating whether implemented properly port discover something also broken webcomponentsjs file bug back guys psunkari original rule kept shimmed sure much use nice see debugging however unscoped output appended end style tag", "d": "7/2015"}, {"body": "taking look codeoutput rkirov seems small bug caused last polyfillunscopedrule appended style tag append text string instead assigning", "d": "7/2015"}, {"body": "moving back backlog urgent becomes trivial implement lands", "d": "7/2015"}, {"body": "super add appropriate fields classes create binding dynamic component loaded", "d": "7/2015"}, {"body": "seems reasonable moving backlog since many things plate", "d": "7/2015"}, {"body": "part work changed behavior always queue next navigation current one finishes still needs work step right direction", "d": "7/2015"}, {"body": "work done enough pr going punt next week prioritize bug fixes matanlurey encountered problems going file issues", "d": "7/2015"}, {"body": "made headway last week need reimplement redirects fix broken tests add tests complex use cases need followup feature make possible deeplink aux routes", "d": "7/2015"}, {"body": "pushed matias brian need pair person get started", "d": "7/2015"}, {"body": "issue hotlist also matrix params", "d": "7/2015"}, {"body": "yjbanov think generalized queryparams sure naomiblack made", "d": "7/2015"}, {"body": "think blocking things time demoting", "d": "7/2015"}, {"body": "merged anyway", "d": "7/2015"}, {"body": "munificent working least mirrors based version ca nt assign hes part org yet", "d": "7/2015"}, {"body": "yes see", "d": "7/2015"}, {"body": "page temporary solution still need find longterm solution blindly erase types resulting dart code example everything currently untyped good reason see eg domelement domview lightdom issue already log one", "d": "7/2015"}, {"body": "let keep issue open longterm solution dart title nt idea though assign", "d": "7/2015"}, {"body": "yjbanov added thread dart people blocked dart making progress packages incompatible simply way express element either dart html package html dart", "d": "7/2015"}, {"body": "naomiblack yjbanov urgent immediately impact users language design level issue dart currently design seems unclear still expect fix multiple months away afaict simpler solution common superinterfaces two libraries issues still might able expedite", "d": "7/2015"}, {"body": "moving backlog continue track think immediate work hold pr closed", "d": "7/2015"}, {"body": "related allows clone templates via trigger script elements", "d": "7/2015"}, {"body": "avoid unnecessary work static class attributes cases like could solved would trigger expression bindings clearly follows convention directives prefixed true creates strangeness feel strange class jump avoids nonobvious cases like case already exists would ease migration could enumerate would help mental model binds properties best think set properties one bind breaks mental model could enumerate issues running", "d": "7/2015"}, {"body": "pkozlowskiopensource update", "d": "7/2015"}, {"body": "mhevery main question binding specialcase compiler directive directive would rename otherwise people might expect work host properties could short chat tomorrow", "d": "7/2015"}, {"body": "based discussion mhevery current thinking going specialcase binding compiler done part closing one anyone specialcasing binding time speak", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "delagen still experiencing issue later releases", "d": "7/2015"}, {"body": "still happens building atomtypescript tried root build bundled npm package nt seem difference errors", "d": "7/2015"}, {"body": "added security issues resolved without breaking semantics use case need handled custom renderer", "d": "7/2015"}, {"body": "rkirov tbosch still happening latests drop destroyviewincontainer trying remove something index reproduce overlays try unloaded stop show happening", "d": "7/2015"}, {"body": "use systemjs older version process upgrading blocked removing traceur going close dup work already", "d": "7/2015"}, {"body": "mhevery sounds fair", "d": "7/2015"}, {"body": "believe angular already requests land opinions rather measurable yesno answers would hard us clearly say done means would never get closed reason aggressive closing issues nt clear deliverables", "d": "7/2015"}, {"body": "ctindel could either please provide steps reproduce issue", "d": "7/2015"}, {"body": "got error trying upgrade steps clone repo change angular version change location strategy changes run app", "d": "7/2015"}, {"body": "close issue problem implementation returning angularrouter fix repo", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "angular urlutil library use parsing urls relies internal browser parser works browsers downside requires dom would problematic nodejs fine could used instead", "d": "7/2015"}, {"body": "syntax since may field angular component bit fence think give try nt like roll back nt see lot side giving try collecting data", "d": "7/2015"}, {"body": "think get hold element view get element way always append sibling wether shadow dom closing planning work making simpler", "d": "7/2015"}, {"body": "fixed following ts release", "d": "7/2015"}, {"body": "wanted sort global transformers could globally registered function rather mapping function could use flatmapping function gives stream requests output stream modified requests ie would allow either synchronous asynchronous actions occur things like set headers currently angular something like would impossible afaik", "d": "7/2015"}, {"body": "thought presuming observable could actually use rx mechanism operator introduce timeout design chose", "d": "7/2015"}, {"body": "definitely like see compose wrap apis vs current api interceptors bit nightmare create factory register provider config block jeffbcross said mutable global state ftl often talk couple different apis app global interceptors make complex", "d": "7/2015"}, {"body": "robwormald probably right fact might better advice tell people compose requests wrapping http service fact think like feature favor advising people wrap http service use", "d": "7/2015"}, {"body": "exactly jeffbcross said begin p haha", "d": "7/2015"}, {"body": "ha well like make sure due diligence explore ways make things clear simple short saying go watch blesh rxjs tutorials create wrapper services done tend lean away declarative everythingonconfig approach angular still think may helpers could added reduce bar prerequisite rx knowledge common things", "d": "7/2015"}, {"body": "heresy suggest provide base class one could extend configure something like class myhttpclient extends basehttpclient transformresponse res custom stuff transformrequest req custom stuff myhttpclientget foosjson subscribe know said composition prefer wrapit method seems choices extensible base class teach em wrap explaining bind jazz override injectable config", "d": "7/2015"}, {"body": "perhaps helpers could come flavor helpers extend wrap service sure looks like spitballing", "d": "7/2015"}, {"body": "would prefer general interception mechanism dedicated http service would allow lot possibilities entered issue yesterday wrapping service would make sense one service productive need many services eg adding automatic logging exception handling etc", "d": "7/2015"}, {"body": "looking", "d": "7/2015"}, {"body": "also option throw universalserver manually triggering change detection request fine cases advanced ones using moment manually triggering change detection allows us include zonejs request read template create host element selector compile app component host element host document detect changes serialize app component host element replace template selector serialized component rendered string dispose app component remove host element host document serve rendered string", "d": "7/2015"}, {"body": "think since developers use angular browser require zonejs throwing default behavior option throw currently following ngzonets think remove statement disabled flag instead different implementation ngzone use zonejs able provide implementation binding running angular server work", "d": "7/2015"}, {"body": "vsavkin yup works thanks", "d": "7/2015"}, {"body": "first two steps done locally verified pub publish process script scriptspublishpubpublishsh manually inspecting pub output running make sure warnings generated need verify npm script check typings output open pr", "d": "7/2015"}, {"body": "safe say getting standalone router purposes using futureforward routing angular apps developers using new router angularrouter", "d": "7/2015"}, {"body": "kenkouot excellent question answer stated clearly possible reading upgrade path document glean one framework active given time expecting router perform kind magic able route components unrealistic furthermore angularrouter repository nt seen code commit long mhevery confirms development undergoing repo asis new router still pretty good router organizing code component way overall positive nice documentation updated highlight new router potential dead end", "d": "7/2015"}, {"body": "code base part stand alone two separate independent questions router part repo intention new router usable", "d": "7/2015"}, {"body": "mhevery absolutely right thanks clarification know realize readmemd angularrouter indeed date clear warning weeks ago eyes failed refused read", "d": "7/2015"}, {"body": "nt think done tue jun pm naomi black notifications githubcom wrote alexeagle fixed reply email directly view github", "d": "7/2015"}, {"body": "look today", "d": "7/2015"}, {"body": "provided pr", "d": "7/2015"}, {"body": "need something different prototype angularuniversal project first probably move angular repo see", "d": "7/2015"}, {"body": "moving since nt directly affect release", "d": "7/2015"}, {"body": "nt think actually yet since revert commit reassigning matsko else needs happen get looks like supersedes close", "d": "7/2015"}, {"body": "going continue working today", "d": "7/2015"}, {"body": "reminder blocking api docs effort", "d": "7/2015"}, {"body": "since design input pipes urgent", "d": "7/2015"}, {"body": "hoping get chance work next days", "d": "7/2015"}, {"body": "looks like docs month old rev related", "d": "7/2015"}, {"body": "done progress", "d": "7/2015"}, {"body": "pipesextend also missing well", "d": "7/2015"}, {"body": "sigmundch think fix", "d": "7/2015"}, {"body": "fix preserve inlining see tedsander addressing issue", "d": "7/2015"}, {"body": "blocked general core feature needed", "d": "7/2015"}, {"body": "done limited non breakable space add rest text", "d": "7/2015"}, {"body": "yjbanov sure best want able reflect class see whether given hook way idiomatic dart idiomatic ts since core lifecycle methods follow pattern good someone understands better could naomiblack anyone free cycles week could rkirov also knows", "d": "7/2015"}, {"body": "much discussion whiteboard tbosch rkirov btford implement solution based interfaces dart checking runtime whether field exists javascript use find works solution gt", "d": "7/2015"}, {"body": "summarized look like terms router start dart approaches later handle decorator approach still need implement method decorators get ts remain open", "d": "7/2015"}, {"body": "going move backlog urgent issues likely get next two releases", "d": "7/2015"}, {"body": "version angular please provide reproduction", "d": "7/2015"}, {"body": "btford yes use exception occured one version back alpha sure still happens", "d": "7/2015"}, {"body": "rolandjitsu try latest let know still broken", "d": "7/2015"}, {"body": "btford today latest release close nt happen anymore", "d": "7/2015"}, {"body": "btford complains route config try get url using", "d": "7/2015"}, {"body": "hmmm post small reproduction somewhere debug", "d": "7/2015"}, {"body": "btford repo updated latest alpha tried remove clone try used chrome", "d": "7/2015"}, {"body": "great thank", "d": "7/2015"}, {"body": "take bit time investigate tentatively slated fix", "d": "7/2015"}, {"body": "time today going try reproduce", "d": "7/2015"}, {"body": "already improved master via specifically instead npe get message like", "d": "7/2015"}, {"body": "btford route config nt understand throw exception since route configured sent iphone jul brian ford notifications githubcom wrote already improved master via specifically instead npe get message like appcmp route named todos reply email directly view github", "d": "7/2015"}, {"body": "going close since lnlwd nt seeing anymore please let know rolandjitsu still see problem gladly reopen", "d": "7/2015"}, {"body": "resolved closed", "d": "7/2015"}, {"body": "tried use files npm package works", "d": "7/2015"}, {"body": "got closed another fix fixed head", "d": "7/2015"}, {"body": "happen pr nt seem like merged", "d": "7/2015"}, {"body": "needs revisited similar visibility rules injectors redesigned vsavkin ping back landed", "d": "7/2015"}, {"body": "final design discussed misko victor tobias query supports visibility modifiers viewquery queries view go deeper view boundaries enum horizon self children unbounded query skipself boolean false horizon horizon horizonchildren viewquery define visibility use notion distance based number dom nodes injectors element query lives directive lives skipself sets lower bound visibility horizon sets upper bound visilibity self children infinity unbounded directive seen query", "d": "7/2015"}, {"body": "alternative suggestion victor closer di semantics", "d": "7/2015"}, {"body": "georgiosd could please create reproduction issue either tarball plnkr", "d": "7/2015"}, {"body": "caitp really sorry guys abandon branch nt making progress presume fixed indirectly one way another may enough reproduce", "d": "7/2015"}, {"body": "gruntfile nt even produce build application info app structure trying fill blanks taking much effort sorry dude", "d": "7/2015"}, {"body": "see pull version repo history", "d": "7/2015"}, {"body": "georgiosd closing issue ca nt reproduce sorry enough us work", "d": "7/2015"}, {"body": "link points material design component correct believe current code works selector uses ignores either case nt want support complex selectors current code ignores", "d": "7/2015"}, {"body": "thanks clarifying move code selectorts remove complex selectors find get tests passing", "d": "7/2015"}, {"body": "totally agree comment johnpapa interceptors basics many projects", "d": "7/2015"}, {"body": "moved work pub get needed transformers work nt think remove everything else happens tests", "d": "7/2015"}, {"body": "thnx igorminar", "d": "7/2015"}, {"body": "status working locally", "d": "7/2015"}, {"body": "tbosch use native shadow dom add property annotation named something else find much docs", "d": "7/2015"}, {"body": "could wait little bit intern works webworkers little farther know actually need", "d": "7/2015"}, {"body": "closing open new generic issue", "d": "7/2015"}, {"body": "file shadowed nt transpiled revert dgeni workaround", "d": "7/2015"}, {"body": "issue change working alternative solution", "d": "7/2015"}, {"body": "sweet", "d": "7/2015"}, {"body": "like take one well someone wants take", "d": "7/2015"}, {"body": "caitp fyi basic headers setting implemented xhrbackend still work done merging process", "d": "7/2015"}, {"body": "mhevery rolandjitsu give details used canactivate filter whether possible activate nt never load component html html always rendered wrong best regards tiago braga", "d": "7/2015"}, {"body": "indicated comment sure issue makes sense styles html enough", "d": "7/2015"}, {"body": "tbosch pick one vicb reassign", "d": "7/2015"}, {"body": "determined going stringreplaced html string viewloaderloadhtml relative base path template file loaded template uri component template inlined", "d": "7/2015"}, {"body": "moving needs doc outlining possible approaches vicb tbosch", "d": "7/2015"}, {"body": "wo nt time work august please find details tried document available answer questions coming weeks", "d": "7/2015"}, {"body": "first pretty easy argue looking technical details need module id relative urls nt understand need module id every time need use component need import relative url could absolute ca nt save stack import component save url stack maybe save global variable pathtocomponent let path path component use url compile urls paths inside component given saved url much abstract theoretical sorry knowing technical details best regards tiago braga", "d": "7/2015"}, {"body": "consider scenario case import way knowing path make sense", "d": "7/2015"}, {"body": "interpolation exporting also save", "d": "7/2015"}, {"body": "closed", "d": "7/2015"}, {"body": "think issues properties alderney syntax correct far accepting full expressions think would like limit expressions much possible test ability concerns let without revisit possible", "d": "7/2015"}, {"body": "pkozlowskiopensource update status please", "d": "7/2015"}, {"body": "naomiblack afraid nt much progress one impl easy still one thing would like discuss mhevery moving forward", "d": "7/2015"}, {"body": "moving unless happen catch mhevery earlier", "d": "7/2015"}, {"body": "nt progress one moving", "d": "7/2015"}, {"body": "nt time verify bet already solved issues indices date tag template", "d": "7/2015"}, {"body": "mhevery could try reproduce latest version", "d": "7/2015"}, {"body": "verified closing", "d": "7/2015"}, {"body": "related", "d": "7/2015"}, {"body": "moved parts remove traceur rttsassert removed couple items nt plan otherwise already done", "d": "7/2015"}, {"body": "matanlurey child components present page routing", "d": "7/2015"}, {"body": "still waiting hearing back matanlurey regarding application example setup reproduce bug", "d": "7/2015"}, {"body": "pushed back next release matan mentioned ifran ted helping week", "d": "7/2015"}, {"body": "tedsander visibility", "d": "7/2015"}, {"body": "case could reproduce routes component route component currently router needs able set root component way least matsko btford going make better error message happening warn developer unsupported", "d": "7/2015"}, {"body": "yep restate another way routeconfig root component component transitively routed root component", "d": "7/2015"}, {"body": "issue moved since addressed brian get auxiliary routes feature", "d": "7/2015"}, {"body": "nt explicitly depend error message already much router warns rather throwing npe sure much put annotation wrong component course route found nt think great way get ahold component contains kinda breaks encapsulation check instantiated throw component contains annotations might entirely valid use component use via routing including within another component template add another exception warns parent component configuration think considered closed sound reasonable tedsander matanlurey", "d": "7/2015"}, {"body": "cover case route configuration way root problem running nt clear whether warning", "d": "7/2015"}, {"body": "solved new content projection also added test ensure", "d": "7/2015"}, {"body": "take bumped priority blocker turn blocker", "d": "7/2015"}, {"body": "one issue realized writing tests using option would rewrite imports import entry point going instead rewrite import applicationdart application staticdebugverbose dart turn import applicationcommondart essentially approach bit easier manage one rewrite", "d": "7/2015"}, {"body": "although realize mirrors config lives package gon na come back one think", "d": "7/2015"}, {"body": "removed milestone unassigned since wo nt able get go vacation", "d": "7/2015"}, {"body": "take crack", "d": "7/2015"}, {"body": "status update going try variation option files people import equivalent except set reflection capabilities therefore pull way need rewrite imports imports", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "lower priority yegor pr progress moving back backlog", "d": "7/2015"}, {"body": "landed master content projection done compilation ie performance penalty using runtime", "d": "7/2015"}, {"body": "definetely nice work custom events well", "d": "7/2015"}, {"body": "jeremy start using tbosch vsavkin pair relevant", "d": "7/2015"}, {"body": "different annotations present right others like typed interface argument called using object literal syntax js produce typed dart api iiuc issue follow pattern router asking understand whether need something improved expressibility type system", "d": "7/2015"}, {"body": "alexeagle would nt involve changes type system tsjs think still going idiomatic use maps", "d": "7/2015"}, {"body": "curious nt goal typescript typed classes would prefer map user ca nt easily tooliderefactor properties idea value assign valid without rerunning app eg static analysis", "d": "7/2015"}, {"body": "would prefer map user ca nt easily tooliderefactor properties idea value assign valid without rerunning app eg static analysis ts interfaces hint map knowing type string nt enough know route configured correctly anyways aesthetically expect going preferred course leave second option open ts folks", "d": "7/2015"}, {"body": "first option still structurally typed interface use map long agree expressions valid router configurations make ts typings properly restrict give right completion errorchecking mon jul brian ford notifications githubcom wrote would prefer map user ca nt easily tooliderefactor properties idea value assign valid without rerunning app eg static analysis ts interfaces hint map knowing type path string nt enough know route configured correctly anyways aesthetically expect routeconfig path foo component foocmp going preferred routeconfig new route path foo component foocmp course leave second option open ts folks reply email directly view github", "d": "7/2015"}, {"body": "first option still structurally typed interface use map exactly thinking long agree expressions valid router configurations make ts typings properly restrict give right completion errorchecking talking something like invalid value parent without trailing continuation segment children afaik ca nt expressed ts type system need checked runtime anyway", "d": "7/2015"}, {"body": "see", "d": "7/2015"}, {"body": "irfantusneem functionality missing change pushstate hashchange strategies like", "d": "7/2015"}, {"body": "going close since think resolved incorrect let know irfantusneem reopen", "d": "7/2015"}, {"body": "yjbanov look see actually closed", "d": "7/2015"}, {"body": "naomiblack close issue also fully understand needed dart already check interface compliance otoh increase code size also walk type hierarchy less accurate check talk vsavkin kegluneq", "d": "7/2015"}, {"body": "update vsavkin explained needed still using transformers dynamic change detectors generated change detectors featurecomplete longer need wo nt checking interfaces reflectively log issue remove interfaces reflector followup task change detectors done", "d": "7/2015"}, {"body": "yjbanov provide guidance needed next", "d": "7/2015"}, {"body": "asked take look yjbanov update needs done end close", "d": "7/2015"}, {"body": "per offline discussion yjbanov sounds like fixed immediate issue longer term goal eliminate need information entirely", "d": "7/2015"}, {"body": "sadly using recorded interfaces places", "d": "7/2015"}, {"body": "fwiw quick test seems working posttransform added issue create test make sure things nt break later", "d": "7/2015"}, {"body": "let close", "d": "7/2015"}, {"body": "goderbauer hmm must say nt experience issue environments using linux osx win time time could share details environment setup exact task needs described setting error message getting", "d": "7/2015"}, {"body": "enough nt", "d": "7/2015"}, {"body": "mlaval think goderbauer going close one happy reopen got still issues could provide details", "d": "7/2015"}, {"body": "version angular chance could provide reproduction via jsbin plnkrco jsfiddle would helpful verifying bug thanks", "d": "7/2015"}, {"body": "could nt get example work plnkr simplest example could come edit additionally remove tag html file able reproduce issue raised", "d": "7/2015"}, {"body": "suspect problem calls navigation resulting popstate event", "d": "7/2015"}, {"body": "btford take issue since issue shortlisted email last week", "d": "7/2015"}, {"body": "bug discovered pr waiting merged fixes", "d": "7/2015"}, {"body": "replacing content projection new faster mechanism see nt call compilation problem", "d": "7/2015"}, {"body": "hit problem today found issue root cause believe operator precedence thus code becomes also thought use wrong polyfilled think intent made clearer adding brackets use case nt exist ie ie browsers case guess needs changing", "d": "7/2015"}, {"body": "alternate solution nt want modify angular source instead want external patch go say toplevel html", "d": "7/2015"}, {"body": "using new content projection projects compile time master ie nt call views instantiated", "d": "7/2015"}, {"body": "know since filed wanted bump possible angular cd knows value ca nt possibly change eg method definition class parties without using identical check yjbanov", "d": "7/2015"}, {"body": "nt think make yet given workaround nt bad definitely need fix straightforward debug", "d": "7/2015"}, {"body": "possible verify angular supported took quick look code thing think used equality identity", "d": "7/2015"}, {"body": "iirc used bug well required explicit fix nt one fixing sure works mhevery rkirov might know", "d": "7/2015"}, {"body": "like fix going punt backlog unless high priority dart team", "d": "7/2015"}, {"body": "assigning alexeagle first order pass trying filter change link format dartdoc understands", "d": "7/2015"}, {"body": "assigning back naomiblack dispatch next contributor", "d": "7/2015"}, {"body": "another tried get basic tests work karma jasmine ca nt get run would great get example test simple components thanks", "d": "7/2015"}, {"body": "firecube hey made tests work components really need angular test bed public", "d": "7/2015"}, {"body": "firecube matthewharwood implemented couple samples unit tests check might helpful comprehensive examples showcased try write well sure protractor work version angular", "d": "7/2015"}, {"body": "also component unit test example nt know get templates defined url loaded inlined example", "d": "7/2015"}, {"body": "ludohenin would run test gulp test doesnt work otherwise looks super promising", "d": "7/2015"}, {"body": "matthewharwood almost kind test use prefer tests run watch mode", "d": "7/2015"}, {"body": "duplicate possibly fixed refactor lifecycle hooks", "d": "7/2015"}, {"body": "sounds reasonable let give try first revisit sufficient", "d": "7/2015"}, {"body": "raising prioirity feature needed internal users remove hack workaround pkozlowskiopensource mhevery sync today update status", "d": "7/2015"}, {"body": "naomiblack sorry saw message right back trainings resume work starting tomorrow", "d": "7/2015"}, {"body": "status update sent basic infrastructure impl needs proper review discussion next steps", "d": "7/2015"}, {"body": "almost working plugging registry whole system sure able land today mhevery tbosch could quick chat today steps make fully work dart", "d": "7/2015"}, {"body": "mhevery got already functionality detecting missing bindings initial schema support landed via think time replace big issue smaller morefocused ones handling custom elements events attributes handwritten schema dart propose open issues run", "d": "7/2015"}, {"body": "mhevery basic schema support done opened smaller focused issues add missing pieces elements schema support handling custom elements attributes events handwritten schema dart closing one favor newly opened issues would great could triage prioritize work next steps", "d": "7/2015"}, {"body": "needs support cases subview single stamp multiple stamp", "d": "7/2015"}, {"body": "depends introduce subviews transparent user api", "d": "7/2015"}, {"body": "think solve little nicer already primitive injectable make also queryable nt need extra directive mark templates using extend take extra locals via data binding", "d": "7/2015"}, {"body": "closing favor", "d": "7/2015"}, {"body": "naomi angular material project think useful folks option libraries also developing angular material angular selfish reasons excellent proving ground many internal assumptions new angular codebase developer feel free use whichever component library best works app", "d": "7/2015"}, {"body": "naomiblack thanks joining discussion would possible share css polymer ngmat", "d": "7/2015"}, {"body": "fixed see", "d": "7/2015"}, {"body": "going close please ping thread heaving trouble best help", "d": "7/2015"}, {"body": "looks like fixed", "d": "7/2015"}, {"body": "solved via", "d": "7/2015"}, {"body": "possible via construct directives capturetemplate class tab directive selector capturetemplate class capturetemplate constructor public elementref elementref pubic protoviewref protoviewref", "d": "7/2015"}, {"body": "also consume aliasesjson part well", "d": "7/2015"}, {"body": "debugging though useful see files part output could consume files soon read rather keep around remove extra phase consumes resources polymer something similar transformer", "d": "7/2015"}, {"body": "without global transformers actually files package dependencies get deleted chance read", "d": "7/2015"}, {"body": "wo nt time work preparing move july", "d": "7/2015"}, {"body": "order say angular aria support ngaria module longer needed angular framework handle use cases ngaria wo nt directly apply new framework architecture wanted make sure captured accessibility use cases angular include handling custom controls handling value attributes custom controls using ngmodel discouraging click events nonsemantic elements could done documentation text alternatives labels form controls images also documentation issue", "d": "7/2015"}, {"body": "fixed released working fine", "d": "7/2015"}, {"body": "fixed master test proves", "d": "7/2015"}, {"body": "believe closed yjbanov naomiblack", "d": "7/2015"}, {"body": "going finish vacation removing", "d": "7/2015"}, {"body": "alexeagle issue closed case", "d": "7/2015"}, {"body": "last thing update release instructions", "d": "7/2015"}, {"body": "updated release instructions typings file definitelytyped release", "d": "7/2015"}, {"body": "one problems creates longer possible create components break styling rules creating component template descendant content appear node dom hence break rule reasoning presented convincing please provide us alternative workflow templating content attribute based directive rather accept generate descendant dom whole cloth", "d": "7/2015"}, {"body": "actually creating components warming idea using annotations denote properties events ex instead would cool could write java component selector bsalert class bsalert event dismiss new eventemmiter property set type val biggest advantage would nt duplicate property event names", "d": "7/2015"}, {"body": "tabs instead works tried case like works fine seems work parent querying children", "d": "7/2015"}, {"body": "closed", "d": "7/2015"}, {"body": "misko agrees core many points intersects zoneschange detection user like material efficiently implement design needed", "d": "7/2015"}, {"body": "might required anymore closing", "d": "7/2015"}, {"body": "cc sigmundch", "d": "7/2015"}, {"body": "yjbanov kegluneq hitting issue current implementation wondering think possible alternatives implementation support code transformers introduced new annotation use toplevel constants let transformer know could write idea behind include generated code symbols explicitly declared directive aliases however seems typescript nt support decorators toplevel variable declarations case ca nt write annotation directly top evaluating alternatives include lot automatically instance include const list looks like potential target think expensive potential getting big change aliases const object wraps list aliases example see also details typescript limitations discussion alternatives", "d": "7/2015"}, {"body": "alexeagle think would possible strip unsupported annotations typescript code prior handing typescript compiler assuming possible build ast prior analysis", "d": "7/2015"}, {"body": "fwiw ts parser seems support already cc mprobst since discussion bit split two bugs", "d": "7/2015"}, {"body": "looks like discussion taking place", "d": "7/2015"}, {"body": "answer question nt think good idea angular code use superset typescript build tool parses compiles code ides running tsc command line tue jul pm sigmundch notifications githubcom wrote fwiw ts parser seems support already cc mprobst since discussion bit split two bugs reply email directly view github", "d": "7/2015"}, {"body": "part fix please update message changed reflect new reality directive aliases thanks", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "ttowncompiled working issue could unassign rkirov demoting since nt touched since filed nt hear complaints", "d": "7/2015"}, {"body": "needs design discussion assigned", "d": "7/2015"}, {"body": "hey sorry digup issue think found nasty sideeffect inline style approach tested alpha issue nt occur alpha test app building components based commercial theme theme css multiple references files images fonts using relative paths example folder structure stylecss error imgprogressgif found true look file themeimgprogressgif change relative paths longer calculated based css file paths indexhtml file location open review solution", "d": "7/2015"}, {"body": "jpsfs logic correct relative urls inlining perhaps bug please file issue", "d": "7/2015"}, {"body": "landed", "d": "7/2015"}, {"body": "samverschueren thank solution vicb trying find usage forwardref tried searching code repository able find request provide usage", "d": "7/2015"}, {"body": "needs mhevery sync vsavkin move forward", "d": "7/2015"}, {"body": "closing issue created actionable issues", "d": "7/2015"}, {"body": "juliemr vicb could update issue status slipped", "d": "7/2015"}, {"body": "update", "d": "7/2015"}, {"body": "naomiblack neither vicb time deal timeframe due vacations n holidays vic adding context comments chance find another owner", "d": "7/2015"}, {"body": "assigning sjelin need find someone pair new angular territory rkirov nominate", "d": "7/2015"}, {"body": "gt longer blocked using dart transformer unsub", "d": "7/2015"}, {"body": "progress yet week", "d": "7/2015"}, {"body": "hopefully version working eod meaning midnight pm npm soon", "d": "7/2015"}, {"body": "sjelin updates", "d": "7/2015"}, {"body": "hi naomiblack examples use approach components thanks", "d": "7/2015"}, {"body": "marking blocked work issues sequentially messing around code starting right", "d": "7/2015"}, {"body": "think also split bootstrap compile create call eg interesting benchmarks also serverside rendering would compile create view instances multiple times", "d": "7/2015"}, {"body": "ca nt reproduce anymore", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "fredsa repro issue related windowonerror also trying break uncaught exceptions nt work consoleerror however nt think repro problem johnlindquist mentioned presentation angularu exceptions swallowed bootstrap johnlindquist repro", "d": "7/2015"}, {"body": "caitp please look issue suspect issue longstacktraces zone need investigate sure", "d": "7/2015"}, {"body": "captures exceptions forward error handler default error handler errors pass custom error handler argument iiuc original issue requested feature custom error handler supported since ever almost might doc issue edit ref", "d": "7/2015"}, {"body": "think problem default behavior think rethrow default want log stuff optin", "d": "7/2015"}, {"body": "debugging even custom error handler throws gets handled used reject promise unhandled rejection nt seem logged whatever promise implementation used sort weird", "d": "7/2015"}, {"body": "think blocked would solve time probably want keep logging default thrown exception eaten", "d": "7/2015"}, {"body": "sidenote implementation unhandled rejections printed never passed onerror handler plus works inconsistently different browsers promises kind suck way", "d": "7/2015"}, {"body": "uh per comments changing default error handler throw wo nt help good number exceptions logging throwing default spammy nonpromise cases making throw unhandled rejections would help superrealistic goal still nt really solve problem", "d": "7/2015"}, {"body": "also see related uncaught promises making throw unhandled rejections would help superrealistic goal making throw would departure current browsers behavior plus might false positive described link imo considered dev mode", "d": "7/2015"}, {"body": "nt think macrotask false positive realistically something people run wo nt really matter noted chrome thing actually throw anything logs console windowonerror handler never gets triggered asked op iiuc promises work anywhere might shame might something could add thing browser environments even happen nt really help issue nontrivial thing already probably best thing log throwing meaningless andor spammy many cases library", "d": "7/2015"}, {"body": "like global error handler sort either development time production builds intercept truly unexpected exceptions something development useful showing cleanly formatted detailed exception browser ui elsewhere production useful inform user web app broken expected way possible one could report exception back analysis okay install one error handler hook long hooks clearly documented fact expect least two types error handlers error handlers work within angular land deal data issues network connectivity issues application logic bugs whatnot error handlers things go wrong lower level eg app bootstrapping outside angular eg plain old js interacting angular app", "d": "7/2015"}, {"body": "error already logged plnkr default exception handler never hits promise rejections nt anywhere although agree might useful brought whatwgjavascript wanted explicitly handle bootstrapping error could something would spammy would already logged default error handler hey think working expected", "d": "7/2015"}, {"body": "relevant discussion web spec land caitp proposal works errors thrown bootstrap error caught way could allow users register custom error handlers via zones solve issue breaking uncaught exceptions", "d": "7/2015"}, {"body": "domenic working guess sort solves problem although think number features proposal nt add whole lot value says implemented blink behind flag nt believe true", "d": "7/2015"}, {"body": "caitp pushing update whether working need anything", "d": "7/2015"}, {"body": "nt think bug actionable least codebase", "d": "7/2015"}, {"body": "vsavkin suggestions otherwise think agree caitp close", "d": "7/2015"}, {"body": "agree caitp seem actionable", "d": "7/2015"}, {"body": "assigning figure next steps", "d": "7/2015"}, {"body": "think solved api crated angularu closing reopen misunderstood", "d": "7/2015"}, {"body": "afirdousi guess figured container really array directives directive easily able directives think new property avoided possible js let paymentdirectives directivea directiveb let directivec view directive paymentdirectives directivec class mycrazycomponent", "d": "7/2015"}, {"body": "pkozlowskiopensource happened supposed resolve issue", "d": "7/2015"}, {"body": "closing favor", "d": "7/2015"}, {"body": "mhevery pbs making work kept moving release release pr wip never really managed get things working correctly js dart look start working instead", "d": "7/2015"}, {"body": "would love help similar issues mhevery pkozlowskiopensource", "d": "7/2015"}, {"body": "afirdousi rest assured important topic us trying find best possible solution", "d": "7/2015"}, {"body": "blocked", "d": "7/2015"}, {"body": "tbosch still blocked", "d": "7/2015"}, {"body": "reprojection place free decide whether actually want retarget events using custom tag interfere native element", "d": "7/2015"}, {"body": "tbosch retargeting must even nt using native without implementation details leaked outside component api surface area", "d": "7/2015"}, {"body": "work mon jul pm jeremy elbourn notifications githubcom wrote tbosch retargeting must even nt using native content without implementation details leaked outside component api surface area reply email directly view github", "d": "7/2015"}, {"body": "tbosch angularjs lets events propagate fire handlers normally eg put element called time descendant element clicked behavior know little angulardart suspect thing yjbanov could confirm angular different default behavior invoking event handlers event target matches handling element behavior continues exist without event retargeting users end weird situation without native shadow dom know whether component event coming component directly propagated internal element", "d": "7/2015"}, {"body": "tbosch content reprojection unblocked jelbourn open working direction direct", "d": "7/2015"}, {"body": "almost unblocked reworking shadowdomstrategy right done days see", "d": "7/2015"}, {"body": "tbosch unblocked", "d": "7/2015"}, {"body": "yes unblocked", "d": "7/2015"}, {"body": "think pity guys closed nt make feature angular approaches see detailed several issues even one vsavkin wrote forms angular better alternative moment seems overly verbose build form formbuilder try keep controls models synched either missing something", "d": "7/2015"}, {"body": "cc sigmundch", "d": "7/2015"}, {"body": "fwiw tried locally couple weeks ago seemed possible even private properties willing put definition object directly reflectorts", "d": "7/2015"}, {"body": "going bump priority entering optimization phase", "d": "7/2015"}, {"body": "actually last comment wrong clangformat nt require semicolons instead break code strange ways semicolons omitted need something else enforce typescript code nt using asi", "d": "7/2015"}, {"body": "landed via", "d": "7/2015"}, {"body": "sounds like duplicate", "d": "7/2015"}, {"body": "done issues linked removing milestone", "d": "7/2015"}, {"body": "cc hankduan", "d": "7/2015"}, {"body": "implemented using result", "d": "7/2015"}, {"body": "closed via", "d": "7/2015"}, {"body": "got pr already", "d": "7/2015"}, {"title": "null false values incorrectly binded", "body": "hi everybody first great job developing vuejs really impressed definetly one mustuse libraries future web projects however today jackmcdade actually experienced issues incorrectly binded least null boolean values issue occurs staticly binded newly added values see fiddle details something missing know", "num": "1108", "d": "7/2015"}, {"title": "invalid properties passing empty string component", "body": "hello simple component property defaults empty string using component like result expected passing empty string property value know could worked around scenario run like result follows error expect property still empty string bug expected behaviour fiddle example", "num": "1107", "d": "7/2015"}, {"title": "", "body": "html text vuecomponent layout template lt div stylebackgroundcolor lightgrey gt lt content gt lt content gt lt div gt inherit true new vue el documentbody data text hello components child template lt layout gt world lt layout gt \u6e32\u67d3\u540e\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u91cc\u5ba1\u67e5\u5143\u7d20\u7ed3\u679c html hello world \u5047\u5982\u5b50\u7ec4\u4ef6\u7684\u6a21\u677f\u4e0d\u662f\u628a\u5f15\u7528\u7ec4\u4ef6\u653e\u6700\u5916\u9762 \u6709\u5144\u5f1f\u5143\u7d20 html hello worldhehe", "num": "1106", "d": "7/2015"}, {"title": "vattr behaving differently", "body": "last update vattr behaving differently mostly affects image loading example load image like previous version set attribute inserted dom latest version set attribute equals triggers image download invalid url know fixed previous syntax much cleaner see issue", "num": "1105", "d": "7/2015"}, {"title": "onclick method nt work", "body": "onclick editblock hbid index nt work new release vue release working", "num": "1104", "d": "7/2015"}, {"title": "allow one static empty option select element dynamic options", "body": "model empty string static option selected example without fiddle around array add select user option angular supporting long time btw really think filter ship core", "num": "1103", "d": "7/2015"}, {"title": "vel vref bindings reactive", "body": "changes content another component two components property different values manually accessing property via refproperty returns correct value databindings updated", "num": "1102", "d": "7/2015"}, {"title": "vrefvel higher compilation priority", "body": "way currently works unexpectedly procedural html foo fooinnertext barinnertext bar fiddle", "num": "1101", "d": "7/2015"}, {"title": "merging class attribute svg component", "body": "result btw nodes plain attribute template root node take priority think let instance override template default attributes flexible", "num": "1100", "d": "7/2015"}, {"title": "failing resolve component results error", "body": "hello ca nt say bug would like warning error", "num": "1099", "d": "7/2015"}, {"title": "strange behavior dynamic component", "body": "hello ca nt say sure going got problem everything ok app started lag lot got warnings like code got warnings looks like dynamic component dynamic props hints", "num": "1098", "d": "7/2015"}, {"title": "component nt right", "body": "following example root vue properly", "num": "1097", "d": "7/2015"}, {"title": "resolve component true", "body": "set true repeat directive resolve proper component example followed demo see console", "num": "1096", "d": "7/2015"}, {"title": "cloned safari", "body": "safari wo nt clone template content template cloned including content situation demo", "num": "1095", "d": "7/2015"}, {"title": "suggestionpatch filterbykeys filter array multiple keys", "body": "common requirement specify multiple keys look might produce false positives fields irrelevantinvisible user crude modification dubbed usage example would possible add filter core perhaps replace backwards compatible currently keeping separate custom filters file requires duplicating function pulling requirements javascript var filterbykeys function convert arguments actual array var args slicecall arguments var arr argsshift var search argsshift cast lowercase string search search tolowercase strip optional args delete args left keys fall back keys var keys argslength gt args objectkeys args ps possible issues might arise conversion bit funky sure browser compatibility", "num": "1094", "d": "7/2015"}, {"title": "merge property sag elements", "body": "read returns readonly object string fails merge property transclude phase", "num": "1093", "d": "7/2015"}, {"title": "value default param props gets replaced component data", "body": "hello missing something ok default value present", "num": "1092", "d": "7/2015"}, {"title": "ca nt get way default param props works", "body": "", "num": "1091", "d": "7/2015"}, {"title": "suggestion passing function result inline statements", "body": "return security reasons following example sometimes want need value function return dynamic condition html select input javascript vueuse require vuevalidator new vue data widget title title description compueted togglewidget function return thiswidget title methods dynamicconstraint function name condition var ret name title condition foo somehting todo else somehting todo else name description somehting todo return ret mount demo implemented using option properties computed properties function flexibility better properties vuejs could pass function result inline statements think useful", "num": "1090", "d": "7/2015"}, {"title": "expose", "body": "find resolve asset check however value nt exposed", "num": "1089", "d": "7/2015"}, {"title": "template option accept function", "body": "could used like async components make development systemjs breeze", "num": "1088", "d": "7/2015"}, {"title": "vue compatible systemjs", "body": "getting error templates loaded like", "num": "1087", "d": "7/2015"}, {"title": "old newval watch nt seem working expected", "body": "jsbin watch function enabled nt seem working expected example watch options plain watch example example seems produce output quite sure wrong anywhere", "num": "1086", "d": "7/2015"}, {"title": "quite right behavior component right inside another one", "body": "error check console ok see happening replace mechanism vms overlapping think warning quite exact one", "num": "1084", "d": "7/2015"}, {"title": "trackby property raise warning honored using binding", "body": "using binded warning raised directive honored see jsfiddle console read prevent coding parametric list components reproducible vuejs tested far", "num": "1083", "d": "7/2015"}, {"title": "strategy make twoway binding sync", "body": "example value changes update binding value binding value watcher modify value wo nt propagate value directive", "num": "1082", "d": "7/2015"}, {"title": "scope repeated component right", "body": "example followed always without value property always empty first case resolved using parent scope last case properties initialized meta data", "num": "1081", "d": "7/2015"}, {"title": "vueconfigstrict vrepeat", "body": "bit trouble trying repeat component initially trying place directly component tag could nt access properties item component tag pass props saw recommended use wrap component strict enabled child component nt exist within changed still child component nt exist inside see example change strict false repeat work", "num": "1080", "d": "7/2015"}, {"title": "always return false getting default boolean property", "body": "bug occured", "num": "1079", "d": "7/2015"}, {"title": "ca nt set properties certain circumstances", "body": "trying get vuejs recently building something little complex would usually library however stumbled across really odd behaviour nt allow set properties building sort stepbased assembly interpreter similar multiple nodes set instructions get executed parallel execution next line takes place whenever click button page usually calls method vue instances called relevant code method js startexecution function var instruction thiscurrentinstruction currentinstruction computed property var cancontinue false var nextinstruction thisinstructionpointer whatever instruction wants could change cancontinue true cancontinue nextinstruction thisinstructionpointer go back nextinstruction higher number instructions set instructionpointer nextinstruction part already works whenever instruction says okay go next one increase instruction pointer one go back first one however conditional well unconditional jumps change let stay false actions happen separate methods unconditional jump jump greater zero body pretty much following js actionjmp function var newinstruction thisinstructionpointer stuff set instructionpointer newinstruction starts become weird log value changed action correct appears changed logging next hit button however shows nt fact changed remained reason also reflects template echo never updates inside one methods even though consolelog suggests reason vuejs issue stupid latter would mean belong think", "num": "1078", "d": "7/2015"}, {"title": "accessing vue html elements need nudge", "body": "like create input field responds keyboard enter adding new field focusing cursor field however nt appear work sub html elements element corresponds vue html html js javascript var field function thistext var fields new vue el fields data fields new field methods newfield function component focus new field var self component vuenexttick function nt work field self index focus add new field datafieldspush new field error accessible happy hear vue way using components etc", "num": "1077", "d": "7/2015"}, {"title": "submit directive", "body": "form use directive manually prevent default action html new vue el asis methods addtask function e epreventdefault work idea made approach simpler like html new vue el tobe methods addtask function work", "num": "1076", "d": "7/2015"}, {"title": "vue assumes defined", "body": "given vue required using amd loader webpack browserify browser throws error every occurrence believe regression something commit thank", "num": "1075", "d": "7/2015"}, {"title": "vrepeat vif element working", "body": "need repeat conditionally show found using element work previously using repeating actual repeating element however internet explorer causing issues allow live inside still version upgrading solve issues ie allow combine another way work around fyi current markup working repeat conditionality working expected", "num": "1074", "d": "7/2015"}, {"title": "uppercase lowercase\u5b9e\u7528\u7684\u591a", "body": "", "num": "1073", "d": "7/2015"}, {"title": "present component declaration initialised default value", "body": "fine two examples one one without property component present seems initialised declared template", "num": "1072", "d": "7/2015"}, {"title": "property nt observed explicit set method provided", "body": "sorry provide jsfiddle example find cdn rawgit latest dev code instead code test machine latest dev vue latest commit html new vue el app components mycomp template replace true props default false type boolean data return b example wo nt update view value example update model value model value wo nt trigger view update model value proxied problem set default prop value vm observable wo nt observe also situation cases also means options instance supplied still data always proxied even explicit set supplied set proxy means unproxied property value changes nothing sync", "num": "1071", "d": "7/2015"}, {"title": "warn null undefined expected type even prop required default value", "body": "example followed create component without providing property warn null undefined expected type think warn property required exist input value expected type", "num": "1070", "d": "7/2015"}, {"title": "currency filter without cents", "body": "possible use currency filter without displaying cents", "num": "1069", "d": "7/2015"}, {"title": "", "body": "jstimepicker datetimepicker format hh ii autoclose true startview minview maxview", "num": "1068", "d": "7/2015"}, {"title": "twoway binding update correctly", "body": "first example example root change notify component update component validate clamped however root locked sync validated", "num": "1067", "d": "7/2015"}, {"title": "data generated props replaced default data whole", "body": "component props default data function props default value null raw value wo nt set data example", "num": "1066", "d": "7/2015"}, {"title": "variable component outer element class deactivate outside vclass", "body": "hi noticed possible call component et use vclass outside properly merged existing class introduce variable component class attribute outside vclass ignored fiddle illustrating bug", "num": "1065", "d": "7/2015"}, {"title": "vuejs ignores vueconfigreplace false repeated components", "body": "hello", "num": "1064", "d": "7/2015"}, {"title": "parsepath path parserspathjs", "body": "state two confused meanings normal path indentifier inbracket indentifier failed maybe would try pull better one later", "num": "1063", "d": "7/2015"}, {"title": "adding transition vrepeat within template", "body": "", "num": "1062", "d": "7/2015"}, {"title": "dynamic select options impractical", "body": "really ridiculous convert data textvalue json object format order correctly render select options dynamically ideally would something along lines", "num": "1061", "d": "7/2015"}, {"title": "", "body": "html name email javascript vuecomponent userprofile var parent new vue el data user name foo bar email foo barcom", "num": "1060", "d": "7/2015"}, {"title": "vm log\u6570\u7ec4\u65f6\u62a5\u9519", "body": "\u65f6\u4f1a\u63d0\u793a\u9519\u8bef", "num": "1059", "d": "7/2015"}, {"title": "bug vue\u6700\u65b0\u7248\u672c\u5728cordova\u73af\u5883\u4e0b\u4f1a\u51fa\u9519", "body": "typeerror redefine property document typeerror redefine property reload appendto", "num": "1058", "d": "7/2015"}, {"title": "dev inspector shows precompiled vue dom", "body": "anyone know dev inspector chrome would show boythe affairafter gonealpha houseamerican crimeanger managementanother periodapocalypse code bible predictionarcher armstrong millerbackstrombad educationbad judgeballersballot monkeysbanishedbattle creekbenidormbig bad worldthe big bang theorybig school black mirrorthe blacklistbluestone servant independentbob burgersbojack horsemanboschbreaking badbreaking greenvillethe brinkbroad citybrooklyn nineninebuffy vampire slayercardinal burnscastle castle buildersthe castle buildersthe casual vacancycatastrophe catterickchalkcharlie brooker weekly wipeclass act series comebackthe comedianscomedians cars getting coffeecoming age communityconstantinecount arthur strongcristelacrowdedthe delivery mandriftersdrunk historydrunk history uk episodesthe exesthe exes web dl guyfargoflight conchordsthe followingforever fresh boatfriends peoplegame facegetting ongetting us girlfriends guide divorcegive girlsgive girls web dl frankieground floorthe guardianhalt catch firehappyishheartburn hotelhello ladieshindsighthindsight hitchhiker guide galaxyhoff recordthe honourable womanhot clevelandthe house jack builthow get away murderhumansi live modelsimpastorin kitcheninside amy schumerinside interceptorthe crowdit dateit always sunny philadelphiait kevinizombiethe jack triumph showjane virginthe jim gaffigan showthe job lotthe last man earthlast man standing louie lovehatelunch monkeysluthermadam secretaryman seeking womanmanhattan love storymanhattan love story mapp lucia marriedmarried first sight first yearmarried medicinethe mccarthysthe mentalistthe middlemike amp mollythe mindy projectmirandamodern familymommr robotmurder successville murder horridmy mad fat diarythe mysteries lauramystery science theater barleynew girlthe new statesmannewsreadersnick helm heavy entertainmentno offencenot going outnot safe work number nurse jackiethe odd couple hookthe old guysone big happyorange new blackother spacepeep showplayhouse presentsplaying housepok\u00e9monpompidouporkpieproject runway starspsig wppsychobitchespullingraised wolvesreviewrick mortyrizzoli amp islesrobot chickenroman empirethe royalsrussell howard good newssaturday night liveschitt creekscrotal recallselfieshameless us sherlocksiblingssilicon valleysin city saintssin city saints yhoothe sketch showthe smoking roomsome girlsthe soupsouth parkthe spastep davesuntrapsuper fun nightthat mitchell webb lookthis jinsytitty bang bangtoast londontogethernesstop pops uk triptanktrolliedtrue detectivetrying againunbreakable kimmy schmidtuncleundateable undercoverviciousviral tapwayward pinesweb therapyweb therapy weird lonerswhite collarworkaholicsthe worst week lifethe wrong mansyou worstyoungeryour family mineambncodperfsgthuivjwltags brooklyn nineninefilter show looks like vue dom compiling running dom strange part code still works guess garbage attributes nt hurt anything makes debugging hard ubuntu chrome", "num": "1057", "d": "7/2015"}, {"title": "dynamic vmodel directive", "body": "currently vmodel directive support mustachetype bindings binding expressions feature would extremely helpful creating form builderlike implemenetations", "num": "1056", "d": "7/2015"}, {"title": "\u767e\u5ea6\u5730\u56fe\u5bf9\u8c61\u8d4b\u503c\u7ed9\u7ec4\u4ef6data\u62a5\u9519", "body": "data function return zoom center null class null bmap null map\u662f\u5b9e\u4f8b\u5316\u540e\u7684\u767e\u5ea6\u5730\u56fe\u5bf9\u8c61 thisbmap map typeerror redefine property", "num": "1055", "d": "7/2015"}, {"title": "props validation enforce binding type", "body": "sometimes want create component really needs twoway prop vue could throw warning validation configured component would nice", "num": "1054", "d": "7/2015"}, {"title": "vif working inside vrepeat", "body": "hi ca nt get vif work properly inside vrepeat component template idea show list id debug turned checkbox component moduleexports template require componenttemplatehtml display debug template gets updated properly true false works fine outside vrepeat missing something thanks thanks much vuejs turned developer life around", "num": "1053", "d": "7/2015"}, {"title": "", "body": "html component windowonload function vuecomponent mycomponent template hello name new vue el body data name peak", "num": "1052", "d": "7/2015"}, {"title": "replace option default value changed true", "body": "hello vue api doc see say default value replace option false find default value true set value false manually intentional change mistake", "num": "1051", "d": "7/2015"}, {"title": "", "body": "\u4f8b\u5b50\u4e2d\u53ea\u770b\u5230\u4e00\u6b21\u7ed1\u5b9a\u4e86\u4e00\u4e2aclick trigger handler \u6211\u60f3\u4e00\u6b21\u7ed1\u5b9a\u591a\u4e2a\u4e8b\u4ef6\u600e\u4e48\u505a", "num": "1050", "d": "7/2015"}, {"title": "suggestion user custom assets", "body": "developing custom directive custom filter plugin sometimes happens custom assets needed api user register custom asset using think useful following validation example html min validator custom assets vuecustomassets validator min function val something vuedirective validate bind function var el thisel var validatorname thisarg update function val old var vm thisvm var el thisel var validatorname thisarg var validator thisvalidator var validatorarg thisexpression var model elgetattribute name var value elgetattribute value var keypath validation model validatorname join", "num": "1049", "d": "7/2015"}, {"title": "global event", "body": "would useful dispatch new method could trigger event every vm independently hierarchy", "num": "1048", "d": "7/2015"}, {"title": "replace vue object dom unmount method", "body": "vue object mounted form want replace object another vue object new object old vue object still catching events old one mount new one events caught correct way thank", "num": "1047", "d": "7/2015"}, {"title": "\u4e0d\u9700\u8981\u53cc\u5411\u90a6\u5b9a\u65f6\u600e\u4e48\u5904\u7406", "body": "", "num": "1046", "d": "7/2015"}, {"title": "remove stale instances toggling vif", "body": "try fiddle click button blue rect leave time click button cancel leave transition strangely leave transition nt stop new blue rect appended document bug might associated", "num": "1045", "d": "7/2015"}, {"title": "leavecancelled called properly vtransition", "body": "try fiddle click button blue rect leave time click button cancel leave transition strangely hook nt called called instead see track info console", "num": "1044", "d": "7/2015"}, {"title": "newval oldval watch array", "body": "fully sure bug misunderstanding something could nt find anything docs explaining weird behavior also watch api docs option ca nt find info docs source code", "num": "1043", "d": "7/2015"}, {"title": "suggestion vrepeat directive provide computed variablesvalues", "body": "using vrepeat directive sometimes happens related object needed depending current value example iterating array items gettype method used get related type object exists html name gettype value name would nice create computed variables vrepeat like html name typename since type depends item object value omitted automatically passed gettype value method html name typename created directive seems like useful addition vrepeat directive", "num": "1042", "d": "7/2015"}, {"title": "bug vm compile \u7f16\u8bd1\u4e2d vrepeat \u6307\u4ee4\u5931\u6548", "body": "vrepeat \u7236vm \u7684 compile \u5c5e\u6027 moduleexports template require templatehtml data paytype val null items text \u4e2d\u56fd val cn text \u7f8e\u56fd val usa text \u82f1\u56fd val en key val select null moduleexports function vuecomponent mgselect template inherit true ready function var el el parent data parent parent data elattr data \u5982\u679c\u6709 data data \u4e2d\u7684 items \u751f\u6210\u5b50\u9879\u76ee data amp amp parent data amp amp parent data items var item elfind item itemlength itemaddclass item attr vrepeat data items parent compile item", "num": "1041", "d": "7/2015"}, {"title": "js problem", "body": "problem", "num": "1040", "d": "7/2015"}, {"title": "unexpected vtransition behavior using vrepeat mutation methods", "body": "fiddle uses mutation methods array used vrepeat javascript vtransition things noticed behave expected using new array element added front list last item list animated inout work transitions applied kinda works data updated correctly one new element transitioned even though removed one element middle list added two new elements", "num": "1039", "d": "7/2015"}, {"title": "vuerepeat new row every item", "body": "hi possible create new row every element example php model repeat nicely hoping create new every connectors sorry nt mirror example fiddle using laravel kind lost fiddle thanks advance cheers thomas", "num": "1038", "d": "7/2015"}, {"title": "checkboxes array model", "body": "get something like work html new vue data languages english japanese chinese mylanguages english chinese", "num": "1037", "d": "7/2015"}, {"title": "selfclosing component tags", "body": "allowing selfclosed component tags like currently work", "num": "1036", "d": "7/2015"}, {"title": "\u7528vuejs\u7684vrepeat\u6570\u636e\u66f4\u65b0\u95ee\u9898", "body": "\u6211\u901a\u8fc7api\u521d\u59cb\u5316data", "num": "1035", "d": "7/2015"}, {"title": "solution props name start data hyphenated prop names deprecated", "body": "commonly using props start recommended exchange proprietary information way nt need worry attribute use exchange data cause impact dom hyphenated prop names deprecated wish use props start data like future find properer attribute", "num": "1034", "d": "7/2015"}, {"title": "using classes scope", "body": "create new vue list array class objects vue put gettersetters seem loose method functions best way avoid currently coping properties new object inserting scope save back server using class methods copying scope data back original class using something like objs extend true properties objects", "num": "1033", "d": "7/2015"}, {"title": "use arrayobject props default value", "body": "whether use arrayobject default value props setting may bug every instance share thing passing target property component try fiddle", "num": "1032", "d": "7/2015"}, {"title": "directives generated html", "body": "hello div vhtml directive call renderxyzhtml function function return html like click div myfunction function nt get called", "num": "1031", "d": "7/2015"}, {"title": "specify component dependencies using camelcase", "body": "one devs getting tripped using camelcase props dash case components could bring camelcase dashcase conversion component dependency names well thanks", "num": "1029", "d": "7/2015"}, {"title": "using vifvshow vcloak", "body": "following code snippet produces result element remain hidden even became expected go away cases design special use case suppose fixed warning added potential issue vif vcloak mixtures", "num": "1028", "d": "7/2015"}, {"title": "ca nt broadcast switched child component", "body": "component changes based attribute code written memory heavily snipped new vue template data curpage show components show vuecomponent showcomp watch vuecomponent watchcomp events watchup gt curpage watch broadcast watchdown see event called dispatched component broadcast child component event happens data variable changed time broadcast happens dom still component component sees event component nt worse put settimeout broadcast delay event still goes component even though dom component visible appears event propagation nt changing component changes top", "num": "1027", "d": "7/2015"}, {"title": "emit \u548c \u5728vue\u4e2d\u600e\u4e48\u4f7f\u7528", "body": "app view work", "num": "1026", "d": "7/2015"}, {"title": "proper use debounce property", "body": "debounce supposed throttle keyup event text input trouble getting work debounce works fine throttling model update keyup event still fires soon key released sure supposed work way thanks", "num": "1025", "d": "7/2015"}, {"title": "vue ca nt observe object prototype chain", "body": "pass coffeescript class instance vue data properties belong prototype ca nt watched far understand observer enumerates properties using objectkeys call respect prototype chain using key obj instead quick test shown break vue submit patch want", "num": "1024", "d": "7/2015"}, {"title": "props default values added component data", "body": "nt explicitly add component element attribute", "num": "1023", "d": "7/2015"}, {"title": "directives vrepeat resolved component child scope", "body": "vuejs directives transcluded content compiled child scope nested vrepeat directive sample demonstrating bug vuejs", "num": "1022", "d": "7/2015"}, {"title": "something cause raw mustache flickering", "body": "mostly happens chrome switch page backforward almost never cache disabled \u043er page reloaded scripts loaded status almost situation ie even refresh page notice firefox everything smooth concluded issue google ie chakra bug vuejs nt better solution", "num": "1021", "d": "7/2015"}, {"title": "initialize boolean property properly", "body": "example html new vue el body components test props name prop type boolean data return prop true initialized set specified value initialized find compiler set boolean value default initializing default data", "num": "1020", "d": "7/2015"}, {"title": "undefined released version", "body": "think codes branch released currently mixed updated latest version things broken find defined vm directive use property problem fixed branch find defined problem met nt due problem changes set vm method testing browser", "num": "1019", "d": "7/2015"}, {"title": "problem remove item list array list array inside", "body": "struture components control datas list control horas list datas list item problem add n datas itens add n horas itens whatever datas list item try remove whatever datas list item erro occurs screenshot page code explain steps", "num": "1018", "d": "7/2015"}, {"title": "http response arrived instance destroyed", "body": "minimal example js var foo new vue el foo throws often occurs switching components quickly wrapping code trycatch block good idea eat errors add complexity", "num": "1017", "d": "7/2015"}, {"title": "reach object data inside component question", "body": "hi gitter chat looks active would ask question proper place ask questions please point started use vuejs met one issue vue instance array data possible put another value data clicking button based array using vrepeat directive print another component question assuming put object data reach object value component particular data function approach nt work even able see uuid printing ca nt reach way able reach template want access code full code advice appreciated regards", "num": "1016", "d": "7/2015"}, {"title": "false alarm breaking change uncaught typeerror read property replace undefined", "body": "showing blank page props dashes names", "num": "1015", "d": "7/2015"}, {"title": "watcher false triggering", "body": "reporting another bug watch set deeper level root altered callback triggered happens deep new value added difficult explain please check fiddle watch triggered value changed happens using watch", "num": "1014", "d": "7/2015"}, {"title": "consecutive changing display opacity properties vue method wo nt trigger opacity transition animation", "body": "example method change display property first change opacity opacity changing display already block changed simultaneously time transition animation triggered happen way work around need change display property animate opacity using options remove tags completely dom", "num": "1013", "d": "7/2015"}, {"title": "recursive component broken inherit true since", "body": "since recursive tree list component broken minimal example js lt ul gt lt li vrepeat item items gt itemtext lt xtree vif itemchildren items itemchildren gt lt xtree gt lt li gt lt ul gt vueconfigdebug true lt p gt var foo new vue el foo data nav text foo text bar text baz children text text components xtree inherit true template documentgetelementbyid xtreetemplate innerhtml props items ok without foo bar baz ouputs", "num": "1012", "d": "7/2015"}, {"title": "jquery plugins vmodel working together", "body": "trying use typeahead jquery plugin inside vuejs tried around quite bit get plugin working nt get working combination vmodel input field update value vmodel using plugin enter value problem type plugin like timepicker anything else currently trying get working vuejs component js vuecomponent typeahead template documentqueryselector typeaheadtemplate props onload ready function input field component html lt div class formgroup gt lt input type text vmodel newtimetrackingproject class typeahead gt lt div gt input without component html update vmodel value input value entered jquery plugin", "num": "1011", "d": "7/2015"}, {"title": "incorrect scope transcluded repeater", "body": "using repeater trascluded content seems set scope current component instead parent outside repeater", "num": "1010", "d": "7/2015"}, {"title": "vue broadcast inside multiple components", "body": "fire event trigger component component scope example broadcast event increase values right fire event trigger components", "num": "1009", "d": "7/2015"}, {"title": "different initial selected value", "body": "hi first thanks fantastic work note different behavior using template dom element string options initialization use template dom element render select value selected vmodel null using string options render select first value selected vmodel null", "num": "1008", "d": "7/2015"}, {"title": "unable add classesstyles component", "body": "currently possible add stylesclasses components custom element nt rendered dom quite unintuitive component nt rendered dom made little demo show problem opinion attribute taken account whole element normal html components work strange remove attribute completely another issue ca nt attach event handlers element component nt common parent workaround though could wrap component apply like style class etc feels annoying would nt play well web components spec", "num": "1007", "d": "7/2015"}, {"title": "hook called unbinding component", "body": "vuejsdiscussion", "num": "1006", "d": "7/2015"}, {"title": "method called child component", "body": "trying framework using noticed method child component nt called first though must problem building reduced test cased think problem find test case", "num": "1005", "d": "7/2015"}, {"title": "issue vcomponentvrepeat combined", "body": "tested latest seems vcomponent work vrepeat component mycomponent would much problem tables tr must used example created fiddle see failing error console would", "num": "1004", "d": "7/2015"}, {"title": "allow register asset array rather object", "body": "instead registering global assets components directives etc prefer pattern registering private assets explicitly states assets available component currently want register private asset need use hash eg means manually maintain id selector asset want asset id selector across components app consistancy consider something like javascript import pagincomponent componentspaginpagin import actionmenucomponent componentsactionmenuactionmenu import inputdirective directivesinput export var pagemanager template require pagemanagerhtml components pagincomponent actionmenucomponent directives inputdirective would self define thier default id selector eg asset registered array opposed object hash id selector pulled property might better use property consistency asset types currently achieve small utility function register assets creates hash array assets using property asset create hash vue expects javascript components reg pagincomponent actionmenucomponent subcomponent directives reg inputdirective function reg var var lt argumentslength arguments selector arguments return allowing use array vs object registering assets would non breaking change allows syntax think nice", "num": "1003", "d": "7/2015"}, {"title": "use real extend helper", "body": "trying use realized basic implementation nt support deep extending nt support extending multiple sources please move resource extend helper vue core", "num": "1002", "d": "7/2015"}, {"title": "nt apply immediately", "body": "noticed using x amount time apply changes kind event happens mousemove etc whereas use immediately changes take place note examples functions property component another example neither apply move mouse across page reasoning really ideal situation like want load data asynchronously within component", "num": "1001", "d": "7/2015"}, {"title": "allowing camelcase props", "body": "would nt match options camel case would appear html course", "num": "1000", "d": "7/2015"}, {"title": "waitfor emit work dynamic component", "body": "main view model define dynamic component inside component must initialized data gets rendered eg ajax call layout insert waitfor attribute component element initially component compiled event tried invoke emit dataloaded immediately without anything component never rendered component ready event nt invoked put dummy settimeout function inside compiled event callback invoke emit dataloaded everything works fine component rendered two examples working working", "num": "999", "d": "7/2015"}, {"title": "", "body": "", "num": "998", "d": "7/2015"}, {"title": "programmatically add component", "body": "metric component used inside funnel series steps user clicks new step new metric component instantiated clicks remove corresponding metric component removed vrepeat vref lost", "num": "997", "d": "7/2015"}, {"title": "computed properties vreferenced component values", "body": "possible", "num": "996", "d": "7/2015"}, {"title": "lite way extend component option", "body": "known css lib semanticui provides level styles lib level theme level site level similarly component option also multiple level settings present use inheritance mode vue achieve different levels component like code javascript vuecomponent pagination template pagesize data function return pagesize var apppagination vuecomponent pagination extend data function return pagesize new vue el wrap data components pagination apppagination like javascript var appcomponentdefaults pagination data function return pagesize new vue el wrap mixins appcomponentdefaultspagination data think complex want replace defaults data add hook life cycle create sub component proposed provide lightweight approach extends component option like", "num": "995", "d": "7/2015"}, {"title": "vue component binding issue", "body": "jsbin partially explains issue change linked version vue notice bindings change use parent data binding binding custom components appears vue binding parent bindings instead component bindings issue way get previous behaviour back", "num": "994", "d": "7/2015"}, {"title": "add adds empty rows", "body": "hi little bug code id role player use vuejs resource send post like dump request server side roster get tried passing string working either ideas", "num": "993", "d": "7/2015"}, {"body": "\u5728 branch", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "btw example filter use js vuefilter optionify function items text value return itemsmap function item value null return item text", "d": "7/2015"}, {"body": "actually share root cause bindings reactive renaming one closing", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "got fiddle strange reason problem dependent number repeated inside number props got inside function oo", "d": "7/2015"}, {"body": "comment lines app still lag", "d": "7/2015"}, {"body": "aye still lag warning different duplicate objects supported vrepeat using components transitions", "d": "7/2015"}, {"body": "another thing app freezes infinite loop warnings", "d": "7/2015"}, {"body": "try branch fixed infinite check want make sure also fixed performance problem", "d": "7/2015"}, {"body": "nt help infinite check still present probably investigate problem occurs one page also using hacks work maybe hacks way", "d": "7/2015"}, {"body": "ah set false fun begins", "d": "7/2015"}, {"body": "hmm fixed fiddle though using file dist didnt build branch fri jul andrey notifications githubcom wrote ah set vueconfigasync false fun begins reply email directly view github", "d": "7/2015"}, {"body": "build yeah tried new version separated document another computer ca nt get right new also tried reproduce example right ca nt even get vue fixbatcherinfinitecheck branch work asyncfalse mode getting error", "d": "7/2015"}, {"body": "added getting error looks like current computer code behaves different get inifinite loop code", "d": "7/2015"}, {"body": "probably nt help fiddle working properly fix branch app still infinite loop probably infinite loop need make new fiddle showing infinite loop problem fix branch lowlevel details fiddle component lot default data fields fields merged objects array every field causes call object inside array watcher watching array triggered every call triggers updated infinite check something number elements array also performance issue fix branch makes sure watcher updated every async update cycle counts infinite loops watcher pushes queue", "d": "7/2015"}, {"body": "thanks detailed explanation makes things clear still points left could please give working fiddle code example thoughts problem always visible want make accent following points tested versions vuejs also versions code async made different tests lets review results amp bunch errors amp infinite loop error depends computer amp everything fine yay amp infinite loop error depends computer either failed building properly problems nt occur system", "d": "7/2015"}, {"body": "see point yes setting get error fix branch using actual app honestly nt recommend exactly type situation", "d": "7/2015"}, {"body": "well yes actually nt intend used beginning thing funny till version vuejs bug probably components used inside waitfor component would ignore work synchronously trying move v found app working new version finnaly began work whole app designed work depending synchronous vuejs behavior", "d": "7/2015"}, {"body": "hmm one hack try remove lines", "d": "7/2015"}, {"body": "going close since issue let know suggestion helped anyway", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "could implemented enhancement builtin filterby need detect search keys", "d": "7/2015"}, {"body": "yeah fixed", "d": "7/2015"}, {"body": "using note use case nt need expression works without comparison statement something like side effects example nt detect statement directive get result handler function", "d": "7/2015"}, {"body": "thank comment dynamicconstraint b expression right worked without", "d": "7/2015"}, {"body": "return value promise runtime api nt think using splitting component files", "d": "7/2015"}, {"body": "think template option accept promise exactly use case", "d": "7/2015"}, {"body": "even write import template indexhtml text return promise nt build", "d": "7/2015"}, {"body": "expected behavior reference type values arrays objects mutated rather replaced entirely vue nt nt need cache deep copy value like angular even gives different values still need diff arrays anything useful trying achieve old value", "d": "7/2015"}, {"body": "exaplaination makes sense changed recently case since beginning", "d": "7/2015"}, {"body": "always case", "d": "7/2015"}, {"body": "ok thnx", "d": "7/2015"}, {"body": "think deprecated allowed elements weird actually working second jiddle", "d": "7/2015"}, {"body": "right way", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "two problems modifying value user types would often result weird ux specifically need functionality twoway binding best way achieve using write filters often actually want display sync underlying model", "d": "7/2015"}, {"body": "case create component used without purpose get default behavior system input put transparent input component template bind value hand create component want make least one selected watch state attached update group state changed however tap selected deselected reselect wo nt propagate model input ideas achieve purpose", "d": "7/2015"}, {"body": "reselect nexttick unlocked", "d": "7/2015"}, {"body": "expected behavior first case exactly described second case content transcluded also resolved parent scope basically repeated component follows semantics components rather inline repeats", "d": "7/2015"}, {"body": "means want use repeat meta info wrap around communicate specified type parent repeated template break", "d": "7/2015"}, {"body": "component used meta info available inside component automatically nt explicitly pass parent check parent inline repeat wrapper checking kinda dirty enough use case definitely improved later", "d": "7/2015"}, {"body": "ca nt tell wrong based description helpful provide sort reproduction issue", "d": "7/2015"}, {"body": "found correct place post", "d": "7/2015"}, {"body": "would every event could events vue nt even know wrong current method sat jul dmitry krokhin notifications githubcom wrote form use directive manually prevent default action new vue el asis methods addtask function e epreventdefault work idea made approach simpler like new vue el tobe methods addtask function work reply email directly view github", "d": "7/2015"}, {"body": "ca nt add labels issues looks like repository owner please note enhancement current method ok match dry principle opinion form processing big part web applications sure feature included core register issue discuss behaviour", "d": "7/2015"}, {"body": "sounds like overkill add core directive simple task think userland concern aka make custom directive feel free open new issue discuss vuejsdiscussion", "d": "7/2015"}, {"body": "although present source code automatically converted plain strings build tools distributed file nt contain running error somewhere", "d": "7/2015"}, {"body": "yes building application webpack", "d": "7/2015"}, {"body": "uipoet webpack auto shims detects work without special setup running webpack example fine experiencing errors provide repro", "d": "7/2015"}, {"body": "testing repo determined issue configuration webpack polyfills thank time", "d": "7/2015"}, {"body": "could try using instead", "d": "7/2015"}, {"body": "excellent got working using syntax throughout many thanks fast reply", "d": "7/2015"}, {"body": "\u81ea\u5df1\u9009\u62e9\u7b2c\u4e09\u65b9\u5e93 momentjs numeraljs \u505a\u6210\u81ea\u5b9a\u4e49 filter", "d": "7/2015"}, {"body": "pipe another custom filter strips cents also please ask questions like vuejsdiscussion gitter channel", "d": "7/2015"}, {"body": "\u7c7b\u4f3c\u7684\u63d2\u4ef6\u901a\u5e38\u5efa\u8bae\u7528\u4e00\u4e2a custom directive", "d": "7/2015"}, {"body": "thanks known issue fixed", "d": "7/2015"}, {"body": "sure related set component default values nt work unless understanding incorrectly", "d": "7/2015"}, {"body": "nouveller separate issue also fixed", "d": "7/2015"}, {"body": "ah brilliant using work around time look forward fix new release thanks", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "could bit confusing global config option change option default set", "d": "7/2015"}, {"body": "want point indicating current design ridiculous polite way open feature request", "d": "7/2015"}, {"body": "thinking something like value optional specified model contain whole object talked discussion", "d": "7/2015"}, {"body": "filter approach awesome using computed properties way useful", "d": "7/2015"}, {"body": "suggested discussion thread write reusable custom filter transform array reason dedicated attributes conversion many possible cases attribute syntax wo nt suffice eg source data could object select needs optgroups textvalue need formatted etc custom filter gives full capability sort transform want attribute syntax extra syntax one particular use case", "d": "7/2015"}, {"body": "ridiculous design people often forget get free spent numerous hours thank bringing us lightweight amp smart alternative angular", "d": "7/2015"}, {"body": "filter approach", "d": "7/2015"}, {"body": "sorry born frustration nt malice behind definitely appreciate fantastic vuejs would great filter approach could added documentation", "d": "7/2015"}, {"body": "worries added todos docs", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u7ec4\u4ef6\u91cc\u66b4\u9732\u4e00\u4e2a user", "d": "7/2015"}, {"body": "alexorz \u8bd5\u8bd5\u8fd9\u4e2afiddle", "d": "7/2015"}, {"body": "alexorz \u867d\u7136\u8001\u5b9e\u8bf4\u6211\u7684\u82f1\u8bed\u4e5f\u4e0d\u600e\u4e48\u6837", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "vm \u6b63\u786e\u7684\u7528\u6cd5\u5e94\u8be5\u662f\u8fd9\u6837\u7684", "d": "7/2015"}, {"body": "log items items \u7684get \u6240\u4ee5\u6211\u5c1d\u8bd5\u7740\u76f4\u63a5vm log items", "d": "7/2015"}, {"body": "\u4f60\u5e94\u8be5\u7528", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u9519\u8bef\u8c03\u7528\u6808\u603b\u6709\u5427 thu jul pm \u6728\u98ce notifications githubcom wrote typeerror redefine property document typeerror redefine property reload appendto reply email directly view github", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u770b\u8d77\u6765\u4f60\u662f\u5728 ready hook \u91cc\u9762\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\u5bfc\u81f4\u4f60\u7684 vm \u8bd5\u56fe\u53bb observe \u67d0\u539f\u751f\u5bf9\u8c61\u4e86", "d": "7/2015"}, {"body": "\u5199\u9053 \u770b\u8d77\u6765\u4f60\u662f\u5728 ready hook \u91cc\u9762\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\u5bfc\u81f4\u4f60\u7684 vm \u8bd5\u56fe\u53bb observe \u67d0\u539f\u751f\u5bf9\u8c61\u4e86 reply email directly view github", "d": "7/2015"}, {"body": "\u6bd4\u5982\u5982\u679c\u4f60\u5728 \u91cc\u9762\u6709\u4e00\u4e2a vue \u5c31\u4f1a\u53bb\u89c6\u56fe\u89c2\u5bdf document vm \u7684 data", "d": "7/2015"}, {"body": "\u5199\u9053 \u6bd4\u5982\u5982\u679c\u4f60\u5728 data \u91cc\u9762\u6709\u4e00\u4e2a vma vue \u5c31\u4f1a\u53bb\u89c6\u56fe\u89c2\u5bdf document objectdefineproperty vm \u7684 data reply email directly view github", "d": "7/2015"}, {"body": "\u4f60", "d": "7/2015"}, {"body": "closing inactivity", "d": "7/2015"}, {"body": "occurs also means dom much bigger needs performance issue array objects passed lot components creates enormously long attribute value number places dom", "d": "7/2015"}, {"body": "version vue using", "d": "7/2015"}, {"body": "happening least month", "d": "7/2015"}, {"body": "weird props directives removed compilation never seen maybe something linux chrome", "d": "7/2015"}, {"body": "maybe give pointer debug like removal happens code read code clean fri jul evan notifications githubcom wrote weird props directives removed compilation never seen maybe something linux chrome reply email directly view github", "d": "7/2015"}, {"body": "removed", "d": "7/2015"}, {"body": "apparently happens put attribute component nt include attribute component props list see happens assume unused attributes know fix guess good happen since acts warning attribute unused", "d": "7/2015"}, {"body": "give example would helpful", "d": "7/2015"}, {"body": "let say imagine building clone phpmyadmin receives data describe table statement builds row editor form data binding expressions inherently dynamic case know field names running sql describe table", "d": "7/2015"}, {"body": "looking", "d": "7/2015"}, {"body": "hope see", "d": "7/2015"}, {"body": "still nt fully understand enables current syntax achieve maybe code samples", "d": "7/2015"}, {"body": "pseudocode related phpmyadmin clone described", "d": "7/2015"}, {"body": "already", "d": "7/2015"}, {"body": "wow", "d": "7/2015"}, {"body": "evan put js fiddle showing todoish example", "d": "7/2015"}, {"body": "great example showing one example dynamic usage logic might complex kind business application", "d": "7/2015"}, {"body": "clear idea allowing interpolations inside directive expressions right mustaches means evaluated result expected string used string inserted dom id lookup evaluating mustaches expressions evaluated makes two layers abstraction end making templates confusing", "d": "7/2015"}, {"body": "\u4e0d\u8981\u628a\u590d\u6742\u5bf9\u8c61\u5f53 \u5e94\u5f53\u662f\u53ef\u4ee5\u65e0\u7f1d\u8f6c\u5316\u4e3a json \u4e0d\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6570\u636e\u7ed1\u5b9a\u7684\u4e1c\u897f\u4e0d\u8981\u653e\u5728 data", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u5728\u7ec4\u4ef6\u91cc \u628a\u767e\u5ea6\u5730\u56fe\u5b9e\u4f8b\u5316\u597d\u540e \u53ef\u4ee5\u52a8\u6001\u628a\u8fd9\u4e2a\u6dfb\u52a0\u5230\u7236\u7ea7\u7684data\u91cc parent add bmap map \u7136\u540e\u7236\u7ea7\u5c31\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528\u767e\u5ea6api\u4e86 vm databmapcenterandzoom new bmappoint", "d": "7/2015"}, {"body": "\u53ea\u4e0d\u8fc7\u8fd9\u6837\u8c03\u7528\u7684\u8bdd \u6bcf\u6b21\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a undefined", "d": "7/2015"}, {"body": "\u4e0d\u8981\u628a\u590d\u6742\u5bf9\u8c61\u653e\u8fdb map \u4e0d\u9700\u8981\u653e\u8fdb vue", "d": "7/2015"}, {"body": "\u4f46\u662f\u6211\u662f\u8981\u505a\u4e00\u4e2a\u767e\u5ea6\u5730\u56fe\u7684\u7ec4\u4ef6component \u5728\u7ec4\u4ef6\u91cc add bmap map \u52a0\u4e0b\u5212\u7ebf\u662f\u4e3a\u4e86\u4e0d\u91cd\u5199\u8fd9\u4e2a\u5bf9\u8c61 \u5916\u90e8\u8c03\u7528\u7684\u65f6\u5019 \u5728\u7ec4\u4ef6\u4e0a\u52a0\u4e2a vref bdmap vm bdmap databmapcenterandzoom new bmappoint", "d": "7/2015"}, {"body": "good idea", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "recommended use option parameter element use computed properties achieve desired behaviour", "d": "7/2015"}, {"body": "think really looking nt want use optgroup want prepend item identifier debug mode help troubleshoot looking group items together debug mode debug mode", "d": "7/2015"}, {"body": "doc says need dynamically render list options element recommended use attribute together vmodel need specify attribute specify array options list render make computed property react value changing use work around issue hope helps", "d": "7/2015"}, {"body": "right works workaround thanks seems like bit overkill wa nt accomplish still wonder vif vshow nt work inside vrepeat thanks help", "d": "7/2015"}, {"body": "probably spans allowed inside option elements wed jul romain l\u00e9ger notifications githubcom wrote right works workaround thanks seems like bit overkill wa nt accomplish still wonder vif vshow nt work inside vrepeat thanks help reply email directly view github", "d": "7/2015"}, {"body": "confirmed put elements inside get crunched plain text", "d": "7/2015"}, {"body": "oups nt thought thanks", "d": "7/2015"}, {"body": "\u9700\u8981\u663e\u793a\u7684\u589e\u52a0inherit vuecomponent mycomponent inherit true template hello name", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "butsalt \u591a\u8c22\u8be6\u7ec6\u7684\u56de\u7b54", "d": "7/2015"}, {"body": "according releases since think change missing doc post issues related documentation repo", "d": "7/2015"}, {"body": "got thanks reply", "d": "7/2015"}, {"body": "\u8bf7\u4ed4\u7ec6\u770b", "d": "7/2015"}, {"body": "need vue could nt internal module plugin", "d": "7/2015"}, {"body": "yes wink internal module plugin providing user custom assets api us plugin developer plugin user well think gets advantage consistency", "d": "7/2015"}, {"body": "nt think part vue core vue singleton could potentially lead namespace clashes feels natural expose type assets plugin module maybe add conventions plugin authoring guide", "d": "7/2015"}, {"body": "okay smiley try custom assets management pluginside well come think right", "d": "7/2015"}, {"body": "expose assets plugin similar vue idea js var vv require vuevalidator var min vvvalidator min users register custom validators vvvalidator myvalidator function value", "d": "7/2015"}, {"body": "could use external event bus", "d": "7/2015"}, {"body": "speaking external event buses recommend evan nt ever used one advice appreciated", "d": "7/2015"}, {"body": "azamatsharapov node builtin eventemitter probably easiest one webpack browserify mock believe also use", "d": "7/2015"}, {"body": "thank", "d": "7/2015"}, {"body": "ca nt piece dom compiled ca nt compile proper way make component include form template create append dom need new one destroy old one needed remove time start create new instance still feels wrong able reset state vue instance keep using form", "d": "7/2015"}, {"body": "oh please post questions vuejsdiscussion instead repo", "d": "7/2015"}, {"body": "thanks replying reason want avoid huge vue object created different vue objects different states", "d": "7/2015"}, {"body": "maybe use dynamic components switch depending state", "d": "7/2015"}, {"body": "\u8fd9\u4e0d\u53eb\u53cc\u5411\u7ed1\u5b9a \u4e0d\u9700\u8981\u76d1\u542c\u6570\u636e\u53d8\u5316\u4e3a\u5565\u8981\u7528 vue \u63d0\u95ee\u8bf7\u5230 bug report \u548c feature request", "d": "7/2015"}, {"body": "somewhat expected actually creates new copy content every time toggled ux perspective probably better instantly remove stale instances condition changed", "d": "7/2015"}, {"body": "got ta thanks", "d": "7/2015"}, {"body": "array mutated reference change different completely replace array new one option internal meant public use maybe underscore", "d": "7/2015"}, {"body": "see need track length array moment using expression worked thanks", "d": "7/2015"}, {"body": "brings relational database models feeling stealing idea smile supporting additional arguments like would make flexible instead nt get thing prop method like", "d": "7/2015"}, {"body": "azamatsharapov property defining variablesvalues basically like old passed values component property could named differently could also work property name even multiple assignments work like also would default argument nt set argument sure put argument like also work", "d": "7/2015"}, {"body": "would nice create computed variables ca nt method mon jul steffan notifications githubcom wrote using vrepeat directive sometimes happens related object needed depending current value example iterating array items gettype method used get related type object exists name gettype value name would nice create computed variables vrepeat like name typename since type depends item object value omitted automatically passed gettype value method name typename created directive seems like useful addition vrepeat directive reply email directly view github", "d": "7/2015"}, {"body": "sure add directives syntax sugar like different ways deal example computed array use components custom directive described opinion fine leave userland thing", "d": "7/2015"}, {"body": "\u56e0\u4e3a\u4f20\u8fdb\u6765\u7684\u65f6\u5019 \u5df2\u7ecf\u88ab\u7f16\u8bd1\u8fc7\u4e86\u554a", "d": "7/2015"}, {"body": "\u5199\u9053 \u56e0\u4e3a\u4f20\u8fdb\u6765\u7684\u65f6\u5019 text \u5df2\u7ecf\u88ab\u7f16\u8bd1\u8fc7\u4e86\u554a reply email directly view github", "d": "7/2015"}, {"body": "\u5199\u9053 \u56e0\u4e3a\u4f20\u8fdb\u6765\u7684\u65f6\u5019 text \u5df2\u7ecf\u88ab\u7f16\u8bd1\u8fc7\u4e86\u554a reply email directly view github", "d": "7/2015"}, {"body": "priority \u7684\u9ed8\u8ba4\u4e3a \u548c repeat", "d": "7/2015"}, {"body": "\u5982\u679c\u4f60\u60f3\u8981\u5b8c\u5168\u5bf9\u7528\u6237\u9690\u85cf vue \u7684\u5b58\u5728\u90a3\u6211\u4e5f\u6ca1\u529e\u6cd5\u4e86", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "\u5199\u9053 closed reply email directly view github", "d": "7/2015"}, {"body": "please provide code produced issue", "d": "7/2015"}, {"body": "closing inactivity", "d": "7/2015"}, {"body": "simpler version fiddle without component opacity fade", "d": "7/2015"}, {"body": "repeated array contains primitive values automatically mode impossible accurately track position duplicate primitives value want accurateposition transitions always use objects repeat array", "d": "7/2015"}, {"body": "thanks evan makes sense updated fiddle behave expected methods still animate", "d": "7/2015"}, {"body": "animate items element enteredleft dom want smooth moves reorders better absoluteposition items animate csstransform based", "d": "7/2015"}, {"body": "makes sense technical perspective seems counterintuitive point view user thanks explanation able develop decent workaround btw love library whole", "d": "7/2015"}, {"body": "repo questions vuejsdiscussion repo example outside ed need move sure wrapping elements every step iteration element like model", "d": "7/2015"}, {"body": "suggested please nt post questions repo", "d": "7/2015"}, {"body": "exactly wanting happen list checkboxes checked state could hold languages object rather string html new vue data languages name english checked true name japanese checked false name chinese checked true use filtermap retrieve names selected languages jsfiddle demonstrating", "d": "7/2015"}, {"body": "guess use case use check boxes similar manner use select ability select multiple selections sort check apply scenario checkables come array possibilities jul notifications githubcom wrote exactly wanting happen list checkboxes checked state could hold languages object rather string new vue data languages name english checked true name japanese checked false name chinese checked true use filtermap retrieve names selected languages jsfiddle demonstrating reply email directly view github", "d": "7/2015"}, {"body": "old example please open questions like vuejsdiscussion instead core repo", "d": "7/2015"}, {"body": "vue templates need valid html self closing tags xhtml syntax outdated never use see", "d": "7/2015"}, {"body": "\u4f60\u7684 initvm \u662f\u600e\u4e48\u5199\u7684\u4e3a\u4ec0\u4e48\u4e0d\u653e\u4e0a\u6765 results \u5efa\u8bae\u4ed4\u7ec6\u770b\u8fc7\u6587\u6863\u540e\u518d\u5f00 vuejsdiscussion", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "would awesome configurable via global option like js props", "d": "7/2015"}, {"body": "youngsteveo sure config necessary seems unlikely conflict party libs even use nondataprefixed syntax avoid", "d": "7/2015"}, {"body": "please make fiddle better explain problem best practice always using plain objects vue data data data behavior behavior belongs viewmodel", "d": "7/2015"}, {"body": "closing inactivity", "d": "7/2015"}, {"body": "return default value prop inside function well warning seems necessary case described solution would little verbose better", "d": "7/2015"}, {"body": "might good idea sometime really need function default value like format might confusing", "d": "7/2015"}, {"body": "unless use function factory except", "d": "7/2015"}, {"body": "quite obvious nt need make copy functions", "d": "7/2015"}, {"body": "great thanks advise", "d": "7/2015"}, {"body": "recommended compose vue templates using dynamic html strings therefore triple curlies treat content static html nt compile use partials instead", "d": "7/2015"}, {"body": "created pr address componentsdirectivesetc", "d": "7/2015"}, {"body": "different props props primarily used inside javascript expressions dash case awkward hand use component ids tag selectors nt see benefits using camelcase", "d": "7/2015"}, {"body": "valid reason line deduction might require better grasp framework used junior dev would would like able tell either always camelcase javascript always dashcase html always camelcase javascript except interfacing html new props naming convention kind throws got pr today fella given started naming get around remember camel dash seenoevil", "d": "7/2015"}, {"body": "directives elementdirectives components ones demand dashcase appear html tag names attributes never appear methods expressions props thing appear places hence syntax allowed nt like idea creating alternative syntax sake easier remember especially confusion came understanding framework works", "d": "7/2015"}, {"body": "sake consistency would put side effect making easier remember mainly people nt yet familiar framework would nt see reason apprehensive sure know unreasonably critical developers smile reasoning inconsistency solid requires one reason perhaps bit familiarityexperience using well else could know sure things never appear methods expressions think might worth change would lessen confusion nt yet well understand framework works understand would undesirable bog codebase api", "d": "7/2015"}, {"body": "reopening rethinking suggestion starts make sense addition remember past someone raised suggestion another reason object shorthands js import componenta componentsa import componentb componentsb export default components componenta componentb", "d": "7/2015"}, {"body": "would really nice camelcase could used everywhere code hyphens used html templates could even enforced fri jul pm evan notifications githubcom wrote rethinking suggestion starts make sense addition remember past someone raised suggestion another reason object shorthands import componenta componentsaimport componentb componentsb export default components componenta componentb reply email directly view github", "d": "7/2015"}, {"body": "cool pr relevant update", "d": "7/2015"}, {"body": "youngsteveo yeah would merge decide make change nice rebase latest though", "d": "7/2015"}, {"body": "rebased note tests currently broken latest dev new unit test still passing", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "closing think problem changed switched component including children using instead broadcast event getting children one needs", "d": "7/2015"}, {"body": "\u5192\u6ce1\u7684\u4e8b\u4ef6\u8981\u7528 dispatch emit", "d": "7/2015"}, {"body": "\u6211\u628aemit\u6539\u6210dispatch\u4e5f\u4e0d\u884c", "d": "7/2015"}, {"body": "\u7236\u7ec4\u4ef6\u7684 ready events \u9009\u9879", "d": "7/2015"}, {"body": "\u89e6\u53d1\u4f20\u9012\u7684 data \u6570\u636e \u7ed9\u7236\u7ea7\u7684", "d": "7/2015"}, {"body": "\u8c22\u8c22 \u641e\u5b9a\u4e86 require vueresource", "d": "7/2015"}, {"body": "docs could use improvement property debounce dom events debounces model updates since already using think terms reacting model changes rather reacting dom events use watcher watch change bound value please use vuejsdiscussion questions repo issue tracker bugs features", "d": "7/2015"}, {"body": "basically happens observed problems use code b observed fine next code work expected", "d": "7/2015"}, {"body": "design two reasons data objects need persistable inspectable via also ignores prototype properties observe prototype property adding property getter object shadows prototype property longer dynamic prototype chain lookups prototype mutated change wo nt reflected observed object want property observed make instance property instead prototype property", "d": "7/2015"}, {"body": "hmm okay thought little bit looks like current design optimal make model methods prototype properties ignored vue use watched instance properties", "d": "7/2015"}, {"body": "whole idea props pass data attributes setting value", "d": "7/2015"}, {"body": "option setting default value props configuration", "d": "7/2015"}, {"body": "thelinuxlich take next way props attributes data default data data fetched external places proxied vue instance design", "d": "7/2015"}, {"body": "ok one explained yet purpose default value props", "d": "7/2015"}, {"body": "thelinuxlich user source luke default value props literally default value example next code later use component instance name tom use name bob please note values mapped property vue instance would point also props always overwrite data keys use source luke", "d": "7/2015"}, {"body": "described desired behavior cat missing name attribute default tom happening", "d": "7/2015"}, {"body": "working far tell provide example nt work", "d": "7/2015"}, {"body": "please make sure provide repro", "d": "7/2015"}, {"body": "encountered problem narrowed props data ca nt used together data wins think usable together", "d": "7/2015"}, {"body": "paulpflug upgrade latest version please work together nevermind fixed indeed bug", "d": "7/2015"}, {"body": "fixed via", "d": "7/2015"}, {"body": "nt", "d": "7/2015"}, {"body": "paulpflug latest dev", "d": "7/2015"}, {"body": "known issue fixed dev branch", "d": "7/2015"}, {"body": "ok thanks sorry nt find", "d": "7/2015"}, {"body": "use vcloak", "d": "7/2015"}, {"body": "problem due nt update file", "d": "7/2015"}, {"body": "please provide debuggable reproduction using jsfiddle similar service", "d": "7/2015"}, {"body": "sorry delay need add horas item datas list item", "d": "7/2015"}, {"body": "looks like using quite outofdate version vue please consider upgrade latest version", "d": "7/2015"}, {"body": "upgrade vuejs version vevents crash doc find vevents see vevents deprecated sorry", "d": "7/2015"}, {"body": "last functional version changes vevents crash munch clean", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "thank help", "d": "7/2015"}, {"body": "assigning component destroyed expect mon jul pm fenix notifications githubcom wrote minimal example var foo new vue el foo data bar ready function var destroy settimeout function mebar throws uncaught typeerror set property bar null often occurs switching components quickly wrapping code trycatch block good idea eat errors add complexity reply email directly view github", "d": "7/2015"}, {"body": "expect error suppressed inside vue internal least production environment vueconfigdebug false", "d": "7/2015"}, {"body": "basically javascript error nt believe vue suppress think would best check every http response component still alive", "d": "7/2015"}, {"body": "even instance destroyed still valid object assign whatever else bound props sideeffect objectdefineproperty evan said time even need think must always take care every ajax async callbacks", "d": "7/2015"}, {"body": "throwing error simply accessing property destroyed instance seems obtrusive preserved data reference destroyed instances however note mutate data already destroyed instance possible cause side effects instances happen observe object still recommended check instance still alive inside async callbacks", "d": "7/2015"}, {"body": "quickly thanks think newly introduced side effect mixed blessing sometimes expected", "d": "7/2015"}, {"body": "questions posted vuejsdiscussion function used create initialdefault state component called merging external data use lifecycle hooks access fully resolved data", "d": "7/2015"}, {"body": "looks like usage error part new dev add components removing instances string values resolved problem", "d": "7/2015"}, {"body": "think changing whole object watcher catches changes init property recommended wo nt happen yeah sometimes need fly", "d": "7/2015"}, {"body": "yes sometimes adding dynamic components rely main object say behaviour new introduced changelog reference assume bug", "d": "7/2015"}, {"body": "actually new ing rootlevel property always trigger full digest watchers watcher watching nonexistent property would caught dependencies initialization way notify unless full digest also strongly recommend ing root level properties fly", "d": "7/2015"}, {"body": "useful info evan nt know probably added somewhere docs", "d": "7/2015"}, {"body": "thanks looking evan maybe getting confused watching nonexisting property eg start watching changes myvalue add another root level value object become would expect watch exclusively triggered myvalue data changed seems wrong", "d": "7/2015"}, {"body": "yeah adding root level property triggers reevaluation watchers component normal watchers previous value new value nt change callback triggered deep watchers would trigger even value could object mutated maybe case digest could shallow ie calls callback value changed", "d": "7/2015"}, {"body": "shallow option sounds good deeper level watchers nt matter object mutated matter watched value changed nt mind default behaviour optional would keep always code", "d": "7/2015"}, {"body": "thanks evan", "d": "7/2015"}, {"body": "hmm seems actually happens even without using vue even consecutive javascript command asynchronousness issue unrelated vuejs", "d": "7/2015"}, {"body": "want probably directive vshow reworked fiddle allow animations vue way", "d": "7/2015"}, {"body": "issue using jquery sample new value nt get alerted change however add lazy option get alerted probable happens cause jquery plugin triggers change event input event", "d": "7/2015"}, {"body": "jefferey way using typeahead vue", "d": "7/2015"}, {"body": "chalkin questions like posted vuejsdiscussion also please make sure provide debuggable example using jsfiddle codepen jsbin", "d": "7/2015"}, {"body": "see release notes trascluded component child host component work", "d": "7/2015"}, {"body": "oevgeny actually read release notes nt help much note together directives transcluded components still compiled host parent scope host parent scope host parent scope unless misunderstanding content compiled scope parent example content compiled root scope parent", "d": "7/2015"}, {"body": "ah yes got", "d": "7/2015"}, {"body": "triggers listeners component hierarchy level achieve easiest way would use callback prop hook parent informed trigger within parent approach sibling components stay decoupled", "d": "7/2015"}, {"body": "sends event component descendants sends parent chain direct method notify sibling components nirazul suggested dance use standalone event emitter global event bus instead relying component structure event passing also please post questions like vuejsdiscussion issues directly related new features bugs", "d": "7/2015"}, {"body": "caused browsers default behavior whenever element appended new parent browser resets seems firefox browser persists value properly ideally browsers persist value guess ca nt change add ugly patches vue", "d": "7/2015"}, {"body": "set option want keep wrapping component tag also probably want set custom tag custom html tags default", "d": "7/2015"}, {"body": "awesome nt catch documentation nt default way make elements behave like", "d": "7/2015"}, {"body": "replace true behavior intuitive think terms components especially using single file components root element related styles contained component write template gets rendered set change default", "d": "7/2015"}, {"body": "using single file component maybe bit biased towards worked lot real web components say write template gets rendered nt true using child component explicitly creating tag dom wo nt get rendered replaced content always trade nevertheless right nt really way style whole element within single file component one would need something like css rule poylmer", "d": "7/2015"}, {"body": "nt use calls ready hook unless reason aware likely think problem", "d": "7/2015"}, {"body": "using test case", "d": "7/2015"}, {"body": "awesome fast", "d": "7/2015"}, {"body": "also along lines possible strict mode instead private assets available vue instance children descendants available vue instance children descendants forcing children state asset dependencies rather getting parent seems equal better decoupling", "d": "7/2015"}, {"body": "array syntax would also make obsolete current project using vue components declared root app people keep sticking things convenience strict mode would lovely", "d": "7/2015"}, {"body": "supported via note assets use field strict mode defaults false", "d": "7/2015"}, {"body": "great stuff", "d": "7/2015"}, {"body": "specify selector component registered array nt mentioned release notes", "d": "7/2015"}, {"body": "cheapsteak use field added release note", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "core core nt need vue core util design internal exposed advanced users plugin authors may find useful need specific helper either bring use actual generalpurpose util library like lodash", "d": "7/2015"}, {"body": "provide repro may transpiler using", "d": "7/2015"}, {"body": "wanted avoid making repo public made collaborator helps using gulp babel code question watch run", "d": "7/2015"}, {"body": "interestingly causing behavior mounting app instance string template option defaults contents template replaces tag causes chromespecific runtime error reason blocks rerendering user interaction happens code works properly firefox safari fixed simply giving app option added warning particular case", "d": "7/2015"}, {"body": "also fiy code works chrome canary bug present current stable version chrome", "d": "7/2015"}, {"body": "nice find thanks taking time find", "d": "7/2015"}, {"body": "also would match variable names used right mismatch makes code readability hard think html snakecase propa code camelcase propa consistency issue", "d": "7/2015"}, {"body": "html attributes caseinsensitive way differentiate vs passing prop template", "d": "7/2015"}, {"body": "html attributes caseinsensitive know weird nt like ugliness propa valuepropapropa even html agree nt change even though wish worked way making option would nice done current project maybe issue pr thu jul evan notifications githubcom wrote html attributes caseinsensitive way differentiate propa vs propa passing prop template reply email directly view github", "d": "7/2015"}, {"body": "gave another thought maybe implemented backwards compatibility vue could detect camel case props look hyphenated attributes html", "d": "7/2015"}, {"body": "converting camelcase props hyphenated attributes pretty standardaccepted convention", "d": "7/2015"}, {"body": "quick thanks fri jul evan notifications githubcom wrote closed via reply email directly view github", "d": "7/2015"}, {"body": "expected behavior add vue assumes async operations emitting event otherwise point using perform ajax request result always comes back asynchronously emitting event synchronously effect", "d": "7/2015"}, {"body": "hm know thanks lot", "d": "7/2015"}, {"body": "\u5f00 issue \u524d\u8bf7\u9605\u8bfb", "d": "7/2015"}, {"body": "please move vuejsdiscussion leave main repo featurebug related issues sounds like need array data structure representing steps operations would simply pushing removing array", "d": "7/2015"}, {"body": "sure mean exactly like", "d": "7/2015"}, {"body": "let move questions like vuejsdiscussion thanks", "d": "7/2015"}, {"body": "different", "d": "7/2015"}, {"body": "javascript assume comp define vendor lib vuecomponent comp template name data function return name hal following block code ca nt really work try change dataname comp app global component settings hope vuecomponent comp defaults like vuecomponent comp optionsmixins data function return name halhal new vue el wrap", "d": "7/2015"}, {"body": "extending allows one base component many extended sub classes different use cases mutate original lose flexibility together hand nt see benefits mutating base class except saving keystrokes anyway really want", "d": "7/2015"}, {"body": "\u4f7f\u7528vuecomponent comp optionsdata javascript var getdata vuecomponent comp optionsdata vuecomponent comp optionsdata function var data getdatacall var name halhal var key data key key return data", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "ok thank", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "correct intended behavior read", "d": "7/2015"}, {"body": "ah ok thanks anyone looking future simple solution add component tag", "d": "7/2015"}, {"body": "arrays use instead", "d": "7/2015"}, {"body": "hi tried thisroster set thisnewmemberid thisnewmemberrole still problem id creates empties array adds", "d": "7/2015"}, {"body": "hi regarding could nt syntax force application filter object like see", "d": "7/2015"}, {"body": "well tried nested nextticks work back", "d": "7/2015"}, {"body": "vote option b reason liked syntax easily see string escaped scanning without wasting time checking triple braces", "d": "7/2015"}, {"body": "agree youngsteveo grand scheme things appears spaces vs tabs argument fairly low importance unless missing something", "d": "7/2015"}, {"body": "michaeljcalkins mostly situations people writing direct html vuejs templates inside another templating system also happens use mustache tags", "d": "7/2015"}, {"body": "krisak yjeroen markhahn one work", "d": "7/2015"}, {"body": "one work would great thu jul chen notifications githubcom wrote krisak yjeroen markhahn one work reply email directly view github", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "looks great smile", "d": "7/2015"}, {"body": "thanks kikyous", "d": "7/2015"}, {"body": "kikyous thanks lot also use devdocs", "d": "7/2015"}, {"body": "thanks mucho fri jul azamat notifications githubcom wrote kikyous thanks lot also use devdocs reply email directly view github", "d": "7/2015"}, {"body": "looking would mind adding license file clear applies thanks", "d": "7/2015"}, {"body": "thibaut added", "d": "7/2015"}, {"body": "thanks docs", "d": "7/2015"}, {"body": "thibaut cheers", "d": "7/2015"}, {"body": "know old request encountered need would super nice rather", "d": "7/2015"}, {"body": "could easily something like could even make mixin use everywhere want", "d": "7/2015"}, {"body": "nirazul solution good maybe leave context binding calling code useful mixin js methods baywatch function props watcher var iterator function prop watch prop watcher propsforeach iterator thisbaywatch b c thisdosomethingbind", "d": "7/2015"}, {"body": "yes viable solution", "d": "7/2015"}, {"body": "nice solution epic example using custom directives however onselect probably replaced onclose use onselect date value updated click date type date manually tab input field javascript vuedirective datepicker bind function var vm thisvm var key thisexpression thisel datepicker dateformat ddmmyy onclose function date datematch vm set key date else vm set key consolelog invalid date update function val thisel datepicker setdate val var v new vue el main data dt methods checkdate function consolelog thisdt", "d": "7/2015"}, {"body": "another truly epic thing date picker directive encapsulated inside component like javascript vuecomponent customcomponent got ta love vuejs smile", "d": "7/2015"}, {"body": "run problem well node undefined put undefined check node toarray nodechildnodes get working", "d": "7/2015"}, {"body": "running issue nested data contains attributes beginning preventing observation properties beginning makes lot sense view models applies nested data could come number different rest apis starts bit restrictive would possible relax restriction existing rule applies view models simple nested data properties beginning ob property ignored", "d": "7/2015"}, {"body": "davidkhess skipped observation proxying still access templates", "d": "7/2015"}, {"body": "yes skipped observation ca nt bind expect ui update mutated instance let say get resource via rest api store result let also assume rest api response happens contain something like property list topics bind allows multiple selection render page bullet list change value using bullet list never update seems bit landmine people working apis happen use property names rest resources seems reasonable rule vue objects less reasonable apply nested data naming developer may control", "d": "7/2015"}, {"body": "davidkhess fair enough sounds like good idea observe skip proxying root level", "d": "7/2015"}, {"body": "sounds like great solution", "d": "7/2015"}, {"body": "run problem binding images come couchdb stored attachements couchdb would great could observe say objektattachments right copy extra dataattachments property thanks lot change behaviour", "d": "7/2015"}, {"body": "hi follow think experiencing issue ios safari latest safari mac jsbin since seems still issue would nt useful place warn docs apple fixes bug", "d": "7/2015"}, {"body": "dwightjack jsbin seems work fine safari", "d": "7/2015"}, {"body": "right looks like problem related something else sorry", "d": "7/2015"}, {"body": "anyone interested typescript support vuejs get typescript declaration file easiest way install npm module tsd create directory typings well tsddts file reference javascript file top block javascript editors typescript capabilities understand vue code works especially well github atom browser typescript plugin well microsoft new crossplatform code editor visual studio code typescript declaration files enable editors understand javascript parse enable code completion hits intellisense creating typescrpt declaration file difficult done several basically collection interfaces define parameters return values object functions library current version vue definitelytyped vesion", "d": "7/2015"}, {"body": "go bit reacty fluxy classes flatextendible need remove data stuff decorators really powerful things use heavily javascript import vue elementdirectives components listen watch vue elementdirectives evilicon components player export class app extends vue really think static properties static inherit true static props test", "d": "7/2015"}, {"body": "jabher interesting ideas decorator made also experimental feel free make version", "d": "7/2015"}, {"body": "think bit fastndirty though working good also needs integration far wrapper slow loading due nothing compiled babel compiling everything browser fast attempt example code javascript const components vuecomponent class testcomponent extends vuecomponent static template component components testcomponent class app extends vuecomponent static template message message new app el main ideas async data template generation deep integration try implement", "d": "7/2015"}, {"body": "dunno going help anyone case elements array nt id field", "d": "7/2015"}, {"body": "anyone checked vue ca nt get work", "d": "7/2015"}, {"body": "remoe checked work yeah though maybe fixed easily", "d": "7/2015"}, {"body": "remoe fullfs error stack trace look like", "d": "7/2015"}, {"body": "ok tested windows newer version vue one need change others nt run mounting need investigate", "d": "7/2015"}, {"body": "changing code throws following stack trace iojs jsdom vue", "d": "7/2015"}, {"body": "turns subtle problem checking jsdom element returns true refactored little bit rely check latest snippet working", "d": "7/2015"}, {"body": "confirmed thanks", "d": "7/2015"}, {"body": "would also love see computed properties could detail involved complexity please feels unatural nt supported support would allow template like instead loses information context property right mainly readability issue nt believe readability overlooked", "d": "7/2015"}, {"body": "might read better template nt make sense javascript points actual data way make return computed without polluting original data object really want template read nicely something like", "d": "7/2015"}, {"body": "makes sense thanks answer", "d": "7/2015"}, {"body": "hi kind stuck someone hep img vrepeat images filterby profile vattr src src computed src function return img thisimagepath thisimagepath seems return undefined much appreciated thanks advanced", "d": "7/2015"}, {"body": "new vue attempting render json object returned php using jsonencode function simple way loading data list", "d": "7/2015"}, {"body": "participants closed people nt spam questions think best ask questions like vuejsdiscussion gitter channel repo question vuejsvueresource plugin ajax calls use fetch json server", "d": "7/2015"}, {"body": "thank", "d": "7/2015"}, {"body": "saw angular docs thinks implementation model methods property interpolation quite pleasing laughed seeing angular dumping gibberishes become something simillar vue thoughts implementing syntax", "d": "7/2015"}, {"body": "pandahisham personally nt really like angular binding syntax nt struck intuitive sure provide meaningful advantage traditional directive syntax least enough warrant breaking change vue", "d": "7/2015"}, {"body": "thanks happy current syntax", "d": "7/2015"}, {"body": "vue merged vuejs organization hits little confusing", "d": "7/2015"}, {"body": "fweinb thinking bunch logistics sorted moving sounds like good plan", "d": "7/2015"}, {"title": "backboneajax wraperror eats jquery textstatus errorthrown arguments", "body": "please see normal function signature jquery ajax callback following second params utilized backbone callback result missing error details create silent errors responses enter error callback due invalid json responses still returned status ok since backbone default implementation proxies jquery think good assumption make users would interest arguments maybe would good idea pass along could even tacked onto response object likely many devs issues debugging ajax failures like created catchalls workaround think allowing easy access two arguments could allow developers perform explicit error handling somewhat relevant discussions", "num": "3739", "d": "7/2015"}, {"title": "collection triggers sync model fetched", "body": "im sure intended got issues app due collections sync event expect collection trigger sync calling fetch method collection nt expect collection sync model collection fetched problem easier explained code javascript var acollection backbonecollectionextend expect sync event collection acollectionfetch var amodel backbonemodelextend acollectionadd amodel point model sync triggered perfectly fine amodelfetch collection sync triggered", "num": "3738", "d": "7/2015"}, {"title": "collectionfilter", "body": "hi return plain array instead backbone collection curious rationale behind know backbone objects inherit underscore properties surprised learn collectionfilter tailored return collection turn instead returning plain array surely", "num": "3737", "d": "7/2015"}, {"title": "deferring updates first save succeeds", "body": "generally accepted method delaying additional updates first save succeeds model trying avoid issue save ends creating additional entries server side first saves end getting treated post requests guess latency first save see something like post post instead second request put end multiple db rows near identical fields sequentially filled tried simple solution deferring saves deferred objects seems lead hash sent back server first save clobbering local changes deferred save fires thought check writing something complicated queuesmerges pending changes related google results seem several years ago nt worked tests", "num": "3734", "d": "7/2015"}, {"title": "someone tell whats wrong code", "body": "include include using namespace std double struct employee string number string name double rate int hours int main employee brain int lt cout lt lt enter lt gt employee number gt employee name cin gt employee rate gt employee hours cout lt", "num": "3733", "d": "7/2015"}, {"title": "collection set causes error add false option", "body": "working example var books new backbonecollection id title booksset id title updated title first book id title add false result collection one model id working example var books new backbonecollection id title booksset id title id title updated title first book add false ps result second example uncaught typeerror read property id undefined", "num": "3731", "d": "7/2015"}, {"title": "compatibility mode hashchange work", "body": "guess compatibility mode also work reason running compatibility mode reports true onhashchange window even though event nt supported", "num": "3730", "d": "7/2015"}, {"title": "ajaxbackbone", "body": "project php laravel requires ajax recently started learning backbone js due mvc structure unable use ajax via backbone js lavavel anyone help", "num": "3728", "d": "7/2015"}, {"title": "hey anyone help program", "body": "write program accepts cstring input user reverses contents string program work using two pointers head pointer set address first character string tail pointer set address last character string ie character terminating null program swap characters referenced pointers increment head point next character decrement tail point secondtolast character characters swapped entire string reversed thanks lot", "num": "3727", "d": "7/2015"}, {"title": "im problem program anyone help", "body": "write program accepts cstring input user reverses contents string program work using two pointers head pointer set address first character string tail pointer set address last character string ie character terminating null program swap characters referenced pointers increment head point next character decrement tail point secondtolast character characters swapped entire string reversed thanks lot", "num": "3726", "d": "7/2015"}, {"title": "peerdep warning npm", "body": "heads ing backbone npm giving following warning", "num": "3724", "d": "7/2015"}, {"title": "app terminated due memory pressure taking multiple pictures ios", "body": "tried lot solutions provided questions mine nothing could help much let tell collection view display images captured camera capturing multiple pictures time pictures taken address images first save database images displayed collection view happens click images time app crashed xcode displays message something like app terminating due memory pressure also getting many memory warnings logs actually neglecting first writing code taking multiple pictures void imagepickercontroller uiimagepickercontroller picker didfinishpickingmediawithinfo nsdictionary info uiimagepickercontroller issourcetypeavailable uiimagepickercontrollersourcetypecamera get image url library nsstring mediatype info objectforkey uiimagepickercontrollermediatype nsurl urlpath info valueforkey uiimagepickercontrollerreferenceurl segmentcontrolselectedsegmentindex picker dismissviewcontrolleranimated yes completion nil segmentcontrolselectedsegmentindex self insertpictodb urlpath else block nsurl url mediatype isequaltostring nsstring kuttypeimage uiimage image info objectforkey uiimagepickercontrolleroriginalimage alassetslibrary library alassetslibrary alloc init request save image camera roll library writeimagetosavedphotosalbum image cgimage orientation alassetorientation image imageorientation completionblock nsurl asseturl nserror error error taking picture saving image url db time trying reload collection view well condition keep clicking pictures pictures saving background definition method getimagefromurl void getimagefromurl nsurl yoururl nsindexpath indexpath alassetslibraryassetforurlresultblock resultblock alasset myasset alassetrepresentation rep myasset defaultrepresentation autoreleasepool cgimageref iref rep fullscreenimage iref uiimage image uiimage imagewithcgimage iref dispatchasync dispatchgetmainqueue collectioncell collectioncell collectionview cellforitematindexpath indexpath collectioncell nsdata imagedata uiimagejpegrepresentation image uiimage compressedimage uiimage imagewithdata imagedata collectioncellimageviewimage compressedimage else collectioncellimageviewimage nil collectioncellimageview setneedsdisplay collectioncell setneedsdisplay iref nil alassetslibraryaccessfailureblock failureblock nserror myerror nslog ca nt get image myerror localizeddescription alassetslibrary assetslibrary alassetslibrary alloc init assetslibrary assetforurl yoururl resultblock resultblock failureblock failureblock also trying compress images fetching collection view nt think crashing collection view reason using alassetslibrary something else debugging iphone ios version thanks advance", "num": "3723", "d": "7/2015"}, {"title": "microsoft edge compat", "body": "hey backbone devs working assessing cataloging triaging library compat microsoft edge know version compat range backbone edge versions fully operable edge also bugs block features compat help escalate", "num": "3722", "d": "7/2015"}, {"title": "bump", "body": "placeholder issue megawac jridgewell hijack checklists next bump prepping lodash part underdash proofing wait backbone bump removes use favor", "num": "3720", "d": "7/2015"}, {"title": "annotated source docs", "body": "hi lot trouble figuring call model constructor annotated source updated speak accomplishes source confusing reason care want views collections ability models default values trying mimic behavior model constructor views collections", "num": "3718", "d": "7/2015"}, {"title": "manually triggering event model part collection causes error", "body": "hello upgrading backbone app ran unexpected error simplest repro var c new backbonecollection var new backbonemodel cadd mtrigger change error thrown intentional change events handled thanks", "num": "3717", "d": "7/2015"}, {"title": "overriding backbone modelparse", "body": "hi overrode backbonemodel instanceparse like btw model class passed option hope problem api everything successful node error see overridden parse function returns respsuccess think part correct however return problems seems happen backbone seems create whole new backbone models return empty object parse function case best way handle different responses server parse method example ss good idea javascript parse function resp options", "num": "3716", "d": "7/2015"}, {"title": "documentation options", "body": "hi many methods backbone classes nt include documentation arguments seem find options", "num": "3715", "d": "7/2015"}, {"title": "error event triggered model destroy fails ajax call", "body": "hi trying figure actual flow events destroying model think see least two issue related model destroy error event triggered ajax call fails different model save method error event always triggered case ajax failure model collection removal delayed successful ajax call meaning model removed collection ajax delete successful basic test jsfiddle var mycollection backbonecollectionextend url collection create instance collection model var collection new mycollection var model new backbonemodel id add model collection collectionadd model fired first modeldestroy expected collectionon request function model consolelog request never fired ajax call fails expected collectionon sync function model consolelog sync never fired expecting one triggered ajax fails model save collectionon error function model consolelog error fired last least confusing destroy ajax call failed collectionon destroy function model consolelog destroy fired right least confusing destroy ajax call failed modelon destroy function consolelog model destroyed unexpected removing model collection imho delayed done sucessfull ajax call collectionon remove function model consolelog model removed modeldestroy always function expecting collection length destroy succesfull model removed collection add model back ajax failure consolelog collectionlength let compare model save issue events tiggered expected according docs var mycollection backbonecollectionextend url collection create instance collection model var collection new mycollection var model new backbonemodel id add model collection collectionadd model fired first expected collectionon request function model consolelog request never fired ajax call fails expected collectionon sync function model consolelog sync fired expected collectionon error function model consolelog error modelsave always function consolelog collectionlength", "num": "3714", "d": "7/2015"}, {"title": "collection set one model cid another model id", "body": "given following code javascript var new backbonemodel id foo var new backbonemodel id var collection new backbonecollection collectionset result contains also oddly changed", "num": "3712", "d": "7/2015"}, {"title": "collection set method going merge modelsobjects already present", "body": "code enter merging process already existing models im sure thats right change attributes happen instantiating new collection array objects creates model every object mergecheck backbone comparing bare attributes models array objects added setmethod though says turn bare objects model references ca nt spot bare object turned model reference comparing need merge js turn bare objects model references prevent invalid models added var lt modelslength attrs models existing piece code correct could someone point reason", "num": "3708", "d": "7/2015"}, {"title": "model reference still exists collection remove", "body": "backbone version description remove model collection model still collection model remove handler expected remove model part collection anymore actual model still collection model remove event triggered model reference removed located problem removemodels method collection reproduce var collection new backbonecollection var model new backbonemodel collectionadd model modelon remove function model collection collectionget model alert model still collection error thrown unexpected collectionremove model collectionget model alert model still collection error thrown expected jsfiddle", "num": "3707", "d": "7/2015"}, {"title": "question", "body": "dear purveyors backbone question yall nt backbone views defaultsattributesoptions relationships backbone models checking source collections routers nt either nt backbone components follow pattern aware functionality automatically assigning thisoptions taken newer version backbone question asking decision made long one curious thanks", "num": "3706", "d": "7/2015"}, {"title": "collection wo nt reset", "body": "trying clear calling retrieve new data page reason nt resetted fetching new data navigate another page resets collection gets new data manually reload page class projectpostitemsview extends backboneview template jst projectpostitemsejs postsitemviews initialize gt super listento collection add displaypostitem collectionreset fetch add true displaypostitem project gt view new projectpostitemview model project postsitemviewspush viewon render gt postitems append view gt render options gt super options tried still nt reset get error new backbone sure handling correctly wrong help appreciated thanks advance", "num": "3705", "d": "7/2015"}, {"title": "views events getting called initialize", "body": "updated backbone running issue views block called block intentional change nt see changelog lock since change breaking app conditionally extend events hash depending options set within initialize block", "num": "3704", "d": "7/2015"}, {"title": "backbone update event collection return newly added removed model", "body": "", "num": "3700", "d": "7/2015"}, {"body": "pass argument", "d": "7/2015"}, {"body": "thanks snappy response upgrade version backbone case sure nt able find issues initial search answers", "d": "7/2015"}, {"body": "check first argument sync listener either", "d": "7/2015"}, {"body": "created fiddle show problem", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "wow knowed source objekt passed listener function thank much", "d": "7/2015"}, {"body": "consider using bbvirtualcollection use case", "d": "7/2015"}, {"body": "save event async event without looking code try use models event listen event prior calling additional updates also add callback save options shown docs called response returned however probably need functionality ex disabling submit button debouncing actual save make sure send latest data multiple clicks reenabling submit successful save etc ideas hopefully helps", "d": "7/2015"}, {"body": "please use mailing list stackoverflow gitter channel questions github issues maintaining framework said solutions problem easiest tsjoberg mentioned debounce saves might also want think happening code avoid", "d": "7/2015"}, {"body": "want point readmemd says suggest feature report bug general discussion nt objections using forums looked like readme suggesting asking stuff like", "d": "7/2015"}, {"body": "ha may outgrown wording policy years questions live appropriate medium thanks pointing fix asap", "d": "7/2015"}, {"body": "mahirsiraji repo backbonejs javascript library please stop posting issues c code", "d": "7/2015"}, {"body": "worked fine reopen post failing test case", "d": "7/2015"}, {"body": "sorry looks like already fixed current version nt work thanks", "d": "7/2015"}, {"body": "first glance looks issue backbone handling", "d": "7/2015"}, {"body": "nah bad pretending nt could add modernizer like test", "d": "7/2015"}, {"body": "backbone development area please post questions use backbone mailling list", "d": "7/2015"}, {"body": "thanks rusalex", "d": "7/2015"}, {"body": "sparkles", "d": "7/2015"}, {"body": "thanks reaching nt think core contributors use windows main os generally wait till sauce tells us problem sauce supports edge edge vm released nt think us tried run test suite edge said backbone tests hosted smiley", "d": "7/2015"}, {"body": "current stable master branch versions pass ms edge support back based tags went tests runnable back test runner failed run older versions suspect qunit dep cause issue", "d": "7/2015"}, {"body": "current stable master branch versions pass ms edge smile thanks testing", "d": "7/2015"}, {"body": "thanks jdalton", "d": "7/2015"}, {"body": "relevant changes things considered x bolded issue numbers important ones nonbolds much one want take stab writing change log writing prose really nt thing paulfalgout", "d": "7/2015"}, {"body": "sure thing taking small stuff might wait considerations", "d": "7/2015"}, {"body": "might wait considerations yup contribs keep checklist", "d": "7/2015"}, {"body": "publish version addressing yeah", "d": "7/2015"}, {"body": "anything shipit time", "d": "7/2015"}, {"body": "comments regarding method backbone source cant undesrtand also models default attribute values define property model hash get set corresponding properties set model instantiation", "d": "7/2015"}, {"body": "try see method pretty straightforward model implements example future please nt use github issues ask questions try gitter channel stackoverflow page mailing list", "d": "7/2015"}, {"body": "clashing event expects format work expected", "d": "7/2015"}, {"body": "megawac update docs change behavior docs mention models required param", "d": "7/2015"}, {"body": "correct regression", "d": "7/2015"}, {"body": "megawac also worth noting without passing model long model nt part collection", "d": "7/2015"}, {"body": "dupe", "d": "7/2015"}, {"body": "try asking questions mailing list gitter board stackoverflow github issues maintaining framework", "d": "7/2015"}, {"body": "would like work pr", "d": "7/2015"}, {"body": "sure", "d": "7/2015"}, {"body": "look source code realize multivariate signature", "d": "7/2015"}, {"body": "think looking make wait successful ajax delete returns triggering events removing model collection", "d": "7/2015"}, {"body": "least think second like closing issues sight please read reconsider least one error event triggered ajax call fails different model save method error event always triggered case ajax failure", "d": "7/2015"}, {"body": "least think second like closing issues sight apologies nt mean make think nt considered issue test expect see everything works like intend error event triggered ajax call fails event triggered model since model longer part collection wo nt trigger error event collection backbone optimistic server requests makes proceeded request pass like wait response instead", "d": "7/2015"}, {"body": "inconsistent save method also optimistic", "d": "7/2015"}, {"body": "optimistically adds model collection hence events triggered collection optimistically removes model collection preventing events triggering", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "far understand would get true need something returns false change attributes mergemake decide compare bare objects models find good method decide merge think", "d": "7/2015"}, {"body": "already preparing pr maybe thats necessary explanation missing understand thats done like", "d": "7/2015"}, {"body": "im thinking might reason merge switch exists options think even merging desired models dont need merging exactly alike already", "d": "7/2015"}, {"body": "unsure problem", "d": "7/2015"}, {"body": "lets suppose set called array objects objects already exist exactly alike model instance problems overhead objects would get merged models already alike dont need get merged adding feedbackresume update event see including mergedmodels would return merge done models already alike im working pr includes update event triggering sending previousremoved models addedmodels mergedmodels edit code would run times even attributechange happening overhead instead following", "d": "7/2015"}, {"body": "code pr right collection set method peak javascript set function models options options defaults options setoptions optionsparse amp amp thisismodel models models thisparse models options var singular isarray models models singular models models modelsslice var id model attrs existing sort var optionsat null lt thislength var sortable thiscomparator amp amp null amp amp optionssort false var sortattr isstring thiscomparator thiscomparator null var toadd toremove modelmap previousmodels mergedmodels var add optionsadd merge optionsmerge remove optionsremove var order sortable amp amp add amp amp remove false var orderchanged false", "d": "7/2015"}, {"body": "request returning models merged think might good momentway introduce info manner previousmodels returned reset method", "d": "7/2015"}, {"body": "example replicate behavior example times following code would ran even change model", "d": "7/2015"}, {"body": "think problem move along disappointed", "d": "7/2015"}, {"body": "overhead objects would get merged models already alike dont need get merged adding feedbackresume update event see including mergedmodels would return merge done models already alike way us know wether two objects alike without parsing setting keep mind may overridden custom code", "d": "7/2015"}, {"body": "bare attribute objects could deepequaled without taking account ordersorting keys sure might even expensive guess depends alot size objects facepunch get merging even attributes model new object alike think thats good think alright like issue closed ofc", "d": "7/2015"}, {"body": "overridden way know new object morph called", "d": "7/2015"}, {"body": "keep mind also backbone model instance thus", "d": "7/2015"}, {"body": "yeah mind thinking case setting bare objects models setting models everything works one would expect", "d": "7/2015"}, {"body": "thanks report already tracking", "d": "7/2015"}, {"body": "type question better suited one channels try mailing list gitter board short answer nt need models supposed place care stateful attributes nt live object cases setting property instance good enough said really need app written plugin allows borrow backbonemodel getter setter functions object including rest backbone classes check see works", "d": "7/2015"}, {"body": "thanks check", "d": "7/2015"}, {"body": "types questions appropriate stackoverflow side note using backbone version", "d": "7/2015"}, {"body": "jridgewell literally jumped codebase makes say version according version installed bower using", "d": "7/2015"}, {"body": "error removed", "d": "7/2015"}, {"body": "dupe changed documentation views always delegate events longer modify events hash view property", "d": "7/2015"}, {"body": "turn events hash method use initialize method", "d": "7/2015"}, {"body": "turn method call", "d": "7/2015"}, {"body": "either turn method call js var view backboneviewextend events function return click span onclickspan click onclick var view backboneviewextend initialize function thisdelegate click span thisonclickspan thisdelegate click thisonclick", "d": "7/2015"}, {"body": "thank jridgewell relying initialize called events method var view backboneviewextend events function var eventshash thisdoclickspan extend eventshash click span onclickspan return eventshash initialize function opts var opts thisdoclickspan odoclickspan new view doclickspan true pattern longer works backbone", "d": "7/2015"}, {"body": "want work pr", "d": "7/2015"}, {"body": "absolutely", "d": "7/2015"}, {"body": "benmccormick decorator technique works well proposal concerns going approach", "d": "7/2015"}, {"body": "andrewrota literally writing blog post following stuff right reading thread commented big nt personally see actually think better described though create nice new interfaces backbone decorators see gist stevenlangbroek got thinking originally", "d": "7/2015"}, {"body": "preview followup post putting updated permanent link move permanent url early week sometime basic summary thread learned approaches making backbone properties work current classes spec first need considered fully supported pass properties super constructor treat properties methods add properties directly prototype class declared still see limiting expressiveness extent another think problem less solved decorators become official specification decorators options add props decorator takes props top class adds prototype create several special purpose decorators allow expressivefinegrained interface nt think solutions require additional modifications backbone would interesting role backbonedecorator library ifwhen decorators become standardized would love feedback post publish mondaytuesday", "d": "7/2015"}, {"body": "benmccormick figured decorators evaluated construction happens thanks correction update gist bit also thanks million mention blog post ping twitter publish could use syntax marionette triggers could exposed class decorator like tagname template blog post thinking ca nt use static properties work backbone understand decorators still stage think great upgrade way write backbone apps especially method decorators events hash sort programming style makes prefer gulp grunt", "d": "7/2015"}, {"body": "stevenlangbroek see discussion static properties syntax currently specced creates local property instance rather adding prototype properties added super constructor run", "d": "7/2015"}, {"body": "benmccormick post looks good think good job explaining trade offs options point really like special purpose decorators approach seems best approach assuming decorators make spec", "d": "7/2015"}, {"body": "believe docs quite right replace true calls windowhistoryreplacestate method replaces current state one called nt want page history would use replace true navigating way page navigating", "d": "7/2015"}, {"body": "far discussion assumed developer full control global environment gets loaded always case case developing modular plugins cmses wordpress wordpress plugin developer may happily use backbone plugin test well deploy fine many wordpress instances eventually administrator wordpress instance decides install particular plugin along plugin happens happily use say requirejs amd loader site would work fine either one plugins soon installed together disaster strike time way avoid problem developer backbone plugin alter backbone integrating remove amd support developer requirejs plugin alter requirejs integrating inject amd api unique namespace rather global namespace prevent either plugin getting kind future collision however stock backbone intended used safely modular cms plugins think issue closed prematurely fixing issue would likely require either separate nonamd version backbone changes amd api conjunction changes backbone able backbone logic ask amd dependencies available via amd attempting load via amd backbone could default accessing global namespace otherwise jquery ui also similar problem already filed ticket", "d": "7/2015"}, {"body": "demonstrated", "d": "7/2015"}, {"body": "jrburke mind weighing far know way determine inside requirejs dependency load merely global context present", "d": "7/2015"}, {"body": "developer control overall environment want nonamd pathway followed construct sort script sequence around backbone html var olddefine define define undefined define olddefine olddefine undefined note attributes script tags used case believe extraordinary measures done umd boilerplate account possible global environment setup would make umd blocks incredibly large likely comprehensive control whole global environment expect developer need defensive coding style anyway know best sorts mitigations like needed used third script tag backbone also wants used amd parts page case developer may need add manual script tags jquery underscore case script block perhaps also similar work addition backbone one jridgewell question return true module specified loading true module part top level dependency chain true bunch defines done without top level done check believe knowing distinction help situation developer things want global backbone immediately also amd parts may also want backbone loaded", "d": "7/2015"}, {"body": "little nice pattern avoiding variable history", "d": "7/2015"}, {"body": "caveats amd support regarding use stock backbone modular cms plugins", "d": "7/2015"}, {"body": "understand reasoning truly awkward lot orchestration necessary may immediately apparent create sync listener models collection listen add collection create new listener added model listen remove collection call stoplistening removed model prevent memory leaks remove going fire immediately would nt get sync event guess keep cache removed models every time sync event fires check cache remove cache handle sync event stoplistening", "d": "7/2015"}, {"body": "nt think build inheritance js avoid use composition", "d": "7/2015"}, {"title": "make embermerge public", "body": "embermerge merge contents two objects together first object utility method public similar embercopy embercreate public public method purpose nt reinvented found via another library", "num": "11938", "d": "7/2015"}, {"title": "emberarrayproxy method", "body": "think array sort function", "num": "11936", "d": "7/2015"}, {"title": "mut helper change value", "body": "ember experiencing following component dropdown menus using new mut helper value attribute dropdown option trigger update value component declaration output html case select either nothing dog update respectively however selecting cat value nothing want note modelpet attribute type number", "num": "11932", "d": "7/2015"}, {"title": "suggestion update deprecations page oneway info", "body": "turns nt simple mechanical translation semantics different javascript var old emberobjectextend xbinding emberbindingoneway modelx var oldcreate emberrun set model x oget x gt emberrun set x string oget x gt string emberrun set model x oget x gt magic note binding remains nt get clobbered compare javascript var new emberobjectextend x embercomputedoneway modelx var n newcreate emberrun n set model x nget x gt emberrun n set x string nget x gt string emberrun n set model x nget x gt string cp gets clobbered understandable behavior guessing uses form controllers gets set bindings got refreshed controller singleton though new world means work either create cp mimics old style move setting properties etc rate think deprecation warning given seems suggest matter switching syntax writing mention might merit discussion", "num": "11931", "d": "7/2015"}, {"title": "problems linkto child dynamic segment", "body": "description ember route setup like approutermap function thisroute groups function thisroute group path id function thisroute child thisroute thisroute intent want reusable navigation component renders want able use component route example expect able link without passing anything dynamic segment would expect model hook gets called model hook gets called problem various scenarios give unexpected inconsistent results particular case tries transition nonexistent route app steps reproduce fiddle case group route skipped click groups link note route hooks click child link gets weird note transition logged note route hooks like route skipped entirely template nt render even activate hook fires note route hooks note errors case group route ok click link note template pass value dynamic segment click child link note route hooks note route hooks see called expected note route hooks note errors case broken linkto click link note template pass value dynamic segment script error template never renders open browser console see strange error caused ember attempting render", "num": "11930", "d": "7/2015"}, {"title": "dynamic segments nested routes working", "body": "nested route structure routerjs thisroute maps path maps function thisroute show path id function thisroute display path display thisroute layers function thisroute create understanding route mapsshowdisplay take single dynamic segment like however go transition link ie maps route aftermodel function resolvedmodel var newestflight resolvedmodelcontent var newestmap newestflightget map thistransitionto mapsshowdisplay newestmap get error makes even weirder route accepted dynamic segment mapsdisplay nt understand nesting breaks ideas wrong would greatly appreciated edit interestingly awesome tool also seems agree dynamic segment post route", "num": "11928", "d": "7/2015"}, {"title": "lost bindings amp silent deprecations", "body": "running hard explain behaviour cp w getter setters however able recreate twiddle pretty sure defect least suspect best answer may instead change behaviour cp setters feel must stay true documented bad juju twiddle fully commentary run test warning odd please wear safety belts problem thought consisting two stages stages problem represented component exposes cp part api stages two sets buttons one set butttons passes value api returned value expect js setter second set buttons pass value api get different value back seems allowed functionality ember cp backed unit tests computedtest stages stage stage one use buttons return different values works way ember seems specified even changing value setter may considered bad practice js issue deprecation warning good starts anyone heading path wondering stage nt property displayed template value set first button press binding component breaks deprecation warning stage never shows things silently go dark also worth noting stage may fact coder starts case therefore fumbling around long time got deprecation message", "num": "11927", "d": "7/2015"}, {"title": "computed properties recalculate destroyed objects", "body": "work project encountered problem caused computed property recalculated component destroyed removed dom flag isdestroying set true looks undesired recalculate bunch computed properties destroyed objects since may cause exceptions performance issues maybe design jsbin give better insight problem", "num": "11926", "d": "7/2015"}, {"title": "regression attempted register view id already use", "body": "see following jsbin click several times get error uncaught error assertion failed attempted register view id already use labelid component idlabelid rendered twice template condition ensures one element id moment working jsbin ember ps condition inside loop seems important reproduce issue pss tried test ember could make work ember could find helper", "num": "11925", "d": "7/2015"}, {"title": "need expectwarn test helper", "body": "similar handler checking right happened test lead stronger tests therefore even stronger codebase", "num": "11924", "d": "7/2015"}, {"title": "ember api docs", "body": "way access ember api docs", "num": "11923", "d": "7/2015"}, {"title": "click event lost element redrawn", "body": "see working example app input field receives focus added dom also list items whose value depends value input field click element list click event simply lost problem value input element changed causes list redrawn somehow click event lost redrawing list items fiddle", "num": "11922", "d": "7/2015"}, {"title": "nt include computed unchanged properties", "body": "computed properties nt show called object instance also applies properties explicitly initialized via fall back default values declared prototype example properties nt even seem show called instance surely way find given object instance properties including computedunchanged properties", "num": "11921", "d": "7/2015"}, {"title": "component parameters observers triggered one changes", "body": "setup log changes inside components like get change sharedparam see fiddle small differences depending updated value parent view one components may causes logic issues performances issues parameter updated often worst case infinite loops example parameter change triggers ajax request turn modifies another parameter", "num": "11920", "d": "7/2015"}, {"title": "documentation isevery clear", "body": "returns true passed property resolves value second argument items enumerable method often simplerfaster using callback expectation based definition isevery name olivier false result true isevery method follows implementation javascript every iterator definition ember doc could bit better", "num": "11916", "d": "7/2015"}, {"title": "component rerendering properly", "body": "resizing output viewport underover limit updates template accordingly version update template displays updated value version version", "num": "11915", "d": "7/2015"}, {"title": "didinitattrs uses array across two instances component", "body": "created jsbin shows basically add two objects array didinitattrs component component page renders correctly see jon one sam two add component page twice bin continues add array previous component use array correct behavior bug expected components behave distinctly", "num": "11913", "d": "7/2015"}, {"title": "ca nt extend linkcomponent", "body": "tried extend linkcomponent like followed doc get error message jsbin bad idea extend linkcomponent reopen", "num": "11912", "d": "7/2015"}, {"title": "documentation metaissue improve api docs", "body": "checking api docs realized lot opportunity improve documentation examples issue serve coordination point check sister ember data issue instructions checklist temporary notes current preselection", "num": "11911", "d": "7/2015"}, {"title": "using applicationview results warning", "body": "since views deprecated suggested way replace", "num": "11909", "d": "7/2015"}, {"title": "setting attribute null removes attribute", "body": "previously attribute null removed element test attributes added element see jsbin migration htmlbars boundstyle attributes work anymore see jsbin test attributes renders instead test case htmlbars project assume works pure htmlbars related issues", "num": "11907", "d": "7/2015"}, {"title": "best practice views deprecated setup dom application template", "body": "hi quick question onward best practice say want add class application template renders class top level div used creating application view adding custom attributes noview way also applies route views guess heart", "num": "11906", "d": "7/2015"}, {"title": "mousedown blocks focusout event", "body": "looks like mousedown triggered element focusout nt triggered previously focused element element nt even lose focus setup twiddle ember corresponding fiddle equivalent functionality jquery working jquery ember assuming mousedown blocks focusout actually triggered twidde vanilla jquery equivalent", "num": "11904", "d": "7/2015"}, {"title": "documentation rendering helpers comparison tables missing headers", "body": "comparison tables bottom rendering helpers section documentation missing view column header version docs nt issue", "num": "11901", "d": "7/2015"}, {"title": "twice repeated classname", "body": "ember call component rendered html", "num": "11899", "d": "7/2015"}, {"title": "deprecate remove function argument emberassertdeprecateetc", "body": "following throw deprecation message something like functional arguments ambiguous constructors please use constructors iife compute deprecation value future version ember functions treated truthy values instead executed needs deprecated stable removed beta", "num": "11898", "d": "7/2015"}, {"title": "route transitionto url bug", "body": "hello use transitionto pass url inside current route redraw goes another route", "num": "11896", "d": "7/2015"}, {"title": "ember reorder query params url", "body": "hello ember url random ordered query parameters ember sort update url also push previous url random ordered query params history hit back button browser moves page random ordered query params", "num": "11894", "d": "7/2015"}, {"title": "route named select renders outlet", "body": "create route named select dom node rendered instead template named selecthbs app folder ember version ember cli routerjs selecthbs inside templates folder", "num": "11893", "d": "7/2015"}, {"title": "value input helpers appears blank latest firefox", "body": "firefox chrome", "num": "11892", "d": "7/2015"}, {"title": "nested subroutes broken", "body": "im using eager loading sub routes made new ember cli project demo bug example foo foobar routes work expected foobarbaz route nt render correct loading template automatically fallback templatesfoobarbazindexhbs templatesfoobarbazhbs nt found change templatesfoobarbazindexhbs templatesfoobarbazhbs baz render templatesfoobarbazloadinghbs used loading state let know anything else help debug", "num": "11888", "d": "7/2015"}, {"title": "deprecate embercollectionview", "body": "process needs additional fixes added cc martndemus", "num": "11887", "d": "7/2015"}, {"title": "action target specific component", "body": "targeting action specific component working anymore currently using latest ember js release ember complete environment application template overlayfx viewname appoverlay open opensidemenu overlayfx overlayfx component import ember ember import layout templatescomponentsoverlayfx export default embercomponentextend actions action handler enable component catch send actions outher components open function childviewname thissendaction open childviewname sidemenu component import ember ember import layout templatescomponentsoverlayfx export default embercomponentextend actions open function childviewname thissendaction open thisget viewname application controller import ember ember export default embercontrollerextend actions opensidemenu function childviewname consolelog something find code example jsbin bit sluggish nt recommend", "num": "11886", "d": "7/2015"}, {"title": "helper updating changes", "body": "component following template code js componentssortablelistjs export default embercomponentextend preservescroll initsortable function var refreshed false var didinsertelement destroysortable function sortable destroy willdestroyelement updateitemorder function key idx var items thisget items var item itemsfindby id key thisbeginpropertychanges itemsremoveobject item itemsinsertat idx item thisendpropertychanges one templates problem sort items gets called updating array list rerendered used work moved code route view component", "num": "11880", "d": "7/2015"}, {"title": "containerlookup instanceinitializer causes read property lookup undefined error", "body": "container longer available applicationinstance passed instance initializers issue introduced commit setting feature either nt appear effect example instance initializer exhibits issue ember data", "num": "11879", "d": "7/2015"}, {"title": "query params fail route name object prototoype", "body": "given following router query params fail firefox function object prototype offending line easily avoided changing route name tricky figure probably guarded", "num": "11877", "d": "7/2015"}, {"title": "embermap embertemplatecompilermap missing bower package", "body": "hello ember team current release source map files missing ember embertemplatecompiler even referenced end js files checked bower package release page thanks", "num": "11876", "d": "7/2015"}, {"title": "must use emberset set property", "body": "setting binding property route run everytime enter new route works fine first time enter route second time enter route get error going", "num": "11873", "d": "7/2015"}, {"title": "blog post", "body": "ticket summary items discussed release post repo followers please consider guarantee even prediction behavior place notes issue locked keep us focused commit bit please edit description deprecations breaking changes deprecations", "num": "11872", "d": "7/2015"}, {"title": "attributesbindings set id", "body": "following code work", "num": "11871", "d": "7/2015"}, {"title": "ember helpers nt seem work", "body": "tried creating ember helper using made generated code return simple string attempted use inside template unfortunately though template render fails occurring inside function called inside", "num": "11870", "d": "7/2015"}, {"title": "autocorrect working input helper mobile safari", "body": "created input field attribute autocorrect ignored open page mobile safari tested real iphone ios also using simulator various iphone ios versions page contains two elements type textfield autocorrect feature still present type standard html input autocorrect feature disabled also created jsbin demostrate", "num": "11869", "d": "7/2015"}, {"title": "option get shorthand helper array refire item property change", "body": "using array new shorthand helper would possible optionway get refire property item array changes js bin demonstrates trying press test knows property changedis interest list updates still says purple change first value purple start displays found purple ok like way tell helper refire value item array changes text would also change purple found purple understand could write computed observer observe model eachvalue thought would see whether would ever considered whether always computedobserver thing", "num": "11867", "d": "7/2015"}, {"title": "select issue hover pressing modifier key chrome", "body": "seems following behaviour presents chrome firefox ie work fine element plain html tag list dropped mouse pointer hovered option selected press say shift key appears though option selected however clicking another application outside browser item stays semiselected ways item displayed box dropping list see value still previous one event also fired testers picked performing screen prints since option nt actually selected appears incorrect data submitted", "num": "11865", "d": "7/2015"}, {"title": "debugging run loop stacktraces dev friendly possible add function arguments", "body": "hello debugging ember cumbersome due run loop stack trace always useful understand part application code exceptions come line number data used example regular exception every new release ember overwrite emberdebug following lines tells object created exception property getting set naive ask objects could added embererror stacks possible technically sure javascript strict mode routine would systematically add arguments function called context would cover cases maybe try add information frequent errors run loop thanks", "num": "11863", "d": "7/2015"}, {"title": "emberselect value property stops working three changes", "body": "simple fiddle demonstrates problem template view select contentsitems valuesvalue slabel application var items item item windowapp emberapplicationcreate windowappapplicationcontroller embercontrollerextend sitems items svalue items slabel embercomputed svalue function return thisget svalue items picked item picked item tested verified bug exists number browsers ie chrom ium firefox safarai number different platforms os x windows linux exhibit behavior changing value element three times data binding stops working", "num": "11862", "d": "7/2015"}, {"title": "help entry undefined", "body": "may issue run ember without parameters got error end output watcher string default events aliases w launch string default false comma separated list browsers launch tests reporter string test reporter use tapdotxunit aliases r testpage string test page invoke help entry undefined ember update updates embercli newest available version ember version version", "num": "11860", "d": "7/2015"}, {"title": "dynamic segments query params loading state produces error", "body": "route dynamic segment query parameter child route slowloading model loading template error occurs nondefault query parameter provided please see clicking click button produces error error occurs error occur occurs likely culprit", "num": "11857", "d": "7/2015"}, {"title": "emberviewreopen guide binding data attributes nt work since updated ember", "body": "put code form guide application route upgrade start use attributes like works fine nt work upgrade must put attributes one one missing something", "num": "11849", "d": "7/2015"}, {"title": "route queryparams replace work refreshmodel true", "body": "route queryparams replace work refreshmodel set true open jsbin live preview enter something input field submit input modify query parameter refresh template several times back button pass trough submit history expected something wrong", "num": "11843", "d": "7/2015"}, {"title": "update calls include required options", "body": "needed full implementation emberjsrfcs implemented criteria add options hash calls add property hash property comprised package name short code deprecation ie additional criteria add property hash property string value ember version behavior deprecated removed defaulted initial pr subsequently updated review work list x x x x might include bunch tests x x x x x x x x commit updating given package next day two please comment claiming package working ready please submit pr prefix comment pr number followup steps x make required done calling locations updated provide options x make required done calling locations updated provide options", "num": "11835", "d": "7/2015"}, {"title": "fixed element id", "body": "dynamically generated element id attributes pose big challenge automated test function test tool like selenium work around problem using attributes think straightforward method fixing element id dom structure change config ember achieve help greatly appreciated", "num": "11834", "d": "7/2015"}, {"title": "computed properties new gettersetter mixin nt access inheritor properties properly", "body": "particularly unusual computed properties mixin alter target property based upon another property code works fine old syntax regiontop embercomputed key value previousvalue gt target get isscalecomponent assetcmpregionmodelscaletop else regionmodeltop argumentslength gt set target value get target property isscalecomponent assetcmpregionmodelscaletop regionmodeltop regionleft embercomputed key value previousvalue gt target get isscalecomponent assetcmpregionmodelscaleleft else regionmodelleft argumentslength gt set target value return get target property isscalecomponent assetcmpregionmodelscaleleft regionmodelleft changed following regiontop embercomputed isscalecomponent assetcmpregionmodelscaletop regionmodeltop set key value gt prop get isscalecomponent assetcmpregionmodelscaletop else regionmodeltop set prop value get gt prop get isscalecomponent assetcmpregionmodelscaletop else regionmodeltop get prop regionleft embercomputed isscalecomponent assetcmpregionmodelscaleleft regionmodelleft set key value gt prop get isscalecomponent assetcmpregionmodelscaleleft else regionmodelleft set prop value get gt prop get isscalecomponent assetcmpregionmodelscaleleft else regionmodelleft get prop isscalecomponent property inheriting component noticed get isscalecomponent different getter setter appears correct set wrong get pointing another component hard time debugging context component mixin component may causing issue sorry ca nt reproduce ca nt find working fiddlebin example work", "num": "11831", "d": "7/2015"}, {"title": "appears toggling inherited checkbox enables private members api docs", "body": "", "num": "11830", "d": "7/2015"}, {"title": "input readonly attributes added even readonlyfalse", "body": "migration ember found inputs broken site readonlyfalse attribute renders markup jsbin could please fix", "num": "11828", "d": "7/2015"}, {"title": "considering cherrypicking linkto component integration tests fix", "body": "originally noted embertesthelpers issue ember using component integration tests component issue fixed emberjs released ember cycle however many us still making transition ember ember many addons still implementing changes necessary glimmer compatibility specifically shim embereasyforms nt work glimmer going rewrite ember without changes provided emberjs ember limits ability stay uptodate embertesthelpers take advantage extremely helpful component integration tests generated default embermocha emberqunit possible cherrypick aforementioned pr issue realize outside realm normally ember ecosystem think large one many community warrants consideration thanks consideration cc rwjblue", "num": "11825", "d": "7/2015"}, {"title": "one way binding effective initializing", "body": "hi seems embercomputedoneway effective initializing original value modified dependent value refreshed jsbin type value input field submit qp qpfield synced click leave moment qp set null click back index original value qp null qpfield yet holds stale value", "num": "11823", "d": "7/2015"}, {"title": "observer bound property within component invoked twice since", "body": "create component property binding within component add callback observes bound property embed component parent template hook binding field parent controller update property parent controller component observer callback invoked twice example open console click next previous button logged correct whereas logged twice incorrect works fine ember broken", "num": "11821", "d": "7/2015"}, {"title": "containerview template broken without addon", "body": "maybe fine nt thought much yet container view template uses work mixonic opinion also conditionally exported addon present", "num": "11818", "d": "7/2015"}, {"title": "emberselect stops updating value property couple option changes introduced", "body": "aware emberselect deprecated soon odd bug seen latest release given simple select box two options bound display current value everything works fine select option got changed times moment bound attribute nt updated anymore kinda breaking thingies thanks amazing work project though", "num": "11817", "d": "7/2015"}, {"title": "instance initializer called testing", "body": "using embercli javascript import ember ember import module test qunit import startapp insmuitestshelpersstartapp var application module acceptance basetemplateinitialize beforeeach function application startapp aftereach function emberrun application destroy test image template added store function assert var store applicationcontainerlookup store main var templates storeall template toarray filterproperty displayname image assertequal templateslength test checks fixtures got added store instance initializer breakpoint instance initializer get hit test run ideas", "num": "11811", "d": "7/2015"}, {"title": "patternindexof function", "body": "noticed uncaught error upgrading app canary found came docblock specifies string also checks type string calling tests appear test string anyway debugging edited ember source app moved call inside conditional received seems reasonable something must calling wrong however looking cause observers app correct restarted error went away unable replicate happy submit patch make behavior user friendly needed alternatively maybe someone else hit error add details issue", "num": "11803", "d": "7/2015"}, {"title": "passing computed property component template results memory leak", "body": "using ember following example results components stuck state app adds removes items model frequently html using computed alias shown fixes issue suspect bug someone wants work would like memory profile dumps provide", "num": "11802", "d": "7/2015"}, {"title": "deprecate using getset global lookup path", "body": "global lookup x deprecate global lookup x deprecate global lookup special meaning x deprecate special meaning x deprecate special meaning strict arguments x deprecate strictly passing two arguments object keyname x deprecate strictly passing three four arguments object keyname value optional tolerant flag", "num": "11789", "d": "7/2015"}, {"title": "app fails start onready tests fail", "body": "exists scenario boot ready occurs application throw exception currently happens may fail given test likely race qunit ready subscription apps likely best way solve test framework use promise promise represents apps full initialization may alreayd partially exist failure cause propagate error", "num": "11785", "d": "7/2015"}, {"title": "remove context switching support", "body": "remove non scenarios remove", "num": "11784", "d": "7/2015"}, {"title": "action helpers component bubbling", "body": "think seeing bug helpers supposed bubble past component wraps background made json inspector using components loop keyvals routes one depending typeof passed object prints key calls display value prints index calls display value finally displays value right side click formatted json output bubble pathroute value ex component action sends path problem click passing path back nested components using passed action like triggers action higher level sending highershorter path problem observed note path path sent original context thispath path currently logging message click bruce wayne output get jiprimitive path yourvar batman name thispath yourvar batman name jiobject path yourvar batman name thispath yourvar batman jiobject path yourvar batman name thispath yourvar gt stop nt passes higher context jiobject path yourvar batman thispath yourvar batman jiobject path yourvar batman thispath yourvar jiobject path yourvar thispath yourvar jsbin", "num": "11783", "d": "7/2015"}, {"title": "add check subscription action", "body": "would great method could check controller subscription action try trigger parent action check expression trigger action dependency data receive example propose create new method something like", "num": "11781", "d": "7/2015"}, {"title": "remove support", "body": "remove remove fix tests intentionally testing deprecated format delete tests intentionally testing deprecated format", "num": "11780", "d": "7/2015"}, {"title": "remove emberview support using emberlegacyviews addon", "body": "export following set x removed x removed x removed x removed x removed x removed add following ast transforms set x x x add following keywordshelpers set x x x fix tests trollface", "num": "11775", "d": "7/2015"}, {"title": "remove single arg", "body": "transformsingleargeach remove registered ast plugins remove tests explicitly testing deprecated functionality update tests use noncontext switching form", "num": "11773", "d": "7/2015"}, {"title": "remove deprecated ast transform", "body": "remove remove", "num": "11772", "d": "7/2015"}, {"title": "ember regression linkto regression using queryparams route name", "body": "change linkview linkcomponent linkto behavior changed specifically behavior changed using linkto queryparams route example previously app could long lived link parent route link would respect route changes child outlets longer case instead linkto causes route transition whatever route happened link rendered done bit digging appears property linkcomponent set nt change route changes therefore clicking link cause route transition match whatever happened link rendered jsbin help illustrate issue steps reproduce issue using jsbin click authenticated link click open drawer link linkto queryparams route name drawer open right clicking close drawer close drawer change current route click child transition authenticatedchild click open drawer drawer open app transition authenticated route stayed authenticatedchild", "num": "11769", "d": "7/2015"}, {"title": "shorthand helper block nt rerender promise forfilled", "body": "written helper allows check whether least one element array property equal given value helpershasanyjs import ember ember param array iterate param comparison operator use currently supports gt lt param value check optional param property arrayobject check supplied element array checked directly returns true array least one match value export function hasany params var compare function b operator operator return b operator gt return gt b operator lt return lt b return false paramslength lt return false paramslength params foreach function item compare item params params return true return false params foreach function item consolelog itemget params params params compare itemget params params params consolelog returned true return true return false export default emberhelperhelper hasany used components template point component loaded notificationaccount retrieved api already accountcontacts first see console show undefined john api get hit consolelog shows john john returned true know helper returns false initially true second time guessing seems like nt get rerendered second time html see unsure setup js bin showing using api reproduces using one get next level objects ember ember data ember cli", "num": "11768", "d": "7/2015"}, {"title": "component linkto tabindex nt toggle based component property tabindex starts", "body": "tabindex starts linkto component bound component property linkto tabindex nt toggle based component property even though property toggling updating dom see jsbin example see jbin proper tabindex toggling based state required writing accessible components", "num": "11763", "d": "7/2015"}, {"title": "consider making public", "body": "private api one use frequently applications programmatically get current route model mostly convenience especially useful writing reusable route code needs get current route model though private see", "num": "11760", "d": "7/2015"}, {"title": "consider making public", "body": "private api one use frequently applications programmatically get current route name pass along public apis especially useful writing reusable route code needs know current route name", "num": "11759", "d": "7/2015"}, {"title": "beta anglebracketcomponents detect mutative apis attrs", "body": "believe build time warning failure using mutative apis attrs angle bracket components react props mutated well tooling around suggests mutate props example shows mutating arrays objects arrays clearly worst mutating objects object properties propagated becomes hard reason attrs mutated passed along utmost shorten conceptual gap static program dynamic process wink", "num": "11757", "d": "7/2015"}, {"title": "handlebars helpers docs missing since", "body": "noticed today handlebar helpers docs gone missing since released intentional", "num": "11755", "d": "7/2015"}, {"title": "ember component", "body": "extend custom component extend embercomponent mixin hooks didinsertelement willdestroyelement called need inherited class really shor bug", "num": "11753", "d": "7/2015"}, {"title": "think broke travis", "body": "see", "num": "11752", "d": "7/2015"}, {"title": "bug release amp beta detached dom trees application runs", "body": "trentmwillis believe memory leaks arise running acceptance tests new application instance created test resulted able run test suite tests end end simply run memory fall reproduce run tests repro repo see something like following acceptance tests ran series listeners nodes continue rise drop fraction gc comes along heap snapshot taken see several detached dom trees well tested update looking stef last night concluded dom nodes retained per test test harness ui adds row however seems retention app instances certain cases cc stefanpenner wycats repro repo", "num": "11748", "d": "7/2015"}, {"title": "emberbeforeobserver missing", "body": "please see console output", "num": "11742", "d": "7/2015"}, {"title": "hasblock available component init", "body": "initialising component want checker whether called block called block parameter set component works fine template following code behave expected component js export default embercomponentextend init function thissuper possible would consider bad practice", "num": "11741", "d": "7/2015"}, {"title": "component helper allow rendering builtin input components", "body": "example throw error uncaught error assertion failed use textarea component name component names must contain hyphen see jsbin probably exception done builtin components reason rendered using component helper", "num": "11740", "d": "7/2015"}, {"title": "breaks component unit tests", "body": "moving unit tests breaking bit hard nail exactly happens random places context test set nil test renders function assert var subject thissubject gt typeerror thissubject function object objectwrapper objecttestrun process begin dropping debugger test context clearly different", "num": "11738", "d": "7/2015"}, {"title": "undefined embercomputedmap callback", "body": "undefined callback worked latest beta", "num": "11736", "d": "7/2015"}, {"title": "arrayproxy plays poorly array undefined elements", "body": "trying insert element arrayproxy whose content preset like attempt insert element target index finding length array increasing instead swapping value target value example expect following jsbin illustrates", "num": "11734", "d": "7/2015"}, {"title": "cleanup emberget", "body": "x remove support globals x remove support x enforce strict usage two arguments assert object nonnull object amp path string", "num": "11733", "d": "7/2015"}, {"title": "component hook yielded content change", "body": "current version ember using none component lifecycle hooks fire yielded content component change created bug application refactored component one received content attributes block component handlebars lifecycle hooks fire model changes docviewer articlemodel hooks longer fire docviewer model markup things docviewer fact lifecycle hooks nt fire makes sense component changed however seems like valid use case whenever yielded content changes dommanipulating behavior occur syntax highlighting updating urls article another example someone wanted create isotope wrapper component wondering works react components like magic move appears changing inner content works fires hooks like sure next wondered liquidfire handles sort thing uses windowmutationobserver watch changes component element call didmutate hook current workaround using would possible practical add hook would work better practice handle use case", "num": "11731", "d": "7/2015"}, {"title": "ember didinsertelement fired rerender worked", "body": "works expected production environment recently upgraded lesser stage came according doc didinsertelement called element view inserted dom view rerendered nt happen anymore recent version rerender trigger didinsertelement component parent template relevant part component coffee contentframe embercomponentextend contentchanged emobserver content gt consolelog observer works correctly calls rerender rerender didinsertelement gt consolelog get called rerender called however work initial insert worked", "num": "11729", "d": "7/2015"}, {"title": "bug anglebracketcomponents unstable top level elements", "body": "following jsbin weird behaviors event handlers become detached top level dom becomes unstable reason believe due helper top level element noticed class names get concated existing class may reasoning around event handlers removed repro", "num": "11728", "d": "7/2015"}, {"title": "bug anglebracketcomponents boolean attrs coerced strings", "body": "sure expected repro", "num": "11727", "d": "7/2015"}, {"title": "ember route nt refresh model paging", "body": "using ember w data route js approutesitemsjs import ember ember export default emberrouteextend queryparams page refreshmodel true nt work ajax sent data nt updated nothing happens fixed add js appcontrollersitemsjs import ember ember export default emberarraycontrollerextend queryparams page gives deprecation warning deprecation emberarraycontroller deprecated new ember probably something wrong could help", "num": "11726", "d": "7/2015"}, {"title": "tagged builds displayed", "body": "likely something wrong nt time review detail would love help nt time track atm", "num": "11725", "d": "7/2015"}, {"title": "routable components status", "body": "two weeks stable release wondering status routable components aware routable components pushed back release however appears soonest land fine becoming confusing people need controllers still ergonomics around pretty lousy explain numerous people taken training ebryn routable components thing coming sooner land better nt consider programming model complete perhaps wait months like htmlbars trollface cc tomdale wycats", "num": "11721", "d": "7/2015"}, {"title": "component helper documentation missing", "body": "documentation existed since helper moved longer documentation", "num": "11720", "d": "7/2015"}, {"title": "ember component functional initializing component self", "body": "upgraded latest version ember noticed potential issue component function observes outercontext attribute actually initialized even actual component initialized ember version demonstrate following hbs inserts testcomponent previous version ember testcomponentjs previous versions ember alert used work successfully however current version ember selfthis variable referred window object component thought due feedloadedchanged function initialized component self initialized current version ember current version ember made following changes didinsertelement captures self component variable self original alert function called variable exist code fixes issue javascript export default embercomponentextend didinsertelement function var self selfset self observes parentcontrollerfeedloaded sequence alerts occurrs application loaded feedloadedchanged feedloadedchanged self initalized feedloadedchanged feedloadedchanged self initalizedtrue original alert initialization component function component self issue locks irc chat recommend using new component lifecycle hooks", "num": "11719", "d": "7/2015"}, {"title": "ember infinite loop deprecation warning triggered", "body": "trying upgrade addon trying run test fixture upgrade branch testing component block form like component block form ember goes infinite loop spitting following deprecation warning matter anything within block run test component nonblock form test executes would cause infinite loop", "num": "11718", "d": "7/2015"}, {"title": "deprecations exist prodmin builds", "body": "", "num": "11717", "d": "7/2015"}, {"title": "drop willmergemixin stuff actions supporting actions methods", "body": "lukemelia always kind buggy often resulted people needing use actions", "num": "11716", "d": "7/2015"}, {"title": "applymergedproperties assertion jsonstringifies value", "body": "applymergedproperties assertion calls jsonstringify value regardless use message objects unless known json safely stringified without error entirely unrelated assertion", "num": "11715", "d": "7/2015"}, {"title": "property designated mergedproperties mutate prototype set create", "body": "value merge originalvalue value", "num": "11714", "d": "7/2015"}, {"title": "remove root application view", "body": "toplevel application outlet virtual default like outlets would make styling easier cases would also need applicationview override tag name put application template needed would breaking change needs happen", "num": "11712", "d": "7/2015"}, {"title": "testing component addon fails", "body": "getting error trying test component addon component test worked fine regular ember project test works remove function reproduced brandnew addon project gives error moving section rerunning works add function component rerun fails", "num": "11709", "d": "7/2015"}, {"title": "jsonapi", "body": "use jsonapiadapter jsonapiserializer responses like call get error", "num": "11704", "d": "7/2015"}, {"title": "typeerror read property template null", "body": "since get following error seems thrown somewhere deep htmlbars known problem investigate coming stacktrace", "num": "11703", "d": "7/2015"}, {"title": "use function template inside statement", "body": "code handlebars monthoptions option index option function", "num": "11702", "d": "7/2015"}, {"title": "ember array properly updating template", "body": "jsbin click button add item array loop template display new item exmaplearray show change visit distraction route return see examplearray updated", "num": "11701", "d": "7/2015"}, {"title": "property linkto helper nt update", "body": "ember could changed link class would change accordingly finding ember class set initially nt update dynamically changes jsbin", "num": "11699", "d": "7/2015"}, {"title": "test skipped firefox fix", "body": "", "num": "11698", "d": "7/2015"}, {"title": "uncaught typeerror skip function", "body": "", "num": "11697", "d": "7/2015"}, {"title": "uncaught typeerror skip function", "body": "", "num": "11696", "d": "7/2015"}, {"title": "jquery reference changes", "body": "trying migrate one issues seeing inside component longer ability get element using jquery also noticed undefined seems work tho think may related views deprecated read direct mention changes way jquery referenced inside components", "num": "11694", "d": "7/2015"}, {"title": "error run empty directory packagejson", "body": "howdy following ember tried make first ember app running lines top emberjscom experienced error new macbook pro switched shell created new empty folder installed node ran run got error include full output end issue understand went wrong miss step assumption already packagejson seem mentioned getting started page full paste console sh repospersonal cd keysplitui personalkeysplitui ember new keysplitapp version could find watchman falling back nodewatcher file system events visit info installing create bowerrc create editorconfig create embercli create jshintrc create travisyml create watchmanconfig create brocfilejs create readmemd create appappjs create appcomponentsgitkeep create appcontrollersgitkeep create apphelpersgitkeep create appindexhtml create appmodelsgitkeep create approuterjs create approutesgitkeep create appstylesappcss create apptemplatesapplicationhbs create apptemplatescomponentsgitkeep create bowerjson create configenvironmentjs create gitignore create packagejson create publiccrossdomainxml create publicrobotstxt create testemjson create testsjshintrc create testshelpersresolverjs create testshelpersstartappjs create testsindexhtml create teststesthelperjs create testsunitgitkeep create vendorgitkeep enoent open usersahoganrepospersonalkeysplituipackagejson error enoent open usersahoganrepospersonalkeysplituipackagejson error native", "num": "11693", "d": "7/2015"}, {"title": "routing conflict multiple routes", "body": "jsbin demo following definition js approutermap function put routes thisroute foo function thisresource baz thisroute qux resetnamespace true thisroute bar function thisresource baz thisroute qux resetnamespace true expect following routes available foobaz fooqux barbaz barqux route expect would link links seems though accepting last resource route comment routeresource works expected issue actually goes way back nesting resources well jsbin demo", "num": "11692", "d": "7/2015"}, {"title": "beta remove special case behaviors global paths", "body": "global lookup ember several special global behaviors based capitalization removed chains globals emberbinding globals embergeting global", "num": "11689", "d": "7/2015"}, {"title": "ca nt overwrite component template unit tests", "body": "get following error call without template compiler loaded", "num": "11688", "d": "7/2015"}, {"title": "textfield component shows character typed three times", "body": "jsbin create customized component would like rewrite property observer type character input field three times character stays happening connect property external property issue exist ember version canary version well", "num": "11687", "d": "7/2015"}, {"title": "positionalparams causing extra change notifications initial render", "body": "today must create component extract position args place means currently always dirty even initial render best results wasteful changeevents worse may cause hefty work amplification feel strongly need work hard ensure initial render fully formed initial state ideas extract positionargs static property readable creation component passed read positionargs prototype passed create feels icky qp cause much pain add positional args level note true also invalidate keys initial render also need solve tightly related", "num": "11686", "d": "7/2015"}, {"title": "embercli windows", "body": "thanks time looking got weird enoent error ran screenshot explain got enoent error windows nt make sense looking packagejson file desktop", "num": "11684", "d": "7/2015"}, {"title": "ensure needs correctly deprecated", "body": "", "num": "11683", "d": "7/2015"}, {"title": "sure itemview properly deprecated", "body": "", "num": "11682", "d": "7/2015"}, {"title": "emberselect nt update initial selection binding", "body": "emberselect without placeholder automatically selected first item content updated selection binding along looks like selection binding updated different item first option selected js bin replicating issue", "num": "11681", "d": "7/2015"}, {"title": "ember internals generating deprecation warnings way silence", "body": "get ton embercreate emberkeys deprecations even though using anywhere project reason usual approach silencing deprecations ca nt anything work case assuming coming within ember app even boots", "num": "11680", "d": "7/2015"}, {"title": "loader issue since", "body": "hello noticed issue regarding templatecompiler seems related changes loader package issue appear nwjs nodewebkit applications since compiling templates debug environment always get compileembertemplatecompilerjscompileemberhtmlbarscompile embertemplatecompilerjs successfully loaded found commit cause issue statement wrong nwjs applications also global object check htmlbarscompiler packages registered second loader registry missing main one leading error message checking undefined object fixes problem also simply removing isnode check still let tests succeed well sorry ca nt give jsbin demo since wo nt get errors running browser created github gist instead containing simple nwjs application demonstrate problem", "num": "11679", "d": "7/2015"}, {"title": "input action change fire", "body": "change event seem work actions input helper example range input example text input", "num": "11678", "d": "7/2015"}, {"title": "symbol supported type embertypeof returns object", "body": "emberjspackagesemberruntimelibutilsjs", "num": "11673", "d": "7/2015"}, {"title": "observable property didinsertelement willinsertelement etc", "body": "trying access component method hook fired error thrown create custom property make sure never call false seems like common enough pattern would encourage reactive programming example", "num": "11672", "d": "7/2015"}, {"title": "issue embercomputedoneway", "body": "link var user emberobjectextend firstname null lastname null nickname embercomputedoneway firstname var teddy usercreate firstname teddy lastname zeenny teddyget nickname teddy teddyset nickname teddybear teddybear teddyset firstname lucas teddyget nickname teddybear teddyget firstname lucas set seems change accordingly following code block behaviour comment code shows correct behaviour", "num": "11670", "d": "7/2015"}, {"title": "rerender function doest call render function", "body": "javascript import ember ember export default embercomponentextend render function buffer click function e thisrerender click component rerender called render wo nt called component work well previous version nt know bug feature", "num": "11668", "d": "7/2015"}, {"title": "regression property named buffer component comes null", "body": "output buffer null", "num": "11666", "d": "7/2015"}, {"title": "regression routesend longer unit testable", "body": "tested unit testing route actions via broken refers service conditional never hits sample test reproduce js appfooroutejs import ember ember const set emberset export default emberrouteextend actions update key value set key value testsunitfooroutetestjs import ember ember import modulefor test emberqunit const get emberget modulefor route foo unit route foo test action something function assert const expectedresult bar const route thissubject routesend update foo bar typeerror read property trigger undefined assertequal get route foo expectedresult sets value related", "num": "11663", "d": "7/2015"}, {"title": "rubygems", "body": "would possible release rubygems", "num": "11659", "d": "7/2015"}, {"title": "include license built assets supply info metadata files", "body": "dependant believe bowerjson packagejson need updated include license field homepage field points back repo find bowerjson packagejson generated someone point generated go fix", "num": "11658", "d": "7/2015"}, {"title": "generated controllers creating deprecated arraycontroller", "body": "creating route creating controller ember currently generates emberarraycontroller deprecated see issue using base jsbin", "num": "11657", "d": "7/2015"}, {"title": "regression link query params nt work", "body": "link query params used link actual route different query params nt work anymore sure new introduced since skipped version", "num": "11654", "d": "7/2015"}, {"title": "ember adds event listeners events app nt care", "body": "stupid run event handlers touch move mouse move app uses pointandclick navigation someone interested event add listener remove one interested anymore", "num": "11653", "d": "7/2015"}, {"title": "naming conventions table css", "body": "table exceeds width overflow cut read template column chrome", "num": "11652", "d": "7/2015"}, {"title": "dynamicallyadded angle bracket components nt recognized", "body": "component builds property string anglebracket components inside string printed unescaped component template would expect handlebars recognize anglebracket components however treated normal html tags sure bug something wrong functionality nt supported yet attached jsbin showing potential usecase issue", "num": "11649", "d": "7/2015"}, {"title": "bindings attributes passed helper inner component work properly ember", "body": "defined handlebars item index title edit title input valuetitle used following way array strings changing contents text field update property triggers observers component ember versions work fine jsbin demonstrates behaviour", "num": "11647", "d": "7/2015"}, {"title": "support model unwrapping action helper", "body": "ember nifty feature allowing decorators eg unwrapped action helper find decoration useful ember used bunch things throughout app itemcontrollers gone favour moving controllers components gotten harder one solution could use duck typing eg function exist call decorator unwrap thoughts related also curious private found useful various things eg decorators edit marked public", "num": "11645", "d": "7/2015"}, {"title": "safari amp actions native elements function statements must name", "body": "tldr seen demos rounds awesome new actions helpers combination native elements eg works great chrome safari results error event triggered jsbin examples input select raise error", "num": "11640", "d": "7/2015"}, {"title": "ember component observes triggered twice", "body": "observes property passed template observes function always called twice instead jsbin reproduceunderstand problem", "num": "11638", "d": "7/2015"}, {"title": "value bubbling back controller using didreceiveattrs vs didinsertelement", "body": "canary intentional setting properties didreceiveattrs bubble back controller level didinsertelement didreceiveattrs true property controller stays true didinsertelement true property controller gets switched false", "num": "11637", "d": "7/2015"}, {"title": "removal label bindings", "body": "opening issues spirt tell us private propertiesmethods using see public addon uses property example component looks like one could js appcomponentsinputgroupjs export default embercontrollerextend getbindingpath function return thisget valuebindinglabel however since htmlbars functionality seems disappeared property available info binding path basic principle exposing binding label something would considered part ember api public private strategy abandoned thanks", "num": "11635", "d": "7/2015"}, {"title": "make jquery optional", "body": "use jquery heavily like many reasons decoupling ember making optional would good idea long coreteam support tried track places used implications primary usage around events well auxiliary usage fairly easy replace hope primary use require insight people good knowledge browser difference event dispatching code missed something auxiliary use easier replace basic domoperations bootstrap code firefox outerhtml still needed firefox code findelementinparentelement code replacein code appendto code event listening location changes domlookup code getelementbyid lookup code library access remain even library optional friendly message jquery present code core library registration code view wrapper code code please add list missed something since jquery good patching browserdifference care must taken understand relied", "num": "11631", "d": "7/2015"}, {"title": "ember router nt know without routerrouter testing", "body": "line interacts oddly release channel edge testing call fails call nonsensically clearly passed however change works seems counter failure modes familiar ember error message since nt set subsequent call assertion failed call get targetstate undefined object posting primarily search engines", "num": "11610", "d": "7/2015"}, {"title": "avg detected virus", "body": "seriously doubt guys put virus code seem far legit monthly scan though came back thought guys know", "num": "11607", "d": "7/2015"}, {"body": "seems like although encourage people use proxy anymore", "d": "7/2015"}, {"body": "ember data uses", "d": "7/2015"}, {"body": "martndemus see bin sure good enough workaround another reason use arrayproxy uses emberarray give content arrayproxy sorting uses emberarray instancesort method also curious issue instead use rfc issue propose rough idea basically great place test waters see", "d": "7/2015"}, {"body": "pixelhandler ended snippet sure one api method missing warrants rfc issue", "d": "7/2015"}, {"body": "satchmorun perhpas make pull request website project see", "d": "7/2015"}, {"body": "pixelhandler sure like confirmation first intended expected behavior wrt seems likely maybe supposed behave face least people problem search might least stumble across issue less point", "d": "7/2015"}, {"body": "satchmorun emberjsemberjs issues mainly bug tracking least people problem search might least stumble across issue less point questions usage perhaps ask question stack overflow", "d": "7/2015"}, {"body": "london slack conversation discussed quite thoroughly believe growing consensus change cp syntax return value make consistent js setter think remaining issue preserve caching undefined value", "d": "7/2015"}, {"body": "either case think clearly defect currently x currently", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "looks similar first blush hard imo detail greater though maybe close link", "d": "7/2015"}, {"body": "cp lazy nt recalculate suspect eager observer runschedule code causing cp consumed", "d": "7/2015"}, {"body": "seen jsbin", "d": "7/2015"}, {"body": "seems work properly beta unless misinterpretting console output", "d": "7/2015"}, {"body": "issue arraycomputed reducecomputed well behaved cp nontrivial fix part unlikely backported", "d": "7/2015"}, {"body": "confirm works properly beta checked sorry time thanks help", "d": "7/2015"}, {"body": "sorry time thanks help need sorry sorry bug exists thanks reporting", "d": "7/2015"}, {"body": "orkon message seems catching bug nonunique ids introduce variety unexpected behaviors", "d": "7/2015"}, {"body": "mixonic ca nt remove element id create different place id nonunique id never rendered twice boolean condition ember thinks plus rewritten like works use case app render component either separately first item list course find workaround looks like kind bug", "d": "7/2015"}, {"body": "orkon since released today tested jsbin example still see issue", "d": "7/2015"}, {"body": "pixelhandler thanks tried test ember could make helper work", "d": "7/2015"}, {"body": "open repo", "d": "7/2015"}, {"body": "moved issue emberdev", "d": "7/2015"}, {"body": "browse repo", "d": "7/2015"}, {"body": "built source also every build travis automatically publishes emberdocsjson file could use file build api docs version also project emberjsapi intends make versioned api docs much easier", "d": "7/2015"}, {"body": "nt really bug though going close continue convo community slack like", "d": "7/2015"}, {"body": "okay cool inside clone repo works thanks", "d": "7/2015"}, {"body": "sberan using chrome alert fire first time click also updated twiddle use release channel ember emberdata see click button alert displayed sure able see issue lost click event perhaps specific steps reproduce issue", "d": "7/2015"}, {"body": "design sorta javascript works computed properties properties provided prototype object interested possible properties used", "d": "7/2015"}, {"body": "ah ok makes sense nt realize skipped prototype fields sorry thanks tip problem though gives etc properties know simple way get filtered version property names ie keys passed minus autogenerated metadata properties including customsuperclass property names reason try create assertion helper determines whether two ember objects contain data guess makes sense skip computed properties comparison autoinitialized properties causing problems one instance set value instance explicitly set default value", "d": "7/2015"}, {"body": "ah ok makes sense nt realize objectkeys skipped prototype fields sorry ya reference basically function keys obj var result obj amp amp typeof obj object var key obj objectprototypehasownpropertycall obj key resultpush key return keys know simple way get filtered version property names ie keys passed emberobjectextend minus autogenerated metadata properties including customsuperclass property names unfortunately theory browsers faster could use pesky internal properties unfortunately like running ember slow mode see related issue opened time ago reasonable solution likely following function properties obj var result var key obj keycharat next typically private stuff prefix typeof obj key function next functions resultpush key return true reality likely something ember ship someone else interested pushing forward opening issue rfc repo likely good start githubcomemberjsrfcsissuesnew", "d": "7/2015"}, {"body": "great thanks much swift response detailed examples", "d": "7/2015"}, {"body": "related", "d": "7/2015"}, {"body": "ya duplicate", "d": "7/2015"}, {"body": "olivierlesnicki guides repository post issues related guides would great could update close issue reopen new one needed guide repos thanks", "d": "7/2015"}, {"body": "jimbeaudoin done", "d": "7/2015"}, {"body": "actually still since api defined source code", "d": "7/2015"}, {"body": "knownasilya yes right defined think issue maybe pr new text", "d": "7/2015"}, {"body": "op pr issue fine till someone else", "d": "7/2015"}, {"body": "template rerendered rerendering cause cp consumed stream dirty fix calling force invalidation remove notifying invalidate cache demo arguably volatile cp always considered dirty think would made original example work setting volatile like ultimately cause work upon rerender needed", "d": "7/2015"}, {"body": "thanks rwjblue actually works using according docs private api something", "d": "7/2015"}, {"body": "thanks pointing nt updated", "d": "7/2015"}, {"body": "jsbin sharing array component prototype small write little back", "d": "7/2015"}, {"body": "good write happened upon much complex component integration tests started blowing weird behaviour tests following fixes simple case real life case", "d": "7/2015"}, {"body": "oops think mistook flushed need extend linkto helper mylinkcomponent", "d": "7/2015"}, {"body": "found helper keyword htmlbars different nt", "d": "7/2015"}, {"body": "found linkto helper keyword htmlbars different nt yes different little extra massaging make work javascript appmylinkcomponent emberlinkcomponentextend positionalparams params init function thissuper arguments emberloggerlog event thisget eventname didreceiveattrs function thisattrsparams thisget params thisattrshasblock true demo downsides approach hard coded block mode meaning ca nt use component inline implement along ensure available internally may fixable ember start using unsure swap using nt properly escaped likely somewhat private api disappointed caveats aside would like make work properly imho users able extend custom links invoke", "d": "7/2015"}, {"body": "rwjblue works thank much helpful instructions nt know exist could nt find doc likely somewhat private api risk use imho users able extend emberlinkcomponent custom links invoke yes agree think close issue please reopen needed thank", "d": "7/2015"}, {"body": "suggestions applicationview routable views sections using applicationview", "d": "7/2015"}, {"body": "nt see anything related routable view special top level view use body scroll animation addingremoving classes body tag", "d": "7/2015"}, {"body": "applicationview routable view absolutely special top level view use body scroll animation addingremoving classes body tag see viable work around use cases routable components land", "d": "7/2015"}, {"body": "alternatively structure template invoke component directly application template way add styled element like avoid using somewhat bizarre work around", "d": "7/2015"}, {"body": "rwjblue thought routable meant adding route router see course suggestion good though feels like hack appviewsapplicationjs appapplicationviewjs import ember ember export default embercomponentextend alternatively structure template invoke component directly application template ryanflorence would happy ok everything component code disturbs", "d": "7/2015"}, {"body": "suggestion good though feels like hack yep agreed ok everything component code disturbs yep agreed smilingimp", "d": "7/2015"}, {"body": "going close nt actionable bug point clear path forward routable components", "d": "7/2015"}, {"body": "using quotes ember automatically concats set curlies emits combined source together attribute value things like work believe case concat called single argument simply return input value allow work properly work around quote attribute attach values hbs demo jsbin unfortunately advice contrary believe changing support angle bracket components quoted nonquoted attributes invoking components treated differently", "d": "7/2015"}, {"body": "orkon looks like rwjblue already made bin well another one added console log attribute values see undefined present", "d": "7/2015"}, {"body": "discussed slack last night came satisfactory solution apparently clean solution available routable components become thing hacked around creating component invoke application template javascript import ember ember export default embercomponentextend didinsertelement let applicationviewelement parent applicationviewelementaddclass foobarapplication pro triggers deprecation warning con works fine pure css gets messy want anything js based class timing somehow relevant", "d": "7/2015"}, {"body": "feared much", "d": "7/2015"}, {"body": "simplest thing though annoying right following javascript appviewsapplicationjs appapplicationviewjs import ember ember export default embercomponentextend classnames foobar jsbin global demo", "d": "7/2015"}, {"body": "closing nt really bug solution works fine interim solution routable components land", "d": "7/2015"}, {"body": "danke", "d": "7/2015"}, {"body": "careful tho ditched hack favor solution rwjblue proposed made applicationview component access controller anymore seems work still need support want incrementally migrate probably better using something like gosh feel dirty javascript import ember ember emberversionstartswith var baseclass emberview else var baseclass embercomponent export default baseclassextend classnames foobar", "d": "7/2015"}, {"body": "miguelcobain issue strange input loose focus button clicked perfect example think sometimes contextual solution needs thought twiddle simplifies using events actions however expected behavior combining actions events result expected behavior use action event changes way pointer works browser actions events seems break web opinion though actions promise lot power think strong reason rely standard browser behaviors ie events case events actions break user expected behavior way mouse works browser break web actions sure fix actually example order use events actions developers supposed manually become responsible triggering focus inputs seems counter productive also docs longer documents use events docs views begin rant discouraging build browser apps nt rely browser events instead relied incomplete implementation actions instead end rant would argue use events need events mix actions especially input events", "d": "7/2015"}, {"body": "believe intentional views deprecated removed", "d": "7/2015"}, {"body": "definitely add documentation helper place view though", "d": "7/2015"}, {"body": "mikenorth using really helper nt think using component template equivalent rendering helper looks like master branch guides project also longer includes page renderingwithhelpers see", "d": "7/2015"}, {"body": "yeah replaced headers tree view general issues guides reported", "d": "7/2015"}, {"body": "recall another related issue quicky find", "d": "7/2015"}, {"body": "dmagunov stefanpenner issue one duplicates", "d": "7/2015"}, {"body": "ya closing duplicate", "d": "7/2015"}, {"body": "hello mmun rwjblue love become new contributor think issue good one start ca nt find work solve issue would mind giving tips thanks", "d": "7/2015"}, {"body": "attempted partially resolve issue would appreciate advice fully satisfying issue problems pr thank", "d": "7/2015"}, {"body": "dmagunov kind redirect eg also api docs nt mention using url see", "d": "7/2015"}, {"body": "dmagunov sounds like browser history url random ordered query params expect back button resolve history url random ordered query params right updating url nt necessarily push url browser history update url sorted params", "d": "7/2015"}, {"body": "sorta expected extremely workaround", "d": "7/2015"}, {"body": "seems pretty weird definitely need fix guess happening using emberselect registered view select known issue globals resolver causes leading dash completely ignoreddropped look view select happening get emberselectview need address two ways fix globals resolver honor leading dash add helpful warning tells using route named select defining appselectview prevent using view select", "d": "7/2015"}, {"body": "initially thought bug within routable components reported problem switch route something else thus might deep problem within glimmer somthing else", "d": "7/2015"}, {"body": "rwjblue please take look pr tackle second steps address adding warning", "d": "7/2015"}, {"body": "proved wrong jsbin", "d": "7/2015"}, {"body": "marksalpeter think issue ran documented well instead use function use templates see", "d": "7/2015"}, {"body": "pixelhandler thanks investigating sending pr showing solution", "d": "7/2015"}, {"body": "rwjblue perhaps use cleanup label", "d": "7/2015"}, {"body": "ill tackle tomorrow morning", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "embwr version put together jsbin embertwiddle demonstrating", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "think might something sortable modifying elements adding classes styles", "d": "7/2015"}, {"body": "rwjblue embertwiddle shows ember", "d": "7/2015"}, {"body": "issue ember jqueryui sortable", "d": "7/2015"}, {"body": "thoughts", "d": "7/2015"}, {"body": "seeing ember relevant bits component javascript componentspagelistjs didinsertelement function var pagelistcomponent ulprocedure sortable items li firstchild update function event ui var sortorder ember sortable toarray attribute dataid var pagemodels handlebars pages page page pageid display pagedisplayindex", "d": "7/2015"}, {"body": "ping rwjblue stefanpenner wagenet", "d": "7/2015"}, {"body": "dmagunov aware issue nt gotten yet krisselden implemented may still maintain ember drag amp drop code maybe free time week", "d": "7/2015"}, {"body": "thank reporting dgeb could take look", "d": "7/2015"}, {"body": "yep saw get fix tests asap sorry mdehoog rwjblue", "d": "7/2015"}, {"body": "worries canary smilingimp thanks working", "d": "7/2015"}, {"body": "thanks speedy fix guys", "d": "7/2015"}, {"body": "cc machty", "d": "7/2015"}, {"body": "thisqpcache objectcreate null", "d": "7/2015"}, {"body": "source map files currently work pending transforms fully ported babel work sure hints files removed output", "d": "7/2015"}, {"body": "calling entering route second time gets rid error really necessary", "d": "7/2015"}, {"body": "nt believe intend observable", "d": "7/2015"}, {"body": "ok changed everything works fine thanks", "d": "7/2015"}, {"body": "reference thank saladfork attributebindings ember ember", "d": "7/2015"}, {"body": "hand component gets called like element gets id", "d": "7/2015"}, {"body": "problem seems line need something like attribute depending computed property object cp depend attribue tried setting directly seems late change hand init works expected official supported way", "d": "7/2015"}, {"body": "feature deprecated documented whether feature supported appear regression bug work someone need confirm whether undocumented use even still work", "d": "7/2015"}, {"body": "headsup nt support id changing initial render although believe support bindings used populate initial render someone likely verify statements may case timings changed preventing id set right time guess", "d": "7/2015"}, {"body": "supported public api issue attribute set essentially hard coded look specifically make work grabbing could likely fix handling essentially moving working test pr", "d": "7/2015"}, {"body": "questions ember version result ember cli version result contents", "d": "7/2015"}, {"body": "ember version ember cli apphelperstesthelperjs js import ember ember export function testhelper params hash return test thing export default emberhelperhelper testhelper", "d": "7/2015"}, {"body": "ember version actually latest github master happens release", "d": "7/2015"}, {"body": "experience issue exact version numbers calling helper part component like", "d": "7/2015"}, {"body": "stevesims think create jsbin jsfiddle example links", "d": "7/2015"}, {"body": "thagul see input behavior expected desktop safari using developer tools mobile device connected desktop developer tools show proper html curious ember bug mobile safari bug", "d": "7/2015"}, {"body": "also seen issues attributes mutating initial render basically browsers bugs nt accept attrs set specific ways could result fix introduced htmlbars recently would handy confirm expected output pixelhandler said", "d": "7/2015"}, {"body": "html generated mobile safari autocorrect following html generated standard tag shown first post suppose bug ember mobile safari standard tag works", "d": "7/2015"}, {"body": "html generated mobile safari input tag withautocorrect following totally mobile safari bug chrome desktop safari work expected said likely something wont fix quickly may find workaround", "d": "7/2015"}, {"body": "chrome safari mobile safari ios simulator safari", "d": "7/2015"}, {"body": "likely properly addressed finish disambiguatation work attrs props likely force slot attrs always", "d": "7/2015"}, {"body": "stefanpenner thought something mobile safari nt like way input tag generated using ember tag written ember bug using normal tag mobile safari set right value autocorrect using ember ignored", "d": "7/2015"}, {"body": "feels like always something needs implemented ember unlikely automatically observer length every array template example developer use long form call needed changes observer demo", "d": "7/2015"}, {"body": "able use example without emberdata watch changes array contents still pass array argument still brainstorming better ways handling also model property array would cause recompute watch property array must use observer document best path would tweak robert suggestion slightly", "d": "7/2015"}, {"body": "tweaks", "d": "7/2015"}, {"body": "thanks rwjblue mixonic ember syntax looks exciting one non obvious thing looked see helper aliases still way generate long form corresponding working test", "d": "7/2015"}, {"body": "really style testing suggested perfect testing helpers key test actual template invocation intend use love get helper tests update embercli integration tests use infrastructure cc trabus", "d": "7/2015"}, {"body": "also going close nt seem like bug correct mistaken", "d": "7/2015"}, {"body": "create issue add helper tests", "d": "7/2015"}, {"body": "ebenroux little confused trying parse seems like may issue chrome", "d": "7/2015"}, {"body": "tell emberchrome combination plain select tag within ember loaded works fine ember application even plain select tag strange behaviour sneaky suspicion something way chrome fires events speculation anyhow nt big deal", "d": "7/2015"}, {"body": "ebenroux provide jsbin accurately demonstrates way confidence look exact code looking", "d": "7/2015"}, {"body": "ebenroux jsbin would definitely help ask chrome issue definitely open issue upstream tracker work around maybe wo nt able fix issue nt know", "d": "7/2015"}, {"body": "jsfiddle never get jsbin run steps chrome drop displays red drop combo box hover blue press shift key click another application browser drop display blue drop still red selected easily bind change show nt fire", "d": "7/2015"}, {"body": "ebenroux able reproduce mac chrome perhaps recoding video quicktime posting link location dropbox would help demonstrate issue also steps reproduce seem like edge case press shift click another app", "d": "7/2015"}, {"body": "created short video demonstrate windows chrome version keep one eye select captions else try pausing everysooften know somewhat edge case one nt really care much testers picked taking screen shots logged issue", "d": "7/2015"}, {"body": "give another example", "d": "7/2015"}, {"body": "give another example already pluggable", "d": "7/2015"}, {"body": "emberonerror gives us access error message stack course great result example supposed know error comes logging objects able see view destroyed weird way view constructor parentcontroller etc immediate debug except monkey patch emberdebug log objects basically could pass objects addition error message emberassert make accessible emberonerror would", "d": "7/2015"}, {"body": "supposed know error comes emberobjectextenddropobject emberobjectextendretainobjectobjectreopenwilldestroy tells came nt provide context code path taken solution exists without platform support make apps dev mode hundreds times slower theory could make mode optin note duplicate arises every months commitment chrome team provide us platform support see details still nt landed may need add longstacks opt going quite costly", "d": "7/2015"}, {"body": "ok meant stack understand undefined object destroyed additional logs understand object view right col panel without additional log debug fine adding logs emberdebug thinking improvement would save lots time developers getting ember", "d": "7/2015"}, {"body": "fine adding logs emberdebug thinking improvement would save lots time developers getting ember think anything optin longstack traces would accepted likely implement tonightsoon hoping friends chrome team would land much faster better work sooner approach would provide useful stacktrace explorer", "d": "7/2015"}, {"body": "sure following thanks case line causing exception given destroy method inside run loop would able trace back function calling yes nt know great", "d": "7/2015"}, {"body": "yes nt know great yes", "d": "7/2015"}, {"body": "great", "d": "7/2015"}, {"body": "curious leooo stefanpenner type request moved rfc", "d": "7/2015"}, {"body": "curious leooo stefanpenner type request moved rfc general yes although maybe fast track thought process please feel free share thoughts nt controversyobjection personally put ages public api needed intend implement something already understood exists promise libs place bb rsvp time tradeoff likely implement time would take write rfc rfc typically used flesh unknowns fairly confident solution accept fact embodied brain risk suspect show code wont risk said likely accept detailed explanation value maybe worth left inline docs", "d": "7/2015"}, {"body": "believe dupe", "d": "7/2015"}, {"body": "ah indeed duplicate sorry", "d": "7/2015"}, {"body": "nathanosman problem time confirm issue contains relevant info", "d": "7/2015"}, {"body": "read issue appear contain relevant details issue js bin sample issue demonstrates exact problem", "d": "7/2015"}, {"body": "embercli", "d": "7/2015"}, {"body": "specific version ember", "d": "7/2015"}, {"body": "ember embercli rwjblue test new app put code wrong place", "d": "7/2015"}, {"body": "imaxhung may helpful able post demonstrating issue", "d": "7/2015"}, {"body": "stefanpenner ok check input field dom element contain data attributebut nt say change ember works find found emberkeys nt contain additional attributes templates since", "d": "7/2015"}, {"body": "reason export deprecated version provide nice warning message use deprecated version placed example ing unfortunately use internal nondeprecated version parent class components views used internally updatechange attributebindings might expect fix would need override deprecated class currently exported somewhere around custom would call main parent class", "d": "7/2015"}, {"body": "think fix probably containerview select etc", "d": "7/2015"}, {"body": "issue seems components inherit views support fix code break sure call release post started notes", "d": "7/2015"}, {"body": "novtor take look see duplicate issue", "d": "7/2015"}, {"body": "reopen demonstrated duplicate", "d": "7/2015"}, {"body": "duplicate opened another one time ago duplicate one independent fact say transition retry work refreshmodel query params dynamic segments exception thrown stacktrace present console problem page visualisation issue describe independently dynamic segments put route result afaiu model refreshed several times different qp browser history hold one reference route url let say user searches artist artistsomeartist looks artist songs artistsomeartistsongs amp artistsomeartistsongs amp let say artistsomeartistsongs stylerock would create one entry browser history artist songs user clicks back browser button routed artistsomeartist route enter input submit submit submit click back browser button work amp amp history hand use send replace query params works expected history pushed", "d": "7/2015"}, {"body": "stefanpenner explanation clear think duplicate issue", "d": "7/2015"}, {"body": "rwjblue commit whatever needed work day friday happy help", "d": "7/2015"}, {"body": "take", "d": "7/2015"}, {"body": "ready work", "d": "7/2015"}, {"body": "take", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "take", "d": "7/2015"}, {"body": "looked package seems like usages tests updates needed", "d": "7/2015"}, {"body": "submitted pr emberroutingviews", "d": "7/2015"}, {"body": "believe saladfork going look emberviews today circle back pixelhandler things oss friday work enforcement items", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "enforcement added", "d": "7/2015"}, {"body": "pleasure business yall", "d": "7/2015"}, {"body": "birbird searched andor posted stack overflow yet testing question perhaps reach embercommunityslackcom group testing channel well since question issue would consider closing", "d": "7/2015"}, {"body": "gladly reopen turns actual issue preventing solved issue quick reproduction problem would help", "d": "7/2015"}, {"body": "justinhackin able mimic scenario new jsbin perhaps based one contributing guides", "d": "7/2015"}, {"body": "code looks functionality different vs return values setters matter sure port one form maintaining return values", "d": "7/2015"}, {"body": "actually nt follow pattern properly need return value set bad please ignore", "d": "7/2015"}, {"body": "actually nt follow pattern properly need return value set bad please ignore problem coffeescript implicit returns trixie", "d": "7/2015"}, {"body": "petey jsbin example describe detail reproduce issue", "d": "7/2015"}, {"body": "test case navigate click checkbox labeled inherited methods disappear click checkbox labeled inherited methods appear existed includes private methods", "d": "7/2015"}, {"body": "petey jsbin example describe detail reproduce issue pixelhandler ia actually docs issue petey believe reported cc locks", "d": "7/2015"}, {"body": "relevant html relevant js", "d": "7/2015"}, {"body": "petey perhaps close issue emberjs project reopen project also curious issue yuidoc general found work around refresh page see correct info also noticed unexpected behavior using generated yui docs ember website usually refresh page", "d": "7/2015"}, {"body": "opened", "d": "7/2015"}, {"body": "regression check says introduced", "d": "7/2015"}, {"body": "alltouch curious possible use readonly attribute value readonly attribute false wondering already found workaround add context issue also based appears presence attribute intended block input prevent text input element also see", "d": "7/2015"}, {"body": "mixonic alltouch sure bug could improper use readonly attribute think html standard use attribute value assignment", "d": "7/2015"}, {"body": "pixelhandler correct presence attribute makes readonly dom ignores actually attribute value though behavior release think check property existing element set instead would make work except property readonly readonly property set nt work", "d": "7/2015"}, {"body": "krisselden seems like may want special case readonly like maxlength sound right", "d": "7/2015"}, {"body": "mmun suggested built map boolean attributes consult doable something done htmlbars", "d": "7/2015"}, {"body": "old check code require map built comparing lowercase key names", "d": "7/2015"}, {"body": "thanks bringing ping rest team see thoughts", "d": "7/2015"}, {"body": "rwjblue likely branch becomes stable easier community propose backports etc", "d": "7/2015"}, {"body": "yes plan general branch need maintain tag tagging really nt yet might obvious repo branches", "d": "7/2015"}, {"body": "blimmer please submit pr commits branch", "d": "7/2015"}, {"body": "tried cherrypick realizing commits cherrypick cleanly routing service introduced unfortunately nt know guts ember well try see clear way forward", "d": "7/2015"}, {"body": "others following along simple example tests broken stacktrace update example proposed fix tests passing", "d": "7/2015"}, {"body": "cherrypicked fix got working see", "d": "7/2015"}, {"body": "blimmer point release highly unusual prefer set precedent anything security releases keeping rather prioritize fixing issues preventing upgrading", "d": "7/2015"}, {"body": "bet embereasyform year ago single biggest point pain upgrading ember versions since handlebars ember hobbling along using shim hacked versionbyversion order get easyforms need rewrite every form production app would take week ca nt sell boss seems like blocked scoped helpers wo nt fix addon get even landed going release version easyform support showed publish fork ember using right app", "d": "7/2015"}, {"body": "bcardarella curiosity would accept fixespatchesadjustments simpleform blimmer likely many others nt stay stuck", "d": "7/2015"}, {"body": "stefanpenner easyform issues stem around move htmlbars specifically could interim release help ease migrations packaged compiled htmlbars templates someone wants merge release far embereasyform embercli willing move forward scoped helpers ember", "d": "7/2015"}, {"body": "merging still addons embertable ported yet block upgrading", "d": "7/2015"}, {"body": "merging unlikely happen block upgrading merging similar fix stretch may possible suspect could drop hooks expose addon similar although tricky without full beta cycle", "d": "7/2015"}, {"body": "stefanpenner already fixed", "d": "7/2015"}, {"body": "stefanpenner already fixed perfect", "d": "7/2015"}, {"body": "novtor correct oneway cp aliases destroyed set value mean oneway suggest use route hooks set property directly page loaded seems like looking controllers singletons thus oneway alias stomped remains disconnected pretty positive docs going close let know missed something", "d": "7/2015"}, {"body": "thank mixonic info see docs look", "d": "7/2015"}, {"body": "hi mixonic first able find doc oneway bindings controllers able find appropriate hook want try explain mean use case really bind queryparams template fields durable manner example user uses bookmark clicks browser back button cases fields got sync query parameters values use convention project fields templates names corresponding queryparam field suffix example postcontroller date query parameter datefield bound template initializing becomes convention tried implementing activate hook queryparams set moment controller initialized didtransition hook reachable app think lot routes use hook already even bubble event returning true result calling hook implementation never called could advice easy way keeping template fields synced query parameters", "d": "7/2015"}, {"body": "believe duplicate", "d": "7/2015"}, {"body": "timkendrick take look see issue would nice coalesce issue previously reported one", "d": "7/2015"}, {"body": "gladly reopen demonstrated duplicate", "d": "7/2015"}, {"body": "thought bit think add deprecation like emberview x expose deprecated using emberlegacyviews addon need land master cherrypicked stable x remove export beta master addon used martndemus want tackle", "d": "7/2015"}, {"body": "rwjblue sure", "d": "7/2015"}, {"body": "big confirm absolutely deprecated removed", "d": "7/2015"}, {"body": "upgrade path container view", "d": "7/2015"}, {"body": "basically move programmatically manipulating childviews something like container view template helper", "d": "7/2015"}, {"body": "martndemus definitely seems deprecation guide worthy many cases sufficient however two parts complete upgrade path first must able dynamically render component helper addresses second must able dynamically decide arguments proposal handlebars syntax get approved add operator ember time latest", "d": "7/2015"}, {"body": "seems pretty bad kinda nt believe description pretty easy reproduce", "d": "7/2015"}, {"body": "findings first load select gets rendered using change first time select gets rendered using change second time select gets rendered using change third time rendering done", "d": "7/2015"}, {"body": "findings view value property continues get set correctly binding seems stop working extended jsbin two observers selected value one extended select view one bound attribute controller init view observed first switch second controller observed second view observed second view observed second switch first controller observed first view observed first switch second controller observed second view observed second switch first view observed first switch second view observed second", "d": "7/2015"}, {"body": "using embercli version ember", "d": "7/2015"}, {"body": "ah quickly read issue acceptance tests app nt fully initialize first occurs sure app boots directly url specified test", "d": "7/2015"}, {"body": "aha got rewrote test javascript test image template added store function assert var store applicationcontainerlookup store main visit andthen function var templates storeall template toarray filterproperty displayname image perhaps nugget go docs instanceinitializers explained", "d": "7/2015"}, {"body": "unsure go cc trek locks", "d": "7/2015"}, {"body": "maybe note deprecation warning start going hit users right migrating separately main doc instance initializers", "d": "7/2015"}, {"body": "fetching store application manner definitely bending lot rules especially relying semantics api flagged doubleunderscore think need add deprecation guide issue likely helpful enough wayward souls going close issue please feel free reopen missed something", "d": "7/2015"}, {"body": "error occur observer function dependent key arguments deprecated see", "d": "7/2015"}, {"body": "teddyzeenny rwjblue unfortunately ember inspector throws error using form observer fn key fixed released version throws error", "d": "7/2015"}, {"body": "jerel provide demo application demonstrates would make actionable", "d": "7/2015"}, {"body": "also sure test canary", "d": "7/2015"}, {"body": "sure sorry nt include initial report jsbin using canary demonstrates problem note html comment noticed seems happen template tag attribute tag inside element teardown works fine", "d": "7/2015"}, {"body": "krisselden pretty sure leak discussed day chains orphan childnodes try get failing test together afternoon", "d": "7/2015"}, {"body": "comparing two heap dumps without leak confident statement going attempt isolated test next", "d": "7/2015"}, {"body": "yesterday quite busy reasons ended good fact finding session ended reduced example failing test find time today transpose test ember test suite", "d": "7/2015"}, {"body": "cc mmun", "d": "7/2015"}, {"body": "wow awesome", "d": "7/2015"}, {"body": "mmun thought removing stuff", "d": "7/2015"}, {"body": "mmun thought removing stuff yes deprecations needed exist", "d": "7/2015"}, {"body": "easier example nested tags clicking block shows action called component template commented left bubble added examples written previous leaving reference scenarios tested easier example nested tags clicking block gives add bubblesfalse event nt bubble another example using nested inside", "d": "7/2015"}, {"body": "believe expected action attach inner dom node negate action handled parent dom node want handle kind event bubbling using dom event handlers access event bubbling controls may appropriate", "d": "7/2015"}, {"body": "thanks completely misread guide mean event would nt bubble component sweatsmile", "d": "7/2015"}, {"body": "andreyutka perhaps adding check subscription action feature would worth discussing rfcs repo raise question issue rfc repo start process considering new api support idea see also heard type request may nice get thread going forums ask around embercommunityslackcom group see patterns people use aside checking subscription already exists prior sending action think design around throwing error intentional seems like discussion needed order make case check subscription action support", "d": "7/2015"}, {"body": "believe martndemus interested one", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "confirm", "d": "7/2015"}, {"body": "hiding behind feature flag easy finding way reload ember feature flag enabled seems impossible done feature flags", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "fixed martndemus days", "d": "7/2015"}, {"body": "note believe different issue least behavior steps recreate different", "d": "7/2015"}, {"body": "actually believe shows may api", "d": "7/2015"}, {"body": "issue", "d": "7/2015"}, {"body": "imagine root cause seems issues updating attributes initial render", "d": "7/2015"}, {"body": "super useful see route always doublecheck see current route name would eliminate source confusion especially seems best practice route handle actions manipulating model ideally route model", "d": "7/2015"}, {"body": "discussed core team meeting afternoon decided like keep private mentioned chimed make public good way public api also use suggestions shoudl remove ambiguity davidgoli mentioned", "d": "7/2015"}, {"body": "thanks opening issue discussion going close discussed decided keep private", "d": "7/2015"}, {"body": "sounds good create alias immensely useful shame getting overlooked shall carry", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "also find using least times apps", "d": "7/2015"}, {"body": "saladfork discussed core team meeting could submit pr updating", "d": "7/2015"}, {"body": "may rfc issue", "d": "7/2015"}, {"body": "close", "d": "7/2015"}, {"body": "something right cc rwjblue page probably exist page include ugh perhaps someone actually preview documentation changes", "d": "7/2015"}, {"body": "docs moved namespace going away need updated use new location", "d": "7/2015"}, {"body": "looks resolved latest release eyes closing", "d": "7/2015"}, {"body": "provide jsbin demo showing mean", "d": "7/2015"}, {"body": "sorry mistake", "d": "7/2015"}, {"body": "thanks suspect misalignment app app instances leaking something likely instance", "d": "7/2015"}, {"body": "appears introduces retained dom nodes without test runs test runs looks really strange", "d": "7/2015"}, {"body": "believe found spiked solutions issues reported provided example afternoon start applying appropriate solutions various offending projects delta comparison heap snapshot also worth nothing exactly leaked emberapplications identified least different ways emberapplication instances leak ultimately resulted", "d": "7/2015"}, {"body": "x first patch x second amp third patch x x x x confirm still prevent leak question", "d": "7/2015"}, {"body": "alright think leak fixed kinda many discrete parts close close things merged released", "d": "7/2015"}, {"body": "worth noting problem partially related fact nt purge modules included would fix small part larger leak maybe something worth exploring road", "d": "7/2015"}, {"body": "hmm strange deprecated removed", "d": "7/2015"}, {"body": "must related", "d": "7/2015"}, {"body": "ya likely going able look today relatively easy piece together differences mind submitting fix", "d": "7/2015"}, {"body": "voila", "d": "7/2015"}, {"body": "fix merged release thx", "d": "7/2015"}, {"body": "available template contexts implemented template layer keyword intended available components js code general would suggest trying different things components js code based block supplied much better sort thing template instead", "d": "7/2015"}, {"body": "component would work well course issue fails silently runtime", "d": "7/2015"}, {"body": "actually keyword name underlying component textarea trick leading means private component ymmv", "d": "7/2015"}, {"body": "prefixed dash private", "d": "7/2015"}, {"body": "provide repo demonstrates make actionable", "d": "7/2015"}, {"body": "version newest version need specify order use", "d": "7/2015"}, {"body": "twokul suspect issue", "d": "7/2015"}, {"body": "running using array flagging integration works tests time tests stefanpenner work extracting failing tests repo thx", "d": "7/2015"}, {"body": "believe bug nt ember repo rather", "d": "7/2015"}, {"body": "default test helper behavior changed unit integration patch release embertesthelpers agree stefanpenner may hitting please confirm bumped testhelpers well cause flag old component test modules restore old behavior", "d": "7/2015"}, {"body": "thanks suggestions digging deeper problem obscured something app munching rsvp errors tests null symptom prior test tearing correctly app root element trying reused real problem template like following simply nullifies weird interplay removing element adding input raises post repo demonstrating desired", "d": "7/2015"}, {"body": "appears issue test helpers end bad state like open issue repo", "d": "7/2015"}, {"body": "absolutely would nt ember related though", "d": "7/2015"}, {"body": "recent update test helpers properly handle errors setup fail like", "d": "7/2015"}, {"body": "yes would say would still ember issue though really related issues title description make demo jsbin reproduces", "d": "7/2015"}, {"body": "reproduce jsbin seems happening testing move issue embertesthelpers", "d": "7/2015"}, {"body": "looking", "d": "7/2015"}, {"body": "yup", "d": "7/2015"}, {"body": "writing test", "d": "7/2015"}, {"body": "submitted fixed", "d": "7/2015"}, {"body": "wowzers impressive response time smile thanks stefan", "d": "7/2015"}, {"body": "debugging jsbin example pretty sure caused implementation passing referred number items remove conten method property line methods called finally reached takes param see information set none existing items acutally really replaced guess quick fix would override gather length inserted objects", "d": "7/2015"}, {"body": "unsure aim support sparse arrays historically array polyfils taken path lodash ignored concept sparse arrays note nt say nt support rather context", "d": "7/2015"}, {"body": "jherdman think would worth creating rfc desired behavior looking alternatively start discussion around best practices managing sparse arrays ember think idea become rfc doc raise question issue rfc repo", "d": "7/2015"}, {"body": "quite interested time premium late realistically problem nt bad relatively easy work around comfortable closing ticket unless someone feels valuable placeholder conversation work done", "d": "7/2015"}, {"body": "many libs like lodash treat sparse arrays exceptional suspect alright us well yes truly blocker reconsider", "d": "7/2015"}, {"body": "going take stab ok", "d": "7/2015"}, {"body": "going take stab ok ofcourse", "d": "7/2015"}, {"body": "mean deprecated", "d": "7/2015"}, {"body": "btecu", "d": "7/2015"}, {"body": "require cleanup", "d": "7/2015"}, {"body": "weird use case ideally component nt interact block yielding seems weird hook triggered children grandchildren rerendered using mutationobserver seems correct", "d": "7/2015"}, {"body": "mitchlloyd curious may value discussing solutions yielded context shoulddoes interact outer component another place perhaps discussion forums may solutions already discussed current work website guide updates also may directly related think may valuable discussion comes raising question pose issue instead discussemberjscom perhaps consider closing issue moving discussion discuss forum andor creating rfc propose solution behavior parent child components yielded content changes", "d": "7/2015"}, {"body": "didinsertelement called didreceiveattr willrender called attrs refreshed dom refresh calling rerender anyway", "d": "7/2015"}, {"body": "working old code taking html content model inserting iframe setting heights etc needed rerendered different item clicked thanks mentioning willrender looks like quickfix using didrender instead didinsertelement works case go time wanted signal change occured possibly contradicted doc nt see changelog", "d": "7/2015"}, {"body": "mszweda change documented sure site docs keep changes", "d": "7/2015"}, {"body": "orkon thanks lot case solved", "d": "7/2015"}, {"body": "chadhietala way add logging jsbin example demonstrates event handlers longer attached steps noticed may contributed event handler becoming detached top level dom unstable would screen recording posted dropbox something showcase unstableness help issue reproducible", "d": "7/2015"}, {"body": "chadhietala definitely seems like regressions angles cc tom wycats", "d": "7/2015"}, {"body": "quite sure bug consider following demo without ember scenario would might annoying way boolean attributes work plain html attempting emulate angle bracket components right using following works properly jsbin see copy", "d": "7/2015"}, {"body": "seems weird properties component controller booleans property names access sure even documented people aware works", "d": "7/2015"}, {"body": "seems weird properties component controller booleans property names person property componentcontroller likely much bigger issues discussing also believe handlebars parser interprets specific boolean node using would nt accessible template anyways", "d": "7/2015"}, {"body": "bug seems weird properties component controller booleans property names use crazy things like", "d": "7/2015"}, {"body": "nt think passing value false really crazy use case maybe missing something", "d": "7/2015"}, {"body": "workmanw thing would crazy property controllercomponent named something like expected able access template via", "d": "7/2015"}, {"body": "workmanw said crazy pass like every value", "d": "7/2015"}, {"body": "yea sorry thought mmun comment referring usage crazy usecase got", "d": "7/2015"}, {"body": "convinced bug", "d": "7/2015"}, {"body": "ember controllers needed listing query params deprecated series routable components land moved route change regular controller arraycontroller objectcontroller deprecated removed series recommended use controller moving forward import ember ember export default embercontrollerextend queryparams page", "d": "7/2015"}, {"body": "thanks advice warning gone pretty complex figure make work put many hopes ember hope simplify lot things btw ember docs route querying examples broken links bottom", "d": "7/2015"}, {"body": "looks like entries returned response according max alphabetical results get additional keys make additional request param set last entry first page tags appear present additional pages page page approach sounds good happy add pr", "d": "7/2015"}, {"body": "sounds like good plan thanks researching quickly", "d": "7/2015"}, {"body": "routable components land need implementation rfc know one point ebryn going work sure status nt really bug likely rfc better place conversation", "d": "7/2015"}, {"body": "perhaps wait months like htmlbars indeed", "d": "7/2015"}, {"body": "post rfc closing", "d": "7/2015"}, {"body": "great catch would mind submitting pr bring back", "d": "7/2015"}, {"body": "maybe could show bug js bin first issue described context observer function inside component js bin showing context observer latest beta tried saw results context component reading rest issue nt see anything appears line ember claims work however narrative code confusing parts might following correctly show running code help people figure might going wrong also tip avoid using observers possible possible time", "d": "7/2015"}, {"body": "curious use case noticed potential issue component function observes outercontext attribute actually initialized even actual component initialized mitchlloyd says dragons observers perhaps video shows alternative implementations use case", "d": "7/2015"}, {"body": "mitchlloyd provide jsbin soon pixelhandler thanks vide definitely go attempt use observers", "d": "7/2015"}, {"body": "warning message absolutely correct testhelper function fillinwithinputevents app selector contextortext textorevents events var el context text typeof events undefined context null text contextortext events textorevents else context contextortext text textorevents typeof events string events events el apptesthelpersfindwithassert selector context elval focus el function fillinwithinputevent character var val elval var charcode charactercharcodeat var l textlength lt l fillinwithinputevent text return apptesthelperswait call like simulate input events manually triggering event fact goes infinite loop still bug though strange infinite loop happens component tested block mode deprecation warning triggered component block mode maybe deprecation always spins infinite loop", "d": "7/2015"}, {"body": "wycats keep count many top level revalidates per run loop error hits certain count", "d": "7/2015"}, {"body": "quick searchscan nt notice could please link build referring possible gist snippet saw seemed wrong", "d": "7/2015"}, {"body": "yes built publishes output correct obvious way build prod strong conventions seems still include noticed trying compare byte size changes recent prod builds nt say anything busted improve largely reminder someone else time help would appreciated", "d": "7/2015"}, {"body": "please make issue actionable command run nt work expected output filename snippet etc look incorrect", "d": "7/2015"}, {"body": "think currently eventdispatcher requires tag root delegation mounted another element body delegation likely scoped root app", "d": "7/2015"}, {"body": "stefanpenner users attach event listeners different element created app demo jsbin", "d": "7/2015"}, {"body": "thought inherited eventdispatcher quick spelunk reveals true", "d": "7/2015"}, {"body": "stefanpenner event dispatcher always dispatch body tying rootelement actually frustrating wished able set dispatch root apart append target", "d": "7/2015"}, {"body": "also love able dispatch capture", "d": "7/2015"}, {"body": "create unique class app instance views instead class emberview dispatch using would greatly improve one app page andor emberwormhole stuff embertether", "d": "7/2015"}, {"body": "cc chrislopresto lukemelia", "d": "7/2015"}, {"body": "stefanpenner event dispatcher always dispatch body tying rootelement actually frustrating wished able set dispatch root apart append target yes comment agreed", "d": "7/2015"}, {"body": "found answer rewriting function like made work", "d": "7/2015"}, {"body": "question related emberdata ember strongly suggest stack overflow community slack channel help issue find links emberjscom community page", "d": "7/2015"}, {"body": "randomly getting ca nt find issue", "d": "7/2015"}, {"body": "nt recall another issue thank reporting investigate coming track need reproduction", "d": "7/2015"}, {"body": "look", "d": "7/2015"}, {"body": "looks like firefox error still nt know yet causing", "d": "7/2015"}, {"body": "seems like timing issue error pops randomly looks trying update dom nt existing anymore", "d": "7/2015"}, {"body": "guess looks like cause problem issue seems happen go least tab get errors immediately every time refresh navigate close page nt matter change tab development tools never get issue ie understand ie jcbvm check problem", "d": "7/2015"}, {"body": "btecu ah interesting look tomorrow access code let know", "d": "7/2015"}, {"body": "teddyzeenny something seen", "d": "7/2015"}, {"body": "yes error guarded yet released", "d": "7/2015"}, {"body": "teddyzeenny awesome thank jcbvm going close issue fixed upstream", "d": "7/2015"}, {"body": "glad know cause problem thanks helping", "d": "7/2015"}, {"body": "interesting glimmer bug jarrodctaylor happens correct", "d": "7/2015"}, {"body": "think related change works expected", "d": "7/2015"}, {"body": "jakesjews nt think problem example working expected working", "d": "7/2015"}, {"body": "see thinking fact lets add one item added many clicked looks like nt work either unfortunately", "d": "7/2015"}, {"body": "created another bin exactly duplicate production issue experiencing check array update class resulting color change however need visit different route return order see change reflected", "d": "7/2015"}, {"body": "jarrodctaylor believe want bind imo behavior correct array always present thus evaluate true", "d": "7/2015"}, {"body": "mixonic behavior inconsistent updated bin updated however", "d": "7/2015"}, {"body": "definitely agree behave consistently", "d": "7/2015"}, {"body": "updated jsbin clarify examples mixonic magic conditional length think consistent else emberisempty", "d": "7/2015"}, {"body": "confirm issue", "d": "7/2015"}, {"body": "seems like regression confirmed", "d": "7/2015"}, {"body": "confirmed keeping us migrating", "d": "7/2015"}, {"body": "someone time submit pr failing test would help get ball moving", "d": "7/2015"}, {"body": "submitted failing test entirely sure yet stack fix needs made looking happy update pr fix get someone else guidance regression might introduced also appreciated", "d": "7/2015"}, {"body": "sure helpful also fails using newer inline syntax imagine uses attributebindings hood tried debugging got lost pretty quickly see correct called somewhere line helper gets called array classes gets old data changes rerendering happening somewhere line updated attrs nt getting passed along correctly", "d": "7/2015"}, {"body": "another pieces information additional debugging wanted confirm seem specific rerendered class bindings like following update raytiley mentions inline subexpression also work side note sure correct render rerender correctly like previous example however following cases rerender correctly binding normal tag standard generated blank component", "d": "7/2015"}, {"body": "dupe move release context", "d": "7/2015"}, {"body": "mixonic awesome tried searching gh search failed thanks correction link", "d": "7/2015"}, {"body": "dup", "d": "7/2015"}, {"body": "gh laggy suspect double submit thanks catching", "d": "7/2015"}, {"body": "seems working simple jsbin tweak jsbin demo issue describing", "d": "7/2015"}, {"body": "check working last upgrade would think something new component hooks", "d": "7/2015"}, {"body": "observers fire stuff dom please consider new component hooks move away observers", "d": "7/2015"}, {"body": "stefanpenner confirming thoughts good deal", "d": "7/2015"}, {"body": "fyi wrong repo related issue tl dr race condition happens first time lame yes hopefully someone maybe time dig soon", "d": "7/2015"}, {"body": "thanks stefanpenner", "d": "7/2015"}, {"body": "alanhogan sorry lame bug", "d": "7/2015"}, {"body": "sure case expected work although understand premise works certainly explicit probably preferred case", "d": "7/2015"}, {"body": "point resource route namespace reset use routescontrollerstemplates separate routes case routes share everything", "d": "7/2015"}, {"body": "moved milestone remember must deprecate bugfix release remove bugfix beta", "d": "7/2015"}, {"body": "stefanpenner globals access templates deprecated least minor versions unless uncover something new caught initially deprecated think require backporting", "d": "7/2015"}, {"body": "mmun gotcha misread thought templates things like deprecated", "d": "7/2015"}, {"body": "oops deleted comment accident chains globals functional deprecated see jsbin", "d": "7/2015"}, {"body": "unless uncover something new caught initially deprecated think require backporting perfect changes bugfix needed", "d": "7/2015"}, {"body": "looks like also deprecated keep goal clear though remove global references paths", "d": "7/2015"}, {"body": "yes", "d": "7/2015"}, {"body": "watch abc buggy split point watch pathnodevalue b wrong", "d": "7/2015"}, {"body": "stefanpenner fixed detecting watch pathnodevalue thisb going normalizetuple produce right thing want backport", "d": "7/2015"}, {"body": "stefanpenner clarify primary goal drop normalizetuple watch uses source nasty bugs uppercase props prefixing supposed disambiguator framework splitting paths unambiguous become ambiguous", "d": "7/2015"}, {"body": "olivierlesnicki intentional template compilation client result good performance never suggested production mode apps use ember jsbin example template compiler included devdebug reasons writing tests strongly suggest excellent addon emberclihtmlbarsinlineprecompile part official testing story soon document story p otherwise find templates compiler download builds pages included bower package embercli could import template compiler devprodtest needed suggest", "d": "7/2015"}, {"body": "mixonic quite happy hopefully story gets documented soon", "d": "7/2015"}, {"body": "wow strange", "d": "7/2015"}, {"body": "seems like changing value rerender scheduling rewrite afterrender queue make thing working well also remove warning think due observers beeing synchronous", "d": "7/2015"}, {"body": "assigned least provide feedback since likely familiar", "d": "7/2015"}, {"body": "concur positionalargs array intended static property class fair game access instantiation component instance", "d": "7/2015"}, {"body": "document assert accordingly take advantage concept addressing issues compat code introduced", "d": "7/2015"}, {"body": "ok think treat positionargs static write assertions ensure users nt use way final resting place likely static support bothwithout cost today enable us begin fixing", "d": "7/2015"}, {"body": "brain dump discussing stefanpenner chat go forward would javascript var thing embercomponentextend stuff thingreopenclass positionalparams stuff export default thing deprecated functional", "d": "7/2015"}, {"body": "please sure read window support section wwwemberclicom windows also incorrect repo enoent initial install appears strange node race condition typically users remove directory try works related issue point hope time track one", "d": "7/2015"}, {"body": "ok thank", "d": "7/2015"}, {"body": "heroiceric got sec dig one", "d": "7/2015"}, {"body": "headsup select deprecated leaving us going forward likely better option use dom directly said try fix although suspect may bit low priority", "d": "7/2015"}, {"body": "point emberdata believe also fixed emberdata may stale emberdata maybe lagging behind release upgrading emberdata nt help sure open issue appropriate repo", "d": "7/2015"}, {"body": "stefanpenner oof realized course forgot check issue tracker time running latest ed fix master believe ed release", "d": "7/2015"}, {"body": "running latest ed fix master believe ed release believe pr exists merged address remember giving feedback best open issue ed get moving forward", "d": "7/2015"}, {"body": "jerel add gets released fixes added", "d": "7/2015"}, {"body": "strange work around", "d": "7/2015"}, {"body": "similar", "d": "7/2015"}, {"body": "real symbol polyfiled one", "d": "7/2015"}, {"body": "likely needs similar treatment", "d": "7/2015"}, {"body": "hrm polyfilled one", "d": "7/2015"}, {"body": "aww man rwjblue looked issue might already addressed missed sorry", "d": "7/2015"}, {"body": "hrm polyfilled one embers potentially many", "d": "7/2015"}, {"body": "stefanpenner whatever default babel configuration ember cli made modifications assuming play perhaps gap understanding", "d": "7/2015"}, {"body": "im sure polyfil decorates correctly", "d": "7/2015"}, {"body": "let check", "d": "7/2015"}, {"body": "perfect seems like require corejsshim symbol function symbol objectprototypetostringcall symbol object function objectprototypetostringcall symbol object symbol", "d": "7/2015"}, {"body": "decided freeze broken landscape likely revisit future point time landscape become reasonable example insanity chrome version canary chrome version", "d": "7/2015"}, {"body": "would loved fix unfortunately requireing something like corejs always time page feature work nt something commit especially something like changing embers codebasse actually uncovered several issues hope revisit future", "d": "7/2015"}, {"body": "understanding research correctly tostringtag run problem listed using typeof instead correct", "d": "7/2015"}, {"body": "problem listed using typeof instead nope", "d": "7/2015"}, {"body": "olivierlesnicki suggest using hook schedule three advantages runs render instead initial render component component may change height based change contents schedules change actions several components change height properties single expensive rerender scheduling actions ensure children parent components completed rendering components may change layout component nt believe observable property avoided adding one performance concern related firing property change notification rendering additionally want avoid rerenders much possible making part render process observable would encourage rerendering code", "d": "7/2015"}, {"body": "mixonic wo nt called schedule callback trigger rerender", "d": "7/2015"}, {"body": "olivierlesnicki correct still trigger rerender however finish current pass first cause single rerender even multiple components values set", "d": "7/2015"}, {"body": "expected behaviour per statement docs directly set values property longer connected original property", "d": "7/2015"}, {"body": "maheshsenni thanks explanation want achieve behaviour set values oneway property meanwhile also observer update original property rather disconnected existed method ember used", "d": "7/2015"}, {"body": "lucaszheng case would require use observer please follow stackoverflow community slack chat details", "d": "7/2015"}, {"body": "duplicate", "d": "7/2015"}, {"body": "edited js formatting", "d": "7/2015"}, {"body": "chriscareycode suspect", "d": "7/2015"}, {"body": "stefanpenner actually issue change build jsbin bug fixed due memory leak issue go yet perhaps mind worth time jump bug break feature existing app mine working thought worth noting fix end user simple enough rename variable something else", "d": "7/2015"}, {"body": "chriscareycode leak maybe unclear go back fix maybe enough things", "d": "7/2015"}, {"body": "yes anxiously awaiting fix test", "d": "7/2015"}, {"body": "chriscareycode leak merged able check", "d": "7/2015"}, {"body": "included", "d": "7/2015"}, {"body": "jsbin works", "d": "7/2015"}, {"body": "rwjblue ah yes tonights release", "d": "7/2015"}, {"body": "looks great far developer tools timeline see ever increasing js heap usage looks flat", "d": "7/2015"}, {"body": "buffer null issue also issue", "d": "7/2015"}, {"body": "yes addressed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "fivetanley rubygems guy cc tricknotes", "d": "7/2015"}, {"body": "get published hour", "d": "7/2015"}, {"body": "rwjblue update thanks", "d": "7/2015"}, {"body": "published", "d": "7/2015"}, {"body": "cc tomdale wycats", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "tayhobbs thanks reporting definitely bug", "d": "7/2015"}, {"body": "update checked broken blockless version linkto fails works", "d": "7/2015"}, {"body": "cibernox could post jsbin minute", "d": "7/2015"}, {"body": "rwjblue sure", "d": "7/2015"}, {"body": "jsbin confirmed added", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "see discussion stupid aside please respectful opening issues may seem stupid reasons way works like way suggest actually rather nuanced complicated discussed similar issues", "d": "7/2015"}, {"body": "well said rlivsey closing duplicate", "d": "7/2015"}, {"body": "thanks reporting unsure already fixed master guides repo would mind reopening emberjsguides", "d": "7/2015"}, {"body": "sure thing sorry wrong place grimacing", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "problem", "d": "7/2015"}, {"body": "ya nt something support also suspect wo nt would require htmlbars compiler client side would likely pretty slow wish add components dynamically component helper may best bet may also want look context component rfc", "d": "7/2015"}, {"body": "stefanpenner okay makes sense thanks response take look context component rfc also preglimmer able something like successfully postglimmer still works initialization however changed function run nothing updated ui call regression intentional side effect glimmer thanks", "d": "7/2015"}, {"body": "also preglimmer able something like successfully know running compiler production really nt something would recommend infact would strongly advise unclear particular approach ever something intended support thisset layout newtemplate rerender said suspect line issue trying call rerender template component", "d": "7/2015"}, {"body": "intention call component changing layout see come alternative approach nt use compiler slow acceptably slow worstcase scenario highlighting modifying dom directly instead using component", "d": "7/2015"}, {"body": "possible change layout initial render least one issue open", "d": "7/2015"}, {"body": "got thanks follow issues", "d": "7/2015"}, {"body": "failing test rerendering updating layout", "d": "7/2015"}, {"body": "seem remember related fix tomdale extra invadation fix landed earlier week", "d": "7/2015"}, {"body": "exopit check canary", "d": "7/2015"}, {"body": "fixed latest release channel builds released soon demo", "d": "7/2015"}, {"body": "rwjblue", "d": "7/2015"}, {"body": "likely something openned rfc issue rfc repo bug", "d": "7/2015"}, {"body": "sandstrom general suggest one three using component possibly block params handle decoration creating decorator class one default proxy behavior perform better compatible removal later time using new emberhelper api create formatting helpers instead using decoration object general solution decoration may welcome definitely requires design likely rfc going close please let know missed anything note", "d": "7/2015"}, {"body": "fair point stefan right nt bug mixonic thanks less done wired using component decorator classes write rfc instead", "d": "7/2015"}, {"body": "sandstrom fwiw also need go straight rfc done poor job suggesting also open issue rfc repo gather usecases organize thoughts everyone large trying design api might better start since lots people experimenting different ideas still", "d": "7/2015"}, {"body": "mixonic thanks nt know option opened issue", "d": "7/2015"}, {"body": "hmm kind troubling see marked private given many things rely eg emberdata emberbufferedproxy sure hope nt going away anytime soon nevermind saw update marked public", "d": "7/2015"}, {"body": "done poor job suggesting also open issue rfc repo gather usecases organize thoughts everyone large trying design api add rfc repo", "d": "7/2015"}, {"body": "sandstrom got sec add option readme", "d": "7/2015"}, {"body": "believe duplicate unlikely fix unless someone knows solution cryptic error hand intend submit another rfc something calling kabab actions idea enable per element event handling like example still use standard event dispatcher avoids adding ton event listeners", "d": "7/2015"}, {"body": "cool could nt find duplicate issue must missed close one nt sure intended supported seemed like happy accident seen demos knocking thought give go makes sense go dispatcher opposed going back attaching handlers shop", "d": "7/2015"}, {"body": "worries could wrong dupe many emails smileycat", "d": "7/2015"}, {"body": "lets keep open duplicate linked", "d": "7/2015"}, {"body": "believe bug safari results detection code thrown rwjblue directly related email yesterday", "d": "7/2015"}, {"body": "let confirm", "d": "7/2015"}, {"body": "could terrible news glad nt enabled new feature", "d": "7/2015"}, {"body": "yes related guess need role fix sooner rather later", "d": "7/2015"}, {"body": "duplicate believe although one currently closed", "d": "7/2015"}, {"body": "idea one closed intent htmlbar props first attrs later approach highest possible fidelity underlying dom webcomponent nodes obviously loss fidelity addition actually illuminating flawed existing behaviors results serious issues failing tests away appears like much better solution", "d": "7/2015"}, {"body": "failing tests away appears like much better solution failing tests away solution", "d": "7/2015"}, {"body": "right failing tests waiting things", "d": "7/2015"}, {"body": "raytiley ah nt find thanks", "d": "7/2015"}, {"body": "believe address", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "thanks releasing", "d": "7/2015"}, {"body": "want add passing model observing modelproperty instead triggers expected", "d": "7/2015"}, {"body": "seyz locks guys confirm canary", "d": "7/2015"}, {"body": "confirmed still occurs canary", "d": "7/2015"}, {"body": "stefanpenner confirm", "d": "7/2015"}, {"body": "additional example see may duplicate jsbin link", "d": "7/2015"}, {"body": "number computed property component addon mine longer works upgrading sure root cause issue tried add observer dummy app controller found fired twice every time input value changed eventually found property getter also fired twice every update weird part property getter always returns correct value fired observer evaluates value every first time gets fired every second time tried adding observers properties component fire test behaviour addon use tag ember master branch ember", "d": "7/2015"}, {"body": "believe landed pr fixes", "d": "7/2015"}, {"body": "stefanpenner fix landed prevents double observers initial render address issue", "d": "7/2015"}, {"body": "update jsbin canary", "d": "7/2015"}, {"body": "appears trigger following legacyattrdidchange legacydidreceiveattrs rwjblue legacyattrdidchange fires drop legacydidreceiveattrs link together would also help initial render aswell", "d": "7/2015"}, {"body": "fyi passing data recommended using action way databinding may case new hook support older behavior good see existing api support behavior believe lacking docs new lifecycle hooks cc wycats trek", "d": "7/2015"}, {"body": "makes pretty awkward combined assures rendered attribute bound end components rendered state property value inconsistent state example click image see components value src different one rendered least supposed set attributes inside methods tell log message", "d": "7/2015"}, {"body": "stefanpenner tom yehuda decided nt ready public documentation yet", "d": "7/2015"}, {"body": "trek public correct", "d": "7/2015"}, {"body": "stefanpenner think angle brackets", "d": "7/2015"}, {"body": "stefanpenner think angle brackets sounds reasonable think posted comment days ago nt clear thanks clarifying", "d": "7/2015"}, {"body": "basic principle exposing binding label something would considered part ember api public private streams believe talking exposed outside ember internals considered bug definitely fix think componenthelper care value passed path value using path later looking value going cause issues template keyword scoping nontrivial eg path represent yielded block param could look need path make components api instead bound value described trying make case want functionality", "d": "7/2015"}, {"body": "thanks quick response case would like associate path input bound property various properties without requiring second property bound component example render html like create binding controller every use case using path access property manipulating path string use cases plausible components api could take care requirements plan idea part ember api would preferred solution would minimize boilerplate input", "d": "7/2015"}, {"body": "assuming talking something like embereasyform api case given string path provided model use new supported addon versions prior helper eg get value portion point value path right", "d": "7/2015"}, {"body": "relies place aswell ongoing effort migrate away form unfortunately core helpers utilized functionality changing hefty effort", "d": "7/2015"}, {"body": "thanks gents confirm seems like one move away relying functionality asap", "d": "7/2015"}, {"body": "confirm seems like one move away relying functionality asap yes would say relying private api big hazard", "d": "7/2015"}, {"body": "sirdunxalot yes digging private apis helpful us know cooperate try findbuild public apis cover use case case already gone label path pretty far might little trickier refactor away would suggest using strings like rwjblue suggested", "d": "7/2015"}, {"body": "created new label category report", "d": "7/2015"}, {"body": "great thanks guys good idea issue label", "d": "7/2015"}, {"body": "mmun leave open", "d": "7/2015"}, {"body": "stefanpenner using label anything besides debugging wrong promises example label subexpression handlebars code generated subexpression api looks like using property get access string bar change api", "d": "7/2015"}, {"body": "stefanpenner using label anything besides debugging wrong obviously true asked asked uses report private api usage next steps provide migration path deprecating carefully storing state symbol merely concerned closing acknowledge path forward", "d": "7/2015"}, {"body": "streams private let alone internal properties private streams interested reopening issue attempt deprecate label may want use label property future path forward rework api worth wo nt work gimmer never set", "d": "7/2015"}, {"body": "mmun whats point users telling us using private api tell nope nt", "d": "7/2015"}, {"body": "stefanpenner actually said noop instead besides issue nt representative every single private api usage report come", "d": "7/2015"}, {"body": "set seems worse recovering would make component work one version would still break glimmer", "d": "7/2015"}, {"body": "although think good idea remember core members stating jquery nt going away least", "d": "7/2015"}, {"body": "absolutely plan support using ember without jquery point would fully semver compliant removing required dependency nt break anything definitely making using ember along jquery error would semver violation imho", "d": "7/2015"}, {"body": "would love see thorough cross browser older mobiles exploration", "d": "7/2015"}, {"body": "seems like rfc rfc issue", "d": "7/2015"}, {"body": "seems like ember needs use abstract interface similar environment used internally allow ember boot node context", "d": "7/2015"}, {"body": "stefanpenner possible something like delay loading jquery used component view", "d": "7/2015"}, {"body": "stefanpenner possible something like delay loading jquery used component view possible also use jquery cross browser event delegation quirky bubbling cross browser behavior currently still eager also could made lazy", "d": "7/2015"}, {"body": "hugely favor ember requiring jquery issue wonderfully researched links believe belongs issue emberjsrfcs since bug perse ember closing heart favor issue", "d": "7/2015"}, {"body": "done", "d": "7/2015"}, {"body": "minimalist reproduction tracing tomorrow notes yes syntax incorrect helper however nt believe cause fail way appears matter helper morecomplicated scenario fixing syntax simply creates second error read property generateurl undefined something fishy", "d": "7/2015"}, {"body": "original report collection symptoms one problem issue simply container set testing nt resolve service router means router becomes results different failures depending upon tried something reference router nt decided best fix documenting", "d": "7/2015"}, {"body": "nathanhammond lines ensure default built registry contains incorporated emberqunit ensures registry contains default items using emberqunit", "d": "7/2015"}, {"body": "still error moving emberqunit different one updated dependencies latest versions minimal reproduction emberrouterrouter undefined untraced point continue look", "d": "7/2015"}, {"body": "two issues never made branch compare master stable rwjblue nt know build magic fix submit identical pr stable branch need add routersetuprouter", "d": "7/2015"}, {"body": "open cherrypicked pr", "d": "7/2015"}, {"body": "targeted release branch want start routing integration tests latest beta builds able use linkto emberqunit integration tests without calling startrouting", "d": "7/2015"}, {"body": "answer ca nt nt use move directly going actually receive first class support long term bridge deprecations need testing components actually work stands still nt story game code solutions minimallyinvasive approach proposals consolidate conversation things cc tomdale", "d": "7/2015"}, {"body": "commented pr need vet changes make sure make matters worse", "d": "7/2015"}, {"body": "okay calling clarification nt kosher inside embertesthelpers primarily build routerjs api surface available nt better solution landing nt fix everything", "d": "7/2015"}, {"body": "offline conversation summary acceptance test generic inside component guard routerrouter instead running", "d": "7/2015"}, {"body": "discussed safe solution essentially adding guards attempt access routerrouter nathan minutes ago think land fixes branches along tom fix", "d": "7/2015"}, {"body": "nt elegant ok pragmatic approach returning compatibility series like revisit entire code path", "d": "7/2015"}, {"body": "closed", "d": "7/2015"}, {"body": "identified esperanto one ember cli dependencies would mind opening issue", "d": "7/2015"}, {"body": "lol really nt virus", "d": "7/2015"}, {"body": "believe fixes issue", "d": "7/2015"}, {"body": "fix since tildeiohtmlbars merged", "d": "7/2015"}, {"body": "elaborate proper structure mean app structure using ember cli help illustrate standardish app structure course use pods deviate provided app makes sense follow structure", "d": "7/2015"}, {"body": "im going close please feel reopen appropriate repo issue reopened please try include extra detail believe bradcypert comment great future issue attempt elaborate points", "d": "7/2015"}, {"body": "added failingtest", "d": "7/2015"}, {"body": "possibly related", "d": "7/2015"}, {"body": "possibly also related rwjblue meant address", "d": "7/2015"}, {"body": "mgenev believe tomdale detailed technical posts planned", "d": "7/2015"}, {"body": "briangates took look example jsbin still wondering could start look issue tried adding logging help add clarity describing issue", "d": "7/2015"}, {"body": "worked briangates bit via slack might able provide background information posted jsbin two routes child dynamic segment name application template contains link child route segment values upon clicking link transitioning template correctly shows two values seems four issues arise go subroute link links rather expected transitioning url incorrect rather expected refreshing page actually result different app state set changing url manually seems update app first changed second change url updates values correct change url nothing happens change url updates values correct suspect somewhere along way something considering whether multiple routes dynamic segment name", "d": "7/2015"}, {"body": "might related moving config routes trek machty could one yall take look free minute", "d": "7/2015"}, {"body": "rlivsey use case using computed property qp default value honestly nt expect work might accident like understand using app", "d": "7/2015"}, {"body": "usecase display formatted url using computed property string form javascript const dateformat yyyymm export default embercontrollerextend queryparams datestr date date null datestr embercomputed date get const date thisget date return date dateformat dateformat null set k v thisset date windowmomentutc v dateformat return v suppose instead could instead invert behaviour instead computed property make set instead javascript datestr null date embercomputed datestr get const datestr thisget datestr return datestr windowmomentutc datestr dateformat null set date thisset datestr date dateformat dateformat null return date works would nice option way using cp value could assume default", "d": "7/2015"}, {"body": "added meeting agenda suggesting contributors cleanup branches removed stale branches", "d": "7/2015"}, {"body": "removed pinged last branches remain owners", "d": "7/2015"}, {"body": "thanks bringing attention", "d": "7/2015"}, {"body": "awesome boat", "d": "7/2015"}, {"body": "closing favor rfc", "d": "7/2015"}, {"body": "monkey patched side verify line suggested works", "d": "7/2015"}, {"body": "fyi arraycontroller sortable deprecated please transition cp arraysort work one would expect glimmer handles rerender case nicely", "d": "7/2015"}, {"body": "cibernox may easy one", "d": "7/2015"}, {"body": "cibernox got sec help transition internal usages deprecate public seems related controller extraction", "d": "7/2015"}, {"body": "already renamed commit suggesting standalone pr", "d": "7/2015"}, {"body": "suggesting standalone pr nope addition need deprecate public api", "d": "7/2015"}, {"body": "npm ends tethering read tomorrow afternoon likely", "d": "7/2015"}, {"body": "npm ends tethering read tomorrow afternoon likely many deps", "d": "7/2015"}, {"body": "apparently minutes enough", "d": "7/2015"}, {"body": "cibernox commit attached pr", "d": "7/2015"}, {"body": "stefanpenner attached pr removing arraycontrollers extracted separate one", "d": "7/2015"}, {"body": "thanks think get pr asap", "d": "7/2015"}, {"body": "michaelvdheeren rafaltrojanowski random question issues go away run tests ember seeing might similar problem think tracked added beta ga", "d": "7/2015"}, {"body": "mmahalwy components would suggest using new style integration tests nearly scenarios", "d": "7/2015"}, {"body": "hi wanted follow happy close something end", "d": "7/2015"}, {"body": "going close think fixed available release beta canary channel builds raytiley happy reopen solved end", "d": "7/2015"}, {"body": "looking far found nt specific reproduce thing well new view added", "d": "7/2015"}, {"body": "put together pr bit hack probably nicer solution possible feedback welcome least simple test case someone could reuse problem seems come fact parent component dirty htmlbars never asks generate children solved keywords special check visiting nodes hooked function keywords equivalent place components provide callback populating directly node perhaps problem env right place store info first place", "d": "7/2015"}, {"body": "ran also also breaks think breaks type set looked bit cause seems ember trying set type input element inserted dom tree ie allow also tried workaround nt seem update value", "d": "7/2015"}, {"body": "xrxr tried", "d": "7/2015"}, {"body": "stefanpenner yes", "d": "7/2015"}, {"body": "looked bit cause seems ember trying set type input element inserted dom tree fragment nt trying insert inserted regular tree", "d": "7/2015"}, {"body": "stefanpenner turns half correct p quick search found setting element regular tree would cause error assumed cause quick judge happens error happens element part document fragment small test case html", "d": "7/2015"}, {"body": "type input element must set inserted tree sounds reasonable thanks digging attributes like", "d": "7/2015"}, {"body": "nt know attribute behaviour sure bug reports", "d": "7/2015"}, {"body": "opened another issue htmlbars track fix shame since wont needed", "d": "7/2015"}, {"body": "way enough break", "d": "7/2015"}, {"body": "xrxr ya would imagine", "d": "7/2015"}, {"body": "update bug simple page showing problem", "d": "7/2015"}, {"body": "update bug plan look soon sorry delay queue full", "d": "7/2015"}, {"body": "tracking issue", "d": "7/2015"}, {"body": "stefanpenner preventing updating getting error upgrading", "d": "7/2015"}, {"body": "pixelhandler advice error help", "d": "7/2015"}, {"body": "believe plan make transparent may may backported yet implemented krisselden mmun likely speak clearly", "d": "7/2015"}, {"body": "tried still error tried smallest app maybe need everwhere core library party code seems like deprecation caused breaking error", "d": "7/2015"}, {"body": "seems like deprecation cased breaking error nt deprecation tried smallest app share repo demonstrate jsbin im sure whoever looks would interested seeing", "d": "7/2015"}, {"body": "stefanpenner api change oh perhaps error swear saw deprecated around early oh well everything broke guess would caught earlier able run beta could kept churn large codebase", "d": "7/2015"}, {"body": "pixelhandler plan make transparent binning like hash map collision", "d": "7/2015"}, {"body": "made transparent clearly breaking change", "d": "7/2015"}, {"body": "error suggests using following case duplicate", "d": "7/2015"}, {"body": "rwjblue confirm breaking change must use duplicates iterating array using fix error suggests use guid added blog post breaking change broke apps lol", "d": "7/2015"}, {"body": "pixelhandler feel free pr update blog post would love get fixed real point release expertise required fix", "d": "7/2015"}, {"body": "rwjblue confirm breaking change must use duplicates iterating array using fix error suggests use key index guid pixelhandler imho bug time consuming fix hope wycats someone time fix might worth calling known bug hopefully fixed", "d": "7/2015"}, {"body": "krisselden rwjblue stefanpenner handle error create unique id fly stefanpenner company work values privacy ca nt share app tinker blog project code share project able add suggested tiny app background core library party libs well core lib imported gem apps require template compiler since htmlbars deps tightly coupled templates compiled core lib apps using asset pipeline guess things nt getting unique ids ca nt repro jsbin", "d": "7/2015"}, {"body": "stefanpenner company work values privacy ca nt share app reproduction need full app jsbin isolated repo would best honestly nt want sift someones app unless", "d": "7/2015"}, {"body": "seems better generate unique id fly instead throwing error maybe inline compiler nt know prolly best use time deal error try use key everywhere", "d": "7/2015"}, {"body": "seems better generate unique id fly instead throwing error maybe inline compiler nt know nt related compiler runtime concern listdffing takes account key identify list changes time", "d": "7/2015"}, {"body": "stefanpenner rwjblue knew apps would find regression much test coverage ember", "d": "7/2015"}, {"body": "stefanpenner rwjblue knew apps would find regression much test coverage ember tests believe known regression sure deemed tolerable choice nt made", "d": "7/2015"}, {"body": "pixelhandler generated id may collide future key based dup may collide future key", "d": "7/2015"}, {"body": "krisselden use guid may still fail ok update things apps core libs see works", "d": "7/2015"}, {"body": "could hash dup key count dup", "d": "7/2015"}, {"body": "stefanpenner possibility adding blanket test coverage tools ember projects", "d": "7/2015"}, {"body": "want try get reuse pick reuses unlikely result massive amount diffs", "d": "7/2015"}, {"body": "krisselden sounds like work", "d": "7/2015"}, {"body": "stefanpenner possibility adding blanket test coverage tools ember projects would good addition maybe someone contribute lcov output coverals via istunbul although worth noting scenario nt missed branch test coverage nt help data permutations mentioned believe explicit choice workaround error emits deemed sufficient considering costbenefit tradeoff", "d": "7/2015"}, {"body": "guess good exercise regression would write failing test stefanpenner ping whoever let one slip ask help writing failing test uttered words ship anyway", "d": "7/2015"}, {"body": "added useful error error previously super obtuse take look jsbin fix issue duplicates general", "d": "7/2015"}, {"body": "pixelhandler already failing example provided jsbin offers everyone aware issue solving function available time", "d": "7/2015"}, {"body": "stefanpenner offer friday day rwjblue tell fix etc time think question priority time hrs", "d": "7/2015"}, {"body": "pixelhandler worth noting issue already well known well fleshed beating nt going make happen faster please note important unreported issues reported existing issues valuable add missing information ensure issue fully formed additionally commentary provides diminishing returns offend problem solution tell easy suspect rwjblue would landed days ago machine afterall may consider exploring suggestions kris gave seeing apply", "d": "7/2015"}, {"body": "pixelhandler seem motivated capably eager help lets plan hangout friday morning would love harness availability time", "d": "7/2015"}, {"body": "could work", "d": "7/2015"}, {"body": "stefanpenner spoke mmun slack mentioned maybe looking tonight", "d": "7/2015"}, {"body": "raytiley looks similar bucketing approach krisselden talking get weigh sure exact approach thinking elaborate different entirely would lovely adjustment", "d": "7/2015"}, {"body": "stefanpenner sounds good send invite fri morning like taking larger blocks time offering help week football kids meetings teams work meetup w ember night wife kids yr old grandpa house understand juggling priority emberjs priority friday day unless server burnt fire work", "d": "7/2015"}, {"body": "emberjs priority friday day unless server burnt fire work understood mindful suspect everyone motivationscostsavailiabity hashed work harmony smooth upgrade pains make world better place saturdays go surfing", "d": "7/2015"}, {"body": "stefanpenner suggestion though inside yielditem current map use binning duplicating already seen also inside yielditem", "d": "7/2015"}, {"body": "seen map needs binning", "d": "7/2015"}, {"body": "stefanpenner us tried work around key nt work us oh well", "d": "7/2015"}, {"body": "stefanpenner yeah nt deprecation warning removed", "d": "7/2015"}, {"body": "unrelated concerns warning versions prior key specified would received hairy error message deep inside htmlbars error instructs recover added intended stop gap measure provide least small amount insight cause error happening", "d": "7/2015"}, {"body": "wooohoo magic mmun", "d": "7/2015"}, {"body": "rwjblue stefanpenner mmun thanks fixing regression patch release soon", "d": "7/2015"}, {"body": "yes next patch release soon relative though dancers", "d": "7/2015"}, {"body": "rwjblue curious us broken apps blocked upgrading wait patch workaround use master branch wait", "d": "7/2015"}, {"body": "pixelhandler building ember documented unsure rwjblue chance backport fix stable branch likely build stable theory buildsemberjscom every commit built published currently tricky find version want would nice someone could help", "d": "7/2015"}, {"body": "stefanpenner backported stable would published release channel", "d": "7/2015"}, {"body": "stefanpenner backported stable would published release channel ah even unreleased merely backported commits correct", "d": "7/2015"}, {"body": "rwjblue release version ember website source emberdebugjs release page says updated days ago tag repo made days ago mean nonpatch release code release guess since issue blocks upgrading need build source manage fork something future back ported someone tell expect official release series regression patched really happy fixed extremely bummed released missing something guess impression patch release warranted regression breaking", "d": "7/2015"}, {"body": "big buttons download tagged release list builds bellow quote website builds listed incremental improvements made since may become tl dr fix list files bellow way becoming", "d": "7/2015"}, {"body": "pixelhandler release version ember website version source emberdebugjs release page says updated days ago tag repo made days ago mean nonpatch release code release every commit branches published bower use builds time need wait tagged release builds page discovered shows asset paths feel free use quite literally become next tagged version release channel builds generally always date last tag guess since issue blocks upgrading need build source manage fork something future back ported nope builds already discovered include patch want feel free use wink someone tell expect official release series regression patched ember version includes regression fix released done really happy fixed extremely bummed released available use via channel already checked", "d": "7/2015"}, {"body": "may ux issue builds place also confused someone interested pursuing likely discussion website repo appropriate", "d": "7/2015"}, {"body": "rwjblue ah makes sense team need clarity builds listed incremental improvements made since may become thanks get started latest release channel update", "d": "7/2015"}, {"body": "thanks get started latest release channel update awesome keep us posted", "d": "7/2015"}, {"body": "diogoko open issue repo instead", "d": "7/2015"}, {"body": "updates", "d": "7/2015"}, {"body": "timevans sorry yet", "d": "7/2015"}, {"body": "okie dokey thanks quick response", "d": "7/2015"}, {"body": "anyone interesting championing", "d": "7/2015"}, {"body": "runspired still looking costbenefit run", "d": "7/2015"}, {"body": "yes", "d": "7/2015"}, {"body": "runspired would fastpathing component events ember work would step initiation tree walked identify relevant listeners", "d": "7/2015"}, {"body": "likely events moved back events hash sure moved one auto registered initialization might require ember knowledge component tree trade offs sure quickest gain usecapture", "d": "7/2015"}, {"body": "events hash look like classes runspired think core would love see us switch capture based delegation time thing interested pushing forward rfc", "d": "7/2015"}, {"body": "stefanpenner absolutely favor pushing forward rfc although might humbly suggest pushing forward two rfcs first use better possibly go back hash component bugs event callbacks intermingled functions properties controllers components much simpler think know something event handler within events hash would also possibly allow ember detect events required ensure events listened second convert using events instead mousetouch events would make ember one first frameworks truly play well immediately mobile box", "d": "7/2015"}, {"body": "question hash would look like classes sure follow perhaps nt know enough limitationsimplementation classes", "d": "7/2015"}, {"body": "pardon ignorance two questions performance advantage using usecapture understanding usecapture triggers event event propagates root dom node instead bubbling way original reasoning behind moving away events hash pointer event though sounds like might deserve ticket", "d": "7/2015"}, {"body": "info pep", "d": "7/2015"}, {"body": "asakusuma yes perf advantage event would captured ember immediately instead bubbling phase prior reaching ember ideal ember eventing believe originally within confusion layer needed done away think basically encourage use someting like see", "d": "7/2015"}, {"body": "performance advantage using usecapture understanding usecapture triggers event event propagates root dom node instead bubbling way motivation nt performance advantage rather enable sanity dealing complex event scenarios may also positive perf sideaffect addition today actually incur several reentrant scenarios causing perfbugs blindly allow bubbling delegation trying finish tests memory leak raytiley try post detail later", "d": "7/2015"}, {"body": "think sane first step might remove use run loop actual user code execute vs bubble run loop call", "d": "7/2015"}, {"body": "think sane first step might remove use run loop actual user code execute vs bubble run loop call already case partially already case bubble phase runjoin moved viewhandleevent likely", "d": "7/2015"}, {"body": "would nt runjoin dispatch event create new loop nt one", "d": "7/2015"}, {"body": "move run risk naively implemented spewing sequently loops handler reached via bubbling likely need add js viewhasorancestorhas eventname emberrunjoin bubble else noop", "d": "7/2015"}, {"body": "yeah code referring", "d": "7/2015"}, {"body": "since breaks compatibility get point release", "d": "7/2015"}, {"body": "fix already stable branch included", "d": "7/2015"}, {"body": "thanks letting know looking forward smiley", "d": "7/2015"}, {"body": "release date waiting fix move code production preferably next week", "d": "7/2015"}, {"body": "release date waiting fix move code production preferably next week typically weekly release good chance towards end weekend early week", "d": "7/2015"}, {"body": "confirm", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "default ember used two way data binding long time transitioning away moment still much twoway binding land object seeing mutable object represent two way bound attributes property method using update set upstream source point generally suggesting folks use much confusion confusion cleared migrate angle bracket invocation change default binding twoway oneway see emberjsrfcs details get scenario working forcing param readonly using subexpression force one way binding", "d": "7/2015"}, {"body": "thanks rwjblue taking time explaining unfortunately nt see different jsbin still empty exact rendered keystream thought different solution problem helper know everything parameters passed nt know call helper used worked anymore since passed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "raytiley yes exactly issue created track exact scenario closing favor", "d": "7/2015"}, {"body": "currently trying update actual release channel encounter symptoms like pass current controller helper call", "d": "7/2015"}, {"body": "also maybe related sometimes parentview wrong migrating legacy emberview view helper embercomponent resolves issues", "d": "7/2015"}, {"body": "confirm bug", "d": "7/2015"}, {"body": "anything going issue blocking upgrade", "d": "7/2015"}, {"body": "nt chance dig yet definitely seems like regression though going away definitely make sure works properly", "d": "7/2015"}, {"body": "krisselden likely rfc issue proposal rfc repo", "d": "7/2015"}, {"body": "rwjblue stefanpenner found old benchmark compares performance major frameworks using todo app benchmark using old version ember migrated ember surprisingly ember turns times slower maybe could take look app experts hope something terribly wrong app test git live", "d": "7/2015"}, {"body": "test abit quirky although likely issues initial render please nt assume dismissive potential problem let explain ember makes following assumption click producing changes realistic sequential clicks producing change batch work optimizations per click overhead optimizations means sequential clicks case poor benefit realistic scenario benefit optimizations quick adjustment instead perform optimization consider unrealistic scenario results worth noting still nt really realistic simulating sequential clicks nt app would normally delete items even highly unlikely user could issue clicks would result idle time suspect test adjusted single actions added single actions removed another action merely mutated would able see something useful thats saying improvements could nt provide benefit run risk focusing wrong things maybe even making important case worse", "d": "7/2015"}, {"body": "created simple example app initial rendering performance basically bunch small components perhaps useful investigations", "d": "7/2015"}, {"body": "think get idea seems quite working moment although tests support idea see app faster items inserted still slower others modified angular ember apps insert items update amp removal previously insertion items wo removal update insertion wo removal update thought ember app may slower due emberdata locale storage adapter uses changed app use embera batch insert items real app got problem dropdown items take initial rendering gets worse mobiles pretty much like screen backbone included also want say apps seem lowlevel harder understand ember app performance important", "d": "7/2015"}, {"body": "complete aside fwiw constantly reference benchmarks understand ember performance changes time please contribute benchmarks repo improve oneoff repo may helpful immediate discussion longterm impact thanks", "d": "7/2015"}, {"body": "thanks mixonic make conributions test captures difference", "d": "7/2015"}, {"body": "huge heavily loaded components page since switched way slower tt transitions liquidfire freezes glitches seconds without liquid fire takes around amount time instead renders loading template case liquidoutled odd reason", "d": "7/2015"}, {"body": "ya lots compat layer stuff seems borking performance hopefully someone dives", "d": "7/2015"}, {"body": "stefanpenner pointers begin looking", "d": "7/2015"}, {"body": "question feels like trap start profiler grab coffee put good trance music hang amp hope best", "d": "7/2015"}, {"body": "emberconf talk also related", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "rather sleeping resorted coffee checking noticed large number small issues issues potential cause pretty hefty work amplification although fixing result small win currently death thousand papercuts scenario plan slowly time permits go issue detail inspection root cause analysis proposed solution outcome etc anyways first finding appears far many change related events firing initial render obviously needed since initial render sufficient state initial render rely change events complete render atleast situation reference added extra debugging code see going since near top profile initial render really nearly unused resulting instrumentation output js fine array array change enumerable enumerable change activate arrangedcontent arrangedcontent change unexpected initial render attrscontext attrscontext change attrslayoutname attrslayoutname change attrstemplatename attrstemplatename change attrs attrs change fine content content change unexpected controller controller change expected lifecycle hooks didinitattrs didinsertelement didreceiveattrs didrender routing didtransition expected init strange low care length length change model model change might unexpected parentviewdidchange expected willinsertelement willrender expected willtransition well apparently componentsviews lifecycle events happening clearly lots really happening dispatches wasteful potential consumers may considerably amplify work anyways reviewing instrumentation two discrete problematic areas appear parentview lt view invalidating initial render results events thisattrs invalidating initial render parentview lt view smaller two also easiest fix quickly based assumption render top bottom turns true reason create child parent able give parent child creation ensures parentview reference part initial state childview costing us changeevents looking componentcreation code clearly already setup parent child relationship child creation time offending code actually linkchild explicitly calls set correctly detects nothing changes nt emit observer change event nt ware fires regardless causing unexpected work proposed fix need fixup things write tests result marginally improved experience dropped clearly also note container ownerview change post initial bit dubious still left also removed container set invalidations second one involved also break two chunks first reset render believe largely positionalargs provided left idea discussion second currently always broadcasts changes even state initial state nt opened targeted issue one yet hope thats likely keep busy time session notice many offenders future iteration try explore", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "awesome wizard eyes hugely appreciated dizzy", "d": "7/2015"}, {"body": "seeing small improvement using emberperformance pr", "d": "7/2015"}, {"body": "gavinjoyce also noticed mandatory setter mistakenly left enabled mega slow rwjblue quick fix suspect another release imminent", "d": "7/2015"}, {"body": "updated builds instead immediately releasing builds gavinjoyce used emberperformance see pr include mandatorysetter mistake", "d": "7/2015"}, {"body": "rwjblue thanks", "d": "7/2015"}, {"body": "ember pr shows significant change ember", "d": "7/2015"}, {"body": "seeing degrade rendering performance components huge degrade big noticeable user need loading spinners content nt use waiting times higher one blog posts wrote initial render componentheavy pages shows improvement tests using glimmer engine different components different routes complex nested etc depreciation code expert either seeing improvement slower rendering times checked big ember implementations random sites people use ember etc could really see glimmer shine rest current glimmer version would degrade render performance without benefit please correct wrong like everyone use case list companies stock market elements updated every ms really love ember really love developing ember concepts version performance acceptable taking consideration benefits framework state said expert maybe expert could answer question possible glimmer future least fast engine version", "d": "7/2015"}, {"body": "possible glimmer future least fast engine version nt glimmer related code glimmer layer causing issues large due compatibility comment begins investigation got fixing another piece puzzle gavinjoyce ya expected nt believe performance tweaks would landed release atleast regress time adding comprehensive tests emberperformance would fantastic", "d": "7/2015"}, {"body": "stefanpenner sure happy", "d": "7/2015"}, {"body": "stefanpenner sure happy always wanted good thorough regression suite could easily use test regressions also run regular basis think automation would stretch goal requires dedicated hardware reduce variability vms introduce machine handy needed", "d": "7/2015"}, {"body": "stefanpenner thank clarification hard work investigating core issue hope best", "d": "7/2015"}, {"body": "trouble well takes around load select menu built components ember mobile really really slow tested android chrome live test related code menus select menu items items takes around", "d": "7/2015"}, {"body": "implemented fixes first work amplifications described resulted speedup whole story good step right direction appear work amplifications still exist mentioned chat try report issue form sometime soon got family next unsure active small adjustments appeared another considered low hanging fruit quick test shows friend slower safari running sandstrom code difference partially non trivial portion related emberconf talk poorly excess shape allocations occur appears recent view layer refactoring although much nicer actually introduced additional related issues keep diving long hanging fruit gives us best bang buck", "d": "7/2015"}, {"body": "stefanpenner appreciate ongoing investigations fruit harvest greenapple", "d": "7/2015"}, {"body": "interestingly non variant basically using dom directly nt leak attrnodes edit still leaks something like also billion times faster nt speculatively setup bindings swear past made pay go must regression rwjblue remember making pay go nt case still going look leak though", "d": "7/2015"}, {"body": "found problem least found source one leaks need spend time tonight yet thinking solution puts better path", "d": "7/2015"}, {"body": "leak demonstrated fixed", "d": "7/2015"}, {"body": "mixonic understand well case way scheduling calculations afterrender queue want get rid deprecation warning", "d": "7/2015"}, {"body": "yes believe correct", "d": "7/2015"}, {"body": "ok thanks rwjblue thought wrong manipulate run loop cases many places app compute width parent component use children using", "d": "7/2015"}, {"body": "hehe saying good solution way today smilecat", "d": "7/2015"}, {"body": "ok great edge smileycat", "d": "7/2015"}, {"body": "added link releases page fixing css site weeks ago happy add references needed think deprecations obvious current ember dev reads every release blog new dev clear", "d": "7/2015"}, {"body": "think several things address issue deprecation messages improved releases warnings like one removed pushed rfc exposing api customizing deprecation warning handling still needs implementation moving forward rwjblue plans backwards compatible addon supporting proposed api fresh explanation deprecations link page builds going close let know missed anything essential", "d": "7/2015"}, {"body": "issue work around", "d": "7/2015"}, {"body": "regression likely caused attrs proxy related attrs code", "d": "7/2015"}, {"body": "stefanpenner exactly agree almost certainly related attrs proxy little background prior spelunking time attribute changed set entire object triggers root attributes via attrs proxy", "d": "7/2015"}, {"body": "yes new code issues phases component initialization lt pretty sure solution plan work week post initialization changes lt idea nt thoroughly investigated", "d": "7/2015"}, {"body": "seeing issue", "d": "7/2015"}, {"body": "also seeing issue ember works expected ember initialization component causes observer fire observers fired twice everytime bound property changed", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "naming convention use dashes underscores", "d": "7/2015"}, {"body": "yes quickly realized beginner would nt know since guides said anywhere ca nt use underscores double checked routing section failing silently nt help either", "d": "7/2015"}, {"body": "samsinite work thought simple fix haha would still argue class renamed since views longer supposed exist though", "d": "7/2015"}, {"body": "rwjblue let add today agenda", "d": "7/2015"}, {"body": "started application monday needed add application view addchange classes", "d": "7/2015"}, {"body": "solution specific case discussed way add classes application view element must use additional dom node inside application template discussed issue detail today seems use case remain awkward land routable components users absolutely require customization application view element suggest using emberlegacyviews addon addon silence deprecation warnings regarding views cause api continue present routable components land able safely migrate away addon going close issue wontfix please feel free comment reopen missed something significant", "d": "7/2015"}, {"body": "specified quoteless path action helper resolve action name string resolve", "d": "7/2015"}, {"body": "progress issue", "d": "7/2015"}, {"body": "persons interested think close issue dammage everyone implement thing components handle model changes could handled helper", "d": "7/2015"}, {"body": "take look demo see block param indeed updated properly expecting fired update block param true ember every rerender deleted recreated element associated viewcomponent however ember element inserted updated change using mentioned earlier used similar behavior case sorry delay responding seems like sorted", "d": "7/2015"}, {"body": "believe running acceptance tests esa esa devise js describe invalid login function beforeeach function thisoptionsstatus validate session function andthen gt expect currentsession isauthenticated toequal false expect currentsession get contentsecure nottoincludekeys objectkeys thisresp alternative way testing user flow", "d": "7/2015"}, {"body": "stefanpenner seems dubious allow rejections tests seems perfectly normal else would test show appropriate error message get response api also behavior bad also inconsistent nt break test first case test adapter ignores", "d": "7/2015"}, {"body": "note intimately related emberclirfcs proposes switching embercli default ajax adapter wrapper unlike per spec resolves successfully error object may case longterm path ember nt use control flow apps expect right", "d": "7/2015"}, {"body": "jamesarosen clarified unhandled rejections error objects dubious allow handle rejections unhandled without reason instanceof error fine already asserted", "d": "7/2015"}, {"body": "somehow think heading towards conclusion yet nt quite understand said following ok mind js reject undefined catch new emberrsvppromise function resolve reject reject reject undefined catch new emberrsvppromise function resolve reject reject catch emberk reject string catch new emberrsvppromise function resolve reject reject tsk tsk reject string catch new emberrsvppromise function resolve reject reject tsk tsk catch emberk reject object catch new emberrsvppromise function resolve reject reject old object literal reject object catch new emberrsvppromise function resolve reject reject old object literal catch emberk reject error catch new emberrsvppromise function resolve reject reject new error tsk tsk reject error catch new emberrsvppromise function resolve reject reject new error tsk tsk catch emberk", "d": "7/2015"}, {"body": "except unhandled rejection rejects error sorry mobile would cited one", "d": "7/2015"}, {"body": "except unhandled rejection rejects error get board", "d": "7/2015"}, {"body": "jamesarosen yup thought also current behavior also handles rejection scenarios long handled turn actions queue flush good go likely expand yet recently added extra hooks runloop anyways believe current state actually one wants described happen must consider regression fix", "d": "7/2015"}, {"body": "marcoow think work around depends", "d": "7/2015"}, {"body": "also current behavior following code breaking js function failtodox return new emberrsvppromise function resolve reject emberrun null reject error test catches function assert var caught false failtodox catch function e caught e assertok caught null get test still fails runloop wrapping", "d": "7/2015"}, {"body": "jamesarosen might wrong think depends setup rsvp onerrordefault check adapter set depending result either throw error causes called wo side effects print error console add assertion test work isolation might work running whole test suite acceptanceintegrationunit tests", "d": "7/2015"}, {"body": "twokul yeah nt jibe stefanpenner saying except unhandled rejection rejects error ok also current behavior also handles rejection scenarios worries long handled turn actions queue flush good go suggests something runloopwrapping ca nt prevent promise failure bubbling", "d": "7/2015"}, {"body": "emberrun null reject error things run forces flush early said sure nonerror object causing assertion throw appears like bug", "d": "7/2015"}, {"body": "lines dont quite look correct", "d": "7/2015"}, {"body": "ultimately something nt jive said likely bugomissionregression", "d": "7/2015"}, {"body": "marcoow think work around embertestadapter null beforeeach depends qunit mocha really nt advised aware footprints gun", "d": "7/2015"}, {"body": "stefanpenner yeah might hide problem course nt actually solution iirc ran actually makes test fail regardless whether rejection handled test", "d": "7/2015"}, {"body": "enumerated added tests current behavior", "d": "7/2015"}, {"body": "marcoow fixed turns using quite old version rsvp recent refactoring scenario solved problem correctly align statements also add appropriate test cases", "d": "7/2015"}, {"body": "stefanpenner great looks good", "d": "7/2015"}, {"body": "anybody working still issue ember call hook fires nt fire", "d": "7/2015"}, {"body": "jslippy setupcontroller runs controller initialization refresh triggers model hooks", "d": "7/2015"}, {"body": "setupcontroller associated route hooks refire well", "d": "7/2015"}, {"body": "model hook called setup controller also called example provided demonstrates issue would good place start debugging", "d": "7/2015"}, {"body": "facing problem wanted prepare polyfill came", "d": "7/2015"}, {"body": "dschmidt", "d": "7/2015"}, {"body": "bigger issue affecting components link views called early access called late get add", "d": "7/2015"}, {"body": "measurable performance hit using init event vs overriding init yes willdestroy destroy methods super api", "d": "7/2015"}, {"body": "nathanhammond yeah still seems issue canary another bin working previous version", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "works chromium amp firefox use polymer global setting include versions tested ember js polymer chromium firefox", "d": "7/2015"}, {"body": "bjornharrtell provide example project ember working polyer", "d": "7/2015"}, {"body": "question better asked stackoverlfow appear bug", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "couple months progress issue fixed would much like know proceed accordingly one major hurdles updating ember", "d": "7/2015"}, {"body": "nt look like anyone time prioritize yet", "d": "7/2015"}, {"body": "mixonic yeah understand higher priorities guys intention never fix fine stuck limbo knowing like definite eventually fix definite one effects never going fix rework naming components conflict occur could someone answer please", "d": "7/2015"}, {"body": "quoting definitely bug need fix", "d": "7/2015"}, {"body": "yes main special meaning better worse", "d": "7/2015"}, {"body": "think closed", "d": "7/2015"}, {"body": "addressed", "d": "7/2015"}, {"body": "ran thanks idea running setting async value old service still need available throughout app p would love see kind support async delaying instanceinitializers added back ember", "d": "7/2015"}, {"body": "flyswatter personally think asynchronous instance initializers bad idea nt participate router promise chain love use casedriven discussion improve syntactic sugar adding promises chain fwiw apps asynchronous setup give method returns promise rsvpall js export default routeextend auth service websocket service beforemodel let auth thisget auth let websocket thisget websocket effects async instance initializers without carving entirely different path system", "d": "7/2015"}, {"body": "tomdale suggestion also benefit presenting completely blank screen async done since use loading templates", "d": "7/2015"}, {"body": "hi tomdale zot zot works fine nt realize initializers prevented even loading templates taking place good argument continue way look back think mostly holding semantics initialization nt think use case left requires otherwise short maybe note docs async transactions recommended approach", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "timohofmeijer share solution using childviews mark menu items active navigation dropdown eg bootstrap navbar childviews able observed tree type navigation structures bit difficult work", "d": "7/2015"}, {"body": "basically wrapper component active classbinding observes route changes looks classes super elegant long application scope direct access painless else need pass along something triggers route transitions activelinkcomponentjs export default embercomponentextend classnamebindings active external binding currentpath null currentpath trigger could also use didtransition within route combined active embercomputed currentpath gt return amp amp active length applicationtemplatehbs activelink currentpathcurrentpath linkto parent parent route linkto parentfoo class ishidden linkto parentbar class ishidden activelink port alex speller pre solution within repo issues perhaps versatile solution offered rwjblue good luck kilowhisky", "d": "7/2015"}, {"body": "ended modified version topaxi turned array made recursive still seems like lot boilerplate", "d": "7/2015"}, {"body": "fixed due", "d": "7/2015"}, {"body": "please confirm close", "d": "7/2015"}, {"body": "wayplans provide context warning", "d": "7/2015"}, {"body": "found discussion trying update use new cp syntax ember automatically call thisget thisset returns undefined include ugly getters end setters would nice write", "d": "7/2015"}, {"body": "spruce aligned regular javascript getterssetters must return value setter function however good news ember changes behaviour returns value set instead target aligned js getterssetters means able write still explicitly return nice oneliner", "d": "7/2015"}, {"body": "nice thanks", "d": "7/2015"}, {"body": "would one solve one javascript streetcomplete embercomputed street streetnr get function", "d": "7/2015"}, {"body": "appears regression implemented work", "d": "7/2015"}, {"body": "ping dgeb resolver refactor got merged", "d": "7/2015"}, {"body": "igort ember version working making calls application application instance initializer sure working container removed container class available registry updated example would great updated failing test would even better", "d": "7/2015"}, {"body": "last checked update issueretest latest code next week", "d": "7/2015"}, {"body": "thrown example calling container understand core issue need communication channel registries associated containers clears associated caches", "d": "7/2015"}, {"body": "reopen seems lost changes rwjblue another syntax using", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "may good explore rfc rfc issue appears feature request bug report", "d": "7/2015"}, {"body": "stefanpenner start discussion appropriate place", "d": "7/2015"}, {"body": "make issue pr rfcs repo emberjsrfcs gather feedback interested seeing actual use cases rather foo bar discussion asap feedback taken account work angle bracket components", "d": "7/2015"}, {"body": "mmun made issue rfcs awhile since actual use case try come better example foo bar", "d": "7/2015"}, {"body": "hello running issue parent route want template default content render child route example import ember ember import config configenvironment router emberrouterextend location configlocationtype routermap channels route channels path route channel path slug export default router templateschannelsindexhbs brown fox jumped outlet content cool component displays within parent index view outlet templateschannelschannelhbs content child routetemplate possible seems touch template inheritance found issue way achieve currently", "d": "7/2015"}, {"body": "chiming lot exceptions production mobile safari", "d": "7/2015"}, {"body": "sure link cloutierlp jdurand kemenaran appear working apps used french speaking users idea could come play never know mobile safari different note anyone updated still getting", "d": "7/2015"}, {"body": "jbourassa interesting find start logging client locale see checks could stopped paying attention nt seen issue embersource emberdata jbourassa cloutierlp kemenaran ever linked user reported issue guys regularly seeing popup production fixed embersource emberdata deprecations amp breaking changes app end month either open new issue link post depending seeing logs", "d": "7/2015"}, {"body": "jdurand nope single user report anything seems linked updating last week hope fix still way behind emberdata might root cause report back production thanks update", "d": "7/2015"}, {"body": "thanks everyone continued investigation", "d": "7/2015"}, {"body": "itemcontroller deprecated removed point future definitely suggest refactoring avoid using deprecated features rwjblue really deprecated nt look like deprecation notes definitely believe say deprecated though", "d": "7/2015"}, {"body": "definitely deprecated apparently deprecation guide needs updated demo deprecation message", "d": "7/2015"}, {"body": "without reproduction information issue nt actionable seems gone stale closing gladly reopen actionable information provided", "d": "7/2015"}, {"body": "discussed someone via ember slack cases replace connecting attribute form element simply wrapping label content form element within use example instead subverts need unique maintaining niceties labels activating form element label clicked", "d": "7/2015"}, {"body": "sirzach able solve seems related possibly component error goes away strip template", "d": "7/2015"}, {"body": "visoft nt tested latest yet try remember update get chance", "d": "7/2015"}, {"body": "addressed", "d": "7/2015"}, {"body": "actual solution see original repo array added module call nt seem solve essentially identical problem mixonic exactly done pull object container issue opened detailing case", "d": "7/2015"}, {"body": "seems like bug password lib appears work correctly", "d": "7/2015"}, {"body": "scenario resource async relationship resource one viewsroutes want display composed string tags given contentitem attempted create property model using matter structure set return values results promise thread ember discussion forum shows even heavy hitters struggle require hack like one get around", "d": "7/2015"}, {"body": "plans making promises work natively streams bindings systems nt fix annoyances moves stuff along correct direction nt bug rather feature exist someone wants push forward feel free open issue rfc repo inclined full rfc", "d": "7/2015"}, {"body": "thanks update stefanpenner", "d": "7/2015"}, {"body": "docs fixed", "d": "7/2015"}, {"body": "took pass added failing tests morphrange tried narrow bug chrome failed find good reproduction got kris change order insertion hopes think repair issue would welcome eyes would like time dive back super frustrating", "d": "7/2015"}, {"body": "fixed special case list", "d": "7/2015"}, {"body": "throw case helps someone meantime", "d": "7/2015"}, {"body": "ember cli redering", "d": "7/2015"}, {"body": "use", "d": "7/2015"}, {"body": "ooohhh force wave never", "d": "7/2015"}, {"body": "guys hear something", "d": "7/2015"}, {"body": "looks like fixed perhaps workmanw please check also fixed", "d": "7/2015"}, {"body": "novtor checked canary issues still working updated jsbin canary links edit permant nonannoymous jsbin link", "d": "7/2015"}, {"body": "right workmanw bug persists checking route refreshmodel false queryparams worked looking forwrard fixing", "d": "7/2015"}, {"body": "shameless bump know everyone busy glimmer stuff still issue us spent minutes trying figure async promise architecture leads believe requires good amount ramp figure know lot code likely refactored routable components looks like least releases really like see easy fix advice would really appreciated", "d": "7/2015"}, {"body": "might right look", "d": "7/2015"}, {"body": "question based asked stackoverflow feel free cross link future travelers find way answer", "d": "7/2015"}, {"body": "currently freeze additional api like largely easily added via community addons without bloating ember time addons prove pivotal core reconsider", "d": "7/2015"}, {"body": "running issue well ended patching server side would nice ember didnt explode", "d": "7/2015"}, {"body": "railsjedi added pull request passes tests works fix error however like said ember folk might want fix differently might get lost pull anyway", "d": "7/2015"}, {"body": "could fix always pushing absolute url instead relative one eg instead since information allows us eliminate url parsing ambiguity explicit", "d": "7/2015"}, {"body": "tomdale yup think considering use shimmed version prefix url stated nt fix wo nt match route stefanpenner mentioned think suitable test", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "following turns referenced issue fix though would needed step original jsbin longer works updated one spent little time trying figure quite new ember take grain salt delegates routerjs microlib hits hits transitionbyintent note hits object example calls finally example would purposefully throw error convenience comment ideally throw error provide maximal information user enough context objects provided proves cumbersome ember cases inner template helpers evaluated parent helpers unrender cases error somewhat prematurely fires boils routerjs purposefully throwing error even would swallow still slightly better since see rejected promise error ie may also eventually complicated optional segments routes becomes thing reference failing test routerjs think helpful going humble suggestion move issue routerjs possibly routerecognizer change repo throw error avoid issue noted comment maybe handle leave someone knows good idea", "d": "7/2015"}, {"body": "machty take look", "d": "7/2015"}, {"body": "littlejon worked well thanks", "d": "7/2015"}, {"body": "facepunch noting still ongoing issue latest release ember", "d": "7/2015"}, {"body": "probably right regression bug stuck low priority seems affect tiny slice actual apps three major releases single bug report lot underspecified corner cases old implementation tried fix many practical would like fix one nt found time", "d": "7/2015"}, {"body": "bumped issue today app also jumped updated jsbin latest version seeing issue changing nested route rendertemplate seems working moment", "d": "7/2015"}, {"body": "glad one issue looked example workaround could nt get working original broken jsin", "d": "7/2015"}, {"body": "alexdiliberto seems fix make act like version bugs removed transfers route", "d": "7/2015"}, {"body": "yea still unfortunately removing block transition looks messed hopefully issue fixed", "d": "7/2015"}, {"body": "believe several fixes landed allow destroy called appinstance fix unrelated analysis potentially related leaks given example try upgrading latest canary ensuring instance destroyed rss levels stays stable submitted adjustments sure run process see lovely logging demonstrates rss settles time indicates leak reported issue fixed suspect additional leaks likely around someone finds nice reproduction would great making tracking issue relatively easy anyways joshvfleming thank detailed report suspect close issue", "d": "7/2015"}, {"body": "great thanks stefanpenner check today", "d": "7/2015"}, {"body": "confirmed", "d": "7/2015"}, {"body": "yessssss", "d": "7/2015"}, {"body": "stefanpenner whoops looks like actually leak remaining namespaces leak nt appear test app previously creating reusing one application updated create application request see steadily increasing rss run test script edit occurs might using application object wrong intended usage create single application use service requests really leak", "d": "7/2015"}, {"body": "may related issues tests well getting new instance acceptance test", "d": "7/2015"}, {"body": "intended usage create single application use service requests really leak yes", "d": "7/2015"}, {"body": "cool thanks stefanpenner looks like sorted", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "grantovich still open feel free close resolved mentioned discorick loading routesubstate seems disabled design", "d": "7/2015"}, {"body": "sandstrom right particular issue resolved close could problems resolved anyway nt able check yet", "d": "7/2015"}, {"body": "line comment use nt know fixes problem embercomputed used object space functions since rerun depending keys change", "d": "7/2015"}, {"body": "reside intended used part base class rather instance example approaching demo would likely separate object js var settings emberobjectextend editingculture embercomputedalias editingculture editorcomponents function let topicobj thisget topicobj property topicobj note technically possible add computed properties object fly would deem happy path recommend", "d": "7/2015"}, {"body": "rwjblue mentioned using quoted value results pass helper method makes final value believe happens fact case know needs happen fix maybe help need direction", "d": "7/2015"}, {"body": "ok digging understand problem issue fact helper found added following code method js var map arraymap function element return value element safe element instanceof emberhandlebarssafestring join function issafestring element return element instanceof emberhandlebarssafestring consolelog safe arraysome issafestring concat values map consolelog safe arrayevery issafestring concat values map following template model import ds emberdata project dsmodelextend attributes color dsattr string safecolor function return new emberhandlebarssafestring thisget color property color fixture data projectreopenclass fixtures id color id color get following web console output guess ca nt make return new know safe update would need know variables assumed safe please correct wrong assuming happens called seems like whatever parses dom element attributes calls need look", "d": "7/2015"}, {"body": "rwjblue embertemplatecompiler make attribute strings html safe words add embertemplatecompiler saying notice became", "d": "7/2015"}, {"body": "unable reproduce much work specifically around viewcomponent lifecycle cleanup leaks fixed someone able demonstrate please provide demo demonstrates gladly reopen", "d": "7/2015"}, {"body": "would also like understand test async responsibilities component something component unittest instead acceptance test pointers around think separating acceptance tests units tests would helpful", "d": "7/2015"}, {"body": "lifeinafolder may good reference nt cover async stuff covers alot maybe future iteration include support integration mode", "d": "7/2015"}, {"body": "stefanpenner thanks helpful clearing doubts", "d": "7/2015"}, {"body": "helpful clearing doubts hopefully eventually mostly cleared", "d": "7/2015"}, {"body": "stefanpenner would one go testing async stuff component integration tests component renders based promise hard time getting tests wait promise resolved moving next state quick example something like projectitem projectsprojects assertok check loading state deferredresolve array projects assertok chat loaded projects", "d": "7/2015"}, {"body": "rwjblue hi robert still throwing error input type tel number seems ember fixed branch stuck require support would nice get patched branch well", "d": "7/2015"}, {"body": "alright believe issue props attrs correctly reflect think best solution special casing heightwidth detecting string etc", "d": "7/2015"}, {"body": "note need fixed htmlbars keep open tracking issue", "d": "7/2015"}, {"body": "wycats tomdale reminder cc", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "also check", "d": "7/2015"}, {"body": "rwjblue fyi apps back white screen doom today updated sure yet similar regression changes ca nt run beta anymore least timeframe ember release cycles", "d": "7/2015"}, {"body": "pixelhandler sounds bad please open issues track cause happily fix anything bugs ember side", "d": "7/2015"}, {"body": "stefanpenner looks fixed", "d": "7/2015"}, {"body": "nt believe bb update sync", "d": "7/2015"}, {"body": "ianbale subscribe", "d": "7/2015"}, {"body": "reduce computerarray computed gone simply use basic mapfiltersortslice utilizing glimmers data diffing", "d": "7/2015"}, {"body": "work expected", "d": "7/2015"}, {"body": "jnfingerle work around still think work fixing backporting change version ember sure plans releases security releases", "d": "7/2015"}, {"body": "using elementid also addresses slightly though exact use case", "d": "7/2015"}, {"body": "breaks semver understand happen said nt problem fine closing rwjblue already", "d": "7/2015"}, {"body": "vasilakisfil exactly looking thanks totally unrelated issue though", "d": "7/2015"}, {"body": "sortablemixin deprecated goingforward please use works great glimmer box", "d": "7/2015"}, {"body": "stefanpenner documentation sortablemixin deprecated mention deprecation able find issue single stackoverflow answer deprecations doc example mentions arraycontroller going mixin api docs sortablemixin also nt yet mark deprecated question twofold official mixin way chance mark deprecated docs", "d": "7/2015"}, {"body": "viewcomponent lifecycles quirks earlier betacanary nicely reworked issue still present please report back sure using versions ideally sort reproduction repojsbin", "d": "7/2015"}, {"body": "using liquidfire best possible way get really good affects like basically liquidfire keeps dom around long enough animations cleanly would strongly recommend approach taken animation", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "would love angle bracket components land", "d": "7/2015"}, {"body": "glimmer fixed", "d": "7/2015"}, {"body": "deprecated", "d": "7/2015"}, {"body": "although strange appears working expected instead example written using datadown actions work expected", "d": "7/2015"}, {"body": "seems like browser bug dont believe fix end someone suggestion feel free let us know", "d": "7/2015"}, {"body": "wycats although want kill likely need way broadcast arbitrary enumerableiterable changed rerender", "d": "7/2015"}, {"body": "already gone", "d": "7/2015"}, {"body": "everything work", "d": "7/2015"}, {"body": "ok try update", "d": "7/2015"}, {"body": "nt something plan support directly merely wrap another component structure", "d": "7/2015"}, {"body": "cc tomdale likely broken boot order stuff guys changed", "d": "7/2015"}, {"body": "public api love solve use case leojh would mind explaining needing bare instance maybe public api could surface", "d": "7/2015"}, {"body": "tomdale ember app embedded inside aspnet web forms app know using api order request route transitions ember app host app breaking change achieved behavior following", "d": "7/2015"}, {"body": "leojh thanks reply sounds like workinprogress routing service exactly need wrap glimmer loose ends would love try get prioritized meantime fix approximately correct although may less brittle register instance initializer exports router rather poking", "d": "7/2015"}, {"body": "tomdale aware using recommended explore suggestion", "d": "7/2015"}, {"body": "tomdale breaking change likely fixed series potentially deprecated drop", "d": "7/2015"}, {"body": "stefanpenner nt believe ever public", "d": "7/2015"}, {"body": "stefanpenner believe documented public", "d": "7/2015"}, {"body": "feel free close fyi used many early jsbins leaked globals world", "d": "7/2015"}, {"body": "believe fixed reopen assuming reproduction provided", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "fixed routerjs fix merged", "d": "7/2015"}, {"body": "reposting nt needed best venue need keep bug tracker topic focused bugs become unwieldy", "d": "7/2015"}, {"body": "seeing similar issue using replace together queryparam definition", "d": "7/2015"}, {"body": "also came across today stands ca nt use keypress event work whether pressed", "d": "7/2015"}, {"body": "yes make sure id documented", "d": "7/2015"}, {"body": "github", "d": "7/2015"}, {"body": "also issue discovered today issue nt appear occur anymore", "d": "7/2015"}, {"body": "without reproduction actionable", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "unable reproduce someone able provide runnable reproduction gladly reopen", "d": "7/2015"}, {"body": "mixonic hi matthew still throwing error input type tel number seems ember fixed branch stuck require support would nice get patched branch well", "d": "7/2015"}, {"body": "adambuczynski backport nonsecurity bug fixes affected versions fix included forward", "d": "7/2015"}, {"body": "cheers rwjblue thanks prompt reply see convince upgrade", "d": "7/2015"}, {"body": "issue belong guides repository post issues related guides would great could update close issue reopen new one needed guide repos thanks", "d": "7/2015"}, {"body": "appears work expected view layer resilient changes prevent unexpected view churn", "d": "7/2015"}, {"body": "throw exception nt supported confuse users", "d": "7/2015"}, {"body": "mmun mind assigned problem p", "d": "7/2015"}, {"body": "checked still broken chains bindings still support globals", "d": "7/2015"}, {"body": "mmun must kill", "d": "7/2015"}, {"body": "basically boils nt valid html theory may able move delimiter high priority solve part new angle components stay tuned", "d": "7/2015"}, {"body": "ca nt wait work since last update", "d": "7/2015"}, {"body": "experiencing issue version causing acceptance tests fail using ehntoo hack temporarily run tests feedback would appreciated", "d": "7/2015"}, {"body": "seeing issue", "d": "7/2015"}, {"body": "reduce computed array computed overhauled implement simple cps lazy semantics correctly preserved way", "d": "7/2015"}, {"body": "working ember input event names list assumed would", "d": "7/2015"}, {"body": "looks like general bug work around use input directly html action helper ex best solution works", "d": "7/2015"}, {"body": "although good idea really bug report hope someone creates addon", "d": "7/2015"}, {"body": "pattern nt used long time service injection would better", "d": "7/2015"}, {"body": "tried reproduce issue could nt find problems problem still persisting please share jsbin steps reproduce fix bug", "d": "7/2015"}, {"body": "sortablemixin arraycontrollers deprecated bug invalid since glimmer landed suggested sortfilter cp let glimmers data diffing handle rest", "d": "7/2015"}, {"body": "working expected class inherits mixin classes different mixins instances var mymxin embermixincreate var myothermixin embermixincreate myobjectreopen mymixin apply mixin eventual mixins myobjectreopenclass myothermixin apply mixin class following cant true since describe different objects mymxindetect myobject myothermixindetect myobject", "d": "7/2015"}, {"body": "map observable neither use partial polyfil", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "looks like working confirm rwjblue", "d": "7/2015"}, {"body": "behavior exactly want exactly opposite", "d": "7/2015"}, {"body": "reducearray computed gone infavor naive mapfiltersort glimmers data diffing less bugs much faster", "d": "7/2015"}, {"body": "computed arrays reduce computed gone infavour naive sortfiltermap gp glimmer using data diffing efficiently handle render", "d": "7/2015"}, {"body": "theory could use seems called transition complete specifically currentroutename application controller nt updated future able inject routing service instead go application controller", "d": "7/2015"}, {"body": "confirm releasecanary", "d": "7/2015"}, {"body": "believe may sorted maybe", "d": "7/2015"}, {"body": "provided jsbin still reproduces problem", "d": "7/2015"}, {"body": "mmun consider bug internal api less leaky", "d": "7/2015"}, {"body": "imo addressed please reopen missed anything new helpers api nested helper usage seems cover usecases discussed without exposing streams could still improve offering interpolation helper outofthebox ember streams may eventually become public discussion issue rfc", "d": "7/2015"}, {"body": "everything good new helper api thanks hard work", "d": "7/2015"}, {"body": "handled recent implements kalmanh confirm canaryrelease", "d": "7/2015"}, {"body": "really bug much fundamental limitation named outlets painfully stateful tricky switching component right solution enter admin route chooses render content sidebar leave admin route content gets cleaned reentering application route never left appropriate application route rendertemplate run empty sidebar correct outcome personally favor deprecating named outlets entirely stop confusing people ca nt think anything components services ca nt better", "d": "7/2015"}, {"body": "switching component definitely felt right thought missing something named outlets glad switching component right thing", "d": "7/2015"}, {"body": "fyi embermobiletouch updated use ast transform provide default action none specified", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "seems reasonable believe larger effort exists run many ember addons nightly canary via combination travis support ember try", "d": "7/2015"}, {"body": "embera decorates real arrays extendprotoypes dom arrays funky things", "d": "7/2015"}, {"body": "work correctly", "d": "7/2015"}, {"body": "needs controller property deprecated", "d": "7/2015"}, {"body": "mixonic believe may know still valid", "d": "7/2015"}, {"body": "appears work correctly", "d": "7/2015"}, {"body": "thanks", "d": "7/2015"}, {"body": "eviltrout maybe interest", "d": "7/2015"}, {"body": "unfortunately nt device handy someone still sees issue gladly investigate maybe work device question", "d": "7/2015"}, {"body": "today run ember live tests android android test pass stefanpenner want fix bug test provide information btw tests failing every browser firefox", "d": "7/2015"}, {"body": "firefox emberhtmlbars emberselect usage inside templates upon content change dom reflect selection dom reflects correct selection expected result source applycurrent lt firefox bug ca nt work around also disabled", "d": "7/2015"}, {"body": "today run ember live tests android android test pass stefanpenner want fix bug test provide information btw tests failing every browser emberroutinghtmlbars action helper global failure uncaught typeerror skip function source surprising", "d": "7/2015"}, {"body": "new bug", "d": "7/2015"}, {"body": "firefox bug ca nt work around also disabled test disabled canary believe issue simulating behavior js works user interacts", "d": "7/2015"}, {"body": "opened issue ff test remember", "d": "7/2015"}, {"body": "components form inputs work dom intended issue exists please report repro", "d": "7/2015"}, {"body": "believe fixed works expected", "d": "7/2015"}, {"body": "working expected class inherits mixin mixins mixed class future instance prototype everything appears working correctly", "d": "7/2015"}, {"body": "seems gone stale reproduction provided gladly look", "d": "7/2015"}, {"body": "qp moving routes", "d": "7/2015"}, {"body": "fixed due rsvp upgrade", "d": "7/2015"}, {"body": "glimer believe addressed feel free reportreopen", "d": "7/2015"}, {"body": "largely fixed glimmer newly refactored acrc helpers", "d": "7/2015"}, {"body": "seems gone stale", "d": "7/2015"}, {"body": "eviltrout samsafron may interest", "d": "7/2015"}, {"body": "closed reason rfc also plan ensure works", "d": "7/2015"}, {"body": "late", "d": "7/2015"}, {"body": "believe works", "d": "7/2015"}, {"body": "arraycontroller itemcontroller deprecated", "d": "7/2015"}, {"body": "igort bmac fivetanley whats status emberdata one", "d": "7/2015"}, {"body": "thanks fix ran updating code views components trying things ember way used fix component example modal dialog boxes pieces modal puzzle used approach mastering modals used bootstrap modals using jqueryui dialogs modal nonmodal javascript import ember ember export default embercomponentextend didinsertelement function bug fix save original position text nodes var domelement thisget elementid thisset originalposition parent domelementparent index domelementparent contents index thiselement end bug fix var var diagref dialog title thisget title minheight height minwidth width modal true autoopen true close function consolelog modal dialog close function called diagrefdialog destroy bug fix restore element original position text nodes var domelement thatget elementid var originalposition thatget originalposition var next originalpositionparentcontents eq originalpositionindex nextlength amp amp next domelement nextbefore domelement end bug fix thatsendaction close", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "yay seems working thanks lot hard work", "d": "7/2015"}, {"body": "problem would appear emberdata issue", "d": "7/2015"}, {"body": "api", "d": "7/2015"}, {"body": "nice see tidying", "d": "7/2015"}, {"body": "rcac gone glimmer data diffing simple mapsortreduce cp replaces wonderful results", "d": "7/2015"}, {"body": "likely going happen due making stubbing mocking tests trickier", "d": "7/2015"}, {"body": "itemview deprecated simpler recommended", "d": "7/2015"}, {"body": "rcac gone infavor glimmers data diffing naive sortfilters", "d": "7/2015"}, {"body": "helpers calling helpers", "d": "7/2015"}, {"body": "confusing", "d": "7/2015"}, {"body": "likely revisit drops support concept enumerable vs non enumerable properties across target platforms infact aspects ember already rely concept someone interested championing rfc may able reopen things thought", "d": "7/2015"}, {"body": "hack even unreliable", "d": "7/2015"}, {"body": "codebase try anymore idea ones might try copy see works codebase embercrumbly breadcrumbs component add poteto uses injection access makes computed property top wonder issue still present app information gathered particular way", "d": "7/2015"}, {"body": "looks like accessing directly router instance reliable however sync js didtransition thissuper arguments emberrunonce function consolelog thiscurrentroutename accurate consolelog thisget url stale", "d": "7/2015"}, {"body": "hey guys quick question clear confusion looking code change make checkbox extend wondering implications change mean next release ember able write triggered something else related question gon na able write something like issue right like notified user toggles checkbox programmatically change value way notified change set observer checkbox value unfortunately observer triggered user clicks checkbox toggle value programmatically therefore wondering change would help accomplish trying", "d": "7/2015"}, {"body": "gzurbach ember following", "d": "7/2015"}, {"body": "awesome thanks quick reply stefanpenner always", "d": "7/2015"}, {"body": "likewise problematic creating query param property base controller causes transitioning route child controller fail error", "d": "7/2015"}, {"body": "revisit part ember objects look land classes", "d": "7/2015"}, {"body": "itemcontroller arraycontrollers deprecated", "d": "7/2015"}, {"body": "think recent work sorts", "d": "7/2015"}, {"body": "needs deprecated", "d": "7/2015"}, {"body": "think issue closed specific issues reopened glimmer landed", "d": "7/2015"}, {"body": "must kill time basically quit computers dont", "d": "7/2015"}, {"body": "cc martndemus", "d": "7/2015"}, {"body": "implement select following way note make complex simple want dom example also emberselect deprecated", "d": "7/2015"}, {"body": "case someone still problem requires solution right js approutesyourroutejs export default emberrouteextend actions willtransition transition var model thiscontrollerget model modelget hasdirtyattributes amp amp confirm going discard unsaved changes sure transitionabort nt like use methods directly like way right handle types locations", "d": "7/2015"}, {"body": "updated jsbin last year issue still exists", "d": "7/2015"}, {"body": "release build also aware seems issue updated jsbin", "d": "7/2015"}, {"body": "andrewle im sorry im slightly confused issue deemed expected behavior reporting expected behavior still remains issue exists", "d": "7/2015"}, {"body": "stefanpenner ah sorry read response incorrectly right indeed intended behavior certainly one trips fairly often expect happen", "d": "7/2015"}, {"body": "itemcontroller arraycontroller deprecated", "d": "7/2015"}, {"body": "issue still present ff deved least case deprecation warnings one developing ff user reporting", "d": "7/2015"}, {"body": "proxying controllers deprecated", "d": "7/2015"}, {"body": "reduce computed gone glimmer allows us simpler sortfilterreduce simple arrays return fresh one time", "d": "7/2015"}, {"body": "wont supported enumerable private planned future use", "d": "7/2015"}, {"body": "fixed", "d": "7/2015"}, {"body": "maybe rsvp try coerce toarray unsure rsvp support ember", "d": "7/2015"}, {"body": "checked likely runtime started shipping isarray", "d": "7/2015"}, {"body": "support", "d": "7/2015"}, {"body": "super async wont solved migrate full classes luckily simple workaround exists less transpiler export default embercontrollerextend something var boundsuper thissuperbind", "d": "7/2015"}, {"body": "issue single select js objectcontroller klasses embercomputedfilterby klasses isnew false route controllerset klasses modelklasses know deal", "d": "7/2015"}, {"body": "readonly macro meaning consume either via api template try set throws assertion check jsbin working example", "d": "7/2015"}, {"body": "thankmodel section", "d": "7/2015"}, {"body": "yeah example would nice wonder people deal nested components currently bubbling actions", "d": "7/2015"}, {"body": "issue well case nested components addon view ember listview would prefer add actions", "d": "7/2015"}, {"body": "issue would rather create component list view able catch clicks item components", "d": "7/2015"}, {"body": "think worth noting entire point components selfcontain logic scope moment allow actions bubble could end confusing soup chaos say wo nt send action accidentally caught addon using unfortunately also defined action name opinion using syntax force pass handlers perfect wed jul pm laura williams notifications githubcom wrote issue would rather create component list view able catch clicks item components reply email directly view github", "d": "7/2015"}, {"body": "improved actions landed docs", "d": "7/2015"}, {"body": "thank doc links helpful", "d": "7/2015"}, {"body": "stuff blindly enumerates foreachs", "d": "7/2015"}, {"body": "bit trying test code uses emberrunlater really nt like idea running different code path testing vs production sign code nt testable begin", "d": "7/2015"}, {"title": "android specialtreats proto jsonparse", "body": "androids surprisingly android fine treats specially may lead security issues extended forbid messing objectprototype work around deleting result using seems help", "num": "2515", "d": "7/2015"}, {"title": "clone jquery library copy value", "body": "opened question basically looking way duplicate variable expose copy value could easily expose copy reference must keep library sandbox acceptable would best way achieve thanks", "num": "2514", "d": "7/2015"}, {"title": "nt expose jqueryaccess", "body": "public amp undocumented reason keep way removed amp see also", "num": "2513", "d": "7/2015"}, {"title": "nt expose jquerydir amp jquerysibling", "body": "undocumented apis shipped jquery object two amp reason exposed amp undocumented minimize number cases amp see also", "num": "2512", "d": "7/2015"}, {"title": "input blur work ie keeps focus fire delegated events anymore", "body": "test suite main jquery branches jquery branch jquery branch second field disabled blur field loose focus every browser except ie tested also native simulated ie versions like ie focus still field type delegated events require focus fire anymore like keyup update works well brand new micorosft edge expected native ie problem big problem things like validation key events trigger still type anything also many cases imagination", "num": "2511", "d": "7/2015"}, {"title": "ajaxbeforesuccess global event ajaxprefilters promises", "body": "understand using ajaxprefilter preferred approach adding new hooks however works success call embeded data object sent xhr doesnt work promised ajax currently global event fires even without success callback basically deferred resolved keep things consistent wish way register beforesuccess global event fired even promised ajax events easy duplicate global event code run addition deferredresolve calls srcajaxjs existing way achieve beforesuccess event want run event ajax success running callbacks resolving promises", "num": "2510", "d": "7/2015"}, {"title": "include color animations core", "body": "fing ridiculous day one still needs use plugin order able animate colors time years functionality included core", "num": "2508", "d": "7/2015"}, {"title": "add basic tests android master drop full support", "body": "jquery include basic support android bigger noncritical workarounds like tests need written create divergence amp test files propose create separate module basic tests thoughts", "num": "2505", "d": "7/2015"}, {"title": "data new dataasexpando implementation clear user data", "body": "new dataasexpando stopped clearing data element cleaning private data added back user data inconsistent", "num": "2503", "d": "7/2015"}, {"title": "switch support tests use documentdocumentelement instead documentbody", "body": "see used support tests test failures seems longer problem able run support tests document ready give correct result synchronize code paths refs", "num": "2502", "d": "7/2015"}, {"title": "support nonbrowser environments jquery compat", "body": "per today meeting try support nonbrowser environments jquery compat", "num": "2501", "d": "7/2015"}, {"title": "xhr throws exception accessing responsetext responsetype arraybuffer", "body": "try using code issues exception firefox accessing instead changed going work current version make pr anyone something laying around", "num": "2498", "d": "7/2015"}, {"title": "error syntax error unrecognized expression unsupported pseudo chekced", "body": "", "num": "2497", "d": "7/2015"}, {"title": "using hasownproperty check property exists prototype", "body": "hi seems like jquery using hasown hasownproperty check property object property exists prototype object chrome started returning false per following post seems using operator may resolve issue example problem occurs line trigger function event data elem onlyhandlers causes issue line typeindexof gt hope makes sense daniel", "num": "2496", "d": "7/2015"}, {"title": "consider using conventionalchangelog generate changelog github release", "body": "conventionalchangelog conventionalgithubreleaser also gruntgulp tasks automate process writing changelog using formatted commit messages logs generated well according parts message use handlebars templating logs also ignore reverted commits many features jquery preset people using jquery commit format modules actively maintained", "num": "2495", "d": "7/2015"}, {"title": "uncaught rangeerror triggering event big array parameter", "body": "js var arr var lt arrpush var el jquery body elon testevent function eltrigger testevent arr uncaught rangeerror maximum call stack size exceeded htmldivelementjqueryeventdispatch htmldivelementelemdatahandle objectjqueryeventtrigger htmldivelement functionjqueryextendeach jqueryfnjqueryeach jqueryfnextendtrigger objectinjectedscriptevaluateon objectinjectedscriptevaluateandwrap looks like problem lines wrapped array array", "num": "2494", "d": "7/2015"}, {"title": "table manipulation regression xhtml", "body": "jquery introduced xhtml regression appending updating table rows appears outermost element every etc gets removed contents outermost element actually appended set innerhtml simple test case requires properly demonstrate regression html one two three xhtml mode resulting dom equivalent html one two three four five six seven eight nine also noticed xhtml test harness broken likely regression occurred outside scope issue", "num": "2493", "d": "7/2015"}, {"title": "elements selected id id contains dot", "body": "according html html specifications idattribute may contain dots first character html however id contains dot jquery select element tested firefox ubuntu version chromium ubuntu test program exhibits buggy behavior test foobar test program using jquery selection exhibit buggy behavior test foobar", "num": "2492", "d": "7/2015"}, {"title": "remove unspecifiedclass toggleclass signature", "body": "cf inaccurately documented probably working correctly easy manually implement library consumers ca nt even come reasonable use case calling removalrestoration classes", "num": "2491", "d": "7/2015"}, {"title": "css clippath working", "body": "using jquery following code however prefix style following works seems like rule maybe others works chrome vendor prefix however since following true method assumes nonprefix style work", "num": "2489", "d": "7/2015"}, {"title": "incorrect slidedown method behavior element height", "body": "example issue steps reproduce open example using link click toggle button maybe several times see element height become visible short time hidden waiting reaction method call element height description every button click slidedown slideup methods called box element rotation", "num": "2488", "d": "7/2015"}, {"title": "bug function ajax plugins", "body": "seems bug ajax put plugin function inside function plugin gets called sure functions know accordion sure sure anything else behaves way built ajax listener function assuming one else ever encountered issue nt solved discussion bug core temporary work around problem press page long term fix would patch core", "num": "2485", "d": "7/2015"}, {"title": "microsoft edge compat", "body": "hey jqs going point contact library compatibility edge know current compat ranges jquery bugs blocking operational compat edge daniel", "num": "2484", "d": "7/2015"}, {"title": "reduce android support master investigate android support", "body": "already fully supporting android hard truth never fully supported android first unit tests nt pass couple modules serious ajax issues error handling seems pretty serious see manipulation issues checked radios even though tests pass cheat little putting android special paths amp maintenance cost various problems happen android eg turns nt allow unquoted reserved words property names exactly favorite happens quite often something nt work eg currently reason ajax tests hang near beginning surprisingly works lots hours constantly put making browser work tests market share released last stable version jquery omitting patches year half ago android still large market share currently google stats show android versions mobile market share android market share real percentage might little higher counted via google play store still large back size cutting android support see experimental branch saves bytes gzipped support test workaround making tests pass would add resolution couple ways solve problem nt change anything try make android finally pass amp continue suffer drop support keep still suffer although little less reason android problems happen often support android partially ensure parses jquery correctly run basic tests ensuring important apis work common inputs nt care perfect compliance less suffering smoke testing may effective also hard draw line important drop support branches redirect people still needing support amp jquery lines cc jquerycore scottgonzalez arschmitz", "num": "2483", "d": "7/2015"}, {"title": "drop ios amp safari support", "body": "according official apple dashboard currently ios versions older ie ios market share mobile market share besides desktop safari possible install el captain yosemite amp mavericks ie os x versions receive security fixes el captain released fall apple continues current strategy note mountain lion safari installed include engine shared safari appears mac app store alongside system updates nt think worth supporting browser already soon test safari amp three versions cc arschmitz talking mobile browsers well", "num": "2482", "d": "7/2015"}, {"title": "catch property needs quoted android", "body": "apparently android nt like property fails deferred tests completely since need quote branch way ensure nt change back without turning jshint option maybe via jscs cc rwaldron markelog", "num": "2478", "d": "7/2015"}, {"title": "jquery reliably trigger events added addeventlistener", "body": "jquery still code around attempts trigger nativecustom browser events added events call backwards compatibility uses onevent accessor reliably expose event handlers added though even though browsers expose handler events jquery care apis stone age would great instead triggered jquery apis play nice nonjquery apis references reproducer jq bug report several years ago stackoverflow nicely describes instance problem mention encountered issue tried marry json editor jquery mobile select element turns jquery mobile manipulates select dom node calls whereas json editor listens dom changes using", "num": "2476", "d": "7/2015"}, {"title": "unable modify jquery element already modified", "body": "ca nt modify modified jquery element using example element jquery object var element div unique element attr title hello world success element title hello world element data test lorum ipsum failure element attribute datatest element already modified setting title hello world code windowclientsidevalidationsformbuilders actionview helpers formbuilder add function element settings message element parent fieldwitherrors capitalize message function return touppercase ssubstr message remove function element settings element parent fieldwitherrors element attr title", "num": "2470", "d": "7/2015"}, {"title": "method remove handlers registered method multiple events", "body": "use method multiple events unique namespace example use namespace removes last event setted example", "num": "2469", "d": "7/2015"}, {"title": "use elementmatches event delegation", "body": "jquery event delegation based method handler filtering developer uses event delegation everytime event dispatches calls gets collection delegated targets checks one one mechanism basically event delegation implementation based another implementation based times faster would jquery consider using instead", "num": "2468", "d": "7/2015"}, {"title": "ca nt chain multiple find calls using sizzleless build", "body": "looks like function resolved correctly jquery builded without sizzle dependency try call chained methods getting following exception tc build jquery try chain multiple calls eg html title foo bar consolelog div find span length exception thrown happens also calls eg experienced", "num": "2466", "d": "7/2015"}, {"title": "jquery added window required using browserify", "body": "installing jquery via requiring browserify sets flag true resulting jquery automatically added property window object common way loading jquery plugins available commonjs modules browserify stack shim using configuration jquery added dependency whenever plugin required jquery required aswell plugins fail required nevertheless require properties window object exist set whats usecase adding properties window object solve problem", "num": "2463", "d": "7/2015"}, {"title": "inconsistent casting w data", "body": "given returns string expected returns number wat seem anybody else seems values values end fiddle", "num": "2462", "d": "7/2015"}, {"title": "ajaxerror fire since", "body": "ajaxerror event never fire script content inside html parse appendto script file exist found fire version look like bug line response ajaxconvert response jqxhr issuccess issuccess check example see", "num": "2461", "d": "7/2015"}, {"title": "tested latest development jquery breaks plugin", "body": "tested latest development version jquery one appears breaks following plugin bug report guys look error firefox threw still bug jquery plugin works leads believe broke something late revisions", "num": "2460", "d": "7/2015"}, {"title": "load jquery present", "body": "want include jquery file included already page inserted statement beginning minified jquery file windowjquery undefined would nice jquery would able detect already defined case would nt load warning error javascript console could indicate loaded version different sorry bad english", "num": "2459", "d": "7/2015"}, {"title": "android hangs ajax test", "body": "android hangs ajax test appears android nt fire errors dynamically inserted scripts instead hanging whole module accept reality skip assertion love actual fix nt see easy way anyone previous attempt fix happened hang appears well", "num": "2457", "d": "7/2015"}, {"title": "uncaught typeerror use operator search scrolltop undefined", "body": "coffeescript gt scrollup backtop click gt window animate scrolltop linear window scroll gt window scrolltop gt backtop fadein else backtop fadeout", "num": "2456", "d": "7/2015"}, {"title": "jquery breaks sinonjs xhr mock", "body": "following snippet passes jquery broken jquery using browser latest chrome js qunittest request function assert thisserverrespondimmediately true var thisserverrespondwith modeapi function request requestrespond contenttype applicationjson value jsfiddle jquery jsfiddle jquery using jquery somehow unable make subsequent requests end test", "num": "2453", "d": "7/2015"}, {"title": "nt work", "body": "normally remove elements set matched elements nt work pages even simple pages like console body span body span return full body jqueryminjs version", "num": "2452", "d": "7/2015"}, {"title": "grunt build fails repository folder path contains var", "body": "hi trying build custom jquery although strictly followed instructions readme get warning force build process nt work either macbook pro eg running results grunt custom ajax running custom ajax custom task creating custom build running build ajax build task ajax ajaxjsonp ajaxload ajaxparsejson ajaxparsexml ajaxscript ajaxvarnonce ajaxvarrquery ajaxxhr manipulationevalurl eventajax warning typeerror read property null objectconvert onbuildwrite use force continue trying build custom version jquery different machine imac get warning ideas wrong thanks advance", "num": "2450", "d": "7/2015"}, {"title": "feature request parent n", "body": "would nice function accepted optional numeric parameter indicating many levels go start respectively argument could existing optional selector filter results first argument nonnumeric original behavior would remain would get greatgrandparent parent grandparent greatgrandparent element would get second parent grandparent element matches selector would get ancestors aboveexcept firstimmediate parent would get except filtered selector maintainers open might submit pr", "num": "2449", "d": "7/2015"}, {"title": "code climate", "body": "could nt find issues wondering could setupintegrate codeclimate help code review", "num": "2448", "d": "7/2015"}, {"title": "datafilter invoked error callback", "body": "method invoked order promise callbacks invoked callback prevent json vulnerabilities return prefixed json error success responses since invoked end property property contains parsed response object example invoked callback strip prefix response correctly parsed case current versions", "num": "2447", "d": "7/2015"}, {"title": "longer access jquery custom events using", "body": "following snippet output jquery custom event object using jquery output version onward longer case pity object provides insight custom events aware issue", "num": "2445", "d": "7/2015"}, {"title": "core eq true modulo feature", "body": "hi day work quickly fix something wrote example wanted get etc wanted go direction complex write negative modulo integrate modulo directly inside instead actual code maybe write maybe new one methode", "num": "2443", "d": "7/2015"}, {"title": "jquery animate sets initial value animating width", "body": "jquery version observed chrome ie amp ff developer windows originally posted stackoverflow jsfiddle example broken jsfiddle example fixed working implementation sidebar slides left squashing main content div goes see demo sliding works fine comes sliding back sidebar div set width animation starts causing jarring effect easier see inspect sidebar element watch width css property carefully rory mccrossan stackoverflow thread points replacing solves issue leading believe may jquery bug", "num": "2442", "d": "7/2015"}, {"body": "understand correctly suggesting code changes ensure returned objectsarrays recursively contents standard prototype chains nothing less would oppose anyone willing pay code size performance penalties duckpunch hardened function hate make decision universally even clear changes would increase security practical terms since proper json parsing allows creation actual arrays arraylike objects mention fact function pretty much equal vulnerability property global object eg modify modify properties directly way find", "d": "7/2015"}, {"body": "yes thought modifying maybe right nt understand variables way trick via modifying native prototypes case said doomed anyway way find recent android nonquoted property name bug interested browsers actually less run test suite couple knew ie ok version nt sure android turns first version fails one failed tests checking exactly nt find reallife code", "d": "7/2015"}, {"body": "right", "d": "7/2015"}, {"body": "ok since fears overblown closing issue thanks", "d": "7/2015"}, {"body": "jquerysub sth like removed implementation still exists jquery migrate sure removed perhaps difficult reliably clone jquery isolation nt guaranteed anyway dmethvin would know time team", "d": "7/2015"}, {"body": "perhaps difficult reliably clone jquery isolation nt guaranteed anyway pretty much jquerysub halfway sat largely unused complicated sounds nt plan adding functionality future think answer stack overflow question sufficiently comprehensive tricks done probably ways around loading jquery twice sandboxed jquery absolutely necessary", "d": "7/2015"}, {"body": "thanks report unfortunately versions ie even ie fire amp events asynchronously easy way work around generically enough include workaround jquery good news fixed new microsoft edge browser ie stay forever please also see amp previous related bug reports btw way make field disabled natively via attribute work even ie nt blur field looks differently style via css needed", "d": "7/2015"}, {"body": "ok weird well know things general disable fields require disabled fields send via post attribute disabled fields ignored stuff make working thx anyway", "d": "7/2015"}, {"body": "yeah wish way work around side surely pain developers related things hard fix library", "d": "7/2015"}, {"body": "nevermind figured ajaxprefilter function options originaloptions jqxhr var originalsuccess optionssuccess", "d": "7/2015"}, {"body": "please mind language nothing prevents using plugin code around pretty long trivial task animate across many possible syntaxes see looking size jquerycolorjs file including core would needlessly penalize users nt need functionality", "d": "7/2015"}, {"body": "basic vital functionality including core would needlessly penalize users nt need functionality argument applies functionality could argue favour dismembering jquery thousands plugins minimal core almost nothing determines whether sensible functionality core vital large proportion users using jquery likely need balance course cost terms extra code needlesly additional hundreds bytes minimized code penalizes users nt need include additional plugin every superbasic functionality penalizes need lot note former almost negligible penalisation latter true pain ops sorry mind language trade definitely favour core unless really vast majority users going need animating colors pretty sure case", "d": "7/2015"}, {"body": "first issue long time remember asks inclusion jquerycolor core nt seems huge demand features implemented today would likely plugins instead parts core ship sailed plugins may depend core", "d": "7/2015"}, {"body": "completely agree current code several things would better done plugins easy see needs universal often case asking users combine files use package manager heavy burden complicated use multiple script tags", "d": "7/2015"}, {"body": "matter seeing one need universal obviously nt universal need add damn new plugin every basic little trivial feature oh sh wait look plugin every five minutes particular case animating colors able animate widthheightpositionopacity able animate color ridiculous always since beginning yes perfectly understand animating color much convoluted may argue animate plugin well least would consistent provided included colors animations whole plugin makes sense core makes sense though consider poor choice animations core except colors inconsistent ugly another approach consistent insane would plugin every single animatable css property set properties based criteria grouping kind approach going take obviously animations general approach well really sad", "d": "7/2015"}, {"body": "create divergence amp test files propose create separate module basic tests thoughts like idea would rather see name like basic minimal tied given suite might apply eg jsdom phantomjs", "d": "7/2015"}, {"body": "would rather see name like basic minimal tied given client works good idea jsdom amp phantomjs btw might hard add", "d": "7/2015"}, {"body": "pr progress need feedback continue", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "probably need go back block around getting whole response sorting", "d": "7/2015"}, {"body": "seems like subverting normal processing model confusing code far concerned still request look wondering defining converter arraybuffer datatype would appropriate way provide complete example", "d": "7/2015"}, {"body": "defined using install plain datatype jqueryajaxsetup accepts plain textplain responsefields plain response converters plain function arraybuffer arraybuffer return new arraybuffer handle cache special case global jqueryajaxprefilter plain function originalsettings jqxhr sxhrfields responsetype arraybuffer sdatatypes plain return plain however nt get converter right know btw need responsetext string types want see hard bytes arraybuffer", "d": "7/2015"}, {"body": "example failing", "d": "7/2015"}, {"body": "sorry delay code looks bit like function searchbyitemnumber tmpvalue originfield var transaction pimsdbtransaction drugs var objectstore transactionobjectstore drugs var request objectstoreget tmpvalue requestonsuccess function e etargetresult null searchbypopcode tmpvalue originfield else var event new customevent drugsearchcomplete detail etargetresult originfield trigger event inside jquery code following line trigger function event data elem onlyhandlers hasowncall event type used return true chrome since change mentioned link posted returns false error occurs typeindexof type become type customevent string expected understanding type property nt belong event object belongs event prototype hasownproperty returns false temporarily changed jquery code fix application follows type type event eventtype event application fixes problem nt cause issues ca nt certain would applications hope makes sense cheers dan", "d": "7/2015"}, {"body": "please provide minimal complete test case micha\u0142 go\u0142\u0119biowski", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "thanks test case exactly needed behavior changes chrome introduced align implementation standard browsers eg firefox behaved way long time nothing new see fiddle fails firefox well agree follow prototype chain", "d": "7/2015"}, {"body": "welcome hope helps", "d": "7/2015"}, {"body": "assign issue want start contributing jquery", "d": "7/2015"}, {"body": "mansisce submit pr github nt allow assign issues people nt commit access repository", "d": "7/2015"}, {"body": "mansisce also check lots useful info contribute jquery questions nt hesitate ask preferable irc channels thank interest", "d": "7/2015"}, {"body": "trying trigger native raw dom using jquery valid api input create pass custom event string like", "d": "7/2015"}, {"body": "clarify since raw dom event never passed important properties raw dom event object code check object", "d": "7/2015"}, {"body": "sample logs sizzle update committed dependencies update support add android support tests results add expected support results safari amp add support tests results clean comments support notation closes correct ios support test results rearrange entries document boxsizing unprefixed firefox make support matrix ios match ios well reorganize browser order add safari reduce size skip stylebased tests elementstyle undefined closes tests accommodate page changes qunit html reporter add assertion jquery val method add microsoft edge results windows build add tests sizzle attributes add test selectors commas add current version node iojs travis config closes avoid use qunitreset tests splitting closes blacklist beforeunload test ios closes blacklist one effects test chrome bring back cleanup logic clean isnumeric tests copy sizzlecontains tests copy sizzleuniquesort tests copy sizzle combinators tests correct typo regex matching safari correct logic broken assertion global clean teardown function expand css relative adjustment tolerance ie fix code style issues fix css relative adjustment test rounddown browsers fix failing ajax tests oldie fix safari useragent detection fix tests accordance new visible behavior improve jsonp tests increase qunit timeout closes make top html suite compliant style guide closes minor updates qunit compatibility improvments testrunner move sizzle tests selector remove empty line whitespace remove shiv remove obsolete speed directory closes remove one checks memory leak remove qunit start hook remove sizzle intergration tests closes remove unused variables remove uselss keys helper simplify testtimeout option simplify globals cleanup tilt style guide windmills update qunit traversing optimise add using makearray closes traversing check pairwise element combinations find els closes wrap declare dependency manipulation module closes support unwrap selector selective unwrapping closes", "d": "7/2015"}, {"body": "afraid ca nt much specific release process generates changelogs publishes website nt see much reason switch alternative solution fine", "d": "7/2015"}, {"body": "cc scottgonzalez", "d": "7/2015"}, {"body": "documented every element array actually arraylike passed becomes handler argument since javascript engines fare poorly excessive argument counts recommend wrapping large arrays avoid expansion", "d": "7/2015"}, {"body": "test chrome html append append append problem ca nt use jsfiddle", "d": "7/2015"}, {"body": "doc served right tho said otherwise wo nt xhtml looks like ca nt xhtml", "d": "7/2015"}, {"body": "need escape dot like using see", "d": "7/2015"}, {"body": "special character must escaped use instead", "d": "7/2015"}, {"body": "jostbaron try use instead escaping something difference", "d": "7/2015"}, {"body": "right course jquery takes selector getelementbyid takes id dots selectors different dots ids thanks pointing fault sometimes use dot example id generated phps set", "d": "7/2015"}, {"body": "even current described behavior switch provided confusing amp nonintuitive", "d": "7/2015"}, {"body": "nt think much use signature wild eighter", "d": "7/2015"}, {"body": "confirmed thanks report works safari chrome broken good news chrome stable went today bug fixed nt think anything us unless properties nt work way know sth like please let us know amp reopen", "d": "7/2015"}, {"body": "sorry mistaken still broken test case borked", "d": "7/2015"}, {"body": "tests seeing similar problems prefixed versions work unprefixed forms getting picked still chrome test", "d": "7/2015"}, {"body": "sure open chrome issue link prefixed amp nonprefixed property accept different syntaxes lot check properties checking value applied properly falling back prefixed property would error prone workaround would invoke directly aware though jquery amp bug using setter vendorprefixed property fixed amp included jquery sure use nonprefixed setter first prefixed one second avoid bug", "d": "7/2015"}, {"body": "done", "d": "7/2015"}, {"body": "thanks let see say", "d": "7/2015"}, {"body": "stems rather curious heightwidth exception ultimately dating way back jquery doubt still relevant would comfortable removing objections jquerycore", "d": "7/2015"}, {"body": "seems safe remove long ie whatever nt throw problems try set widthheight think guarding somewhere else anyway recently also lol comment line back", "d": "7/2015"}, {"body": "works fine without hack removing", "d": "7/2015"}, {"body": "great identify problematic behavior actually ie flicker nt quite precise enough", "d": "7/2015"}, {"body": "jeresig probably", "d": "7/2015"}, {"body": "lord knows probably ie something feel free nuke ca nt reproduce", "d": "7/2015"}, {"body": "could create test case hard see exactly problem description use ajax requests thanks", "d": "7/2015"}, {"body": "mzgol provide example hard load link rather soft load swapcontent mainswapphp pagehorticulture bodydiv console", "d": "7/2015"}, {"body": "mzgol see bug something forgot", "d": "7/2015"}, {"body": "phppluginmaster think debug using site like jquery forum stackoverflow turns jquery problem let us know providing simple test case point suspect problem code generally jquery team nt try debug people pages", "d": "7/2015"}, {"body": "dmethvin run site suggested test know modal works refresh test console input test scanning word ajax call started jquery post could nt solve posted jquery bug answer finally decided post bug good video capture software use show confused still bug solved quicker", "d": "7/2015"}, {"body": "sure steps asking us take debug however asking provide steps us right ticket instead see get help forum eliminated extraneous code reduced know whether bug logic problem jquery", "d": "7/2015"}, {"body": "phppluginmaster sure solves problem think forgot uncomment line", "d": "7/2015"}, {"body": "yep want run ca nt break accordion site try running function link console show broken accordion also fixed need old style load dmethvin tried jquery forum look blankly", "d": "7/2015"}, {"body": "phppluginmaster debugging whole site takes time nt remember volunteers try stack overflow jquery forum nt work test case entire site much", "d": "7/2015"}, {"body": "mzgol refuse run ajax page load closed bug report remain open run function ajax call ever run ajax function load new data close someone pointed talking runtime error function", "d": "7/2015"}, {"body": "nt close ticket code works closed valid bug report please find folks help debug page find whether bug code bug jquery", "d": "7/2015"}, {"body": "dmethvin code works whole page refresh partial page refresh bug partial refreshes whole refreshes desired method nt allow function work even attempt executing commented function page seems like nt bug still exists commenting part meant temporary fix long term fix want show bug video gladly understand talking", "d": "7/2015"}, {"body": "video capture bug", "d": "7/2015"}, {"body": "phppluginmaster need separated minimal test case means need take page offline remove much still reproducing bug report example us preferably also page uses jquery ui potential test case nt contain external dependencies jquery otherwise much going us know look", "d": "7/2015"}, {"body": "phppluginmaster may useful take look short self contained correct compilable example guide might help find root cause problem", "d": "7/2015"}, {"body": "phppluginmaster question already answered jquery forum", "d": "7/2015"}, {"body": "provide minimal test case get home vacation able build different one", "d": "7/2015"}, {"body": "hi csuwildcat thanks reaching recently added edge support infrastructure temporarily periodic run instead main one issues resolved mostly two issues sizzle pr jdalton love make browsers suffer edge fixes bug drop guard applying workaround missing critical make jquery use emulation instead native one already chrome bugs implementing events nt know edge kept good ie implementation replicated chrome bugs see one edge failure one related test already passes newer builds browserstack relatively old build still named spartan still issue imo everything else fine", "d": "7/2015"}, {"body": "quick review items listed knew focusin detectionpolyfill one seems like good idea wrong focusin bummer escalate going present hard stops people estimation", "d": "7/2015"}, {"body": "going present hard stops people estimation nt think anything hard blocker fortunately never shipped workaround version checked good", "d": "7/2015"}, {"body": "csuwildcat anything else rather move conversation mentioned two bugs ie amp", "d": "7/2015"}, {"body": "mzgol looks good two relatively minor issues logged follow separately overall compat confirmation thank", "d": "7/2015"}, {"body": "fyi still walk store buy device android still quite makes vote nt change anything try make android finally pass amp continue suffer maybe drop support master keep compat still suffer although little less reason android problems happen often master compat", "d": "7/2015"}, {"body": "fyi still walk store buy device android", "d": "7/2015"}, {"body": "relevant", "d": "7/2015"}, {"body": "markelog hah thought created issue way past guess time android flies slower", "d": "7/2015"}, {"body": "seems drop pretty quickly though february", "d": "7/2015"}, {"body": "echoing gnarf despite low usage numbers feel like hard justify officially dropping support something still buy new shelf direct best buy website largest consumer electronics retailer us", "d": "7/2015"}, {"body": "wrote initial post though never fully supported browser always lots failures life jquery nt even test android ci numerous android issues pop time time nt remember single issue reported anyone outside jquery team mostly reacting various problems pop testing waiting unresolved long time also wonder one reports android issues maybe fixing much writing workarounds issues one cares one notices", "d": "7/2015"}, {"body": "arschmitz gnarf like discuss next core meeting could options dropping support supporting fully love input discussion timmywil make sure nt plan skip meeting next week", "d": "7/2015"}, {"body": "mzgol generally always lurking make sure next one caught middle setting new laptop week", "d": "7/2015"}, {"body": "airplane trust arschmitz carry viewpoint need wait long making responsible informed choices game jul alexander schmitz notifications githubcom wrote mzgol generally always lurking make sure next one caught middle setting new laptop week reply email directly view github", "d": "7/2015"}, {"body": "mzgol yes plan meeting thing foresee changing would fact moving weekend nt plan letting interfere", "d": "7/2015"}, {"body": "thoughts think least moving support makes sense bugs appear caused fact many workarounds already due support discover usually look one recent android failures discover things failed usual often obvious android support would little easier also size difference amp larger current amp due support removal currently gzipped weighs one thing another think restrict android support slightly saying wo nt fix noncritical bugs like sth offby one strategy applied eg support note tests currently fail android look like significant breakages situations like appended checked radios losing state yet one reports things us wonder anyone noticed stopped working around unreliable margin right android due fact devices still sale sad ok keeping work android basic level least ensure library parses correctly core apis work least outside various edge cases like note android broken many levels many fix reliably developer nt test site browser jquery supporting wo nt help broken anyway easier android newer", "d": "7/2015"}, {"body": "mzgol based previous discussions nt think compat good option see", "d": "7/2015"}, {"body": "hmm right forgot use case", "d": "7/2015"}, {"body": "echoing gnarf despite low usage numbers feel like hard justify officially dropping support something still buy new shelf well could still install ie nt necessary mean somebody note stats show browser market os market meaning ppl actually buying nt mean use default browser fact looks like primary clientele opera mini looking much lower percentage plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal consider android add numbers ios ms browsers would tiny like really tiny add desktop browsers share would practically nonexistent mzgol ppl core spend lot lots time working supporting browser job pretty unrewarding hella annoying whereas still nowhere near green trunk meanwhile users field bugs ever giving even smoke testing seems really necessary", "d": "7/2015"}, {"body": "also concerned cases regressing android would mean worse experience others fully supporting browser could eg mean revert would pretty sad would cause issues", "d": "7/2015"}, {"body": "discussing issue dev leads meeting realized something anyone know issues jquery compat hybrid apps always recommended master master nt oldie detritus sure ever actually checked see compat works think make android compatonly recommend compat anyone supporting hybrid apps", "d": "7/2015"}, {"body": "anyone know issues jquery compat hybrid apps couple issues know windows modern apps restrictive general web content compare eg master manipulationsupportjs compat master jshint settings declare global nt declare browser environment compat nt test anything nodejs basic compliance tests possibility code tailored cause issues unfortunately nt good way test apart waiting bug reports support tests may require changes similar ones described point obviously change especially points difficult change would also fix making changes meant could drop android say android support like even basic smoke testing android", "d": "7/2015"}, {"body": "like hold android smoke testing assert degraded noted mostly works specific bugs edge cases found us", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "mean smoke testing though keeping existing tests except maybe ones currently failing small set tests checking basic api behavior would mean keeping existing tests nt think making android support officially would buy us much", "d": "7/2015"}, {"body": "something like library use handful simple operations backed required modules explicitly avoiding edge cases support would allowed degrade point core functionality fails", "d": "7/2015"}, {"body": "nt think would buy people much guess code web relies least couple edge cases api would nt oppose much though maintaining nt lot trouble except time needed choosing proper tests initially", "d": "7/2015"}, {"body": "right acting assumption websites want serve compat native perhaps especially welltested try master report issues us welcome change adding code try fixing unit tests", "d": "7/2015"}, {"body": "mobile team discussed voted today decided upcoming release passively supporting android lt meaning remove fixes version ensuring basic functionality", "d": "7/2015"}, {"body": "dropping android support wo nt help much unless also drop super unofficial secret support phantomjs since share dumb limits yet sort weakened android support suggests might work document places punted hard involved degrading support newer popular browsers", "d": "7/2015"}, {"body": "dmethvin dropping android support wo nt help much unless also drop super unofficial secret support phantomjs since share dumb limits imo phantomjs mostly need workarounds throwing need android well anyway fixed android gt needs stay apart nt see lot overlap yet ca nt drop phantomjs yet mobile still relies probably mostly makes wrapper tools still install android support please see initial post code size increase although nice rip bytes gzipped test workaround mostly maintenance cost might notice usually one fight stupid browser p fact never passed whole test suite various workarounds tests browser less behaves broken nt issues android require workarounds source able pass test suite unable make android also trying fully supporting browser could mean reverting useful changes like", "d": "7/2015"}, {"body": "decided adding support nonbrowser environments jquery compat issue pr cantfixing branches try fix maintain basic support android meaning special tests browser nt check edge cases issue removing support test amp workaround issue", "d": "7/2015"}, {"body": "mzgol ok based numbers check rest team meeting week though", "d": "7/2015"}, {"body": "sure nothing urgent nt significant issues safari mostly reducing test burden anything else reason leave bother much", "d": "7/2015"}, {"body": "also cc scottgonzalez affect jquery ui support matrix well", "d": "7/2015"}, {"body": "good", "d": "7/2015"}, {"body": "removed browsers jquery core amp ui testswarm landed update jquerycom branch closing issue resolved", "d": "7/2015"}, {"body": "maybe turn option preferably comment android needs", "d": "7/2015"}, {"body": "probably easier left comment source code inline rule warning", "d": "7/2015"}, {"body": "concerned since android chokes may reserved words nt work property names would safer switch support comment android sure everything quoted", "d": "7/2015"}, {"body": "may reserved words nt work property names every reserved word trigger error case enable", "d": "7/2015"}, {"body": "every reserved word trigger error nt check least amp trigger error work android", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "kudos go dwt helping debug issue", "d": "7/2015"}, {"body": "well still support branch seems dmethvin justification original ticket leaving patchwelcome still valid although send us pr code works supported browsers think consider", "d": "7/2015"}, {"body": "supported mean rest", "d": "7/2015"}, {"body": "long enough worth rediscussing github tracker still opinion jquery event system layer top dom event system exceptions end triggering native events via dom methods like special guards prevent infinite recursion constant source bugs years reaching level us pretty complicated call jquery know whether browser understands event today order ensure consistent crossbrowser dom bubbling behavior manually bubbles triggered target way executing jquery handlers along way dom native event also going bubble sometimes inside jquery well jquery nt inherently know whether particular event name bubble behavior would determined sizeortime expensive process lookup table likely impractical feature detect list may differ even modern browsers various quirks notyetsupported events jquery nt know whether native dom handlers attached element dom method means nt possible shortcut process must fire events via see happens every page jquery use today new version would expensive bunch work support native listeners none possibly exist still want support triggering event handler additional data jquery api currently documents perhaps could say nt happen native events native event caused bubbling still need data passed jquery handlers attached element normally response would make plugin given tricky sure generalized solution crafted inside outside jquery going assume anonymous person tried experiments came conclusion someone wants give another try could look", "d": "7/2015"}, {"body": "interest would nt viable switch whole event propagation mechanism use browsers native facilities make kind interoperability work ie events registered via addeventlistener trigger dispatch real event sure would nt work old browsers thats compatibility branch jquery specific functionality possible quite easily wrapping handlers registered via jquery closure extracts extra information triggered custom event hands parameter", "d": "7/2015"}, {"body": "pretty easy test theory like pretty thorough unit tests events write whatever changes think would work see well unit tests", "d": "7/2015"}, {"body": "dmethvin well mean really nt know interested change know nt work", "d": "7/2015"}, {"body": "dwt ca nt know nt work nt tried write code lot potential issues perhaps work least give try provide doublecheck suspicion possible without significant breakage current apis lack dom likely cause trouble example still need maintain bookkeeping today plus user attaches event listener outside jquery plan trigger nt think nontriggering way know clone another element edit short ideal patch would significantly bigger current code introduce breakage current api contracts", "d": "7/2015"}, {"body": "data setting attributes pulls design data attributes pulled first time data property accessed longer accessed mutated data values stored internally jquery set attribute use attr", "d": "7/2015"}, {"body": "sorry nt know said example take functions see updated example element jquery object var element div unique element attr title hello world success element title hello world element unwrap failure parentdiv element removed element already modified setting title hello world fail well element jquery object var element div unique element unwrap success parentdiv element removed element attr title hello world failure jquery failed set title element hello world element already modified unwrapped making copy existing jquery object using variable name like modifying jquery object based variable containing jquery object jquery seems fail modify read properties element using jquery object based variable containing jquery object", "d": "7/2015"}, {"body": "see written code goes wrong windowclientsidevalidationsformbuilders actionview helpers formbuilder add function element settings message element parent fieldwitherrors capitalize message function return touppercase ssubstr message remove function element settings element parent fieldwitherrors element attr title almost sure bug jquery", "d": "7/2015"}, {"body": "however bug dissapears using jsfiddle test", "d": "7/2015"}, {"body": "put comma namespace nt match namespace", "d": "7/2015"}, {"body": "current event delegation use via jqueryfind delegates sizzle ca nt really tell jsperf going looks like first case may optimized away jit given numbers ideas speed delegation maybe could implement complete pull request see whether makes difference way check unit tests well since many tricky cases", "d": "7/2015"}, {"body": "confirmed caused need selectorsizzle define mlewand would like open pull request", "d": "7/2015"}, {"body": "whoops see without referencing issue move discussion", "d": "7/2015"}, {"body": "yes right already made pr believe already referenced referenced issue pr description mlewand referenced issue hour ago anyway happy read feedback", "d": "7/2015"}, {"body": "nt browserifyshim issue jquery one set config define global", "d": "7/2015"}, {"body": "thank opening issue agree browserify config issue requests leave global put", "d": "7/2015"}, {"body": "documentation every attempt made convert string javascript value includes booleans numbers objects arrays null value converted number nt change value representation example equivalent numbers numeric value converting would alter representation left strings string value converted number first precisely converted second", "d": "7/2015"}, {"body": "think dup plan fix final", "d": "7/2015"}, {"body": "thanks opening issue please provide small complete test case help us asses issue firefox supports elements guess invalid input", "d": "7/2015"}, {"body": "helps create test case error thrown mostly likely element jquery collection either dom element eg currently connected document always invalid inputs nt throw errors past", "d": "7/2015"}, {"body": "timmywil example use plugin move mouse see works uses jquery click settings see scripts used want example uses dev version tested latest ff ie chrome luck far", "d": "7/2015"}, {"body": "chrome get", "d": "7/2015"}, {"body": "dmethvin fixed chrome try link", "d": "7/2015"}, {"body": "use rawgithubcom micha\u0142 go\u0142\u0119biowski", "d": "7/2015"}, {"body": "mzgol thanks nt know updated pen guys progress far", "d": "7/2015"}, {"body": "guess right plugin asking makes sense use element", "d": "7/2015"}, {"body": "dmethvin change code portion plugin works could provide assistance", "d": "7/2015"}, {"body": "author nt developing plugin anymore recommend finding actively developed one glad pointed problem though nice people trying bleedingedge builds code find break", "d": "7/2015"}, {"body": "many sites load multiple versions jquery see jquerynoconflict supporting api option really manage includes better avoid problem continue work around", "d": "7/2015"}, {"body": "created duplicate bug", "d": "7/2015"}, {"body": "could create complete test case", "d": "7/2015"}, {"body": "source", "d": "7/2015"}, {"body": "sorry fix html body animate", "d": "7/2015"}, {"body": "lot code hardly instructions run reproduce problem could create minimal example hard debug complete app", "d": "7/2015"}, {"body": "thank fixed", "d": "7/2015"}, {"body": "ok assume mean mistake side closing issue", "d": "7/2015"}, {"body": "nt seem regression breaks well nt looked sinon code branch uses polling timer rather events implement might factor", "d": "7/2015"}, {"body": "thanks might sinon xhr mock essentially mocks immediately provides response presumably jquery nt seeing response first poll comes back", "d": "7/2015"}, {"body": "problem indeed area jquery sets calling xhrsend means jquery nt listening fakexhr emits jquery synchronous check calling account cases cached response immediately returned however proceeds defer callback using instead calling immediately changing following line patched version made work diff settimeout callback callback try work around setting fake timer addition fake server perform tick end test", "d": "7/2015"}, {"body": "sure change would affect guarantees although request still completed execution falls anyone making assumption good test seems broken using async test", "d": "7/2015"}, {"body": "forgot new always async see makes example confusing even though jquery original code ran issue used though regardless suppose appropriate attach end chain return promise qunittest solve naturally notice large test suites minimum delays make slow test suite one things makes synchronous resolution attractive significantly speeds test suite however suppose still use mock timers take care", "d": "7/2015"}, {"body": "new jquerycompat deferred promiseacomplant well would definitely want assume async reliable operation across versions hear saying making tests slower world spoken consistency async triumphs must obey smilingimp", "d": "7/2015"}, {"body": "similar different issue described cjohansensinonjs tests using sinon fakexml work jquery break essence jquery returns sinon mocking jquery explicitly returns bypassing mocking specific reason necessary branch removed would really help testing via sinon described workaround linked issue", "d": "7/2015"}, {"body": "specific reason window necessary branch removed contrary included jquery continuation line support running jquery nonbrowser environments passing custom implementation jquery factory even tests branches use assume javascript globals browser ones surprises though problem eg use another change compared jquery run effects tests sinon mock works fine", "d": "7/2015"}, {"body": "problem nt mocked set sinon stub issue fix problem", "d": "7/2015"}, {"body": "body span correct note selecting elements within body body need help please use forums irc stack overflow", "d": "7/2015"}, {"body": "ca nt reproduce try project root dir version even work nt help try update node version latest one although work previous ones", "d": "7/2015"}, {"body": "run results jquery build query npm install amp amp grunt running build build task warning typeerror read property null objectconvert onbuildwrite use force continue aborted due warnings npm err darwin npm err argv node usrlocalbinnpm run build npm err node npm err npm npm err code elifecycle npm err jquery build npm err exit status npm err npm err failed jquery build script npm install amp amp grunt npm err likely problem jquery package npm err npm npm err tell author fails system npm err npm install amp amp grunt npm err get info via npm err npm owner ls jquery npm err likely additional logging output npm err please include following file support request npmdebuglog", "d": "7/2015"}, {"body": "patrickording try suggestions also using latest master", "d": "7/2015"}, {"body": "markelog yes tried suggested nt work yes latest master", "d": "7/2015"}, {"body": "reproduce seems extra files folder passed task say try freshly cloned repository", "d": "7/2015"}, {"body": "also edit file add line see file causes error", "d": "7/2015"}, {"body": "varwwwgithubclonesjquery master git status branch master branch uptodate originmaster changes staged commit use git add update committed use git checkout discard changes working directory untracked files use git add include committed mzgol yes try freshly cloned repo varwwwgithubclonesjquery master sudo npm run build jquery build userspordingvarwwwgithubclonesjquery npm install amp amp grunt running build build task path userspordingvarwwwgithubclonesjquerysrcvararrjs name vararr path userspordingvarwwwgithubclonesjquerysrcvardocumentjs name vardocument path userspordingvarwwwgithubclonesjquerysrcvarslicejs name varslice path userspordingvarwwwgithubclonesjquerysrcvarconcatjs name varconcat path userspordingvarwwwgithubclonesjquerysrcvarpushjs name varpush path userspordingvarwwwgithubclonesjquerysrcvarindexofjs name varindexof path name path userspordingvarwwwgithubclonesjquerysrcvartostringjs name vartostring path userspordingvarwwwgithubclonesjquerysrcvarhasownjs name varhasown path userspordingvarwwwgithubclonesjquerysrcvarsupportjs name varsupport path userspordingvarwwwgithubclonesjquerysrccorejs name core warning typeerror read property null objectconvert onbuildwrite use force continue", "d": "7/2015"}, {"body": "hah obvious thanks patrickording build system assumes file path treated variable declaration since put entire repo inside directory everything treated way breaks seems like bug fix nt looking places main repository directory meantime move repo outside avoid problem cc timmywil", "d": "7/2015"}, {"body": "ah sure fix", "d": "7/2015"}, {"body": "pretty cool bug though", "d": "7/2015"}, {"body": "thank everyone helping keep awesome work", "d": "7/2015"}, {"body": "would nt code readable without using unnamed arguments", "d": "7/2015"}, {"body": "fagnermartinsbrack cases think right may possible accomplish thing using array operations still see use jquery set contains multiple elements begin want get list grandparents elements set ie proposed would get grandparent first element one worse elements set prior ancestor hit top dom tree results excluded index might instead getting grandparent subsequent element original set even end array way implement currently might eg return single element matching second item nothing first also might assume case could implemented would behave correctly original set multiple elements parents element concatenated resulting array results would include parents first element correctly excluding firstimmediate parent first element think perhaps could implemented eg makes think perhaps implemented would sufficient place implementing", "d": "7/2015"}, {"body": "similar boolean trap ie parameter nt really say affects depth searching process nt think good idea name cases want limit searched nodes look first one case closest enough really sophisticated use case imo best achieve via plugin new name function would better anyway", "d": "7/2015"}, {"body": "mzgol thanks agree custom plugin would able provide community may may find useful supported feature default created repo may develop something like record would nt boolean trapesque seems jquery api tends toward method type detection terse fluent interfaces rather example passing around objects named parameters latter always possible rely type detection eg implementation would make easier extend functionality eg put numeric cap height recursion eg feel free close want", "d": "7/2015"}, {"body": "imagine conservative new apis usually ask plugin first nevertheless thank reaching", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "since discussed previously gon na close thank though fagnermartinsbrack thanks comment helpful", "d": "7/2015"}, {"body": "ok think understand thanks time", "d": "7/2015"}, {"body": "would significant change behavior would nt would know whether data valid need massage response validity would seem safest use jquery bultin data conversion instead", "d": "7/2015"}, {"body": "whole data module rewritten scratch jquery events rely seeing private data nt relied jquery properly hidden never guaranteed available officially sanctioned api get list handlers attached element need debugging purposes use note unsupported api may disappear one day similarly hack described disappeared jquery", "d": "7/2015"}, {"body": "also triggering nt necessary snippet returns chaining possible could written would return thing", "d": "7/2015"}, {"body": "jquery event system really optimized intended handing dom event behavior want something like pubsub reactive programming javascript libraries use", "d": "7/2015"}, {"body": "new method would definitely better way rather adding boolean trap case though plugin", "d": "7/2015"}, {"body": "agree introducing boolean trap would bad idea also dmethvin said new methods better introduce plugin first nt want increase byte size much", "d": "7/2015"}, {"body": "animating unit one returned px compute starting value animation unit happens means iterative approximation imperceptibly fast nt see anything nt case second recommendation use unitless eliminates mismatch allows us skip starting value computation", "d": "7/2015"}, {"body": "matter one entries choose still get tests executed double entry nt appear amd mode though wired", "d": "7/2015"}, {"body": "thank opening issue decided close defer solutions", "d": "7/2015"}, {"body": "perfectly fine thanks feedback awesome library", "d": "7/2015"}, {"body": "sounds analogues label timmywil right", "d": "7/2015"}, {"body": "mean nt see analogy means issue affect branch also similar label", "d": "7/2015"}, {"body": "release behaviour discrepancy two versions", "d": "7/2015"}, {"body": "ah edge cases internal modifications nt affect public api see eg affect definition eg nt think implies far issue indicates serious api incompatibility versions may implictate imo automatic", "d": "7/2015"}, {"body": "okay reasonable", "d": "7/2015"}, {"body": "would nt call blocker alpha fixed final release", "d": "7/2015"}, {"body": "hi markelog modulize think save bytes removing occurences code raw gz sizes distjqueryjs distjqueryminjs raw gz compared master distjqueryjs distjqueryminjs want make pr", "d": "7/2015"}, {"body": "believe reusing test div ie amp similar types test nodes created helps size separate function could created well guess wo nt save size though feel free check please nt anything though lands change testrelated things", "d": "7/2015"}, {"body": "believe reusing test div yep", "d": "7/2015"}, {"body": "dmethvin could least reopen ticket error still present regards", "d": "7/2015"}, {"body": "reopen please create full minimal test case reproducing problem use testing response handling", "d": "7/2015"}, {"body": "mzgol hey thank took advice created test case webspace would crossdomain request otherwise figured framework use cakephp redirect location header field somehow internally therefore second request separately jquery know handle without following anyway thanks reopening closed xd", "d": "7/2015"}, {"body": "ok thanks confirming", "d": "7/2015"}, {"body": "may related duplicate issue", "d": "7/2015"}, {"body": "related krinkle jquery handling error callbacks crossdomain script jsonp requests inconsistency ajax api explicitly spelled docs issue feature request asking team make behavior consistent requests", "d": "7/2015"}, {"body": "come conclusion added needs review flag sth decided", "d": "7/2015"}, {"body": "discussion meeting decided leave asis want avoid appearance using methods encouraged nt want remove either", "d": "7/2015"}, {"body": "ipetropolsky problem related fact ca nt use focusinout chrome nt according spec see heard rumors microsoft edge might adopted nonspeccompliant chrome behavior would problem although firefox probably give pass nowconsistent behavior even though keeping standard messing focus way hope checked accessibility implications", "d": "7/2015"}, {"body": "dmethvin paragraph example bit confusing think may misinterpreted said content hideshow candidate unlikely add remove hidden attribute dynamically example spec shows situation set property dynamically form hidden element shown user logs think agree exactly folks use jquery today quote guidelines spec hidden attribute must used hide content could legitimately shown another presentation similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance screen readers interpret meaning intend screenreader still able access content nt use holds true use element use totally hidden everything including screen readers example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar makes lot assumptions tabpanel used think tripped read one way implies nt use even tabpanel true every tabpanel implementation seen uses hidden panels associated selected tab sometimes also really hammer hidden screen readers read another way think intended meaning means intention perform overflow management presenting user subset large set content wrong tool use hides rest content completely really sight yet actively hidden assistive technology keyboard navigation without debating intention tabpanel think agree user calls intend content hidden visually screenreaders exactly works sets believe toggling attribute jquery would line spec", "d": "7/2015"}, {"body": "understanding problem using iframe default display elements right use something like pr simply allowing adding edgecases advanced developers would see documenting add new elementname defaultdisplay mapping support defining new elements someone must also like approach jquerymobile standard event works need performance forcing someone use something complicated something simple might end loosing way high performance maybe introduce something like simply assume always showhide something element introduce takes default display first parameter", "d": "7/2015"}, {"body": "keeping old behavior hidefadeslide around form attempted use velocityjs version fadeslide yeah faster taking account edge cases made less useful", "d": "7/2015"}, {"body": "please nt css nt depend js lib use plugin authors ca nt dictate users use ridiculous expect css styles revised new jquery plugin want use jquery forget upgrade main point css nt care js libs please follow single responsibility principle", "d": "7/2015"}, {"body": "plugin authors ca nt dictate users use one solution problem would timmywil suggested comment ie requires know expected display value beforehand otherwise work without modifying input stylesheets", "d": "7/2015"}, {"body": "unless jquery magic delay running make browser render descendants seems like worse solution using inframe least performance wise really want go way remove alike functions seriously jquery wo nt move away complication devs maybe library maybe move ui optional jquery build", "d": "7/2015"}, {"body": "starting look like general griping going ask specific questions tried jquery alpha release excepting phistuck matthaywardwebdesign obviously given ing element generally leave element without inline property eg responsive stylesheets expected end inline css cascadehidden element keep mind could guess proper may actually differ elements name", "d": "7/2015"}, {"body": "code basically boiled shortcut amp would agree eccenux say completely remove amp jquery current code moved addon even want continue support either way change make devs think carefully hide show elements pages", "d": "7/2015"}, {"body": "mean responsive website squishy website difference responsive website render fine certain device something show stays shown squishy website something showoff boss friends resizing browser things might disappear show squish browser back forth time actual use case also try one solution see make showhide work expected running something like would break squishiness understand use case correctly", "d": "7/2015"}, {"body": "eccenux hmmm something responsive web application detecting device serverside send back something specific device something responsive one version design code website nt respond resize tab responsive web design", "d": "7/2015"}, {"body": "actually agree eccenux resizing tab necessarily use case responsive design nice side effect resizing tab mobile breakpoint may bring example geolocation features irrelevant desktop users user resized tab mean suddenly mobile", "d": "7/2015"}, {"body": "phistuck okay maybe something like responsive one version code responsive design media queries", "d": "7/2015"}, {"body": "sorry nt want spark new discussion responsiveness squishiness concept responsive show squishiness discussed brad frost presentation kind thought got estabilished responsiveness squishiness adapting screen size exactly device yes responsive websites use media queries page loaded initial view established time nt need readapt testing people nt squish websites around besides must always use rwd nt really see important showhide usually things shown containers nt change display much time change maybe loose attribute", "d": "7/2015"}, {"body": "btw made fiddle two simple examples nt work switch left workaround bad originally thought nt cause performance issues still find confusing note simple example assumes use one single class hide elements shown add", "d": "7/2015"}, {"body": "example simple showing hiding canvas menu mobile menu horizontally open desktop media query hides shows button menu showing menu mobile needs show hide mechanism button triggers", "d": "7/2015"}, {"body": "eccenux way one specific use case squishiness responsive design changing orientation", "d": "7/2015"}, {"body": "phistuck way one specific use case squishiness responsive design changing orientation yes nt see realworld use case would want change display upon orientation change dont think hide slideout menu upon oriention change show use case show easy workaround someone show workarond one without changing html css note works fine change jquery", "d": "7/2015"}, {"body": "someone show workarond one without changing html css", "d": "7/2015"}, {"body": "someone show workarond one without changing html css wo nt work dialogs eg pages", "d": "7/2015"}, {"body": "also one makes browser render dialog hidden elements brief moment probably problem desktop might problem mobile especially elements need recalculated elements shown", "d": "7/2015"}, {"body": "also one makes browser render dialog hidden elements brief moment example browser happens browsers batch style recalculations multiple changes nt trigger multiple reflows unless someone asks resolved style element meantime browser know real value return nt show element browser new nt check resolved reflow nt happen true though reflow would happen code executed jquery older check resolved", "d": "7/2015"}, {"body": "true though reflow would happen code executed jquery older hide check resolved display ahhhh happened ok indeed valid workaround cases", "d": "7/2015"}, {"body": "btw surprisingly jquery ui works dialogs dropdowns nt like", "d": "7/2015"}, {"body": "sorry late comment important canjs able add inserted event everytime new dom added page anyway could made public future releases", "d": "7/2015"}, {"body": "justinbmeyer open ticket think look problem functionalitycapability standpoint rather reexposing internal method", "d": "7/2015"}, {"body": "use case working right usage would replace call finally guess dom operations however many items would function version mean one dom operation per item collection", "d": "7/2015"}, {"body": "guess dom operations however many items every class manipulation done individually node fact simple via jquery nt mean lot nt happening hood", "d": "7/2015"}, {"body": "case guess adding function switch cost either one mentioned running node makes much simpler requiring less function calls", "d": "7/2015"}, {"body": "made comments pr", "d": "7/2015"}, {"body": "fix bug causes error chrome ie firefox tested chrome ie firefox calling function using empty string argument reproduce error note function called directly script triggering custom event element using elementtrigger eventname function isarraylike obj isarraylike", "d": "7/2015"}, {"body": "open separate ticket jquery repo showing happen using public api", "d": "7/2015"}, {"body": "ignore previous comment investigation problem found cause problem caused improper public api use previous jquery versions fail silently jquery show error", "d": "7/2015"}, {"body": "create variable part nt seem worth mostly used supported amp support tests use", "d": "7/2015"}, {"body": "support tests use btw worth checking still applies maybe could switch support tests even", "d": "7/2015"}, {"body": "seems switch support tests work fine doc ready pr coming edit issue created", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "digging issue nt blocker thought nt try hide native xhr nt encourage direct manipulation either use jquery abort method instead everything works fine dmethvin think still worth fix one minor speedbump status text op case compat error abort fixing requires changes branches sure something necessarily support", "d": "7/2015"}, {"body": "timmywil using jquery abort method option browser aborts request reason computer suspend example", "d": "7/2015"}, {"body": "refresh without reinvestigate affect current master compat initial comment said", "d": "7/2015"}, {"body": "dmethvin affects way handler fires affects way handler fired instead one", "d": "7/2015"}, {"body": "way around", "d": "7/2015"}, {"body": "ah confused", "d": "7/2015"}, {"body": "full disclosure founder codecov would love see jquery use codecov coverage provider would love share many reasons believe codecov great fit industry leading code coverage anything help transition would make available thank", "d": "7/2015"}, {"body": "anything help transition would make available help implement pr sure work together couple questions take us use nt use travis use jenkins testswarm qunit setup example reports look could run jquery link us report sure others questions", "d": "7/2015"}, {"body": "take us use nt use travis ci method works two primary uploading methods javascript native method global method look creating pull request mention create thank gnarf use jenkins testswarm qunit setup jenkins yes qunit yes testswarm used merge coverage reports automatically keep record one see example click unified dropdown example reports look could run jquery link us report reference customer repos yet ran coverage jquery yet try attempt pull request sure others questions happy help", "d": "7/2015"}, {"body": "happy help feel free ping gnarf freenode irc jquerydev questionshelp need", "d": "7/2015"}, {"body": "per decided deprecate use plain objects unit tests tweening plain objects well", "d": "7/2015"}, {"body": "tested shchukax test case ipad mini ios works fine looks like something fixed point", "d": "7/2015"}, {"body": "accept patch uses instead available", "d": "7/2015"}, {"body": "nice see disapear", "d": "7/2015"}, {"body": "jaubourg responding question yes", "d": "7/2015"}, {"body": "phistuck sharing happiness regarding disappearance regexp using url api good idea though probably need wait supported browsers implement nt checked right general consensus avoid multiple code paths especially small noncritical parts code like one", "d": "7/2015"}, {"body": "jaubourg ajax used frequently cost creating element terms memory possible garbage collection issues engine pretty big compared url constructor looks like everyone internet explorer supports since interface identical one exposes share interface small change", "d": "7/2015"}, {"body": "well piece code executed request agree small change fail see critical seems rather logical wait support grid contain browsers implement url object simply switching nt speak team though take", "d": "7/2015"}, {"body": "review discussed take time nt critical creating link element times second nt perf memory problem", "d": "7/2015"}, {"body": "bad nt scrolled enough see used ajax code proper still agree dave perf issue", "d": "7/2015"}, {"body": "performance terms speed less issue memory usage failing free memory old internet explorer bug example concerning creating element pretty big hammer avoid exactly interface see understand reasoning well", "d": "7/2015"}, {"body": "saying memory leak would fix", "d": "7/2015"}, {"body": "saying one checked say element big hammer better used sparingly options mentioned browsers use problems element references leaks much lightweight preferred way constructing developers used create whole new document resolving url components example even bigger hammer also replaces", "d": "7/2015"}, {"body": "worked everywhere would better case changing seeing concrete problem requires change since interface identical one exposes share interface small change isfunction windowurl new url documentcreateelement may provable issue think likely change code", "d": "7/2015"}, {"body": "note regression caused", "d": "7/2015"}, {"body": "per yesterday meeting cantfixing issue branches", "d": "7/2015"}, {"body": "decided going fix ever hence label", "d": "7/2015"}, {"body": "seems good idea would like get issue reassigned", "d": "7/2015"}, {"body": "sorry coming late bug fixed version jquery stated bug report need make inline style display none add duration see bug action fork robertmaxrees fiddle bug changes still happening bug fixed edge currently edge compat version though", "d": "7/2015"}, {"body": "pr might fix nt added tests confirming yet", "d": "7/2015"}, {"body": "mistake bzbarsky replace amp etc see pr replace anything", "d": "7/2015"}, {"body": "case absolutely positioned thing way get css containing block nothing aware offhand agree pretty suboptimal probably add something suggest cssom", "d": "7/2015"}, {"body": "focus blur click events fires native event certain condition calling native event currently way pass trigger data event handler well best solution though use special event hook handle need modify trigger hold data add handle method invoke event handler function obviously generalized cover events think guys js focus fire native event possible blurfocus sequence correct trigger function safeactiveelement amp amp thisfocus", "d": "7/2015"}, {"body": "solution risk introducing strange behavior flips arguments arguments cases reentrant safe nt see us using approach", "d": "7/2015"}, {"body": "agreed retrospect allowing users pass data caused lot issues one focus management highly flaky browsers already nt take much cause problems", "d": "7/2015"}, {"body": "issue xhtml regressions coming seems like appropriate time revisit think optimal course action would fixing qunit xhtml ensuring start regularly testing xhtml mode ca nt expect keep xhtml tests green test harness keeps breaking requiring webserver serve test suite everything served appropriate headers ca nt ensure various urls served correct contenttype conditionally skip based specific criteria case would significant effort xhtml failing test would need manually checked understand failing whether used example appending unclosed tag bug jquery get tests passing skipping xhtml people might notice difference failure difference lead people ignoring failures see fewer regressions", "d": "7/2015"}, {"body": "pr feedback welcome", "d": "7/2015"}, {"body": "version pr", "d": "7/2015"}, {"body": "added note blog post", "d": "7/2015"}]