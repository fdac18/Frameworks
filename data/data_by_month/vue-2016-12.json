[{"title": "checkbox checked fully reactive checkbox focus", "body": "example example resets array values every one second line two checkboxes bound value steps reproduce click enabled checkbox line expected behaviour one second value reset checkboxes reflect value actual behaviour tested chrome disabled checkbox correctly reflects value enabled checkbox reflect value enabled checkbox reflect correct value blurring checkbox", "num": "4620", "d": "12/2016"}, {"title": "version page normal upgrade wrong load vue instance", "body": "vuejs version reproduction link steps reproduce expected actually happening version page normal upgrade wrong load vue instance", "num": "4619", "d": "12/2016"}, {"title": "settimeout within component create potentially overwritten", "body": "vuejs version vuex version reproduction link steps reproduce create several new alerts using button expected alerts removed seconds actually happening every two alerts removed sure vuex vuejs issue basically global alerts system using vuex storage tried different ways automatically clearing alerts demo creates settimeout alert component created settimeout emit seconds emit picked parent issues delete vuex", "num": "4618", "d": "12/2016"}, {"title": "vue props variable name support camelcase undefined returned", "body": "vuejs version reproduction link steps reproduce expected return right value actually happening vue props variable name support camelcase undefined returned example use camelcase props variable name undefined returned however change camelcase everything works expetected", "num": "4617", "d": "12/2016"}, {"title": "order issue combining vif vfor", "body": "vuejs version reproduction link steps reproduce apply vif directive element vfor velse never trigger inverse cases apply vif previous velse velse vfor everything works expected expected velse element hanging vfor display vif check fails example would expect nothing herenothing first display actually happening initial velse displaying vfor nothing wo nt show conditional working nothing first display think odd case render nt need rendered documented special case list rendering section documentation workaround applying vfor velse element breaking anything expected behaviour", "num": "4616", "d": "12/2016"}, {"title": "component template fragment cached string id node", "body": "specify string component template like vue appears cache template html fragment running issue template html changes vue always uses original template fragment however specifying node component template wo nt cache sure bug behavior inconsistency feature request would nice template caching optional jsfiddle", "num": "4615", "d": "12/2016"}, {"title": "click working", "body": "hi using trying trigger event laravel template code click trigger export default name login methods loginbtn function alert login click event click getting error appjs configuration file look like var basepath globaljquery require jquery var globaljquery window var bootstrap require bootstrap vue require vue resource require vueresource vuerouter require vuerouter vueuse resource vueuse vuerouter const router new vuerouter mode history base dirname routes path login name login component require componentsloginvue path dashboard name dashboard component require componentsdashboarddashboardvue windowonload function const app new vue router mount app hello app dashboard login elixir mix gt mixless appless webpack appjs search everywhere nt find mistake code thank", "num": "4614", "d": "12/2016"}, {"title": "ability abort transition dynamic components using javascript hooks", "body": "building cordova app using vuejs vuerouter order feel like native app trying support swiping left right go back previous view prepared example run fiddle drag view foo right let go behind foo bar already waiting sure seen many native apps take facebook example thanks transition hooks already works less user stops swiping early little velocity would expect viewfoo slide back original position probably intended cancel navigation unfortunately way cancel transition inside hooks sliding view back original position bar appears immediately navigate back foo fiddle course really nasty workaround would need work something like function transition hooks thought whether issue vuerouter vuejs thought reason vuerouter nt offer functionality vuejs nt sorry case posted vuerouter repository", "num": "4612", "d": "12/2016"}, {"title": "textarea binding operation appear data show", "body": "demand page wap page upload picture picture displayed description frame upload least three zhang ten picture horizontal scrolling display iscroll select corresponding picture displayed order realize demand determine current input contents store database operations textarea without vmodel using upload three pictures fine three images appear strange things first one delete store data correct data show picture description describe boxes last one fill content information bug vue", "num": "4611", "d": "12/2016"}, {"title": "weexcompiler\u7f16\u8bd1\u51fa\u6765\u7684\u662freact dom", "body": "", "num": "4610", "d": "12/2016"}, {"title": "delete obj attr bound view", "body": "example container p clickdel paramsa export default data return params aaa methods del e delete thisparamsa event triggered view also vm data showed components part vuedevtools nt update object key vm data traced bound view", "num": "4609", "d": "12/2016"}, {"title": "custom directive vfocus docs focus input element insert ios safari", "body": "vuejs version reproduction link see custom directive demo within documentation steps reproduce load demo expected documentation demo states following expectation page loads element gains focus fact clicked anything else since visiting page input focused actually happening ios safari demo focus input element upon page load", "num": "4608", "d": "12/2016"}, {"title": "nuxt ssr elementui problem", "body": "nuxt ssr elementui problem problem demo help look solve", "num": "4607", "d": "12/2016"}, {"title": "index get value", "body": "according tutorial run vfor locally get value index use version get values using", "num": "4605", "d": "12/2016"}, {"title": "\u5173\u4e8e\u5f02\u6b65\u7ec4\u4ef6\u7684\u4e00\u7cfb\u5217\u7591\u95ee", "body": "parti \u5173\u4e8e\u5f02\u6b65\u7ec4\u4ef6 \u95ee\u9898 vue resolve gt require componentsxxxxvue resolve \u95ee\u9898 \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4e0d\u6d89\u53ca\u8bf7\u6c42\u7684 demo \u7f51\u7edc internet js sources \u8d44\u6e90 \u91cc\u9762\u5bf9 vue js \u95ee\u9898 partii \u5173\u4e8e\u5f02\u6b65\u7ec4\u4ef6 gt \u60f0\u6027\u52a0\u8f7d \u5c31\u662f\u76ee\u524d vue spa indexhtml", "num": "4604", "d": "12/2016"}, {"title": "vmdata computed property creates conflict without useful warnings", "body": "attempting define computed property data causes least observably internal conflict useful warning given warning like data reserved property used computed property would make debugging issue simpler vuejs version steps reproduce define computed property data expected computed property work like actually happening able access data computed property data", "num": "4603", "d": "12/2016"}, {"title": "error wrap component example", "body": "vuejs version reproduction link even default official fiddle used official website wrapper component example steps reproduce using wrapper component example component wrap jquery plugin values options matter passed object slot evaluated string guess impossible select values greater expected try select value selected actually happening always selected", "num": "4602", "d": "12/2016"}, {"title": "returning vue instance filter function vuejs", "body": "getting error trying return vue instance filter function ability would nice intl purposes dynamic locale switch realtime relative time rendering etc sure intended notsupported bug related issue details", "num": "4601", "d": "12/2016"}, {"title": "alternative renders way", "body": "hello everyone multiple page app vue used html amp js file page example indexhtml indexjs import alert libraryalert new vue el app components alert works perfect upgrading vue actually nt understand work direction got error important thing nt want write html inside template appvue want display elements immediately page vue initialized show components use webpack config thanks", "num": "4600", "d": "12/2016"}, {"title": "bug updated hook called dom ready slot vfor", "body": "vuejs version reproduction link steps reproduce container components slots slots transcluded dynamic content parent updated hook children doms ready expected document said expect children doms ready", "num": "4599", "d": "12/2016"}, {"title": "none", "body": "wu", "num": "4597", "d": "12/2016"}, {"title": "var component optionscomponentsinputfile", "body": "var component optionscomponentsinputfile new component parent el el use vue work ok updated vue uncaught typeerror uncaught typeerror component constructor happen", "num": "4596", "d": "12/2016"}, {"title": "number textarea determine last time save data current data different", "body": "vue two way binding want verify input save vuex data data submitted database button switch back forth number operation database much vmodel itemdescript written textarea achieve twoway binding determine last record know operate use", "num": "4595", "d": "12/2016"}, {"title": "microchange capitalize function", "body": "suggest microchange capitalize function", "num": "4593", "d": "12/2016"}, {"title": "enter transition would nt play animate css properties defined enteractive css class", "body": "enter transition would nt played animate css properties defined enteractive css class sample code", "num": "4592", "d": "12/2016"}, {"title": "render error keepalive children", "body": "vuejs version vue vuerouter reproduction link steps reproduce click routerlink b home expected render compb going actually happening compb rendered", "num": "4590", "d": "12/2016"}, {"title": "set property isrootinsert undefined", "body": "vuejs version reproduction link repo steps reproduce install deps run dev navigate view uses top level component default slot layouts example expected view load actually happening error set property isrootinsert undefined additional following pulled updated patch tested difference results", "num": "4589", "d": "12/2016"}, {"title": "item parameter event handlers", "body": "love vuejs data bound would nice parameter von would refer data item array element etc used build element clicked hovered etc let say working drag amp drop component based data array vfor item array would avoid htmlmanipulation changing underlying data itemcategory itemposition n instead vuejs update html would need reference data modify would like receive data element array index object property form something like event could item doable without magic param like item example adding data elements would visible html source would elegant anyway", "num": "4588", "d": "12/2016"}, {"title": "help anything", "body": "hey guys really glad see guys working project going amazing little bit background java use vuejs projects possibly wondering could help project even writing documentation glad help way", "num": "4587", "d": "12/2016"}, {"title": "checkbox checked binded value", "body": "vuejs version reproduction link codepen steps reproduce input type checkbox binded value equals expected input checked actually happening input checked versions working expected", "num": "4586", "d": "12/2016"}, {"title": "global components local components slots", "body": "hi actually global components one admin one modal admin component child comp called page page comp others childs want pass content directly page comp via slots like appjs adminvue export default components page pagevue page title page body page footer export default components pageheader pagebody pagefooter indexhtml nt need use page global component please idea hope understand looking thanks", "num": "4585", "d": "12/2016"}, {"title": "typeerror routelink sibling slot used", "body": "vuejs version reproduction link template fails compile default slot given html foo wrapped tag expected component renders without slot actually happening uncaught typeerror set property isrootinsert undefined", "num": "4584", "d": "12/2016"}, {"title": "destroy remove allocated objects", "body": "hi seems remove allocated objects please correct checking incorrectly using google chrome take snapshot app initialized using destroyed using seems vue components still memory compare snapshots vue instances removed know mentioned destroying objects manually best practice working chrome extension would like able tear whole app simple jsfiddle using testing", "num": "4582", "d": "12/2016"}, {"title": "bug undefined using slot", "body": "vuejs version reproduction link steps reproduce iconvue html export default props type string computed classname return cicon cicon thistype html import icon iconvue export default components icon html import hello hello export default components hello expected actually happening", "num": "4581", "d": "12/2016"}, {"title": "vuerouter work vue components render throw error", "body": "vuejs version reproduction link steps reproduce using vuerouter found vue throws error router work back forward browsers pages ca nt change function called anymore read source code vue found trycatch render function wrote code project follow catch error javascript vue fix const h new vue createelement let render vueprototyperender vueprototyperender function try return renderapply arguments catch e consoleerror error render called e return h wander removed trycatch performance purpose forgot", "num": "4580", "d": "12/2016"}, {"title": "scope css bug component", "body": "vuejs version steps reproduce three files name code code use component root element code expected class normal display actually happening however class style display find one attr generated css scoped class establish contact component", "num": "4579", "d": "12/2016"}, {"title": "image upload using filereader change value vm file become empty", "body": "code template js data return test onfilechange event let files eventtargetfiles let reader new filereader readeronload event gt let img new image imgonload gt consolelog files file readerreadasdataurl files onfilechange event let files eventtargetfiles let reader new filereader thistest test val readeronload event gt let img new image imgonload gt consolelog files undefined readerreadasdataurl files", "num": "4578", "d": "12/2016"}, {"title": "typeerror read property componentoptions undefined", "body": "vuejs version reproduction link steps reproduce deploy server failure show errors expected actually happening sure errors happen code server", "num": "4577", "d": "12/2016"}, {"title": "transition flickering", "body": "related issue raised starptech vueadmin yesterday repo example based vuerouter example workaround add attribute change vuejs back vuejs version reproduction link steps reproduce switch view foo bar hitting links expected transition works fluently actually happening view flickers transition", "num": "4576", "d": "12/2016"}, {"title": "\u8bf7\u95eevtouch tap", "body": "click", "num": "4575", "d": "12/2016"}, {"title": "refs nt get updated upon element component removal", "body": "dynamic array iterated displayed elements components make array smaller means removing array element fair enough update dom update one may point adding refs something dynamic stupid idea using dynamic amount tabs tab unique key cases may need trigger action specific tab view could used event bus feel using refs suitable solution expect remove element referenced would updated referenced element component longer exists nt case provided fiddle presented view containing array elements list references tried nt quite reliable button remove last element array upon ref list update confirm upon adding element uses ref name removed work expected issues regarding ref already existing nt seem major problem depending could problem", "num": "4574", "d": "12/2016"}, {"title": "props", "body": "special attribute would handy reuse generic components inside specific ones would hold props passed component example like create would predefined content example one html import modal modalvue export default props modalprops value placeholder string jsfiddle use case", "num": "4571", "d": "12/2016"}, {"title": "possible bug float numbers", "body": "vuejs version reproduction link steps reproduce select items unselect one one expected unselected actually happening", "num": "4569", "d": "12/2016"}, {"title": "von clickself work", "body": "von clickself work n n", "num": "4568", "d": "12/2016"}, {"title": "nt support syntax", "body": "vuejs version reproduction link steps reproduce expected hope vue support like android xml actually happening ins show one use change show", "num": "4566", "d": "12/2016"}, {"title": "handle attribute serverrendering", "body": "vuejs version reproduction link html export default data return id ip datenow steps reproduce run rendering server generate id timestamp run vue browser id overridden vue attribute overridden expected get value id attribute actually happening", "num": "4565", "d": "12/2016"}, {"title": "tag vfor render undefined", "body": "use array prop custom component template element vfor directive render undefined strange template element tag problem vuejs version reproduction link simple demo", "num": "4564", "d": "12/2016"}, {"title": "tr could nt wrapped template", "body": "vuejs version reproduction link steps reproduce run demo expected table rendered correctly browser include ie actually happening table rendering ok modern borwser chrome incorrect ie nt use template ok", "num": "4563", "d": "12/2016"}, {"title": "neverending loop cause call stack size exceeded problem", "body": "vuejs version reproduction link steps reproduce run code expected throwing warning error accurate message actually happening", "num": "4562", "d": "12/2016"}, {"title": "ssr clientserver vdom mismatch crlf multiline text lf works", "body": "vuejs version steps reproduce deschtml multiline text crlf like expected code generation without warningerror actually happening error works one use lf deschtml", "num": "4560", "d": "12/2016"}, {"title": "\u6309\u9700\u52a0\u8f7d\u95ee\u9898", "body": "webpackprodconfjs webpackbaseconfjs \u8def\u7531\u914d\u7f6e javascript const makecomponent path gt return resolve gt require path resolve dashboard icon dashboard name dashboard label \u63a7\u5236\u53f0 hide false component makecomponent componentspagedashboardvue \u6253\u5305\u751f\u6210\u7684\u6587\u4ef6 wprater nazo bigbluehat sjoerdvisscher saul", "num": "4559", "d": "12/2016"}, {"title": "vuerouter reload component", "body": "routes load components two components routes move routes want pass new data init event component want fill data component reflects ui also want retrigger bootstrap animations components loaded would go right nt know component lifecycle would fetch data rerender component new data concretly newapp main view component sidebar component newapp url want icons sidebar red nothing main view filled main view empty want load data server main view filled want icons sidebar green happens load click second item sidebar main view changes second view routerpush newapp sidebar stays second item second main view routerpush myapps nt reload sidebar main view", "num": "4557", "d": "12/2016"}, {"title": "vue vuex create property mergehook string beforecreate", "body": "issue kinda got working multiple components components use following way import storename storefile export default store storename methods methods result error times always chrome computer colleagues computer browser etc safari mac os x yosemite error think trying merge property including parent component sure issue changed every data export default data return store storename methods everything works change everything back property level etc throw error hope helpfull people issue try solve", "num": "4556", "d": "12/2016"}, {"title": "wrong scope directive bind hook", "body": "vuejs version reproduction link vue correct scope directive vue window scope steps reproduce expected context reference current directive scope actually happening directive bind hook wrong scope", "num": "4555", "d": "12/2016"}, {"title": "problem functional component", "body": "vuejs version reproduction link expected want get component component parent remove default read document render find relevant tips", "num": "4554", "d": "12/2016"}, {"title": "behavior changed", "body": "hello folks likely edge case behavior silently changed recent versions previously could call callback fine least fails vuejs version reproduction link course silly example since could passed get idea expected implying previous behavior correct simple enough call vue constructor returns however probably wise note docs nt called callback naively thought would happen least next tick docs clearly state called synchronously though obviously case component fully ready time called right constructor returns", "num": "4552", "d": "12/2016"}, {"title": "suggest use another name scoped slot template tagname", "body": "vue file root elment vue support scoped slot using also atom editor vue code bueatify always trim indent suggested vue component file perserve root element name use another name scoped slot hello parent propstext", "num": "4551", "d": "12/2016"}, {"title": "functional components contextparent root instance", "body": "let say following template use inside get access expected use logic inside functional child component however behavior different gives access root instance similar using normal component intended behavior get access actual instance inside functional child component", "num": "4550", "d": "12/2016"}, {"title": "custom filters working vhtml", "body": "vhtml attribute able use filters use display formated text working case linebreak detect n replaces", "num": "4549", "d": "12/2016"}, {"title": "initing child components associated dom", "body": "hi several components find workaround accomplish child components simple data representation example table purpose collect data leverage rendering iterate children necessary accomplish header rows cell combination example tabs similar previous example additionally tabs content rendered using single transition point examples children ca nt used default way accomplish special rendering several workarounds tricky unsupported course best practice would like start discussion solving particular need solution could way initiate children render template set document components would accessible early parent immediate use rendering", "num": "4547", "d": "12/2016"}, {"title": "vuejs cached placeholders issue external plugins", "body": "vuejs version reproduction link steps reproduce click event click add event expected event stay highlighted rest actually happening placeholder event highlighted instead actual event happening plugin using know could switch make vue add class instead based object would rather let plugin handle case", "num": "4546", "d": "12/2016"}, {"title": "reusable transitions vuerouter break vue last one reproduce", "body": "initial purpose make transition vuerouterexamplestransitions reusable change codes transition works expected vuerouter vue expected click make slide left right transition make resuable unexpected vuerouter vue resuable transition unexpected try use older version vuejs work expected vuerouter vue resuable transition expected increase version unexpected vuerouter vue resuable transition unexpected", "num": "4545", "d": "12/2016"}, {"title": "random exception code vue", "body": "refresh one page flowing exception show randomly exception throw view open exception show page opened sorry provide reproduce link vue version mode nt used hook component", "num": "4544", "d": "12/2016"}, {"title": "watch returning object fields", "body": "vuejs version steps reproduce mainjs import vue vue import vuerouter vuerouter import vuestash vuestash import store servicesstorejs import routes servicesroutesjs import home appvue vueuse vuerouter vueuse vuestash const router new vuerouter routes mode history const app new vue router router render h gt h app data store mount app expected changes configlayouthome trigger watch new info actually happening changes configlayouthome return object fields watch using vuestash sure causing found change watch specific like configlayouthome actually get old new values using config get new object twice tried simplifying project hope nt missed anything", "num": "4543", "d": "12/2016"}, {"title": "vue devtools keep showing version", "body": "using vue laravel packages file install using yarn npm devtools keep showing using version", "num": "4541", "d": "12/2016"}, {"title": "typeerror read property name undefined", "body": "typeerror read property name undefined arender appvue arttrender uiget uirun z array", "num": "4540", "d": "12/2016"}, {"title": "multitype prop validation boolean string cast empty string", "body": "vuejs version reproduction link steps reproduce expected empty string must pass component like empty string actually happening type cast type boolean", "num": "4538", "d": "12/2016"}, {"title": "vuejs input typepassword working nicely", "body": "vuejs version reproduction link observed mac chrome steps reproduce chrome extension installed enabled click login button see alert boxes expected form submit event triggered per button click see alert box actually happening clicking submit button type form form submit event triggered time happens field includes", "num": "4537", "d": "12/2016"}, {"title": "vue vuetemplatecompiler version gt gives error browser", "body": "everything fine dandy upgraded vue vuetemplatecompiler npm packages versions nothing shows browser except following error unknown vue warn error rendering root instance warn uncaught referenceerror h defined proxyrender eval vue eval vue eval watcherget eval new watcher eval vue eval vue mount eval install eval objectinstall install eval functionvueuse eval packagejson going back version everything fine succesfully update vue vuetemplatecompiler looks similar tried using vuetemplatecompiler vue get error also tried vuetemplatecompiler mean replay version fixed posted issue stackoverflow solution yet", "num": "4536", "d": "12/2016"}, {"title": "exception thrown vue code update template involving vif css styles", "body": "vuejs version reproduction link steps reproduce given following code html something click clicking button causes following exception thrown chrome version console js execution stops proven fact time update repeated clicks notes strangely error nt happen drop style attributes two divs salutation thanks best regards eric", "num": "4535", "d": "12/2016"}, {"title": "error log polyfilleventsource added missing eventsource window", "body": "vue project works fine browser including chrome firefox error reported nt test ie browsers dev mode hot reload enabled error picture", "num": "4534", "d": "12/2016"}, {"title": "vif velse causes client side hydration bail", "body": "vuejs version reproduction link steps reproduce follow readme sample repository built app started webserver go observe output console expected client side hydration work actually happening client side hydration bails mismatch clientside rendered vnodes serverside rendered nodelist found something must gone wrong indentation template compilation process directives compare template hydration bails hydration works", "num": "4533", "d": "12/2016"}, {"title": "render error vfor", "body": "vuejs version reproduction link steps reproduce use vfor p element child element p vue render error change child p span use template wrapper works expected actually happening wrap p element p problem", "num": "4532", "d": "12/2016"}, {"title": "vuecli build prefix keyframes", "body": "coding animations vuecli add webkitkeyframes border strokedashoffset keyframes border strokedashoffset npm run dev keyframes border strokedashoffset solve", "num": "4531", "d": "12/2016"}, {"title": "vif velse causing button value cleared", "body": "vif velse causing button value cleared vif velse role button one dynamic value value another button emptied vuejs version note problem exist reproduction link steps reproduce three sets scenes click toggle button html message multiple times see scene one scene two scene tree javascript new vue el app data message hello vuejs show true button button", "num": "4530", "d": "12/2016"}, {"title": "vbind obj syntax scoped slot", "body": "trying make custom list component using scoped slot like one docs would like expose item properties props template unfortunately syntax nt seem working scoped slot deliberate regular syntax working correctly would great could expose everything nt believe making mistake sincere apologies mentioned somewhere else missed thank entry point customlist implicit vbind object binding result customlist explicit prop binding result", "num": "4529", "d": "12/2016"}, {"title": "form value binding updating fast enough", "body": "say simple component nothing method following javascript thismyvalue value el parent form submit component html looks like html see using jquery submit form assigning value submitting form happen function empty data submitted work around using timeout delay course ideal also happens mounted method instance nothing page load delays goes versus nt know much internals vue js presume nt able assign values yet using timeout submit occurs next tick", "num": "4527", "d": "12/2016"}, {"title": "refs creating object used vfor object instead always creates array dom elements", "body": "vuejs version reproduction link steps reproduce run fiddle open console expected according docs ref used together vfor ref get array object containing child components mirroring data source actually happening always contains array elements used vfor seems go suggested docs would expect object produce object key dom element", "num": "4526", "d": "12/2016"}, {"title": "vmodel sets value undefined lacking matching", "body": "let say variable called somevar component properly defined initial value template select tag options bound somevar vmodel point everything works expected however change value somevar value covered option tags example vmodel set somevar undefined instead jsfiddle showing issue expected happen value set properly select tag becomes empty settimeout example may silly becoming pain load options model property bound select time results race condition options load first model loads second option present everything works fine model loads first bound value set whatever loaded ajax since options yet value instead set undefined options load time original value lost", "num": "4524", "d": "12/2016"}, {"title": "typeof component", "body": "hello everyone tired two components one component second simple component template data methods iam tryed call consolelog via methods components return vuecomponent second component return object fix second component cant use emit havent access synced props data", "num": "4523", "d": "12/2016"}, {"title": "dialog confirmation add method ok cancel button", "body": "hi want know set method confirmation buttons code component want add method like click ok button trigger theexamplemethod", "num": "4522", "d": "12/2016"}, {"title": "checkbox selected element click listener", "body": "vuejs version reproduction link steps reproduce html div gt input typecheckbox div von click found input element selected expected click input checkbox checkbox selected canceled div click event trigger actually happening read source think div capture click event stop event immediate kinda like use eventstopimmediatepropagation stop event progagation", "num": "4521", "d": "12/2016"}, {"title": "add global api", "body": "access instance cases inconvenient feature supposed implemented would like submit pull request", "num": "4520", "d": "12/2016"}, {"title": "extend vueprototype", "body": "want create event bus could accessed globally even components like route object vuerouter available everywhere tried like nt work either root component app bus property try use inside app", "num": "4519", "d": "12/2016"}, {"title": "customize vmodel components", "body": "way change defaults would great especially ui toolkits use case create radio button component would behave like standard html one like change prop used something like example prop syntax proposal javascript export default name uiradio props value currentvalue model prop currentvalue event input computed componentclasses return active modelprop thisvalue methods handleclick emit modelevent thisvalue", "num": "4515", "d": "12/2016"}, {"title": "sometime select event doest work option vlaue", "body": "vuejs version reproduction link steps reproduce switch tag value see change expected value selected always changes choose actually happening sometime works sometime doest work", "num": "4514", "d": "12/2016"}, {"title": "\u5347\u7ea7\u5230 uncaught typeerror read property child null", "body": "\u5347\u7ea7\u5230", "num": "4513", "d": "12/2016"}, {"title": "problem use velse velseif vfor", "body": "vuejs version reproduction link resolution steps reproduce use use expected b c actually happening b c", "num": "4512", "d": "12/2016"}, {"title": "invalid regular expression vuecommonjs", "body": "vuejs version steps reproduce using standalone build vuecommonjs running following gulp task happening getting browser probably means vue nt get built correctly gulp task checking vuecommonjs im suspecting following line debugs attempted commenting whole line seems remove gulp error browser error makes vue run adding extra right like also seems remove gulp error browser error makes vue run", "num": "4511", "d": "12/2016"}, {"title": "timing gap transitions", "body": "sometimes gap enter leave transitions example looks bit funky try reflect real case use dynamic components screenshot mean patient reproduce issue mentioned happens sometimes problem vue idea reason bug something wrong", "num": "4510", "d": "12/2016"}, {"title": "something wrong tests need nexttick run succesfully", "body": "component runs successfully browser single component pressure temperature import chart chartjs import resource serviceresource const resourceservice new resource export default name dashboard data return pressure temperature rainamount meanprobability lowestprobability highestprobability rainchance rainfall mounted function nexttick gt initiliazing two charts soon component mounted thissetupcharts methods setupcharts function let ctx documentgetelementbyid rainchance getcontext let ctxb documentgetelementbyid rainfall getcontext thisrainchance new chart ctx type line data labels datasets bordercolor rgba pointhoverbackgroundcolor rgba fill false label mean value data bordercolor rgba pointhoverbackgroundcolor rgba fill false label lower bound data bordercolor rgba pointhoverbackgroundcolor rgba fill false label highter bound data options tooltips mode label responsive true scales yaxes gridlines color rgba scalelabel display true labelstring ticks beginatzero true suggestedmax xaxes gridlines color rgba scalelabel display true labelstring days thisrainfall new chart ctxb type bar data labels datasets backgroundcolor rgba bordercolor rgba borderwidth label rainfall amount data thisrainamount options responsive true scales yaxes gridlines color rgba scalelabel display true labelstring ticks beginatzero true xaxes scalelabel display true labelstring days fetch rain amount information server thisgetrain getrain function resourceservicegetrain rainamount gt thisrainamount rainamount daysmap obj gt objamount thisprocessdata processdata function display values input range fields documentgetelementbyid temperaturevalue textcontent thistemperature documentgetelementbyid pressurevalue textcontent thispressure convert rain amounts pressure temperature rain probabilities thisprobabilities thisrainamountmap value gt return thischanceofrain thispressure thistemperature value thisprobabilitiesmap object index gt thismeanprobabilitysplice index objectmean thislowestprobabilitysplice index objectlowerbound thishighestprobabilitysplice index objectupperbound update chart datasets render thisrainchancedatadatasets data thismeanprobability thisrainchancedatadatasets data thislowestprobability thisrainchancedatadatasets data thishighestprobability thisrainfalldatadatasets data thisrainamount thisrainchanceupdate thisrainfallupdate chanceofrain function pressure temperature amount var score mathlog amount mathlog pressure mathlog temperature var mean mathmin mathmax score var upperbound mathmin mean var lowerbound mathmax mean return mean mean lowerbound lowerbound upperbound upperbound see wrapped mounted contents nexttick fact solve first failing test import vue vue import dashboard srccomponentsdashboarddashboard describe dashboard component gt render correct contents done gt vuenexttick gt const vm new vue dashboard mount expect vm elqueryselector label pressure textcontent toequal pressure expect vm elqueryselector label temperature textcontent toequal temperature done success problem remove nexttick test test fails general add test cases like ones example website fail matter simple wrong application", "num": "4509", "d": "12/2016"}, {"title": "ability stop updates view upon exit transition", "body": "writing demo application app camera video recording interface fake video feed preview label overlayed switches recording duration taping user starts capturing tap stop stop recording transition new view shows recording details small thing engineer around easily transition label switches back preview makes sense showing message recording recording complete state view nt really need since showing result new view got thinking nice would could simply tell vue stop pushing updates view prepare transitioning make view complex add elements check state work even though nt want anything view done recording perhaps could look like something along lines support methods call starting exit transition support something like make easy stop updates view common might many use cases generic freeze functionality course tbh little bit surprised could find info docs think similar situation transitioning let say toast message need keep view populated message value duration transition even though might value observable parameter case want able listen value message parameter bound view freeze updates empty meaning control maybe parameterbyparameter basis although might get tricky writing logic decides updates reflected view", "num": "4508", "d": "12/2016"}, {"title": "transition group mode outin working", "body": "", "num": "4507", "d": "12/2016"}, {"title": "stoppropagation enter", "body": "", "num": "4504", "d": "12/2016"}, {"title": "props propsdata different scenes inconsistent behavior", "body": "result num number num number html var test vueextend template num num typeof num props num type number default vuecomponent test test new test el propsdata num new vue el propsdata num", "num": "4503", "d": "12/2016"}, {"title": "transitions inside components nt apply leave class", "body": "vuejs version reproduction link steps reproduce created component two different transitions inside appear effect followed documentation example simple toggle button seems classes leave leaveactive nt added elements enter enteractive classes working fine also added original code documentation works without problems expected reverse animation actually happening using inspect web tool shows enter classes applied leave think issue new vuejs sure something wrong sorry post wrong place", "num": "4502", "d": "12/2016"}, {"title": "possible incompability vue router vuex since", "body": "vuejs version reproduction steps reproduce vue vuex vue router app using webpack vue loader bundle precompile code set project similar way hackernews example provided instead resolving app server side soon route matched resolve route entered route guards used properly began building everything working expected app renders server browser everything looks content rendered server actually happening app rendered correctly server fraction second app actually seen browser sometimes immediately becomes empty blank screen element app mounted onto children", "num": "4501", "d": "12/2016"}, {"title": "binding width attribute elements nt work inside vfor loop", "body": "vuejs version tested latest fiddle reproduction link steps reproduce inspect elements notice width attribute expected added custom attribute binding width custom attribute value actually happening binding width attribute nt working within vfor instead set bind standard data item works exclusive vfor loop variables demonstrated fiddle", "num": "4500", "d": "12/2016"}, {"title": "unable load filter additional parameter", "body": "vuejs version reproduction link expected filter loaded vue actually happening error message failed resolve filter concat bar", "num": "4498", "d": "12/2016"}, {"title": "vfor nt support string", "body": "per doc string iteration supported think nt implemented jsfiddle html hello v", "num": "4497", "d": "12/2016"}, {"title": "use protocols inside anchors vbind", "body": "vuejs version reproduction link steps reproduce expected anchors work using protocols etc used websites mobile phones raise proper applications handle events actually happening getting compilation error template foo send us email call us invalid expression href mailto email invalid expression href tel telephone", "num": "4496", "d": "12/2016"}, {"title": "feature request allow adding event handlers slots", "body": "example surely used method slot component passed content using methods inside slot component", "num": "4495", "d": "12/2016"}, {"title": "value attribute behaves differently", "body": "vuejs version reproduction link steps reproduce html v v new vue el app data v expected html actually happening html", "num": "4494", "d": "12/2016"}, {"title": "ref used vfor overridden vfor", "body": "vuejs version reproduction link", "num": "4493", "d": "12/2016"}, {"title": "load file vue components", "body": "want load file vue components webpack config vue file html", "num": "4492", "d": "12/2016"}, {"title": "vue svelte", "body": "would great vue could somehow like sveltejs vue core bits pieces bundled app instead containing use syntax way working reminds exactly workflow using vue webpack vue files example maybe concept new makes completely sense use vue deep inside looking light eight library nt add weight code see easy make framework top vue dont feeling like adding jquery use element instead documentqueryselector nt know u guys think vue could splited compile time instead using whole library would add great booooost everything", "num": "4491", "d": "12/2016"}, {"title": "benchmark introduction missing homepage", "body": "hello reading material following page notice benchmark page nt exist anymore really interested know get thanks vuejs version reproduction link steps reproduce expected actually happening", "num": "4489", "d": "12/2016"}, {"title": "vfor count start step feature", "body": "vfor count start step features start gt starting number step gt increment step example vfor count result", "num": "4488", "d": "12/2016"}, {"title": "vue picking click event rendered element dom", "body": "hello made small fiddle explaining problem possible right someone explain happening trying write unit tests vue module using jasmine thanks", "num": "4487", "d": "12/2016"}, {"title": "vue mount element mount", "body": "vuejs version reproduction link steps reproduce create new vue instance el set element exist html expected vue call mounted element page mount actually happening mounted called even though nt expect vue mount nothing since element", "num": "4486", "d": "12/2016"}, {"title": "slot working root component instance", "body": "vuejs vueify steps reproduce indexhtml html main contents bootstrapjs mainvue vue main test contents import test test export default name main components test testvue output according documentation compiles templates render functions bootstrapping app js file need write render function including filling slots looks like bootstrap contain slots eg perhaps component registered instance example perfectly reproducible example app possible use slots component created alternative approach initialize vue element without render function thus template possible vue vue render function required", "num": "4485", "d": "12/2016"}, {"title": "node vshow inside vif reused adjacent velse", "body": "vuejs version reproduction link steps reproduce code html hidden content visible content element hidden element hidden expected element visible actually happening check nodes old vnode new vnode result call directive hook function elements different attributes result correct think better element visible", "num": "4484", "d": "12/2016"}, {"title": "component render result incorrect", "body": "hi question details items list want insert new item list rendered result correct result issue vue version vue right sample code", "num": "4483", "d": "12/2016"}, {"title": "problem ignoredelements trix editor", "body": "sure vuejs trixjs bug sorry vuejs version reproduction link steps reproduce load basecamp trixeditor trixjs vuejs add tag html inside element add expected trixeditor ignored actually happening trixeditor seems load two times toolbars appears loading vue app", "num": "4482", "d": "12/2016"}, {"title": "beforedestroyed hook triggered component switch another", "body": "vuejs version amp reproduction link steps reproduce use render functions switch seperate component expected beforedestroyed hook trigger change another component actually happening beforedestroyed triggered", "num": "4481", "d": "12/2016"}, {"title": "autoprefix correctly", "body": "vuejs version reproduction link steps reproduce open ios expected actually happening maybe reason correct event name", "num": "4480", "d": "12/2016"}, {"title": "inconsistent drag event behaviour jsfiddle vs local environment", "body": "vuejs version reproduction link steps reproduce expected actually happening dragging list item one bucket another paints outer item red event fiddle expected start drag item column upon dragstart gets class immediately second gets mouse hovers said expect happen copy exact code fiddle paste local folder indexhtml mainjs also link vue happens upon dragstart column one immediately gets class well code versions browser latest chrome place debugger statement class addition time stops see column started drag already got class referring second column everything nt know behaves different trying develop draganddrop application bumped issue first thought webpacknodemodule related trashed started single htmljs file", "num": "4479", "d": "12/2016"}, {"title": "svg foreignobject working vue", "body": "svg foreignobjects working fix broken vuejs version reproduction link steps reproduce run without var vue new vue el body version instead expected version see text inside rectangle run without vue text work fine version text also fine actually happening change reverted fix", "num": "4478", "d": "12/2016"}, {"title": "props data passing parent child working", "body": "use list data javascript variable pass vuejs template loop javascript variable parent template parent template source child template source vuejs general loop generated use loop working fine whats wrongs vuejs never uses instance process loop suggestions thanks advance", "num": "4476", "d": "12/2016"}, {"title": "use vshow events bug", "body": "vuejs version reproduction link steps reproduce click element child element visible child element hidden removed attribute element child element visible removed attribute element first child element element also visible changed fine expected element children affect element children actually happening upgrade work anymore dom diff bug", "num": "4474", "d": "12/2016"}, {"title": "breaking change involving vshow transition", "body": "vuejs version reproduction link original pen still valid new pen simplified steps reproduce please check codepen linked contains code working simple instructions next click settings button js pane update vuejs version cdn link save try immediately see difference behaviour expected behaviour shown reproduction link keep working actually happening upgrade work anymore based release notes made build creating new branch tag checkout reverting commit vuejsvue got things working commit fix vuejsvue breaking change coming note note new pen reproduction link edits original submission everything else inform details original case still relevant essential new simplified case shall suffice one see reproduction link well gist directive called directive runs vm method passed directive attribute value click happens outside dom element using directive using close dropdown menus click done anywhere outside dropdowns using showhide sure implementation relies previous imperfect implementation shall fix code really keep working written fix done vue taken time investigate identified reported traced issue report thank", "num": "4473", "d": "12/2016"}, {"title": "multiple root nodes functional component render function allowed", "body": "vuejs version reproduction link working broken steps reproduce return array elements render function functional component expected multiple root nodes seems dissallowed everywhere think correct solution would throw appropriate error console avoid returning designed logic handled engine older versions decide actually happening rendered result correct error thrown console", "num": "4472", "d": "12/2016"}, {"title": "line invalid regular expression", "body": "nodemodulesvuedistvuejs line invalid regular expression const jquery require jquery const bootstrap require bootstrap var fs require fs var path require path var vue require vuedistvuejs function getdirectories srcpath return fsreaddirsync srcpath filter function file consolelog file return fsstatsync pathjoin srcpath file isdirectory getdirectories var app new vue el main data message hello js vue", "num": "4471", "d": "12/2016"}, {"title": "allow parent component pass scope nested children", "body": "let say editor component button component click button needs toggle changes markup state editor currently access parent instance property shown indexvue bold btnvue methods toggle parenttoggle however solution feels like antipattern intended usage would explicit less prone errors could pass parent instance child component example emberjs like many situations need child component access parent context far know nothing like exist think vuejs supporting feature", "num": "4470", "d": "12/2016"}, {"title": "option nt get selected select box changed", "body": "add logic select based state value add listener surrounding element get correctly selected clicked state value correctly updates attached two links show differing behaviour vue vue looked migration notes documentation ca nt find might", "num": "4469", "d": "12/2016"}, {"title": "npm test command fails", "body": "according development setup following clone vue repository step get error vue test c vuegithub npm run build vueminjs amp amp node env phantomjs vue build c vuegithub node buildbuildjs vueminjs error could load c vuegithubsrccoreindex imported c vuegithubsrcentrieswebruntimejs enoent file directory open c vuegithubsrccoreindex c processtickcallback modulerunmain run startup starting selenium server started pid commits test suite running commits", "num": "4467", "d": "12/2016"}, {"title": "breaks app typeerror create property isrootinsert boolean false", "body": "vuejs version reproduction link working working steps reproduce open fiddle check console expected well work without throwing exception since nt see breaking changes new release regarding render function actually happening seems vue suddenly nt accept value array children vnodes change line everything works correctly error", "num": "4466", "d": "12/2016"}, {"title": "invalid calling object error ie", "body": "vuejs version reproduction link identified needed fix bug think inspection right thing producing fiddle reproduce somewhat complex seems proportion fix however absolutely steps reproduce app dynamic elements transitions defined callback hooks transitions open ie tested emulation problem browsers expected transition completes hooks called right times actually happening transition complete error thrown vue invalid calling object code starts line srctransitionjs error thrown line error seems method object called without parent object seems fix changing line error goes away using bind seems obviously correct clealy browsers default object anyway matter however ie seems take dislike approach throw error binding window method would seem harmless otherwise oldhand coding new github relatively new js vue fix works nt really know reasons good idea cautious closing", "num": "4465", "d": "12/2016"}, {"title": "regression render components list velse amp vfor", "body": "vuejs version reproduction link steps reproduce nothing see output using show message empty list list rendered components expected list expected actually happening rendered errors vuejs works", "num": "4464", "d": "12/2016"}, {"title": "vueserverrenderer nt work webpack dynamic require functions", "body": "get error import vue static renderer script webpack relevant want use staticsitegeneratorwebpackplugin vuejs version reproduction link steps reproduce expected project compiles without errors actually happening warning vueserverrendererbuildjs critical dependency require function used way dependencies statically extracted error vueserverrendererbuildjs module found error ca nt resolve module homemaartenwebstormprojectsvuestaticrenderbugnodemodulesvueserverrenderer vueserverrendererbuildjs vueserverrendererindexjs appjs", "num": "4463", "d": "12/2016"}, {"title": "component property undefined uncaught reference error", "body": "vuejs version reproduction link steps reproduce create new vue instance component uses xtemplate string use vfor component pass data vfor expression component property attempt access property template expected expect see data passed parent scope displayed component template actually happening prop property referenced template note add parent data object repro bug goes away component renders properly however seems like unexpected behavior", "num": "4462", "d": "12/2016"}, {"title": "vue packages version mismatch", "body": "\u4f7f\u7528\u7684elementui\u5e93\u6682\u65f6\u53ea\u652f\u6301vue function \u4f46\u662f\u4eca\u5929npm install\u540e\u62a5\u9519", "num": "4461", "d": "12/2016"}, {"title": "font node td rendered error", "body": "font node td rendered error html seems ok font dose display bug found upgrade vue code", "num": "4459", "d": "12/2016"}, {"title": "vuejs isotope function", "body": "seem integrate jquery plugins inside project specifically trying add isotope project note nt add vuejsisotope nt work expected tried adding nexttick created hook add jquery plugins vuejs components thank", "num": "4457", "d": "12/2016"}, {"title": "watching passed prop doesnt work", "body": "watching transactionitem prop doesnt work transactionkey transactionitemstock itemname capitalize stockretailprice stockquantity stock itemquantity stockretailprice transactionitemquantity estimate export default name transactionitem props transactionitem item stock transactionkey transaction watch transactionitem oldval newval consolelog oldval newval", "num": "4456", "d": "12/2016"}, {"title": "failed mount component template render function defined found component", "body": "cant signup forums ip block nt know ill post bug im trying make component transactionvue doesnt work results error transactionitemvue key transactionitemstock itemname capitalize stockretailprice stockquantity stock itemquantity stockretailprice transactionitemquantity estimate export default name transactionitem props transactionitem item stock key transaction transactionvue transaction item key stock key item retail price quantity item total configuration import mapgetters mapactions vuex import transactionitem vuex export default name transaction components transactionitem computed mapgetters currenttransaction currenttransactionitemstocks authemployee", "num": "4455", "d": "12/2016"}, {"title": "warning unminified build failing silently firefox firebug", "body": "hi folks new vue developer bumped issue vue warnings show fail silently firefox firebug detail best necessary wondering heard issue already imagine quite frustrating spent trying understand nt work couple days later try page google chrome finally see hints vue giving along works vue gives warning von click tries show false simple exercise cf scenario nt work firefox ubuntu vm firebug addon nothing shows fails silently enable firebug gt console gt show chrome messages scenario see firefox windows version builtin firebug vue warning show nt know happens addon version firebug firefox windows since accepted firebug switch new builtin version nt know revert addon prefer misc page includes vuejs development build downloaded december right click file size info kb bytes downloaded also unminified cdn nt remember file size results scenario basically trying make vuestrap alert component work vue exercise took code made simple one page mind alert vue broken ways think needed remove coerce etc sounds like issue related development environment firebug since happen google chrome", "num": "4454", "d": "12/2016"}, {"title": "options setting default transitionmode outin", "body": "using vue vuerouter want make perroute transition also want transition mode outin want transition logic exist inside component belongs want use js transition mode simultaneous using perroute transitiontechnique want transitionmode outin wrap routerview transition transition logic exists parent component want custom js transition logic component becomes complex fast possible create option setting default transitionmode outin", "num": "4453", "d": "12/2016"}, {"title": "suggest add detectport cause port occupied stop process", "body": "like title", "num": "4452", "d": "12/2016"}, {"title": "set candidate background image background image found", "body": "background image found use onerror set candidate background image nt work wrong", "num": "4451", "d": "12/2016"}, {"title": "ca nt use prop variable init loop value", "body": "specify example loop works fine pass int value directly instead pass variable init loop value returns empty sample code output specify value directly output wrong", "num": "4449", "d": "12/2016"}, {"title": "dynamic change component level parent host dom tree hook method eg etc", "body": "dynamic change component level parent host dom tree hook method eg etc want define component popover render root documentbody parent html export default name test show implements popover test child", "num": "4448", "d": "12/2016"}, {"title": "vueserverrenderer got trouble vhtml slot", "body": "vuejs version reproduction link steps reproduce look console see warning expected server render html righti use createbundlerendererrendertostring itand wish client side run without waring actually happening throw warning", "num": "4447", "d": "12/2016"}, {"title": "chunked transition group filtering", "body": "good way transition chunked list im using animate css seems nt work flawlessly im also using mode outin transition group supported list chunked add row class per chunk columns transitioning components doesnt work properly like snippet code main layout datalist let items thislist items amp amp thissearch amp amp thissearchkey let regexp new regexp items filter items item gt return regexptest item thissearchkey return chunk items", "num": "4446", "d": "12/2016"}, {"title": "invalid regular expression vuejs gulprequirejs", "body": "similar get error parse error using esprima file bowercomponentsvuedistvuejs error line invalid regular expression module tree srcjsmainjs loadmore var regexescapere g using vuejs requirejs nt happen used vueminjs vuejs version", "num": "4445", "d": "12/2016"}, {"title": "vue breaking iframes safari macos ios laravel site", "body": "hi encountering strange bug sure ask wrong place please delete laravel application vue places displaying embedded youtube videos using html output syntax laravel blade main content placed inside soon binding vue instance youtube iframes stop working nt matter code inside outside iframe gets rendered empty see blank space provided width height issue seems affect youtube iframes testet twitch works occurs safari macos ios", "num": "4444", "d": "12/2016"}, {"title": "set modifying objects array reactivity", "body": "vuejs version problem ca nt update object array objects use try know wrong want update editedplayers someid since set splice used substitute current index value another want modify ie", "num": "4443", "d": "12/2016"}, {"title": "circular references components", "body": "document say circular references vuecomponent automatically understand wrong look closely see components actually descendent gt ancestor render tree paradox registering components globally vuecomponent gt paradox resolved automatically stop reading", "num": "4442", "d": "12/2016"}, {"title": "vbind class ca nt work classname contain", "body": "error right", "num": "4441", "d": "12/2016"}, {"title": "feature request allow change value scoped slots props", "body": "im something like scoped slot component parent", "num": "4440", "d": "12/2016"}, {"title": "remove row performance decrease", "body": "seems like performance issues removing rows running benchmarks", "num": "4439", "d": "12/2016"}, {"title": "component prop ca nt use style prop name", "body": "props style type string default default test type string default default test works style always default ok", "num": "4438", "d": "12/2016"}, {"title": "feature request determine reactive object observed vue instance", "body": "would like request new feature want determine reactive object observed vue instances example var name var name var app new vue el app data item mounted function onmounted thisitem thisitem methods pickitem function pickitem thisitem items thispickedelemid want determine observed vue instances example clear observed reasons behind feature request discussed issue", "num": "4437", "d": "12/2016"}, {"title": "ca nt use vue cordova", "body": "simple script nt work cordova javascript var weatherdata cityname beijing var vue new vue el main data weatherdata vue watch cityname function newval oldval consolelog newval newval oldval oldval trying change weatherdatacityname another value nt work watch tell value changed html nothing happend chorme console nt show error log", "num": "4436", "d": "12/2016"}, {"title": "vue using wrong component global local components name registered different naming conventions", "body": "jsfiddle html", "num": "4434", "d": "12/2016"}, {"title": "transition\u7684\u6839\u5143\u7d20\u5982\u679c\u6837\u5f0f\u8868\u4e2d\u6709display", "body": "display none \u5176\u4ed6\u6837\u5f0f\u7701\u7565 transition opacity ease \u7531\u4e8evshow\u4ec5\u4ec5\u53ea\u662f\u6dfb\u52a0\u6216\u8005\u79fb\u9664\u5185\u8054\u7684style display none none\u5143\u7d20\u4e00\u76f4\u5904\u4e8e\u4e0d\u53ef\u89c1\u72b6\u6001", "num": "4433", "d": "12/2016"}, {"title": "vbind removing attributes falsy values another attribute modifier appears first", "body": "howdy seems like removing attributes falsy values another attribute modifier appears first element list attributes details comments fiddle vuejs version tested reproduction link steps reproduce run fiddle inspect rendered elements using devtools see problem described expected remove attributes whose values falsy regardless presence attributes modifier actually happening attributes falsy values removed another attribute modifier appears first instead attributes rendered string value", "num": "4432", "d": "12/2016"}, {"title": "vmodel \u4f1a\u628avm", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4431", "d": "12/2016"}, {"title": "devtools always enabled using", "body": "notice line code always means even production devtools enabled", "num": "4430", "d": "12/2016"}, {"title": "ambiguous component name error mention first character numeric", "body": "assigning component name matched regex allow first character name numeric however error thrown mentions component name alphanumeric typo characaters provided component name also matches condition error would helpful either regex error changed accordingly thank advance", "num": "4428", "d": "12/2016"}, {"title": "filters accessibles inside another filter", "body": "vuejs version reproduction link call filter inside params another filter vuejs nt find works use method instead", "num": "4427", "d": "12/2016"}, {"title": "docs capitalized propnames w vbind", "body": "problem scenario could trip beginners use capitalized propnames nt quite html looks almost like xml namespace prefix yet still must conform html caseinsensitivity behavior capitalized propnames used directive amp component template key amp props array lookup naturally fail proposal vbind docstutorial prominently flag since html caseinsensitive capitalized propnames allowed frankly nt think worth expending calories amp taking sure performance hit check capitalization props components order fire warning flagging subtle thing like docs would probably get job done curious others think example issue renders proper propname html js vuecomponent listcomponent template propnametext props propname new vue el app data todos text text b text c nt render capitalized prop name html js vuecomponent listcomponent template propnametext props propname new vue el app data todos text text b text c", "num": "4426", "d": "12/2016"}, {"title": "get old value input type number change event", "body": "want deduct quantity item another quantity example quantity change change event listener deduct achieve seems dont get old value", "num": "4425", "d": "12/2016"}, {"title": "values dynamically passed html using vue js", "body": "original question ca nt pass initial value one component another value changed click event pass value tid directly cant send tshowlist value html template html data source var list false vuejs vuecomponent campaignsegment template segmentbody props tshowlist tid ouput click option grid output wrong anything wrong", "num": "4424", "d": "12/2016"}, {"title": "vueset data updated get", "body": "import vue vue import vueresource vueresource vueuse vueresource const vm new vue data responsedata class getjson constructor vue vueset vm responsedata consolelog vm consolelog vmresponsedata routes return jsonroutes", "num": "4423", "d": "12/2016"}, {"title": "feature request vuedevtools firefox", "body": "possible create vuedevtools extension firefox also enabling vuedevtools chrome firefox etc running server react including react script still able use react devtools however vue though usually use vuecli want enable devtools create simple http server order chrome recognize vue page", "num": "4422", "d": "12/2016"}, {"title": "vueserverrenderer createbundlerenderer sourcemaps", "body": "hey way pass sourcemap options argument nt documented happy write docs point towards correct bit source could nt find currently getting error nt understandable", "num": "4421", "d": "12/2016"}, {"title": "custom vue filter always vue warn error defined", "body": "im using filters chunking arrays errors pops like one use component", "num": "4420", "d": "12/2016"}, {"title": "safari os x ios iframes disappear vue mounted", "body": "vuejs version reproduction link steps reproduce create element contains youtube video embed explanation mount vue outer element load page safari os x ios expected contents visible actually happening disappears page loads may need reload page see still exists dom sized appropriately iframe fails load error network tab inspector error occurred trying load resource danielsamuels helpfully investigated found thing happen vue perhaps narrow somewhat chose youtube video example reproduces consistently setting iframe source locallyserved image locallyserved vue bundle seem cause reproduced ios safari ios safari simulator os x safari thanks time", "num": "4419", "d": "12/2016"}, {"title": "transition js hooks vshow removed late", "body": "vuejs version reproduction link steps reproduce create tag set transition tag rely css well trigger add element inside tag add callback transition call inside callback expected element toggled visually present ie call actually happening vue keeps defers removal callbacks thus interchangeable eg starting animation relies retrieving global position element would work fail due lack offsetsoffset parents result relevant", "num": "4418", "d": "12/2016"}, {"title": "slot could nt add slot attribute", "body": "vuejs version reproduction link steps reproduce run demo directly expected slot content component foo displayed correctly actually happening encounter problem upgrading project could nt add slot attribute vue works well upgrading guide mentioned issue solve wrapping slot template tag", "num": "4416", "d": "12/2016"}, {"title": "filter recognized filtered value contains", "body": "vuejs version works fine reproduction link steps reproduce divide number using operator apply filter expected divided number gets filtered like arithmetic operators actually happening get error vue warn property method currency defined instance referenced render make sure declare reactive data properties data option currency name filter got recognized property keyword filter think commit expression gets recognized regular expression contains", "num": "4415", "d": "12/2016"}, {"title": "slot ca nt use vue transtion component", "body": "soucce code defined transitiondemo component transition disappearing content disappearing dose rendered", "num": "4414", "d": "12/2016"}, {"title": "crashed", "body": "vuejs version vue crashed start yet white page network well dose vue support ios", "num": "4413", "d": "12/2016"}, {"title": "indirect help upgrading higher", "body": "hi created project using webpack long time ago initially using vue version updated properly use versions upgrade safely update untill getting error another library using directly related vue checked release notes nothing appears related would asking tips guys think related vueloader vuetemplatecompiler another library promises changes information directory link directly file sorry abstract question thanks advance", "num": "4412", "d": "12/2016"}, {"title": "unsupport html tag", "body": "vuejs version found vuejs unsupport tag", "num": "4411", "d": "12/2016"}, {"title": "improving flow types", "body": "files like lot uses currently improving documentation around flow nt good enough job explaining right sorry types nt actually typesafe convenience purposes instead use specific type instead use instead use maps drastically improve user experience vue using flow", "num": "4410", "d": "12/2016"}, {"title": "gettersetter syntax", "body": "thought write since came reddit would cool vue made use getterssetters objects instead way computed props work today either even using get getters setters apply watching logic done also make easier integrate type systems like flow future flow understands syntax nt type check getterssetters", "num": "4409", "d": "12/2016"}, {"title": "warning compilation template invalid", "body": "vuejs version reproduction link steps reproduce expected throw warning error actually happening although case works well result expected warning error displayed difficut find template mistake", "num": "4408", "d": "12/2016"}, {"title": "error src html disappear", "body": "write like result html like html disappear cant find error uh know syntanx error used angular", "num": "4407", "d": "12/2016"}, {"title": "vue rendering data model problem", "body": "vuejs version reproduce link right code wrong code steps reproduce right code click aaa bbb button become blue console log vue devtools model wrong code click aaaa bbbb button problem one button become blue console log dont vue devtools model expected wrong code click aaaa bbbb button become blue actually happening wrong code click aaaa bbbb button one button become blue real code use get data", "num": "4406", "d": "12/2016"}, {"title": "dynamic filter names", "body": "according document filterid would parsed using text filterid possible support use expression filterid example use objfilter filterid vue calc expression use result filterid thx time", "num": "4405", "d": "12/2016"}, {"title": "using routerlink events property double click event nt work", "body": "based upon documentation would expect trigger event instead nt change default behavior fire double click intention property made clear documentation currently enjoying able wrap around instead needing handle anchor events call however without either better documentation feature patch provide large dead end", "num": "4404", "d": "12/2016"}, {"title": "mount component template render function defined", "body": "\u5728\u9879\u76eea\u4e2d\u5f15\u7528 l webpack\u914d\u7f6e webpackbaseconfjs \u9879\u76eel\u4e2d\u7684inputvue vue export default name input data return value \u4f7f\u7528", "num": "4403", "d": "12/2016"}, {"title": "transitiongroup odd behaviour transitions fiddle", "body": "vuejs version reproduction link steps reproduce click switch button times sometimes squares pop sometimes fade like everything works fine reload couple times seems triggered random load expected squares always fade inout actually happening feels random sometimes squares pop instead fading ca nt wrap head around happening", "num": "4401", "d": "12/2016"}, {"title": "jquery sortable vue bug", "body": "var sortablelist vueextend template lt ul id sortable class listgroup style width gt lt li class listgroupitem vfor item items gt itemtitle itemid lt button type button class close arialabel close von click remove item gt lt span ariahidden true gt amp times lt span gt lt button gt lt li gt lt code gt amp lt ul amp gt lt code gt props items methods remove function item var index thisitemsindexof item alert index thisitemssplice index var lt thisitemslength consolelog thisitems id lt p gt var vm new vue el app data items id title item id title item id title item id title item id title item mounted function consolelog sortable sortable sortable start function e ui uiitemdata start uiitemindex update function e ui var start uiitemdata start end uiitemindex vmitemssplice end vmitemssplice start var lt vmitemslength consolelog vmitems id sortable disableselection components sortablelist error", "num": "4399", "d": "12/2016"}, {"title": "event modifiers working", "body": "form matter try place event modifiers form always submitted nt problem simple failing example", "num": "4398", "d": "12/2016"}, {"title": "used jquery click event disabled", "body": "vuejs version onetwo threefour call vue click event executed call vue click event executed jquery used together", "num": "4397", "d": "12/2016"}, {"title": "used jquery click event executed", "body": "vuejs version document ready function find tbody click function consolelog click running call vue click event executed call vue click event executed jquery used together", "num": "4395", "d": "12/2016"}, {"title": "value binding nt reflect changes", "body": "vuejs version reproduction link steps reproduce select element declared expected changed select element updates value shows actually happening changed select nt update value property", "num": "4394", "d": "12/2016"}, {"title": "case vif velse throws error breaks app", "body": "example template vif velse block nested another vif produces error read property attrs undefined switching value researched need conditions reproduce issue class attr another attribute must presented presented nested element nested velse must presented vif velse must nested another vif velse workaround use vif condition vif condition instead velse thanks", "num": "4393", "d": "12/2016"}, {"title": "input vmodel amp typenumber truncated unrelated dom update happens", "body": "vuejs version reproduction link steps reproduce enter number zeros comma type number input field vue performs page rendering background unrelated variables component expected entering number like works without issues actually happening every time vue triggers dom change vmodel input fields rerendered makes impossible enter decimal numbers contain zeros busy components sounds like minor issue huge problem since entered number could completely wrong imagine entering input silently changed already led serious trouble financial vue application", "num": "4392", "d": "12/2016"}, {"title": "returns radio value vue mounted", "body": "vuejs version reproduction link steps reproduce open jsfiddle native neither compatibility mode produce error klick get value gt see values radio buttons read properly first second klicking mount vue afterwards get value return radios expected mounting vue radio value still first second internet explorer actually happening exactly vue mounting element seems element somehow processsed leads ie error found following stackoverflow entry states radio element created javascript value set type set radio ie return default value instead given value application able tell radio button selected submitting form jquery ajax post request inputs send would great someone vue insights idea could causing issue aware example vue needed tried create minimalistic code possible able reproduce issue real live part website radio buttons inside container mounted vue another place jquery reads selected radio button value works browser kind regards many thanks advance andreas", "num": "4391", "d": "12/2016"}, {"title": "bower installation nt include main field", "body": "result nt include main field resulting file messes libraries like right fixed sorry nitpick figured quick fix nt integrated webpack browserify workflow yet", "num": "4390", "d": "12/2016"}, {"title": "fieldname component selection feature suggestion", "body": "reading posts please read comment thread closed thanks app use many different fields generic display components needed display keeping low amount code send client side templates clean possible developers able position fieldname template perfect context positionning program surrounding behaviours understood subcomponent selection parameter passing see details fieldname would translate component selectioncall according meta data vuex structure still expert js vue syntax approximate example structure publish client side version pubname cd table level permissions create delete see billow fields name lt gt field level permissions view edit see billow type text currency component optional width height min max regex listtype contexts structure standardized way another context pubname field name able access field parameters including component table level permissions create delete c create delete create delete field level permissions view edit fact value would result even including field list version sent client v view edit e view edit parameters need passed forward called component also complexe components data grids component might need call even lower component thus needing call component pass parameters ideally done without defining call code would increase code size pass client display code file code error free would make less clean templates field insert would really useful asap wish feature following would replace something like without defining components actual component used actual dynamic component use would stand field forward already use html specifications firstname field display lookup meta data would select component call also would passed called component attribute named fieldname use metadata called component value value received data received passed generic fieldvalue attribute called component context selecting section meta data look specified field pubname meta data also passed context attribute use metadata called component attribute calling component fields template mode way possibly array multiple attributes would allow subcomponents set record wide form wide status well react conceptually considered bad least need pass reference variable need call setter listen getter finally could interesting version feature takes list fields loops perform call one previous reflexions leading model look one element reflexion several contexts template thus template includes field set non editable editable present specified context leading empty display field context would provided query server would returned client according allowed permissions context would added already meta data list would allow flexible use template quick view full view user permissions whole system would also allow simplify templates patching multiple exceptions stating want specific context meta data driven way think good way towards cleaner templates incapsulating code lower reusable components despite complex behaviours also addresses somehow fatness application inflate code arrived client side leveraging metadata also opens door form based customization without coding", "num": "4389", "d": "12/2016"}, {"title": "components props shift next component delete item array", "body": "vuejs version reproduction link steps reproduce delete expected actually happening", "num": "4388", "d": "12/2016"}, {"title": "clientside rendered virtual dom tree matching serverrendered content using async components", "body": "minimal code reproduce error run browser jsfiddle html foo comment problem course code splitting point real code router client entry bundle code splitting server entry bundle", "num": "4387", "d": "12/2016"}, {"title": "add reactive array swap", "body": "writing simple todo list component work need coreobserverarrayjs something like javascript arrayprototypeswap function x var x x const arrayproto arrayprototype export const arraymethods objectcreate arrayproto intercept mutating methods emit events push pop shift unshift splice swap added sort reverse works lazily fixed distvuejs run tests think worth add swap way notify run wrong", "num": "4386", "d": "12/2016"}, {"title": "default binding inline style number object", "body": "want bind inline style object might use object like way think might useful users write suffix automatically possible default unit using numbers", "num": "4385", "d": "12/2016"}, {"title": "big data set issue", "body": "hello issue handling big data set vuejs app app like objects memory lets call items every item id name property want list items user one time user picks item put item vue instance render screen problem data set like mb big put data set items object vue instance data observer properties mb tried put data set vuex store result memory usage test case real production data like vuex store instant memory guess put data instance cuz want reactivity objects one user picked time store data set plain object user pick item put item vue instance reactivity one item everything good expects causes memory leak every time put item vue instance new observer property added object even object instance new observer added next unused ones works intended guess issuefeature request somehow remove unused observers gettersetters practices handle big data set vue things would solve issue ca nt use could deep clone item put vue instance need keep original object refence cuz parts app updates object want keep reactivity could use database engine need offline capability fast ioless memory search locally test cases made data vuex store var store new vuexstore state items mutations additem state item vueset stateitems itemid item var index index lt index storecommit additem id index name item index var app new vue el app data pickeditemid computed item return storestateitems thispickeditemid instance var app new vue el app data items function var elems plain object memory leak every time update appitem picked item var items function var elems var app new vue el app data item", "num": "4384", "d": "12/2016"}, {"title": "child component nt merge classname parent", "body": "vuejs version reproduction link steps reproduce look output html expected child comp classname actually happening classname design", "num": "4381", "d": "12/2016"}, {"title": "altering html structure breaks bindings", "body": "vuejs version reproduction link steps reproduce discussions tasks opentasks navvue new vue el navigation data tasks methods gettasks function computed opentasks function return thistasksfilter function task return taskstatusindexof open gt taskstatusindexof progress gt original code runs fine displays computer property opentasks order make tabs scrollable tried different jquery plugins enable change structure wrapped additional divs expected value opentasks changes value update actually happening value stays however plugins disabled updates correct also vue instance created jquery plugins initialized work correctly however delaying vue instance creation far ideal situation", "num": "4380", "d": "12/2016"}, {"title": "official way modify page metadatatitleetc", "body": "briefly discussed quick check found least separate party libraries attempting tackle problem none particularly complete one handles serverside rendering still quite buggy maintainer told nt time moment work due working real project adjusting page metadata something every serious site needs important serverside rendering goes handinhand probably official way handle like official routing library beautifully integrated vue always kept uptodate", "num": "4379", "d": "12/2016"}, {"title": "lagging von change", "body": "input von change directive call method declared inside vue objects realized delays calling method whenever value changed reproduced", "num": "4377", "d": "12/2016"}, {"title": "improve ssr debugging sourcemap", "body": "vuejs version reproduction link ssr issue hard provide running demo online please see steps reproduce steps reproduce clone repostory edit file cause error example import spinner spinnervue import item itemvue import watchlist storeapi abc undeclared variable cause referenceerror consolelog abc npm run buildnpm run start command line open browser navigate command line report error info expected error info command line include specific file path line number example actually happening error info dose include file path line number cause error produce know bundle render cause error hard locate solution like soucemap solve debug issuse bundle render", "num": "4376", "d": "12/2016"}, {"title": "unable debug radio buttons unchecked randomly", "body": "vuejs version reproduction link kindly see steps reproduce cycle questions using prev next buttons expected vmodel set radio buttons checked actually happening vmodel sync field storing value set radio button sometimes certain radio buttons render unchecked actually field bound vmodel showing value present ie radio button render checked text question posted stackoverflowvuejs forums questions array vuedata cycling every time next prev button pressed store active question compute active question using radio button store state active question property questions already default value initially contains value default option radio buttons display unchecked even though field current active question set issue persists even default values user clicks button", "num": "4375", "d": "12/2016"}, {"title": "beforemount etc called server rendered component", "body": "vue serverside rendering component rendered server similar lifecycle methods called client since component content technically already mounted server issue loading initial data vuex state page since api request also function ensure requested component remounted request resource made client well page first loaded look issue list ca nt find quite referring", "num": "4374", "d": "12/2016"}, {"title": "custom components vmodel values object", "body": "migrating vue going components painstakingly replacing occurrences adapting components accept prop etc application lots complex little input types convenient create bunch custom components handle specific type nest needed happy vue helped change makes sense like idea overall however custom input components value object seem well supported new model example docs value string use pattern object behavior change considerably lost sight long thread switch vmodel discussed clear one main reasons use nt want change parent data child component value object passes reference child changes child makes affect parent immediately defeats intended abstraction makes redundant window dressing solution seems child make deep prop data attribute whenever changes unfortunately done component adds boilerplate edit found clone right data function bit cleaner emit event attach cloned object becomes value triggers causes replaced deep clone far inefficient inherently problematic real problem ca nt use expression know changed like say subcomponent trigger get infinite loop case really wanted use much less work attaching listeners subcomponents point also attach listeners everywhere prevent infinite loops deepcompare emitting boilerplate inefficiencies end input custom components following boilerplate question way intended work custom input components object miss something things completely wrong feel free point right direction seems vue could help reduce boilerplate enforce pattern intended perhaps could deep clone data sent child components via could deepcomparison data returned event applying change maybe could trigger behaviors thanks reading", "num": "4373", "d": "12/2016"}, {"title": "feature request dynamically appendremove dom elements template", "body": "far understand currently vm instance created compiled mounted structure template unchangeable switch dom elements onoff via existing directives like already written template way dynamically append brandnew elementschild components written template advance template dom right sometimes need dynamically twist template way twist determined user random input foreseen already way achieve", "num": "4372", "d": "12/2016"}, {"title": "explicit duration", "body": "proposed change add option pass total transition duration seconds wia new prop solves example transition demonstrate duration automatically detected vue wrong nested css transitions different durations delays scss modal modalenteractive transition opacity modaldialog transition opacity transform modalleaveactive transition opacity modaldialog transition opacity transform modalenter modalleaveactive opacity modaldialog opacity transform translatey transition last vue detect first transition duration enter part", "num": "4371", "d": "12/2016"}, {"title": "testing component props validation", "body": "vuejs version reproduction link steps reproduce component js divheader date nowdate time nowtime export default props nowdate type string required true nowtime type string required true js date time string gt const vm getviewmodel appheader nowdate nowtime helper method test invalid prop type expected expected test passed actually happening pass test", "num": "4370", "d": "12/2016"}, {"title": "vuetemplatecompiler bind value select elements", "body": "take following html attrs value something vbind value domprops value something similar manner inputs means bindings take place select works however causes vuex attempt update store without going mutator looks like caused fix filters tag attribute combos bound props", "num": "4369", "d": "12/2016"}, {"title": "vonce nt work inside routerlink", "body": "vuejs version reproduction link sorry nt know reproduce js fiddle follow code steps reproduce instanciate data object create routerlink set context attribute object create previously add vonce step text stop showing expected expect show user name nt change value object data changed actually happening add vonce directive wrap element var attribute showed", "num": "4368", "d": "12/2016"}, {"title": "using default prop validation breaks yui compressor", "body": "vuejs version reproduction link reserved word default must used object literal property name steps reproduce make component validation paste yui compressor compress expected postprocessors using produced code fail actually happening error invalid property id error syntax error error syntax error error syntax error error syntax error error syntax error error syntax error error compilation produced syntax errors orgmozillajavascriptevaluatorexception compilation produced syntax errors comyahooplatformyuicompressoryuicompressor orgmozillajavascriptparserparse orgmozillajavascriptparserparse", "num": "4367", "d": "12/2016"}, {"title": "currency filter bug upon pressing tab key", "body": "using everytime click tab key value changes input text hope someone could help thanks advance vuejs version reproduction link steps reproduce expected actually happening", "num": "4366", "d": "12/2016"}, {"title": "performance problems cause safari crash", "body": "vuejs version reproduction link performance issue steps reproduce root vue instance element mount sometimes child nodes use server rendering template expected pages work normally actually happening compile process slow phone compile safari another phone safari crash root element child nodes crash webview", "num": "4365", "d": "12/2016"}, {"title": "vue js warning el option shouild function returns per instance", "body": "hi warning ides remove warning app works fine want remove warning console", "num": "4364", "d": "12/2016"}, {"title": "templates responsible mapping state ui avoid placing tags sideeffects templates", "body": "page body", "num": "4363", "d": "12/2016"}, {"title": "list rendering optimization fails cases", "body": "virtual scrolling list lot rows show time using thisview thisitemssplice position position position incremented decremented would expect dom one element gets added one gets deleted direction case direction elements get removed added couple images row hurts performance quite bit vuejs version reproduction link steps reproduce press see direction one li removed one added step direction lis replaced every time expected one li added one li removed actually happening li removed added", "num": "4362", "d": "12/2016"}, {"title": "feature request keepalive component transition mode directive", "body": "hello everyone think pretty useful feature vue ability transition mode components different transitions especially useful vuerouter extremely useful sites rely transitions example im saying jsfiddle achieved using vue keep alive component way achieved example figure would useful keep alive component transition mode directive use cases maybe transition shallowwrapper component declare name transition mode orchestrate transitions child components place feature request think related keep alive component rather vuerouter missed something please let", "num": "4361", "d": "12/2016"}, {"title": "vif vshow used element leave transition occur vif changed false", "body": "vuejs version reproduction link steps reproduce go codepen click links show yes toggle show note transition occurs toggle show back toggle note transition expected expected still see box transition words transition trigger true transition trigger either true actually happening changes transition occurs expected changes element immediately removed transition occurs use case using around media triggers load start loaded triggers element revealed", "num": "4360", "d": "12/2016"}, {"title": "cent minutes rendering incomplete models", "body": "post someone spent minutes framework using angularjs every day work first example takes us jsfiddle example first thing extended template view came empty empty extending template properties already defined added property model able see proper view come entire model ignoredskipped unless fully defined nt make sense complex viewtemplate design starts introducing elements one one many may optional even see anything unless everythign defined looks like wrong approach please nt judgmental wanted share impression minutes playing think still matters many newcomers likely percieve framework", "num": "4359", "d": "12/2016"}, {"title": "vue delete style tags render", "body": "expected code build hello world message fontsize vue delete style tag render got hello world default fontsize source code html body fontsize message var app new vue el app data message hello world rendered html hello world var app new vue el app data message hello world style tag remove", "num": "4358", "d": "12/2016"}, {"title": "template required", "body": "beginner run sample vuecli found problem problem denfined required property template html element like run project found chrome debug would like know true use property validate element whether required like required true required false render like please tell thanks environment create project vuecli write appvue template", "num": "4357", "d": "12/2016"}, {"title": "observerspec bug", "body": "vuetestunitspecsobserverobserverspecjs js array remove function var arr var arr var arr var ob observe arr var dep obdep spyon dep notify remove identity array arr remove expect arrlength tobe expect arr tobe expect depnotifycallscount tobe remove identity array arr remove expect arrlength tobe expect depnotifycallscount tobe js var arr var arr var arr array think best modify comment remove identity array", "num": "4355", "d": "12/2016"}, {"title": "vue instance used non component", "body": "hi asked question forums gotten answer basically using vue instances data records components shown supportedrecommended use interested since need computed properties methods function context individual objects current component seen sort usage mentioned official docs hence curiosity thanks", "num": "4354", "d": "12/2016"}, {"title": "inited value msg data bind html msg code following", "body": "html message msg var new vue el app data msg dynamicid test somedynamiccondition true message msg get", "num": "4353", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "12/2016"}, {"body": "thanks xkjyeah try fix", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "actually component dont explicit keys first alert removed last component instance removed instead thus timer becomes eaten fixed maybe give warnings components future", "d": "12/2016"}, {"body": "oh wow simple fix thank", "d": "12/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "12/2016"}, {"body": "thanks already opened pr", "d": "12/2016"}, {"body": "use case sounds like bad idea reload app mutating template nodes", "d": "12/2016"}, {"body": "integrating vue app uses older ajaxstyle rendering wrapping serverrendered view code blocks templates sure would best let vue render things dynamic converting server rendering complicated first round refactoring feel free close feel like edge case encourages something nt anyway", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks misspelled", "d": "12/2016"}, {"body": "bug vue open issue nt understand want", "d": "12/2016"}, {"body": "\u5982\u679c\u662f\u95ee\u9898\u7684\u8bdd\u8bf7\u5230\u8bba\u575b\u6216\u8005 segmentfault \u7528\u4e2d\u6587\u5427 \u4e5f\u53ea\u7528\u4e8e\u5904\u7406", "d": "12/2016"}, {"body": "\u4f60\u914d\u7f6e\u6709\u95ee\u9898\u5427", "d": "12/2016"}, {"body": "please use vuedeletethis delete delete reactive properties", "d": "12/2016"}, {"body": "relevant stackoverflow answer think feature mobile safari rather bug work fastclick colleagues found ios allow focus triggered elements within function first function call stack triggered nonprogrammatic event source", "d": "12/2016"}, {"body": "close safari problem", "d": "12/2016"}, {"body": "certain going final answer docs mention something", "d": "12/2016"}, {"body": "seems design mobile safari issue vue might add extra infomation doc", "d": "12/2016"}, {"body": "opened pr doc repository close issue", "d": "12/2016"}, {"body": "please use issues ask questions nuxt issues posted nuxtjs repo", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "12/2016"}, {"body": "already warning", "d": "12/2016"}, {"body": "thanks alextime bug vuejs updated fiddler updated watch function", "d": "12/2016"}, {"body": "surely bug idea think work filters return something returns string stringified printed document making filters optionally render child component believe trying would completely new behaviour also want trigger rerender change locale creating components localized string seems like dirty workaround would rather use mixin registers lister event bus one rare occations seems useful callback call forceupdate component", "d": "12/2016"}, {"body": "thanks answear also want trigger rerender change locale creating components localized string seems like dirty workaround time creates additional new components user manually changes language rare nt think performance problem sure fast vue instantiation tho would rather use mixin registers lister event bus one rare occations seems useful callback call forceupdate component understand right would look like create bus dynamic changes example locale changes trigger event bus import bus every component needs intl attach new event listener bus callback calls well solution nt seem optimal performancewise codewise", "d": "12/2016"}, {"body": "comment dirty hack performance clean responsibilities filters nt render onthefly components transform stuff strings worries bus codewise put bus module export mixin module encapsulated event work registration etc question make component adapt behaviour perfomance wise lot app rerender pretty much everything anyway need small create component handle instead filter", "d": "12/2016"}, {"body": "alright ended create module exports bus import bus component component method adjusts vueconfiglang emits localechange event import bus main component register event listener bus like still nt work expected since updates main component children somehow explicitly update component children something like thanks", "d": "12/2016"}, {"body": "original usage supported implement discussed elsewhere thanks", "d": "12/2016"}, {"body": "add webpack aliases make sure standalone build loaded instead default runtimeonly build need standalone build want define template code indexhtml currently", "d": "12/2016"}, {"body": "longer turned constructors considered internal change behavior never explicitly defined documentation simply using", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "12/2016"}, {"body": "thanks suggestion always returns string", "d": "12/2016"}, {"body": "sample code jsfiddle", "d": "12/2016"}, {"body": "venteractive transition css properties define base css selectors", "d": "12/2016"}, {"body": "really looks like issue everything fine code point docviewvue add breaks isrootinsert error", "d": "12/2016"}, {"body": "correct also breaks slotted components default slots notice named slot contains component slot works fine", "d": "12/2016"}, {"body": "since patch codegen need use updated well cloned repo tested locally using everything local branch seems working correctly views render properly think indeed caused bug want test clone vue repo build everything link project great job vuetify btw", "d": "12/2016"}, {"body": "thanks evan nt think packages well appreciate help", "d": "12/2016"}, {"body": "already alias points item would need magic param may understanding correctly nt really see need", "d": "12/2016"}, {"body": "sorry first time think something vuejs already bravo", "d": "12/2016"}, {"body": "hi syntacticsolutions thanks interest help many ways help really depends familiar simplest way help answering questions users forum gitter chatroom stackoverflow also try help triage new issues narrowing bugs even submit prs please read contribution guide details note issues reserved bug reports feature requests please keep mind future", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "12/2016"}, {"body": "issue spa downgraded seems work fine", "d": "12/2016"}, {"body": "submitted issue vuerouter repo", "d": "12/2016"}, {"body": "problem difference seems following versions vue calls undefined vnode reveals following vue vue problem gets called undefined vnode calling vue undefined creates error uncaught typeerror set property isrootinsert undefined bug relevant part srccorevdompatchjs solution think would good idea add following lines make sure function nt want access attributes object seems solve problem vue also vue calling analyzed error gets introduced ie gets called undefined vnode think good idea type checking regardless maybe unit test added check case would glad help", "d": "12/2016"}, {"body": "actually issue fixed confirmed johnleider cases mmochetti samuelantonioli try patch local vue dist file see issue error persists likely different bugs please open separate issue repro", "d": "12/2016"}, {"body": "johnleider seems problem missing type checking accessing attributes referenced issue relevant part bug srccoreinstancerenderjs replacing current statement following lines solves problem patching local dist testing", "d": "12/2016"}, {"body": "thanks applying changes everything works expected", "d": "12/2016"}, {"body": "also use since global scope still holding reference object", "d": "12/2016"}, {"body": "sirlancelot said", "d": "12/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "12/2016"}, {"body": "also please open issue vuerouter repo instead thanks", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "vue", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem nessessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "binding needed expected behavior remove binding works properly", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "without problem", "d": "12/2016"}, {"body": "broke please check jsfiddles steps reproduce click fast multiple times checked radio button clearly see ripple effect nt behave release notes says affected update update something css js fix problem", "d": "12/2016"}, {"body": "also supposed fix issue checked quickly editing dist file vuedistvueruntimecommonjs change result", "d": "12/2016"}, {"body": "sqal ah sorry indeed affects usage think revert whole change", "d": "12/2016"}, {"body": "sqal reverted old behavior use case work expected next release", "d": "12/2016"}, {"body": "thanks alot dealing issue", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "jtallis refs reactive could take look", "d": "12/2016"}, {"body": "fyi used inside registered arrays case property array typically use ref id items collected array pop item array actually becomes empty future may support passing function ref binding user customize register refs eg", "d": "12/2016"}, {"body": "hi thanks filling issue actually related vue javascript floating point number precision issue may refer", "d": "12/2016"}, {"body": "many thanx fix simply using", "d": "12/2016"}, {"body": "modifier feature", "d": "12/2016"}, {"body": "browser limitation want use syntax use bundler like webpack use vueloader limited browser write html files write things like also may help", "d": "12/2016"}, {"body": "try one time", "d": "12/2016"}, {"body": "alphmega please try latest vuejs version might fixed already works mac chrome", "d": "12/2016"}, {"body": "defcc excuse wrote wrong description issus using", "d": "12/2016"}, {"body": "defcc upgraded vue still problem", "d": "12/2016"}, {"body": "tibianmod solution works", "d": "12/2016"}, {"body": "hydration skips patching attrs serverside rendered markup assumed client renders impure ie included initial state used clientside render causes server markup always different client avoid using renders", "d": "12/2016"}, {"body": "tag meant wrap multiple elements like case simply use wrap text nodes", "d": "12/2016"}, {"body": "know real scene code complex demo need wrap multiple elements template tag output undefined works right seems vfor directive inside template tag output undefined child component props bind tag like expected behavior", "d": "12/2016"}, {"body": "weird indeed give deeper look afternoon mon dec wangkehan notifications githubcom wrote know real scene code complex demo need wrap multiple elements template tag output undefined works right seems vfor directive inside template tag output undefined child component props bind tag like itemname expected behavior receiving modified openclose state reply email directly view github mute thread", "d": "12/2016"}, {"body": "least template like works wrong sometimes vfor directive inside template tag also output undefined works ok modified code really nt know happen", "d": "12/2016"}, {"body": "happen happen", "d": "12/2016"}, {"body": "seems issue normalize children try make patch", "d": "12/2016"}, {"body": "limitation browsers work around putting directly using place within tables details docs", "d": "12/2016"}, {"body": "thx", "d": "12/2016"}, {"body": "data computed property rename", "d": "12/2016"}, {"body": "yes know vue pollute raw data error message really weird think better throw much friendly error message accurate reason beginners always make mistakes like know debug", "d": "12/2016"}, {"body": "referencing computed property inside else expect infinite loop best warn define computed property clashes existing properties", "d": "12/2016"}, {"body": "thanks remoe please provide reproduction repository us look", "d": "12/2016"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "12/2016"}, {"body": "njleonzhang try check fix problem app", "d": "12/2016"}, {"body": "store injected top application every component curious think way", "d": "12/2016"}, {"body": "closing since nt using way still want know ended passing store components", "d": "12/2016"}, {"body": "import store components use gon na try combine stores got like store every component one store import toplevel let u know thanks reply", "d": "12/2016"}, {"body": "looking modules create one store split multiple modules", "d": "12/2016"}, {"body": "thanks swift reply time posva clearly misread something could nt find post find prob ever", "d": "12/2016"}, {"body": "renedx may forgotten something docs yes please something misleading tell us cheers", "d": "12/2016"}, {"body": "jessereitsma used multi stores issue really similar occurs one colleagues computer computer chrome even opens site hosted computer still encounter issue open site encounter issue chrome version issue still occur event disables chrome extension computer powerful mine mine mac book pro mac book pro", "d": "12/2016"}, {"body": "njleonzhang create store instances really modules posva mentioned used create store instances every component use changed one store one instance created toplevel passed every component nt problem anymore thanks posva issue solved", "d": "12/2016"}, {"body": "jessereitsma followed always document think root cause colleagues reproduce anyway work around issue great", "d": "12/2016"}, {"body": "working around issue changed structure according documentation solved workaround", "d": "12/2016"}, {"body": "jessereitsma ok tnx", "d": "12/2016"}, {"body": "jessereitsma try build vue source code debug source find root cause busy make debug recently sustainers reproduce issue hard debug currently reproduce debug days later", "d": "12/2016"}, {"body": "njleonzhang already trying debug really hard nt make sense error really vague workaround remove component works remove component works remove component works open another component first page close going next page works", "d": "12/2016"}, {"body": "jessereitsma renedx know random hard confirm wether workaround really workaround good news issue occur production environment chrome debug mode currently colleague encounters issue change use firefox instead chrome development browser workaround addition issue may related local dev packages keep consistent project dependency everywhere try leverage yarn", "d": "12/2016"}, {"body": "directives simplified friend", "d": "12/2016"}, {"body": "posva thanks", "d": "12/2016"}, {"body": "coincidentally trying pretty much couple minutes ago look wether access slotparent like normal components done functional components", "d": "12/2016"}, {"body": "duplicate look reasons basically design good idea make component depend parents better using props events pattern", "d": "12/2016"}, {"body": "well explicitly documented suspected never designed work way examples call instance created worked accident feel free submit pr add note", "d": "12/2016"}, {"body": "obviously ca nt introduce breaking change atom ca nt indent code correctly", "d": "12/2016"}, {"body": "scoped slot use tag introduce another tag like suitable tag behave introduce breaking change avoid word vue root element", "d": "12/2016"}, {"body": "reserved html tag fits well needs open issue atom plugin repository fix tags inside", "d": "12/2016"}, {"body": "know bit confusing fact design functional components rendered eagerly outermost component render function render function called host component inserted instantiated yet actually way reference host component functional component unlikely changed without introducing breaking change considering short term however interested hear use case experience quite rare functional components need access host instance", "d": "12/2016"}, {"body": "totally understand though would helpful made clear documentation since use refer two different situations confusing example specific use case love hear take well basically creating wrapper mobiledoc editor need editor component buttons handle functionality toggling markup adding content checking active states rather creating different components different type buttons eg preferred one component delegate appropriate buttons first implemented regular component example template js props type type string required true type string required true computed isactive let typestate return methods toggle root emit thistagname began add types buttons different actions states became hard maintain changed functional component function createbutton h ctx clickaction return example button const cardbutton ctx gt props type type string required true name type string required true payload type object mode type string render h gt createbutton h ctx payload editmodefalse gt button needs access parent activetags editor data isactive ctx parentactivetags ctxpropsname ctx parenteditorinsertcard ctxpropsname payload editmode export default functional true props editor type tag prompt name text payload mode render h ctx ctxdataprops ctxprops pass props children return h delegatetobtncmp ctx ctxdata ctxchildren code longer explicit maintainable button handles logic problem however ca nt easily access parent instance anymore tried creating new vue instance two components could use store share data methods worked approach nt let create one editor buttons access one editor instance sure would appropriate switch back regular component though feel use case fitting functional component", "d": "12/2016"}, {"body": "honest think making component behave differently based parent inserted sounds like bad idea child component coupled implementation details possible components may nested inside recommend rethinking design adhere props events pattern also nt make functional use render functions use render functions normal components", "d": "12/2016"}, {"body": "yeah felt like hack could nt find easy way editor component pass instance nested button components understand props events pattern nt want users component pass data basic component functionality example button feel like toggle method already inherent component require prop solution settled turning two components vue instance share functions could pass component appropriate context create instance editor import mobiledoceditor mobiledocbutton mobiledocvm mobiledoceditor let editorctrl new mobiledocvm export default components mobiledocbutton mobiledocbutton editorctrl mobiledoceditor mobiledoceditor editorctrl hopefully approach better thanks feedback", "d": "12/2016"}, {"body": "agreed maybe could improve text transformation purposes", "d": "12/2016"}, {"body": "would become special case rules becomes complicated fear would slowly bring feature creep back directives support filters case dedicated sanitization method works fine nt think worth open special case simple rules", "d": "12/2016"}, {"body": "would nice sort functionality using quill would like parse deltas quill produces template custom filter looks something like", "d": "12/2016"}, {"body": "solvable scoped slots syntax nt suit pass component options props well simply use dynamic component html parent child props component", "d": "12/2016"}, {"body": "scopedslots great addition could used customize output child nt solve situation simple functions used childs rendering idea leave parent make clear let take example html customi header inner content custom cell inner content cool know inner content column look like information parent ideally would html col scopedslotsheader col colheader col scopedslotscell row col note clarity brevity mixing jsx template declaration example could work available unless used somewhere case nt place need default child rendering", "d": "12/2016"}, {"body": "afraid trouble understanding trying achieve looks like simply trying pass data want use templates pass array prop", "d": "12/2016"}, {"body": "ok let put cards table adapted extract real component workflow vktable jsx thisl children col gt colheaderrendercall colrenderproxy h thisl thisdata row rowindex gt thisl children col gt colcellrendercall colrenderproxy h row rowindex vktablecolumn vktablecolumnselect usage conclusions possible vktable process slotsdefault reason make children inited passed data complex enough make use array prop obsolete first approach far good", "d": "12/2016"}, {"body": "please take step back describe use case trying achieve code samples quite confusing without explanation design constraints", "d": "12/2016"}, {"body": "created jsfiddle describing use case behind vktable", "d": "12/2016"}, {"body": "since code explanation goal assume far zone understand ca nt follow easily lines code try summarize understood design goal tell guess right author library devs use want provide clean declarative interface define various behaviours passing definitions props would possible satisfy aspiration clean interface looking way ab use inslot components render anything rather function interface slot parent component passing instructions maybe functions render content according instructions much like eg recharts react part charts getting close", "d": "12/2016"}, {"body": "sorry deep zone lol yes linusborg summarized pretty well thanks", "d": "12/2016"}, {"body": "linus think u spot miljan saying interface parent component ive actually thought exact components datagrid data column definitions tabs managed implement tabs use render functions straightforward implement filter tab component vnodes get label propdata order render tab header straightfoward definitely doable use render functions", "d": "12/2016"}, {"body": "pohnean right doable workarounds quite common issue judging forum would nice official solution could think like functionaldeclarative components accept props composedslots render kind", "d": "12/2016"}, {"body": "gut feeling good idea additional api components essentially empty shell need get propsdata main component nothing common means talk component vue situation bad feeling introducting api essentially says set setting behave like component basically fancy way pass props addtionally vnode api part public api using automatically hack want use templates good news access using vnode content prepare data nessessary following render function created vueloader template", "d": "12/2016"}, {"body": "thank linusborg nt worry expecting kind answer similar one got exposed template dilema back finally solved scopedslots probably time also far zone nt managed provide good presentation valid solution hope arise naturally evolve eventually get solved meantime keep workarounds close ticket time perhaps challenge related topic basically without workarounds ca nt find way apply simple tab transition details forum", "d": "12/2016"}, {"body": "close discussion fine think clear feature happen anytime soon", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "ah clever thank", "d": "12/2016"}, {"body": "nt see issue yields result give use details please", "d": "12/2016"}, {"body": "posva slow transition click click different dom class", "d": "12/2016"}, {"body": "ooh one transition goes right instead left", "d": "12/2016"}, {"body": "similar problem vuex appvue pageavue component containervue transition component seems slow one step use keepalive put transition component route view spa transition snapshots first load forward back", "d": "12/2016"}, {"body": "vue also problems transitions note using vue first see empty component start transition like directive vshow working hope fixed next version", "d": "12/2016"}, {"body": "problem remains even though upgrade maybe provide demo", "d": "12/2016"}, {"body": "ca nt much without repro please try reproduce really ca nt feel free close issue", "d": "12/2016"}, {"body": "hi seems issue vue core discuss possible every issue easy repro", "d": "12/2016"}, {"body": "easy nt", "d": "12/2016"}, {"body": "got issue vue also still able reproduce error looks pretty random remove component works put component back nt work remove component still nt work also get chrome latest version mac os x yosemite safari", "d": "12/2016"}, {"body": "jessereitsma open issue hope admin take look", "d": "12/2016"}, {"body": "close issue take look something reproduce repository reproducible open new issue share know steps reproduce otherwise open new issue share", "d": "12/2016"}, {"body": "jessereitsma looks like got clues strip component reproduce bug jsfiddle repo really necessary hopefully give information error happens find open new issue repro information help", "d": "12/2016"}, {"body": "fyi running time store related main problem issue reproduce problem single freaking computer computer nt reproduce exception others seems related simultanously loading components seems run problem child component destroyed mounted data methods props parent component remove destroyed prop lowestchild works without problems seems sketchy fix still wanted update brains may get triggered debug found computer nt problem production npm run build version code currently experiencing webpack bundle installed using cli kinda simulates problem builded version seems run problem prob something hotloading part", "d": "12/2016"}, {"body": "feeling may todo config computed property vuestash", "d": "12/2016"}, {"body": "note mutating rather replacing object array old value new value reference objectarray vue keep copy premutate value", "d": "12/2016"}, {"body": "need watch strings get around", "d": "12/2016"}, {"body": "watch primitive values replace watched object fresh new one thu dec x notifications githubcom wrote need watch strings get around receiving modified openclose state reply email directly view github mute thread", "d": "12/2016"}, {"body": "please open issue vuedevtools repo instead also try code ensure indeed using right version", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem nessessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "please reopen information conforms issue reporting guidelines", "d": "12/2016"}, {"body": "seems types validation includes together check blank line another case hyphenated string looks like prop", "d": "12/2016"}, {"body": "sorry seems problem plugin try binding submit handle directly button prevent plugin messing native dom events", "d": "12/2016"}, {"body": "looks like renamed using method somewhere app well nt use undocumented internal vue methods see may removedrenamed time without notice fix rename code work", "d": "12/2016"}, {"body": "issue also using quasarframework might problem side", "d": "12/2016"}, {"body": "yes related quasar framework solved thanks", "d": "12/2016"}, {"body": "found workaround meantime wrap two dummy attributes ie substitute relevant lines html something", "d": "12/2016"}, {"body": "thanks reporting seems vue tries reuse div element instead removing one adding reusing elements generally preferred performance reasons messes process seems bug indeed better workaround would explicitly key elements key unique component scope force vue actually replace divs", "d": "12/2016"}, {"body": "cool thanks better workaround", "d": "12/2016"}, {"body": "thanks looking", "d": "12/2016"}, {"body": "webpack behavior related vue", "d": "12/2016"}, {"body": "maybe need detect whitespace text node ignore hydrating", "d": "12/2016"}, {"body": "nested tags nt valid html", "d": "12/2016"}, {"body": "autoprefixer removes webkit perfix option set use last browsers nt need prefix anymore source need support older browsers adjust needs", "d": "12/2016"}, {"body": "thanks explanation sqal", "d": "12/2016"}, {"body": "thanks workwsl vuejs treats static attribute value attribute causes issue try fix currently could use value binding workaround", "d": "12/2016"}, {"body": "thought way resolve problem situation manually write param value ajax", "d": "12/2016"}, {"body": "issue posted could nt find anything well case want submit form automatically including page refresh nt want ca nt send via ajax solution perhaps mention docs would nice", "d": "12/2016"}, {"body": "use vm nexttick js thismyvalue value nexttick function el parent form submit", "d": "12/2016"}, {"body": "used elementscomponents vfor registered reference array containing dom nodes component instances", "d": "12/2016"}, {"body": "thanks kordiankowalski think expected behavior native html select also behaves like value empty set invalid value vuejs force update select calculate value assign new value becomes undefined might need process userland", "d": "12/2016"}, {"body": "hmm chance make feature request handled vue instead think would make templates nicer need work around common think quirk especially since initializing value without changing later works fine value preserved course initial value happens one trying assign nothing breaks", "d": "12/2016"}, {"body": "examples work events triggered variable initialized value updated current value nt think perfect way handle consistently suggest following defcc implementing case case basis", "d": "12/2016"}, {"body": "hi even though tired close issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests", "d": "12/2016"}, {"body": "vmodel", "d": "12/2016"}, {"body": "marshare think understand", "d": "12/2016"}, {"body": "qbaty", "d": "12/2016"}, {"body": "qbaty thanks rteporting looks like bug indeed took freedom correct vue version op use noch", "d": "12/2016"}, {"body": "linusborg okey first met bug using vue try update vue lastest version bug still exsit version", "d": "12/2016"}, {"body": "maybe use", "d": "12/2016"}, {"body": "dumb", "d": "12/2016"}, {"body": "also come across building ui components come way defining prop used vmodel eventually event thinking akryum", "d": "12/2016"}, {"body": "curiosity value overriding syntax could also would probably require component authors create computed property getting model value since would technically possible extend component different model name", "d": "12/2016"}, {"body": "rpkilby may want redefine event radiocheckboxes inputs emit events side note little demo differents inputs events", "d": "12/2016"}, {"body": "could make reproduction services like js fiddle important see bindings difficult impossible see compiled template", "d": "12/2016"}, {"body": "code js fiddle", "d": "12/2016"}, {"body": "works perfectly latest chrome amp windows well os x whats setup", "d": "12/2016"}, {"body": "made reproduction chrome ubuntu chrome windows edge windows", "d": "12/2016"}, {"body": "page loaded select select value", "d": "12/2016"}, {"body": "switch value times see also", "d": "12/2016"}, {"body": "linusborg testing chrome x verify fiddle broken whether vue fiddle fault sure select initialized text displays selected select expected selected option text display selected selected option empty choice text correctly displays selected select since currently empty option correctly selected text correctly displays selected select empty choice empty choice correctly selected text correctly displays selected select even though current choice empty breaks expected selected option text display selected selected option empty choice text correctly displays selected select since currently empty option correctly selected text correctly displays selected able fix fiddle two ways change numeric values strings change empty option number either vue getting confused two falsey values vue getting confused mixed types", "d": "12/2016"}, {"body": "campares fails looseequal make patch", "d": "12/2016"}, {"body": "duplicated method name vueprototypeupdate", "d": "12/2016"}, {"body": "first link case result codes js l groupitems function item return c li v nb item n l groupitems function item return c li v nc item n l groupitems function item return grouptype c li v na item n grouptype b l groupitems function item return c li v nb item n l groupitems function item return c li v nc item n l groups function group return c div l groupitems function item return c li v na item n v v true generated b c code ternary see line using vue", "d": "12/2016"}, {"body": "currently vfor higher priority maybe need make explicitly document", "d": "12/2016"}, {"body": "defcc right result compiler", "d": "12/2016"}, {"body": "found code priority need document people like", "d": "12/2016"}, {"body": "changjoopark yes result right", "d": "12/2016"}, {"body": "expected behavior improve docs make priority obvious meanwhile template simplified filter", "d": "12/2016"}, {"body": "sure related one", "d": "12/2016"}, {"body": "hi thanks filling issue perfectly valid regex bug js parser", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks nexttick always necessary many cases", "d": "12/2016"}, {"body": "thanks read links followup forums seems weird phantomjs nt wait dom loaded rest tests", "d": "12/2016"}, {"body": "able keep state using attribute transition example tell nt work reopen issue", "d": "12/2016"}, {"body": "neat trick useful know understand correctly nt work example mentioned transitioning parent view via routing specific element user stops recording want nothing happen rendered duration value anymore nt apply transitions either maybe could apply somehow push key parent views via references something seems quite convoluted guess label feature specifically tied transitions technical sense like example use case", "d": "12/2016"}, {"body": "mmh trouble understand use case create little demo ideally jsfiddle please", "d": "12/2016"}, {"body": "demo app applied transition changing timestamp try suggestion see still transitions end easily store separate parameter keep latest value recording done ca nt use nice one computed write lot extra code thing things add view well timestamp component transitioned directly router try make pure demo fiddle later source important guess demos use case", "d": "12/2016"}, {"body": "another way looking actually make possible computeds return whatever previous value", "d": "12/2016"}, {"body": "use component getting key child caching value somewhere else easy way userland let keep", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "hi animation right check besides listener method added see class added need provide right duration animation effect actually nt duration leave dispear directly think close", "d": "12/2016"}, {"body": "ostroso also problems css transitions using leave leaveactive enter enteractive classes however tried replace css animations works expected plus get flexibility defining animation take look example", "d": "12/2016"}, {"body": "missing", "d": "12/2016"}, {"body": "urgh simple thank guys definitely must andreipfeiffer suggests css animations", "d": "12/2016"}, {"body": "hardimpossible help without reproduction issue", "d": "12/2016"}, {"body": "created repo reproduces problem stripped version project working everything works starting page renders server side client side goes blank", "d": "12/2016"}, {"body": "digging bit trying strip example found removing component view allows page display client ca nt figure tried removing transitions component nt change anything also tried use boolean explicitly instead value store display component nt seem fix either removing component really thing seemed fix", "d": "12/2016"}, {"body": "simply moving tag seems also fix problem reason", "d": "12/2016"}, {"body": "investigation found hydration fails spinner due fact serverrendered markup state route resolved client initial render happens route resolved hydration vue finds already rendered dom element corresponding returns placeholder node route nt resolved yet going mismatch regardless version fact warning using causing full rerender nt really consider working properly say really bug current limitation makes ssr nt play nicely async route hooks definitely something improve though solution would something similar probably expand make support placeholders well", "d": "12/2016"}, {"body": "yeah warning regardless version also stuff relies browser features ssr version client version would always differ bit still problem remains upgrade page renders blank client side would render correctly would changing placement tag affect page renders blank correctly deffo seems like bug changing order component placement affect even page renders", "d": "12/2016"}, {"body": "well general ca nt guarantee behavior warning warnings usually mean something wrong go wrong investigation fact simple solution since resolved route state already store simply force clientside router boot resolved route note would cause route hooks skipped client however side effects hooks reflected store state problem closing see make easier work async route hooks ssr", "d": "12/2016"}, {"body": "ignore animate element resetting", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "nice catch add", "d": "12/2016"}, {"body": "vbind expects javascript expressions nt valid javascript expression simply remove colon bind string bind string literal vbind", "d": "12/2016"}, {"body": "fnlctrl nt think solution want anchor value binded property output something like template compiled html old syntax would something like", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fnlctrl nice", "d": "12/2016"}, {"body": "surely used method slot component passed content using methods inside slot component sure understand mean sounds like maybe scoped slots woudl solve problem", "d": "12/2016"}, {"body": "nt actually work abstract placeholder nt element may expand single element multiple elements text behavior event listener would unpredictable based content instead wrap slot element use event listeners wrapper", "d": "12/2016"}, {"body": "according suggestion work currently use case component represents component represents click emits custom event trying capture component nothing triggered missing something also want send event component elements inside slot achieve", "d": "12/2016"}, {"body": "think managed get working scoped slots event bus nt know best approach comments", "d": "12/2016"}, {"body": "maybe need force value setting option option emty value optionvalue text issue", "d": "12/2016"}, {"body": "defcc yeah need special case option", "d": "12/2016"}, {"body": "meaningful", "d": "12/2016"}, {"body": "hi thanks filling issue expected behavior like assigning variable twice former one overridden please use separate name one", "d": "12/2016"}, {"body": "importrequire", "d": "12/2016"}, {"body": "jounqin ok thanks use done", "d": "12/2016"}, {"body": "well gon na happen two reasons svelte compilation strategy incompatible virtual dom compiles templates imperative dom operations means must use templates vue users write render functions compiled fashion render functions purely dynamic difficult statically analyze vue already light gzipped svelte nt really zero runtime addition svelte generated code much verbose vue generated render functions component complexity project svelte generated code going bit heavier vue adds project gets bigger eventual size difference simply nt significant enough justify loss render functions nt great booooost speak", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thanks easily achieved user land general try best avoid adding microsyntax templating system", "d": "12/2016"}, {"body": "think becasue input elements nt append body element fire change event since event missing vue update data check", "d": "12/2016"}, {"body": "facetothefate said element needs dom change event fire", "d": "12/2016"}, {"body": "available component mounts memory similar calling without arguments warnings console telling target found nt think needs fix", "d": "12/2016"}, {"body": "sure noticed maybe clear explain usecase wanted create vue application website vue application used single page website javascript however inserted globally cms understood documentation mounted called mounts memory would much problem using xhr request mounted method load json however like json loaded every page current workaround remove el options check element avaliable clear documentation mounts always", "d": "12/2016"}, {"body": "compination indom template custom render function wo nt work expected behaviour either define template indexhtml root instance define render function ca nt html indexhtml look like main contents remove render function note works standalone build", "d": "12/2016"}, {"body": "thanks looking", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "please manually add attribute item explanation", "d": "12/2016"}, {"body": "still work add key fnlctrl", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "process case iff id filed identify data use index still work", "d": "12/2016"}, {"body": "index removed please refer", "d": "12/2016"}, {"body": "vue replaces element mounting seems populate element page vue mounted populates vue actually renders app one suggestion moving app template template string include mounted vue app", "d": "12/2016"}, {"body": "hook name", "d": "12/2016"}, {"body": "sorry shame", "d": "12/2016"}, {"body": "thanks reporting issue ios device reproduce problem believe vue already handled prefix problem builtin component used compiled render function looks like manually prefix event native modifier vue knowledge event native binding auto prefixing nt available use component mentioned", "d": "12/2016"}, {"body": "expected vue nt autoprefix events directly bound", "d": "12/2016"}, {"body": "thx export autoprefix method handle quickly need write similar codes", "d": "12/2016"}, {"body": "hmm reproduce behavior seems exactly copy jsfiddle verbatim local file maybe chrome extensions", "d": "12/2016"}, {"body": "hi thanks looking deleted chrome extensions emptied cache browsehistory etc still wrong chrome found several differences drag somewhere half cell works highlights second column mouse enters drag closer left edge fails notice even drag right strange fails fiddle well weirdest drag closer right something completely different chrome version code top edge perfect matter drag checked coworkers system well one works fine chrome fiddle ones fails well", "d": "12/2016"}, {"body": "chrome version reproducible jsfiddle maybe check whether divs overlap", "d": "12/2016"}, {"body": "kingmario checked divs seem normal besides looking fiddle nt see layed differently browser", "d": "12/2016"}, {"body": "still reproduce may something windows chrome", "d": "12/2016"}, {"body": "seems work fine windows chrome edit works fine macos safari", "d": "12/2016"}, {"body": "hmm sorry szmarci given test cases issue seems unlikely caused vue maybe try testing different machine anyway closing feel free follow information", "d": "12/2016"}, {"body": "make things even strange full screen grab first item list works downsize window grab element fails also tested several machines coworkers windows latest chrome fails windows latest chrome fails windows latest chrome fails windows latest chrome works one would assume related fnlctrl uses build idea gon na check home mac", "d": "12/2016"}, {"body": "update works fine mac os latest chrome", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "expected please read support available forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "default clicked error result clicked changed clicked result correct result", "d": "12/2016"}, {"body": "repeat please read guide section linked hint add prop divs allow vue differentiate two encourage ask support forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "note note edit written comment updating original submission nothing new ok studied deeper pull request push soon considerations make meanwhile tremendously simplified version reproduction case run ok switch issue appears code case simple", "d": "12/2016"}, {"body": "pull request done technically boils swapping place single line code fixes reproduction links nt know fixes seems related complete reversal vuejsvue undoes main assumption motivated quote starting animation enter relies retrieving global position element would fail due lack offsetsoffset parents result display none assumption statement embraced resulting unit test specification assumption use case general see jquery relies display none fails jquery issue counterintuitive expect starting enter animation element displayed right fact shall expect element displayed start enter animation another way confirm assumption embraced simple take look current spec pay attention expects display enter leave bit counterintuitive leave expects value beforeleave value expected changed afterleave meanwhile enter expect value beforeenter expects already changed value afterenter exposes problem looking solution doubt values expected beforeenter afterleave display none afterenter beforeleave display meaning expecting specific value enter leave jquery wants display none run animation otherwise considers element displayed nothing another animation wants calculate stuff based element position expectation hard coded let hardcode none let enter author deal changing toggling enter done breaking change puts burden everyone working code furthermore want explain new user work nt manually set display none enter even already set initial style display none must vue automatically set display none animation yes option reasons believe pr accepted break code counterintuitive someone needs display enter one beforeenter beginning enter way set display none beforeenter vain reverted internally expected unit tests must manually put beginning enter code set display none hope pr gets merged otherwise assuming work practice may convinced since first lines still please look code pen tell code changed work thank", "d": "12/2016"}, {"body": "ping probably something answer", "d": "12/2016"}, {"body": "fix intended enter hooks design called moment right node inserted right node made visible previously behavior inconsistent fix usage pretty simple add btw thanks detailed report appreciate time spent looking", "d": "12/2016"}, {"body": "ok thanks indeed fix easy almost getting difficult understand going sorry got bit upset tight deadlines app working suddenly nt anymore keep fantastic work", "d": "12/2016"}, {"body": "met problem want use version", "d": "12/2016"}, {"body": "use versions encapsule elements additional parent like revert wait see happen issue", "d": "12/2016"}, {"body": "question decidedthank much", "d": "12/2016"}, {"body": "use functional component way get rid extraneous root component", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "fnlctrl thanks", "d": "12/2016"}, {"body": "hi thanks filling issue custom events designed direct parentchild communication passing parent reference child considered antipattern vue matter way since couples parent children implementation", "d": "12/2016"}, {"body": "works use believe correct approach heads case deadline sure bug though imagine wrapped stuff would cool", "d": "12/2016"}, {"body": "yeah vmodel solution unfortunately need track changes vuex onchange method recommended way vuex forms nt tried nexttick though give shot tue dec bill criswell notifications githubcom wrote works use vmodel believe correct approach heads case deadline sure bug though imagine wrapped onchange stuff nexttick would cool receiving authored thread reply email directly view github mute thread gt regards david gauld", "d": "12/2016"}, {"body": "use attr select", "d": "12/2016"}, {"body": "duplicate closing since source issue dependency bug framework", "d": "12/2016"}, {"body": "ok possible update dependency version without bug", "d": "12/2016"}, {"body": "seems false node normalized", "d": "12/2016"}, {"body": "fix shipped", "d": "12/2016"}, {"body": "addendum also fix purely code vue import bit hack sorts problem fixed vue", "d": "12/2016"}, {"body": "nested vnode normalized try make patch", "d": "12/2016"}, {"body": "components", "d": "12/2016"}, {"body": "defcc looking well", "d": "12/2016"}, {"body": "got", "d": "12/2016"}, {"body": "fix shipped", "d": "12/2016"}, {"body": "patch works demo also assume test derived", "d": "12/2016"}, {"body": "vueserverrenderer meant used node server works differently node webpack refer help", "d": "12/2016"}, {"body": "case feature request would make prerendering much easier suppose huge step nodejs require commonjs", "d": "12/2016"}, {"body": "digitalheir see implements lay loading ssr", "d": "12/2016"}, {"body": "use nuxt", "d": "12/2016"}, {"body": "would put template script tag inside element vue mounted move outside", "d": "12/2016"}, {"body": "ah nt occur guess late thanks", "d": "12/2016"}, {"body": "\u53ef\u4ee5\u89e3\u51b3", "d": "12/2016"}, {"body": "\u6211\u4e5f\u9047\u5230\u4e86vmh function", "d": "12/2016"}, {"body": "deprecated since html vue recognized svg element thus created svg namespace control using html anymore reason forces use", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "fnlctrl apologies default text comment nt english nt know respond upload jsfiddle example would possible post receive answer", "d": "12/2016"}, {"body": "sorry vue nt guarantee compatibility arbitrary party libsplugins", "d": "12/2016"}, {"body": "fyi seems like babel es module transpile issue related vue", "d": "12/2016"}, {"body": "watching transactionitem prop doesnt work tells absolutely nothing help help also already told issues meant support questions two issues closed today wrote somewhere forum nt work ip block still gitter stack overflow happy help get forum access working tell us problems trying access github issues still support forum", "d": "12/2016"}, {"body": "thanks filling issue please create reproduction repository steps", "d": "12/2016"}, {"body": "cant signup forums ip block nt know ill post bug please nt find blocked solve first use stack overflow", "d": "12/2016"}, {"body": "nt know happens addon version firebug firefox windows since accepted firebug switch new builtin version nt know revert addon prefer probably firebug bug open issue repo try reinstall firebug revert changes", "d": "12/2016"}, {"body": "would guess things like transition mode really belong component imagine component transition mode component b transition mode transition b would look like stuck waiting b finish transition b stuck waiting finish transition", "d": "12/2016"}, {"body": "maybe right im using example thats though could change default transition mode outin could solve problem nt wait b enter b wait leave enter right", "d": "12/2016"}, {"body": "maybe provide reference basically need implement custom transition component two instances used together coordinate sequencing think eventually entry cookbook one day released separate plugin", "d": "12/2016"}, {"body": "related vue", "d": "12/2016"}, {"body": "fnlctrl", "d": "12/2016"}, {"body": "hello komajunjun thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "thank linusborg asked question quora answer question thanks advance", "d": "12/2016"}, {"body": "quora sorry", "d": "12/2016"}, {"body": "notice code image wo nt loaded automatically webpack requireimport data property vm use template", "d": "12/2016"}, {"body": "jounqin mean requireimport url firstly", "d": "12/2016"}, {"body": "ca nt define props element used define components template props work meant props meant passing data prent component parent template child component please read guide props", "d": "12/2016"}, {"body": "hello jinhwong thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "hmm use custom component alias directly setting content considered slot content slots meant content programmatically rendered vue probably make pluginbase component accept string prop use inside might need add warning future", "d": "12/2016"}, {"body": "hello deveclipse thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "likely bug requirejs rather vuejs", "d": "12/2016"}, {"body": "possibly related", "d": "12/2016"}, {"body": "apocalyarts check happening case", "d": "12/2016"}, {"body": "posva simplesmiler yes confirm also confirm template workaround help displaying posts mainpage using vfor youtube iframes working fine closing issue looks safari bug like evan explaned probably make workaround component", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks property already observed need use also arrays longer augmented component instances also different version", "d": "12/2016"}, {"body": "vue nt detect change directly setting item index see allows substitute value array given key another value want modify entirely replace also thank pointing arrays longer augmented set onward", "d": "12/2016"}, {"body": "actual mutation happens object inside array array subject index detection caveat", "d": "12/2016"}, {"body": "made repo show problem please take look see loaded first time interpolation nt picking updated state changed method later however see console actually updated problem need updated within curly brackets note button clicked causes rerender hence get current value basically loading fine nt updated ps tried using rewrite whole value since takes index indexed array second argument run another problem index string basically thing associative arrays javascript hence get thrown error", "d": "12/2016"}, {"body": "seem misunderstanding javascript array works way using like object hash array mutations arrays javascript happen methods like adding new property array object pushing new element array arrays want store things string keys use object since adding new property use", "d": "12/2016"}, {"body": "yeah understood array strings indexes basically object property creating repo nt know one thing despite way purpose used array nt vue updating nt since arr someid arrsomeid accessed arr someid arrsomeid nt updating ps also using objects would nt adding property would modifying modifying", "d": "12/2016"}, {"body": "oh boy fixed fiddle please note read change detection caveats", "d": "12/2016"}, {"body": "simplesmiler thank clarify restless nt know wrong using update value instead using set object begin hit change detection caveat", "d": "12/2016"}, {"body": "yes vue unable detect addition new property object due limitations javascript", "d": "12/2016"}, {"body": "evan almighty nt insane nt sure problem running thank simplesmiler guys good day", "d": "12/2016"}, {"body": "error seeing related circular references incorrect use leading infinite recursion", "d": "12/2016"}, {"body": "sorry provided wrong code change code make looks right another question new code work like nt work like vue warn velse used element without corresponding vif simple work", "d": "12/2016"}, {"body": "valid closing syntax need close tags explicitly", "d": "12/2016"}, {"body": "nice understand thanks finally code search hope useful", "d": "12/2016"}, {"body": "js object please refer", "d": "12/2016"}, {"body": "simply pass method prop instead", "d": "12/2016"}, {"body": "normal specific benchmark fluctuate versions keep eye please make sure open issues adheres guidelines", "d": "12/2016"}, {"body": "hi thanks filling issue special attribute vue used binding styles name suggests please rename prop something else", "d": "12/2016"}, {"body": "kailniris summarise reasons use cases behind feature request please thread long", "d": "12/2016"}, {"body": "short story global data set fairly big time make objects reactive data set memory consummation gets hand control memory usage remove unused observer properties getter setters unobserved objects self rewrite deep clone like order remove observers actually observed objects vue instances somewhere code sure object unobserved require feature linked issue suggestions cloning original object make reactive freeze object wo nt solve issue cuz situations need observed objects reference make mutations vue instance fiddle representing use case", "d": "12/2016"}, {"body": "already check using private property though nt know worth adding public api maybe good enough least", "d": "12/2016"}, {"body": "even non observed reactive object property like example observer observed vue instance least observed function returns", "d": "12/2016"}, {"body": "well normally means made reactive vue gettersetters need know object observed actually going trigger view changes go deeper use array though still thing", "d": "12/2016"}, {"body": "sorry specific enough still learning vue method suggested sufficient enough task meant use risk possible risks anyway thanks much information vue impresses every moment", "d": "12/2016"}, {"body": "well since undocumented private property belongs internals vue implementation subject change eg renamed rely face risk changed time future undocumented though unlikely specific case", "d": "12/2016"}, {"body": "understand public api would needed chances could feature future", "d": "12/2016"}, {"body": "pattern discussed issue suitable workaround problem feature request unnecessary", "d": "12/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks please try clarify version vue using work normal browsers version cordovaandroidios fail", "d": "12/2016"}, {"body": "fnlctrl hi using cordova vue code working perfectly normal browsers nt work cordova run mobile phone phone model one plus \u4e00\u52a0\u4e09 base android ram rom meizu base android maybe ram rom test failed nt iphone devices nt know works ios wrote simple code show problem use default cordova project simply generate cordova create see vue version cordova version image working perfectly normal browser phone nothing happend", "d": "12/2016"}, {"body": "thomassoloist please create repo keep mind nt necessarily know cordova", "d": "12/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "12/2016"}, {"body": "change different seems fallback component found", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "exactly know changing solve problem think fallback preference wrong find naming conventions local registered components first found look global components", "d": "12/2016"}, {"body": "fnlctrl think", "d": "12/2016"}, {"body": "know naming conventions third party ui libraries using local components name conflict knows", "d": "12/2016"}, {"body": "know naming conventions third party ui libraries using would relevant always alias inside options consider reverse scenario want override third party component local component globally registered component anyway always explicitly alias components potential naming conflict never rely fallback precedence", "d": "12/2016"}, {"body": "would relevant always alias inside components options real scenario use ui collection set simply nt need care whether registered kebabcase camelcase titlecase register local component simply html something import tabpane tabpanevue export default components tabpane someui also component named tabpane registered local registered component never used use longer syntax said overriding thirty ui local component global component rare case like hack local component registered kebabcase never chance vue guide says registering components props use kebabcase camelcase titlecase vue care told vue cares care", "d": "12/2016"}, {"body": "told vue cares care said let quote words always explicitly alias components potential naming conflict never rely fallback precedence case creating component name party component avoided first place since defining local component full control name", "d": "12/2016"}, {"body": "please nt play words fact registered component wrong naming convention vue cares please let end dispute", "d": "12/2016"}, {"body": "yeah say bug feature doc wrong code", "d": "12/2016"}, {"body": "think bug camel case title case component name seems aliases rather fallback practically use cameltitle case register local component object shorthand since javascript allow kebab case variable names also local component overridden global components easily cause unexpected behavior break capsulations third party components", "d": "12/2016"}, {"body": "sounds reasonable maybe bring breaking change", "d": "12/2016"}, {"body": "using one template could render", "d": "12/2016"}, {"body": "jounqin happend internally check prototype chain first think might bring breaking change cases apply new resolving strategy", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "\u70e6\u8bf7\u4ed4\u7ec6\u770b\u770b\u5f00 issue", "d": "12/2016"}, {"body": "overwrite application code use bundling via webpack browserify control env variables", "d": "12/2016"}, {"body": "thanks quickly answer another weird code seems hack webpack purpose sorry interruption", "d": "12/2016"}, {"body": "jounqin ssr", "d": "12/2016"}, {"body": "posva hmm know ssr preserving override webpack simply although code short", "d": "12/2016"}, {"body": "component name ca nt start digit htmlxml tag names simply component name turned tag name", "d": "12/2016"}, {"body": "oh see modified subject case maybe helpful warning introduced", "d": "12/2016"}, {"body": "understand maybe error message highlight fact", "d": "12/2016"}, {"body": "heh let edit last message since real time indeed thinking thanks", "d": "12/2016"}, {"body": "interestingly issue revealed typo vue source code see", "d": "12/2016"}, {"body": "expected supported wo nt future use computed properties methods need complicated nesting filters", "d": "12/2016"}, {"body": "well think already explained also dedicated repo websitedocs wwwgithubcomvuejsvuejsorg please open new issue think still issue please try answer questions suggestions aforementioned improved miss link secion somwhere else docs", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks use watcher value itemquantity", "d": "12/2016"}, {"body": "received warning directly mutating prop value forbidden please use custom events change value instead", "d": "12/2016"}, {"body": "ok id successfully binded list able bind load difference", "d": "12/2016"}, {"body": "nt define parent component instead wrongly defined global variable questions please use dedicated gitter forum thanks", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "tracked vuedevtools repo yes already request high priority need check allow access file urls vue devtools extensions panel", "d": "12/2016"}, {"body": "vuejsvuedevtools", "d": "12/2016"}, {"body": "currently supported yet roadmap duplicate", "d": "12/2016"}, {"body": "amazing use git bisect find source bug sorry duplicate issue searched wrong words", "d": "12/2016"}, {"body": "component seems lacking access filter exporting plain object inside something like cause problem please follow issue reporting guidelines provide repo github reproduce issue thanks", "d": "12/2016"}, {"body": "filters work mustache interpolations", "d": "12/2016"}, {"body": "probably caused safari quirks string template seems work fine", "d": "12/2016"}, {"body": "safari bug removing element containing iframe causes iframes src still dom go blank suggest opening issue webkit bug tracker instead really much vue since changing insertionremoving order going affect lot patching internals potentially lead breaking changes fnlctrl points workaround using string templates instead indom templates efficient", "d": "12/2016"}, {"body": "strange thing log display property set correct yet reports none could issue callback fires early later correct", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "quick workaround works", "d": "12/2016"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "12/2016"}, {"body": "works fine", "d": "12/2016"}, {"body": "usage slot expands piece plain text transitionable wrap element like", "d": "12/2016"}, {"body": "thanks lot", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "update untill getting error another library using directly related vue please provide details also use issues track vuejs bugs get usage problem could post issue forum", "d": "12/2016"}, {"body": "least tell us library errors getting", "d": "12/2016"}, {"body": "hey thanks fast answer error unfortunately dont information right know enough reason would expect hey check vueloader version maybe webpack scripts need update change something well abstract even sorry sure using custom version epubjs library", "d": "12/2016"}, {"body": "well case ca nt really help much since held responsible compatibility arbitrary party libraries closing please follow information available eg error stack traces minimal repro", "d": "12/2016"}, {"body": "element tag", "d": "12/2016"}, {"body": "yep could definitely use improvements declarations added midway pure es codebase already place quite places trying get flow knowledge also limited appreciate prs", "d": "12/2016"}, {"body": "thejameskyle link using flow vuejs try yesterday much problems would great documentation like one made ts", "d": "12/2016"}, {"body": "currently someone working would like try", "d": "12/2016"}, {"body": "markustoe thanks offering help currently actively working improving typings addchange stuff find working parts fixing bugs etc would great improve situation", "d": "12/2016"}, {"body": "primary concern intrinsic misalignment vue options object general type checking systems vue internals options object meta object contain information plain class assume keep nesting even using literal getset nt help flow understand inside getter would object instead vue instance right way make flow potentially play nice removing nesting nesting useful vue lot cases example options nesting allows merged different strategies component extensions enables userland composition eg vuex literal gettersetters quite bit indirection use cases even harder without nesting alternatively vue user serious getting proper classbased type checking vueclasscomponent probably way go", "d": "12/2016"}, {"body": "sometime future flow add syntax adding type functions simple semantics hard implement problem around become getterssetters toplevel pretty natural nested way weird stuff mapping props intersection type spend time working order get correct types", "d": "12/2016"}, {"body": "scott", "d": "12/2016"}, {"body": "closing since nt think worth introduce alternative syntax type checking purposes plus losing composition flexibility especially fullfledged approach available via type checking strongly desired may revisit es classes become expressive enough used default defining components", "d": "12/2016"}, {"body": "looking maybe could improve parser could achieve vueloader vueify considering compiler code size", "d": "12/2016"}, {"body": "defcc considered using example", "d": "12/2016"}, {"body": "need nonminified development build see vue warning please refer", "d": "12/2016"}, {"body": "thx", "d": "12/2016"}, {"body": "please refer", "d": "12/2016"}, {"body": "filter named stored variable could instead ofc nondynamic", "d": "12/2016"}, {"body": "imo dynamic filters breaks bit readability templates moved js instead computed property explicit name represents also nt really see syntax could used", "d": "12/2016"}, {"body": "use computed properties instead plain method call filters designed readability expected static", "d": "12/2016"}, {"body": "would belong vuerouter repo could please post", "d": "12/2016"}, {"body": "done", "d": "12/2016"}, {"body": "\u52a0\u5165\u4e00\u4e9b loader", "d": "12/2016"}, {"body": "\u653e\u5728github\u4e0a", "d": "12/2016"}, {"body": "please check squares always fade inout well nt probably getting image index times row image nt change function nt guarantee drawn index different previous one besides everything looks good", "d": "12/2016"}, {"body": "point know index trigger change bug opening fiddle suddenly works sometimes nt could issue hot reloading exact issue local build vuecli webpack template seems mainly occur code gets hot reloaded people gitter channel confirm behaviour machine seems random", "d": "12/2016"}, {"body": "additional info launching fiddles browsers get random results reloading makes sometimes work sometimes break", "d": "12/2016"}, {"body": "alright checking definitely something weird going transitionproperty set nt see images animating beginning like switches change works great yeah weird issue updated fiddle uncomment transition see happens", "d": "12/2016"}, {"body": "correct also happens kinds browsers sometimes reload sometimes specify properties individually seems like real bug", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "vue \u4e0d\u4fdd\u8bc1\u4e0e\u4efb\u610f\u53ef\u80fd\u64cd\u4f5c dom", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "bad", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks vue replaces dom therefore dom events like click one replaced put jquery manipulation event also google examples many", "d": "12/2016"}, {"body": "note already replied first issue question one hour earlier please nt open issues supporthelp", "d": "12/2016"}, {"body": "bug vue replaces elements added events domready hint call jquery code hook encourage ask questions forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "duplicate fixed", "d": "12/2016"}, {"body": "latest update still facing problem using workaround described", "d": "12/2016"}, {"body": "input gets focused user inputing something input value property updated make patch", "d": "12/2016"}, {"body": "problem trim modifier try fix together", "d": "12/2016"}, {"body": "hey sorry potential problems caused app new release build vue dev branch locally see fixes issue", "d": "12/2016"}, {"body": "problem thanks great work fast fix", "d": "12/2016"}, {"body": "hi short update digging deeper deeper vuejs calling invokecreatehooks new element created seems fix problem ie line updated fiddle change demonstrate leaving first invokecreatehook work know think issue exatly related issue posted stack overflow new elemente created defaults input type text value applied type changed radio therefore get correct value newly created element defaults hope follow explanations kind regards andreas", "d": "12/2016"}, {"body": "nt know different workflow using bower instead npm main field indeed missing multiple builds runtinenormal builds runtime builds nt include compiler therefore need something like vueloader compile templates commonbrowser builds common builds used bundler browser build directly used cdn builds total combining option maybe bower one packagejson one", "d": "12/2016"}, {"body": "seems reasonable sure recent developments bower use gulp wiredep insert script tags based think fairly common", "d": "12/2016"}, {"body": "actually searched recommended package manager npm yarn bower configuration file vue see basically override main manually", "d": "12/2016"}, {"body": "hi marcte thanks interest vue idea high level fits better user land abstraction top vue nt see talking fields looks like specific component good luck idea", "d": "12/2016"}, {"body": "posva problem get vuejs code sugar sure work ok break vuejs features really think especially people like experts interpreter workflow implement feature sad close thread people time comment main point vue feature describe beacon replacement implicit parameter passing without anyway fill component replacement definition elements doubling size file following would replace something like would highly simplify improve frontend framework implemented know design vue wish nice frontend framework marc", "d": "12/2016"}, {"body": "posva field mean old database vocabulary attribute column record table database last name first name phone number", "d": "12/2016"}, {"body": "sugar talking component create closed looked things already said much realised fits userland better cheers", "d": "12/2016"}, {"body": "posva done userland forces either define dynamic component code element form rather get done automatically behind scene runtime client define intermediary component anyway code possible components dynamic call one place code add component bad add one component level element top form lower component also means top form call needs parameters passing intermediary component need forward lower component mention heavier syntax compared simple beacon need pass leas one parameter dynamic component selecting field want name address etc simplify things visually code size wise memory usage wise speed wize marc", "d": "12/2016"}, {"body": "posva would like discuss topic skype could french english thanks marc", "d": "12/2016"}, {"body": "marcte offense quite difficult understand proposal even reading twice imagine would similarly even difficult less experienced users comprehend since vue always focused approachable easy understand nt think something consider pulling vuejs recommend building userland suit specific needs", "d": "12/2016"}, {"body": "thanks reply really trying express best way think see must framework userland maybe misunderstood use terms mean something else main point program subcomponents reusable want place templates using short amp simple beacons need pass anyway parameters context acceptable way reflect upwards subcomponent state changes events manager upper component means would natural implicit way putting component template vuejs either interpret elaborate way least replace behind scene longer verison interpreted vuejs less verbose component insert information need come metadata source example put button component name component would replaced call button component reference metadata related startbutton would also wire things subcomponent reflect state upper component upper component one meaning button state meaning good practices debugability button component change state upper component calling attribute setter manager procedure central upper component course maybe makes sense show point visual sketches would also open skype conversation matter already new handwritten schema showing problem really trying use vue best elegant way remind us thlking frontend framework meaning related visual objects long complicated js marc", "d": "12/2016"}, {"body": "words posva linusborg whatever allowing data driven templating app code slimming idea synthesised way way insert components without need long statement parameters way templates look visual include code mostly related component positionning beside minimum behaviour code needs outside components would allow see simple solution billow apparently simple framework vuejs graphic designers anyway making easier cool see template code would offer natural way inserting component universe components highly repetitive code generated client side namely take component beacon replace necessary call syntax would anyway necessary every component calls component type solution simplest way triggering code replacement vuejs interprets code replacement could take string beacon ex firstname process function returns js statement interpret similar ways dynamic templates also allows define parameters want pass processing defining values passed would also allow simpler way connect data flow different component levels althougs explicit code could made explicit function somewhere global code files great thing would function returning statement could logic select different return formats many parameters etc according serves better context bottom line feature would allow really cool visually appealing code whatever way want take advantage really think great step take allow marc", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "complicated", "d": "12/2016"}, {"body": "encourage ask support questions forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "linusborg thanks", "d": "12/2016"}, {"body": "hi fenivana thanks filing really like issue reporting style succinct yet informing fix tried small demo worked well wonder work larger application would like give local build try application thanks", "d": "12/2016"}, {"body": "hi jcfg thanks suggested feature far refrained polluting prototypes custom methods vue explicitly removed nt think want start adding type code framwork unless advantage provides extraordinary far nt think case proposed method", "d": "12/2016"}, {"body": "adding vueswap like vueset", "d": "12/2016"}, {"body": "write updated notification", "d": "12/2016"}, {"body": "dependency notification twice splice vueset right adding arrayprototypeswap like adding vueswap notifications", "d": "12/2016"}, {"body": "dependency notification twice splice vueset right yes called twice neither performance implications calling watcher twice update triggered pushed scheduler working asynchronously skip duplicate entries", "d": "12/2016"}, {"body": "ok still think worth reactive swap vue none trivial normal users vueswap also needs single notify like corrected comment since vue developers know vue better normal users", "d": "12/2016"}, {"body": "ok still think worth reactive swap vue none trivial normal users nt think three lines code herringtondarkholme nontrivial dev knows js enough work vue successfully otherwise try keep api surface vue lean could think dozens small convenvience functions like would inflate api unnessessarily", "d": "12/2016"}, {"body": "quick question notifications whole todo list right single elements list notifications vueswap would miss notifications arr x example something like data msg reactive var todos msg reactive list", "d": "12/2016"}, {"body": "could think dozens small convenvience functions like would inflate api unnessessarily therefor one could aggregate helpers like plugin core clean", "d": "12/2016"}, {"body": "quick question notifications whole todo list right single elements list notifications case changing array therefor one could aggregate helpers like plugin core clean contreibution welcome close issue since think come understanding wo nt added core", "d": "12/2016"}, {"body": "hi thanks filling issue many css properties like works numerical values ie appending default break usages", "d": "12/2016"}, {"body": "fnlctrl thanks reply first awesome css properties work numerical values however properties also feature work good work numerical values css properties would units", "d": "12/2016"}, {"body": "cybai think possible implement computed properties also vuejs later use filter eg html", "d": "12/2016"}, {"body": "kazupon looks good though hope vue support suffix automatically besides using properties might flexible users thanks reply great example", "d": "12/2016"}, {"body": "store data set plain object user pick item put item vue instance reactivity one item everything good expects causes memory leak every time put item vue instance new observer property added object even object instance new observer added next unused ones could please provide demonstration jsfiddle example ecactly put item vue instance", "d": "12/2016"}, {"body": "sorry clear enough fiddle asked", "d": "12/2016"}, {"body": "made test looks like made false statements memory leak looks like make object reactive vue instance put object another instance first instance observer property added additional getters setters added right however high memory usage large data set still issue", "d": "12/2016"}, {"body": "observer property added yes somehow remove unused observers gettersetters parts app updates object want keep reactivity conflicting requirements imho observe one object maintain observer maybe vue smaller observer instances sure currently workaround might partition data maintain set objects want keep reactive clean reactive set another suggestion mark immutable properties prefix waive several watcher instances", "d": "12/2016"}, {"body": "somehow remove unused observers gettersetters parts app updates object want keep reactivity conflicting anyhow lets say object list object properties user vue user picks another object first object longer visible user view layer would want maintain reactivity anymore object user observes object object property changed function somewhere code update displayed user basic idea nt want maintain observers object displayed view layer currently cpu memory efficient way long term wanted represent fiddle posted earlier problem make object reactive observer stays even object really observed point might future course using memory nothing featuremethod wanted ask way remove observers objects really observed point determine objects observer part instances without deleting object", "d": "12/2016"}, {"body": "suitable workaround would could determine unused observers object objects reference vue instance vuex somehow could delete unused observer properties unused getters setters freeing memory currently unused objects readd observers default object used would allow vue work extremely high amount data low memory consumption know cpu intensive dirty checking makeshift garbage collection still better nothing", "d": "12/2016"}, {"body": "might something like work essentially clone picked item using adding vm cloned object made reactive vue original data stays nonreactive also set watcher item changes mirrored original nonreactive object soon change picked item one reactive item become unreferenced garbagecollected quick amp dirty demo course improved eg using deepcloning work nested objectsarrays", "d": "12/2016"}, {"body": "thanks working issue know strictly applications specification issue workaround object reactive always strictly modified outer code like message server never inside vue instance even vue instance update method first must validated server message server update global items object thinking sure work setup vue instance create mixin every vue instance listens global update requests make object reactive vue instance instead making global reference reactive deep clone object global updates update global object reactive objects vue instance separately thing wanted stay away fact go away vue one source truth data model", "d": "12/2016"}, {"body": "latest comment mind proposal would clone old item new one gets swapped cloned object reactive properties take cloned object assign back array method maintain single source truth picked item made reactive inplace pick cloned back nonreactive item done", "d": "12/2016"}, {"body": "sirlancelot useful idea thanks contribution know cloned objects get observer property getter setters made tests works fine thing whats still missing way determine object part another instance safely reassign guess achieved application logic thing think kind dirty checking resigning observed objects user idle view layer empty official way developed developed think suitable workaround thanks help", "d": "12/2016"}, {"body": "items mutated simply call setting vue instances let vue know skip observing internals items basically solve memory issue even need mutate instead something like", "d": "12/2016"}, {"body": "items global object mutated time network source point chose vue cuz reactive objects mutations updates view anytime without knowing listening object mutations project wanted achieve followings get global data set variable show data view layer object mutated global data set view layer must automatically updated representing mutations without code vue manager achieve goals without problem expects increase memory use using app ca nt freeze object clone make reactive cuz need original object reference get reactive view update global object mutated updated fiddle demonstrate idea", "d": "12/2016"}, {"body": "close turned support thread bug report feature request feel free continue conversation open another issue leads actual issue", "d": "12/2016"}, {"body": "stated actual feature request request api determine reactive object part vue instance examples provided use cases provide better understanding would requested feature helps achieve create new issue specific feature request thanks help far", "d": "12/2016"}, {"body": "create new issue specific feature request yes please guarantees weither feasable though", "d": "12/2016"}, {"body": "kailniris thinking whether worth adding api dug old issue let continue discussion going jsfiddle based sirlancelot evan suggestion concluded maybe make store object reactive let notify view updates instead making items reactive use skip adding watchers item performance gain jsfiddle therefore nt necessary", "d": "12/2016"}, {"body": "thanks working issue idea fascinating reactivity works objects extra memory use compared plain objects guess work vuex store suitable multiple global reactive data sets try idea real data set write report thanks", "d": "12/2016"}, {"body": "kailniris updates", "d": "12/2016"}, {"body": "fnlctrl sorry keep waiting still making tests working implement pattern code respond back asap results", "d": "12/2016"}, {"body": "sorry late replay managed implement pattern made lots tests everything works fine looks like good solution issue think feature request unnecessary close maybe pattern added docs anyway big thanks help", "d": "12/2016"}, {"body": "glad help", "d": "12/2016"}, {"body": "yes design vue nt remove duplicate static class names merges asis reality already know static class abc probably nt bind", "d": "12/2016"}, {"body": "fnlctrl using css modules think case class named component use inside want override style style loaded means style higher level choose use makes classname like contains generated classname fix issue level css selector duplicate classname way merge classname parent", "d": "12/2016"}, {"body": "use instead", "d": "12/2016"}, {"body": "sorry nt really understand use case seems overengineering really need bind static class twice component template parent template shown fiddle build system probably something wrong", "d": "12/2016"}, {"body": "duplicated class cause issues though nt seem actually matter", "d": "12/2016"}, {"body": "actually however problem using makes use consider two component vue basecompvue basecompvue base color red backgroundcolor green vue hellovue import basecomp basecompvue export default name hello components basecomp hello color blue backgroundcolor pink obviously want override style actually work style loaded", "d": "12/2016"}, {"body": "plugin replaces dom nodes vue managing breaking expected behavior predict behavior arbitrary party plugins", "d": "12/2016"}, {"body": "manually solved issue returning third argument component data rendertostring function component data server data variable bundlerendererrendertostring err html data gt hope future update see decision", "d": "12/2016"}, {"body": "meta information seo purposes nt need dynamically updated due services mechanisms query website page url index initial synchronous request means even update via js search engines likely index way probably wo nt ever indeterministic best way optimize seo purposes statically generate content consumption web crawlers manipulate head correct meta content server level fairly simple achieve injecting content head served document real exception user experience dynamically update title document true benefit updating title dynamically exceptions addthis require manipulation via client api ensure using client functionality content set preferred plugins manipulate head document generally fairly expensive purpose probably reason updating head completely regenerate meta data client side said certainly agenda provide information best practices comes common scenarios planning form cookbook provide sort information perhaps asking vue forum may aid may others could provide opinions subject", "d": "12/2016"}, {"body": "best advice concerned providing meta content head would assuming using state management able provide context server renderer add place holders html document template like create store seo updating correct data serving head document ect replace placeholders correct data using client base tools use store data update title necessary questions concerns let know", "d": "12/2016"}, {"body": "considering mine spa vue main use case probably spas think important reactively update title better user experience put sounds fairly straightforward also assume would nt take much integrate capability vue", "d": "12/2016"}, {"body": "user experience spa simple updating title route change however deterministic may needed update example use cases could dictate opening model window enough change title simple javascript inevitably creating abstraction vue change documents title much said using spa days becoming considered antipattern real focus meta data title ui experience simple even plugin would cater many use cases essentially wrapper change document title real problem dynamic meta information falls server level server level many tools used many template engines many variants thus suggestions advice simple solution best imho vue dictates setup officially stamp approval plugin prevent choice tooling scope vue thus problem domains subject tools use vue avoid creating friction", "d": "12/2016"}, {"body": "current project modal yes title metadata og image etc need change depending modal showing nt matter modal vue nt care modal declared child vuerouter like child able include required metadata changes component declaratively kinda vuemeta works said changing something like og image obviously important handled server vue nt offer clear way going saying spa antipattern well going current winds javascript trends change every months evan pointed recent tweet people like different things know wish programmers understood many projects spa makes sense", "d": "12/2016"}, {"body": "client depends og image meta data spa unlikely search engines facebook ect pick correct meta information dynamically updating update asyncronous clever search engines attempt relying requested data page loaded picked could explain use case detail understand tool like vuehead vuemeta makes sense application", "d": "12/2016"}, {"body": "yes said changing something like og image obviously important handled server important something like facebook gets information page nt matter client title theme two examples metadata matter client important handling metadata correct client server projects like vuemeta matter prevent many devs reinventing wheel declarative updating page metadata handled consistent way client serverside rendering example list items user clicks one want page details open want open instantly since already data spa awesome quickly need grab couple small bits data spa still awesome also want data page directlyaccessible ssr app user would get page prerendered correct page metadata user got instantly clicking list item case page also correct metadata applied one example", "d": "12/2016"}, {"body": "nt make sense vue excellent way keeping url sync navigational changes sensible way keep metadata sync along", "d": "12/2016"}, {"body": "okay browsers fire change event item loses focus using input event seems working better", "d": "12/2016"}, {"body": "luqmanrom yes", "d": "12/2016"}, {"body": "relevant threads", "d": "12/2016"}, {"body": "roadmap ideas improve probably sat dec denis karabaza notifications githubcom wrote relevant threads nodejsnode nodejsnode receiving subscribed thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "great waiting vue suitable use ssr bundle render production environment release date vue roadmap", "d": "12/2016"}, {"body": "hi thanks filling issue caused vue dom patching strategy described docs default mode efficient suitable list render output rely child component state temporary dom state eg form input values simply fix adding attribute element also recommended provide key vfor whenever possible unless iterated dom content simple intentionally relying default behavior performance gains", "d": "12/2016"}, {"body": "since using vuex store serve caching layer fetch action send ajax request corresponding data already store inlined hydrated server render", "d": "12/2016"}, {"body": "hi thanks filling issue value object vmodel passes reference child changes child makes affect parent immediately actually nt want make affect parent immediately mutating prop object directly child change prop done designed used objects yes parent state gets replaced new fresh object case using local cloned value right approach serves temporary state child flushed parent state changes triggered therefore simply removing inside watcher elsewhere want update parent state flush local state way still watch react changes also really think maybe consider breaking component deep object multiple components modifying primitive values simple objects like makes easier maintain reason", "d": "12/2016"}, {"body": "really think maybe consider breaking component value deep object multiple components modifying primitive values simple objects like makes easier maintain reason yes consider component holds primitive values input vmodel components well end object prop gets mutated many examples simple inputs value object distance units time position picker select multiple values like matter car seems able encapsulate inputs reusable component use simply simple effective easy reason problem issue trying raise vue js tried fix antipattern instead gave us extremely easy way different antipattern vmodel exists create input components right prop passed vmodel intended modified right reason pass things via vmodel vue js nt use immutable data passes everything reference modifying prop passed antipattern means attempt mutate prop inside child component modify value prop got intention modifying anti pattern make sense guess nt understand vmodel exists without deepcopying passed value since way intended without deep copying first", "d": "12/2016"}, {"body": "way look passing argument value reference prop inside method example nt make sense thinking someone privy internals vue seems logicalsafe modify prop object property since parent component component depends object state react accordingly changing object child component would imply somehow updating references magically would asume one motivations data downactions paradigm probably would nt worry deep cloning prop object using every change", "d": "12/2016"}, {"body": "teleclimber read docs several times find way around issue", "d": "12/2016"}, {"body": "specifically expressed builtin constructs worst case really express anything render function", "d": "12/2016"}, {"body": "need static content depending user input way need dynamic content eg event bindings check functions also either string name component component iirc enough care generate components dynamically advise explore simpler options first", "d": "12/2016"}, {"body": "closing since nt think feature request fulfilled believe render functions sufficient arbitrarily complex use cases feel free continue discussion though", "d": "12/2016"}, {"body": "sure understand function right function generate new dom elements drop elements dom async way example consider vue instance already rendered mounted element button user inputs number click button seconds new element appended button number shown use input another click waiting another n seconds see another appended repeated many times prevue time easily via dom apis achieve edit know done pushing new numbers array using template new elements appended structure therefore expressed hmmm might able define possible structures new elements many components combine", "d": "12/2016"}, {"body": "idea know ahead time possible types content yes everything expressed templates render functions keeps component render output declarative predictable nt follow chains imperative code figure something happening nt know content use something like html careful xss though", "d": "12/2016"}, {"body": "also imperatively append empty element rendered vue wo nt throw away appended rerenders technically wanted recommended", "d": "12/2016"}, {"body": "got many thanks simplesmiler", "d": "12/2016"}, {"body": "cents alternative could", "d": "12/2016"}, {"body": "vue warnings thrown errors spy assert vue warnings", "d": "12/2016"}, {"body": "please move issue also reproduce issue make reproduction based fiddle", "d": "12/2016"}, {"body": "mistake yui compressor part illegal use keywords identifiers property names accessors reference mdn reserved word usage deal yui compressor quote keywords", "d": "12/2016"}, {"body": "ok thank hint may added docs default confusing property name anyway even allowed let return used instead", "d": "12/2016"}, {"body": "default confusing property name anyway feel way used define default value use value provided seems fitting descriptive", "d": "12/2016"}, {"body": "may like reuse reserved words absolutely necessary purpose define default value use value provided name defaultvalue make also syntaxhighlighter yui happy state somewhere notation fine also props default foo unfortunately seems clear frontend people least circles define props js object notation style obviuos comment simplesmiler admit though filing issue thanks simplesmiler", "d": "12/2016"}, {"body": "case conforming standard yui cater party tool fails comply standard", "d": "12/2016"}, {"body": "point using reserved words allowed context matter personal taste want argue decision use stick wish luckily workaround people work yui fine thanks", "d": "12/2016"}, {"body": "workaround people even workaround fully standard way define objects js correct", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "warning telling use body good practice let vue compile needed instead entire page inbrowser compile process completely eliminated precompile templates using really concerned performance make sure measure performance production build need information stack trace helpful really need full trace see bottleneck also need template compiling able diagnose problem", "d": "12/2016"}, {"body": "thanks reply use new vue div contains information good practice currently need vue directives lazyload difference big dev production build refactored nunjucks template multiple vue components resolved crash problem performance still looks good especially problematic phone may problem particular version ios safari safari problematic hope chrome timeline data helpful", "d": "12/2016"}, {"body": "hi maggiehe thanks reporting perused timeline data think irrelevant chrome extension javascript let ignore two main performance bottlenecks application vue template compilation parsing templates costs chrome probably desktop version guess seems quite large html corpse hot function compilation called repeatedly execution time naturally piles quite hard optimize without precompilation even squeeze last bit performance parsing performance gain might still fails match fattening dom size recommend consider precompilation selectively compiles part static page vue instance creation promising optimizing see graph time consumed largely composed series yellow block graph native dom call need vue directives lazyload might directives slow nt know specific situation would recommend extract directives vanilla javascript module provide callbacks notify vue instances hope helpful", "d": "12/2016"}, {"body": "thanks help resolved problem precompilation seems directives affect performance still frequent setattr updateattr operations pure static html want close issue tested large page another framework two frameworks order magnitude build time although case vue spent time far enough used measure performance", "d": "12/2016"}, {"body": "using variable later simply change", "d": "12/2016"}, {"body": "pass el instantiation time extension time", "d": "12/2016"}, {"body": "follow issue reporting guidelines provide enough information issue seems mount vue instance body element recommended could refer could bellow", "d": "12/2016"}, {"body": "use vue warning", "d": "12/2016"}, {"body": "specific properly reused ie replaced newlycreated elements indeed move operations necessary however based chrome timeline tracing seems moving similar renderingpainting costs would nt really consider failing maybe improved experiencing visible slow app complex item actual list", "d": "12/2016"}, {"body": "reasonably modern laptop ca nt see difference think see slight difference asus tablet one four years old use case virtual scroller shows couple rows viewport scrolling rows inserted deleted scroll view row li element contains divs img jpeg text trying optimize list rendering component noticed issue thought small bug algorithm reported hard fix correctly impossible fix without performance impact please nt bother thanks quick reply mike", "d": "12/2016"}, {"body": "supported", "d": "12/2016"}, {"body": "hi understanding tests supported transition component contains keepalive component contains dynamic components use transition request use case component contains different transition", "d": "12/2016"}, {"body": "ah sorry yes right currently possible", "d": "12/2016"}, {"body": "thought use case nt think would make sense really component switched instead make custom transition component communicates shared event bus use component base make variations different views share communication channel long belong note fix released yet including fiddle", "d": "12/2016"}, {"body": "thanks checked fiddle see mode works nicely think found bug navigate first time route transition triggered think solution bit hacky sure transition mode would possible using suggested approach think move feature request given mentioned belong component btw awesome response times", "d": "12/2016"}, {"body": "hack implement internally logic would largely similar doubt done differently given new transition system works", "d": "12/2016"}, {"body": "another possible solution instead using inside child components write higherorder component wraps slot child different transitions based child nametype might release separate component later", "d": "12/2016"}, {"body": "thank suggestions provided fiddle make use havent found documentation point right direction understand accomplished highorder component would awesome greets", "d": "12/2016"}, {"body": "property specific component api callback line actually avoided prefixing underscore", "d": "12/2016"}, {"body": "oh everything makes sense one question first transition triggered line enter transition triggered event received triggered first leave transition try improve fiddle better example future reference", "d": "12/2016"}, {"body": "updated fiddle initial enter working", "d": "12/2016"}, {"body": "awesome thank", "d": "12/2016"}, {"body": "thing sorry keeping busy clarify wanted make transition events dispatched inverted dispatching enter animation completed", "d": "12/2016"}, {"body": "supposed used together transition purposes entail conflicting startending states regarding use case use outer component instead", "d": "12/2016"}, {"body": "appreciate feedback thanks suggestion", "d": "12/2016"}, {"body": "hi thanks filling issue first thing extended template message extended view came empty empty extending template properties already defined first nt know view came empty changing template working fine maybe connection issues jsfiddle would received error message open console believe described error accurately helpful enough let fix", "d": "12/2016"}, {"body": "want point example edited order work edit fnlctrl beat", "d": "12/2016"}, {"body": "nt connection issue jsfiddler way described exactly works issue closed immediately", "d": "12/2016"}, {"body": "nt issue displayed first screenshot changing template nt cause view came empty", "d": "12/2016"}, {"body": "mean thing nt render expecting render something come entire model ignoredskipped unless fully defined nt make sense complex viewtemplate design starts introducing elements one one many may optional even see anything unless everythign defined declare properties later nt included original tiny demo example subject reactivity rules vue change detection system details", "d": "12/2016"}, {"body": "come empty mean extended thing nt render expecting render undefined something meant empty nothing comes even value variable demo refuses show anything try use property model nt declared yet nt understand worls side definitely issues using jsfiddle", "d": "12/2016"}, {"body": "meant empty nothing comes even value message variable demo refuses show anything try use property model nt declared yet ca nt reproduce issue working fine shown first screenshot jsfiddle provide info browsersystem", "d": "12/2016"}, {"body": "seeing errors console case", "d": "12/2016"}, {"body": "ok see problem default browser chrome switched latest chrome started working expected minimum chrome version support nt old", "d": "12/2016"}, {"body": "nt know failed chrome anyway able define data properties later development eliminate messages production work perfectly version chrome issue closed immediately respond fast new issues close issues appear us nonissues immediately also vue lowest issues count among major frameworks nt mean discourage discussions please feel free definitely reopen issues evidence provided later indeed issue", "d": "12/2016"}, {"body": "ok case still thrown browser compatibility backlog wo nt last one run", "d": "12/2016"}, {"body": "missing root properties case considered error resolved deploying app production assure browser compatibility production sorry wo nt main concern support old browsers development", "d": "12/2016"}, {"body": "something nt work dev perhaps work production somehow invites little trust surely cause issues testing", "d": "12/2016"}, {"body": "well reasoning explained follows reproduce behaviour currently supported browsers latestest autoupdated versions limited time resources reproduce problems possible system browser compbiantions chrome version version seem problem maybe combination extension currently market share error experience bug using vue intended happens use vue way explicitly error appear dev warning would appear place danger making way production take account seems worth limited resources try hunt bug reproducible us may happen users someone pushed wrong code production", "d": "12/2016"}, {"body": "issue assumption percentage users use chrome older much higher work banking industry know fact", "d": "12/2016"}, {"body": "latest npapi version", "d": "12/2016"}, {"body": "well would assume amount people develop chrome lt would small real issue developers use versions might still confirmed simpy chrome version issue see white screen development instead nice warning use nonexisting data property template neverever make production issue assumption percentage users use chrome older much higher work banking industry know fact specifically older yes still significantly nt even know weither affected failed errormessage market share across industrie customers may higher sure look general market", "d": "12/2016"}, {"body": "record work huge international bank chrome currently enforced default everyone without allowing upgrade stumbled upon issue makes care little browser usage percentage", "d": "12/2016"}, {"body": "makes care little browser usage percentage understand also understand prioritize global user marketshares especially issue lowimpact happens developers make mistake bug feature could appear users production even though dev followed vue api big problem always open prs", "d": "12/2016"}, {"body": "security related bugs chromium since version astonished scott", "d": "12/2016"}, {"body": "yes different angular intentional required explicitly declare rootlevel reactive properties upfront benefits serves schema component state maintaining later looking component definition able instantly see properties available simply dynamically add new properties random places would maintenance nightmare like maintaining database without schema results predictable behavior particular paired typechecking systems avoids excessive rerender might caused adding rootlevel properties finally developer able choose browser develop chrome browser use job seems like terrible decision companies part customers company use chrome probably", "d": "12/2016"}, {"body": "please check console warnings vue refusing render solution simply nt put style inside html body fontsize message var app new vue el app data message hello world", "d": "12/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "12/2016"}, {"body": "qianoop required boolean attribute according specification presence boolean attribute element represents true value absence attribute represents false value attribute present value must either empty string value ascii caseinsensitive match attribute canonical name leading trailing whitespace values true false allowed boolean attributes represent false value attribute omitted altogether could use custome attribute like", "d": "12/2016"}, {"body": "bug outdated comment feel free submit pr fix though", "d": "12/2016"}, {"body": "hi thanks filling issue supported though officially recommended noncomponent vue instances used vuex manage state also eventhub pattern global event hub", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "msg side effect every time component renders triggers new render ending infinite loop never use expression side effects template event handlers", "d": "12/2016"}, {"body": "oh yeah right thank much", "d": "12/2016"}, {"body": "defcc thanks works", "d": "12/2016"}, {"body": "closed need update relative doc track vuejsorg issues", "d": "12/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "12/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "12/2016"}, {"body": "temporary approach nt work based faulty assumption using props default function somebinding storeroot data different passing prop binding manually within templaterender first case nt reactive sets initial value latter reactive leaf value prop looks like efficient way work optimized manner immutable data structures entire root state atom change reference new one would use plain props pass manually dummy components cause changes detected leaf prop values since component nt reference root state detects need rerender upon change props", "d": "12/2016"}, {"body": "ktsn received props directlyhowever use official documents render invalid", "d": "12/2016"}, {"body": "provide reproduction example repository reproduce", "d": "12/2016"}, {"body": "component take inspiration use directly webpack", "d": "12/2016"}, {"body": "looking use case still nt think correct answer want essentially way let explicit make view state sync imo correct approach first place primarily offered performance optimization fully frameworkcompliant way deal also would suggest even react separate piece state represents input content sync model state updated want", "d": "12/2016"}, {"body": "\u65b9\u6cd5", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "remove", "d": "12/2016"}, {"body": "seen examples vue site articles data fetch part know ahead time property state fetch function going update however would spread newly acquired data data object react accomplished view set single property tried following even though knew would nt work get idea across know could set property data object called data place data within nested data object let user thisdatacommits nt want resist nesting say want spread data object mean one", "d": "12/2016"}, {"body": "got working add twitter send dm link code maybe review give tips things may done vue way twitter handle kennetpostigo", "d": "12/2016"}, {"body": "making public repo link sure community give lots feedback also understanding want hook vue graphql better choice hook vuex since prebuilt state management system vue chance also hope aware problem solved albeit vuex redux system apollo provides wanted point possible reinventing wheel already made scott", "d": "12/2016"}, {"body": "hi smolinari making public repo link sure community give lots feedback monorepo going make public soon finish bindings frameworkslibs also understanding want hook vue graphql better choice hook vuex since prebuilt state management system vue chance nt want depend specific state management libraries often times teams individuals choose different options different reasons makes sense use case however provide way let state management libraries hook client handle data actions also hope aware problem solved albeit vuex redux system apollo provides wanted point possible reinventing wheel already made aware apollo available however client working focused minimizing size similar projects like preact currently core vue bindings stand well developer experience keeping simple unopinionated work well tools step toes", "d": "12/2016"}, {"body": "well project sounds interesting looking forward seeing scott", "d": "12/2016"}, {"body": "ok thanks trim working first initialization ie page load input two letters one space class set hassuccess though terms start working start typing", "d": "12/2016"}, {"body": "please open another issue issue far list", "d": "12/2016"}, {"body": "possible make first second parameter dynamic example passing argument binding vueset vnodecontext datapropertysubproperty content elval", "d": "12/2016"}, {"body": "unfortunate though dynamic platform dom component written like someouterscopevariable somedynamicvariablename would add technical details outer dom technical reasons seems attribute evaluated static dom attribute change parsing template thought could use scoped slots requirement unfortunate", "d": "12/2016"}, {"body": "closed via", "d": "12/2016"}, {"body": "also major decision blocker react vuejs react plugin works perfectly allocate sometime next week look get workaround anyone progress use case please inform topic", "d": "12/2016"}, {"body": "severside rendering without node dependency would huge improvement us backend heavily depends python stack plugin would come handy", "d": "12/2016"}, {"body": "able get standalone version using path aliased webpackbrowserify", "d": "12/2016"}, {"body": "following official getting started guide could nt even get hello world saw previous comment following cli method", "d": "12/2016"}, {"body": "first forgive post going similar situation vuejs version vuexjs version file actionsjs export const addform dispatch gt dispatch addform export const deleteform dispatch gt dispatch deleteform componentvue lt template lt ul class dropdownmenu lt li lt click addform save lt lt li lt li lt click deleteform delete lt lt li lt ul lt template import addform deleteform vuexactions export default actions addform deleteform result vuecommonjs vue warn property method addform defined instance referenced render make sure declare reactive data properties data option vuecommonjs vue warn property method deleteform defined instance referenced render make sure declare reactive data properties data option correct warning", "d": "12/2016"}, {"body": "carvalhoviniciusluiz nt defining component please refer", "d": "12/2016"}, {"body": "going fixed thanks", "d": "12/2016"}, {"body": "issue modal window nt know wrong vuejs version steps reproduce use vueloader modalvue javascript export default mounted documentgetelementbyid app appendchild el javascript text show modal import modal uimodal export default data function return showmodal false components modal expected click close button close modal window actually happening console shows error", "d": "12/2016"}, {"body": "moonlik please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc open separate issue thanks", "d": "12/2016"}, {"body": "fnlctrl ok sorry", "d": "12/2016"}, {"body": "moonlik issue moved component call top template", "d": "12/2016"}, {"body": "problem storejs javascript const state forms const mutations addform state newform stateformspush newform const actions listform context gt vue gt respbody data gt const form id dataid data datadata html datahtml contextcommit addform form componentvue javascript export default created storedispatch listform computed forms return storestateeasyformsforms domexception failed execute insertbefore node node new node inserted child node solve problem", "d": "12/2016"}, {"body": "please dont comment old closed issues original issue fixed problem bug likely thing either ask help forum open new issue proper bug report interactive reproduction", "d": "12/2016"}, {"body": "also issue accessing sub properties nonexisting properties eg options yet defined imho would better follow angular way resolve string interpolations errors empty string log error nonrelease mode", "d": "12/2016"}, {"body": "joshglendenning curious made plugin way compatible vue vueelementdirective deprecated making solution longer work", "d": "12/2016"}, {"body": "scoped slots exists vue need plugin", "d": "12/2016"}, {"body": "ah cool right", "d": "12/2016"}, {"body": "oh man amazing nt know added vue great work always vue", "d": "12/2016"}, {"body": "nt know anybody reading still related problem put property vue instance name like imagesrc quoted valid javascript key vue code reason vuejs nt bind remove dash works section docs kebabcase camelcase seems unrelated idea nt work", "d": "12/2016"}, {"body": "fabd vbind expects javascript expression ca nt use identifiers really want use use accessible templates", "d": "12/2016"}, {"body": "fixed branch working project nt able upgrade yet known workaround setting implications", "d": "12/2016"}, {"body": "wormen find way seems nt possible yet feasibility depends way vdom used binding actual dom nodes also imposes code splitting since even vue capable rendering web worker legacy eg jquery stuff libraries would still render ui thread ps know discussed gitter chat room forum stackoverflow nobody answered far could find least question posted gitter", "d": "12/2016"}, {"body": "matthiasg yes found solution problem vuejs nothing", "d": "12/2016"}, {"body": "wormen may ask whether still usingconsidering vue vue community nt responsive inquiry needed rendering inside web workers look elsewhere", "d": "12/2016"}, {"body": "matthiasg point rendering inside workers missing something obvious something super complex render", "d": "12/2016"}, {"body": "matthiasg functionality would like take advantage vuejs web workers wrote vuejs use web workers", "d": "12/2016"}, {"body": "andreiglingeanu personally nt need right investigate since dom updates interactions angular took ms interfered scrolling speed caused intermittent slow downs planning move product angular vue next weeks need ssr necessarily web workers yet interested potentially rendering inside service worker experimental option would require similar architecture idea server could push certain data updates dormant devices every service worker would use prerender matching html client requested html would already prefilled uptodate data make full use streaming rendering", "d": "12/2016"}, {"body": "matthiasg hm set html actual dom via sort directive sure faster approach", "d": "12/2016"}, {"body": "andreiglingeanu number projects blog posts discussing merits example implementations basically render vdom worker transmit patch ui thread applies actual dom dom event handlers forward web worker work total spread across two threads even low level phones cores ui thread blocked easily xml parsing etc said priority right us either interested seeing vue succeed though concerned wormen question went totally without response kind glad found another solution issue course", "d": "12/2016"}, {"body": "hot reload working name modules version description main appjs scripts build webpackdevserver hot inline author license isc dependencies lodash vue vueifyinsertcss webpack devdependencies babelcore babelloader cssloader stylus stylusloader vuehotreloadapi vueloader vuetemplatecompiler webpack webpackdevserver could tell problem thanks", "d": "12/2016"}, {"body": "gon na drop link", "d": "12/2016"}, {"body": "plan bring tightly integration flow userland particularly interested plan bring static type checking components especially props computed way flow integrates well react box", "d": "12/2016"}, {"body": "feels like back backbone think change bit painful simple apps nt use vuex managing events difficult lot possible app benefits vuex anyways huge project work relied marionette attest lot views listening emitting events great making event listening pattern less magic explicit fine imho", "d": "12/2016"}, {"body": "implemented pretty simple global event bus vue developing vue ui kit fun wanted able open modals anywhere", "d": "12/2016"}, {"body": "using replacement problem child components still process event already destroyed", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fnlctrl thks tried method discard events channel finally found way solve simply make determination situations method would solve problem think caused method vuejs method parameter remove dom completely vuejs method remove parameter official document suggest nt destroy component method suggest us use could use method remove dom method destroy order avoid component destroyed processing bus simply make determination situations method would solve problem", "d": "12/2016"}, {"body": "sorry completely point destory nothing event hub global instance nothing lifecycle components use thks tried method addtodo discard events channel addtodo case simply forgot pass second parameter please refer docs locking issue since obsolete future references please refer docs support questions discussions please use gitter forum", "d": "12/2016"}, {"body": "sorry new coming angular filters feels really strange counter intuitive would better every developer develop set filters setting computed entries etc better build considered best practice filter really large array objects element angular one line code possible filter array search input would magic function framework", "d": "12/2016"}, {"body": "considered best practice filter really large array really large array theoretically computed property would good filtering would better every developer develop set filters setting computed entries etc better build used think way started thread since learned basically piece cake create kinds filters sooo many things developer might want filter computed property come realize nt big deal built filters scott", "d": "12/2016"}, {"body": "case equals gt lines json provided firebase database see might think way decide drop feature nonetheless quite additional hassle devs forked fiddle inline data structure need code search string object hand", "d": "12/2016"}, {"body": "nt understand question sorry fiddle looks like one posted scott", "d": "12/2016"}, {"body": "wanted share another solution provided user answer relative question stackoverflow note adding removing something original array call vmsetvalue method", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "since closed worth reiterating current decision short feature trivial implement observation mechanism level justifying use cases amount work tradeoffs would really appreciate feature hand observing data types becomes terribly hacky example compromise performance qualities people currently use maps sets vue might appreciate change", "d": "12/2016"}, {"body": "ended making bunch components drop slots something like header content mixin provide access common components set styling component drop need instead remember exact styling stuff use case decent compromise slotted component nt need know slotted nt keep dropping classes components time", "d": "12/2016"}, {"body": "would great nativescript support vue added vote vue support nativescript ideas site ideas idea vue look idea called vuejs support nativescript add vote votes time writing", "d": "12/2016"}, {"body": "would useful forms especially since nt support initial values", "d": "12/2016"}, {"body": "sure think however sure better explain mean nt support initial values scott", "d": "12/2016"}, {"body": "referring first notice red thing documentation refers attribute inputs", "d": "12/2016"}, {"body": "warning saying nt data initialized front vmodel wo nt know show form input fields words data initialized default value assign value property within data option form rendered vmodel also show initial value form fields scott", "d": "12/2016"}, {"body": "seems encounter similar issue solution use watch instead watch option watch return handler function call want stop watch watch value terrible", "d": "12/2016"}, {"body": "issue think fix simple use watch function decide would like call method", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "something like props validation events", "d": "12/2016"}, {"body": "see filters contextaware always way access inside filter function", "d": "12/2016"}, {"body": "xpepermint intentional change filters pure transforms try explicitly pass state filter arguments", "d": "12/2016"}, {"body": "thx", "d": "12/2016"}, {"body": "case anyone finds issue google searching thing vue figures interpolation props removed like proper way simply", "d": "12/2016"}, {"body": "helgesverre thanks lt", "d": "12/2016"}, {"body": "made example also importing templates could use async components templateurl property yet", "d": "12/2016"}, {"body": "using way way set watcher reactive data created dynamically", "d": "12/2016"}, {"body": "luqmanrom familiar inner workings vue watcher believe anything created vueset watched could add code watch dynamic props emit evens changes seep watch target object someone else might better suggestion", "d": "12/2016"}, {"body": "vue templates need valid html self closing tags xhtml syntax outdated never use see using tags selfclosing invalid though far know valid example even question link nt say never used able handle valid xhtml least wellformed xml actually quite important since still good serverside template engines tools rely xml xhtml xml actually help structure prepostprocessing depending overall build environment", "d": "12/2016"}, {"body": "harbulot fyi selfclosing tags works long nt use indom templates", "d": "12/2016"}, {"body": "looking feature well three variables binded three input elements form need listen changes three variables update canvas third party library using pass array variables would trigger single function seem like simplest solution anyone another solution nt want rely pluginown code modifying simple case", "d": "12/2016"}, {"body": "form seems sensible enough implement hard document", "d": "12/2016"}, {"body": "would build computed property derived desired properties watch update skip performance penalty allocating discarding array commaseparate dependent values finally return something always different taking comments linters might complain perfectly valid js", "d": "12/2016"}, {"body": "possible vuejs tried sample got datepicker displayed nt set data underlying model edit ok got okay nt get nt update die model", "d": "12/2016"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "try html script var datatableresult var columns var vm download table default data datatableresult articul dateadd discount groupid img price productid retail viewing visible wholesale wholesaleamount sorry english", "d": "12/2016"}, {"body": "another hack wait next tick", "d": "12/2016"}, {"body": "want change images get vueresource placeholder image use result blank space ok problem images link provide success got blank solution thanks", "d": "12/2016"}, {"body": "got solution link use vue directive anymore perfect solution espesially vuejs function imgerror source sourcesrc noimagegif sourceonerror return true", "d": "12/2016"}, {"body": "post old im similiar issue case im getting bad request image source binding images want load employees every property loads fine get image vue seems encoding string navigate url without image gets loaded reason tacking", "d": "12/2016"}, {"body": "surgiie images content white space first character url encode mean white space true try images load code looks like bellow methods vue scope vue directive", "d": "12/2016"}, {"body": "hello still new vuejs method nt work vue", "d": "12/2016"}, {"body": "available mediumeditor compatible greenapple need plugin", "d": "12/2016"}]