[{"title": "datareactid property", "body": "hi many projects written reactjs one project datareactid property existing others existing", "num": "12128", "d": "1/2018"}, {"title": "fix secure origins allowed nginx", "body": "nt want use thanks", "num": "12125", "d": "1/2018"}, {"title": "unexpected dom elements list rendering duplicate keys", "body": "want request feature report bug reporting bug current behavior unexpected dom elements list rendering current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example switch tabs unexpected dom elements expected behavior unexpected dom elements versions react browser os affected issue work previous versions react tested react gt extra elements react duplicate keys mistakes dom elements anyway", "num": "12124", "d": "1/2018"}, {"title": "concating react resources", "body": "hi want use many libraries frameworks project concat react framework like angular vue ember", "num": "12122", "d": "1/2018"}, {"title": "add seo support reactjs without using ssr", "body": "hi team currently working seo reactjs applicationso thinking add different meta tags route figured using ssr converting applications use ssr seo support good option tia", "num": "12121", "d": "1/2018"}, {"title": "know onerror resons", "body": "", "num": "12120", "d": "1/2018"}, {"title": "error deployed react website using react error", "body": "visit full message use nonminified dev environment full errors additional helpful warnings", "num": "12119", "d": "1/2018"}, {"title": "automatically assigning keys", "body": "want request feature report bug want request feature current behavior currently developer manually assign key element array even knows elements array order change expected behavior simply prefer fourth methods second method may lead conflicts third method makes feel dirty things touching internal cogs react versions react browser os affected issue work previous versions react react browser os relevant", "num": "12113", "d": "1/2018"}, {"title": "error save component ref state", "body": "want request feature report bug bug current behavior error save component ref state current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior seems like ref callback called many times every time different argument fix problem nt know versions react browser os affected issue work previous versions react react", "num": "12112", "d": "1/2018"}, {"title": "document use setstate componentwillunmount", "body": "want request feature report bug feature current behavior excerpt documentation componentwillunmount invoked immediately component unmounted destroyed perform necessary cleanup method invalidating timers canceling network requests cleaning subscriptions created componentdidmount docs nt mention used consider following example undone timer time since timer invalidated place reset state class helloworld extends component state showgreeting false onclick thissetstate showgreeting true componentwillunmount cleartimeout thistimer legal call given asynchronous feels may invoked component actually unmounted may produce warning understanding actually pumps state dispatch queue manually ensure state changes land component late current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior sure versions react browser os affected issue work previous versions react webkit", "num": "12111", "d": "1/2018"}, {"title": "router react", "body": "hi using packages like reactrouter reactrouterdom react default router npm packages like reactrouter reactrouterdom part react", "num": "12110", "d": "1/2018"}, {"title": "input accounted form", "body": "want request feature report bug bug current behavior inputs rendered react controlled uncontrolled accounted submitting forms instance html amp whereas html jsx function myinput props return ca nt get fully working example codesandbox requires looking resulting http request jquery serialize form expected behavior second example produce react components usable regular forms note browser inspectors show expected react rendered inputs however seems attribute uses getters setters inputs whereas plain html inputs strings versions react browser os affected issue work previous versions react react tested chromium firefox archlinux", "num": "12108", "d": "1/2018"}, {"title": "reacttestrenderer totree yet know handle nodes", "body": "want request feature report bug bug current behavior invariant violation totree yet know handle nodes expected behavior returns tree versions react browser os affected issue work previous versions react", "num": "12106", "d": "1/2018"}, {"title": "ca nt edit wiki", "body": "hello ca nt edit wiki add website list editing disabled", "num": "12104", "d": "1/2018"}, {"title": "setstate callback never called component state nt update production", "body": "using react running strange behavior things work fine locally production using meteor stops working noticed callback never called dom nt reflect changes devtools nt reflect changes calling nt anything hand returns object correct updated state returns object correct updated state sure problem side somehow fairly complex component nt even write make matters worse thought maybe could get tips go along debugging frustrating issue", "num": "12102", "d": "1/2018"}, {"title": "access component child instance", "body": "creating small generic state management based object writing react helper found issue create hoc need access react looking source code component nt seem like canshould standalone function library able used independently making everyone download react feasible navigated official hoc documentation past issues google could nt find way retrieve passed component hoc code working yet repo linked js load whole react independently project type import component react const connect opts gt passed gt return class withstate extends component export default connect find hack make work seems like one fragile pieces code ever written relying differences modules commonjs js const connect opts gt passed gt const react require react return class withstate extends reactcomponent export default connect way import react used reactexclusive helper library questionfeature request possible access constructor parent child could make possible somehow something like would ideal think way javascriptreact works figured ask since chances know way better whether something like possible want request feature report bug request feature think", "num": "12101", "d": "1/2018"}, {"title": "extend classname manipulation", "body": "currently string manipulation outside react starring classnames works perfectly writing code feels little verbose jsx prop plain string directly mapped dom element property let create polymorphic frankenstein keep close pure jsdom possible suggestion changing adding since long time ago microsoft dom element method works greatly direct manipulation would nt fit jsx declarative syntax extending components prop would work pretty much like classnames mapping class names keys conditional values upon rendering component react would merge single string passed render good old plain string angular something like long time prop plain string ngclass directive makes magic", "num": "12099", "d": "1/2018"}, {"title": "ca nt use reactfragment", "body": "want request feature report bug bug current behavior broken runtime current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example use syntax render mapped fragments try render component get met error expected behavior expect component render works fine rendering array nt want type comma elements also works fine use semantically correct versions react browser os affected issue work previous versions react react chrome version official build mac", "num": "12097", "d": "1/2018"}, {"title": "typeerror read property state undefined createreactclass", "body": "currently attempting create button red text yes click button changes green color text confirm final stage action takes place currently defining state changes click button initial color final color click however currently getting error typeerror read property state undefined pointing line whenever code compiled webpage defining initial state behavior click code inside table render anyone ideas brand new react apologize obvious also learned react using createclass trying piece together make work new package advice greatly appreciated react chrome", "num": "12096", "d": "1/2018"}, {"title": "trying run createreactapp command", "body": "f createreactapp helloworld creating new react app f installing packages might take couple minutes installing react reactdom reactscripts npm err unexpected end json input parsing near dirrecursive npm err complete log run found npm err c aborting installation npm install save saveexact loglevel error react reactdom reactscripts failed deleting generated file packagejson deleting helloworld f done npm version", "num": "12095", "d": "1/2018"}, {"title": "error event fired twice development mode", "body": "want request feature report bug bug current behavior error event fired twice development mode example see gt gt gt gt gt error logged twice expect see note issue nt happen production version react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codepen demo static html reproducing problem hello world", "num": "12093", "d": "1/2018"}, {"title": "native ecmascript module react reactdom", "body": "want request feature report bug probably feature request since root considering build tooling questions proceed efforts current behavior native ecmascript module output current build tools nt easily allow adding native ecmascript module build target investigating workflow using native ecmascript module version react reactdom browsers found implementation outputs native ecmascript modules one use wrapped version transpiled versions added export statements transpiling would necessary browsers supporting ecmascript modules natively even spread operators supported browsers although fully supported ast generators tools due fact spec nt finalised test projects different build tools built simple proof concept outputs ecmascript modules used modern browsers challenge question tools settings used poc contradict current build settings tools wondering something added build target something better suitable external repo time would love make happen would like hear something deemed worth would preferred way implementing investigation find easy way without changing considerable amount code build tooling making relatively high risk endeavour webpack vs rollup different settings needed babel named exports instead commonjs moduleexports pattern name effects build process make somewhat complex clarify things links poc repo outputs native ecmascript modules react reactdom repo minimal setup test working app made modules browser expected behavior preferably build target native ecmascript modules versions react browser os affected issue work previous versions react relevant", "num": "12091", "d": "1/2018"}, {"title": "use setstate componentwillreceiveprops", "body": "use js componentwillreceiveprops nextprops thissetstate key value thisdowhatever dowhatever const thisprops new propsold propsnextpropsthisprops", "num": "12090", "d": "1/2018"}, {"title": "debug renderphase side effects strictmode dev", "body": "relates pr currently doubleinvoke component reducer functions feature flag also inside subtree however likely new element present production apps believe important negatively impact performance strict warnings like warnings impact dev mode doubleinvoked lifecycles impact dev prod actually good thing facebook since helps us identify potential bugs production easily limit impact developers think would complicate story external users negative performance impact propose continue observe flag dev prod since impacts facebook doubleinvoke strict mode dev enabling behavior greatly complicates incremental rendering tests see also converting internal explicitly override featureflag running think okay since tests break use nooprenderer published npm", "num": "12089", "d": "1/2018"}, {"title": "question react app embedded div container setstate refreshes container", "body": "observed peculiar behavior unsure whether design issue specific environment basically react app rendering div included web container trigger component local state change calling setstate whole web component page refreshed thus loading react app scratch loosing app state expecting setstate refresh app whole page nt expected behavior proper way react scenario thanks advance", "num": "12087", "d": "1/2018"}, {"title": "remove componentchildcontexttypes componentcontexttypes proptypes requirements context", "body": "since currently undergoing work context api feel like may good time bring projects design decision use internal components made early assumption use may well go whole way use well enforcing declaration single react feature nt make much sense optional required get around enforcement components end looking like following javascript makecontextjs import proptypes proptypes const makecontext keys gt const obj keysforeach key gt obj key proptypesany return obj export default makecontext javascript contexttypesjs import makecontext makecontext export default makecontext somevalue someothervalue javascript parentcomponentjs import contexttypes contexttypes import childcomponent childcomponent class parentcomponent extends reactcomponent getchildcontext return somevalue someothervalue false render return parentcomponentchildcontexttypes contexttypes javascript childcomponentjs import contexttypes contexttypes const childcomponent props somevalue gt somevalue childcomponentcontexttypes contexttypes see declaration essentially pointless yet forced api enforces seems much like developer decide whether rule enforced", "num": "12086", "d": "1/2018"}, {"title": "feature request middleware", "body": "incomplete draft feature think could really cool replace higher order components context way think component spirit react know feature feasible desirable react especially would lead bigger api surface proposal written documentation give feel would use react middleware middleware applied somewhere component tree instantiated child components instantiated mount context child components means child components depth middleware used like normal components works slightly differently middleware element used added middleware stack already middleware stack removed stack pushed end innermost props simplified example addition actual classes stack also includes recent props roughly works lifecycle methods additions existing lifecycle methods mounting new middlewareshouldmiddlewaremount new middlewareshouldmiddlewarepropagate component constructor new middleware constructor new middleware middlewarewillmount component componentwillmount component render new middleware interceptrender component componentdidmount unmounting new middleware middlewarewillunmount static shouldmiddlewaremount reactcomponent determine current middleware apply component method nt implemented middleware always applied middleware middleware stack method called every time component constructed example javascript class transforminlinestyles extends reactmiddleware mount middleware set transforminlinestyles truthy value children given component still enable middleware static shouldmiddlewaremount component return componenttransforminlinestyles const props gt const b props gt btransforminlinestyles true const app gt applied applied b static shouldmiddlewarepropagate reactcomponent determine whether middleware remain middleware stack excluded subtree given component specified returns false words default behavior middleware propagate useful want limit middleware affecting deeply nested children also useful giving middleware access immediate children example javascript import react react class providetheme extends reactmiddleware static stoppropagation props gt propschildren static shouldmiddlewarepropagate component return component thisstoppropagation const app gt middleware stack providetheme middleware stack b middleware stack c providetheme middlewarewillmount reactinstance called child component calls componentwillmount good place initialize state middleware instance middlewarewillunmount reactinstance called child component calls componentwillunmount example na\u00efve example could used trigger automatic updates mobx javascript class observer extends reactmiddleware middlewarewillmount reactinstance thisdispose autorun gt middlewarewillunmount reactinstance stop listening changes mobx thisdispose interceptrender children interceptrender called result render function component resulting value used render dom example example middleware transforms object classes string result works similarly ngclass works angularjs javascript class objectclassnames extends reactmiddleware life cycle method intercept render method recursively loop children performing thistransformprops props interceptrender children return reactchildrenmap children child gt reactisvalidelement child return child return child props thistransformprops childprops children thisinterceptrender childchildren child object classname call thistransformclassname transformprops props props propsclassname typeof propsclassname object return props concatenate truthy keys classname object string transformclassname classname const result const widget props gt const app gt middleware react middleware replace two problematic patterns used react context context react docs says use context context however useful feature people continue use abuse forseeable future react router started abusing context recent version shows clearly need middleware propose would able inject props arbitrary subtree app performance implications would ideal scenario libraries react router relevant props context rarely changes middleware shouldcomponentupdate still function like would expect higher order components primal rule programming dry using mobx react must use observer decorator reactive classes nt really big deal include would reduce size every single observer component two lines importantly would nt forget creating higher order component static properties longer available package hoistnonreactstatic designed able access static properties higher order components transparently static property initialized lifecycle methods component however proxied creating higher order components also messy affair middleware could achive thing react way replace connect reactredux could set shouldmiddlewarepropagate return false would affect one component alternatively could use static properties mapstatetoprops mapdispatchtoprops", "num": "12085", "d": "1/2018"}, {"title": "automatically fix javascript errors pull requests", "body": "run sticklerci service aimed improving code quality simplifying code review automating code feedback pull requests launched autofixing javascript pull request commits javascript open source project service save time brain power automatically fixing style errors interested trying product submit pull request configuration file maintainer need enable webhooks logging enabling webhook thank", "num": "12079", "d": "1/2018"}, {"title": "image srcset bug", "body": "hi problems img tag srcset inside small components function latestgriditem item const id itemid const title itemtitle const name itemname const posterpath itembackdroppath const testposterpath const postersrc const srcset return processenvpublicurl movie id gt title undefined title name failed parsing srcset attribute value since unknown descriptor setvalueforattribute setvalueforproperty setinitialdomproperties setinitialproperties finalizeinitialchildren completework completeunitofwork performunitofwork workloop callcallback invokeguardedcallbackdev invokeguardedcallback renderroot performworkonroot performwork requestwork scheduleworkimpl schedulework enqueuesetstate nodemodulesreactcjsreactdevelopmentjscomponentsetstate anonymous anonymous promise resolved async srcapitmdbapijstmdbapigetmoviesnowplaying homethisgetnowplayingmovies componentwillmount callcomponentwillmount mountclassinstance updateclasscomponent beginwork performunitofwork workloop callcallback invokeguardedcallbackdev invokeguardedcallback renderroot performworkonroot performwork requestwork scheduleworkimpl schedulework scheduletoplevelupdate updatecontainer anonymous unbatchedupdates rendersubtreeintocontainer render srcindexjs webpackrequire bootstrap fn bootstrap mediascss webpackrequire bootstrap anonymous bootstrap anonymous bootstrap dropped srcset candidate autoprefixer babelcore babeleslint babeljest babelloader babelpresetreactapp babelruntime casesensitivepathswebpackplugin chalk cssloader dotenv eslint eslintconfigreactapp eslintloader eslintpluginflowtype eslintpluginimport eslintpluginreact extracttextwebpackplugin fileloader fsextra htmlwebpackplugin jest lodash nodesass objectassign postcssflexbugsfixes postcssloader promise raf react reactautosuggest reactdevutils reactdom reactgooglematerialicons reacthelmet reactrouterdom reacttransitiongroup sassloader styleloader swprecachewebpackplugin urlloader webpack webpackdevserver webpackmanifestplugin whatwgfetch need help thank", "num": "12077", "d": "1/2018"}, {"title": "update rolluppluginnoderesolve", "body": "want request feature report bug feature current behavior update rolluppluginnoderesolve external option instead noderesolve getplugins createbundle rimraf processtickcallback expected behavior like use rolluppluginnoderesolve debian packaging react dependency gitlab aptget install gitlab works setup gitlab server pr removed option versions react browser os affected issue work previous versions react dependent react version build dependency", "num": "12076", "d": "1/2018"}, {"title": "expose component methods", "body": "want request feature report bug request feature current behavior methods components exposed expected behavior would like able expose methods component used container component done attribute similar ref like example expose example imagine car component wheel component car would like rotate wheels using method wheels expose cars something like class car extends component constructor props super props rotatewheels thiswheelsrotate render return class wheels extends component constructor props super props thisstate wheelrotation rotatewheels angle thissetstate wheelrotation angle render const wheelstyle transform return versions react browser os affected issue work previous versions react versions browsers", "num": "12074", "d": "1/2018"}, {"title": "fabric todos", "body": "notes spillovers fabric renderer commit update currentprops updates commit phase needs host effect marked need hook host updates persistent mode x actually use currentprops extracting events component tree resuming need able reuse host nodes used another thread always clone direct siblings changed node case relayout", "num": "12073", "d": "1/2018"}, {"title": "controlled fields rerender setstate call even though data changed", "body": "want request feature report bug reporting bug current behavior basically many controlled fields app currently developing normally want rerender values changed onchange event rerender every time setstate gets called anywhere within component parent component even tried creating custom component contains setting shouldcomponentupdate return false seems ignore command completely weird case consolelog child component render function nt get executed field gets rerendered nonetheless issue causing major performance problems app hope someone addresses issue fast possible continue working react project maybe someone provide temporary workaround please let know something missing using field incorrectly current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example isolated problem new empty app see behavior following gif code simple recreate problem creating controlled fields one another go browser inspect element input something basic input field rerender every new typed letter field way around javascript import react component react import logo logosvg import appcss class app extends component constructor props super props thisstate thishandleinputchange thishandleinputchangebind export default app expected behavior field rerender data changed versions react browser os affected issue work previous versions react able recreate problem react versions latest test versions sure worked correctly using chrome latest firefox latest ubuntu", "num": "12072", "d": "1/2018"}, {"title": "question react fiber using gpu", "body": "hi react team clovispro react want enhance react performances quite old phones tablets sometimes multicomponent updates could slow phone make ux uncomfy normal basic javascript uses cpu old hardware low cpu enhance react performances made update react fiber directly allow javascript run gpu know libraries make global hack thanks wink ps gpu already used css make animations smoother", "num": "12071", "d": "1/2018"}, {"title": "react bug", "body": "want request feature report bug report bug current behavior upgrade react safari browser console print bug undefined object evaluating jareactcurrentowner map constructor accept arguments current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example react safari browser look console bug expected behavior nt console mistake versions react browser os affected issue work previous versions react react", "num": "12070", "d": "1/2018"}, {"title": "react test utils nt reset form inputs upon simulated reset button click", "body": "want request feature report bug bug current behavior one components form inputs reset button tests find button simulate click none inputs reset reproduction see component shows test shows expected behaviour nt occur expected behavior simulated click reset button causes inputs form reset versions react browser os affected issue work previous versions react react reactdom testing jest", "num": "12067", "d": "1/2018"}, {"title": "rendering via jsx vs function call", "body": "rendering via significantly faster plans near future within next months perhaps optimise functional components perform optimisation avoiding jsx nonhtml elements", "num": "12066", "d": "1/2018"}, {"title": "problem input type changes email text", "body": "want request feature report bug bug current behavior input field changes email text exception typeerror thrown setselection reproduction see expected behavior crash uncaught exception versions react browser os affected issue work previous versions react master firefox would proposed change fix issue", "num": "12062", "d": "1/2018"}, {"title": "onchange event checkbox firing circumstances", "body": "sure likely lack knowledge fact started fiddling react couple weeks ago might hint anyway code meant display checkbox javascript import react react import connect reactredux import fetchsettingsifneeded updatesetting actionssettings class adjustids extends reactcomponent settingkey autoadjustids function mapstatetoprops state const settings settingsreducer state const isfetching didinvalidate settingsreducer isfetching true const mapdispatchtoprops dispatch gt fetchsettings key defaultvalue gt dispatch fetchsettingsifneeded key updatesetting key value gt dispatch updatesetting key value export default connect mapstatetoprops mapdispatchtoprops adjustids even probably relevant clarity data read written rest calls code mostly based back specific case checkbox supposed fire event clicked happens long initial state case every time click checkbox called instead initial state click called clicking call moment everything works flawlessly callbacks called data updated refreshed expected problem initial state tried many possible combinations see different scenario may cause problem seems case tried check something wrong controlleduncontrolled components far freshness react allows looks like supposed handle versions react browser os affected issue work previous versions react current dependencies need cleanup tried chrome firefox let know need additional detail thought probably needed also share project would nt work box work extend backend wordpress plugin", "num": "12061", "d": "1/2018"}, {"title": "source makes component stack less useful", "body": "want request feature report bug somewhere current behavior enable automatically add prop every component development component stack displayed certain react warnings changes displaying inferred name rendering component displaying filename line number occurrence react also access file path stripped filename included seems based assumption name file always maps exactly name component exports practice many people place components currently makes stack less useful example compare expected behavior would like stack include full file path least include inferred component name alongside filename would accept pr either option versions react browser os affected issue work previous versions react react introduced", "num": "12058", "d": "1/2018"}, {"title": "prop never invoked", "body": "want request feature report bug bug current behavior never invoked cc belak jquense current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reported back closed issue appears present react able reproduce simple case least chrome expected behavior invoked result log well value displayed beneath input codesandbox link versions react browser os affected issue work previous versions react reproduces issue appears date back earlier based prior issues thanks let know anything else clarify", "num": "12056", "d": "1/2018"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12055", "d": "1/2018"}, {"title": "simple react page working", "body": "created helloworld app using react typescript outputs correctly chrome firefox etc view app nothing appears upon checking devtool ie also blank nt really know working code import babelpolyfill import import react react import render reactdom export class helloworld extends reactcomponent lt gt render return hello world render documentqueryselector app webpackconfigjs const webpack require webpack const cleanwebpackplugin require cleanwebpackplugin moduleexports entry srcapptsx output filename appjs path dirname dist c workspacerucwebtflgovuksourcetflrucwebcdnstaticscriptsulezsamplecodehelloworldtsx enable sourcemaps debugging webpack output devtool sourcemap", "num": "12052", "d": "1/2018"}, {"title": "event handlers fragments", "body": "use case abstraction wants listen event bubbling intercept event somehow perhaps state context involved works fine today long wrap however ca nt necessarily always hear relaxed conceptually think constraints remain many environment nt want wrapper element around js b js b b would nice able use fragments easy implement synthetic event system suspect doable approaches including inserting element called dom implement need somewhere store current props use fragment fibers hold also need schedule commit phase effects whenever set event handlers fragment changes commit phase update statenode fibers hold current props way bubble fiber return pointers know statenode holds current set props ones extract event handlers", "num": "12051", "d": "1/2018"}, {"title": "write blog post showing recommended asyncsafe coding patterns", "body": "follow item pr relates show examples accomplish common tasks asyncfriendly way using new component api also show examples illustrate pitfalls eg calls", "num": "12048", "d": "1/2018"}, {"title": "write blog post new async unsafe static lifecycles", "body": "follow item pr blog post correspond release primary purpose let people know prepare subsequent release application developers post explain run codemod rename deprecated methods well general strategies use new lifecycle instead library maintainers provide recommended update release strategies including kinds code moved remain backwards compatible vs needs either remain moved new method peer dependency version changes required versions react support new methods", "num": "12047", "d": "1/2018"}, {"title": "update debugrenderphasesideeffects behavior", "body": "follow item pr x phase within context async tree doubleinvoke following methods updater functions current implementation also doubleinvoke several additional methods eg willmount willupdate scu etc behavior removed x phase also add devwarning detect components within async tree contain following methods", "num": "12046", "d": "1/2018"}, {"title": "npm recognized internal external command operable program batch file", "body": "current behavior createreactapp myapp creating new react app c usersswoledaddybuffneckmyapp npm recognized internal external command operable program batch file installing packages might take couple minutes installing react reactdom reactscripts npm recognized internal external command operable program batch file aborting installation npm install save saveexact loglevel error react reactdom reactscripts failed tried everything sun including uninstalling reinstalling node npm createreactapp package switching different version every variation add npm path could find internet dont usually issues npm use several projects seems work fine figure happening could actually install react reactdom manually tried installing reactscripts didnt output anything ctrlc get console back understand forum npm described dont issue projects works fine literally anything else help would greatly appreciated", "num": "12045", "d": "1/2018"}, {"title": "coalesce warnings deprecated lifecycle hooks", "body": "coalesce warnings deprecated lifecycle hooks print single message reconciliation rather one per componenttype relates pr comment", "num": "12044", "d": "1/2018"}, {"title": "highlight production bundles bold danger integration comment", "body": "added integration danger shows bundle size difference prs like change output production bundles bold results think also remove red triangle increase development bundles important", "num": "12043", "d": "1/2018"}, {"title": "strange warning proptype marked required format", "body": "component following proptypes javascript componentproptypes media proptypesshape proptypesany componentdefaultprops media initially set prop required changed nonrequired still console show warning see prop name identifying required option adding isrequired think bug faced several times app never got working properly work arround change proptypes help idea great", "num": "12042", "d": "1/2018"}, {"title": "suppress message download react devtools", "body": "featurebug current behavior react library logs either download react devtools better development experience logs warning installed version react devtools old work current version react please update react devtools previous fix employed reproduce run react site without production flag without react devtools extension installed expected behavior log output versions react react tried according comment following work react gt however changes log warning installed version react devtools old work current version react please update react devtools fixes stackoverflow yield results also plugin nt work installing nt option least tldr loving react logging install note tad annoying previous fixes nt seem work please provide option disable log", "num": "12041", "d": "1/2018"}, {"title": "react support feature like keepalive vue", "body": "found issue sophiebits said react never reuses instance unmounted means react never support feature like keepalive vue way maintain component state", "num": "12039", "d": "1/2018"}, {"title": "add reactisfragment api verifying fragment", "body": "want request feature report bug want request feature current behavior api verify reactnode react fragment though use distinguish verbose seems uncertianly right expected behavior add api verifies object reactfragment returns true false versions react browser os affected issue work previous versions react react", "num": "12038", "d": "1/2018"}, {"title": "bug createportal element children nt print correct clientheight properties etc", "body": "want request feature report bug could bug current behavior children div inside element created using createportal show correct clientheight scrollheight properties shows scrollheight consolelogged demo current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior get correct scrollheight etc properties versions react browser os affected issue work previous versions react", "num": "12035", "d": "1/2018"}, {"title": "componentdidupdate fires ref set react", "body": "want request feature report bug bug current behavior fires current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open console see going pasting code safekeeping jsx import react react import reactdom render reactdom import hello hello const styles fontfamily sansserif textalign center const app gt componentdidupdate vs ref timing issue class combobox extends reactcomponent class bodyend extends reactpurecomponent render documentgetelementbyid root expected behavior fire example open console see supposed reference nt set yet supposed fire component rendered called versions react browser os affected issue work previous versions react react chrome ubuntu yes worked fine react details sounds lot like issue reported bountysource reactbootstrapreactbootstrap gaearon commented nt look like filed issue react manage produce sscce reporting", "num": "12034", "d": "1/2018"}, {"title": "refs must owner warning", "body": "reporting bug problem interplay several packages feel package actually something wrong react versions react also happened nodejs electron windows current behavior get error message although none three explanations true actually react loaded twice version little prevent happens far understand application imports react two ways application react application nodemodulesmyapi react get react module path however myapi module installed via yarn link caseinsensitive filesystems yarn link cause file path different caseing ie application c application resolved link node uses via require c application case drive letter changes api everything required api even though call require react times end importing c applicationnodemodulesreact c applicationnodemodulesreact obviously thing yet means react loaded twice ref triggering error also added reactbootstrap adds stringref code bug using different react versions different case importing react code reactbootstrap nt anything wrong string refs still allowed node nt anything wrong since documents require nt guaranteed always return instance yarn nt anything wrong caseinsensitive filesystem nothing wrong using different cases drive letter link source link target react however relies require always returning instance ca nt expected behavior react nt rely behavior documented unreliable", "num": "12033", "d": "1/2018"}, {"title": "onpaste event firing wrong target", "body": "want request feature report bug bug current behavior pasting string either input fields one type date text result console pasting either input eventtarget input typetext expected behavior event target input type date pasting date input likewise type text versions react browser os affected issue work previous versions react chrome version official build firefox paste event trigger input typedate", "num": "12031", "d": "1/2018"}, {"title": "children treat reactfragment array", "body": "traversing children treats fragments standalone elements instead traversing children impression convenience equivalent arrays traversed", "num": "12026", "d": "1/2018"}, {"title": "possible set optional property purecomponent using typescript", "body": "bug current behavior creating interface optional key trying set type props also using datails stackoverflow expected behavior possibility set somehow optional props versions react browser seems extends require type allows optional keys like instead", "num": "12022", "d": "1/2018"}, {"title": "add referrerpolicy iframe react", "body": "property referrerpolicy exist type detailedhtmlprops htmliframeelement see react reactdom", "num": "12021", "d": "1/2018"}, {"title": "time parent component updated passed child component different", "body": "version reactfiberclasscomponentjs piece code think logic judge called test class app extends reactcomponent static proptypes name proptypesstring componentdidmount call setstate make app update thissetstate test nothing render return class child extends reactcomponent constructor super thisstate equal true componentwillreceiveprops nextprops nextprops thisprops thissetstate equal false render return newprops oldprops equal thisstateequal reactdomrender documentgetelementbyid container newprops oldprops equal truethe newprops oldprops equal falseprops passed child component different", "num": "12018", "d": "1/2018"}, {"title": "custom html tags", "body": "want request feature report bug bug current behavior upgrading react getting lot warnings custom html tags expected behavior warnings appear versions react browser os affected issue work previous versions react browser working", "num": "12016", "d": "1/2018"}, {"title": "bug wrong render output children textnode", "body": "seems bug react child node textnode render correct output steps reproduce jsfiddle expected output hello hello hello react rendered hello hello hello rendered output matching console log however textnode removed working expected see fiddle adding text node hello numbers causes unexpected output tested react", "num": "12015", "d": "1/2018"}, {"title": "fragments support dangerouslysetinnerhtml", "body": "addition fantastic helps keep html semantic clean unfortunately still way inject html without wrapping tag jsx const html hello world render html hello world would mostly helpful rendering html jsx back end rather spa context seems ideal candidate support may inject html without wrapping elements jsx const html hello world would render simple obvious aligned current api", "num": "12014", "d": "1/2018"}, {"title": "value input updatedcleared undefined value", "body": "trying clear values inputs undefined values setup demo page basically set render button clears input nt put default value searching issues nt find similar issue use case huge form predefined values update form try reset inputs cleared thanks help", "num": "12013", "d": "1/2018"}, {"title": "reactchildrentoarray reactcloneelement work portal elements", "body": "want request feature report bug bug undefined behaviour current behavior fails namely following complete snippet fails jsx import react react import render createportal reactdom const renderchildren children gt children reactchildrentoarray children return renders children toarray children const app gt createportal rendered portal documentgetelementbyid portal render documentgetelementbyid root following one wraps portal another element works fine jsx import react react import render createportal reactdom const renderchildren children gt children reactchildrentoarray children return renders children toarray children const app gt createportal rendered portal documentgetelementbyid portal render documentgetelementbyid root createportal new feature best case scenario possible use everywhere valid nodes accepted thing happening probably weird try clone portal maybe specify documentation cloned least open pr let know thoughts versions react browser os affected issue work previous versions react using react", "num": "12012", "d": "1/2018"}, {"title": "create property nonextensible object syntheticevent ie", "body": "want request feature report bug bug current behavior error thrown ie error message states create property nonextensible object originates following location file reactpackageseventssyntheticeventjs current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior errors versions react browser os affected issue work previous versions react version number reactdom possibly related", "num": "12011", "d": "1/2018"}, {"title": "events missing master simulatenative", "body": "see comment really documented people might rely need fix", "num": "12009", "d": "1/2018"}, {"title": "angularjs injector equivalent", "body": "current behavior documented way easily manipulate componentsstateprops thirdparty perspective expected behavior expected behavior mechanism similar angularjs injector allows additional compilation bootstrapping versions react knowledge affected issue tried reverseengineering react dev tools browserifying longterm sustainable solution constant updates made react codebase use cases time enterpriselevel multiparty deployment thirdparty wants modify presentationdata eg deploying ab tests clientside would ideal integrate code part mainbackend deployment unless ab test performs better control easily allowing thirdparty integrations eg browser extensions editing clientside presentation utilizing model data time something needs deployed frontend quickly without tied release cycles backend code time third party wants modify something without required onboarded contractor due sensitive sensitive private data ie pii hipaa etc frontend unit testing", "num": "12007", "d": "1/2018"}, {"title": "getting minification warnings even defineplugin uglifyjsplugin", "body": "hello scoured issues ca nt figure warning still around feels like done everything setup build scripts var config extend baseconfig configpluginspush new webpackdefineplugin processenvnodeenv jsonstringify production new webpackoptimizeuglifyjsplugin mangle true compress warnings false output comments false exclude minjs gi new webpackoptimizededupeplugin plugins using react webpack sure missing defineplugin uglifyjsplugin seem declared properly set production script help would greatly appreciated thank", "num": "12003", "d": "1/2018"}, {"title": "add reactchildrenisrenderable", "body": "want request feature report bug feature motivation given component gets props eg accepts props redux store via hoc renders either react node condition based data context would helpful know outside component whether renders markup would let us render wrappers component visible usage example let say wraps every child add margins borders animation etc nt accept props gets everything without checking renders markup get empty visible wrapper first third children thus break styling reactchildrenisrenderable would allow us easily filter children without ui x could achieve behavior passing handler condition switch connected component approach would break encapsulation suitable library components toggle renderability internally theoretically could use css pseudo selector though supported yet browser setting property would result rendering invisible nodes wrapped would nt able hide styling could try manually find node dom nt exist remove sound messy violates react declarative nature also data dynamic usually would hide components data still way server might never reveal loaded maybe could mess", "num": "12002", "d": "1/2018"}, {"title": "dangerouslysetinnerhtml", "body": "dangerouslysetinnerhtml currently uses according googles recommendations better replaces something like affect performance could done versions react browser os affected issue work previous versions react react os ubuntu browsers think", "num": "12001", "d": "1/2018"}, {"title": "react copies default checkbox value attributes", "body": "want request feature report bug report bug current behavior react sets via attributes defaultvalue inputs value current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example actual react expected vanilla dom expected behavior value attribute empty unless passed via props versions react browser os affected issue work previous versions react react browser", "num": "11998", "d": "1/2018"}, {"title": "npm test fails using expectcreatespy reacttestutilssimulatesubmit", "body": "want request feature report bug report bug current behavior npm test fails using expectcreatespy reacttestutilssimulatesubmit current behavior bug please provide steps reproduce possible minimal demo app countdownform component component creates input form input number total number seconds component returns formatted version number minutes seconds component works fine project giving desired output test fails code countdownform component import react react import createreactclass createreactclass contents test file component following reacttestutil simulate doc expectcreatespy doc import react react import reactdom reactdom import expect createspy spyon isspy expect import jquery import countdownform countdownform import reacttestutils reactdomtestutils describe countdownform gt call onsetcountdown valid seconds entered gt var spy expectcreatespy var countdownform reacttestutilsrenderintodocument var el reactdomfinddomnode countdownform npm testreacttestutilssimulatesubmit elfind form summary tests completed tests failed failed tests countdownform call onsetcountdown valid seconds entered chrome linux error script error objectinvokeguardedcallbackdev webpackinternal objectinvokeguardedcallback webpackinternal objectinvokeguardedcallbackandcatchfirsterror webpackinternal executedispatch webpackinternal executedispatchesinorder webpackinternal executedispatchesandrelease webpackinternal executedispatchesandreleasesimulated webpackinternal foreachaccumulated webpackinternal objectprocesseventqueue webpackinternal warn launcher chrome killed ms sending sigkill versions react browser os affected issue work previous versions react using ubuntu chrome version official build packagejson", "num": "11997", "d": "1/2018"}, {"title": "symbols keys children arrays iterators", "body": "want request feature report bug want request feature current behavior using element keys throws type error current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example using get following codesandbox expected behavior using keys work seamlessly opinion element keys perfect usecase versions react browser os affected issue work previous versions react using react browsers affected safari chrome firefox osx pretty sure browser dependent matter implementation thanks", "num": "11996", "d": "1/2018"}, {"title": "need learn", "body": "need learn get started react js", "num": "11994", "d": "1/2018"}, {"title": "warn server renderer class nt extend reactcomponent render method", "body": "server renderer look implementation something similar", "num": "11991", "d": "1/2018"}, {"title": "grabbing pending state value", "body": "assume write assume state nt updated yet result call write see value basically question pending state update normal functional setstate previousstate receive functional setstate capture pending value", "num": "11989", "d": "1/2018"}, {"title": "forked props isolated", "body": "fork prop like class newordercontainer extends component constructor props super props thisstate orderform propsorderform proceed update state mutates original prop specifically state component passing prop orderform mutations state forked prop isolated", "num": "11988", "d": "1/2018"}, {"title": "react componentdidupdate warning scheduled cascading update", "body": "want request feature report bug bug current behavior react componentdidupdate warning scheduled cascading update question current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react react", "num": "11987", "d": "1/2018"}, {"title": "lifecycle methods reactdomhydrate", "body": "want request feature report bug feature current behavior way distinguish lifecycle method called response call expected behavior component scrolls top page componentdidmount makes sense component first created within client however nt make sense component hydrated called content already visible possibly user already scrolled would possible add lifecycle method could something like achieve desired behavior versions react browser os affected issue work previous versions react", "num": "11985", "d": "1/2018"}, {"title": "debian onmousemove onmouseenter onmouseleave firing chrome", "body": "want request feature report bug report bug current behavior google chrome element onmousemove onmouseenter listeners fire events unless clicked likewise onmouseleave fire unless mouse clicked area occupied listening element current behavior bug please provide steps reproduce possible minimal demo problem following jsfiddle reproduces bug reproduce simply create element listeners test behavior chrome expected behavior onmouseenter onmousemove onmouseleave listeners fire chrome without mouse needing clicked versions react browser os affected issue work previous versions react tested react development server also react jsfiddle cases problem occurs using debian kernel version chrome version reproduce error tried reproduce issue windows major version chrome seems work properly", "num": "11984", "d": "1/2018"}, {"title": "drawer reactmaterialui", "body": "beginner react problems applying drawer project case appbar configured drawer open working presenting following errors reactcreateelement type invalid expected string built components class function composite components got undefined might mixed default named imports handletoggle assigned value never used handleclose assigned value never used ps sorry bad english brazilian code", "num": "11978", "d": "1/2018"}, {"title": "warning stateless functional high order component", "body": "want request feature report bug bug current behavior warning stateless functional high order component current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior warning versions react browser os affected issue work previous versions react react yes worked previous versions", "num": "11976", "d": "1/2018"}, {"title": "reenable coverage", "body": "see jest oom disabled", "num": "11975", "d": "1/2018"}, {"title": "add reactcreateref migration path string refs", "body": "creating issue track intend close pr outdated probably want turn real rfc potentially get", "num": "11973", "d": "1/2018"}, {"title": "consider removing mouseentermouseleave polyfill", "body": "suggested sure want decided create issue track future attempts pr stale", "num": "11972", "d": "1/2018"}, {"title": "need listen click change events", "body": "presently listen click events detect changes radio buttons checkboxes still need looks though curious remove click dependency change events update comments better document include click events", "num": "11971", "d": "1/2018"}, {"title": "add method remount component", "body": "want request feature report bug feature imagine might brought could nt find discussions extensive searching current behavior working certain nonreact party libraries sometimes require remount domnode ie dumping creating scratch currently way seems change prop either incrementing generating random uid however feels like hacky way implementing behavior issue working youtube player api svgdrawer library wish cleaner reactway expected behavior would nice could something like perhaps better parent via refs would effect changing said components prop", "num": "11969", "d": "1/2018"}, {"title": "add", "body": "", "num": "11968", "d": "1/2018"}, {"title": "state initialization disparity shallow renderer reactdom", "body": "want request feature report bug bug current behavior shallow renderer defaults class component state empty object set real renderers nt seem component render successfully shallow renderer fail runtime browser null reference error current behavior bug please provide steps reproduce possible minimal demo problem reactdom behavior crashes reading uninitialized state value shallow renderer behavior component able render expected behavior initialize state way versions react browser os affected issue work previous versions react react nt issue react", "num": "11964", "d": "1/2018"}, {"title": "running yarn start npm start fixtures throwing error", "body": "want request feature report bug bug current behavior running npm start yarn start reactfixturesdom throwing errors terminal current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reactfixturesdom run yarn start npm start following errors seen terminal gt reactfixtures prestart homegmadminpracticereactfixturesdom cp builddist react reactdom developmentjs public cp stat builddist react reactdom developmentjs file directory npm err code elifecycle npm err errno npm err reactfixtures prestart npm err exit status npm err npm err failed reactfixtures prestart script npm err probably problem npm likely additional logging output npm err complete log run found npm err note already run npm run build react parent directory see reactdevelopmentjs reactdomdevelopmentjs reactbuilddist running cp builddist react reactdom developmentjs public command terminal works fine fails run prestart command packagejson expected behavior copying happen successfully npm start successfully turn server versions react browser os affected issue react version kernel gnulinux os info distributor id linuxmint release codename serena work previous versions react nt know bug let work", "num": "11963", "d": "1/2018"}, {"title": "setstate callback called even state nt changed", "body": "want request feature report bug bug current behavior react breaking changes setstate callbacks second argument fire immediately componentdidmount componentdidupdate instead components rendered setstate documentation second parameter setstate optional callback function executed setstate completed component rerendered assume component nt rerendered setstate callback wo nt called well current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior setstate callback wo nt called versions react browser os affected issue work previous versions react react nt try previous versions", "num": "11961", "d": "1/2018"}, {"title": "syntactic sugar like", "body": "easy access attributes want know problem new reacter tks", "num": "11960", "d": "1/2018"}, {"title": "render pure pure", "body": "write return result every time render function pure meaning modify component state returns result time invoked next part write never return result next state props update function return different tree react elements pure pure", "num": "11959", "d": "1/2018"}, {"title": "expected find host parent", "body": "want request feature report bug bug current behavior specific order unmounting remounting causes invariant violation reproduce following sandbox example crashes invariant violation props odd numbers greater zero expected behavior app crash cycles number items list versions react browser os affected issue work previous versions react versions newer version", "num": "11955", "d": "1/2018"}, {"title": "syntactic sugar", "body": "syntactic sugar like tks", "num": "11953", "d": "1/2018"}, {"title": "settimeout working initial render", "body": "want request feature report bug bug think unless behavior intentional current behavior see basically trying batch set ajax calls wrapping promise calls settimeout replaced actually ajax calls calls consolelog affect first time update function called see console log statement within single ms statement next time update function called seconds later see console log statements delayed expected expected behavior expect sleep function work first time called stands ui broken interval calls update function minutes production understand async stuff react lil funky definitely nt know react works hood could intentional behavior somehow needed workaround get behavior need thanks guys keep great work versions react browser os affected issue work previous versions react react believe happens react well firefox developer edition", "num": "11950", "d": "1/2018"}, {"title": "output junit xml test metadata circleci", "body": "benbraou claimed issue please give chance work screenshot circleci build another private project part clearly highlights parts build failed contrast see one builds one scriptscircleciuploadbuildsh step failed need scroll output significant amount see part custom entry point ci steps scriptscirclecitestentrypointsh make easier us parallelize build steps like us change testentrypointsh script output junit xml metadata circleci described believe circleci build results page show exactly step failed bonus show individual jest tests would even cooler think important part breaking jest vs flow vs prettier etc separate chunks", "num": "11949", "d": "1/2018"}, {"title": "reactnativecustomtabs return response", "body": "created button open custontabs use external url reactnative app external url forms submitted return array response another page ie success page want get response success page app customtabs would close automatically code custom tab", "num": "11947", "d": "1/2018"}, {"title": "reactwebpacktypescript fine react fails resolve reactdom react", "body": "tsconfigjson webpackconfigjs apptsx import react react import reactdom reactdom reactdomrender hello documentgetelementbyid reactapp dependencies typesreact typesreactdom typeswebpackenv react reactdom tsloader typescript webpack webpack hash version webpack time asset size chunks chunk names bundlejs kb emitted big main apptsx bytes built hidden modules typesreact typesreactdom react reactdom webpack hash version webpack time asset size chunks chunk names bundlejs kb emitted main apptsx bytes built hidden modules error apptsx module found error ca nt resolve reactdom homedmitryprojectsfails apptsx npm v amp amp node v amp amp cat etcdebianversion", "num": "11946", "d": "1/2018"}, {"title": "get response customtabs reactnative", "body": "created button open custontabs use external url reactnative app external url forms submitted return array response another page ie success page want get response success page app customtabs would close automatically code custom tab get response customtabs app close customtabs closed reactnative app", "num": "11945", "d": "1/2018"}, {"title": "curly braces pointless ugly", "body": "want request feature report bug feature current behavior curly braces required delimit javascript expressions jsx attributes desired behavior javascript expressions expressed without need hello name onclick gt thisandthat short requiring around unnecessary although last one bit ugly gt thing", "num": "11944", "d": "1/2018"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11943", "d": "1/2018"}, {"body": "hey welcome try keep react issue tracker focused feature bug reports general questions support try various support avenues", "d": "1/2018"}, {"body": "samkhachatryan related version project", "d": "1/2018"}, {"body": "removed clientside render react serverside render react", "d": "1/2018"}, {"body": "use create react app see message related service workers either ignore opt caching", "d": "1/2018"}, {"body": "thanks report intellild check console see warning message get mentions possibility emphasis mine keys unique components maintain identity across updates nonunique keys may cause children duplicated andor omitted behavior unsupported could change future version using duplicate keys supported result behavior seeing react elements nonunique keys omitted nt mean behavior supported expected remain consistent across versions definitely want heed warning make sure keys always unique hope helps anything make warning clearer love hear feedback thanks", "d": "1/2018"}, {"body": "aweary tried fiddle switch tabs cause wild elements", "d": "1/2018"}, {"body": "yes looked fiddle behavior seeing children duplicated causes issues react reconciles children using nonunique keys unsupported continue result inconsistent unexpected behavior react continues change please make sure follow advice warning ensure keys always unique nt deal strange issues like", "d": "1/2018"}, {"body": "hey samkhachatryan little mindfulness planning react integrate almost view library including ones listed please see integrating libraries page docs information thanks", "d": "1/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "1/2018"}, {"body": "error message includes link copied please visit includes full message", "d": "1/2018"}, {"body": "fragment syntax supported babel lets exactly need something like equivalent spreading end essential avoid warning", "d": "1/2018"}, {"body": "getting error trying open link please post service nt limitations eg codepen codepan", "d": "1/2018"}, {"body": "seems like ref callback called many times read part", "d": "1/2018"}, {"body": "gaearon sorry nt notice doc", "d": "1/2018"}, {"body": "supported useful happy take pr documenting sure trying achieve component unmounted need reset state component ca nt resurrected gets unmounted state irrelevant rest program", "d": "1/2018"}, {"body": "gaearon aha makes sense impression hold onto instance react component actually mount conditionally thought didmount willunmount view appeared disappear never actually always assumed somebody thus good citizen supported clean fashion thanks clarification", "d": "1/2018"}, {"body": "see anywhere docs could made clearer", "d": "1/2018"}, {"body": "think makes sense reconciliation guide explains principle well rtfm key sure mention since need clean instance dropped thank", "d": "1/2018"}, {"body": "maybe could add notice doc component unmounted never remounted", "d": "1/2018"}, {"body": "react doest defaultinbuilt router vuejs part reactrouter react", "d": "1/2018"}, {"body": "part react however good packages know talk authors coordinate changes might affect", "d": "1/2018"}, {"body": "hey thanks report tried reproducing issue nt able made jsfiddle renders single input inside regular old html form form submitted failed network request contains values html input react input need able reproduce issue consistently order diagnose problem could take look jsfiddle made try tweak reproduces problem great thanks", "d": "1/2018"}, {"body": "thanks taking time look make sure provide jsfiddle next time investigating end keep updated", "d": "1/2018"}, {"body": "turns happens html markup invalid eg sure considered bug definitely confusing fail realize markup invalid thanks", "d": "1/2018"}, {"body": "thanks following agree confusing behavior seems like field data missing element dynamically added dom adding second element html markup still works unfortunately react ca nt anything validating container rendered inside valid markup close thanks", "d": "1/2018"}, {"body": "look like bug rather missing functionality would like send pr", "d": "1/2018"}, {"body": "would give try", "d": "1/2018"}, {"body": "thanks maciejka", "d": "1/2018"}, {"body": "nt think post screenshot", "d": "1/2018"}, {"body": "sachag show example code", "d": "1/2018"}, {"body": "obvious would happen think need minimal reproducing case", "d": "1/2018"}, {"body": "honest think easier eventually rewrite component entirely code component much go wrong think isolating problem create reproduction would probably take even longer rewriting scratch close", "d": "1/2018"}, {"body": "asking gave idea look found alternative way accessing pure function risk needing exact structure wo nt happen pure componentsfunctions idea", "d": "1/2018"}, {"body": "hacky gives", "d": "1/2018"}, {"body": "exactly situation would work pure functions three really hacky ways far clean futureproof one go rofl", "d": "1/2018"}, {"body": "oh posible solutions think great one would lodash style since way tree shaking coule applied", "d": "1/2018"}, {"body": "franciscop nothing treeshake react use one thing use also treeshaking handling imports one entry point opposed file splitting", "d": "1/2018"}, {"body": "even try read dynamically like attempted practice bundler still finds statically build time nt really make lot sense think want separate entry point library react users inside freely import react people use entry point clearly react users side separating component nt really valuable whole react bundle small unlike reactdom splitting increases friction without benefits case react users already react nt worry getting one export react would nt able use without react apis anyway", "d": "1/2018"}, {"body": "hi dan thanks tip look bundling actually never seen size react vs reactdom nt work probably go dynamic import something similar already translate got good results bundler least rollup find types require dynamically simply would find", "d": "1/2018"}, {"body": "look bundling react think mistake bundling case leave en exact option depends bundler use leave compiled bundle user nt get two copies react", "d": "1/2018"}, {"body": "totally right try", "d": "1/2018"}, {"body": "past movement nt reached consensus since api change discussed many times past shot different reasons perhaps would better could create rfc thanks", "d": "1/2018"}, {"body": "check nodemodules make sure react", "d": "1/2018"}, {"body": "maybe older need", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "reproduce fiddle might kind local cache system messing please provide reproducing project", "d": "1/2018"}, {"body": "let try reproduce somewhere another clue use syntax", "d": "1/2018"}, {"body": "gaearon seems like fragments syntax", "d": "1/2018"}, {"body": "mentioned blog post syntax support expected come tools soon need wait seems irrelevant problem describing initial post though", "d": "1/2018"}, {"body": "understandable ca nt understand getting similar errors anything else need", "d": "1/2018"}, {"body": "gaearon looks related", "d": "1/2018"}, {"body": "one anything else need react reactdom verify post content please", "d": "1/2018"}, {"body": "gaearon second thing tried looking haha ya go name react description react javascript library building user interfaces keywords react version homepage bugs license mit files license readmemd indexjs cjs umd main indexjs repository facebookreact engines node gt dependencies fbjs looseenvify objectassign proptypes browserify transform looseenvify", "d": "1/2018"}, {"body": "ok best guess accidentally two react bundle one older version try running inspect sources chrome devtools look many files called show nt think help nt reproduce new project definitely issue project set either two reacts aggressive caching turned accidentally work older version", "d": "1/2018"}, {"body": "please provide full code otherwise hard tell", "d": "1/2018"}, {"body": "hi gaearon import react react import table reactbootstrap var createreactclass require createreactclass var customers createreactclass getinitialstate function return buttoncolor handleclick color consolelog button color state thisstatebuttoncolor thissetstate buttoncolor color render return customer name username addl username remove thispropscustomersmap function customer index return index customername customerfbun customeremun export default customers", "d": "1/2018"}, {"body": "dallashuggins replace fix keyword switches context whatever object function bound case undefined arrow functions added javascript behavior since change context also future reference issue thats better place like stack overflow threads tracking bugs", "d": "1/2018"}, {"body": "problem js get preserved way want keep value render method use arrow function hope helps", "d": "1/2018"}, {"body": "oh answer also right missed use arrows cases", "d": "1/2018"}, {"body": "worked thank much", "d": "1/2018"}, {"body": "seems like issue network json corrupted perhaps behind proxy bad connection unfortunately nothing could try another network", "d": "1/2018"}, {"body": "currently network working properly issue", "d": "1/2018"}, {"body": "message says network response invalid maybe try luck yarn", "d": "1/2018"}, {"body": "think something invokeguardedcallback mode dispatch fake event preserver devtool behaviour comment block would give better idea like intended behavior bug", "d": "1/2018"}, {"body": "hey aulisius thanks reply understand intention preserving expected pause exceptions behaviour dev tools doubt react developers expect user defined error event listener invoked twice instance error though even sure culprit user callbacks executed next message event loop nt see extra throw happening try dig better react code asap extra info also noticed error events fired twice unhandledrejection events behave correctly", "d": "1/2018"}, {"body": "think duplicate", "d": "1/2018"}, {"body": "seems like duplicate", "d": "1/2018"}, {"body": "somehow turn former searches thanks pointing overlap point linked issue different nature believe misses build target without transpiling much less focus biggest reason incompatibilities current build process one poc curious think", "d": "1/2018"}, {"body": "size differences bundles benchmark bundles performance afaik big deal using untranspiled version sure performance regressions code browsers fast adding esm version makes sense browsers bundlers discussed linked thread providing also untranspiled version without significant benefits introduce lot mess users", "d": "1/2018"}, {"body": "nt compared transpiled untranspiled versions checking react versions disk yields umd unminified version vs bytes unminified untranspiled one poc difference bytes highly unscientific comparison focussing file size really favour two actual effects parsing remains investigated random reasons wanting build target native esm greatly simplifies development setup lowering threshold new developers might prevent gap webpack approach doable natively browsers getting bigger done natively progresses web platform keep using transpiled versions code browsers incentive optimise new use cases really curious mess would add users would believe significant benefits", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "closing overlapping", "d": "1/2018"}, {"body": "ah one also lot overlap still completely cover issue believe misses esm native export import functionality support greatly improved since combined issues linked mean give efforts get native ecmascript module build target reality another point trying make ah clear since issue closed typing", "d": "1/2018"}, {"body": "add module entry packagejson means esm native export import functionality", "d": "1/2018"}, {"body": "try issues covering problem precisely esm impossible fix issues already exist see value yet another one open edit fixed links", "d": "1/2018"}, {"body": "trysound gaearon thanks clearing monitor try participate issues", "d": "1/2018"}, {"body": "question think ask stackoverflowcom helpful react two concepts normally setstate change", "d": "1/2018"}, {"body": "ruoru react minimal api something passed taken component instance prev props thisprops new props", "d": "1/2018"}, {"body": "stephenkingsley trysound thank much reply said", "d": "1/2018"}, {"body": "callback fires updates flushed dom new props current point dowhatever thisprops new props old props get new props nextprops become thisprops react rerenders component", "d": "1/2018"}, {"body": "pick pr lands", "d": "1/2018"}, {"body": "broader impact tests like example makes tests like reactincrementalupdatestest reactincrementaltest reactincrementalsideeffectstest harder follow", "d": "1/2018"}, {"body": "think going need disable tests least default tests hard follow otherwise", "d": "1/2018"}, {"body": "think right thing feature also disable production mode", "d": "1/2018"}, {"body": "issue solved calling preventdefaults within onclick function closing", "d": "1/2018"}, {"body": "dwjft new context api wo nt require proptypes", "d": "1/2018"}, {"body": "see rfc use proptypes", "d": "1/2018"}, {"body": "note actively working fixing context embrace supported api", "d": "1/2018"}, {"body": "appreciate detailed writeup overall think proposal counter think react really see happening fixing context least part motivation solved using systems like mobx wrap data structures possible react nt necessarily want encourage style programming nt think making even automatic something want think biggest drawback proposal implicit powerful try combine implicit api context even affects data behavior also optin passes grep test middleware api ca nt pass affects components indirectly essentially changes contract components saying props unless middleware stack case knows really get props defies potential optimizations react could make including compilation techniques currently exploring", "d": "1/2018"}, {"body": "totally understand", "d": "1/2018"}, {"body": "thanks enforce styling via prettier nt really need linter bot", "d": "1/2018"}, {"body": "understand trying react build dependencies affect react users way", "d": "1/2018"}, {"body": "gaearon building react source github tarballs every package debian main built source using tools available debian like keep one version librarytool debian already newer version rolluppluginnoderesolve extreme measure include multiple versions try avoid", "d": "1/2018"}, {"body": "nt sound sustainable even fix outdated dependency eventually bound npm world dependencies meant perpackage isolated case happy take pr updating particular dep wo nt working near future removal version reason stayed earlier version might unnecessary welcome experiment", "d": "1/2018"}, {"body": "gaeron agree indeed lot work many cases send pr upstream keep dependencies sync think effort worth give languageagnostic uniform interface managing applications system apt every software actually bridging two diverging cultures able build commenting skip option though prints lot warnings see improve add external option rollup familiar rollup may take time", "d": "1/2018"}, {"body": "react example typically implemented lifting state refs provide specific example hard implement lifting state", "d": "1/2018"}, {"body": "luisaccedo contradict methods components exposed done attribute similar ref request", "d": "1/2018"}, {"body": "thank gaearon understand advantages lifting state already done way probably wrong try explain usecase exposed method maybe makes sense reusable carousel component lot methods control pagination animations responsiveness basically receives array items config options takes care rest instances component used inside components pass items state carousel example current page number pages responsibility carousel component dynamically calculated based items array carrousel width nextpage method previouspage gotopage modify current page state parameter carousel good solves scenarios scenario would useful able set page outside carousel exposing gotopage method lift state lift methods transform state containers carousel component seems exposing method would create cleaner pattern trysound right second sentence quote could done idea currently possible", "d": "1/2018"}, {"body": "trysound right second sentence quote could done idea currently possible elaborate assign ref component get instance component exposes class methods example able generally speaking much fewer headaches rearchitect componnts receive inputs declaratively props parent components calculate derived properties child rather trying expose imperative interfaces components higher tree", "d": "1/2018"}, {"body": "generally speaking much fewer headaches rearchitect componnts receive inputs declaratively props parent components calculate derived properties child rather trying expose imperative interfaces components higher tree agree maybe sometimes able expose methods might useful", "d": "1/2018"}, {"body": "luisaccedo wrong instance ref future private class fields even able hide methods", "d": "1/2018"}, {"body": "even store instances thisconstructor want cross component communication done", "d": "1/2018"}, {"body": "responsibility carousel component dynamically calculated based items array carrousel width nextpage method previouspage gotopage modify current page state parameter carousel typically react solve providing declarative api props instead example instead method would implement numeric prop way controlled state component higher tree", "d": "1/2018"}, {"body": "luisaccedo wrong instance ref future private class fields even able hide methods far know instance ref nt allow access component instance methods possible", "d": "1/2018"}, {"body": "instance ref lets access instance methods still right way implement react cases provide declarative api mentioned", "d": "1/2018"}, {"body": "want look happens", "d": "1/2018"}, {"body": "love help sure would able locate bug source code guessing something react diffing algorithm updating component although could wrong", "d": "1/2018"}, {"body": "investigation", "d": "1/2018"}, {"body": "try set key input textarea", "d": "1/2018"}, {"body": "looks like due updatewrapper reactdomtextarea setting exist triggering update token also set nodedefaultvalue propsdefaultvalue defined matter updating causing element reattach text node child", "d": "1/2018"}, {"body": "martintasevski think pr resolve problem thanks aweary tip", "d": "1/2018"}, {"body": "eta change pushed master released", "d": "1/2018"}, {"body": "nt think possible run javascript directly gpu exist javascript libraries allow use gpu accelerate calculations nothing lets run js gpu though react communicates dom gpu directly believe browser job asking adding capability run js gpu issue react nt really belong", "d": "1/2018"}, {"body": "yeah nt anything like react also runs compatibility mode nt expect drastic changes keep eye blog announcement related async react still related gpus though", "d": "1/2018"}, {"body": "undefined object evaluating jareactcurrentowner probably mixing different versions must one use recent one map constructor accept arguments read blog post always upgrading mentions new javascript environment requirements want react work older browsers need polyfill", "d": "1/2018"}, {"body": "agree api confusing nt actually simulate browser event simulates react event builtin browser behaviors wo nt happen automatically achieve want able simulate browser event using browser apis like js function onclick const container documentcreateelement div reactdomrender container const node containerfirstchild nodedispatchevent new mouseevent click bubbles true cancelable true note works node document", "d": "1/2018"}, {"body": "looking optimizations like context prepack nothing going immediately useable next couple months within year two might something note unless creating thousands elements performance difference wo nt noticeable also unless components flat simple pure win optimization likely much less relevant practice", "d": "1/2018"}, {"body": "dang gut triage think happening react trying restore selection input actually changes types ever reason email number inputs support text selection api order operations sync great catch", "d": "1/2018"}, {"body": "circling back thanks providing possible fix want make sure checking type sufficient instead compare value selectionstart example javascript var input documentcreateelement input inputselectionstart inputtype email inputselectionstart null inputselectionend null would awesome make dom test fixture something like take", "d": "1/2018"}, {"body": "ping adrianimboden", "d": "1/2018"}, {"body": "sorry little bit busy nt know free time implement proper fix tests someone wants pick matter would disappointed", "d": "1/2018"}, {"body": "pick would ok adrianimboden", "d": "1/2018"}, {"body": "leonascimento regarding tests idea could located nt tests maybe creating option explicitly test function otherwise want test integration level extend tests", "d": "1/2018"}, {"body": "would need value input start basically first click applies value forward value change", "d": "1/2018"}, {"body": "value checkbox checked l oading page value comes db actually store uses rest api get update data fear nt clear enough maybe misunderstood comment uploaded screencast issue", "d": "1/2018"}, {"body": "sorry nt clear enough nt anything react dom node value property try adding element", "d": "1/2018"}, {"body": "also something tried posting seems forgot mention soon set value attribute checkbox always displays unchecked matter original value db tried know silly value checkbox read props effect checkbox always loads unchecked even value verified logging props console least always gets fired ca nt use way course removing make change ca nt use attribute either obviously would cause component changing uncontrolled input type checkbox controlled warning even though use checkbox correctly loaded checkedunchecked state", "d": "1/2018"}, {"body": "related discussion help looks like sort correct part falsey value set checkbox btw nt feel like bug instead area react behavior could normalized little better good luck cheers", "d": "1/2018"}, {"body": "thanks helped seems trick quite unintuitive least works", "d": "1/2018"}, {"body": "pr improves sure want take particular approach however maybe add special case specifically feel safer merging", "d": "1/2018"}, {"body": "ie proposing filename also include closest directory name seems like would sufficient practical purposes", "d": "1/2018"}, {"body": "sorry missing searched issues rather prs think approach removing common head like even better either option proposed including closest directory name works happy rebase pr either way", "d": "1/2018"}, {"body": "sure really worried might make warnings way long projects lot folder nesting would prefer smaller fix first maybe look", "d": "1/2018"}, {"body": "ok submit pr smaller fix thanks discussion incidentally looking whether enable could nt find uses codebase maybe used prefiber mistaken gets attached never used", "d": "1/2018"}, {"body": "used yet plan use see callback ref owner would different string ref owner would useful deprecated string refs different plan though", "d": "1/2018"}, {"body": "looks like chrome wo nt trigger change event valid date entered test case pass valid date completely entered closing", "d": "1/2018"}, {"body": "issue ie javascript settings close issue", "d": "1/2018"}, {"body": "need something like order actually insert dom node clear really feasible without synthetic event system afaict", "d": "1/2018"}, {"body": "believe plans allow forms browsers even normal dom node solution nt work plausible future addition would first class fragment nodes trueadm really passionate think least plausible future capability works natively however even without nt use full synthetic event system also intercept redirect locally probably want anyway batchingcontrolleddefault priorities local event handler attached dom node also call parent fragments enterleave would extra enterleave big deal since noticed typically want timeout uses anyway", "d": "1/2018"}, {"body": "perhaps missing something nt inserting element called dom mean still adding wrapper element", "d": "1/2018"}, {"body": "yes post nt say necessary technically possible without synthetic event system", "d": "1/2018"}, {"body": "sure idea comes web personally feel fragments events users stick using elements need events always envisaged originally proposed spec native dom fragment special nodes layoutstyling properties meaning could nt events attached example mouse events even interact something positional rectangle meant act much like documentfragments textnodes instead elements", "d": "1/2018"}, {"body": "example mouse events even interact something positional rectangle would assume event listeners fragments listen events dispatched children either capture bubble phase would concept event dispatched fragment directly", "d": "1/2018"}, {"body": "aweary nested fragments within fragments portals within fragments would work work fragments generally curious solved synthetic event space could help create native fragment polyfil implementation idea", "d": "1/2018"}, {"body": "trueadm nt given idea lot thought conceptually fragment events could synthetic aggregates let signal synthetic event system want listen set events children fragments fragment listening events would register listener appropriate elements rendered subtree maybe using ancestor tracking know fragment contained within nested fragments event would move updown tree matching fragments would triggered like works dom elements think primary use case wrapping direct children like nested fragments could potentially restricted somehow causes problems sure sure portals", "d": "1/2018"}, {"body": "filing would probably appropriate get lost repo obvious fix mind maybe could try installing yarn see works instead another thing worth trying", "d": "1/2018"}, {"body": "assuming mean run lines ran first line returned however run regedit see could manually delete value doesnt appear mean think maybe best option get started asap accept defeat makes scratch head wonder things like occur nowhere", "d": "1/2018"}, {"body": "also opened issue createreactapp thread facebookincubatorcreatereactapp", "d": "1/2018"}, {"body": "closing favor", "d": "1/2018"}, {"body": "would like give try", "d": "1/2018"}, {"body": "got", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "nt think takes proptypes function mean use ends happening case property called passing basically forcing props shape", "d": "1/2018"}, {"body": "use forbidden proptypes thanks lot nt remember behavior", "d": "1/2018"}, {"body": "nt understand mean think might misunderstanding proptypes work nt take another proptype argument takes object wrong right", "d": "1/2018"}, {"body": "also clear mean forbidden proptypes show full example problem maybe help", "d": "1/2018"}, {"body": "also plugin nt work facebookreactdevtools installing nt option least star issue ask chrome team fix nothing unfortunately caused chrome regression however changes log warning installed version react devtools old work current version react please update react devtools see source code condition exit log created project create react app ejected added configuration removed log need reproducing project say nt work", "d": "1/2018"}, {"body": "wow quick response try get reproducible project tomorrow", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "okay bad gt focusing main react package newer reactdom package contain feature pr thank thanks redux apologies false issue perhaps worth updating comment issue states reactdom gt", "d": "1/2018"}, {"body": "ah okay reference always recommend matching versions react packages", "d": "1/2018"}, {"body": "describe feature someone know vue imagine working react", "d": "1/2018"}, {"body": "vue api said wrapped around dynamic component component toggled inside primarily used preserve component state avoid rerendering basic usage give users great experience scenarios like news webapp", "d": "1/2018"}, {"body": "keep component cache route next component instead recreating new one reuse cached component avoid refetching data via network fulfill component act like stack", "d": "1/2018"}, {"body": "react usually solved one two ways keep data cached separately component example lift state ancestor nt get mounted put sideways cache like redux also working firstclass api support nt unmount views want keep alive hide", "d": "1/2018"}, {"body": "first way way make things done sometimes heavy eg use sate record whether component exposed suitable use state seems strange lift state store redux second way problem hide element enough event listeners removed usually implemented gaearon could please explain details firstclass api", "d": "1/2018"}, {"body": "second way problem hide element enough event listeners removed usually implemented componentwillunmount also intercept change propstate change leads event listeners clean easily going attach listeners effectively making component inactive maintaining component state use case keeping instance alive", "d": "1/2018"}, {"body": "bjrmatos suggestion practical ways work around think perfect clean since write component concern react lifecycle something like page lifecycle nt", "d": "1/2018"}, {"body": "suggestion practical ways work around think perfect clean suggestion work around react way things reacting stateprops changes something whole react model would say clean way things done react concern react lifecycle something like page lifecycle nt describing react component lifecycle concern component component matter whole page need use available lifecycle hooks thing even create component logic never bother app nt know vue approach keep alive feature react sounds dirty traditional way reacting changes normal react lifecycles", "d": "1/2018"}, {"body": "could please explain details firstclass api post soon stay tuned prs", "d": "1/2018"}, {"body": "bjrmatos keypoint pagecomponent inform descendant component remove event listeners except component visible", "d": "1/2018"}, {"body": "already progress maybe take", "d": "1/2018"}, {"body": "implements along number related introspection utilities", "d": "1/2018"}, {"body": "aweary yep looks like seb abstraction excessive dan nt approve want merge later want tell zheeeng copy use projects fine close", "d": "1/2018"}, {"body": "bad needed read part carefully comments", "d": "1/2018"}, {"body": "perhaps noted fixed portal jsx export default class bodyend extends reactcomponent working react seems like regressionbackwardscompatibility bug", "d": "1/2018"}, {"body": "major versions backwardscompatible majors looked example detail hunch known intentional limitation comes nested calls solves many issues recommendation use portals", "d": "1/2018"}, {"body": "gaearon right said something nt mention breaking changes blog post broken probably bug please report bugs us nt try work around assume meant broken assume referring post perhaps mistaken one bullet points covers scenario otherwise nt see listed encountered problem upgrading project nt warnings assumed safe big deal able work around converting component use portal party component would much bigger problem maybe misusing lifecycle hooks react never provided guarantees first place anyway let guys decide", "d": "1/2018"}, {"body": "agree called specifically still know bug time look issue yet probably point thinking reactdomrender reactdomunstablerendersubtreeintocontainer return null called inside lifecycle method work around use portals refs match description think might root cause internal description change could react longer reentrant possible begin rendering component tree already rendering component tree hard understand provided one possible effect might helping us discover general recommendation use nested calls instead use portals", "d": "1/2018"}, {"body": "understand frustration way react coordinate two different react instances without introducing globals environment also bad string refs require coordination one reasons encourage people avoid using two reacts tree supported reason use webpack plugin help failing build whenever situation occurs least know problem nothing wrong module assuming wo nt produce two copies pretty sure many modules write also make assumption nt bump nt extract libraries symlink also issue mutable shared state modules", "d": "1/2018"}, {"body": "using global bad infinitely better relying behaviour even documented work like require cache nt guarantee module singleton fact nt really matter many modules nt define spectre notabug many processors problem nt knowingly write code makes incorrect assumptions like accidentally someone told would understand error use webpack option either good discourage using string refs nt use string refs code third party modules string refs removed react point case reactbootstrap would incompatiblebugged fault lies react", "d": "1/2018"}, {"body": "sorry feel frustrated issue welcome propose solution trying shift blame saying global state aware right way store rather module think solve declaring global variable run issues example environments might allow eg global object could frozen another issue may arise several nonconflicting react trees page eg two independent thirdparty widgets happen use react execute page context steal refs share global environment really bad case least control problem whereas two thirdparty widgets would impossible fix either side hope see trivial problem see point well written react apps bumped issue please think dismissing issue aware way solve encourage also approach open mind think specific use case effects solution mind ideas including adding caveats string refs docs love know docs open source send pr", "d": "1/2018"}, {"body": "well oldschool cc developer taught globals bad whether call global wrap singleton attempt hide fact global nt really matter intuitively nt looked react code solution would global data modules global state instead pass kind react context object along ie user would call const context reactmakecontext later reactdomrender context code would previously access global data would access context instead could even put version context object warn version code run differs context object actually know data function nt match would also solve problems multiple distinct react trees could create multiple context objects confident wo nt interfere anything matter use module cleaner solves problems global variables better testing obviously would nt want call context avoid confusion existing thing although tightly related may want consider merging usercontrolled system part context worried transition period still fall back using modulescope variable fallback context object undefined admit nt fully understand part response example environment nt allow adding attributes global sounds like inviting trouble please nt misunderstand response proper solution nt possible wide range platforms need support ca nt change api time even proper solution worth effort string refs phased anyway live know work severe limitations bothered first reply dismissive tone essentially line nothing wrong module assuming requires wo nt produce two copies triggered may least worst alternative given restraints obviously something wrong code nt bugs breaks globals including module variables singletons always hack never even good solution anything also say pretty crappy coding part nodejs base require cache resolved file names instead say inode number alternatives exist almost filesystems", "d": "1/2018"}, {"body": "intuitively nt looked react code solution would global data modules global state instead pass kind react context object along problem existing string ref api one like see fixed already object api contract magically remembers get attached currently rendered component possible unless keep track currently rendered component fully agree bad design precisely reason string refs marked legacy documentation eventually get deprecated removed learned mistake design new apis consider constraint avoiding need shared mutable state response proper solution nt possible wide range platforms need support ca nt change api time even proper solution worth effort string refs phased anyway aware proper solution one proposed earlier using globals creates issues explained another issue may arise several nonconflicting react trees page eg two independent thirdparty widgets happen use react execute page context steal refs share global environment really bad case least control problem whereas two thirdparty widgets would impossible fix either side solve problem people create issues new problems caused change solution mentioned change api exactly string refs marked legacy docs encourage writing new code relies deprecate yet callback refs quite ergonomic many developers including fb ready rewrite code works fine today considering solutions pitfalls string refs annoying use callback refs see solutions", "d": "1/2018"}, {"body": "problem existing string ref api one like see fixed already object api contract magically remembers get attached currently rendered component possible unless keep track currently rendered component see part nt know react internas understanding setting stringref react accesses reactcurrentowner global since global module variable module generating div different code set reactcurrentowner one generating module nullundefined time ca nt opt reactcurrentowner global context object gets passed around automatically know context object already already get passed entire tree automatically right stopping changing code like reactcurrentownercurrent contextreactcurrentowner globalreactcurrentowner reactcurrentowner current obviously supernaive would allow user control store global without breaking compatibility solve problem people create issues new problems caused gt change suggesting break anyone else obviously solution would either support every existing case optional solution mentioned change api exactly string refs gt marked legacy docs encourage writing new code relies yeah sorry changing api microsoft deprecated api functionality windows windows years ago find new software written using api even today tutorials suggest use want get rid unwanted api remove matter long gave users switch api always someone unhappy get see solutions tbh like string refs user perspective nice specify name access ref api requires bare minimum information user clutter overhead would nt store directly owning react object track global instead force user pass ref holder reactcreateelement ref holder could passed automatically using jsx contexta hoc user could even customize ref holder works maybe collect hierarchical ref tree higher tier component ref holder undefined try resolve string ref well caller nt care ref would nt able access anyway skip error", "d": "1/2018"}, {"body": "part nt know react internas nt necessarily need follows directly react public api show example ca nt opt reactcurrentowner global context object gets passed around automatically know context object already already get passed entire tree automatically right stopping changing code like reactcurrentownercurrent contextreactcurrentowner globalreactcurrentowner reactcurrentowner current reason nt similar problem context parentchild relationship enough establish nt actually need user pass around keep track tree nesting refs different unlike context ref parent nt necessarily match tree parent consider example js function frame props return propschildren class button extends reactcomponent render return class framedbutton extends reactcomponent render return rendering react knows resulting rendered tree structure reimplement react scratch could still keep track tree structure algorithm would something like take topmost element type create instance class call function function get result element recurse note feature like context nt actually care elements created fact walk tree top bottom call functions gives path point time calculate current context traversing path merging contexts provided components order however refs different path alone way infer owns essential difference way know current string ref api react hypothetical reimplementation write currently executing component somewhere call render method read exit late js pseudocode reactdom function renderclasscomponent instance sharedbetweenreactandreactdomcurrentowner instance instancerender sharedbetweenreactandreactdomcurrentowner null pseudocode react function createelement type config let ref configref typeof ref string let capturedowner sharedbetweenreactandreactdomcurrentowner ref inst gt capturedowner ref inst nt implementation detail way implement exact string ref api two packages want fix anything change api example passing explicit argument something like would solve issue explicit link element owner component instance api change microsoft deprecated api functionality windows windows years ago find new software written using api even today tutorials suggest use look react blog see afraid changing api every major version prune deprecations soon viable migration path particular case string refs deprecated yet dedicate time expect following year deprecate support gone next major would nt store directly owning react object track global instead force user pass ref holder reactcreateelement believe pretty much proposed tracked pretty likely indeed solution go urgent changes right come back issue likely hope helps", "d": "1/2018"}, {"body": "peonmodel bug try reload page select input date first paste string wo nt work cause ca nt chrome choose input type text first paste works fine problem still passing string type text type date get output time", "d": "1/2018"}, {"body": "closing per comment nt checked sure react bug please prepare runnable examples eg fiddles without react demonstrate issue specific react", "d": "1/2018"}, {"body": "related", "d": "1/2018"}, {"body": "yep please see thanks", "d": "1/2018"}, {"body": "ones maintaining typescript definitions react ca nt help sorry", "d": "1/2018"}, {"body": "error quoting comes typescript react", "d": "1/2018"}, {"body": "yes otherwise would nt able compare new old ones", "d": "1/2018"}, {"body": "compare specific prop", "d": "1/2018"}, {"body": "html notion custom tags like rely app break future browsers add tag name could potentially use custom elements supported browser feature dash name ensure tag later reclaimed browser hope helps", "d": "1/2018"}, {"body": "think normal array mutable object javascript time create component array gets reversed", "d": "1/2018"}, {"body": "nanomosfet yes expected see consolelog use debugger incorrect behavior array data match rendered output first fiddle match second code except text node", "d": "1/2018"}, {"body": "havunen oh okay see talking extra text makes render differently", "d": "1/2018"}, {"body": "havunen would use case react docs link reference docs says props supposed read guessing child component considered prop accessing therefore think good idea rethink approach handling array could make state observing function lets top components know changed changed change state accordingly", "d": "1/2018"}, {"body": "docs page linked react components must act like pure functions respect props mutating prop calling pure function case behavior anything react make guarantees around calls thus mutations would happen want reverse child order copy first using like fiddle result safe mutate new every time thus even though technically mutation code could break", "d": "1/2018"}, {"body": "second achieving currently requires thirdparty support via libs like somewhat undermines simplicity fragments", "d": "1/2018"}, {"body": "nt seem quite right put something like since domspecific eg works react native think essentially asking standalone sounds bit like maybe something like would make sense current api js import rawhtml reactdom const content dangeroushtml hi content also inspired know hard would implement something like", "d": "1/2018"}, {"body": "gaearon essentially htmlreactparser accomplishes however purposes behind intentionally uglyrepetitive procedure actually serve reminder dangeroushacky thing docs set html directly react type dangerouslysetinnerhtml pass object html key remind dangerous feel like adding maintains notion dangerous amp hacky originally intended example association htmlreactparser could used way could conveniently disguise fact dangerous leaving future maintainers code indication potential vulnerability", "d": "1/2018"}, {"body": "jonnyasmar please refer discussion intentionally kept object property name part supposed tainted rather prop name", "d": "1/2018"}, {"body": "gaearon combing issue still entirely convinced best approach partially due scenarios like following much following code please stick let say two developers dev amp dev b work project dev senior dev well acquainted xss vulnerabilities dev b junior dev knows xss vulnerabilities necessarily wellversed enough recognize dev creates following component know import rawhtml reactdom export class injecthtml extends reactcomponent props html string render const content dangeroushtml thispropshtml dev b comes along discovers source code neat little component called hold beer import injecthtml componentsinjecthtml export class coolcomponentwithhtml extends reactcomponent render return may asking keep happening ops suggested fragment approach absolutely nothing thanks react unprecedented versatility could create sort dangerously deceptive html injecting component benefit fragment approach simplicity allowing functionality component think avoid encouraging overlydry implementations like dev came consistency utilizing also avoid implement two different components accomplish thing wrapperless rendering purpose avoid using also avoid changing behavior devs already used simultaneously creating predictable implementation devs like op rightfully assumed would work regarding react native gracefully degrade necessary nothing sure see problem opinionated future personally love disposal really interested see kind cool functionality afford little gem key attribute passed future may add support additional attributes event handlers idea event handlers would awesome really think try encourage way making robust feature react unnecessarily wrap things probably thing regularly react makes cringe say let make famous", "d": "1/2018"}, {"body": "finding issue struggling find solution see react way inject html without wrappers js generator code use write disk clean react output silly wrapping divs param string html html generated react return string cleaned html export const parsehtml html gt typeof html string return html replace g replace lt cuttlebellesillywrapper g else return html createfile pathtofile parsehtml html", "d": "1/2018"}, {"body": "value nt cleared input cleared state reset resets left nothing cleared", "d": "1/2018"}, {"body": "updated example", "d": "1/2018"}, {"body": "found underlying issue proxypolyfill reactdom attempts use fails issue located", "d": "1/2018"}, {"body": "wbern clarify react use development build developing seeing production production might accidentally running dev build production could try add heuristic detecting bad polyfills typically people develop using browser already supports nt think high priority", "d": "1/2018"}, {"body": "case want able run tests locally development build indeed right dev build proxy polyfill seems function ca nt assigned properties sure guess something could checked whether function thanks reply", "d": "1/2018"}, {"body": "function intentionally call think conclusion react expects real proxy polyfill implements limited subset incompatible react uses two possible solutions see stop using polyfill together react wo nt work together could change logic handle polyfill specifically feel like really responsibility fix also easy fix nt mind much expect people might start using polyfill widely future proxies become used libraries maybe good compromise fix side could please verify solves issue side", "d": "1/2018"}, {"body": "looks exactly way solve ok case turned want proxy polyfill sealed need turn babel polyfill little shape still think considering proxy polyfill lot people using taking best approach thanks much", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "fixed merger", "d": "1/2018"}, {"body": "alexfromapex mind angular injector pain tried get rid never use show example injector behaves better es modules", "d": "1/2018"}, {"body": "bit hard discuss without specific use case add something lets arbitrarily break encapsulation components however something similar achieved aliasing modules bundler eg webpack option override specific module fork could move overridable data andor components files context basically di mechanism based parent component tree hope helps", "d": "1/2018"}, {"body": "trysound gaearon added use additional use cases explored many avenues including aliasing modules problem always requires backend team modify deployment instead frontend simply hooking manipulating output deployment solution could even documented way manipulate data inject components without modifying current codebase necessarily code updates people problem", "d": "1/2018"}, {"body": "would solve problem generic javascript code eg ca nt modify functions libraries components different functions respect", "d": "1/2018"}, {"body": "might find way diagnose helpful", "d": "1/2018"}, {"body": "helpful thanks look like react rendered twice copy development one production look", "d": "1/2018"}, {"body": "might help try case accidentally duplicate could also bad webpack config eg accidentally including twice clever aliasing bad bundle splitting config", "d": "1/2018"}, {"body": "haha yeah three copies great starting point pull duplicates thanks help", "d": "1/2018"}, {"body": "since determined nt issue react going go ahead close", "d": "1/2018"}, {"body": "please create rfc thanks", "d": "1/2018"}, {"body": "ok thank", "d": "1/2018"}, {"body": "use", "d": "1/2018"}, {"body": "cc nhunzaker aweary", "d": "1/2018"}, {"body": "think happens default value reported checkboxes radios absence value propertyattribute unfortunately controlled text input code detatches value assigning updates master prevent prep test case send also working pr isolates controlled checked controlled value code help prevent accidents like future", "d": "1/2018"}, {"body": "sent lucky number", "d": "1/2018"}, {"body": "test confirm works intended master land next release react", "d": "1/2018"}, {"body": "provide complete example run please", "d": "1/2018"}, {"body": "gaearon github repo project test file failing", "d": "1/2018"}, {"body": "hi welcome glad want learn react lots resources around maybe good place start documentation support avenues want keep issue tracker clear bugs feature requests close good luck", "d": "1/2018"}, {"body": "hi dan like take direction put check determine component extended correctly tried putting reactpartialrendererjs server tests threw warning nt think right", "d": "1/2018"}, {"body": "maybe want right line", "d": "1/2018"}, {"body": "thanks think got pointed right direction ended case branch pr incoming shortly", "d": "1/2018"}, {"body": "yes conceptually equivalent", "d": "1/2018"}, {"body": "gaearon ah means functional setstate really get latest state including pending one coming non functional setstate doc nt say explicitly though", "d": "1/2018"}, {"body": "open rewordings docs feel free send prs important tradeoff keep docs readable people nt care details much", "d": "1/2018"}, {"body": "objects work javascript react anything magic mutate object object changes sharing object two parts code mutations seen suggested solution avoid mutation example hope helps", "d": "1/2018"}, {"body": "got thanks", "d": "1/2018"}, {"body": "bug warning telling scheduled extra update sometimes unavoidable eg layout measurement many cases completely avoidable causes performance issues unfortunately react redux currently written way triggers warning nothing side plan update react redux future versions", "d": "1/2018"}, {"body": "hello im rookie would like contribute learn something would great could help thanks", "d": "1/2018"}, {"body": "rockieroshan watch issues tagged good first bug label please nt post unrelated questions issues keep discussion focused", "d": "1/2018"}, {"body": "call cwm constrcutor need run something like scroll listen scroll event user see component give offset", "d": "1/2018"}, {"body": "nesmalltown ended something pretty similar thought would make cleaner would eliminate need pass similar component via props", "d": "1/2018"}, {"body": "following jsfiddle reproduces bug nt run sure url correct", "d": "1/2018"}, {"body": "using settings vm running either", "d": "1/2018"}, {"body": "apologies appears messed something fiddle sending one sadpandabear sent accurately reproduces bug", "d": "1/2018"}, {"body": "verify happens similar setup without react osspecific likely browser bug", "d": "1/2018"}, {"body": "ran vanilla js test jsfiddle using oschrome configuration achieved results looks like upstream issue chrome aweary suggested anyone wondering discussion bug opened following chromium issue", "d": "1/2018"}, {"body": "brandonrninefive thanks following chromium bug report close since issue react", "d": "1/2018"}, {"body": "hey welcome react try keep react issue tracker focused react bugs feature requests general support try one many avenues support noted docs", "d": "1/2018"}, {"body": "check line happens probably forgot import component imported wrong way like error message tries tell", "d": "1/2018"}, {"body": "please provide complete example reproduces issue far wrote enough", "d": "1/2018"}, {"body": "yeah tried reproducing codepen using createreactapp unable hoping insight", "d": "1/2018"}, {"body": "judging warning somehow gets method attached probably code maybe bad hoc something like", "d": "1/2018"}, {"body": "turns roll react redbox lingering around causing problem removed good", "d": "1/2018"}, {"body": "alternative adding new react api could moved userspace op could amend example js import createref createreactref class mycomponent extends reactcomponent render return componentdidmount thisrefsdivvaluefocus really dumb implementation js export default function createref inst refname instrefs instrefs inststringreffuncs inststringreffuncs inststringreffuncs refname inststringreffuncs refname c gt instrefs refname c return inststringreffuncs refname may literally work asis given think touching weird still seems like api could live outside react core would even possible write babel transform automatically", "d": "1/2018"}, {"body": "alternatively js function createref function ref c refvalue c return ref nt know edge cases exactly match live userspace nt require changes reconciler unless per intention users vanilla function refs migrate scheme well", "d": "1/2018"}, {"body": "benefit moving file size presumably would small enough vast majority libs would need anyway", "d": "1/2018"}, {"body": "sure nt quite follow conclusion idea going forward ref users use rather attaching callback ref convenience thing people currently using string refs going forward people still mostly use callback refs convenience thing seems like putting user space reduces react api surface area", "d": "1/2018"}, {"body": "think idea people use callback refs relegated power user feature since cumbersome harder explain", "d": "1/2018"}, {"body": "makes sense thanks", "d": "1/2018"}, {"body": "also related", "d": "1/2018"}, {"body": "main difficulty removing polyfill portal support unlike events nt fall naturally synthetic event system think minimum basic code add portal support back question whether better current polyfill shrug", "d": "1/2018"}, {"body": "jquense think qualifies good first issue someone interested picking would remove click event verify correctness browsers using dom test fixtures possibly remove click event related code changeeventplugin", "d": "1/2018"}, {"body": "past selves way head us p", "d": "1/2018"}, {"body": "dang haha fair enough take another look pr", "d": "1/2018"}, {"body": "ashamed admit many times searched repo find tried solve problem", "d": "1/2018"}, {"body": "additions api please create new rfc thanks", "d": "1/2018"}, {"body": "please follow issue template clear asking", "d": "1/2018"}, {"body": "bug shallow renderer want send fix", "d": "1/2018"}, {"body": "nt know ideas", "d": "1/2018"}, {"body": "try split two ie similarly react dom together", "d": "1/2018"}, {"body": "sounds good wan na", "d": "1/2018"}, {"body": "sure", "d": "1/2018"}, {"body": "gaearon done", "d": "1/2018"}, {"body": "done merge shall close issue", "d": "1/2018"}, {"body": "think existing fix work fine thought fixing like", "d": "1/2018"}, {"body": "think intentional behavior docs correct rather nt detailed enough imply wrong thing", "d": "1/2018"}, {"body": "close please feel free file issue docs instead", "d": "1/2018"}, {"body": "currently possible discussion", "d": "1/2018"}, {"body": "milesj ok cool thanks trap trick writing according javascript render var state thisstate render thisstate return think cause problem caused closures return closure problem remains return ok get real time thisstate use state getter failed thats think know understand mistake thanks sebmarkbage sorry bothering", "d": "1/2018"}, {"body": "hey try keep issue tracker bug reports feature requests please check support resources general questions react thanks", "d": "1/2018"}, {"body": "returns result time invoked change inputs props state change input possible returns different result still pure function somewhat loose definition pure pure functions allowed use state outside function react encourages patterns approximate purity much reasonable long side effects calls pure functions pure enough react", "d": "1/2018"}, {"body": "hope helps", "d": "1/2018"}, {"body": "performing sequence mounts unmounts causes error appears bug occurs reconciler", "d": "1/2018"}, {"body": "wan na try digging bug", "d": "1/2018"}, {"body": "tagging good issue get easy one", "d": "1/2018"}, {"body": "yes love dig", "d": "1/2018"}, {"body": "sounds good probably want look beginwork completework childfiber handle calls returns let know aspects confusing try explain", "d": "1/2018"}, {"body": "seems like minor mistake reconciling children causing duplicate deletions cases opened pull request changes", "d": "1/2018"}, {"body": "fixed likely bugs callreturn try stresstest feature find would great", "d": "1/2018"}, {"body": "nt jsx moment though discussion around adding jsx spec repo sorry phone otherwise link case less react jsx features", "d": "1/2018"}, {"body": "personally think try start maybe great", "d": "1/2018"}, {"body": "think related react nt override globals like", "d": "1/2018"}, {"body": "nt understand description expected behavior first time update function called see console log statement within single ms statement next time update function called seconds later see console log statements delayed expected delayed see calls within ms first time another calls within ms second time etc exactly expect code nt explain unexpected obvious expect sleep function work first time called work mean definitely second pause calls check putting say work stands ui broken interval calls update function minutes production nt help either nt stated exactly consider broken", "d": "1/2018"}, {"body": "gaearon assuming something react sure else would causing delayed production expect happen essentially wait second make api call component renders nt happen get rate limited minutes happens call per second rate limited work mean definitely second pause update consolelog calls check putting consolelog update say sleep work clarify trying delay update method trying delay network calls happen update method happen approximately second nt happen initial render ie nt work happening per second second time method called happen confident absolutely nothing react trust judgement look elsewhere solution", "d": "1/2018"}, {"body": "think mental model works slightly wrong try mentally translate callbacks probably see mistake make outer function async replace regular loop get desired behavior", "d": "1/2018"}, {"body": "might help", "d": "1/2018"}, {"body": "btw would understood original issue wrote expect one second interval items rather", "d": "1/2018"}, {"body": "would like work issue first contribution", "d": "1/2018"}, {"body": "benbraou", "d": "1/2018"}, {"body": "working issue weekend", "d": "1/2018"}, {"body": "overview changes updating comment subtasks issue get implemented subtasks x handle jest junit reports generation jestjunit reporter used output junit report reports junitjestresultsxml example circleci build insight based generated junit report found testentrypointsh calling several times unit test failure duplicated build summary x handle eslint junit reports generation every eslint run temporary junit report file created temporary generated files merged synchronously enhanced needed asynchronously one file finally temporary files removed synchronously introduced new file groups utilities around eslint junit formatting eslint script either use default formatter formatter example react circleci build insight based generated junit report found shows problems warning report currently broken multiple tests assessment whether better approach vs single test done x handle flow junit reports generation flow result treated single test single test output added exports method allowing writing single test junit repot example react circleci build insight based generated junit report found x handle prettier junit reports generation example react circleci build insight error prettier returns warnings x handle checklicensesh junit report generation refactoring new shell script writejunitreportsh create simple report example react circleci build insight error patent keyword used x handle checkmodulessh junit report generation example react circleci build insight error keyword used x testprintwarningssh nothing done script simply used extract messages warning x handle trackstats junitsh report generation also includes refactoring junit mode environment variable one entry point write junit reports x handle buildsh junitsh report generation x handle uploadbuildsh junit report generation example react circleci build insight error upload fails found x squashing commits fix upload failure x added junit report generation coveralls", "d": "1/2018"}, {"body": "sophiebits would like check proposal flow junit report generation start implementation flow supports json output propose flow script run normal dev mode normal output logged console case circleci build flow run option json output provided transformer implement generate junit output transformer could also used generate reports based return build scripts uploadbuildsh testprintwarnings think", "d": "1/2018"}, {"body": "think flow fine treat single test single output use formatted output sure much advantage try split flow multiple tests", "d": "1/2018"}, {"body": "see thank", "d": "1/2018"}, {"body": "pull request submitted summary currently build fails way know happened going logs circleci goal pr output junit xml metadata every build step allows circleci summary page display exactly step failed pr handle jest junit reports generation jestjunit reporter used output junit report reports junitjestresultsxml warning calling several times unit test failure duplicated build summary handle eslint junit reports generation eslint script either use default formatter formatter warning junit mode eslint results xml format written report fils also logged console may noise build logs warning tasks described package used initially writing junit report handle flow junit reports generation flow result treated single test single test output handle prettier junit reports generation handle checklicensesh junit report generation handle checkmodulessh junit report generation testprintwarningssh nothing done script simply used extract messages warning handle trackstats junitsh report generation handle buildsh junitsh report generation handle uploadbuildsh junit report generation handle junit report generation coveralls handle junit report generation danger", "d": "1/2018"}, {"body": "hi use issue tracker bug reports feature requests react question please check community support resources", "d": "1/2018"}, {"body": "please provide full project reproducing unfortunately typically people post separate files instructions reproduce issue ends unreproducible ask publish complete project github verify following instructions still reproduces thanks", "d": "1/2018"}, {"body": "git clone cd reactreproduce cd builds npm install node nodemoduleswebpackbinwebpackjs ok cd fails npm install node nodemoduleswebpackbinwebpackjs fails", "d": "1/2018"}, {"body": "works", "d": "1/2018"}, {"body": "figure", "d": "1/2018"}, {"body": "since works look trouble somwhere else", "d": "1/2018"}, {"body": "look discovered strange reason reactdom nodemodulesreactdom contains packagejson try", "d": "1/2018"}, {"body": "definitely exists likely either npm bug behind bad npm proxy try updating npm using yarn instead", "d": "1/2018"}, {"body": "helped thank enthusiasm help", "d": "1/2018"}, {"body": "awesome cc zkat case nt normal heard cleaning cache never necessary fix", "d": "1/2018"}, {"body": "reasonable issues hash picking http caches clearing cache using latest npm probably easiest solution", "d": "1/2018"}, {"body": "please see", "d": "1/2018"}, {"body": "react issue jsx one let keep track right repository", "d": "1/2018"}, {"body": "thanks pointer", "d": "1/2018"}, {"body": "provide working reproduction please thanks", "d": "1/2018"}, {"body": "looks like works maybe accidentally wrote wo nt work close provide info nt work happy fix right repository would probably", "d": "1/2018"}, {"body": "thanks looking right onclick propsonclick works bad use onclick gt propsonclick work onclick gt propsonclick close", "d": "1/2018"}, {"body": "thanks sweet", "d": "1/2018"}, {"body": "thanks everyone involved makes every day life much better", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank using react time enjoying hard work much appreciated", "d": "1/2018"}, {"body": "yes many thanks use many facebook excellent tools frameworks every day made development experience immeasurably enjoyable keep", "d": "1/2018"}, {"body": "thank made web development fun used jquery past nightmare synchronize ui app internal state react redux ui automatically synchronized state code less cluttered synchronization code using react code single js file introduced react learned split code smart components dumb components actions reducers vendor files made code easier search hit ctrl p jump part need work sincerely appreciate work make web development enjoyable easy human brains", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank much pleasure work environment", "d": "1/2018"}, {"body": "thanks making happen", "d": "1/2018"}, {"body": "guys unthinkable made convert ios native diehard platform agnostic reactnative evangelist everybody behind react reactnative flow jest kudos thank keep good work beyond", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank happy new year", "d": "1/2018"}, {"body": "react one first javascript frameworks looked nt get time understand properly fallen love huge thank also happy new year", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank happy new year learned lot amazing community", "d": "1/2018"}, {"body": "thank hard works guys inspired lot keep awesome clap tada", "d": "1/2018"}, {"body": "thank hard work happy new year open source come", "d": "1/2018"}, {"body": "thank inspiration happy new year", "d": "1/2018"}, {"body": "thank much everything", "d": "1/2018"}, {"body": "thank everyone made react made open source one resolution year atleast raise one pr react merged", "d": "1/2018"}, {"body": "thanks facebook make react ecosystem open source thanks contributors make react ecosystem better", "d": "1/2018"}, {"body": "thank learn lot", "d": "1/2018"}, {"body": "thank guys making one intuitive gamechanging libraries since jquery massive respect work guys open source community mindboggling much advanced webdevelopment whole sure angular might first around vue might simpler cases opinion react really hits sweetspot amount complexity combined functionality using library year honestly think one amazing things webdevelopment long long time happy around see one amazing libraries change way frontend industry works guys straightup game changers accomplished incredible things industry community instead keeping private use facebook guys decided make open source help advancement technology whole want thank guys amazing library guys brought us please keep good work wish amazing new year", "d": "1/2018"}, {"body": "thanks lot gabegreenberg awesome work reactjs wish", "d": "1/2018"}, {"body": "thank team react", "d": "1/2018"}, {"body": "thank facebook reactteam making webnative development joy", "d": "1/2018"}, {"body": "thank react team", "d": "1/2018"}, {"body": "thank react team love awesomeness", "d": "1/2018"}, {"body": "thank react team", "d": "1/2018"}, {"body": "thank react team coming years great", "d": "1/2018"}, {"body": "muchas gracias", "d": "1/2018"}, {"body": "thank providing platform productive fun made job better every day years", "d": "1/2018"}, {"body": "thank much hard work appreciated looking forward brings", "d": "1/2018"}, {"body": "thank everyone react team", "d": "1/2018"}, {"body": "thank lot hard work", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank guys awesome", "d": "1/2018"}, {"body": "thanks amazing incredible come", "d": "1/2018"}, {"body": "thank facebook", "d": "1/2018"}, {"body": "really grateful prepack partial evaluation symbolic execution abstract interpretation advanced concepts learnt theory seeing action open source project made program specialisation techniques accessible everyone specially without formal education thank much ofcourse thank react new direction new ideas though conflicting sometimes making everyone rethink javascript web frontend toes constantly correcting thanks open source work facebook done react related projects golden days would say", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank react team really love guys hard work much appreciated", "d": "1/2018"}, {"body": "thank react team facebook opensource team making react ecosystem", "d": "1/2018"}, {"body": "thanks open source developers", "d": "1/2018"}, {"body": "thank react team", "d": "1/2018"}, {"body": "thank guys great tools wish best new year", "d": "1/2018"}, {"body": "thank much", "d": "1/2018"}, {"body": "thank react team opensource contributors", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "huge thanks entire storybook team awesome software support", "d": "1/2018"}, {"body": "want thank great team making amazing work keep great work hearteyes hearteyes", "d": "1/2018"}, {"body": "thank react team making learning easy", "d": "1/2018"}, {"body": "thanks rock react awesome", "d": "1/2018"}, {"body": "thank rock", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank making development easier effective contributors great years ahead", "d": "1/2018"}, {"body": "thanks hard work", "d": "1/2018"}, {"body": "thanks lot making framework help development easier indonesia grateful react team contributors hard works keep", "d": "1/2018"}, {"body": "thanks awesome work", "d": "1/2018"}, {"body": "thank guys open sourcing tools makes everyday job pleasant efficient", "d": "1/2018"}, {"body": "thank react guys keep awesome work heart sparkles fire tada metal", "d": "1/2018"}, {"body": "thanks everything guys happy new year per\u00fa", "d": "1/2018"}, {"body": "thanks everyone", "d": "1/2018"}, {"body": "thank react changed career love", "d": "1/2018"}, {"body": "thanks everything guys hard work us", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "thanks working hard", "d": "1/2018"}, {"body": "thanks lot really enjoy working technologies every day ca nt see working without", "d": "1/2018"}, {"body": "really great inspiring work folks keep coming", "d": "1/2018"}, {"body": "thanks everything", "d": "1/2018"}, {"body": "thanks one", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank smile", "d": "1/2018"}, {"body": "thanks farreaching good work", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thank making development lot fun keep awesome work", "d": "1/2018"}, {"body": "thank everyone facebook every contributor across facebook oss", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "onya team", "d": "1/2018"}, {"body": "many thanks", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "spending per day react since years still enjoying thanks looking forward future evolutions", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "thank hard work react", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thanks open source", "d": "1/2018"}, {"body": "thank work", "d": "1/2018"}, {"body": "thank fantastic open source hard work keep way", "d": "1/2018"}, {"body": "thanks lot team", "d": "1/2018"}, {"body": "thanks team facebook hard work put react great way tying thmlcssjs together beautiful looking functioning system shipit", "d": "1/2018"}, {"body": "thanks team happy new year", "d": "1/2018"}, {"body": "thanks lot facebook team", "d": "1/2018"}, {"body": "guys inspiration thank", "d": "1/2018"}, {"body": "hello world", "d": "1/2018"}, {"body": "thank much work", "d": "1/2018"}, {"body": "thank much work", "d": "1/2018"}, {"body": "happy new year lets rock", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thank amazing work", "d": "1/2018"}, {"body": "thank hard work keep", "d": "1/2018"}, {"body": "thanks guys thanks dan", "d": "1/2018"}, {"body": "thanks work done make cool products react also jest immutable available everyone", "d": "1/2018"}, {"body": "thanks facebook team made something amazing lt", "d": "1/2018"}, {"body": "thaaaaaaaanks", "d": "1/2018"}, {"body": "thank contributing open source universe hardwork appreciated globe", "d": "1/2018"}, {"body": "long christmas holiday", "d": "1/2018"}, {"body": "us back today think close thanks hoping disappoint year either", "d": "1/2018"}, {"body": "nice see dan miss lot", "d": "1/2018"}, {"body": "learning react redux since would like contribute learn things way sorry sounds dumb", "d": "1/2018"}, {"body": "thank effort hard work guys amazing happy new year", "d": "1/2018"}, {"body": "thank happy", "d": "1/2018"}, {"body": "thank great work happy", "d": "1/2018"}, {"body": "jishaal notifications githubcom sent monday january pm subject facebookreact facebook engineers thank facebookreact react noreplygithubcom cc subscribed subscribed noreplygithubcom thanks lot team receiving subscribed thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "would like contribute learn things", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "d\u011bkuji", "d": "1/2018"}, {"body": "thank guys", "d": "1/2018"}, {"body": "thanks hard work", "d": "1/2018"}, {"body": "thank much feature", "d": "1/2018"}, {"body": "great work", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thank love react great work", "d": "1/2018"}, {"body": "thank best open source community", "d": "1/2018"}, {"body": "thank react great", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thanks facebook engineers working hard within open source met many great people year looking forward working next year", "d": "1/2018"}, {"body": "humbly thank appreciate engineers facebook many great projects would nt possible without endless efforts thank", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "thank awesome cheers better internet", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thanks lot", "d": "1/2018"}, {"body": "massive thank time energy amp passion", "d": "1/2018"}, {"body": "cheers thank great", "d": "1/2018"}, {"body": "thanks making react today owe guys one p", "d": "1/2018"}, {"body": "respect guys thank hard work energy passion wish awesome", "d": "1/2018"}, {"body": "big thank entire team facebook gaearon acdlite sophiebits bvaughn sebmarkbage tomocchino tireless efforts towards making react loved library", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thanks open source team facebook keep great work front end changed much react good way", "d": "1/2018"}, {"body": "thank contribution community stand shoulders many giants react", "d": "1/2018"}, {"body": "guys amazing thanks project many people life changed", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "thanks ton wonderful library highly appreciate", "d": "1/2018"}, {"body": "thank hard work really appreciate react community", "d": "1/2018"}, {"body": "thank astonishing work", "d": "1/2018"}, {"body": "thanks ton everyone pushing react awesome tool happy user", "d": "1/2018"}, {"body": "thank making react mit", "d": "1/2018"}, {"body": "last two years react coming thanks lot", "d": "1/2018"}, {"body": "thank making react keeping mit completely changed way work frontend loving", "d": "1/2018"}, {"body": "thank much", "d": "1/2018"}, {"body": "thank creating react making mit cc jordwalke", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "happy new year aweary thank helping issue", "d": "1/2018"}, {"body": "function", "d": "1/2018"}, {"body": "maybe child array iterator unique key prop received put actual value", "d": "1/2018"}, {"body": "hey working see tests enhace far well realised tests considering null keys proceed way test eventually values perhaps open pr later guys give thoughts", "d": "1/2018"}, {"body": "close clear would accomplish reply happy continue discussion", "d": "1/2018"}, {"body": "eh nt know", "d": "1/2018"}, {"body": "pr merged upstream", "d": "1/2018"}, {"body": "progress", "d": "1/2018"}, {"body": "gaearon experienced regression yesterday upgrading simple repro problem seeing issue different error message sure still working fix take closer look later today anyone else experiencing problem workaround found far remove conditional logic least fix found", "d": "1/2018"}, {"body": "kevinzwhuang would like work figuring fix", "d": "1/2018"}, {"body": "sure gaearon work finding fix digging devtools findings note childnodes single element flattened text removed since mismatch flattened childnodes seeing elements childnodes array instead single flattened text element might something like jorrit mentioned", "d": "1/2018"}, {"body": "kevinzwhuang make video blog post u solve issue u solved try make video possible", "d": "1/2018"}, {"body": "getting closer finding root problem running code looks like changed operation would execute update text cases executes whatever variation operation reactdom assumes text nodes added removed fact nt child node flattened option text nodes also flattened flattening might issue whereas normal set operations generic components text nodes nt flattened components gaearon think solution something going back old behavior updates sure yet go yet step closer finding", "d": "1/2018"}, {"body": "sounds good really nt dug code happy review pr something works", "d": "1/2018"}, {"body": "think function something strange correct use instead like options problem contain solution js reactdomfiberoptionjs file function flattenchildren children let content documentcreateelement span flatten children warn nt strings numbers invalid types ignored silently skip invalid dom nesting warning catches cases fiber reactchildrenforeach children function child child null return return content", "d": "1/2018"}, {"body": "gaearon would please code review", "d": "1/2018"}, {"body": "probably provide better error message component type undefined", "d": "1/2018"}, {"body": "one working today tomorrow also happy new year", "d": "1/2018"}, {"body": "sure", "d": "1/2018"}, {"body": "closing could nt reproduce us problem please provide full reproducing example", "d": "1/2018"}, {"body": "tags capitalized already rendered inside svg one possible cause would tags created outside react mistakingly created using rather", "d": "1/2018"}, {"body": "misunderstood aweary comment thought repro original example decided try spent minutes spinning new react project try original code unfortunately realized code provided actually runnable asis wrap component recharts container provide expected props etc tried putting inside best guess trying reproduce unfortunately productive minutes future reporting bugs please provide examples people actually run somebody goes ten issues issues requires six minutes verify turns unreproducible hour spent nothing much appreciate time took file issue sad could fixed instead go issues know able look assuming reproducing case future thank", "d": "1/2018"}, {"body": "get right implementation close stale reference issue", "d": "1/2018"}, {"body": "think better solution disagree would like change api behavior suggest file rfc obvious behave eg objects start making exceptions rfc would let expand", "d": "1/2018"}, {"body": "closed", "d": "1/2018"}, {"body": "backspace fire topkeydown topinput topkeyup three event think problem event", "d": "1/2018"}, {"body": "also clemmy might context behavior chosen", "d": "1/2018"}, {"body": "mentioned children traversal semantics treats element syntax created shorthand pretext semantics exist since simply desugaring proposed changes semantics switching longer nonbreaking change think interesting idea fact take different component implement leading complexity breaks compatibility compelling response amannn patch change semantics separate behaviour klimashkin requesting behavioural change", "d": "1/2018"}, {"body": "think changing behavior might reasonable wo nt get much issue please submit rfc proposal", "d": "1/2018"}, {"body": "going close likely react bug probably affects nt actively working anymore welcome try updating react see issue persists", "d": "1/2018"}, {"body": "think accepts component instance first argument div agree api confusing practice people using enzyme days nt think invest much work fixing encourage try enzyme", "d": "1/2018"}, {"body": "reason need thisstate immutable componentwillmount runs feels like much understand mounting starts nt really get working enabling asynchronous rendering likely change assumptions lifecycles work particular want able abort rebase rendering work might fire multiple times mutations problematic fact trying softdeprecate methods favor alternatives safe async sorry detailed answer still figuring would work case api likely become constrained side effects mutations rather relaxed nt come across particularly supportive around sorry", "d": "1/2018"}, {"body": "say unlikely remove existing warning might consider adding separate method declare initial state would need rfc review detailed design proposal please create one interested sorry could nt help", "d": "1/2018"}, {"body": "reporting problem hot reloading supported feature react package using deprecated recommend removing webpack config waiting official hot reloading solution working", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "sure reproduces problem nt third party dependencies", "d": "1/2018"}, {"body": "close since nt full repro create one please reopen file new issue thanks", "d": "1/2018"}, {"body": "alright solved last week thought post solution incase someone else stuck attempting code splitting route level eg bundles bundles dynamically imported async nature brief moment call screen would flicker go blank caused warning cause warning thrown dom tree server client different solution call inside promise bundle loaded follow docs really good explains step step", "d": "1/2018"}, {"body": "interested taking stab", "d": "1/2018"}, {"body": "help tried replicate issue local mission fixtures getting error like code import polyfills import loadreact reactloader loadreact gt import componentsapp app gt const react reactdom window reactdomrender reactcreateelement appdefault documentgetelementbyid root class numberinput extends reactpurecomponent constructor props super props thisonchange thisonchangebind thisstate value", "d": "1/2018"}, {"body": "avinashdvv afaik issue happening way babel typically transpiles classes might need add plugin like order work correctly", "d": "1/2018"}, {"body": "somebody search file chrome bug report please", "d": "1/2018"}, {"body": "could nt find related issue created new one", "d": "1/2018"}, {"body": "someone chrome team responded sounds like intentional change introduced commit like investigate see way work around react", "d": "1/2018"}, {"body": "looked issue found information seems react blur event nt getting dispatched event emitter disabled chrome native blur event triggered reactdom method disabled method enabled chrome native blur event seems triggered window time description chrome commit referenced says blur immediately attribute change made element unfocusable really sure immediately means context blur event used triggered also sure differs browsers interestingly commented line reactdom disables event emitter solved problem also ran tests everything passed maybe gaearon someone else react team provide insight event emitter needs disabled commit", "d": "1/2018"}, {"body": "point exactly say events work example fiddle would also help", "d": "1/2018"}, {"body": "bad nt chrome blog post changes mentions able reproduce issue attach handler target element using vanilla javascript distinctly observed firing properly circumstances open bug reports unrelated projects regarding similar issues interest also", "d": "1/2018"}, {"body": "close issue reproducing case react fault react something nt please reopen file new issue look thanks", "d": "1/2018"}, {"body": "welcome last checked react nt implementuse might worth mapping mouse touch events seemingly bettersupported modern way case", "d": "1/2018"}, {"body": "please create rfc otherwise hard progress issue like thanks", "d": "1/2018"}, {"body": "discussing comments determined containers need polyfill removed time closing issue action items open new issue", "d": "1/2018"}, {"body": "issue may specific draft someone wants investigate determine exactly problem maybe remove code react", "d": "1/2018"}, {"body": "issue div anyone using type input would need polyfill draftjs example div really want remove avoid gotcha users would want devonly warning use would want provide examples use polyfill outside react", "d": "1/2018"}, {"body": "yes selectionstart exist need order restore selection may need draft moved logic draft could skip selection restoration logic contenteditable already warning contenteditable saying unsupported", "d": "1/2018"}, {"body": "officially supported endorsed project using taking experimental tech everything comes", "d": "1/2018"}, {"body": "add issue removing reacthotloader resolved addition issue happened outputting react components classes downcompiling classes functions also resolved issue", "d": "1/2018"}, {"body": "please file issues maintainers wo nt know nt let know", "d": "1/2018"}, {"body": "works sounds like already solved userland sure react could better given focus bundle size see us adding utilities reactdom api proposal please file discuss detail otherwise actionable closing", "d": "1/2018"}, {"body": "prepare reactless reproduction file bug edge solved latest edge", "d": "1/2018"}, {"body": "fixed keep open next action item prepare minimal reproduction nt involve react", "d": "1/2018"}, {"body": "gaearon sure", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "glad fixed way make release soon", "d": "1/2018"}, {"body": "likely cut release week", "d": "1/2018"}, {"body": "meantime blocking master grab builds", "d": "1/2018"}, {"body": "dereklieu use package new version released", "d": "1/2018"}, {"body": "gaearon update expecting fix land npm", "d": "1/2018"}, {"body": "danwad cmon build react package release several lines webpack config", "d": "1/2018"}, {"body": "plan release within week", "d": "1/2018"}, {"body": "resolved start working sorry new open source", "d": "1/2018"}, {"body": "think issue still exists consistent", "d": "1/2018"}, {"body": "reference call dibs bug", "d": "1/2018"}, {"body": "got", "d": "1/2018"}, {"body": "encounter practice cases matter speed downsides prooosal", "d": "1/2018"}, {"body": "encounter practice cases matter matter cases need print component b change case propagate value component get expected personally nt care much like unexpected behavior case b change component using comparison behavior case expected treated value expect rerender occurs though behavior case unexpected ok rerender still expect component print speed downsides prooosal see actually two problems two proposals proposal fix case sure speed downsides nt expect react slowdown proposal fix double render case b using samevaluezero instead samevalue expect work least slower current objectis polyfill shipped fbjs package compare also nt expect much downgrade stop ship polyfill additional checks hood current polyfill", "d": "1/2018"}, {"body": "mean end sequence prop practice curious real world use case", "d": "1/2018"}, {"body": "example xy x equals negative number", "d": "1/2018"}, {"body": "alternatively nt evaluate inside react happen", "d": "1/2018"}, {"body": "idk yet let check", "d": "1/2018"}, {"body": "turns react issue evaluates injecting dom think better keep things someone whants render done userland seems prevent rerendering changing polyfill samevaluezero fbjs impossible print negative zero example bellow immediate change positive zero", "d": "1/2018"}, {"body": "think everything works expected great dive spec react enjoyed sorry bothering", "d": "1/2018"}, {"body": "closing per lack response", "d": "1/2018"}, {"body": "also experiencing double click disabled radio inputs", "d": "1/2018"}, {"body": "think check element click disabled current target set event stoppropagation prevent bubble", "d": "1/2018"}, {"body": "could please turn rfc", "d": "1/2018"}, {"body": "close issue trying funnel specific api proposals rfc repo please open one interested thanks", "d": "1/2018"}, {"body": "truth really longterm roadmap watching participating probably best way stay informed changes making next months", "d": "1/2018"}, {"body": "struggling understand exactly want questions react encourage check community support resources inside produce one rerender intentional clear whether want two renders instead practical example would probably help", "d": "1/2018"}, {"body": "gaearon took sometime make codesandbox demo illustrate mean yesterday coding complex js animation react project finding watcher helpful many cases want watcher vue watcher love react two things think vue better watcher animation essentially react automates headache part work state changes ui changes accordingly kind watcher inevitablly cases state changes want simple ui rerender natural react could take care elegant manner watcher understand life cycle sort nail twitts really makes feel confusing life cycle ever react projects apart loading data backend use case life cycle watch certain state props changes something exactly watcher honest watcher helps coding clearly think rather worrying one two life cycle write code ps possible really love suggestion thank much", "d": "1/2018"}, {"body": "react use compare anything like agree separate watcher declaration specific value better watchers created individual values logic complex example want fire single side effect either two values change created two watchers deduplicate requests later similarly might need access current previous values properties one determine eventually need something like anyway least react gives immediately instead leaving scratch head later requirements match limited api suggested api friendly static typing typescript flow easily type props state right types throughout component including lifecycle methods watcher api proposed manually type individual watcher methods make sure diverge propsstate type definitions", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "issue still need fixing", "d": "1/2018"}, {"body": "knowledge yes", "d": "1/2018"}, {"body": "want work fix point undefined props overwritten later ensures objects shape helps performance", "d": "1/2018"}, {"body": "course tried failed following point currently code concats strings leaves children tags effect babysitting developer bit child option tag single string special code path followed nt followed child array strings could get client tests reactdom working push changes made far maybe another experienced dev guide additional changes necessary", "d": "1/2018"}, {"body": "btw thanks performance explanation", "d": "1/2018"}, {"body": "work progress send pr try take", "d": "1/2018"}, {"body": "done thanks", "d": "1/2018"}, {"body": "hi issue seems unassigned take one would love help", "d": "1/2018"}, {"body": "progress far concerned welcome fork continue pr hope get working properly", "d": "1/2018"}, {"body": "great thanks", "d": "1/2018"}, {"body": "hello sent pr fix apparently caused regression introduced integration fiber method overwriting children nodes options setting selected option resulting bug seen previous version feature set prop since bug related removedaltered previous pr unable fork", "d": "1/2018"}, {"body": "thanks faling testcases accidently referenced twice actually meant working pr", "d": "1/2018"}, {"body": "yes needed update tests conditional serverrender streamrender need extra block seemed better place since tests inputs textareas selects also updated clientcleanrender test returns one text node besides also tested using fiddle provided ssr sample project created reproduce warning error confirm issue resolved", "d": "1/2018"}, {"body": "thanks lot", "d": "1/2018"}, {"body": "please refile still problem thanks", "d": "1/2018"}, {"body": "going close favor", "d": "1/2018"}, {"body": "related gaearon", "d": "1/2018"}, {"body": "reply however bigger issue portals featurecomplete ideally want add support server rendering way eg letting container string also wanted support crossrenderer portals thought point would move api react namespace since would longer dom specific think overall agree needs done prefer time changes make reactportal nt think changes trivial though require discussion issue tracking isomorphic portals point might well make ergonomic use", "d": "1/2018"}, {"body": "hey aweary apologies appreciate self assigned day ago timeframe could released", "d": "1/2018"}, {"body": "still support", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "ways make support", "d": "1/2018"}, {"body": "dropped support two years ago fork try get state works may need many changes wo nt supporting officially", "d": "1/2018"}, {"body": "issue still available love tackle contribute open source project use every day adding props often declared objects later read transformed passing dom would provide little clarity camelcase preferred rather ensuring js reserved words used", "d": "1/2018"}, {"body": "another weeks issue still going anyone review proposed solution sorry end year scrambling finish current projects went holidays issue got attention filed think prerequisite really fixing want help please chime easy task", "d": "1/2018"}, {"body": "problem gaearon", "d": "1/2018"}, {"body": "problem snapshot tests components use using latest version updates related error gaearon", "d": "1/2018"}, {"body": "close think general happy take prs docs faq section different tools", "d": "1/2018"}, {"body": "wanted let guys know sometimes get violation even scripts present page suspected caused addons see", "d": "1/2018"}, {"body": "error also occurs use translation assuming since manipulate dom react ca nt reconcile changes took forever track putting case anyone else trying use localizejs issue localizejs workaround add tags containers react components localize nt mutate dom obviously stop getting translated localizejs comes fix js import render reactdom const approot documentgetelementbyid app approotsetattribute notranslate true render approot update localizejs support confirmed bug end working fix meantime solution using usage translate string translate string expressions translate string expressions translate expressions aka variables", "d": "1/2018"}, {"body": "closing browser issue per discussion someone finds related react please file new one two examples react nonreact ones see react wrong", "d": "1/2018"}, {"body": "gaearon maybe really chrome issue maybe react using something leads", "d": "1/2018"}, {"body": "nt keep issues forever open maybe something wrong want investigate happens please help far people investigated could nt find anything react find browser issues nt see reason keep issue open unless see specific thing wrong react case happy take fix", "d": "1/2018"}, {"body": "thoughts complete response means maybe still helpful saying nothing first think agree delaying reconciliation order batch updates beneficial agree rerendering synchronously would inefficient many cases better batch updates know likely get several ones example inside browser handler call want rerender twice instead prefer mark dirty rerender together exiting browser event asking exact thing batching write updates immediately without waiting end reconciliation think one obvious answer either solution tradeoffs reasons think guaranteeing internal consistency even updated synchronously know rerender parent component synchronously batching goes window right objects provided react internally consistent means use objects guaranteed refer fully reconciled tree even older version tree matter use state flushed synchronously proposed pattern would work however say state needs lifted shared across components move parent want highlight typical react apps rely single common kind reactspecific refactoring would daily basis however breaks code model proposed would flushed immediately immediately flush without rerendering parent means would give batching depending case degrade performance significantly also subtle cases break eg mixing data yet flushed proposed flushed immediately create new state refs present problem examples theoretical fact react redux bindings used exactly kind problem mix react props nonreact state know mobx users bumped intuition might bumping scenarios consider fault maybe read much instead read directly mobx mutable objects instead react solve today react update reconciliation flushing would see printed refactoring makes lifting state safe yes inconvenient cases especially folks coming oo backgrounds want mutate state several times instead thinking represent complete state update single place empathize although think keeping state updates concentrated clearer debugging perspective still option moving state want read immediately sideways mutable object especially use source truth rendering pretty much mobx lets also option flush entire tree know api called think documented yet definitely point release cycle note actually forces complete rerendering updates happen inside call use sparingly way break guarantee internal consistency sum react model always lead concise code internally consistent ensures lifting state safe enabling concurrent updates conceptually react behaves single update queue per component discussion makes sense discuss whether apply updates immediately doubts updates applied exact order however case haha recently talking async rendering lot admit done good job communicating means nature r amp go idea seems conceptually promising really understand implications spent enough time one way explaining async rendering react could assign different priorities calls depending coming event handler network response animation etc example typing message calls component need flushed immediately however receive new message typing probably better delay rendering new certain threshold eg second let typing stutter due blocking thread let certain updates lower priority could split rendering small chunks milliseconds noticeable user know performance optimizations like might sound exciting convincing could say need mobx update tracking fast enough avoid rerenders think true cases eg matter fast mobx still create dom nodes rendering newly mounted views still true consciously decided okay always wrapping objects specific javascript library tracks reads writes maybe benefit optimizations much asynchronous rendering performance optimizations think fundamental shift react component model example consider case navigating one screen another typically show spinner new screen rendering however navigation fast enough within second flashing immediately hiding spinner causes degraded user experience worse multiple levels components different async dependencies data code images end cascade spinners briefly flash one one visually unpleasant makes app slower practice dom reflows also source much boilerplate code nice simple renders different view could start rendering updated view background imagine without writing coordination code could choose show spinner update took certain threshold eg second otherwise let react perform seamless transition async dependencies whole new subtree satisfied moreover waiting old screen stays interactive eg choose different item transition react enforces takes long show spinner turns current react model adjustments lifecycles actually implement acdlite working feature past weeks post rfc soon note possible flushed immediately flushed immediately way start rendering new version view background old version still visible interactive independent state updates would clash want steal thunder acdlite regards announcing hope sound least bit exciting understand still might sound like vaporware like really know hope convince otherwise coming months appreciate flexibility react model far understand least part flexibility possible thanks flushing state updates immediately", "d": "1/2018"}, {"body": "wonderful depth explanation decisions behind architecture react thanks", "d": "1/2018"}, {"body": "mark", "d": "1/2018"}, {"body": "thank dan", "d": "1/2018"}, {"body": "issue awesome question awesome answer always thought bad design decision rethink", "d": "1/2018"}, {"body": "thank dan", "d": "1/2018"}, {"body": "call asyncawesome setstate smile", "d": "1/2018"}, {"body": "tend think everything implemented async first find need sync operation well wrap async operation wait completion much easier make sync code async code need wrapper reverse basically requires complete rewrite unless reach threading lightweight", "d": "1/2018"}, {"body": "gaearon thanks extensive explanation nagging long time must good reason nobody tell one makes total sense see really conscious decision thanks lot extensive answer really appreciate maybe read much props instead read directly mobx mutable objects instead think quite true indeed mobx props typically used component configuration domain data typically captured props domain entities passed around components thanks lot", "d": "1/2018"}, {"body": "gaearon thanks detailed great explanation though still something missing think understand want sure event registered outside react means maybe ref example batching taking place consider code class app extends reactcomponent constructor props super props thisstate count componentdidmount thisrefbtnaddeventlistener click thisonclick componentwillunmount thisrefbtnremoveeventlistener click thisonclick onclick gt consolelog setstate thisstatecount thissetstate state gt count statecount consolelog setstate thisstatecount render return setstate setstate setstate setstate small research browsing source code think know happens react ca nt fully control flow event ca nt sure next event fire panicmode trigger state change immediately thoughts thinking", "d": "1/2018"}, {"body": "although bit related probably clearer open new issue new questions use somewhere description link one", "d": "1/2018"}, {"body": "gaearon given terse reply think take would also answer concretely", "d": "1/2018"}, {"body": "mweststrate thought opening new issue realized directly related question asynchronous discussion decisions made making async well thought add making sync nt mind opening new issue nt convince post related issue wink", "d": "1/2018"}, {"body": "kaybarax becuase question sync sync mentioned post think know want sure get official answer hehe smile", "d": "1/2018"}, {"body": "react ca nt fully control flow event ca nt sure next event fire panicmode trigger state change immediately sort although exactly related question updating asking cases react enable batching react currently batches updates inside event handlers managed react react sits top call stack frame knows react event handlers run point flushes update event handler set react currently makes update synchronous know safe wait updates happen soon future versions react behavior change plan treat updates low priority default end coalesced batched together eg within second optin flush immediately read", "d": "1/2018"}, {"body": "awesome", "d": "1/2018"}, {"body": "question amp answer documented somewhere reachable thank guys enlightening us", "d": "1/2018"}, {"body": "learned lot thanks", "d": "1/2018"}, {"body": "iamdustan find solution problem gaearon made simple reproduction issue seems like updates top level container blocked intermediate still continues hierarchy child somewhere deeper sets state based listener attached seems really wierd started noticing made links update using subscription model", "d": "1/2018"}, {"body": "turn failing unit test react repo", "d": "1/2018"}, {"body": "could try narrowed seems like happens child parent component updated within tick parent defines", "d": "1/2018"}, {"body": "added failing test repo sure put react repo would mind look", "d": "1/2018"}, {"body": "search files ending contain", "d": "1/2018"}, {"body": "whosesmile way get work selectedindex instead value general even applying change value working", "d": "1/2018"}, {"body": "nubunto still interested", "d": "1/2018"}, {"body": "clemmy still want lmk sure long backlog", "d": "1/2018"}, {"body": "gaearon prioritizing studies next months please feel free assign task someone else", "d": "1/2018"}, {"body": "sounds good clemmy good luck studies", "d": "1/2018"}, {"body": "tracking issue since chime current usecase thoughts long post background necessary think use mainly abtesting cases want determine bucket client render component often still want provide default variant noscripttag people without js graceful degradation cases js crashed providing noscriptfallback conditional functionality determined client might bit niche uncommon either could easy make work fully server render default component rendertostaticmarkup including using couple providers make redux reactrouter work remove nested noscripttags resulting string quite common us since also use noscriptfallbacks lazyloaded images use dangerouslysetinnerhtml client alias reactdomserver noop instead rendertostaticmarkup read existing textcontentinnerhtml noscripttag use dangerouslysetinnerhtml js crashes bucket set catch error replace relevant noscripttags divs set innerhtml innerhtml noscripttag tl dr leads two reflections proposed solution ignore content noscripttags client perfect long still keep existing content really really awesome react handles want really great story around noscript say automatically removing nested noscripttags per suggestion key would doable new codebase either way separate issue", "d": "1/2018"}, {"body": "issue hand though trying start digging investigating codebase supressing hydration warning seem hard glance quite figure best place would ignore subtree noscripts guess live reactdom would also like make sure reconciler waste time subtrees currently valid place reconciler api could achieve", "d": "1/2018"}, {"body": "oh clear saying valid usecase using noscript content even js turned manually simulating noscript currently graceful degradation cases choose load reactapplication performance reasons older devices one ever use content provided server cases though think proposed solution good one", "d": "1/2018"}, {"body": "naive way solve issue javascript clientreactdomjs shouldsettextcontent type string props props boolean return type textarea type noscript lt new typeof propschildren string typeof propschildren number typeof propsdangerouslysetinnerhtml object amp amp propsdangerouslysetinnerhtml null amp amp typeof propsdangerouslysetinnerhtmlhtml string solves hydration warning makes reconciler ignore everything inside keeps content dom since already current tests passing sure side effects notice react devtools acting bit weird nt show content since react nt really know said children looked like sure anything indicative something undesirable new codebase thought mention fix feedback since might way would happy submit pr discussion seems feasible course", "d": "1/2018"}, {"body": "hey ephem still working fix would like give go let know thanks", "d": "1/2018"}, {"body": "hey muhammadinam since unsure direction fix suggested good waiting feedback pr maybe gaearon active thread could chip last post relevant regards fix rest background context around use noscript bit walloftexty sorry basically think questions late place solve optimally since reconciler already knows children props etc saying contains text kind true client solves problem bad consequencessideeffects obviously bad direction happy let go let work muhammadinam terrible first glance happy open pr continue discussions", "d": "1/2018"}, {"body": "current thinking would make sense make rfc", "d": "1/2018"}, {"body": "would maybe merge createref rfc maybe sure get time start another rfc things right pretty busy working compilation work maybe someone else would like push", "d": "1/2018"}, {"body": "write rfc going follow along bit first though op still reflect thinking matter", "d": "1/2018"}, {"body": "although need incrementally move better ref system rather surprising users believe adding createref deprecated string refs good first step towards getting point", "d": "1/2018"}, {"body": "trueadm believe copying pr good rfc got purpose", "d": "1/2018"}, {"body": "decided opposite fix would completely disable patterns since never intentionally supported iterable functions treated functions iterables", "d": "1/2018"}, {"body": "action item send pr completely disables functionality", "d": "1/2018"}, {"body": "hey new opensource help", "d": "1/2018"}, {"body": "sure probably easiest issue like give try please go ahead", "d": "1/2018"}, {"body": "gaearon would suggest bug feature request number new bugs caused mouse events bubbling portals previously using ca nt fixed even extra div layer filter mouse events eg rely mousemove events propagating document implement draggable dialogs way workaround addressed future release", "d": "1/2018"}, {"body": "think called feature request current bubble behavior portals expected intended goal subtree act like real child parents would helpful additional use cases situations like ones seeing nt feel served current implementation difficult workaround", "d": "1/2018"}, {"body": "understand behavior intended think significant bug disableable", "d": "1/2018"}, {"body": "mind library working dom preserve dom implementation behavior break example jsx class container extends reactcomponent shouldcomponentupdate gt false render gt class root extends reactpurecomponent state container null handlecontainer container gt thissetstate container render gt thisstatecontainer amp amp reactdomcreateportal portal thisstatecontainer work dom expect receive events like dom implementation example events propagated portal working around dom parents considered bug", "d": "1/2018"}, {"body": "folks thanks discussion however nt think helpful argue whether something bug instead productive discuss use cases examples met current behavior better understand current way best way future general want api handle diverse set usecases hopefully overly limiting others ca nt speak core team imagine making configurable likely solution generally react leans consistent api configurable ones also understand behavior dom works nt think good reason say nt way lots reactdom behavior different dom works may events already different native version instance completely unlike native change event react events bubble regardless type unlike dom", "d": "1/2018"}, {"body": "instead productive discuss use cases examples met current behavior two examples broken us migration react first draggable dialog launched button attempted add filtering element portal use called stoppropagation mouse key events however rely able bind mousemove event document order implement dragging functionality common user moves mouse significant rate cursor leaves bounds dialog need able capture mouse movement higher level filtering events breaks functionality portals mouse key events bubbling inside dialog button launched causing display different visual effects even dismiss dialog nt think realistic expect every component launched via portal bind event handlers stop event propagation second popup context menu launched either primary secondarymouse click one internal consumers library mouse handlers attached element launches menu course menu also click handlers handling item selection menu reappearing every click mousedownmousedown events bubbling back button launches menu ca nt speak core team imagine making configurable likely solution generally react leans consistent api configurable ones implore team reconsider position particular case think event bubbling interesting certain use cases although ca nt think offhand think crippling others introduces significant inconsistency api never supersupported everyone used render outside immediate tree nt work way officially deprecated favor portals portals break functionality critical way nt seem easy workaround think fairly described quite inconsistent also understand behavior dom works nt think good reason say nt way understand coming think case fundamental behavior b currently workaround think dom nt work way strong argument completely convincing one", "d": "1/2018"}, {"body": "clear request considered bug mostly gets prioritized fix sooner rather later", "d": "1/2018"}, {"body": "mental model portal behaves place tree avoids problems overflow hidden avoids scrolling drawinglayout purposes many similar popup solutions happen inline without portal eg button expands box right next take example pick reaction dialog github implemented div right next button works fine however wants different zindex lifted area contains comments need change dom position change safe unless things like event bubbling also preserved styles popups pop outs legit would solve problem component inline layout opposed floating outside", "d": "1/2018"}, {"body": "workaround worked calling directly portal rendering works great since single abstraction component uses portals otherwise need fix calls", "d": "1/2018"}, {"body": "methyl assumes know every event need block bubbling tree case mentioned draggable dialogs need bubble document bubble render tree", "d": "1/2018"}, {"body": "styles popups pop outs legit would solve problem component inline layout opposed floating outside sebmarkbage sure question makes sense problem inlining component would nt inline", "d": "1/2018"}, {"body": "think problem use cases ported two methods conceptually different things concept portal overloaded think agree modal dialog case almost never want modal act like child button opened trigger component rendering controls state think tho mistake say portal implementation therefore wrong instead saying button right tool case modal child trigger nt rendered one possible solution keep using another userland option near app root handles rendering modals passes via context method render arbitrary modal element need root", "d": "1/2018"}, {"body": "ca nt called inside lifecycle methods react pretty much precludes use cases discussing fact components completely broke migration portals official recommendation agree concept portals might ended overloaded sure love solution global component context though seems like could easily solved flag createportal specifying whether events bubble would optin flag would preserve api compatibility", "d": "1/2018"}, {"body": "try clarify usecase portals would love see option stopping events propagation manychat app using portals create layers layer system whole app used several types components popovers dropdowns menus modals every layer expose new layer eg button second level menu trigger modal window button open popover cases layer new branch ux solves task new layer open user interact new layer others bottom system created common component rendering layer javascript class rendertolayer extends component stop e gt estoppropagation render const open layerclassname uselayerforclickaway render renderlayer thisprops component stops propagation event types react docs allowed us update react", "d": "1/2018"}, {"body": "need tied portals rather sandboxing portals example", "d": "1/2018"}, {"body": "even seems needlessly complex simply add optional boolean flag createportal allowing bubbling behavior blocked", "d": "1/2018"}, {"body": "gaearon pretty unfortunate situation certain slice us could someone dear look", "d": "1/2018"}, {"body": "add current thinking use cases supported really use cases need context flow current parent subtree subtree act logical child terms dom complex modals best example almost never want events form modal window propagate trigger button almost certainly need context passed themes etc say usecase could mostly solved modalprovider closer app root renders via high enough event propagation nt affect anything starts feel like workaround opposed well designed architecture also makes library provided modals annoying users since longer self contained", "d": "1/2018"}, {"body": "would add tho terms api nt think modal case really wants use old skool pretty close distinct tree except context propagation often needed", "d": "1/2018"}, {"body": "please file new issue maintainers almost never read old issues hard track clear real problem misunderstanding", "d": "1/2018"}, {"body": "option best option far work ssr explain idea far options except either create high maintenance burden everyone outside react source force custom element authors entire universe abide reactspecific rules universal rules agree setting attributes standard way universe passing data elements way matches declarative html attributes work time law universe therefore guaranteed way pass data elements people nt happy designed strings elements repeat elements accept values via object properties map certain attributes something relied time people like object properties accept nonstrings bare minimum react wants work every single custom element universe burden people react needs realize nt god many libraries people use besides react therefore react shoud default pass data via standard react accept fact custom element authors extendoverride methods class definitions making accept things strings prime example libraries like aframe react accept custom element author wants custom element work every possible library react author rely make element default compatible everything default libraries rely attributes whole universe work ifs ands buts unless makes big changes soooooooo said least fix redirected realize gets us simply closer standards think implications elements sometimes objectproperty api developers choice use knowing work time developers sometimes take advantage object properties developers always aware whether objectproperty interface exists given element custom objectproperty interfaces alternative interface nt necessarily map attributes knowledge attributes vs properties solution react wishes augment standard respect laws universe allow attributes work time default means default map pass value along unchanged nonbreaking change fact fixing change would otherwise result meaningless string passed come alternative way let react user optionally use props user conscious objectproperty interfaces exist wants explicitly use interfaces seems like option using sigil extra syntax honestly hard learn solution gets closest ideal based question available symbol though settling something like escapable form perhaps like readable example want prop specifically characters covered whatwg html syntax spec work hope another topic option best option far ssr work serialize prop data known limitations set object properties client side hydration hydration nt used client therefore props nt make sense ssr oh well never worked nt need work phpstyle javastyle ssr sends static html hydration rely attributes goes say use react ssr probably use clientside hydration nt want hydration simply aware fact nt use props case simple web works react make caveat clear documentation still include features option give people control api like option people configure attributes map props props map attribues help people make ssr work even nonhydrating type ssr let people define attribute written actually pass prop ssr nt pass prop pass prop attribute ssr otherwise specified using sigil etc end following seems like solution would work option used default behind scenes fix react nt get people way api like option tuning really need including ways tune ssr client happy new year", "d": "1/2018"}, {"body": "want respond points fear thread already incredibly long sorry making longer p universal rules agree setting attributes setattribute standard way universe passing data elements way matches declarative html attributes work time law universe therefore guaranteed way pass data elements nt entirely true nothing platform enforce custom element expose attributes interface could easily create one accepts js properties guaranteed way pass data lack enforcement mechanisms means ca nt rely either style html attributes js properties certainty people nt happy designed strings elements repeat elements accept values via object properties map certain attributes something relied time encourage folks even bother creating attributes properties accept rich data like objectsarrays data serialized back attribute string example one object properties reference dom node ca nt actually stringified also stringify reparse object loses identity meaning reference another pojo ca nt actually use reference since created entirely new object people like object properties accept nonstrings therefore react shoud default pass data via setattribute standard javascript properties equally standard html elements expose attributes corresponding properties interface example htmlimageelementsrc react accept fact custom element authors extendoverride setattribute methods class definitions making setattribute accept things strings authors could actually seems way nonstandard using js properties may also expose weird issues related parsing cloning element react accept custom element author wants custom element work every possible library react author rely setattribute make element default compatible everything default libraries rely attributes whole universe work ifs ands buts unless makes big changes sure arrive conclusion libraries prefer setting js properties custom elements angular example maximum compatibility authors back attributes js properties cover largest surface area possible uses elements created polymer default allow attributes work time default means default map setattribute pass value along unchanged nonbreaking change fact fixing change would otherwise result meaningless object object string passed think react actually passing value unchanged calling results unless proposing call object object nt unchanged think maybe relying author overridden may plausible encourage create corresponding js properties instead monkeypatching dom", "d": "1/2018"}, {"body": "think react actually passing value unchanged calling results react coercing values string passing basically agree said agree people things ways standard forces everyone one way still think option used default sigil specifying use instance properties fix react nt coerce args strings option api fine tuning option done well hydration ssr solutions map data either attributes props specified use option api", "d": "1/2018"}, {"body": "react coercing values string passing setattribute see since folks nt define custom defaults", "d": "1/2018"}, {"body": "since folks nt define custom defaults like result html obviously web developers aware happens pass nonstrings element attributes example aware pass nonstrings aframe elements free without library getting way", "d": "1/2018"}, {"body": "react needs realize nt god many libraries people use besides react unnecessarily snarky note thread care many different options visions take custom element design certainly obvious done", "d": "1/2018"}, {"body": "sebmarkbage sorry nt mean snarky think react nice lib thought words carefully especially everyone religion meant react popular react potential sway people things certain way may work places fe could tell people rely instance properties custom elements would nt work custom elements react currently converts values passed element attributes strings react done example would need aframereact works around string problem even exist react let us ability make choice pass data elements like plain javascript make satisfied user sorry choice words double think next time", "d": "1/2018"}, {"body": "close since little activity issue nobody created small reactonly example demonstrates indeed issue react", "d": "1/2018"}, {"body": "also run example ca nt understand description exactly steps supposed perform demonstrate issue screenshot devtools help exactly supposed see", "d": "1/2018"}, {"body": "gaearon fiddle define child component crashes fetch resolved fixed example makes explanation obvious anyway thanks lot", "d": "1/2018"}, {"body": "bit vague hard address kinds suggestions best submitted rfcs require think detail welcome submit one thanks", "d": "1/2018"}, {"body": "since creating higher level wrapper might well provide provides semantics", "d": "1/2018"}, {"body": "thanks gaearon answer unfortunately createfactory job desired logic support three cases component class constructor simple component function component factory createelement function nowhere else course createelement wrapper job besides bunch stuff want use jsx use wrapping kind alien createelement counterpart instead react createelement jsx pragma value transformreactjsx complete nogo main reason described ui library abstraction provide way implement base components like combobox datepicker etc uilibraryagnostic way used later programmers real react components real vue components depending whathever programmers prefer without know anything alien wrapper library used implement given uilibraryagnostic components make long story short course technically problem export representations component react class constructor also react factory user decide import version wants nevertheless makes things unnecessarily confusing anyway facebook whatever reasons want add direct support react factories react createelement function okay course close github issue go mentioned workaround frankly would understand big deal adding support react factories react createelement function easy implement would make react much flexible surely useful many use cases besides kinda feels natural use component factories main component representations", "d": "1/2018"}, {"body": "sorry frustrating skeptical goal completely agnostic components still reactspecific concepts like refs keys may directly map vue others work think still want control time custom pragma feel alien specified babel plugin option even tell users alias react package like preact feel like better solutions understand seems big deal add support us committing support something means taking large burden especially something used tiny minority cases works may need coded tools eg optimizing aheadoftime compiler even small additions like make optimizations harder impossible impractical still feel strongly encourage file rfc", "d": "1/2018"}, {"body": "hi gaearon something", "d": "1/2018"}, {"body": "hi anyone help continue reactbrowsereventemittertestjs test busy working time keep going pr thank much", "d": "1/2018"}, {"body": "meh things checklist come might", "d": "1/2018"}, {"body": "suggestion extremely fragile really hope using practice also give wrong values cases set rfc process proposed api changes like welcome participate close issue glad see rfc", "d": "1/2018"}, {"body": "closing favor honest sure release happen given dedicating effort persuade nhunzaker jquense maybe licensing issue running rebuild underlying npm modules already updated mit rebuilding give files fully mit could use npm entry point use fully mit code", "d": "1/2018"}, {"body": "worked around adapting npm shrinkwrap npm predecessor packagelockjson explicitly pull mitlicensed fbjs using npm means using contents dist rather contents one lib folder webpack packages", "d": "1/2018"}, {"body": "yep fair enough", "d": "1/2018"}, {"body": "close please feel free file detailed rfc want", "d": "1/2018"}, {"body": "ianstormtaylor know reliable way detect natively supported looks like logic currently use event support detection wo nt work case includes spec properties extremely helpful hard think would polyfill spec properties browsers usually nt include event properties ca nt provide consistently", "d": "1/2018"}, {"body": "aweary current logic nt work use seems like similar detection method right although honest sure reliable needed react much broader browser targets polyfilling spec properties sure think would hard actually advise instead trying polyfill properties toplevel properties synthetic events users reach retrieve think might larger issue react currently browser spec seems like react concerned explicitly inserting characters text whereas browser spec things like nt insert text would result keys like super familiar react events seems like existing really named leaving open option add full place", "d": "1/2018"}, {"body": "ianstormtaylor tested detection method return latest chrome seems like events triggered though sure nt work polyfilling spec properties sure think would hard actually advise instead trying polyfill properties toplevel properties synthetic events users reach nativeevent retrieve seems fine better browser support think might larger issue react onbeforeinput currently browser spec beforeinput seems like react concerned explicitly inserting characters text whereas browser spec things like formatbold formatitalic nt insert text would result keys like cmdb nt implement spec behavior could potentionally see could update event plugin nt think inconsistencies intentional", "d": "1/2018"}, {"body": "aweary ah gotcha might chrome nt implement spec fully yet sure one updating could good nt know enough internals able suggest things think issue right text input whereas newer specs result used events nt necessarily characterinserting", "d": "1/2018"}, {"body": "seems like best offer monkey patching consoleerror seems like way whatever hooks expose would end looking similar talked alternative way intercept warnings generic way maybe way", "d": "1/2018"}, {"body": "gaearon would work development since messages displayed production builds react lingyan opened issue last summer requesting ability production subsequently closed react release believe feature still warranted given scenarios mentioned original description correct wrong given fiber knows markup reused would much additional work either add attribute markup provide hook either via consoleerror ability apps listen", "d": "1/2018"}, {"body": "would work development since consoleerror messages displayed production builds react yes explained even know mismatch cases production extra work eg comparing attributes even hook existed consistent", "d": "1/2018"}, {"body": "gaearon mean extra work done development case allow applications enable extra work production configure hook report applications enabling understand performance impact react know mismatches reliably even development yes agree wont reliable way detect mismatch", "d": "1/2018"}, {"body": "mean extra work done development yes case allow applications enable extra work production configure hook report nt really see us adding global configuration options like avoided need years seems odd first one ideally want sane behavior everyone feel strongly please create rfc gets enough support consider", "d": "1/2018"}, {"body": "following conversation twitter rough story far naively thought react renderrelated callbacks amp dom updating would debounced using requestanimationframe nt appear case way opt missing something gaearon currently batching different setstate within one event handler everything flushed exit many cases works well enough pitfalls using raf every update also looking asynchronous rendering default raf really help much rendered tree large instead want split noncritical updates chunks using ric ready flushed could result lot extra work updating mousemove couple things land frame eg network response mouse click pitfalls seeing raf gaearon yes use concept expiration updates coming interactive events get short expiration time must flush soon network events get time wait based decide flush timeslice raf play well browser stuff like inputs need flush updates immediately event point back talking priorities updates needed flush immediately fwiw chrome amp firefox moved input events render steps eg mousemove already eg touchmove scroll resize intersectionresize observers gaearon cases really need always use raf flush callback beneficial scenarios animation exact amount blocking work update synchronously help much pitfalls controlled inputs need flush synchronously else value gets sync true sort stuff totally easy manage especially across components examples component updating interval like also runs decorative animation using end two dom updates single frame one interval one raf includes diffing actual dom update updating component based listener mean updates per frame eg edgesafari wired mouse call within mouse move events still get dom updates need make sure scheduling one raf per frame hard guess component running animation containing component also running animation inner component dom gets modified twice per frame another animating component within one gets modified three times per frame demo suppose would reduce computation nice nt issue feels like react updating raf know three components pending updates run single update starting parentmost element needs updating really excited ric stuff coming react thought pitfalls already solved update state tasks rendering render react ensure nt work necessary keen hear makes tricky especially something find spec solution", "d": "1/2018"}, {"body": "reopening discussion", "d": "1/2018"}, {"body": "today us holiday asked acdlite bring date thinking actually raf schedule priority earlier async implementation later cut fully remember happened reply learn forget please ping lot stuff going accidentally miss old issue", "d": "1/2018"}, {"body": "gaearon suggested controlled inputs could issue eg user types text input task queued fire update event component state updated reflect new input given browser may render tasks possible happen task executes meaning old state reapplied text input unless missing something feels like could happen without raf input value changed task queued fire possible item earlier queue update state trigger rendering create issue could nt recreate issue flooding task queue makes think html spec nt quite right likely single task queued update input value fire event case raf nt problem either rbyers shine light browser behaviour possible user type text input raf happen change input event dispatched", "d": "1/2018"}, {"body": "ca nt speak scheduling fairly familiar limitations around input value setting main one updates async boundary cursor position reset update nt synchronous making typing impossible since react forcibly keeping value value vs typed value input value reset synced value update untilunless user updates prop value match oninput reported value", "d": "1/2018"}, {"body": "jquense trouble recreating missing", "d": "1/2018"}, {"body": "gaearon working totally separate nonreact project trialing using purpose found edge seems schedule callback poorly noticeable delay dragging stuff cursor vs using nt think figured yet one part problem callback seems called immediately vsync events occurred means effectively rendering mouse data previous frame mouse events also triggered many times within frame computer mouse move triggered times per frame means add delay seems noticeably worse would estimate doubles visual latency probably apply clickingtypingetc maybe pressure edge fixing tradeoff worth nt live promise better seems edit scheduled vsync events emitted obviously incur delay rendering changes immediately chrome still feels faster maybe another delay somehow caused edge well pushes feel sluggish chrome", "d": "1/2018"}, {"body": "syranide think safari scheduling bug file one edge webkit bug edge bug", "d": "1/2018"}, {"body": "jakearchibald nice nt think description edgeissue entirely correct though sure either scheduling vsync correct events emitted edge seems emit events come rather beginning frame means clickevent received milliseconds animation callback executed next paint", "d": "1/2018"}, {"body": "syranide callbacks called within render steps vsync style calculation paint raf callbacks step style calculation happens part paint happens part", "d": "1/2018"}, {"body": "jakearchibald ah guess saying thing end ultimately seems current event model emitting events come edge incompatible spec could fix without changing event model would incur delay everything end rerendering multiple times per frame iirc correctly edge already plays badly caps yeah", "d": "1/2018"}, {"body": "sorry bit loop problem something like pseudoish code ie store simple values move heavy lifting raf something react prohibits solution app side eg maybe setstate miss window", "d": "1/2018"}, {"body": "copypasting acdlite response messenger understanding jake suggesting default noninput events animation priority users nt think optinginto mode probably better today default sync would breaking change subset reasons async breaking change would nt get interruptions would still stale issue dan means would happen earlier like enable async mode yet think default priority noninput events low priority dan call flush within second two low priority model opt animation mode anyway might well call use dan new api forces synchronous update also integrating another library may already nt want call inside one react wo nt update next frame point want anyway far requests browser vendors thought would cool way know event fired target way could flush pending interactive updates dom browser decides interpret event right best wrap userprovided event handler time wrapped handler called late", "d": "1/2018"}, {"body": "think enough context answer questions keep rolling", "d": "1/2018"}, {"body": "mouse moves fairly unique almost always safe drop event least also drop corresponding mouse overout tell one dropped events intentional require permanent effects two clicks happening event loop need result first happen second one since events happen multiple times single frame raf batching really suitable fix problem effect happens os driven sequence synchronous text input many effects deferred later next frame main strategy requestidlecallback things dependent per frame level mouse moves animations scrolling touch handling often important coordinated happen also safe drop extra events also often necessary update even events time eg inertial scrolling special strategy mentioned tricky problem set coordinators two parts app libraries set raf difficult determine one happen first letting user schedule one raf react schedule another flush work set one difficult guarantee frame flush setstate setstate flush likely better model actually set state react changes global states like mouse position time state cause permanent change change inertia application state follow rules perframe rules dropped", "d": "1/2018"}, {"body": "gaearon understanding jake suggesting default noninput events animation priority users nt think optinginto mode hmm quite talking debouncing event handling render steps idea call frequently want resulting render steps would debounced point rendering frequently display capable displaying debouncing events might also useful something browsers starting think separate thing also tricky comes etc far requests browser vendors thought would cool way know event fired target way could flush pending interactive updates dom browser decides interpret event right best wrap userprovided event handler time wrapped handler called late something flush ui task queue sounds doable nt really understand problem yet sure right fix problem right seems react nt debounce rendering raf due one following design choices react browser bugs raf missinginsufficient standards stuff around input updating makes feel like issue could nt able recreate issue think mechanism cause issue recreation issue anywhere either reduction version react problem like poke around get grips issue sebmarkbage events intentional require permanent effects two clicks happening event loop need result first happen second one since events happen multiple times single frame raf batching really suitable fix problem nt quite follow unless talking debouncing events nt mean network response landed update data current view click received change view happened next render react currently updates dom twice update current view network request change view click feels like rendering debounced called twice result rendered since user going able see one outcome anyway assumption much cheaper rendering including actual dom update rendering mean component function various callbacks related rendering things dependent per frame level mouse moves animations scrolling touch handling often important coordinated happen unless missing something model thinking would give free various events update state cheaply perhaps times frame resulting render would happen frame state would result changes made events two parts app libraries set raf difficult determine one happen first letting user schedule one raf react schedule another flush work set one difficult guarantee frame flush setstate setstate flush true wonder much issue would practice react could provide raf flush queued callbacks", "d": "1/2018"}, {"body": "tried create reduction input sets state updates seeing anything go missing maybe particular browser happens", "d": "1/2018"}, {"body": "jakearchibald various events update state cheaply perhaps times frame resulting render would happen frame state would result changes made events possible albeit unlikely scenario consider might tracing path mouse imagine entire motion took place frames debounce would final position rather whole path since setstate would nt inherently accumulate updates accumulate would wasteful scenarios mistaken ends losing optimization anyway since want process events next tick saying likely something react needs concern possible gotcha idea call setstate frequently want resulting render steps would debounced requestanimationframe point rendering frequently display capable displaying another edge case consider would render target audio hardware raw data something visual ticks terms missed events specifying limiter raf points way outside norm react usage ca nt things people felt worthwhile think things loud", "d": "1/2018"}, {"body": "dakom possible albeit unlikely scenario consider might tracing path mouse imagine entire motion took place think unrelated chromefirefox already debounce render steps chrome exposes full series events using getcoalescedevents cases need full frequency mouse positions better taskbased model edgesafari uses chrome still deliver full series event objects even main thread busy built demo want experiment kind event timing even would nt need maintaining array points nt lose data next unless missing something idea react able describe content component scratch based props state another edge case consider would render target audio need realtime audio processing really needs main thread eg audio worklets", "d": "1/2018"}, {"body": "understanding jake suggesting default noninput events animation priority users nt think optinginto mode hmm quite talking debouncing event handling render steps idea call setstate frequently want resulting render steps would debounced requestanimationframe point rendering frequently display capable displaying think meant thing andrew concise default noninput events means priority setstates originate inside noninput events flushed", "d": "1/2018"}, {"body": "events intentional require permanent effects two clicks happening event loop need result first happen second one since events happen multiple times single frame raf batching really suitable fix problem nt quite follow unless talking debouncing events nt mean think sebastian saying think saying important result every click event flush next click event consider button sets sets product developer expectation fire otherwise two fast clicks send money twice errorprone conceptual model think important treat inside interactive events clicks differently inside example network responses understanding plan flush interactive updates like clicks end event flush updates including network low priority chunked andrew earlier point switch approach using animation practical default react flush second fix user would need move calls special call flushes immediately called opts processed synchronously since important happens think would user responsibility put call inside however exclude providing hook coordinate libraries sum think delaying flushing raf breaks react rendering model developer expectations cases value event handler depends state event handlers read state plan keep inside interactive events click acting like flushing browser event boundary nevertheless plan downgrade calls low priority meaning comes network request noninteractive event processed separately split flushed within second two offer new method opt asyncbydefault behavior called inside flushed right exits important escape hatch scenarios really need manually flush update react considers necessary example click handler want measure dom node use information final rendering result making lowpriority outside events decided must flush like clicks break users use animation updates flushed inside events like exact scenario happy migration path ask call inside callback want callback ones might want use therefore user control help might made mistake somewhere ask andrew seb verify understanding fifth point final decision gotten yet might use strategy bit obvious user less errorprone intended takeaway see could use rafs clicks already efficient strategy work nonclicks ric adding raf mix make better need think animationspecific use case likely build top flexible flushsync promitive expose anyway user get overrendering animation default worried instead animation flush rarely leading research right raf solution document provide convenience api", "d": "1/2018"}, {"body": "gaearon consider button sets disabled thisstatehassent onclick thisstatehassent null thissendmoney sendmoney sets hassent true product developer expectation onclick fire otherwise errorprone conceptual model ahhhhh yes makes total sense understanding plan flush interactive updates end event flush updates including network low priority chunked ric yeah given model makes sense rest summary making setstate lowpriority outside events decided must flush like clicks break users use animation updates flushed inside exact scenario happy migration path ask call setstate inside flushstate requestanimationframe callback want callback ones might want use therefore user control guess also break things anyone already using raf debounce throttled ric instead guess would break clock demo timing important still case nested components animations maybe answer nt pipe animations react seems sensible folks tried convince otherwise past say provide specific optin schedule render debounced raf reactaware way parent amp child render thank going reasoning amp future scheduling react", "d": "1/2018"}, {"body": "product developer expectation onclick fire interesting thing least exact situation happen mention react developer expectation already ca nt trust react flush state changes fast enough prevent double clicks", "d": "1/2018"}, {"body": "interesting thing least exact situation happen happens sounds like bug rather intentional decision nt seen reproduce please file issue look state changes enqueued inside event handlers always flushed exiting event handlers react imagine react could sort issues multiple roots edge cases like react solves completely forbidding reentrance algorithm adding portals bug assume solved", "d": "1/2018"}, {"body": "cryrivers wo nt affected event handlers nt deferred", "d": "1/2018"}, {"body": "nt read whole thread apologies miss something replying rbyers shine light browser behaviour possible user type text input raf happen change input value update event dispatched update event assume mean change right raf happen mean raf callback invoked yes believe possible follows main thread could busy processing task input task arrives queued raf task arrives queued input task processed queues task dispatch task gets chance run previously queued raf task runs raf callback sees updated value input event dispatched cc dtapuska knows", "d": "1/2018"}, {"body": "rbyers bad mean input keydown rather change could nt recreate issue nt mean nt possible", "d": "1/2018"}, {"body": "gaearon offer new flushsync fn method opt asyncbydefault behavior setstate called inside fn flushed right exits important escape hatch scenarios really need manually flush update react considers necessary example click handler want measure dom node setstate use information final rendering result could use simulate work ie class app extends reactcomponent constructor props super props componentdidmount settimeout gt thissetstate barvalue consolelog render consolelog reactdomrender documentgetelementbyid root output", "d": "1/2018"}, {"body": "going synchronous always wait timeout whereas needs future versions plan make timeout async default", "d": "1/2018"}, {"body": "default right path synchronous even sometimes specifically code must execute different stack triggered must push manually eg via settimeout", "d": "1/2018"}, {"body": "depends call react call inside react event handler flushed react exits browser event handler synchronous happens toplevel stack react call outside react event handler flushed immediately", "d": "1/2018"}, {"body": "please see reply", "d": "1/2018"}, {"body": "michaelbenin react still use correct attribute names example emit see nt please file separate issue", "d": "1/2018"}, {"body": "yet another way work around", "d": "1/2018"}, {"body": "browser shows errors thrown like jsdom file issue jsdom answering question jsdom show errors updating jest surfaced test suite even ignored react would still show tests logs turns event handler object prevent browser jsdom logging error know think would make sense react minimal patch react would diff apackagessharedinvokeguardedcallbackjs bpackagessharedinvokeguardedcallbackjs dev use track whether error event ever called let didseterror false let iscrossoriginerror false let shouldignoreerror false dev error null amp amp eventcolno amp amp eventlineno iscrossoriginerror true eventdefaultprevented shouldignoreerror true dev thishascaughterror false thiscaughterror null shouldignoreerror amp amp error null errorsuppressreacterrorlogging true great though relies setting undocumented field error object thereby mutating added field nt know convention preventing logging intentionally swallowed errors think course action remove support custom property instead check event handler default prevented store error muted similar currently store change logic log muted errors according new flag set handler tests calls thus silences logs make possible disable behavior tests actually verify logging probably motivated enough follow somebody else wants take happy discuss", "d": "1/2018"}, {"body": "like idea replacing", "d": "1/2018"}, {"body": "tagging good issue look promising merge solution worth investigating proposed implementation plan", "d": "1/2018"}, {"body": "take issue first contribution", "d": "1/2018"}, {"body": "sure", "d": "1/2018"}, {"body": "hi able reproduce issue code output later adding tests error boundary warning gone code approach remove custom following comment questions removing property sure code changes required remove custom property thinking remove reactfibererrorlogger reactfiberscheduler going right", "d": "1/2018"}, {"body": "going right sounds like good first step need use decided whether error suppressed expose information scheduler comment outlined strategy", "d": "1/2018"}, {"body": "sounds great think could start pr get things rolling", "d": "1/2018"}, {"body": "sure got little stuck trying get node bundles working gcc seems stripping part planning fix run buildprod tests determine much work needed would useful see progress far start pr", "d": "1/2018"}, {"body": "think pr would helpful even incomplete", "d": "1/2018"}, {"body": "alright start one tonight", "d": "1/2018"}, {"body": "reactproptypes moved different package since react please use proptypes library instead import proptypes proptypes", "d": "1/2018"}, {"body": "seems like consider error user code plan fix", "d": "1/2018"}, {"body": "seems like practically enough demand leave", "d": "1/2018"}, {"body": "issue still need taken care take stab", "d": "1/2018"}, {"body": "hey facebook using stuffs onthefly transpiles build scripts right issue scripts command spent five years everything ended wrong github best evidence using years baffling facebook something like also transpiles rollupconfigjs since rollup uses buble instead babel thereby missing many language features call approach tripletranspile reason never met got nose site often recognize", "d": "1/2018"}, {"body": "noticed react went nodejs order avoid transpiling build scripts one actions suggested facebook instead regretting use code months nodejs transpilation months commandline utilities want point facebook transpiling esnext node practically looks like source code easily debugged production without source maps method allows take properly structured code aka classes java people like convenient singlefile executables native modules need apply tripletranspile awesome rewrote zero transpiler ecmascript esnext bash published documented freckin great use transpilation simple packages petition facebook appropriate idea use everywhere benefiting insane amount time spent figuring", "d": "1/2018"}, {"body": "trying funnel api proposals rfc repo please feel free create pull request review close one appreciate discussion", "d": "1/2018"}, {"body": "decided fix bug technically html allows attributes casing strictly less work react side nt make sense work make output aesthetically consistent feel strongly welcome provide realworld benchmarks sites heavily using ssr demonstrate impact perf could take", "d": "1/2018"}, {"body": "found issue trying figure reactjs atom logo got since chemical substance reacts chemical reaction result arrangement electrons changed around atoms name logo reactjs really fits concept behind", "d": "1/2018"}, {"body": "lock since resolved matter thanks everybody participated", "d": "1/2018"}, {"body": "seems like use case really supported past either led errors think say missing feature portal api easily broken existing old api specific api suggestions around problem please create rfc thanks", "d": "1/2018"}, {"body": "close stale say unlikely work fix unless dig happened progress closing", "d": "1/2018"}, {"body": "complete reproducing example fiddle closing takes lot time investigate reports unfortunately focus ones provide reproducing code ready run", "d": "1/2018"}, {"body": "sorry mate forgotten try put together fiddle find time reopen later", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "related might also want consider renaming", "d": "1/2018"}, {"body": "ran similar issue updating code hopefully helps someone future nt interpret way used easy work around confusing first", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "hmmm totally agree mweststrate wasted half day researching adding error boundaries app live testing seeing errors get caughthandled fallback element nt rendered instead error propagated app crashed nt expected behavior based error boundary description perhaps mentioned docs design fallback gets rendered production wanted test fallback rendering invalid prop passed child component child component falls able test error boundary branching control flow since actually within dev environment edit must revise complaint app nt crashing fallback element getting rendered full screen error pops covering app nt immediately overtly clear could dismissed knowing intended behavior nt issue docs could little informational regarding", "d": "1/2018"}, {"body": "still getting well matter webpack settings", "d": "1/2018"}, {"body": "someone comes looking solution jsdom related links", "d": "1/2018"}, {"body": "gaearon could clarify mean running app production mode webpack etc see duplicate errors console sent bugsnag app config specifies boundary provider", "d": "1/2018"}, {"body": "jgentes error stuff logged development seeing symptoms please file new issue example", "d": "1/2018"}, {"body": "nt seem like anything us close fault let us know", "d": "1/2018"}, {"body": "problem anymore probably fixed specifically", "d": "1/2018"}, {"body": "jquense fix make sense", "d": "1/2018"}, {"body": "last attempt nt review time grew stale much simpler solution maybe something like instead somebody wants pick let know easiest task relatively comfortable working discussing proposed implementation issue jumping code particular need figure ux ergonomic problem", "d": "1/2018"}, {"body": "gaearon hi like take stab easiest task sounds great least poke around learn react internals handson particular preference thoughts desired ux implementation mine dump text diff via like pros text easy copy share post chat ticket transfer network automatic reporting hooking console test ci environment text easier compare tests text console log available reliable every browser platform text console log searchable filterable cons harder distill relevant subset information mismatch additional context needs looked text manually dump element reference via like pros browser developer tools highlight mismatching element user explore surrounding dom whatever extent necessary user navigate react developer tools explore surrounding vdom cons element references console log usable browser developer tools mind tools tests ci error reporting hook console methods record detect report anomalies browser developer tools display element references differently may available necessarily provide reliable navigation surrounding dom react developer tools may available every browser platform text diff element reference pros cons code tests develop support information flushed onto user may harder scan heavier development bundle", "d": "1/2018"}, {"body": "gaearon working discovered warn props mismatch serverside prop missing browserside prop set explicitly expected behavior jsx warn hydrated element extra prop gt const div documentcreateelement div const markup reactdomserverrendertostring divinnerhtml markup fail packagesreactdomsrctestsreactmounttestjs reactmount warn hydrated element extra prop", "d": "1/2018"}, {"body": "started adding existing component stack trace already adds value warnings components named properly yall think", "d": "1/2018"}, {"body": "one closely related problem vagueness simply listing large complex views words warning vague debug concept branch converts would love feedback whether useful brush happy open separate tightly focused issue preferred thank", "d": "1/2018"}, {"body": "gilesv oh looks nice love merge component stack pr somehow keeping us contributors", "d": "1/2018"}, {"body": "sompylasar thanks glad makes sense could add pr initial inclination since nt depend would neater keep prs atomic possible let clean anyway open pr either master branch", "d": "1/2018"}, {"body": "gilesv noticed changed warnings missed two sets similar functions top bottom reactdomfibercomponent file would great found warnings appear found top ones called added tests like add component stack tests bottom ones", "d": "1/2018"}, {"body": "sompylasar awesome check probably try highlight called via test merge work", "d": "1/2018"}, {"body": "latest thinking close outdated review pr described", "d": "1/2018"}, {"body": "congrats switching react es modules", "d": "1/2018"}, {"body": "action item reproduce false positive mixing development production versions described figure happens check source code branch described probably happens set flag development figure fix", "d": "1/2018"}, {"body": "try looking one update unable make progress thanks", "d": "1/2018"}, {"body": "opened pr warn null sets development mode think set removed check running test suite shows everything passing still warns uncertain add production script dev build test used reproduces error spyon console error var altcreatereactclass require createreactclassjs processenvnodeenv production altcreatereactclass require createreactclassminjs", "d": "1/2018"}, {"body": "sorry pretty busy wrapping things holidays try pass prs next days", "d": "1/2018"}, {"body": "worries know ton stuff plate briefly chatted nhunzaker twitter happy carry working guidance", "d": "1/2018"}, {"body": "read article seems disagree conclusions issue guys mind give opinion goes", "d": "1/2018"}, {"body": "best practice imo never use arrow function class property harms testability limits engine optimize", "d": "1/2018"}, {"body": "really see issue progressing without rfc someone feels strongly please create one thanks", "d": "1/2018"}, {"body": "mjackson see point trying understand boat using formik react form library sure heard project thing bothersome pass props passed parent component form create bunch repetition overall feels outright wrong know formik parent component could pass props form inputs also makes component file longer read wanted avoid formik reason started writing form library would pass repeated properties children however trying solve problem think came reason formik passing props input elements nt think easy way filter manipulate potentially deeply nested children without recursively look entire childrens prop tree could potentially nested pass props conditions match better way definitely case sort find manipulate functionality would bring lot value like think think another edge case maybe dreading work recursively traversing honestly hoping probably better way want still trying understand formik nt done first place gaearon see merit comment would definitely creating rfc thoughts would super appreciated", "d": "1/2018"}, {"body": "update nearly eight months still issue able work around solution similar one suggested ozhurbenko would really nice see fixed", "d": "1/2018"}, {"body": "convinced important abstraction bit leaky anyway nt think necessarily normalize sure real world scenarios actually care adding bytes support nt seem worth", "d": "1/2018"}, {"body": "wrote thoughts react works way", "d": "1/2018"}, {"body": "gravitymsc babel fix problem", "d": "1/2018"}, {"body": "updates", "d": "1/2018"}, {"body": "proposed context api solves nt plan changes existing one think relevant anymore", "d": "1/2018"}, {"body": "workarounds listed far nt work following worked perfectly though ref needed", "d": "1/2018"}, {"body": "zpao still wan na", "d": "1/2018"}, {"body": "repro", "d": "1/2018"}, {"body": "thanks letting us know close", "d": "1/2018"}, {"body": "zuimeiaj approach instantly closes ime composition box completely blocks input using google japanese ime ubuntu chrome eyesofkids completely right saying found different results events fired sequence least different browsers definitely inconsistency browser implementations many times fire startchangeend may implications regards react onchange also worth mentioning software keyboards mobile devices also fire composition events autocomplete suggestions note even normal english input latin characters general problem nt necessarily restricted chinese japanese etc ime composition", "d": "1/2018"}, {"body": "static value property key must meaning never update working expected nowhere say documentation please check docs see keys", "d": "1/2018"}, {"body": "u please tell actual issue warnings call onreachend method flatlist", "d": "1/2018"}, {"body": "started happening last week ive resolved bug past using suggestions error", "d": "1/2018"}, {"body": "seems like nt need enforce files nt need files using esm correctly enforced", "d": "1/2018"}, {"body": "similar need passing arbitrary context without validation ca nt use need mix react subtrees use different major versions react trying incrementally migrate projects react ways gaearon", "d": "1/2018"}, {"body": "quite sure asking hard answer could wrap whole child tree component provides every context property might consumed tree would help know know constraints better", "d": "1/2018"}, {"body": "sorry lack detail short building plugin framework provides utility react components plugin hosts well plugin implementors trying build generic component plumbs arbitrary context react tree boundary trees different sides boundary different major versions react could wrap whole child tree component provides every context property might consumed tree yeah work ideally like implementation nt need know possible context properties ahead time though think cover majority use cases static set keys uses store storesubscription default thanks quick response", "d": "1/2018"}, {"body": "follow though think cover majority use cases static set keys reactredux uses store storesubscription default nt actually work since nt work react seems like react nt know handle contexts constructed react unable mix trees preserving context", "d": "1/2018"}, {"body": "example top level component providing context would react component context value object react version associated sure mixing react versions one tree work", "d": "1/2018"}, {"body": "sure right fix would tagging good first issue somebody investigate", "d": "1/2018"}, {"body": "issue seems effects called effects latter effect mounting although issue sure would work assuming ensure refs guaranteed mounted seems make sense offchance nt guarantee react provides could flip order effects processing although breaks two tests around refs called correct time suggesting hard constraint otherwise seems autofocussing would need broken away mounting process solve issue seems like odd thing reasons edit clear update gets marked returns true host component needs autofocus gets fired reconciler makes sense", "d": "1/2018"}, {"body": "seems like went alternative", "d": "1/2018"}, {"body": "may looking", "d": "1/2018"}, {"body": "technically react attach nonreactgenerated markup although pretty fragile", "d": "1/2018"}, {"body": "seeing reopen", "d": "1/2018"}, {"body": "sounds like trying work around real problem hoc pattern pollutes props solution obscures looking revamping context api way present problem would help", "d": "1/2018"}, {"body": "ah yeah cool nt want use context current api nt really seem much better props since still deals naming collisions nice proposal", "d": "1/2018"}, {"body": "lovely proposal proposal uses symbol props translate using contexts instead sometimes want locality actual props provide use cases something components intentionally coupled eachother meant used together coherent set sometimes works best contexts eg forms fields times communication really happen parent direct children eg way work generally use components mechanism passing specific data specific parent components going way well sometimes parents need inject specific data privately specific children eg parent needs facilitate coordination children came personally custom layout systems sure broader examples", "d": "1/2018"}, {"body": "rough ideas solving use cases without notion private props", "d": "1/2018"}, {"body": "oh heck yeah would much better context proposal one yeah believe covers every use case ran", "d": "1/2018"}, {"body": "also issue react", "d": "1/2018"}, {"body": "problem changed content tag slot work", "d": "1/2018"}, {"body": "flarnie aweary mbrookes gaearon chance possible fix cant update version unfortunately using onblur along onchange", "d": "1/2018"}, {"body": "ca nt fix something older minor", "d": "1/2018"}, {"body": "gaearon suggestion better performance problem imagine email application needs temporarily highlight number unread emails come could also see something like application notifications increment small animation draw attention using pluginlibrary achieve recommend writing scratch thanks", "d": "1/2018"}, {"body": "issue specific css transition plenty work around suggest checking libraries handle zepto good reference lib basically tho nt need changes happen separate ticks need reflow browser changes", "d": "1/2018"}, {"body": "jquense thanks jason looking specificsuggested react way think would helpful thread new visitors searched quite bit nt seen many good solutions key libraries react opinionated behavior since impacts performance would love see examples developers approach properly react applications tricky use case since component mounted css animation needs rerun every incrementdecrement since class react register change solid example would awesome", "d": "1/2018"}, {"body": "might optimal solution solved duplicate elements divs assign css class flash alternately eg javascript somethinghappened thissetstate toggle thisstatetoggle render return", "d": "1/2018"}, {"body": "thing affects performance intentionally destroying remounting elements via change point correct solution regardless whether react angular backbone need deal idiosyncrasies css animation js original example working", "d": "1/2018"}, {"body": "case dropdown element dropdown changes animation pop dom element boolean state variable basically decides class set variable true set class otherwise empty onclick event dropdown render method", "d": "1/2018"}, {"body": "think right solution attach event listeners per root solves issues", "d": "1/2018"}, {"body": "use global events lot always hacks required get two event systems sync suggestion api js const popover props gt let container const handleclick e gt containercontains etarget propsonclose const setref r gt container r return experiment attaching events root react node keep root node focused see would definitely like try something less hacky", "d": "1/2018"}, {"body": "headers look like enough", "d": "1/2018"}, {"body": "gaearon running problem nt access child components make props optional give defaults whole point accepts children work component dynamically puts props children provide access composition children values props", "d": "1/2018"}, {"body": "sure help", "d": "1/2018"}, {"body": "adding voice issue point would nice react could support usecase", "d": "1/2018"}, {"body": "react actually diff dom since also provide attribute mark intentional differences use serverside react rendering normally warning server client render different content however rare cases hard impossible guarantee exact match example timestamps expected differ server client set react warn mismatches attributes content element works one level deep intended used escape hatch overuse read hydration reactdomhydrate documentation bit different describing though hard answer specific question without seeing small example reproduces exactly case seeing close let know still relevant", "d": "1/2018"}, {"body": "please like see fixed please help figure happens andor contribute fix", "d": "1/2018"}, {"body": "experiencing issue well tags trying listen whether pdf loaded least started loading", "d": "1/2018"}, {"body": "reason nt dispatch event dispatched browser synchronously iframe appended parent since happens commit phase event ignored since disable synthetic event system committing context ambiguity spec around events iframes nt see behavior every browser outside waiting watwg browser vendors resolve ambiguity resolving would probably involve implementing event queue enqueues subset events commit phase dispatches afterwards", "d": "1/2018"}, {"body": "closing per lack response", "d": "1/2018"}, {"body": "see us investing effort supporting past years browser vendors avoiding using prefixes new features understand still bit pain eventually go away historically browsers relied vendor prefixes eg ship experimental features web developers approach harmful compatibility web content comes rely upon vendorprefixed names going forward instead enabling feature default vendor prefix instead keep unprefixed feature behind enable experimental web platform features flag feature ready enabled default exposed limited duration origin trial blink current consensus among browser implementors whole prefixed properties hurt helped webkit new policy implement experimental features unprefixed behind runtime flag runtime flags allow us continue get experimental features developers hands avoiding various problems vendor prefixes runtime flags also make easier us different default settings stable builds preview builds safari technology preview webkit worth current trend inside mozilla avoiding vendor prefixes either turning things shipping shipping unprefixed stable enough least general policy specific cases might merit exceptions firefox microsoft also getting rid vendor prefixes edge means order developers take advantage special css features use specific edge prefix instead code web standards edge code suffers today still relies prefixes features quite supported browsers yet encourage either use css classes create utility pick right prefix based supported browser example use create dom node assign see sticks reading whichever sticks one need use future code cache property name keep using used problematic serverside rendering react used compare markup pick specific prefix server side problem anymore react allows mismatches server client use prefixes server specify new react turn markup mismatch warning cases sorry satisfactory resolution seem worth change api introduce extra runtime checks something irrelevant couple years", "d": "1/2018"}, {"body": "romulof lencioni elmoaloloco wheel listeners still passive even scroll listeners nt think may source confusion", "d": "1/2018"}, {"body": "sebmarkbage think passive event listener support make way react sometime", "d": "1/2018"}, {"body": "see issue still open anyone update us progress please need run things user focuses whole element opposed fire child gets focus meanwhile workarounds", "d": "1/2018"}, {"body": "example would use toggle user experience example used events trigger classname change parent element parent contains two visible controls focus either control trigger reveal additional siblings additional elements revealed focus original controls newly revealed elements without changing focused state parent element also focus elements trigger hide additional elements making things appear", "d": "1/2018"}, {"body": "still interested think need rfc continue discussion", "d": "1/2018"}, {"body": "interested please create rfc review specific proposal close issue unlikely progress without rfc", "d": "1/2018"}, {"body": "interesting side note html supports", "d": "1/2018"}, {"body": "maybe serverside rendering server could scan generated html style attributes automatically add hashes attribute values csp header response", "d": "1/2018"}, {"body": "see kind ids could provided react determined user code simple incrementing counter nt work ppl nt usually render exactly thing client server sounds like crux problem rendering different things client server supported least first clientside render nothing prevents however first rendering subset app client server later show parts clientonly mismatch case problem running however causes id attributes generated clientside mismatch sent server clientside fieldcounter restarts every load whereas serverside reference obviously keeps growing solution isolate counter ssr roots example providing via context roughly suggested think close", "d": "1/2018"}, {"body": "gaearon nt know issue ca nt solved outside react react implementing go long way towards improving ergonomics implementing react apps instance react api could use reactbootstrap require user add seeminglytothem unnecessary umpteenth provider component root use rb ui components plus others going thats x components admittedly anyway dx thing think really important adjacent things web already uphill battle sadly give indefinitely defer later unified way identify components would go long way reactdom reducing one big hurdles folks implementing even basic support needing invent consistent globally unique semantically meaningless identifiers clear point react necessarily better positioned provide said identifiers think past bit certainly help reduce friction way userland solutions sort ca nt", "d": "1/2018"}, {"body": "think progress would need rfc kind vague right hard discuss someone directly motivated fix eg rb maintainer could think api could discuss maybe even find use cases well agree annoying many providers acdlite also mentioned context weeks ago", "d": "1/2018"}, {"body": "fair see get time put proper rfc together", "d": "1/2018"}, {"body": "jquense love involved rfc well vested interest seeing something like come fruition", "d": "1/2018"}, {"body": "want take lead happy contribute particularly rich time moment happy help", "d": "1/2018"}, {"body": "okay see come send around feedback", "d": "1/2018"}, {"body": "ca nt reproduce react", "d": "1/2018"}, {"body": "tagging good first issue nt know bug need investigate happens whether still reproducible react", "d": "1/2018"}, {"body": "seem still repro question whether bug nt know questions issue please post", "d": "1/2018"}, {"body": "hello love make first contribution begin looking asap", "d": "1/2018"}, {"body": "sounds great", "d": "1/2018"}, {"body": "digging believe isolated issue following loop since loop end array beginning causes onmouseenter events fire reverse order expected sure intentional since first contribution also sure changing code would unintended side effects turns unintentional would nt negative side effects gladly submit pr fix already tested reversing direction loop produces expected event order", "d": "1/2018"}, {"body": "seems intended function according docs onmouseenter onmouseleave events propagate element left one entered instead ordinary bubbling capture phase event travels closest common ancestor inclusive back entering node nt know enough code base opinion whether changed though", "d": "1/2018"}, {"body": "jadsayegh may correct could use set state prop persisted child component eg assume child return active parent mounted render update active state true", "d": "1/2018"}, {"body": "encountered bug chrome version debian kernel version events firing mouse clicked enterexit element mouse enterleave listener happens jsfiddle previous comment well noticed chromium issue posted closed confirm issue still exists switching firefox produced correct behavior", "d": "1/2018"}, {"body": "please file new issue", "d": "1/2018"}, {"body": "created following issue", "d": "1/2018"}, {"body": "worth anyone reads understanding react call return could used solve problem though production ready yet", "d": "1/2018"}, {"body": "see happening time soon way react typings implemented flow flow react practice keeping typedefs located change constraint make harder flow folks iterate someone flow team willing help us would awesome aware anything similar priority close", "d": "1/2018"}, {"body": "gaearon wanted thank tip extremely helpful saved boat load time", "d": "1/2018"}, {"body": "meh see us fixing rely places even provided cases would still broken arguably even worse would narrow cases breaks completely fix suggestion use symbol polyfill ensure one used globally throughout code happy accept prs emphasizing documentation", "d": "1/2018"}, {"body": "action would still relevant simply return true reactelementisvalidelement global symbol input object property real security environments without global polyfill unless willing claim infinity even nt save us structured cloning vectors magicnum trivially bypassed via useragent detection determined adversary targeting xss react causes problems solves", "d": "1/2018"}, {"body": "input object typeof property would technically right would use values one elements", "d": "1/2018"}, {"body": "perhaps another way ducktype point xss detection without polyfill broken nt failclosed mismatch", "d": "1/2018"}, {"body": "point wrong include polyfill polyfill symbol globally case", "d": "1/2018"}, {"body": "browsers check work completely fine modern browser practically devs using work go unnoticed unless something drastic like require global shim optout option transform create loud warning nt love either mitigation particularly useful work begin browsers", "d": "1/2018"}, {"body": "use places alone would still broken think looking issue point view particular transform depends logic whereas looking perspective able use codebase general go unnoticed unless something drastic like require global shim optout option transform create loud warning mean babel plugin particular imo expected people read readme plugin adding trusted trusted enable production similarly enable plugin development", "d": "1/2018"}, {"body": "hi gaearon saw splitpane example stateless component splitpane wraps component like chat usually chat component stateful ends stateless component wrap stateful component good practice mean told stateless component stateful child thanks", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "seems like people pretty happy enzyme think close specific api proposals react please create rfc", "d": "1/2018"}, {"body": "attaching event parent element started problems upgraded edge edgehtml problem attaching listener manually directly either using seems like jquery issue related", "d": "1/2018"}, {"body": "problem react sure browser problem please file new issue nt read act closed issues", "d": "1/2018"}, {"body": "boolean properties tend use truthy optimistic use case map isvisible redux state like", "d": "1/2018"}, {"body": "cubiccompass simplify", "d": "1/2018"}, {"body": "locking making circles solution works nt think necessary add magic prop use js expression already know use everywhere else code", "d": "1/2018"}, {"body": "suggest using unit tests instead days", "d": "1/2018"}, {"body": "never mind last comment wrong nt return failures also deduplicates maybe expose something nt", "d": "1/2018"}, {"body": "madlittlemods attribute others without attribute override child get child", "d": "1/2018"}, {"body": "ended writing solve problem arbitrarily proxy methods defined class wrapped element feel dirty works inside hoc wraps native element like input definitely fully precise good enough usecases use custom transpiler transparently capturereplay testing across react app javascript elementref node gt thischildnode node const oldproto thisproto thisproto new proxy get object key oldproto key return oldproto key node amp amp node key typeof node key function return node key bind node return node key return undefined", "d": "1/2018"}, {"body": "bunch tests using shallow renderer also new shallow renderer nt use anyway", "d": "1/2018"}, {"body": "progress talks reparenting throw two cents couple use case examples declarative ui application built built using backbone ongoing attempt converting react application splittable container dynamically loaded sub items container split contain items deep structure splittable containers containing dynamic items leaves whenever container split item added item contained gets reparented new splittable container newly added item causes sub item lose state might eg button component sub item holds animation state reparenting animation disappears naturally draggable drag amp droppable popups ui application originally opened freely float ui frame moved held list popups currently done reparenting popup component list naturally popup item unmounted remounted reparenting state lost imagine least solvable smart usage reactdnd portals however seems straight impossible without eg generating dom nodes react trees rendered appended container els amount portals sound like enough dom element references generated containers would unmounted causing portals called null containers remounted portals rendered fresh references feel like sort reparenting support would beneficial react although definitely goes base tenets ways would still argue far better option eg force component state application state opaque state object passed high enough survive reparenting", "d": "1/2018"}, {"body": "wrote thoughts react works way", "d": "1/2018"}, {"body": "close since discussion pretty stale people like approach mobx good job", "d": "1/2018"}, {"body": "static get defaultprops return car mercedes", "d": "1/2018"}, {"body": "inefficient creates new object every time element created strongly advise use either assign property use experimental static class properties syntax js class mycomponent extends reactcomponent static defaultprops need babel plugin lock issue prevent incorrect suggestions show google results", "d": "1/2018"}, {"body": "note might getting browser nt emit events invalid dates", "d": "1/2018"}, {"body": "use instead since nt exist yet", "d": "1/2018"}, {"body": "react notion current mode anymore issue still see react please provide reproducing project", "d": "1/2018"}, {"body": "believe enzyme probably provides encourage everyone check nt see us expanding current testutils apis since pain work people tend prefer enzyme", "d": "1/2018"}, {"body": "extend class components vincnetas instead wrap original button hoc overload existing defining version info hoc info eggheadio", "d": "1/2018"}, {"body": "use conjunction shouldcomponentupdate wish update component state rerender need thisprops using latest props manual script work props received work around set thisprops new props running desired function", "d": "1/2018"}, {"body": "might still want implementation proposal clearly explain mutations dangerous detect avoid false positives closed since nt attempt", "d": "1/2018"}, {"body": "closing appears like issue affect vast majority users strong opinion fixing welcome propose plan change usage link used longer works finding difficult guess meant thanks", "d": "1/2018"}, {"body": "yay lovely thank great work", "d": "1/2018"}, {"body": "still true hood react uses onclick trigger onchange event struggling checkbox implementation edge seems fire onchange event checkbox indeterminate mode made workaround using using onclick event handler nt necessary", "d": "1/2018"}, {"body": "yes think still true", "d": "1/2018"}, {"body": "yep using click event maybe revisit looks like might also eliminate issues make issue", "d": "1/2018"}, {"body": "kind strange fix issue checkboxes indeterminate mode", "d": "1/2018"}, {"body": "know old issue also issue rendering list countries slow although case react native increase speed js const countriesmap countries amp amp countriesmap country gt countryname", "d": "1/2018"}, {"body": "tried props passed constructor immutable passing another object merged props triggers warning passing props super", "d": "1/2018"}, {"body": "acdlite landed pr new context api think consider closed new api nt problem old api ca nt fixed deprecate point major libraries upgrade new api new api available documented one next minor react releases", "d": "1/2018"}, {"body": "outlined possible solution works today close issue feel strongly needs separate api change behavior please file rfc describe think work thanks", "d": "1/2018"}, {"body": "managed solve using via webpack basically main idea load noncritical components client side lazily decorator looks like jsx const asyncloader loader gt class asyncloader extends component constructor super return asyncloader use make component async jsx pathtocomponentindexjsx const anycomponent gt export default anycomponent pathtocomponentasyncjs export default asyncloader loader gt import index imported key components need rendered full glory ssr seo mostly care simple stuff like meta tags text users generally okay seeing fold fast feedback even though incomplete hence components requires polyfill big dependencies delayed loaded async would also help improving initial bundle size faster page load", "d": "1/2018"}, {"body": "also trying override semanticui may semantic great css ended wrapping div styles inside offending element", "d": "1/2018"}, {"body": "timosolo alternative solution method used lately use styledcomponents wrap semantic ui elements apply custom styling eg import styled styledcomponents import input reactsemanticui export const styledinput styled input way jsx still looks relatively neat get opportunity apply actual css classes onto semantic elements rather using additional elements embedded css like original solution", "d": "1/2018"}, {"body": "question reading thread destructuring props ie beginning render method considered bad practice read absolute guarantee lot examples use way make code readable kinda lost best practice", "d": "1/2018"}, {"body": "dispix produces always", "d": "1/2018"}, {"body": "bad assumed comment also applicable props although bad practice write", "d": "1/2018"}, {"body": "dispix write time nt take new line add new variable saying questions really js nt belong", "d": "1/2018"}, {"body": "change event emitted chrome wrap inputs element confirm solution works chrome autofilling phone numbers via", "d": "1/2018"}, {"body": "everyone still finding issue wondering use code look article tl dr", "d": "1/2018"}, {"body": "wrote thoughts react works way", "d": "1/2018"}, {"title": "angular router prematurely constructs dom cancelled refresh", "body": "submitting current behavior animation bug surfaces route refreshed cancelled hitting back button animation bug caused due race condition involves dom constructed rapid change expected behavior premature dom construction nt kicked refreshbackbutton event minimal reproduction problem instructions go graph page let load fully hit refresh browser refresh immediately trigger back button page change inspect console motivation use case changing behavior fully figure animations buggy scenario environment chrome mac osx browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21947", "d": "1/2018"}, {"title": "router typings might behind definition", "body": "see pretty certain url property already present might typings issue dunno", "num": "21945", "d": "1/2018"}, {"title": "aio generate zips stackblitz files task", "body": "prevent confusing dangling link errors first time docs developers", "num": "21944", "d": "1/2018"}, {"title": "aio send crash reports google analytics", "body": "", "num": "21943", "d": "1/2018"}, {"title": "aio add regular testing angulario", "body": "", "num": "21942", "d": "1/2018"}, {"title": "aio dynamically add preemptive", "body": "", "num": "21941", "d": "1/2018"}, {"title": "eagerly loaded routed feature module introduces undesired routes", "body": "submitting current behavior eagerly loaded routedfeature module adds routes root application expected behavior routes routedfeature module added root routes either loaded lazyly eagerly minimal reproduction problem instructions see sample checkout ng serve goto observe links top page available although last one nt exist motivation use case changing behavior began feature routed lazily loaded module needed one component application level imported appmodule eagerly load consciously loosing lazy loading advantage although side effect routes feature module loaded directly application level consider loading eagerly lazilly routed feature module nt imply functionnal change application environment ng version angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "21934", "d": "1/2018"}, {"title": "ngclass remove class object value null", "body": "submitting current behavior icon component usage initial render icon component lt span element one class small okay modify input value lt span element class large small expected behavior modification input value lt span element class small minimal reproduction problem instructions click switch icon button icon lt span element large small motivation use case changing behavior documentation says ngclass directive works false object value experienced works value null modify large input value null work fine false work works environment", "num": "21932", "d": "1/2018"}, {"title": "script blocking app seconds", "body": "submitting current behavior angular loading via iframe angular app hanging whole web browser seconds loading loading iframe windowonload getting issue chrome debugged seen sources tab devtools show one file domain causing problem loading opened file code seems like function define require requirenative requireasync exports console privates apibridge bindingutil getinternalapi array function json object regexp string error use strict copyright c chromium authors rights reserved use source code governed bsdstyle license found license file custom binding app api var appnatives requirenative app var process requirenative process var extensionid processgetextensionid var logactivity requirenative activitylogger function wrapforlogging fun extensionid return fun nothing interesting log without extension return function todo ataly need make sure use right prototype funapply array slice either rewritten similarly defined logactivitylogapicall extensionid app funname arrayslice arguments return functionapply fun arguments becomes chromeapp var app getisinstalled wrapforlogging appnativesgetisinstalled getdetails wrapforlogging appnativesgetdetails runningstate wrapforlogging appnativesgetrunningstate tricky getisinstalled actually exposed getter isinstalled nt way express schema json worth one special case define manually let getisinstalled function act documentation var isinstalled wrapforlogging appnativesgetisinstalled objectdefineproperty app isinstalled proto null configurable true enumerable true get function return isinstalled called appbindingscc function oninstallstateresponse state callbackid var callback callbacks callbackid delete callbacks callbackid typeof callback function try callback state catch e consoleerror exception chromeappinstallstate response handler estack todo kalman move stuff custom bindings var callbacks proto null var nextcallbackid function getinstallstate callback var callbackid nextcallbackid callbacks callbackid callback appnativesgetinstallstate callbackid objectdefineproperty app installstate proto null configurable true enumerable true value wrapforlogging getinstallstate writable true exports set binding app exports set oninstallstateresponse oninstallstateresponse expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21931", "d": "1/2018"}, {"title": "module import custom providers select last one", "body": "module import custom providers run last one got problem trying register implementation service via modulewithproviders means modules implementation register another module certain interface service please check blow sample information module module appmodule mysharemodule functionality use different service api endpoint create interface isearchservice implementation provided everywhere inside mysharemodule inject isearchservice get implementation base inside lazy load module via route current behavior using implementation put imports appmodule even route move use implement registers last module imports expected behavior use correct implementation correct module environment", "num": "21930", "d": "1/2018"}, {"title": "numbersymboltimeseparator lack numbersymboldateseparator", "body": "submitting current behavior current behavior expected behavior dateseparator new property numbersymbol minimal reproduction problem instructions motivation use case changing behavior build components need know environment environment", "num": "21929", "d": "1/2018"}, {"title": "add hide field conditions within template", "body": "issue information clue great help use template need change column according search condition department result different search condition said use template show result think possible add hide field conditions need help badly please help", "num": "21928", "d": "1/2018"}, {"title": "ivy bindv takes single arg array literal", "body": "current view compiler generates vargs", "num": "21927", "d": "1/2018"}, {"title": "redeclare blockscoped variable ngdevmode", "body": "submitting current behavior angular compilation problem worked fine upon upgrading get error atloader nodemodules redeclare blockscoped variable ngdevmode error atloader modulenodemodules redeclare blockscoped variable ngdevmode continuation issue working repo expected behavior compilation error minimal reproduction problem instructions check repo follow simple instructions motivation use case changing behavior broken environment", "num": "21925", "d": "1/2018"}, {"title": "helpful patterns creating successful forms", "body": "submitting current behavior developer experience lacks documentation approaching design handling form controls across reusable subcomponents could done injectable later although entirely undocumented controlcontainer extremely limited explanation statesonly used forms module could imply nt designed intended inherit methodologies dispersedemployed kara erickson talk angularconnect expected behavior common usecase documented discoverable canonical minimal reproduction problem instructions motivation use case changing behavior improve developer experience environment", "num": "21920", "d": "1/2018"}, {"title": "github robot allow prs pending reviews merged", "body": "past accidentally merged prs pending reviews lead changes nt sufficiently reviewed merged filed issue pullapprove handle nt get much traction consider implementing github robot", "num": "21919", "d": "1/2018"}, {"title": "service worker extendablility", "body": "submitting currently angular service worker support generates service worker part build process cache application offline use like use service worker additional work like receive push notifications generated service worker extendable able specify scripts service worker import config file able declare functions handle service worker events like notification events code get included generated service worker script", "num": "21918", "d": "1/2018"}, {"title": "using ngfor loop twoway databinding want receive better error message", "body": "submitting current behavior use primeng components use ngtemplates create component link instance angular compiler sends incomprehensible errors html carsjson expected behavior comment piece code see object use future create component html carsjson course bypass error way html carsjson opinion cant normally logically handle code according syntax would like know cause error minimal reproduction problem instructions", "num": "21914", "d": "1/2018"}, {"title": "cheatsheet documentation documents wrong end stick", "body": "submitting see nt think issue raising understood wording existing documentation appears injector documenting injectable metadata annotation comment jotatoledo parts function absolutely correct unfortunately nt line existing documentation simple put existing documentation flat wrong reads adding injectable declares class dependencies injected constructor dependency injector creating instance class false way around declares class used injector injected classes classes construction", "num": "21913", "d": "1/2018"}, {"title": "docs style guide style avoid providing services shared modules confusing", "body": "actually repeating old one left without answer find style guide part style saying avoid providing services shared modules really confusing found issue trying make sense repeat nikosgpet says understand careful providing services shared modules nt understand though altogether avoid providing services shared modules supposed instead especially confusing fact example given actually following advice understand logic behind advice explained better perhaps length clearly example either follow advice better explained example nt follow", "num": "21911", "d": "1/2018"}, {"title": "angular slow violation", "body": "submitting browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "21910", "d": "1/2018"}, {"title": "angular http guide available", "body": "http client guide says available", "num": "21909", "d": "1/2018"}, {"title": "refining code tutorial routing", "body": "submitting current behavior srcappherodetailherodetailcomponentts expected behavior request add revision remove dead code minimal reproduction problem instructions motivation use case changing behavior learning angular tutorial environment macos sierra", "num": "21908", "d": "1/2018"}, {"title": "date pipe tests broken chrome mobile", "body": "submitting current behavior working fine suddenly broken master need investigate error log", "num": "21907", "d": "1/2018"}, {"title": "lodash individual module import broken", "body": "submitting current behavior lodash imports using syntax produce following typeerror function expected behavior import function lodash without error minimal reproduction problem instructions updating importing lodash modules way worked fine made lodash impact bundle size minimal currently importing entire lodash library still works inefficient motivation use case changing behavior like said import entire library use one function inefficient environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx tooling issues node version platform windows", "num": "21904", "d": "1/2018"}, {"title": "broken demo dynamic component loader documentation article", "body": "submitting current behavior live demo downloadable demo linked documentation page titled dynamic component loader function downloadable demo expected behavior demo works minimal reproduction problem instructions follow live example link shows top bottom article go straight live example link motivation use case changing behavior demo broken environment", "num": "21903", "d": "1/2018"}, {"title": "http docs guide section incorrect syntax angular", "body": "submitting current behavior syntax used compatible angular according rxjs moved lettable operators documentation updated yet using syntax according code work properly expected behavior expected least point code samples work angular", "num": "21902", "d": "1/2018"}, {"title": "styles css libraries js backend frontend", "body": "angular cli node os darwin angular hello every try develop application two modules importants backend frontend module list files css js libraries wo nt load one time angularclijson good way list files css put theme file css component module like load files css frontend frontendcomponentcss load files css backend backendcomponentcss working good try navigate routes modules angular still load list files css module first visited crashed try working idea plz captures", "num": "21901", "d": "1/2018"}, {"title": "tour heroes step page wo nt load", "body": "submitting current behavior attempting complete step services tour heroes page advises request failed request document failed expected behavior see steps complete portion tutorial minimal reproduction problem instructions motivation use case changing behavior environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21899", "d": "1/2018"}, {"title": "entire website broken", "body": "submitting current behavior expected behavior looked like minimal reproduction problem instructions go motivation use case changing behavior readability referances", "num": "21897", "d": "1/2018"}, {"title": "reenable disabled form controls reinstantiated tracked ngfortrackby", "body": "submitting current behavior application managing immutable state includes instances portion state changed entire state tree recreated including controls sometimes change causes previouslyenabled controls become disabled vice versa using reduce need component initialisations mean controls get stuck disabled appreciate may recommended reinstantiate like think still valid bug believe code function called control disabled reenabled expected behavior always possible toggle control enableddisabled state minimal reproduction problem instructions stackblitz repro first click toggle disabled button checkboxes clicked even though motivation use case changing behavior always possible toggle input enableddisabled state environment", "num": "21895", "d": "1/2018"}, {"title": "possible bug ngtemplate clicks firing", "body": "submitting current behavior difficult explain words plunkr bear experiencing odd behaviour highly reusable component architecture experimenting idea standardised components slots different functionality depending context using etc pressing buttons slots wrapped functionality inside slots communicates host component via eventemitter sometimes handler firing seemingly random seems isolated mix expected behavior buttons fire every time trigger whatever functionality connected button minimal reproduction problem instructions created simplest version button toggle class element host component click buttons random order eg try clicking finally longer works point see sometimes click fires sometimes depending current state expanded elements however line replace like functionality works perfectly albeit without classes style motivation use case changing behavior full version wanted animation like accordian type functionality environment", "num": "21893", "d": "1/2018"}, {"title": "use broken risky cryptographic algorithm", "body": "submitting current behavior sure whether issue report ask stack overflow please let know proper place using angularjs web portal submitting code sca ibm appscan reported following findings angularjs libraries use broken risky cryptographic algorithm insecure random number function module exports var id var px mathrandom moduleexports function key return object housing internal properties constructors var internals objcreate null keep internal properties internal var secret mathrandom helper functions return function randomchar return stringfromcharcode mathfloor mathrandom function executed platform initialized experimental immediatedefinitionprototypecreatepostmessagesetimmediate function installs event handler global message event see var root thisroot var messageprefix setimmediate rootmathrandom var onglobalmessage function globalmessagehandler event would like check whether real issue false positive expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21890", "d": "1/2018"}, {"title": "partial outage angulario certain regions", "body": "submitting current behavior going directly clicking entry sidebar leads request document failed unable retrieve guidereactiveforms page time please check connection try later expected behavior display reactive forms page environment browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version x safari desktop version safari ios version xx ie version xx edge version xx", "num": "21889", "d": "1/2018"}, {"title": "missing encryption sensitive data", "body": "submitting current behavior note sure whether submit item issue question stack overflow please let know listed using angular web portal submitting portlet code sac ibm appscan reported following high definitive findings missing encryption sensitive data insecure http communication document self full polyfill browsers classlist support including ie lt edge missing svgelementclasslist classlist documentcreateelement documentcreateelementns amp amp classlist documentcreateelementns function view use strict postmessage target origin var true var oldonmessage rootonmessage rootonmessage function false rootpostmessage rootonmessage oldonmessage return return false onglobalmessageinstance rootaddeventlistener message onglobalmessage false var fn function setimmediate var setimmediate messageprefix amessageprefix instance ainstance var handle instanceaddfromsetimmediatearguments arguments instancerootpostmessage messageprefix handle return handle fninstance fnmessageprefix messageprefix return fn would like check whether real issue false positive expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21888", "d": "1/2018"}, {"title": "able see unit testing page angulario website", "body": "url accessible maintainance", "num": "21887", "d": "1/2018"}, {"title": "improper neutralization input web page generation crosssite scripting", "body": "submitting current behavior expected behavior sure whether issue report ask stack overflow please let know proper place using angularjs web portal submitting code sca ibm appscan reported following findings angularjs libraries improper neutralization input web page generation crosssite scripting form validation allowed param ctx param specs return function registercontext ctx specs var specs lt var spec securityschema spectolowercase ctx case insignificant element attribute names lowercased lookup jquery insecure manipulation child node thislatestvalue thislatestreturnedvalue return thislatestreturnedvalue thislatestreturnedvalue thislatestvalue return wrappedvalue wrap thislatestvalue param obj would like check whether real issue false positive minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21886", "d": "1/2018"}, {"title": "ngfor reactive forms firefox working es expected", "body": "submitting current behavior using custom made component radiogroup ngfor loop firefox radio button work expected behavior clicking radiobutton mark selected minimal reproduction problem instructions see following plunker work chromium firefox versions environment", "num": "21885", "d": "1/2018"}, {"title": "automate pr workflow via github robot", "body": "robot could help us manage pr workflow watching activity prs moving prs various milestones depending activity observed pr proposed milestones captured following diagram nodes ovals actions cause transitions annotated edges graph used color coding capture responsible next state transition might exceptional state transitions missing diagram try capture document many ocombe take stab thanks", "num": "21884", "d": "1/2018"}, {"title": "angulario", "body": "submitting current behavior going angulario safari chrome nothing showing inspecting element see uncaught syntaxerror unexpected end input expected behavior able see site minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21882", "d": "1/2018"}, {"title": "helloworld retains much code build optimizer", "body": "create hello world ivy closure rollup build optimizer closure bytes rollup bo bytes seems bo still retaining unneeded code need investigate rm rf dist builtsh cd yarn install yarn test ls al distbundlejs rwr r misko eng jan distbundlejs cd yarn install yarn test ls al distbundlejs rwr r misko eng jan distbundlejs", "num": "21880", "d": "1/2018"}, {"title": "paramsinheritancestrategy always nt flatted data params resolvers", "body": "essentially route resolvers parentchild relationship expect able see parent resolver output child resolver route data unfortunately parameter inheritance code bit actually ends executing resolvers already run reproduction needed reported internally", "num": "21878", "d": "1/2018"}, {"title": "need angularjsurlserializer routerupgrade", "body": "problem angular angularjs url serialization differ couple key ways one handling special characters another handling empty url params url angularjs parses angular parses result angular router angular adding sign reserializing solution produce new would serializer passes parseserialize tests angularjs would nt extend would instead totally new could implemented similarly current modifications plus modifying functions test using initial implementation make sure works expected within google making available externally", "num": "21875", "d": "1/2018"}, {"title": "ambient types found ngmodule", "body": "similar bazel build test info analysed target test packages loaded info found target error compiling angular templates ngc test failed exit srcappsearchtestts error find module util srcappsearchtestts error find module fs repro build filegroup name nodemodules srcs glob nodemodules visibility visibility public load angular indexbzl ngmodule ngmodule name test srcs glob srcts tsconfig tsconfigjson packagejson name reproutil version main indexjs license mit devdependencies angularbazel angularcompiler angularcompilercli angularcore typesnode typescript tsconfigjson compileroptions lib dom typeroots nodemodules types include srcappsearchtestts workspace workspace name ubcsearch gitrepository name buildbazelrulesnodejs remote commit load buildbazelrulesnodejs defsbzl noderepositories noderepositories packagejson packagejson gitrepository name buildbazelrulestypescript remote tag load buildbazelrulestypescript setupbzl tssetupworkspace tssetupworkspace load buildbazelrulesnodejs defsbzl nodejssetupworkspace nodejssetupworkspace localrepository name angular path nodemodules angularbazel localrepository name rxjs path nodemodulesrxjssrc gitrepository name iobazelrulessass remote tag load iobazelrulessasssass sassbzl sassrepositories sassrepositories gitrepository name comgithubbazelbuildbuildtools remote note commit matches version buildifier angularngcontainer commit name iobazelrulesgo url load iobazelrulesgogo defbzl gorulesdependencies goregistertoolchains gorulesdependencies goregistertoolchains srcappsearchtestts import isnullorundefined util isnullorundefined hello import fs fs fsreadfile hello gt", "num": "21872", "d": "1/2018"}, {"title": "child fields empty resolving parent guards", "body": "submitting current behavior guard property activatedroute undefined expected behavior expect typing information include may undefined eg looking route child middle resolver execution minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21871", "d": "1/2018"}, {"title": "generate closurelocale data file exported plural functions", "body": "fixed forgot closure locale data file", "num": "21870", "d": "1/2018"}, {"title": "find module uglifyjswebpackplugin", "body": "angular cli node osx angular created new project ran npm start thanks help issue find module uglifyjswebpackplugin error find module uglifyjswebpackplugin functionmoduleresolvefilename functionmoduleload modulerequire require object usersjulioferrertestappnodemodules modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object usersjulioferrertestappnodemodules modulecompile objectmoduleextensionsjs moduleload npm err code elifecycle npm err errno npm err testapp start npm err exit status npm err npm err failed testapp start script", "num": "21869", "d": "1/2018"}, {"title": "httpclienthead expects payload default nt follow spec", "body": "submitting current behavior making head request specifically always result exception thrown assuming api respects http spec server must return messagebody response angular expects json payload instead blank text payload expected behavior default making head request minimal reproduction problem instructions motivation use case changing behavior developer nt specify response type every single head request following spec environment", "num": "21866", "d": "1/2018"}, {"title": "iterator element array executes times ngfor based array", "body": "submitting current behavior simple case one appcomponent template trying repeat div based appcomponentts array dataset includes one object element implemented iterator object far know sholud nt invoked iterator nested object array expected behavior iterator invoked minimal reproduction problem instructions demo installed latest angular version machine please bring console see hit logged four times motivation use case changing behavior implement object iterator like use nested ngfor run logic environment", "num": "21864", "d": "1/2018"}, {"title": "angulario website works firefox ver", "body": "error occurs typeerror undefined back tab addlistener restorebar submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21860", "d": "1/2018"}, {"title": "error invalid configuration route array specified", "body": "came error running angular one help figure appmodulets file import browsermodule angularplatformbrowser import ngmodule angularcore import appcomponent appcomponent import headercomponent headercomponent import recipescomponent recipesrecipescomponent import recipeslistcomponent recipesrecipeslistrecipeslistcomponent import recipesitemcomponent recipesrecipeslistrecipesitemcomponent import recipesdetailcomponent recipesrecipesdetailrecipesdetailcomponent import userdropdowndirectivedirective userdropdowndirectivedirective import shoppinglistcomponent shoppinglistshoppinglistcomponent import recipeserviceservice recipesrecipeserviceservice import shoppingserviceservice shoppinglistshoppingserviceservice import commonmodule angularcommon import routing approutes ngmodule declarations appcomponent headercomponent recipescomponent recipeslistcomponent recipesitemcomponent recipesdetailcomponent userdropdowndirectivedirective shoppinglistcomponent imports browsermodule commonmodule routing providers recipeserviceservice shoppingserviceservice bootstrap appcomponent export class appmodule approuterts file import routermodule angularrouter import routes angularrouter import provideroutes angularrouter import recipescomponent recipesrecipescomponent import shoppinglistcomponent shoppinglistshoppinglistcomponent export const approutes routes export const approutesproviders provideroutes approutes export const routing routermoduleforroot approutesproviders", "num": "21858", "d": "1/2018"}, {"title": "binding problem select box", "body": "import ipost help import map rxjsoperatormap import component oninit onchanges simplechanges angularcore import ihelp base icity help import dataservice dataservice import http response angular import observable rxjsobservable import bindcallback rxjsobservablebindcallback import resolve url component selector apptable templateurl tablecomponenthtml styleurls tablecomponentcss providers dataservice export class tablecomponent implements oninit public country public city public cities public state public langauge public posttype public source public category public posts post countryname string cityname string statename string languagename string posttypename string sourcename string categoryname string startdate date enddate date store new map url ngoninit onchangestate value thisstorehas country thisstoredelete country thisstorehas state thisstoredelete state thisstoreset state value thisstatename value consolelog hiii onchangecity value thisstorehas state thisstoredelete state thisstorehas city thisstoredelete city thisstoreset city value thiscityname value onchangecountry value thisstorehas country thisstoredelete country thisstoreset country value thiscountryname value onchangecategory value thisstorehas category thisstoredelete category thisstoreset category value thiscategoryname value onchangelanguage value thisstorehas language thisstoredelete language thisstoreset language value thislanguagename value onchangeposttype value thisstorehas posttype thisstoredelete posttype thisstoreset posttype value thisposttypename value onchangesource value thisstorehas source thisstoredelete source thisstoreset source value thissourcename value onchangestartdate value thisstorehas startdate thisstoredelete startdate thisstoreset startdate value thisstartdate value onchangeenddate value thisstorehas enddate thisstoredelete enddate thisstoreset enddate value thisenddate value constructor private http gt thispost datajson let entry thispost post tslint disablenextline preferconst tslint disablenextline maxlinelength let obj new base entryfields entryfields entryfields entryfields entryfields entryfields entryfields entryfields thispostspush obj let entry thispost country let obj new base entryfields entryfields thiscountrypush obj consolelog loading state let entry thispost state let obj new base entryfields entryfields thisstatepush obj consolelog loading city let entry thisdata city let obj new base entryfields entryfields thiscitypush obj consolelog loading category let entry thispost category let obj new base entryfields entryfields thiscategorypush obj consolelog loading language let entry thispost language let obj new base entryfields thislangaugepush obj consolelog loading post type let entry thispost posttype let obj new base entryfields thisposttypepush obj consolelog loading source let entry thispost source let obj new base entryfields thissourcepush obj onclick thisurl thisgetdata data gt thispost datajson consolelog length thispostslength thispostslength consolelog length thispostslength let entry thispost data tslint disablenextline preferconst tslint disablenextline maxlinelength unsubscribe getdata let url thisstorehas state url url state thisstoreget state amp consolelog url thisstorehas country url url country thisstoreget country amp consolelog url thisstorehas city url url city thisstoreget city amp consolelog url thisstorehas language url url language thisstoreget language amp consolelog url thisstorehas posttype url url type thisstoreget posttype amp consolelog url thisstorehas category url url category thisstoreget category amp consolelog url thisstorehas source url url source thisstoreget source amp consolelog url thisstorehas startdate url url thisstoreget startdate amp consolelog url thisstorehas enddate url url thisstoreget enddate amp consolelog url return url slno title", "num": "21855", "d": "1/2018"}, {"title": "prevent button click event", "body": "create islogindirective typescript import directive hostlistener angularcore directive selector appislogin export class islogindirective current behavior clicked button events happened expected behavior hope click event happen environment", "num": "21853", "d": "1/2018"}, {"title": "add amp keep attributs development mode", "body": "submitting current attributs always removed templates path xmb file retrace attribut used id dom visiting app expected keep attributs app mode add motivation use case changing behavior think developement mode kepp html template select attribut css let traductors know translatablemissing attribut added like could listen onclick attributs open modal translate text directlyinstantly visiting webapp already meaning amp description enough problems translate app frenchgerman avoid us maintain xmb excel file tool avoid share xls file traductor visit webapp translate place id easy find traduction compiler output file messagesxmb angular create many insignifiants attributs production theses useful usecase developement mode environment others see see", "num": "21852", "d": "1/2018"}, {"title": "numbersymboltimeseparator lack numbersymboldateseparator", "body": "submitting expected behavior dateseparator new property numbersymbol", "num": "21851", "d": "1/2018"}, {"title": "load specified default module dynamically depending variable", "body": "load specified default module dynamically depending variable", "num": "21850", "d": "1/2018"}, {"title": "bug encode uri", "body": "current behavior class generate query string contains encoded javascript params new httpparams set test amp request url test amp", "num": "21849", "d": "1/2018"}, {"title": "docs aio structural directives path navigation menu", "body": "submitting current behavior path url navigation menu expected behavior able navigate page navigation menu right see attribute directives page minimal reproduction problem instructions motivation use case changing behavior", "num": "21848", "d": "1/2018"}, {"title": "dead link angulario documentation", "body": "submitting current behavior dead link dynamic component sample app expected behavior sample app remove link minimal reproduction problem instructions access click live sample link bottom page motivation use case changing behavior na environment", "num": "21847", "d": "1/2018"}, {"title": "angular twoway binding nt work firefox windows osx", "body": "submitting current behavior using latest version firefox time issue submission either windows osx ca nt get model component change text input start clean project generated cli newest version add input generated app component including formsmodule appmodulets file like starting app attempt change title app via text box created firefox either windows osx sierra title top page change response input switch chrome app works expected title matching contents text input understand hood longer implemented actual twoway data binding angular understanding using around ngmodel declaring angular language behaveslooks twoway binding would angularjs expected behavior expect framework would support major browsers major oses minimal reproduction problem instructions steps reproduce open plunk provided firefox machine running either windows osx run plunk try change text input observed input changes title minimal demo motivation use case changing behavior would like browser use supported framework nt two browsers open trying learn use said framework would also expect users apps would also using firefox would like apps work well environment interestingly linux machines running firefox seem problem posted angular gitter channel users reported code worked running linux machines comments found", "num": "21846", "d": "1/2018"}, {"title": "attribute name appear dom", "body": "matinput nested ngfor attribute name nt appear dom dev tools chrome versions angular material os typescript browsers affected angular material os ubuntu typescript browsers chrome vers\u00e3o vers\u00e3o oficial bits thoughts", "num": "21845", "d": "1/2018"}, {"title": "messageservice called installed tutorial", "body": "submitting current behavior tutorial gt services gt provide heroservice page instruction open appmodule class import heroservice add ngmoduleproviders array srcappappmodulets providers providers heroservice messageservice providers heroservice otherwise application run stage stage tutorial messageservice yet installed thanks", "num": "21844", "d": "1/2018"}, {"title": "cheatsheet documentation injectable backwards", "body": "submitting current behavior incorrectly reads lt lt injectable class myservice declares class dependencies injected constructor dependency injector creating instance class gt expected behavior along lines lt lt injectable class myservice declares class injected dependency classes via class constructor dependency injector creating instance dependent class gt minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21843", "d": "1/2018"}, {"title": "make sense zone errors", "body": "support request yeah stackoverflow github trying get basic functionality working angular zonejs making impossible troubleshoot produces freaking incomprehensible errors seem fsckall actual problem ridiculous error zonesymbolcurrenttask object runcount state notscheduled type microtask zonesymbolerror error networkerror attempting fetch resource instantiating npm angularmaterialbundlesmaterialumdjs loading loading mainjs stack trace iprototypeimport lt zoneprototyperun gt scheduleresolveorreject lt zoneprototyperuntask gt drainmicrotaskqueue zonesymbolstack zoneify lt getter amp setterfilename getter amp setterlinenumber getter amp settermessage getter amp settername getter amp setteroriginalerr typeerror networkerror attempting fetch resource stack trace zoneify lt j lt zonedelegateprototypeinvoke zoneprototyperun scheduleresolveorreject lt zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue originalstack getter amp setterstack getter amp settertosource function value tostring function value zoneawarestack getter amp setterproto object way file appears puking present errors page load subsequent files loaded successfully megs empty application holy crap however people manage make thing damn heavy unapproachable design patterns shoehorned framework facility available stupid developers like actually create working spa please sake ever getting actual work done please put koolaid please nt tell use angular cli nt want singleuse application bootstrap scripts box nt need kitchen sink installed project unit tests handy server script etc sick starting fix simple errors damn spa complicated many thanks anyone help crotchety old geezer like figure newfangled contrivance", "num": "21841", "d": "1/2018"}, {"title": "breakpointobserver returning incorrect result element inspector open", "body": "submitting current behavior detecting viewport size using returned boolean consistent except pixel range inspect element open open element inspector problem manifest expected behavior attached stackblitz return handset smaller bigger handset angular layout breakpoints minimal reproduction problem instructions steps reproduce minimal demo go slide viewport size overunder see desired result slide viewport size inaround see problem finally launch inspect see issue stops motivation use case changing behavior environment", "num": "21839", "d": "1/2018"}, {"title": "router respect path lazyloaded module", "body": "submitting current behavior authrouting approuting user access expected behavior expected behavior would allow access makes hard guards trigger well guard triggers minimal reproduction problem instructions stackblitz try paths motivation use case changing behavior router respect namespace lazy loaded module case environment development environment", "num": "21838", "d": "1/2018"}, {"title": "triggered http request navigated", "body": "using routernavigate method navigate route dashboard dashboard component added http request method ngoninit ngafterviewinit triggered navigated route triggered add http request construct method sure best code practice", "num": "21837", "d": "1/2018"}, {"title": "angular speak portuguese", "body": "submitting current behavior suggest site recommend angular course speak portuguese online course helder rangel expected behavior none minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21836", "d": "1/2018"}, {"title": "module homework module homework current date cerrentdate date ddmmyyyy var appangularmodule datentime datentimecontroller firstcontroller appcontroller firstcontroller function scope scopecurrentdate new date", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21832", "d": "1/2018"}, {"title": "update test name formbuilderspects", "body": "submitting current behavior test name name introduced typescript use controls whose form state standalone value gt const g bgroup login bcontrol value syncvalidator asyncvalidator expected behavior test name rather suggested igorminar followup issue followup pr provided shortly motivation use case changing behavior suggested igorminar", "num": "21831", "d": "1/2018"}, {"title": "live example dynamic component loader page nt work", "body": "live example page available link nt work", "num": "21830", "d": "1/2018"}, {"title": "docs aio aot compiler request", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior think angular compiler options topic better allocate description topic cause compiler options matter first reading someone opened topic better read understand configuring options", "num": "21829", "d": "1/2018"}, {"title": "use old logo npm", "body": "black band", "num": "21827", "d": "1/2018"}, {"title": "add submitted flag abstractcontrols", "body": "needs design basic idea would nt tie submitted state toplevel directives limiting angular material error matchers well nested components want know submission state", "num": "21823", "d": "1/2018"}, {"title": "silent failure ngmodule", "body": "repro repro locally bazel build src info analysed target src src packages loaded info found target error compiling angular templates ngc src src failed exit srcmaints error find module appngfactory target src src failed build looks like compilation error masked import okay", "num": "21820", "d": "1/2018"}, {"title": "meta please add tag closed issues indicating release werewill fixed", "body": "regression behavior used work stopped working new release bug report feature request x documentation issue request support request gt please submit support request instead see current behaviour currently issues encountered often case developer needs update latest patch angular likely come across issue searching error message google issue closed often unclear release already released etc expected behaviour bugs closed tag denoting target release added issue minimal reproduction problem instructions na motivation use case changing behaviour developer happiness environment na", "num": "21819", "d": "1/2018"}, {"title": "angulario missing google results certain usersdevices", "body": "able repro mobile phone stephenfluin bradlygreen reported seeing desktop", "num": "21813", "d": "1/2018"}, {"title": "language service broken used windows", "body": "submitting current behavior version language service work typescript windows minimal reproduction problem instructions windows install version language service open project try completion angular template expected completions diagnostics gotodefinition etc received nothing", "num": "21811", "d": "1/2018"}, {"title": "build prod mode registerlocaledata fr", "body": "submitting current behavior building prod mode build whit prod option fail stack expected behavior build angular version angularcli angular others works angular reproduction started new project added thing tracked issue commit works modify juste previous state", "num": "21809", "d": "1/2018"}, {"title": "virtual dom amp jsx enhancing ui rendering speed", "body": "submitting regression behavior used work stopped working new release bug report x feature request documentation issue request support request gt please submit support request instead see current behavior ui rendering speed fastest among frameworks rather slow running java webview cordova etc lower render speed limited usage shadow dom lack virtual dom result lower performance view renderrerender speed slower compared performance shown javascript frameworks chart expected behavior possibly angular uses something similar virtual dom jsx render ui faster mobile devices faster jsx performs optimization compiling source code javascript generated code runs faster equivalent code written directly javascript gain may vary even optimized javascript libraries like becomes faster ported jsx faster ios faster android minimal reproduction problem instructions angular running cordova webview somewhat slower normal native app behavior motivation use case changing behavior many companies bloggers pointed slow ui rendering speed angular downside angular feel hope angular uses something similar jsx virtual dom like react vue environment angular version browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows mac java webview others", "num": "21808", "d": "1/2018"}, {"title": "viewencapsulation emulate added innerhtml nt contain css component", "body": "submitting current behavior css added child component innerhtml contained within component applied parent parent child coincidentally css class names expected behavior css contained child component applied parent emulated encapsulation native encapsulation chrome works properly minimal reproduction problem instructions please see plunker also question stack overflow motivation use case changing behavior environment", "num": "21807", "d": "1/2018"}, {"title": "activatedroutedata type wrong", "body": "submitting current behavior currently class properties return behaviorsubject type property known properties routerstatedts routerjs expected behavior update class environment", "num": "21805", "d": "1/2018"}, {"title": "merge github bot monorepo", "body": "need merge github bot angular use pr code updates also need find safer way update code firebase functions right uploading", "num": "21804", "d": "1/2018"}, {"title": "error ng serve could resolve module", "body": "submitting current behavior create new angular project angular cli using command wait file created dependencies installed tasks try run app using errors shows problem error expected behavior want run sample app created", "num": "21803", "d": "1/2018"}, {"title": "angular natively support passive event listeners", "body": "submitting current behavior hostlistener api nt allow us make event handler passive result component authors sometimes need use addeventlistener api get around expected behavior angular allows us something like hostlistener touchstart passive true minimal reproduction problem instructions na motivation use case changing behavior passive event handlers increase performance topic environment", "num": "21801", "d": "1/2018"}, {"title": "bug viewchild property set oninit", "body": "submitting current behavior currently ts component selector homeview templateurl homecomponenthtml export class homecomponent implements oninit afterviewinit viewchild treeview public tree fancytreecomponent dont know version null first call allows access properly initialized able check knew component initialized even documentation says deny initialized past exactly like mentioned breaking change expected behavior initializedset respectively minimal reproduction problem instructions use code motivation use case changing behavior environment", "num": "21800", "d": "1/2018"}, {"title": "error runtime compiler loaded", "body": "cmd creating dynamic component private createdynamiccomponent template string component template class templatecomponent usage", "num": "21799", "d": "1/2018"}, {"title": "issue using ol tag using ngfor directive", "body": "submitting current behavior using nffor directive ol tag expected behavior counter item stays space consecutive items minimal reproduction problem instructions see code plunker motivation use case changing behavior environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21798", "d": "1/2018"}, {"title": "exports breaks lazy loaded modules", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior throw error import lazy loaded modules expected behavior throw error export minimal reproduction problem instructions motivation use case changing behavior environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac others", "num": "21797", "d": "1/2018"}, {"title": "need import compilerproviders angular", "body": "angularplatformbrowserdynamic publicapi export compilerproviders angularcompiler nt export fix", "num": "21794", "d": "1/2018"}, {"title": "checkbindingnochanges attempting check index exist", "body": "submitting minimal reproduction problem instructions kind enough provide repro case similar seeing error seems limited cases visibility component toggled see error open plunker open chrome console press open ok see overlay appears opened direct function call press open appear error see error binding used display overlay environment seems bug unhandled error problem related function looks like unit testing intermittently getting error able trigger break exceptions took following screenshot tries look binding name via since currently evaluates elements results error seeing unfortunately real way try build repro case since idea angular getting state something seems getting sync somewhere possibly compiler least check make sure index checked exists", "num": "21788", "d": "1/2018"}, {"title": "lazyloaded module blank route fall back parent", "body": "submitting current behavior use lazyloaded route subroute nt empty route top module path foo loadchildren foomodule foomodule path component notfoundcomponent foomodule path bar component barcomponent path baz component bazcomponent expected behavior navigation foobar foobaz displays expected go food displays notfoundcomponent however go foo displays blank page minimal reproduction problem instructions motivation use case changing behavior would nice submodules nt toplevel url without redirect redundantly include found module environment", "num": "21785", "d": "1/2018"}, {"title": "changing input value cursor reset safari change", "body": "submitting current behavior writing input value bound property updated upon safari cursor moved end input value typing new letter browsers like chrome works okay cursor stays typing next letter video expected behavior writing input cursor stay place minimal reproduction problem instructions motivation use case changing behavior custom inputform components handle input value using interfaces environment browser x safari desktop version", "num": "21782", "d": "1/2018"}, {"title": "error uncaught promise typeerror guard function", "body": "code submitting import activatedroutesnapshot canactivate route router routerstatesnapshot angularrouter import store ngrxstore import observable rxjsobservable import map take rxjsoperators import observer rxjs import globals appglobal import crmstorageservice servicesstorageservice import rxjsaddoperatortake import corestate corecorereducer injectable export class authguard implements canactivate constructor private router router private storageservice storageservice const approutes routes path redirectto login pathmatch full path login component logincomponent path reset token component resetpasswordcomponent path canactivatechild authguard children path dashboard component dashboardcomponent path customerlist component customerlistcomponent path component errorcomponent ngmodule imports routermoduleforroot approutes enabletracing false lt debugging purposes declarations appcomponent providers authguard exports bootstrap appcomponent export class appmodule", "num": "21781", "d": "1/2018"}, {"title": "custom form control could nt get right value onpush parent component", "body": "submitting current behavior custom form control could nt get right value parent component wrote simple custom counter child component counter providers provide ngvalueaccessor useexisting forwardref gt countercomponent multi true export class countercomponent implements controlvalueaccessor private counter private onchange gt void private ontouched gt void writevalue value consolelog value thiscounter value registeronchange fn gt void void thisonchange fn registerontouched fn gt void void thisontouched fn ts component selector ngmodeldemo template changedetection changedetectionstrategyonpush export class ngmodeldemocomponent public count constructor private cdref changedetectorref ngoninit setinterval gt thiscount thiscount thiscdrefmarkforcheck result time value counter component view shows value last ngmodel expected behavior child component view show value parent minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21780", "d": "1/2018"}, {"title": "mouse events getting lost dynamically bound list chrome cases", "body": "submitting current behavior following conditions unable get get events fire binding array component ul ngfor lis inside mouseover mousedown events li elements array objects works strings binding function returns new array instead array every time using chrome works firefox edge even plunkr clicking elements top list work clicking bottom fail removing mouseover event make work using another browser makes work maybe chrome issue essential problem seems combination dynamic list mouseover events causes ul recreated dom although need seems interfere existing mouse events expected behavior lists able fire events minimal reproduction problem instructions motivation use case changing behavior trying build dropdown list binds list options may change hovering clicking events required environment", "num": "21779", "d": "1/2018"}, {"title": "bug router union type event consist router event types", "body": "submitting current behavior type documented union router events declared variable consist events leads following typescript error error property urlafterredirects exist type event property urlafterredirects exist type routerevent also ide ca nt guess type code completion nt work expected behavior think intersection type instead minimal reproduction problem instructions na motivation use case changing behavior solution error code completion ide suggests properties environment", "num": "21777", "d": "1/2018"}, {"title": "error runtime possible typescript issue", "body": "submitting current behavior get error page loaded overlay compile works fine expected behavior get error minimal reproduction problem instructions really provide way reproduce motivation use case changing behavior get working environment", "num": "21776", "d": "1/2018"}, {"title": "progress bar routing", "body": "get access route start route end event want show progress bar loading", "num": "21775", "d": "1/2018"}, {"title": "mediaquerylist patch nt work safari", "body": "mediaquerylist patch nt work safari available global scope receive instance sadly whatever reason sure access prototype using really way go nt environment browser safari technology preview desktop release safari desktop version platform macos", "num": "21774", "d": "1/2018"}, {"title": "dev build ibazel watch stops working refreshes", "body": "submitting x bug report current behavior try favourite shell edit test file times notice stops picking changes edits confirmed multiple machines expected behavior rebuild rerun tests every edit minimal reproduction problem instructions clone repository try favourite shell edit test file times notice stops picking changes edits motivation use case changing behavior currently need restart process edits makes working code tdd mode suboptimal environment osx node discussed igorminar alexeagle", "num": "21770", "d": "1/2018"}, {"title": "html styles angulario", "body": "submitting current behavior styles good decorated expected behavior something like minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21769", "d": "1/2018"}, {"title": "view changes detected triggering detectchanges ngif used", "body": "submitting current behavior view changes component detected changedetectionrefdetectchanages triggered manually expected behavior expect view changes reflected minimal reproduction problem instructions maints appcomponenthtml appcomponentts motivation use case changing behavior environment", "num": "21768", "d": "1/2018"}, {"title": "generate component directory structure", "body": "site url router like sitelogin sitelogout sitesingup homelist homesettings need component like sitelogincomponent sitelogoutcomponent sitesingupcomponent homelayoutcomponent homelistcomponent homesettingscomponent user login auto going homelist homelayoutcomponent dashboard layout contains nav item list settings holp component directory name maps like app apphome apphomelayout gt homelayoutcomponent apphomelist gt homelistcomponent apphomesettings gt homesettingscomponent appsitelogin gt sitelogincomponent appsitelogout gt sitelogoutcomponent appsitesingup gt sitesingupcomponent use ng generate", "num": "21766", "d": "1/2018"}, {"title": "incorrect binding name used throwing expressioncheckedafterithasbeenchangederror", "body": "submitting current behavior function checkbindingnochanges bindingname gives name index even using oldvalue another binding expected behavior bindingname use name proper binding minimal reproduction problem instructions make expressioncheckedafterithasbeenchangederror binding index motivation use case changing behavior misleading developers issue application environment", "num": "21765", "d": "1/2018"}, {"title": "documentation ngprojectas", "body": "submitting tool getting styling work specific usecases described nt see documentation angular docs safe use could maybe contribute documentation wherever might go", "num": "21762", "d": "1/2018"}, {"title": "broken live example link tour heroes tutorial", "body": "submitting current behavior live example link results page found expected behavior display live example minimal reproduction problem instructions go either search live example link click link exist motivation use case changing behavior improved documentation environment", "num": "21758", "d": "1/2018"}, {"title": "menu fails opening due partial keyframes", "body": "bug feature request proposal bug expected behavior working menu component current behavior opening menu cause open buttons unclickable console shows steps reproduce copied example electron app versions angular material os typescript browsers affected new npm maybe misunderstand output seems weird npm warns unmet dependencies told repost issue see original issue", "num": "21757", "d": "1/2018"}, {"title": "template code application angular highlight red time gitlab", "body": "example valid syntax angular template reason attributes highlighted problem html editor", "num": "21756", "d": "1/2018"}, {"title": "aio typo section test routed component parameters", "body": "submitting current behavior note example subscribing route parameters refers foreach operator subscribe idchanging events never used code snippets also explanation completely match code vs expected behavior documentation code sync", "num": "21755", "d": "1/2018"}, {"title": "documentationsetting hashbang prefix", "body": "hello currently wondered still way documentation missing set hashbang prefix angularjs url uses hash bang prefix angular defaults nt appear well documented adding fixes issue documentation either missing unclear", "num": "21753", "d": "1/2018"}, {"title": "angular contentchildren recursive ngtemplate", "body": "submitting current behavior use recursion ngtemplate combination ngcontent contentchildren nt knowfind components produced ngtemplate example recursion template stackblitz see ulitem nt know ultitle contentchildren even though ngcontent component expected behavior expect contentchildren detected component included de ngcontent even produced ngtemplate minimal reproduction problem instructions stackblitz motivation use case changing behavior simple readable code flexibility usage ngtemplate environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx tooling issues node version platform windows", "num": "21751", "d": "1/2018"}, {"title": "load script assets angular project", "body": "would like import script typescript import component angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title ngoninit var imagecompressor new imagecompressor create imagecompressor imagecompreeor package consolelog imagecompressor got error throw running although error website still run show imagecompressor got build project got error could thanks", "num": "21748", "d": "1/2018"}, {"title": "angulario materialangulario reachable", "body": "submitting current behaviour nt know share thought would better open issue documentation website angulario materialangulario reachable expected behaviour minimal reproduction problem instructions motivation use case changing behavior hard refresh environment", "num": "21746", "d": "1/2018"}, {"title": "improve marketing accessibility communication", "body": "submitting introduction think angular awesome thing could happened web development typescript best thing happened javascript also think angular team incredible job making porsche lamborghini bugatti space rocket anyway feel like losing race vuejs moment bet saying race competition know still feel like marketing communication community documentation could improved alot framework awesome technology awesome awesome please show world explain right treat community nicely part community got three things suggest marketing ca nt compete vuejs since uses javascript typings accessibility super easy everyone coming javascript maybe even like jquery nt lot knowledge still make things possible angular hand hard learn oop regular jsdeveloper even harder total beginner opinion worth communicated also would aim real developers even may even got touch web development finally typescript makes possible c swift c python java developer jump straight web development thanks typescript build real software types interfaces classes generics etc etc top angular gives us perfect framework building complex web applications simple even web applications extend electron nativescript ionic constraints opinion communicated angular great big ass applications would focus marketing technology architecture maintainable even people working years people say use vuejs childish things comes grownup stuff use angular anyway know angular reducing bundle size lot angular libraries elements way release gets interesting little projects would still aim huge projects also little space see whats coming going people may think going mars next year uh thats awesome wonder going next years easy update semantic versioning also promoted nice updating felt like minor update detailed informations website one important thing would promote unbelievable progress angular showing graph bundle size angular angular graph going little bit future saying aim something one example happened project since impressive please show world documentation accessibility documentation great way nt get wrong also frustrating sometimes could teach stuff quarter time compared someone reading comes vuejs positive thing hear documentation critic points documentation really longsome written tutorial style think one router thing cant look scroll big tutorial search search search missing stuff read full documentation thinking know everything still sometimes internet come across stuff never heard eg ngclass documentated short classclasstoadd probably cant something googling something term angular gives angularjs results mostly search angular kind outdated try mostly results suggestions tutorial called something like quickstart get angular minutes fundamentals techniques reworked something called tutorial cover every little detail instead could give quick overview every feature like adding one simple animation get know animations working practically example project like tour heroes add links everywhere documentation dive deep topics something like less informations little aspect add new menu item documentation actual documentation giving us everything point click routing see everything related router routing navigation maybe add section best practices usage service dumpsmart components organize stuff etc keep api actual documentation could wiki everyone suggest updates something explained simple something missing take look vuejs documentation communication community mentioned issues already highly requested things like elements creating library easily runtime translations etc currently ask updates ask often long time answer goes within long issue comments suggest need place angulario see going team working new features high priority much effort put xy ideas future estimations xy important community impressed angular listen every little detail know awesome stuff coming bet community know also frustrating hear something awesome like elements hearing nothing ages decisions new users framework use project may take year time huge stuff happening within angular knows whats going see present right also lot negatives past present today bundle size concern right would nice know aiming reduce even within next year", "num": "21745", "d": "1/2018"}, {"title": "problem intercept compiling ng build prod aottrue envprod", "body": "hello compiling project prod mode get following error problem using interceptor took simple version angular documentation part code use injectable export class noopinterceptor implements httpinterceptor intercept req httprequest next httphandler observable return nexthandle req module included like provide httpinterceptors useclass noopinterceptor multi true find problem part compiled code responseurl e e amp amp eresponseurl eresponseurl xrequesturl mtest egetallresponseheaders egetresponseheader xrequesturl null lurl", "num": "21742", "d": "1/2018"}, {"title": "trailing slash getting appended serving url", "body": "submitting current behavior current route refresh page webpack refreshes page upon update code trailing slash getting added last angular treating url instead route expected behavior treat route load respective lazyloadmodulechunkjs file environment", "num": "21741", "d": "1/2018"}, {"title": "attributes preserved", "body": "imported following component template transformed inserted head tag losing iscustomstyle process marker needed polymer", "num": "21738", "d": "1/2018"}, {"title": "support inline template defined outside component decorator", "body": "submitting current behavior inline templates recognized component decorator requested behavior treat string literals referenced decorator decorator minimal reproduction problem instructions create component template redirection mycomponentsome template name component selector template export class mycomponent private name string note validation completions available motivation use case changing behavior flexible supported language service", "num": "21736", "d": "1/2018"}, {"title": "error printing binding expressionchangedafterithasbeencheckederror", "body": "binding printed get expressionchangedafterithasbeencheckederror incorrect situation yesterday offending binding valid error kept printing pristine believe cause source", "num": "21735", "d": "1/2018"}, {"title": "better docs viewchild contentchild selectors", "body": "submitting current behavior documentation viewchild contentchild decorators make clear qualifies valid selector specifying target element directive even one infer various code examples component classes directive classes standard css selectors valid options see documentation indicates template reference variables may used selectors apparently already confused least one person", "num": "21734", "d": "1/2018"}, {"title": "fulltemplatetypecheck nt catch missing properties ngif", "body": "submitting current behavior ts import balls miscfunctions component selector myfoo styleurls fooscss templateurl foohtml export class foocomponent public readonly balls typeof balls balls html balls build succeeds runtime error expected behavior compiler caught commented lines missing minimal reproduction problem instructions clone build incorrectly succeeds motivation use case changing behavior catching bugs environment", "num": "21733", "d": "1/2018"}, {"title": "type typeof httpmodule assignable type compileroptions", "body": "problem compiling httpmodule angular project worked fine recently getting argument type typeof httpmodule assignable parameter type compileroptions compileroptions run npm start maints file source error import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule import httpmodule angular const platform platformbrowserdynamic platformbootstrapmodule appmodule httpmodule current behavior crashes compiling nothing localhost angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others", "num": "21732", "d": "1/2018"}, {"title": "extended components receive constructor arguments targetting", "body": "submitting current behavior setup componenta injects constructor componentb extends componenta targetting componentb receives part dependency injection targetting componentb receive part dependency injection expected behavior componentb receive regardless platform target minimal reproduction problem instructions create new app angular cli write following components add module ts component selector compa template export class componenta constructor private elementref elementref consolelog elementref component selector compb template export class componentb extends componenta add following app template start app server open app see console outputs twice component shut server change compileroptions map targets start app observe console longer outputs two instead one outputted undefined motivation use case changing behavior issue filed since core part works since extends environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux", "num": "21731", "d": "1/2018"}, {"title": "language service nt support nonspec tsconfigjson unexpected token", "body": "submitting steps reproduce use vscode version nt matter open angular application file conforms typescript spec valid json extra closing example current behavior expected behavior typescript allows file language service allow well environment", "num": "21729", "d": "1/2018"}, {"title": "back button return last component state", "body": "eg component shows list real estate entries dynamically populated search criteria routerlink single real estate detail component detail component go back hit browser back button lost search results list cause component initialized scratch restored last state please help way solve issue without changing angular core", "num": "21726", "d": "1/2018"}, {"title": "formcontrol accept observable value", "body": "submitting current behavior currently pushing value like expected behavior would nice reduce code simpler statement would accept observable like perhaps could also take away need unsubscribe store subscription via ngunsubscribe completes inside components motivation use case changing behavior simpler code", "num": "21724", "d": "1/2018"}, {"title": "using multiple image urls stylebackgroundimage considered unsafe", "body": "submitting current behavior using multiple image urls getting following warning images displayed attribute cleared warning sanitizing unsafe style value url invalidurl url see however works fine one url without sanitizing expected behavior minimal reproduction problem instructions see motivation use case changing behavior using multiple backgrounds supported modern browsers allows provide fallback starts looking left url uses first one works environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21723", "d": "1/2018"}, {"title": "get windows logged user angular", "body": "get windows logged user name angular application anybody please let know submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21722", "d": "1/2018"}, {"title": "fallback thus styling css custom properties", "body": "submitting current behavior css custom properties fallback therefor css applied using syntax even use browserslist like css still fallback values expected behavior fallback values syntax along lines css source root mycolor rendered color var mycolor color minimal reproduction problem instructions motivation use case changing behavior support styling using css custom properties environment", "num": "21721", "d": "1/2018"}, {"title": "documentation missing ngmodel binding third property level gets undefined", "body": "submitting documentation request current behavior type database expected behavior data defined passing back end currently getting error typeerror coservicebackup undefined stack trace typeerror coservicebackup undefined stack trace lt ng debugupdatedirectives webpackinternal checkandupdateview webpackinternal callviewaction webpackinternal execcomponentviewsaction webpackinternal checkandupdateview webpackinternal callviewaction webpackinternal execembeddedviewsaction webpackinternal checkandupdateview webpackinternal callviewaction webpackinternal execcomponentviewsaction webpackinternal checkandupdateview webpackinternal callwithdebugcontext webpackinternal debugcheckandupdateview webpackinternal viewrefprototypedetectchanges webpackinternal applicationrefprototypetick lt webpackinternal applicationrefprototypetick webpackinternal next lt webpackinternal zonedelegateprototypeinvoke webpackinternal oninvoke webpackinternal zonedelegateprototypeinvoke webpackinternal zoneprototyperun webpackinternal ngzoneprototyperun webpackinternal next webpackinternal eventemitterprototypesubscribeschedulerfn lt webpackinternal safesubscriberprototypetryorunsub webpackinternal safesubscriberprototypenext webpackinternal subscriberprototypenext webpackinternal subscriberprototypenext webpackinternal subjectprototypenext webpackinternal eventemitterprototypeemit webpackinternal checkstable webpackinternal onhastask webpackinternal zonedelegateprototypehastask webpackinternal zonedelegateprototypeupdatetaskcount webpackinternal zoneprototypeupdatetaskcount webpackinternal zoneprototyperuntask webpackinternal drainmicrotaskqueue webpackinternal zonetaskinvoketask webpackinternal invoketask webpackinternal globalzoneawarecallback webpackinternal motivation use case changing behavior please update documentation angular managing sub objects dom also good give mention angularjs upgrade cheatsheet environment browser x firefox version tooling issues node version platform linux fedora", "num": "21720", "d": "1/2018"}, {"title": "internet explorer shows white screen", "body": "submitting current behavior internet explorer nt load site always sometimes loads sometimes sometimes errors occures console expected behavior show page everytime minimal reproduction problem instructions angular app angular cli generated polyfills ie uncommented motivation use case changing behavior internet explorer users able get access site environment", "num": "21719", "d": "1/2018"}, {"title": "dynamically change language", "body": "problem nt able change language unless reload page entirely", "num": "21718", "d": "1/2018"}, {"title": "httpclient http failure parsing error php script reading sent variable using post", "body": "trying send data server using angular front end php server end language tried get data server get data url submitting php script methods work properly httpclient module problem post method let start scripts understand problem apits class contains methods sending receiving data server add addpartner method problem import injectable angularcore import httpclient httpheaders angularcommon import map rxjsoperatorsmap injectable export class api public data public name public partnername string constructor private httpclient addpartners partnername let headeroptions new httpheaders set contenttype applicationxwwwformurlencoded let test name partnername consolelog hi test return test headers headeroptions pipe map res gt consolelog res run method click submit button console seing value properly times first one second one hi name method addpartner apits class problem php script value sent empty server side read header request got accept applicationjson textplain acceptencoding gzip deflate acceptlanguage enus en fr cachecontrol nocache connection keepalive contenttype applicationxwwwformurlencoded host afflocal origin pragma nocache referer useragent windows nt khtml like gecko form data name php script works normally sent variable url like used get using hard see problem php script header accesscontrolalloworigin header contenttype applicationjson requireonce affiliatepartnerphp vardump post partnername jsondecode post name aff new affiliatepartner result aff gt addpartner partnername echo result tried following still add data database", "num": "21717", "d": "1/2018"}, {"title": "date pipe issue invalidpipeargument pipe datepipe", "body": "submitting current behavior date pipe unable parse datestring ie whereas works fine chrome expected behavior datepipe work similar browsers minimal reproduction problem instructions open following plnkr ie see console error environment", "num": "21716", "d": "1/2018"}, {"title": "implement new angulario api template class api type", "body": "x initial discussion research etc x sjtrimble create visual mocks igorminar jbogarthyde review iterate mock sjtrimble approve petebacondarwin implement template stretch jbogarthyde land already drafted content changes class api docs", "num": "21715", "d": "1/2018"}, {"title": "bot improvement slack integration regression escalation", "body": "current behavior na expected behavior new issue submitted repo bot evaluate determine regression checkbox selected condition met post message caretaker channel within angular team slack awareness bot keep pinging slack channel every minutes unless issue triaged via existing triaging rules assigned someone assignee field set motivation use case changing behavior feature would make easier sound alarms regressions reported issue action item postmortem recent cli breakage generally applicable reposprojects cc igorminar ocombe", "num": "21711", "d": "1/2018"}, {"title": "angulario improvements", "body": "x examples available stackblitz reliability performance improvements angulario migrates angularserviceworker latest x crash reporting x add prod monitoring via tests x add prod monitoring via google analytics alerts revisit push link preload strategy x refactor codebase use rxjs pipeable operators x update angular rc x update angular final new api templates symbol types x class type done x interfaces done x functions done x enums done x consts done x type aliases done x pipes directives x decorators x ngmodules x packages entry points x refactor existing content match new jsdoc tags x seo crawlability improvements x proper error handling x handling x fix bad redirects x dynamically add preemptive usability improvements x fix print layout x scheduling support home page announcements nt present stale content frequently visited landing pages authoring improvements reorg aiocontent folder group examples assets md files together", "num": "21710", "d": "1/2018"}, {"title": "ci infrastructure improvements", "body": "github robot automates workflows x enforce mergability rules via cicommit status x move issues backlog regression escalation move angular unit tests circleci move angulario unit tests circleci improve size tracking move overall unpinned sizetracking outside angularangular expand coverage examples forms router material improve size tracking workflow coverage reflect enforce doc ownership via pullapprove incremental code formatting", "num": "21709", "d": "1/2018"}, {"title": "build infrastructure improvements", "body": "publish angular using bazel build artifacts replace existing buildsh script creates build artifacts publish npm bazelbased build configuration x implement ngpackage rule x configure ngpackage rule throughout repo x update release scripts amp instructions delete buildsh", "num": "21707", "d": "1/2018"}, {"title": "ivy renderer beta", "body": "overview ivy new backwardscompatible angular renderer focused speed improvements size reduction increased flexibility ivy currently feature complete tested via enableivy true angularcompileroptions flag currently expect ivy remain behind flag feature complete battle tested google meantime check hello world demo see status ivy implementation go related issues treeshakeable providers followup work", "num": "21706", "d": "1/2018"}, {"title": "documentation lacking examples descriptions", "body": "documents examples descriptions good enough give typescript tells already need use function properly take tells outputs gives real code", "num": "21705", "d": "1/2018"}, {"title": "update take advantage new watch api ts", "body": "submitting current behavior needs uses compiler host api host typescript compiler expected behavior watch mode take advantage new watch api typescript", "num": "21703", "d": "1/2018"}, {"title": "async guards option wait previous guards finish", "body": "submitting current behavior multiple async guards returning promise observable path execute time expected behavior option let execute synchronous guard wait guard finish guard returns false following guards execute motivation use case changing behavior example authentication needs done first getting app data currently request appdata immediatly without token solution use hacky way one guard executes sync feature array guards useless environment", "num": "21702", "d": "1/2018"}, {"title": "error please add ngmodule annotation angular", "body": "submitting current behavior importing angular module generated separated library project angular package link compiling yarn dev returns error error unexpected value imported module appmodule please add ngmodule annotation client project library project exactly dependency versions installing dependency using npm install install nodemodules folder dependency compatible yet compilation error happens note used temporary name avoid issue prime sharedmodule packagejson library project difference client project packagejson client packagejson client project includes library dependency gulp dependencies library project scriptsfilesmaintypings sections library packagejson used generate compiled package using ngc expected behavior compilation error minimal reproduction problem instructions create new angularcli project appmodulets environment angular angularcli yarn", "num": "21699", "d": "1/2018"}, {"title": "ng serve outputs error typeerror thishostgetoutputname function", "body": "submitting current behavior running ng serve get error typeerror thishostgetoutputname function coming compilerumdjs remove nodemodule folder reinstall angular cli g expected behavior compile minimal reproduction problem instructions ng serve motivation use case changing behavior environment", "num": "21698", "d": "1/2018"}, {"title": "docs apicoreerrorhandler customerrrorhandler extend errorhandler", "body": "submitting regression behavior used work stopped working new release bug report feature request x documentation issue request support request gt please submit support request instead see current behavior treated interface furthermore example really simple nt show inject elements handler update realized typescript allows use implements extends classes guess way express class overrides implementation another kinda confusing expected behavior custom error handler decorated injectable showcase inject elements ctor extend implement minimal reproduction problem instructions check docs", "num": "21697", "d": "1/2018"}, {"title": "send json data services", "body": "hello everyone building web site angular want help connect api database validate username password send json object services tried everything know please one help issue", "num": "21696", "d": "1/2018"}, {"title": "documentation mistake page select description", "body": "submitting current behavior documentation page section select among alternative text messages mistake description gender property values written inside opposite stated expression follows author gender select male female f expected behavior expression shouldbe follows author gender select male female f", "num": "21694", "d": "1/2018"}, {"title": "maximum call stack size exceeded build prod staticsymbolresolverresolvesymbol", "body": "submitting current behavior module components directive circular dependencies using angular material run ng build prod error pops using verbose using dev removing aot works command serve works like charm environment environment provide source code needed solve issue thanks", "num": "21693", "d": "1/2018"}, {"title": "setup pullapprove reflect documentation ownership", "body": "gone directories grouped individual groups roughly match component grouping need take info update pullapprove config file filing issue grouping info nt get lost general aiocontentguidequickstartmd aiocontentexamplesquickstart aiocontentimagesguidequickstart aiocontentexamplescliquickstart aiocontentimagesguidecliquickstart aiocontentguidearchitecturemd aiocontentexamplesarchitecture aiocontentimagesguidearchitecture aiocontentguidearchitecturecomponentsmd aiocontentguidearchitecturemodulesmd aiocontentguidearchitecturenextstepsmd aiocontentguidearchitectureservicesmd aiocontentguidedisplayingdatamd aiocontentexamplesdisplayingdata aiocontentimagesguidedisplayingdata aiocontentguideuserinputmd aiocontentexamplesuserinput aiocontentimagesguideuserinput aiocontenttutorial aiocontentimagesguidetoh summary aiocontentguidecheatsheetmd aiocontentguideglossarymd core aiocontentguidebootstrappingmd aiocontentexamplesbootstrapping aiocontentguideattributedirectivesmd aiocontentexamplesattributedirectives aiocontentimagesguideattributedirectives aiocontentguidestructuraldirectivesmd aiocontentexamplesstructuraldirectives aiocontentimagesguidestructuraldirectives aiocontentguidedynamiccomponentloadermd aiocontentexamplesdynamiccomponentloader aiocontentimagesguidedynamiccomponentloader aiocontentguidetemplatesyntaxmd aiocontentexamplestemplatesyntax aiocontentimagesguidetemplatesyntax aiocontentguidedependencyinjectionmd aiocontentexamplesdependencyinjection aiocontentimagesguidedependencyinjection aiocontentguidedependencyinjectioninactionmd aiocontentexamplesdependencyinjectioninaction aiocontentimagesguidedependencyinjectioninaction aiocontentguidehierarchicaldependencyinjectionmd aiocontentexampleshierarchicaldependencyinjection aiocontentguidesingletonservicesmd aiocontentguidedependencyinjectionpatternmd aiocontentguideprovidersmd aiocontentexamplesproviders aiocontentguidecomponentinteractionmd aiocontentexamplescomponentinteraction aiocontentimagesguidecomponentinteraction aiocontentguidecomponentstylesmd aiocontentexamplescomponentstyles aiocontentguidelifecyclehooksmd aiocontentexampleslifecyclehooks aiocontentimagesguidelifecyclehooks aiocontentexamplesngcontainer aiocontentimagesguidengcontainer aiocontentguidepipesmd aiocontentexamplespipes aiocontentimagesguidepipes aiocontentguideaotcompilermd aiocontentguideentrycomponentsmd aiocontentguidesetdocumenttitlemd aiocontentexamplessetdocumenttitle aiocontentimagesguidesetdocumenttitle aiocontentguidengmodulesmd aiocontentexamplesngmodules aiocontentexamplesngmodule aiocontentimagesguidengmodule aiocontentguidengmodulefaqmd aiocontentexamplesngmodulefaq aiocontentguidemoduletypesmd aiocontentguidesharingngmodulesmd aiocontentguidefrequentngmodulesmd aiocontentimagesguidefrequentngmodules aiocontentguidengmoduleapimd aiocontentguidengmodulevsjsmodulemd aiocontentguidefeaturemodulesmd aiocontentexamplesfeaturemodules aiocontentimagesguidefeaturemodules aiocontentguidelazyloadingngmodulesmd aiocontentexampleslazyloadingngmodules aiocontentimagesguidelazyloadingngmodules upgrade aiocontentguideupgrademd aiocontentexamplesupgrademodule aiocontentimagesguideupgrade aiocontentguideupgradeperformancemd aiocontentguideajsquickreferencemd aiocontentexamplesajsquickreference language service aiocontentguidelanguageservicemd aiocontentimagesguidelanguageservice animations aiocontentguideanimationsmd aiocontentexamplesanimations aiocontentimagesguideanimations serviceworker aiocontentguideserviceworkergettingstartedmd aiocontentexamplesserviceworkergettingstarted aiocontentguideserviceworkercommunicationsmd aiocontentguideserviceworkerconfigmd aiocontentguideserviceworkerdevopsmd aiocontentguideserviceworkerintromd aiocontentimagesguideserviceworker forms aiocontentguideformsmd aiocontentexamplesforms aiocontentimagesguideforms aiocontentguideformvalidationmd aiocontentexamplesformvalidation aiocontentimagesguideformvalidation aiocontentguidedynamicformmd aiocontentexamplesdynamicform aiocontentimagesguidedynamicform aiocontentguidereactiveformsmd aiocontentexamplesreactiveforms aiocontentimagesguidereactiveforms testing aiocontentguidetestingmd aiocontentexamplestesting aiocontentimagesguidetesting http aiocontentguide aiocontentexampleshttp aiocontentimagesguidehttp router aiocontentguideroutermd aiocontentexamplesrouter aiocontentimagesguiderouter elements aiocontentexampleselements aiocontentimagesguideelements aiocontentguideelementsmd observables aiocontentexamplesobservables aiocontentimagesguideobservables aiocontentguideobservablesmd aiocontentguidecomparingobservablesmd aiocontentexamplesobservablesinangular aiocontentimagesguideobservablesinangular aiocontentguideobservablesinangularmd aiocontentexamplespracticalobservableusage aiocontentguidepracticalobservableusagemd aiocontentexamplesrxlibrary aiocontentguiderxlibrarymd universal aiocontentguideuniversalmd aiocontentexamplesuniversal style guide aiocontentguidestyleguidemd aiocontentexamplesstyleguide aiocontentimagesguidestyleguide packaging aiocontentguidenpmpackagesmd aiocontentguidebrowsersupportmd aiocontentguidetypescriptconfigurationmd aiocontentguidesetupsystemjsanatomymd aiocontentexamplessetup aiocontentguidesetupmd aiocontentguidedeploymentmd aiocontentguidereleasesmd aiocontentguideupdatingmd security aiocontentguidesecuritymd aiocontentexamplessecurity aiocontentimagesguidesecurity visual studio private aiocontentguidedocsstyleguidemd aiocontentexamplesdocsstyleguide aiocontentimagesguidedocsstyleguide obsolete aiocontentguidechangelogmd aiocontentimagesguideapplicationundertest aiocontentimagesguidefirstapptests aiocontentimagesguidetestinganangularpipe aiocontentimagesguideunittesting aiocontentimagesguideintro misc review docsbazelmd md files docs see", "num": "21692", "d": "1/2018"}, {"title": "style binding handling css function improperly", "body": "submitting current behavior nothing works expected expected behavior works minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21691", "d": "1/2018"}, {"title": "ng xliff longer produces empty translations causing xliff parser fail", "body": "submitting current behavior result longer produces empty translation tags given direction support per new creates issues development lifecycle internationalized angular applications expected behavior developing internationalized applications common develop single root language complete extract specific words dispatch appropriate language files translator languages translation resulting language files loaded application support additional languages achieved due direction support appears heading throughout core development lifecycle applications utilizing angular framework anticipated generate many cycles root languages xlf file unfortunately stands extracted xlf file valid angular xliff parser although omitting tag valid standard understanding upon load causes fatal error translation indicated missing translations effect impacts things post xliff parsing therefore developer must manually add appropriate tags instance given xliff file corresponding appropriate tag root language file recommendations allow developer pass argument allows developer make informed decision generating resulting empty ensure xliff parser parse xliff file enhance xliff parser require appear required standard minimal reproduction problem instructions setup application internationalization taken example utilizes new speculative polyfill appmodulets import browsermodule angularplatformbrowser import ngmodule translations localeid angularcore import declare const require export function translationsfactory locale string locale locale en default english locale return require ngmodule imports browsermodule declarations appcomponent providers provide localeid usevalue en provide translationsformat usevalue xlf provide missingtranslationstrategy usevalue missingtranslationstrategyignore bootstrap appcomponent export class appmodule generate appropriate xlf file requires using service provided pollyfill template attributes attempt load application navigate specific component utilized angular produce error similar following motivation use case changing behavior ensuring effective straightforward easy use approach lifecycle developing internationalized angular applications environment angularcli angularcompilercli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsschematics typescript webpack browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "21690", "d": "1/2018"}, {"title": "angulario", "body": "hi angulario could anyone please help ca nt reach several hours", "num": "21688", "d": "1/2018"}, {"title": "add link new resource", "body": "russia popularization framework angularru angularmoscow community translate team spends different examples angular russian would great added link community thank", "num": "21686", "d": "1/2018"}, {"title": "amount training materials developed angular", "body": "tutorials around react often send students study technology tutorials angular short video simple things systemjs usage angular webpack angular cli find anywhere video angular ecosystem universal ionic nativescript", "num": "21685", "d": "1/2018"}, {"title": "generate sitemap angulario", "body": "order improve search results provide sitemap file crawlers easier time understanding site easy task different projection data already dgeni generate navigationjson modify dgeni produce sitemap file add metatag indexhtml point new new sitemap file", "num": "21684", "d": "1/2018"}, {"title": "use template function name chrome dev tools anonymous functions", "body": "current behavior generated code contains lots anonymous functions make debugging difficult expected behavior giving functions name based template file name component name would allow us understand exception stack frames flame charts perf debugging significantly easier minimal reproduction problem instructions environment original bug", "num": "21683", "d": "1/2018"}, {"title": "bug reactiveforms gt formarray trackby index gt removeat amp subscriptions", "body": "hi angular think found x bug sure large reactive form formarray trackby index formgroup array subscriptions like ride added subscriptions subscribechanges ride formgroup also delete formgroup using deletes single ride public deleteride ride formgroup number void thisunsubscribechanges ride thismyridesremoveat unsubscribechanges ride formgroup ride datesub unsubscribe ride distancesub unsubscribe ride startcountsub unsubscribe ride endcountsub unsubscribe seems tracking objects goes wrong let delete formgroup index formgroups subscriptions index removed formgroup fire anymore binding still old index allowed put subs formgroup bug tracking refreshing formgroup array", "num": "21682", "d": "1/2018"}, {"title": "add different css files conditionally", "body": "app uses different languages righttoleft two separate css files one ltr rtl conditionally add css file component", "num": "21671", "d": "1/2018"}, {"title": "error redeclare blockscoped variable ngdevmode", "body": "submitting current behavior nodemodules error redeclare blockscoped variable ngdevmode nodemodulesadvviewjscompcorenodemodules error redeclare blockscoped variable ngdevmode declare global const ngdevmode boolean export declare const ngdevmode boolean export expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21670", "d": "1/2018"}, {"title": "fulltemplatetypecheck breaks union type ngif", "body": "submitting current behavior given union type input template throws error problem far understand narrows union type considered valid type anymore used expected behavior throw type error workaround environment", "num": "21668", "d": "1/2018"}, {"title": "edge browser bug nativeelementscrollto method", "body": "submitting current behavior div container scroll method set scroll top edge browser using elementref scrollto work browsers works browsers demo created demo expected behavior needs work like work browsers minimal reproduction problem instructions demo created demo environment windows mac", "num": "21667", "d": "1/2018"}, {"title": "ngfor iterate function called many times", "body": "submitting current behavior example function debugs list called several times theoretically called expected behavior like list work service called instantiate minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21666", "d": "1/2018"}, {"title": "angular starter server rendering mobile app support starter project", "body": "want build angular solution server rendering use codebase create mobile app cordova somewhere starter project achive would possible team create starter spoke lot people big need use case", "num": "21664", "d": "1/2018"}, {"title": "toh tutorial chapter services appmodulets missing final code review", "body": "submitting current behavior final code review excludes file srcappappmodulets expected behavior final code review includes file srcappappmodulets minimal reproduction problem instructions check motivation use case changing behavior documentation quality consistency", "num": "21663", "d": "1/2018"}, {"title": "missing response header values thrown http error", "body": "submitting current behavior catch errors returned http requests contains excludes xpoweredby x prefixed attributes response header unaware headers filtered positive list browser reason restriction expected behavior response header attribute would minimal reproduction problem instructions thisslxhttppost urlspostdepartmentdataurl actionpayload map payload gt type accountactionsdepartmentdatachangeresultname payload catch makeactionerrorobservablecatcher accountactionscustomerprofileerrorname accountundefinederror motivation use case changing behavior middleware serverside able annotate error responses additional information used tracking support issues environment", "num": "21662", "d": "1/2018"}, {"title": "remove experimental flag stable apis", "body": "lot apis stay flagged experimental never check change major release ask component owner remove experimental flag apis around version example almost everything flagged experimental stephenfluin igorminar think task breakdown remove experimental stable source code update api golden files remove stable experimental badges api templates remove experimental api filter", "num": "21661", "d": "1/2018"}, {"title": "pipes using localeid default", "body": "submitting current behavior setting token locale different default value gets changed using pipe like reading new value expected new locale data registered documentation says also token provided documentation says expected behavior pipes use value default locale minimal reproduction problem instructions created minimal stackblitz reproducing issue motivation use case changing behavior pipes use default documentation says environment browser x chrome desktop version tooling issues node version platform macos high sierra", "num": "21660", "d": "1/2018"}, {"title": "error error uncaught promise error find differ supporting object object object type object ngfor supports binding iterables arrays", "body": "new ionicangular happen come across issue tried several solutions stack overflow course cant seem get working moment ngfor response nt work gt help", "num": "21659", "d": "1/2018"}, {"title": "httpmodule error", "body": "hi imported httpmodule appmodulets declared imports still facing provider http karma testing help previously faced provider servicei fixed importing service component class injected provider inside component import browsermodule angularplatformbrowser import ngmodule angularcore import httpmodule angular import loaderscssmodule import appcomponent appcomponent import homecomponent homehomecomponent ngmodule declarations appcomponent homecomponent imports browsermodule httpmodule loaderscssmodule bootstrap homecomponent export class appmodule", "num": "21658", "d": "1/2018"}, {"title": "unittesting date pipe localetimezone independent way", "body": "expressions return different values depending locale testing machine making hermetic tests difficult way set locale timezone tests produce consistent result", "num": "21655", "d": "1/2018"}, {"title": "returns", "body": "problem google search returns link page menu points expected internal issue", "num": "21654", "d": "1/2018"}, {"title": "uncaught typeerror thiszonerun function signalrconnectionrun", "body": "trying set library new app back end running signalr hub everything according documentation setup basic signalr service front end used following install library error see uncaught typeerror thiszonerun function signalrconnectionrun please help", "num": "21653", "d": "1/2018"}, {"title": "ngc transforms nonmodules modules contain global consts", "body": "submitting current behavior file module sometimes turned module contains code expression lowering rewrite expected behavior nonmodules rewritten minimal reproduction problem instructions motivation use case changing behavior violate user intent", "num": "21651", "d": "1/2018"}, {"title": "autocomplete one component", "body": "submitting current behavior need hire panel input expected behavior use one component minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21648", "d": "1/2018"}, {"title": "activatedroute updated navigation url onsameurlnavigation reload", "body": "submitting current behavior activatedroute updated navigating route onsameurlnavigation reload extraoption expected behavior may conscious design decision would expect activatedroute streams publish event navigating url minimal reproduction problem instructions motivation use case changing behavior think done consistency could confusing developers routerevents updates activatedroute streams like activatedrouteurl environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx tooling issues node version platform mac others none", "num": "21647", "d": "1/2018"}, {"title": "github robot rebase pr special label added", "body": "repo collaborator applies label pr action rebase robot rebase pr top head target branch target might differ patch branches force push pr branch leave comment pr pr rebased requested remove pr action rebase label", "num": "21646", "d": "1/2018"}, {"title": "lazy loading working fine inheritance", "body": "submitting current behavior module loaded lazy load whose son also loaded lazy load principalroutests export const principalroutes routes path component layoutcomponent children path debtors loadchildren debtorsdebtorsmoduledebtorsmodule debtorsmodule canactivate authguard accessauthguard debtorsroutests export const debtorsroutes routes path management loadchildren managementmanagementmodule managementmodule canactivate authguard managementroutests export const debtorsroutes routes path client type id component clientcomponent try enter navigator bar redirects first enter enter works fine inherit lazy loading working expected behavior work environment", "num": "21645", "d": "1/2018"}, {"title": "change safe navigation operator preserve undefined", "body": "submitting current behavior using safe navigation operator results lefthand expression however causes issue code trying avoid introduces code otherwise nt use requested behavior lefthand side expression result result result minimal reproduction problem instructions component selector ucmp template n optionalnumber export class undefinedonly input optionalnumber number validate thisoptionalnumber null throw error type violation public interface person name string number number component selector myapp template export class app name string person person viewchild undefinedonly child undefinedonly constructor ngafterviewinit thischildvalidate motivation use case changing behavior allows application avoid using", "num": "21643", "d": "1/2018"}, {"title": "github bot mark prs status", "body": "ocombe work whenever pr merge label applied new sha pushed pr merge label get head sha sha status context pr affects files push status b otherwise push status", "num": "21642", "d": "1/2018"}, {"title": "support observable activatedroutesnapshot", "body": "activatedroute provides observables data params etc provide observable snapshot submitting current behavior way directly subscribe snapshot expected behavior way directly subscribe activated snapshot many components activated route provide observable properties acquiring latest snapshot requires workarounds motivation use case changing behavior common format subscribing snapshot changes involves router activated route would helpful support activated route api environment browser thanks", "num": "21640", "d": "1/2018"}, {"title": "throws compilercli version errror", "body": "submitting x regression behavior used work stopped working new release x bug report current behavior error version angularcompilercli needs greater current version expected behavior able build angular cli webpack minimal reproduction problem instructions update angular libs try build cli ejected webpack build roll back angular build proceeds environment tooling issues node version npm version platform windows professional angular cli version", "num": "21639", "d": "1/2018"}, {"title": "angular official examples work", "body": "trying review angular live examples plunker moment broken long time mind u downloaded official example run local environment angular dynamic component example guess got error error error expressionchangedafterithasbeencheckederror expression changed checked previous value undefined current value bombasto seems like view created parent children dirty checked created change detection hook viewdebugerror expressionchangedafterithasbeencheckederror checkbindingnochanges checknochangesnodeinline checknochangesnode debugchecknochangesnode debugcheckrendernodefn objecteval updaterenderer objectdebugupdaterenderer updaterenderer checknochangesview going issues one fixes live example links one updating code examples latest versions think partial documentation amp examples good idea", "num": "21637", "d": "1/2018"}, {"title": "serviceworker localhost took long respond http error", "body": "submitting minimal reproduction problem instructions edit add routes components created import homecomponent homehomecomponent import aboutcomponent aboutaboutcomponent const routes routes path component homecomponent path component aboutcomponent page working localhost took long respond http error universalssr stops working right away time first refresh stopping server matter route issue hash generated ngswjson regenerate end build process start server loading app route works even though spa friendly nt redirect requests indexhtml service worker kicks initially noticed behavior universal app server side rendering following universalstarter repo spa friendly issue used reproduce wanted keep reproduction process fast possible without introducing server side rendering cli version used initializes app angular also tested skipped mentioning step happens regardless angular version least nt tested older versions environment angular cli node os angular browser tested x chrome desktop version x chrome desktop version canary", "num": "21636", "d": "1/2018"}, {"title": "move triaged issues backlog", "body": "issue meets following criteria move backlog milestone issue assigned milestone issue type bug following additional labels severity frequency issue type feature type labels labels ignored leaving issues current milestone", "num": "21635", "d": "1/2018"}, {"title": "make github bot merge conflict messages friendly", "body": "current suggestion jelbourn small tweaks hey automated message let know pr merge conflicts updating pr resolve conflicts help lot getting merged thanks change original message funny first time contributors contributors prs stuck review queue long time get frustrated pester funny messages funny merge conflicts", "num": "21633", "d": "1/2018"}, {"title": "github bot notify merge conflicts repeatedly", "body": "pending pr pr gets mergeconflict state bot comments pr notify great nt get resolve merge conflict merge conflicts introduced get notifications today creates lot noise desired behavior get one notification merge conflict every time pr previously nonconflicting state recently merged pr caused conflict might need remember current state pr might simpler store state label would also help highlight pr state view", "num": "21632", "d": "1/2018"}, {"title": "build prod throw error startup firefox esr", "body": "submitting current behavior angular work firefox esr version tested app built production mode following commands work app works correctly chrome ie edge recent version firefox expected behavior like angular work app built production minimal reproduction problem instructions create new app build app prod environnement app works easy way reproduce problem open firefox esr app start error console error typeerror undefined lt windowwebpackjsonp app work opening previous version angulario motivation use case changing behavior customers still use older versions firefox context firefox esr environment", "num": "21631", "d": "1/2018"}, {"title": "reflectgetmetadata annotations stopped working", "body": "submitting current behavior expected behavior const annotations reflectgetmetadata annotations appmodule return annotations minimal reproduction problem instructions motivation use case changing behavior environment working fine", "num": "21627", "d": "1/2018"}, {"title": "series indexing issue updating angular", "body": "submitting current behavior following update early december started experiencing series indexing problem root domain pages deindexed subdomains based nt seem effected checked usual suspects robotstxt meta robots relcanonical remove url non redirects etc pretty sure nothing algorithm update penalty technically traffic almost pages rank queries deindexed pages supposed early found rendered pages site look blank pages via fetch render due using old rendering engine fixed december change much asked help webmaster central help forum angular angularjs discussion group none answers got seem applicable earlier week updated seem solve problem either environment platform fast clean rate webpagestest", "num": "21625", "d": "1/2018"}, {"title": "urlmatcher null declared possible returnvalue", "body": "shown documented example possible returnvalue property strictnullchecks enabled tsconfigjson error occurs", "num": "21624", "d": "1/2018"}, {"title": "problem angular email directive", "body": "found problem angular email directive building template driven forms code enter test data follows displays nginvalid class error message email incorrect expected displays nginvalid error message appear expected nginvalid expected", "num": "21622", "d": "1/2018"}, {"title": "angular compiler getoutputname function", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment npm win pro ubuntu work agmcore angularcli unmet peer dependency angularcommon unmet peer dependency angularcompiler angularcompilercli unmet peer dependency angularcore angularforms unmet peer dependency angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade ngbootstrapngbootstrap ngxloadingbar ngxtranslatecore ngxtranslate typesangularuirouter typesgooglemaps typeshammerjs typesjasmine invalid typeslodash typesnode uirouterangularhybrid unmet peer dependency angular angularsvgroundprogressbar animatecss bootstrap classlistjs codelyzer corejs crossenv del eslintconfigangular eslintpluginangular eventstream express expresssslify fontawesome gracefulfs hammerjs jasminecore jasminereporters jasminespecreporter jquery jshint karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter karmajunitreporter karmaphantomjslauncher livereload lodash moment ngclickoutside ngsidebar ngsocketio nguutility ngxdynamictemplate ngxpipes parallelshell phantomjsprebuilt precommit protractor protractorconsoleplugin reflectmetadata rxjs servefavicon tsloader tsnode unmet peer dependency tslint unmet peer dependency typescript webanimationsjs webpack webpackstream zonejs want know bug", "num": "21621", "d": "1/2018"}, {"title": "live example links angulario work", "body": "submitting current behavior click live example link got message internal server error occurred statuscode error internal server error expected behavior see live example minimal reproduction problem instructions example go page click live example link got internal error motivation use case changing behavior learning angular animation want try environment", "num": "21619", "d": "1/2018"}, {"title": "formgroup multiple formgroupdirectives submitted state", "body": "submitting current behavior related angular creates formgroupdirective every time formgroup specified tag level code formgroupdirectives created formgroup userform form submitted first formgroupdirective set submitted expected behavior set formgroupdirectives submitted formgroup subchildnested form groups leave current functionality different formgroups different formgroupdirectivesubmitted tag alternatively add submitted flag formgroup minimal reproduction problem instructions plunker click submit first formgroupdirectivesubmitted set true motivation use case changing behavior know define part form component use scenario using material design created component abstracts material code also included error handling using component instead input tag inside component use div formgroup new formgroupdirective created everytime wrapper component used formgroup formgroup several formgroupdirectives material displaying error want check whether form submitted scenario every control formgroupdirective directive submitted flag set true environment", "num": "21617", "d": "1/2018"}, {"title": "live example angular doc broken", "body": "submitting current behavior expected behavior live example angular doc broken minimal reproduction problem instructions open angular doc example find live example link click broken return motivation use case changing behavior ca nt overview doc intuitively environment", "num": "21616", "d": "1/2018"}, {"title": "icu messages nt work attributes", "body": "submitting current behavior try use icu syntax translated attribute like get error expected behavior either nothing fails everything works b fail gracefully telling supported make note documentation minimal reproduction problem instructions motivation use case changing behavior forced different ways like like consistent way stuff environment", "num": "21615", "d": "1/2018"}, {"title": "whether possible make forms feature updating model expense processing throttle", "body": "like new feature update async model user stopped printing passed second usage html typescript class component public query firstname string processing better performance always detecting thus developers need write time functions throttle", "num": "21612", "d": "1/2018"}, {"title": "setuplocationsync causes duplicate navigation events", "body": "angular router upgrade code provides setuplocationsync method listens angularjsinitiated locationchangestart events calls angular routernavigatebyurl docs method state historypushstate fire onpopstate angular location nt detect workaround attach location change listener without code angular router respond location changes initiated angularjs regardless whether pages associated w angularjs angular content example angularjsbased navigation links would fail trigger routing event two angular pages code works angularjsinitiated location changes currently produces duplicate navigationstart etc events angularinitiated changes angularjs router sees browser location changed triggers location change event turn triggers additional navigationstart event angular appears need way trigger angular navigation location changes originate angularjs issue currently causing duplicate router events angulardriven page transition dualrouter apps performance issue", "num": "21610", "d": "1/2018"}, {"title": "update generated en locale data", "body": "generated code changed change originates mprobst support ts change required code looks equivalent update generation script nt overridden next time data generated edit mprobst confirmed change required generation script needs updated cc ocombe", "num": "21608", "d": "1/2018"}, {"title": "update angular authors style guide recommend sentence caps", "body": "submitting current behavior author style guide recommends title caps expected behavior recommend sentence caps align google dev doc guidelines minimal reproduction problem instructions motivation use case changing behavior align google guidelines environment", "num": "21605", "d": "1/2018"}, {"title": "service worker doc page titles follow google dev doc style guide", "body": "submitting current behavior doc page titles use title caps expected behavior doc page titles use sentence caps per google dev doc style guide minimal reproduction problem instructions motivation use case changing behavior directive early project follow google dev doc guidelines begin aligning angular doc guidelines environment one example page", "num": "21604", "d": "1/2018"}, {"title": "feature request check lazy loadable module loaded explicitly load lazy loadable module", "body": "submitting current behavior check lazy loadable module loaded explicitly load lazy loadable module expected behavior api checking lazy loadable module loaded api explicitly loading lazy loadable module minimal reproduction problem instructions none motivation use case changing behavior developing visual builder use addins activate addin user check respected checkbox thus explicitly loading lazy loadable module already loaded", "num": "21603", "d": "1/2018"}, {"title": "able install angular machine tried different versions", "body": "submitting issue installation angular current behavior installing angular using node command prompt admin mode getting error npm err code eintegrity npm err integrity checksum failed using wanted got bytes expected behavior installation complete minimal reproduction problem instructions attached log file details environment browser chrome tooling issues node version windows", "num": "21600", "d": "1/2018"}, {"title": "docs export statement missing code snippet feature module", "body": "documentation issue request feature module documentation angulario guide export statement missing current behavior rendering feature module component template asks add export customerdashboardcomponent customerdashboardmodule code snippet nt export expected behavior code snippet contain export statement ngmodule imports commonmodule exports customerdashboardcomponent declarations customerdashboardcomponent", "num": "21599", "d": "1/2018"}, {"title": "format pipe currency space", "body": "pipe current print r need include space r would stay correct r somebody help", "num": "21598", "d": "1/2018"}, {"title": "component another directory tree ca nt import nodemodules", "body": "submitting current behavior tsconfig file containing rootdir homeuserworkspacecompanyprojectfrontendsrc baseurl homeuserworkspacecompanyprojectfrontendnodemodules paths projectcommon homeuserworkspacecompanyprojectfrontendsrccorecommonstuff project homeuserworkspacecompanyprojectfrontendsrc validation homeuserworkspacecompanyexternalmodulefrontendapp goal include components homeuserworkspacecompanyexternalmodulefrontendapp build despite fact located completly outside project directory tree build fails error error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function position original ts file resolving symbol ngmodule homeuserworkspacecompanyexternalmodulefrontendappnodemodules angularcorecoredts resolving symbol gnvalidationmodule homeuserworkspacecompanyexternalmodulefrontendappgnvalidationmodulets resolving symbol gnvalidationmodule homeuserworkspacecompanyexternalmodulefrontendappgnvalidationmodulets expected behavior seems imports externalmodule compiler tries lookup angular homeuserworkspacecompanyexternalmodulefrontendappnodemodules instead homeuserworkspacecompanyprojectfrontendnodemodules imports components homeuserworkspacecompanyprojectfrontendsrc affected look correctly dependancies homeuserworkspacecompanyprojectfrontendnodemodules minimal reproduction problem instructions use brand new tsconfig file give alias components src directory third party module import stuff give alias components src directory third party module main directory tree import angularcore third party module motivation use case changing behavior one nodemodules already detected consistent environment", "num": "21596", "d": "1/2018"}, {"title": "angular cli ca nt build production files extra commas", "body": "submitting current behavior nt know files extra commas ca nt build project production remove commas issue disappears environment", "num": "21595", "d": "1/2018"}, {"title": "document", "body": "x documentation issue request document srcappadbannercomponentts template class adbanner hiden adblock use lot time figure problem wish problem happen new angular developer", "num": "21593", "d": "1/2018"}, {"title": "add resource portuguese language", "body": "suggest site angulario recommend angular course speak portuguese online course helder rangel submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21592", "d": "1/2018"}, {"title": "angularlanguageservice problems vscode language service extension", "body": "submitting current behavior version angular says compatible typescript using combination vs code latest insiders version angular language service extension work properly editing html intellisense popups hoverover information expected behavior hovering item html file produce popup showing type variable popup appear typescript install project minimal reproduction problem instructions new project change version typescript packagejson file gt typescript npm install install new version try hover variable html page try get intellisense typing something within motivation use case changing behavior correct functionality editor environment", "num": "21591", "d": "1/2018"}, {"title": "output mapped expression binding upgraded component angularupgrade", "body": "submitting current behavior like create facade directive extends upgradecomponent component written angularjs based see possible use angular directive mapped expression binding angularjs starting angularjs component would like upgrade also directive written angular work facade datepicker content follows directive selector appdatepicker export class datepickerdirective extends upgradecomponent output datechanged new eventemitter constructor elementref elementref injector injector super mydatepicker elementref injector want subscribe output angular template angularjs component hook see specific binding undefined thing also call inside angularjs controller problem exists even nt create instance eventemitter angular console workaround changing expression binding oneway binding angularjs replacing output input works expected behavior based docs possible create dedicated output angular directive expression binding upgraded component minimal reproduction problem instructions create sample component angularjs containing expression binding create facade directive angular create output inside angular app subscribe newly created output see happens making actions motivation use case changing behavior either docs updated something wrong mapping output expression binding environment browser x chrome desktop version x firefox version", "num": "21590", "d": "1/2018"}, {"title": "peruvian currency symbol showing instead currency code shows", "body": "submitting current behavior registering peruvian locale espe getting proper data date numbers currency symbol showing instead currency code present pen expected behavior using peruvian locale currency pipe see peruvian currency symbol minimal reproduction problem instructions see simple implementation currencypipe using pen currency code motivation use case changing behavior seems espe locale loaded properly cldr equivalent currency symbol result run internally returns code rather symbol seems problem fetching currency symbol cldrextract environment", "num": "21588", "d": "1/2018"}, {"title": "conversion json date date", "body": "used get issue date conversion updated angular getting following logical error enter date upto dec following javascript method working well convert one date back ie enter aug shows jul date year later works fine tojavascriptdate value var pattern date var results patternexec value var dt new date parsefloat results return dtgetmonth dtgetdate dtgetfullyear simple return return dt", "num": "21587", "d": "1/2018"}, {"title": "inheritance components makes build error", "body": "parent component like child component extends parent mainmodulets added components build project following command got error fatal error callandretrylast allocation failed javascript heap memory npm err code elifecycle npm err errno npm err projpanel build npm err exit status npm err npm err failed projpanel build script npm err probably problem npm likely additional logging output npm err complete log run found npm err c remove parentcomponent mainmodulets get error determine module class parentcomponent c usersusersourcereposprojwebpanelappmaincomponentsts add parentcomponent ngmodule fix stuff run project command works fine build got errors ran build command aot errors still dont use parentcomponent anywhere childs components extend angular version tooling issues node version platform windows npm version", "num": "21586", "d": "1/2018"}, {"title": "discussion possible public api changes", "body": "possible public api breaking changes discussion rename background previous discussion originally called robwormald suggested renaming match polymer special according spec defining customized builtin elements currently support might support future igorminar said nt called ca nt use kind selector anyway gkalpak said atm mean pretty much thing add support customized builtin elements accurate maybe spec calls igorminar said would work remove method background previous discussion method used upgrade dom element angular custom element afaict initial reasoning able support environments natively support custom elements using polyfills instead would result much better uniform experience could hide public api keep implementation case turns useful support using component angular templates exporting custom element app solution previously agreed lack better alternative prefix selectors custom elements define angular component selector custom element registered selector background previous discussion issue atm angular component registered custom element using inside angular template causes instantiated twice angular compiler browser recognizes custom element calls essentially way tell whether element part angular view therefore treated custom element example want publish angular components custom elements part uses inside template ideal solution currently possible able detect inside least something inside angular view eg angular component template nothing ie instantiate component instance possible workarounds use different selectors eg inside angular templates used custom element option could add new optional property decorator eg would default value property useful intention use component custom element inside angular templates page option could automatically prefix selectors predefined configurable prefix registering custom elements eg would default registered configurable prefix added benefit essentially namespaces components makes easier avoid conflicts different custom element libraries although might moot point since already recommended prefix components custom prefix option annotation would tell compiler element ce way renderer could create element marker would inhibit ce facade anything mhevery said way think renderer put expando dom elements way elements facade wakes check presence expando short circuit expando would cost dom creation think easiest thing different prefixsuffix elements gkalpak said since ce constructor called angular instantiates component could set special property ce constructor angular could check ignore element compatible aot mhevery said nt think something could since would mean angular apps would penalized check regardless using think solution onus check ce suppressed rather angular component think ce needs able detect angular component active become noop sure best way without penalizing everyone one idea change renderer put expand elements dash issue checking dash present monkey patching free especially check element maybe check would done compile time runtime would pass extra info renderer maybe nt change compiler change view engine check per view remove second signature background previous discussion atm supports two signatures second shorthand unless benefit eg easier cli autorewrite jitaot nt see benefit keeping", "num": "21585", "d": "1/2018"}, {"title": "value change observable subscription triggered async pipe", "body": "submitting current behavior change value observable triggered subscribed observable observable b smart component reflect dumb component fed async pipe observable use store save app states see plunkr expected behavior change seen dumb component soon one changes value minimal reproduction problem instructions enter value eg test input field click button publishes value observable value appts one subscribes observable get value body subscribe entered value published another observable name dumb component fed async pipe subscribes observable name test seen dumb component hit button second time see value dumb component also delay new value settimeout get working motivation use case changing behavior environment", "num": "21584", "d": "1/2018"}, {"title": "loading angular modules plugins", "body": "submitting current behavior loading angular modules plugins runtime supported officially workaround achieve using angularcompiler module happy use lowlevel api angular project working angularjs version using oclazyload library load register angular module runtime expected behavior expect dynamic loading registering module plugins angular would really help lot use cases minimal reproduction problem instructions motivation use case changing behavior trying build pluggable editor tool using angular plugins angular modules host environment ie editor app module prior knowledge plugins modules components services going instantiate plugins registered runtime environment", "num": "21583", "d": "1/2018"}, {"title": "confusing di behavior router changedetectorref", "body": "submitting current behavior tried use router changedetectorref together gives error read property router null want router detect active url changedetectorref simple code delete one constractor work expected behavior must work togehter time component minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21582", "d": "1/2018"}, {"title": "pushing formcontrol disabled formarray makes enabled", "body": "submitting current behavior sample code two issues code marks form enabled emits event calling probably form marked enabled call expected behavior form still disabled adding new control also newly added control become disabled added disabled formarray minimal reproduction problem instructions motivation use case changing behavior modifying form controls change disabled state form environment", "num": "21581", "d": "1/2018"}, {"title": "unable keep animation component go component hidden", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior component nested ngif tab menu inside parent html loses animation progress navigation working project parent html several angular components called tab div using ngif animation inside one components animation triggered using start button dynamically adds animation target div navigate component div starting animation component automatically stops animation triggered using start button think angular set remove animation containing html file hidden display expected behavior angular lose animation progress inside component div navigating within parent html running animation background least give option minimal reproduction problem instructions really simple replicate problem create angular project create two components call two component inside main html using angular selectors create buttons main html use ngif directive dynamically show amp hide two components inside one components scss create random animation class added using button ngclass target div animation inside component html animation using button open component using main html page button open previous component animation find animation automatically stopped motivation use case changing behavior trying create media playback progress bar using application several components shown hidden using ngif directive buttons want keep animation running background even navigate components environment angular browser x chrome desktop version xx x chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "21580", "d": "1/2018"}, {"title": "small typo error", "body": "small typo error angular documentation found skipmetadataemit heading", "num": "21579", "d": "1/2018"}, {"title": "misc framework improvements", "body": "things nt fit elsewhere size related bits remove dependency rxjs core package pushed x optimize whitespace templates default x remove dependency webanimations polyfill runtime ivy wip wo nt ready x currency pipe changes arabic dates datepipe displaying correctly pushed later releases x export locale data commonjs instead ergonomics x warn unsupported future version typescript used stretch router scroll position restoration support ready pushed", "num": "21578", "d": "1/2018"}, {"title": "text displaying form fields", "body": "submitting current behavior attached project login page contains text span tag class error uses errormessage field defined logincomponentts assigned value field display comment two input fields ahead suddenly show expected behavior error message field display always minimal reproduction problem instructions attached minimal demo motivation use case changing behavior work right environment ubuntufirefox note deleted nodemodules directories save space logintestzip", "num": "21577", "d": "1/2018"}, {"title": "treeshakable providers", "body": "currently ngmodule imported app directly transitively providers defined packages retained change make unused providers eligible removal framework support x runtime x compiler x update cli schematics x update style guide use new apis packages make providers treeshakable framework x material cdk", "num": "21576", "d": "1/2018"}, {"title": "misleading test description forms validators spec", "body": "line boundary test string nt see believe test shows nt match line boundary missing good test description wrong please correct also add missing test please note original comment", "num": "21575", "d": "1/2018"}, {"title": "elements mvp", "body": "work breakdown x merge angularelements master x refactor angulario embedded components elements x guide doc x examples x cli support angulariolike usecases stretch cli support buybuttonlike usecases", "num": "21573", "d": "1/2018"}, {"title": "rxjs release support", "body": "work breakdown public api cleanup entrypoint cleanup x refactor ben reactivexrxjs reactivexrxjs docs x backwards compatibility solution x forward migration transform x lsc public api typings cleanup x refactor reactivexrxjs x backwards compatibility solution x forward migration transform x lsc needed runtime api changes move observablelift separate function abort controllers required whatwg async iterators implementation improve stack trace size depends public api cleanup x webpack support productivity move rxjs bazel x migrate away x transform x lsc remove local mods x move sync copybara x bring misc issues resolve x creation method missing", "num": "21572", "d": "1/2018"}, {"title": "typescript support", "body": "typescript coming january need get supported within timeframe x ensure compile codebase x make compiler compatible x retain support typescript make upgrade easier", "num": "21571", "d": "1/2018"}, {"title": "angular package format apf", "body": "angular package format needs several changes corrections support webpack sideeffects false optimizations similar rxjs update packagejson spec provide unflattened output watch dev time rebuild latency regressions implement apf across packages framework cdk material tooling support bazel via ngpackage rule cli", "num": "21570", "d": "1/2018"}, {"title": "add approver target info merge scripts", "body": "merge prs already rewrite commit message add info original pr extend add info approved pr pr target", "num": "21568", "d": "1/2018"}, {"title": "fixture hermeticity tests bazel rules", "body": "verify bazel outputs nt vary given inputs", "num": "21567", "d": "1/2018"}, {"title": "githubbot messages truncated", "body": "githubbot messages truncated makes hard know action", "num": "21566", "d": "1/2018"}, {"title": "form documentation state seterrors make status invalid regardless value passed key", "body": "submitting current behavior example abstractcontrol shows passing key issue control status set invalid matter value key even passing empty object see calculatestatus code however example given reasonable infer clear errors really need example show set control value new value const login new formcontrol somelogin loginseterrors notunique true expect loginvalid toequal false expect loginerrors toequal notunique true loginsetvalue someotherlogin expect loginvalid toequal true expected behavior update documentation explicitly say clear errors code useful know integration template testing want set error check template clear error check alerts gone away minimal reproduction problem instructions failing test const login new formcontrol somelogin loginseterrors notunique true expect loginvalid toequal false expect loginerrors toequal notunique true loginseterrors notunique false expect loginvalid toequal true still invalid since check thiserrors return true suggested example const login new formcontrol somelogin loginseterrors notunique true expect loginvalid toequal false expect loginerrors toequal notunique true loginsetvalue someotherlogin loginseterrors null lt add comment expect loginvalid toequal true alternatively though would code change documentation change set invalid least one key object set motivation use case changing behavior integration template testing validate alerterror messages show control invalid choose use function create invalid status want know create valid status either setting valid value passing null function environment", "num": "21564", "d": "1/2018"}, {"title": "remove usage favor", "body": "submitting current behavior currently angular core makes use call load templates htmlcss lazy modules past expected become standard settled upon instead modern tooling beginning deprecate notably webpack detection favor standard unexpected follow suit expected behavior standard used tooling supports code splitting detect minimal reproduction problem instructions systemjs loader found motivation use case changing behavior remain compatible modern tooling environment cc hansl bradlygreen igorminar robwormald", "num": "21560", "d": "1/2018"}, {"title": "mergepr script warnask pr status success", "body": "help caretaker avoid mistakes mergepr script typically merge prs green status github probably allow manual override check", "num": "21559", "d": "1/2018"}, {"title": "npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21558", "d": "1/2018"}, {"title": "define service ngmodule defined", "body": "submitting current behavior appmodulets injectable export class bar constructor ngmodule imports browsermodule formsmodule declarations appcomponent hellocomponent providers bar bootstrap appcomponent appcomponentts component selector myapp templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent name angular constructor bar bar error put service definition source file defined add service token component parameter list following error raised ca nt resolve parameters appcomponent already know workaround create ts file service definition want know bug intended behavior latter case curious usage banned somewhat useful writing quick demo putting everything single ts expected behavior compiles error minimal reproduction problem instructions tested stackblitz motivation use case changing behavior environment", "num": "21556", "d": "1/2018"}, {"title": "get text utf server", "body": "submitting current behavior hi making call server using angular waiting reply text get conversion error tries convert result json expected behavior text rapresentation send server minimal reproduction problem instructions call return url params options responsetype text subscribe data gt let blob new blob data type text plain charset let datetime new date let filename even specifying response type get error read answer kindly ask help environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues others", "num": "21554", "d": "1/2018"}, {"title": "routerlink directive using named outlet leads different urls", "body": "submitting current behavior calling routerlink directive two different locations obtain different url results expected behavior routerlink directive lead one unique url minimal reproduction problem instructions routerlink directive using named outlet sure relevant point demo call made inside main routeroutlet testcomponentts yields following url test dialog edit works fine call made outside main routeroutlet appcomponentts yields following url test dialog edit work gt missing slash test problem might related trailing slash issues issue classified feature request issue closed one final note even sure url working way aroud according angular router docs motivation use case changing behavior consistent behavior using angular router directives one common use case list item displaying main routeroutlet put linkbutton end list calling sort add wizard dialog put linkbutton headertoolbar direct access main action add wizard dialog environment", "num": "21553", "d": "1/2018"}, {"title": "ngmodule metadata found modulename", "body": "submitting current behavior got two modules one main module tries set routing one mature big module first many added application expected behavior main module lazyload entire secondary module problem needless say module works perfectly run standalone minimal reproduction problem instructions got one main module default root component inside src folder created folder modules relocated old module main module looks like import browsermodule angularplatformbrowser import ngmodule angularcore import appcomponent appcomponent import routing routing ngmodule declarations appcomponent imports browsermodule routing providers bootstrap appcomponent export class appmodule routing import looks like following import modulewithproviders angularcore import routes routermodule angularrouter import appcomponent appcomponent const routes routes path redirectto init pathmatch full path init component appcomponent path achievedcombined loadchildren modulesmboplanachievedsrcappappmodule achievedcombinedmodule export const routing modulewithproviders routermoduleforroot routes wonder got also module apparently needed routing file import modulewithproviders angularcore import routes routermodule angularrouter import appcomponent appcomponent const routes routes path component appcomponent export const routing modulewithproviders routermoduleforchild routes ngmodule declarations appcomponent segmentscomponent granularitycomponent chartpickercomponent datepickerwrappercomponent chartwrappercomponent dynamictable tableformat selectedlevelscomponent imports browsermodule angularfontawesomemodule formsmodule ngbmoduleforroot httpmodule mydaterangepickermodule chartmodule routing providers refresherservice datarequester bootstrap appcomponent export class achievedcombinedmodule motivation use case changing behavior developing big application parts first part ready working got make main module order serve add future modules one one environment help regarding really nt know fix weird bug error error ngmodule metadata found achievedcombinedmodule ngmoduleresolverresolve c devprojectsangularfrontendmainmodulenodemodules compilemetadataresolvergetngmodulemetadata c devprojectsangularfrontendmainmodulenodemodules visitlazyroute c devprojectsangularfrontendmainmodulenodemodules visitlazyroute c devprojectsangularfrontendmainmodulenodemodules aotcompilerlistlazyroutes c devprojectsangularfrontendmainmodulenodemodules angularcompilerprogramlistlazyroutes c devprojectsangularfrontendmainmodulenodemodules c devprojectsangularfrontendmainmodulenodemodules angularcompilerplugingetlazyroutesfromngtools c devprojectsangularfrontendmainmodulenodemodules promiseresolvethenthen c devprojectsangularfrontendmainmodulenodemodules processtickcallback webpack failed compile", "num": "21552", "d": "1/2018"}, {"title": "infinite twoway binding loop changing input value quickly", "body": "submitting current behavior experiencing strange behavior simple input component provides twoway binding value enter characters fast binding results infinity loop setting previous current values since using devextreme components first suspected devextreme responsible behavior issue fully reproducable using plain html input element twoway angular binding please look sample need hit keys keyboard binding infinitely update reference devextreme ticket minimal reproduction problem instructions environment browser x chrome desktop version tooling issues node version platform windows", "num": "21551", "d": "1/2018"}, {"title": "nested ngcontent selector nt get content", "body": "submitting current behavior two components ts component selector myinner template export class innercomponent component selector myouter template export class outercomponent outer component used content content nt project ie write results following dom modify output correct dom however lose fact want elements nt work projecting multiple elements different expected behavior result correct dom without workaround minimal reproduction problem instructions motivation use case changing behavior building library complex input components eg input masks want consumer library provide actual element control placeholder tabindex aria attributes right run date input library uses input mask internally html placeholder use workaround run component needs multiple content projections environment", "num": "21550", "d": "1/2018"}, {"title": "see component tags around component templates", "body": "hi see component tags around component templates result sidebar dropdown work cause problem angular cli node os angular animations common compiler compilercli core forms platformbrowser platformbrowserdynamic platformserver router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "21549", "d": "1/2018"}, {"title": "uncaught error", "body": "keyupcomponentts import component oninit angularcore component selector appkeyup templateurl keyupcomponenthtml styleurls keyupcomponentcss export class keyupcomponent implements oninit values constructor ngoninit onkey value string thisvalues value update value string value component selector template export class keyupcomponentcomponent value update value string thisvalue value keyupcomponenthtml keyup works enter key keyupenter values blur uncaught error assign reference variable asttoirvisitorvisitpropertywrite propertywritevisit asttoirvisitorvisit eval arraymap asttoirvisitorvisitall asttoirvisitorvisitchain chainvisit convertactionbinding eval one help solve went wrong", "num": "21548", "d": "1/2018"}, {"title": "hostbinded getter triggered", "body": "submitting current behavior working spoiler component one would expand collapse show hidden content need calculate height change due various reasons text wrap extra line component size changed image lazy loaded somehow css animation makes available space smaller etc basically need component resize event put iframe inside turn fires resize event getter calculate height use hostbinding set height component also onpush change detection strategy reason trigger change detection hostbinding style update however use getter variable template see change please take look demo click showhide show spoiler content see height calculated correctly content visible exact height value shown page try making demo part stackblitz smaller get text wrap lines see correct height calculated page hostbinding style updated expected behavior hostbinding updated like value page minimal reproduction problem instructions small demo made reproduce issue also linked motivation use case changing behavior clearly issue value actually updated change detection triggered hostbinding link update styles environment browser nt seem browser dependant", "num": "21547", "d": "1/2018"}, {"title": "animations done callback called even component destroyed", "body": "submitting current behavior done callback called component destroyed case callback updates value shared service used new component callback called old component destroyed new component rendered shared data updated thrown expected behavior viewref component destroyed call animation callback minimal reproduction problem instructions app fully reproduces behavior motivation use case changing behavior environment", "num": "21546", "d": "1/2018"}, {"title": "routernavigate doesnt call ngoninit component", "body": "current behavior calling routernavigate url address bar changes view loaded expected behavior new page open minimal reproduction problem instructions motivation use case changing behavior environment windows", "num": "21545", "d": "1/2018"}, {"title": "order css changed depending navigation order", "body": "submitting current behavior start application dashboard displays correct start application another url navigate dashboard elements correctly rendered inspect css dashboard cases see css rules different order explains first case elements rendered differently included two screenshots css inspector showing first rendered first later second example rendered causing top bottom margin expected behavior whatever route start css given component consistently rendered order minimal reproduction problem instructions currently unable build repo current application complex build simple repo motivation use case changing behavior environment angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema schematicsangular schematicsschematics typescript webpack browser browsers tested probably behaviour x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version xx edge version xx", "num": "21544", "d": "1/2018"}, {"title": "changedetection cycles kicked input updateon blur set", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior docs state angular forms adds updateon blur submit run validation value updates instead every input event whe using updateon blur example validator executed blur great still got full changedection cycle input event really unecessary example formcomponent trap ngdocheck appcomponentts see changedetection cycle every input made ngdocheck void consolelog input twice ie exmaple thomas becomes thomasaa inthe input gt see refresh cycles note dom refreshes traced using following method onrefreshcounter onrefreshcounter consolelog blur see validators executing myrequired valueerror thomasaa null lt lt lt lt lt lt lt lt custom validator log compute errors gt lt lt lt errorcomponent updating valuechanges changedetection cycles kicked input updateon blur set expected behavior one changedetecting cycle started blur event", "num": "21543", "d": "1/2018"}, {"title": "better viewchild support multiple instances child component", "body": "submitting current behavior parent component hosts multiple instances child component type unnecessarily difficult obtain reference specific instance way aware viewchildren traverse list expected behavior viewchild support directly addressing component identifier eg view template reference minimal reproduction problem instructions motivation use case changing behavior", "num": "21542", "d": "1/2018"}, {"title": "ngfor support multiple nested levels", "body": "please help us process github issues faster providing following information issues missing important information may closed without investigation submitting current behavior problems whit nested nffor mi problem third nested cycle ngfor work assists first cycle elements fourth cycle work associates value first level cycles different try several things trackbyfn others expected behavior depth level ngfor limit e worked angular js e problem motivation use case changing behavior environment angular cli node os angular common compiler core forms platformbrowser platformbrowserdynamic platformserver router angularanimations angularcdk angularcli angularcompilercli angularlanguageservice angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema schematicsangular schematicsschematics typescript webpack", "num": "21541", "d": "1/2018"}, {"title": "angular datepipe returning wrong time", "body": "submitting current behavior datepipe service see whic return wrong time based unix epoch input logs shows pm expected behavior would expect time returned minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21539", "d": "1/2018"}, {"title": "documentation interface routerresolve explain observable handled", "body": "submitting motivation use case changing behavior believe documentation explain various types return values handled router main concern obvious observable handled router provide first value observable last contrast router handles promise simpler understand resolver returns router sets value routedata directly resolver returns promise router waits promise resolve sets value routedata guess lot angular apps fetch backend data use would benefit using router route data resolvers imo docs good discussion topic happy submit pr docs changes would need guidance get wording correct router stuff rxjs stuff instance routedata observable correct way express router sets value routedata router pushes routedata correct term resolve observable mean get last value observable guiderouter docs milestone route guards guard might return boolean answer synchronously many cases guard ca nt produce answer synchronously guard could ask user question save changes server fetch fresh data asynchronous operations accordingly routing guard return observable promise router wait observable resolve true false", "num": "21537", "d": "1/2018"}, {"title": "disabled form controls included value form group", "body": "submitting current behavior creating form group using form builder one disable certain controls passing state problem mixed disabled enabled controls disabled ones nt show form group value controls disabled form value controls values expected behavior form group value property contain values form controls minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21536", "d": "1/2018"}, {"title": "error illegal state could load summary directive \u0275bf nodemodules angularformsformsdts", "body": "submitting current behavior run ng build prod get error titled expected behavior desired behaviour produce dist folder build files environment", "num": "21535", "d": "1/2018"}, {"title": "route resolve errors uncaught promise", "body": "submitting current behavior router resolve fails angular throws uncaught promise error ca nt find way know route resolve error errorhandler seems possible listening router events expected behavior route resolve specific error motivation use case changing behavior would nice able catch route resolve errors errorhandler thanks", "num": "21534", "d": "1/2018"}, {"title": "angular angular universal state transfer http interceptor localstorage", "body": "problem server side refresh page way retrieve jwt token server local storage localstorage exists browser also log save token transfer state page refreshed state variable disappear normal behavior solution issue interceptor import injectable injector inject platformid angularcore import httpevent httpinterceptor httphandler httprequest angularcommon import observable rxjsrx import rxjsaddobservablethrow import rxjsaddoperatorcatch import makestatekey transferstate angularplatformbrowser import isplatformserver isplatformbrowser angularcommon const authstate makestatekey authstate injectable export class myhttpinterceptor implements httpinterceptor private isserver boolean part headers fromserver replaced correct token local storage", "num": "21533", "d": "1/2018"}, {"title": "compiler fulltemplatetypecheck rise meaningful errors invalid hostlistener", "body": "submitting current behavior compiling code included repro results expected behavior meaningful error message eg hostlistener handler spinnerbuttondirectiveonmousedown one argument type x minimal reproduction problem instructions amountcomponentdesktophtml motivation use case changing behavior current message helpful environment", "num": "21532", "d": "1/2018"}, {"title": "", "body": "submitting read guide ngmodule angulario spotted many mistakes problems implies cli generates module imports formsmodule httpmodule nt true implies cli generates module imports formsmodule httpmodule nt true suggests using deprecated httpmodule talk server instead using httpclientmodule section left menu named types ngmodules whereas page titled types feature modules lists feature modules prerequisite although section feature modules comes page left menu hierarchy tells angular httpmodule good example service module although httpmodule deprecated still uses deprecated httpmodule imports formsmodule httpmodule approutingmodule although nt bring anything useful understanding entry components says see html appcomponent first export customerdashboardcomponent customerdashboardmodule customerdashboardmodulets beneath declarations array add exports array containing customerdashboardmodule following example nt export says creates service called userservice returns message telling need provide cli nt return message anymore says update appmodulets importing import statements top file adding providers array following example nt import service nt provider says example route associated module route activated injector created module child current injector navigate away route injector destroyed means services declared route module lifetime equal route route module types ngmodule page describes routed feature module routing module nt tell route module concrete example showing limit scope service route would nice explanation section although one discussing limit scope provider says also must imported individual route components really correct components nt import routermodule feature modules containing components ones must also import routermodule says routermodule forroot route component would instantiate new router instance unclear guide shows limit scope service component adding provider component metadata case thus unclear route component would router instance says whereas route components import routermodule include router components nt import modules modules import modules default route redirects nt make much sense indentation imports example messy missing space sharedservices contains", "num": "21531", "d": "1/2018"}, {"title": "using queryselector angular", "body": "submitting issue set property color undefined current behavior var pswdstrength angularelement documentqueryselector pswdstrengthmessage working stylecolor property though var pswdstrength documentgetelementbyid pswdstrengthmessage worked environment code var passwordstrength utilitiescheck password var pswdstrength angularelement documentqueryselector pswdstrengthmessage var pswdstrength documentgetelementbyid pswdstrengthmessage consolelog passwordstrength pswdstrengthinnerhtml passwordstrength pswdstrengthstylecolor passwordstrength", "num": "21530", "d": "1/2018"}, {"title": "ca nt get value materialize select using ngmodel", "body": "hi trying get value selected option materialize select element trying display console change event working html claims user id select optionscategory categorization select optionsregion region search reset srchformvalue json ts thissearchcrit new searchcriteria settimeout gt select materialselect thissearchcrit new searchcriteria onnamekeyup event thisclaimuser eventtargetvalue consolelog thisclaimuser sendsearchdata form thisinitializematselect consolelog formvalue consolelog thissearchcrit ngoninit thisgetuserdata thissearchcrit new searchcriteria thisinitializematselect initializematselect settimeout gt select materialselect hitting head almost two days please anyone give solution", "num": "21529", "d": "1/2018"}, {"title": "dyanmically added controles array appear propagate changes", "body": "submitting current behavior dynamically added control form array appear capture changes unless non dynamically added control edited expected behavior newly dynamically added controls register changes values correctly populate form array controls minimal reproduction problem instructions see stackoverflow post examples code example code github motivation use case changing behavior building dynamic data table allows user inputs environment issue reported stackoverflow", "num": "21528", "d": "1/2018"}, {"title": "ng build prod angular bootstrap got ipause function", "body": "know whether belongs either angular bootstrap folks submitting current behavior ng build prod built success got following error msg open deployed source server uncaught typeerror ipause function htmldivelement functioneach vfniniteach vfninitejqueryinterface carousel htmldivelement functioneach vfniniteach dispatch mhandle bootstrap carousel work try click next slide got fallowing uncaught error method named next htmldivelement functioneach vfniniteach vfninitejqueryinterface carousel htmlanchorelementedataapiclickhandler htmldocumentdispatch htmldocumentmhandle einvoketask nruntask tinvoketask invoke b ng serve error msg open c replace angularclijson ng build prod everything works fine expected behavior get error msg minimal reproduction problem instructions intend create plunker much time give access private repository need environment browser chrome official version bits tooling issues node version npm version platform windows pro latest others ide intellij idea ultimate", "num": "21527", "d": "1/2018"}, {"title": "ca nt resolve parameters", "body": "submitting current behavior ng build prod buildt success got following warning msg warning ca nt resolve parameters customtranslatehttploaderservice c usersrich\u00e1rdideaprojectsthegiantstepsappsrcappservicescustomtranslate object object object object become error angular b ng serve warning msg expected behavior get warning msg minimal reproduction problem instructions intend create plunker much time give access private repository need environment browser suppose depend browser latest chrome tooling issues node version npm version platform windows pro latest others ide intellij idea ultimate appservicescustomtranslate import injectable angularcore import httpclient httpheaders angularcommon import translateloader ngxtranslatecore injectable export class customtranslatehttploaderservice implements translateloader constructor private httpclient private prefix string private suffix string json private headers httpheaders public gettranslation lang string thisheaders return headers thisheaders else return appappmodulets export class appmodule export function httploaderfactory httpclient return new customtranslatehttploaderservice json environmentsenvironmentprodts const basehref export const environment production true basehref basehref basehref", "num": "21526", "d": "1/2018"}, {"title": "docs live demos api documentation outdated", "body": "submitting search ide many live demos linking plunker still using alpha version angular displayed angulario see removed replaced favor guides use", "num": "21525", "d": "1/2018"}, {"title": "doc ngforof live demo outdated", "body": "submitting regression behavior used work stopped working new release bug report feature request x documentation issue request support request gt please submit support request instead see current behavior live demo directive documentation outdated expected behavior example showcase current syntax directive using latest angular version minimal reproduction problem instructions check live demo", "num": "21524", "d": "1/2018"}, {"title": "unable aot compile loading component typescript dynamic import expressions", "body": "submitting current behavior aot compiler appears ignore lazy routes imported using dynamic import expressions expected behavior aot could compile local imported sources minimal reproduction problem instructions motivation use case changing behavior would like able use aot w lazy loading w latest typescript features reference using fusebox bundler webpack environment angular version", "num": "21522", "d": "1/2018"}, {"title": "fulltemplatetypecheck strange issue safe navigation operator", "body": "submitting current behavior srcappcomponenthtml object possibly undefined export interface itest test index string export interface iparam testtest itest class appcomponent test iparam testvalue testvalue generate error expected behavior errors minimal reproduction problem instructions npm amp amp npm run build environment angular version tooling issues node version", "num": "21521", "d": "1/2018"}, {"title": "layout official site broken", "body": "vertical scroll shadows hidden full height side menu hidden", "num": "21520", "d": "1/2018"}, {"title": "compiler angular emit factories external libraries", "body": "submitting current behavior factories generated external modules expected behavior factories generated per minimal reproduction problem instructions npm amp amp npm run build see preseng ngfactoryjs files generatednodemodulesngclisubmoduleissue remove generated directory update newer version angular repeat files missing metadatajson amp may dts environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version", "num": "21519", "d": "1/2018"}, {"title": "peerdependencies nt allow angular", "body": "submitting current behavior current allow angular produces warning installing material angular expected behavior allow current patch minor versions angular minimal reproduction problem instructions motivation use case changing behavior nt material releases supposed sync angular ones", "num": "21518", "d": "1/2018"}, {"title": "found contents creating configuring", "body": "submitting current behavior tried tutorial according page build section occured following error build bash npm run build universal angularioexample build universal npm run build clientandserverbundles amp amp npm run webpack server angularioexample build clientandserverbundles ng build prod amp amp ng build prod app outputhashingfalse building modules modules active building modules modules active building modules modules active hash time chunk polyfills kb initial rendered chunk main kb initial rendered chunk styles bytes initial rendered chunk inline kb entry rendered unable find app name index verify configuration npm err code elifecycle npm err errno npm err angularioexample build clientandserverbundles npm err exit status npm err npm err failed angularioexample build clientandserverbundles script npm err probably problem npm likely additional logging output npm err complete log run found npm err npm err code elifecycle npm err errno npm err angularioexample build universal npm err exit status npm err npm err failed angularioexample build universal script npm err probably problem npm likely additional logging output npm err complete log run found npm err tried build serve finished sample code said error bash npm run build ssr angularioexample build ssr userskojiworkuniversal npm run build clientandserverbundles amp amp npm run webpack server angularioexample build clientandserverbundles userskojiworkuniversal ng build prod amp amp ng build prod app outputhashingfalse date hash time chunk polyfills kb initial rendered chunk main kb initial rendered chunk styles bytes initial rendered chunk inline kb entry rendered date hash time chunk stylesbundlecss styles bytes entry rendered chunk mainbundlejs main bytes entry rendered error multi srcmainserverts module found error ca nt resolve userskojiworkuniversalsrcmainserverts userskojiworkuniversalnodemodules angularclimodelswebpackconfigs resolve userskojiworkuniversalsrcmainserverts userskojiworkuniversalnodemodules angularclimodelswebpackconfigs using description file userskojiworkuniversalnodemodules angularclipackagejson relative path modelswebpackconfigs using description file userskojiworkuniversalnodemodules angularclipackagejson relative path modelswebpackconfigs using description file userskojiworkuniversalpackagejson relative path srcmainserverts extension userskojiworkuniversalsrcmainserverts nt exist ts userskojiworkuniversalsrcmainservertsts nt exist js userskojiworkuniversalsrcmainservertsjs nt exist directory userskojiworkuniversalsrcmainserverts nt exist userskojiworkuniversalsrcmainserverts userskojiworkuniversalsrcmainservertsts userskojiworkuniversalsrcmainservertsjs userskojiworkuniversalsrcmainserverts multi srcmainserverts npm err code elifecycle npm err errno npm err angularioexample build clientandserverbundles npm err exit status npm err npm err failed angularioexample build clientandserverbundles script npm err probably problem npm likely additional logging output npm err complete log run found npm err npm err code elifecycle npm err errno npm err angularioexample build ssr npm err exit status npm err npm err failed angularioexample build ssr script npm err probably problem npm likely additional logging output npm err complete log run found npm err assume missing sections creating configuring configuration environment angular version sample code browser reached browsing stage tooling issues node version platform macos", "num": "21516", "d": "1/2018"}, {"title": "selecting headings text via double clicking sometimes select anchor well", "body": "problem copy heading clipboard also copy anchor title text paste heading somewhere get text prefixed link repro navigate doubleclick heading flatmoduleoutfile select copy selection clipboard paste clipboard somewhere else expected pasted text flatmoduleoutfile actual pasted text linkflatmoduleoutfile", "num": "21515", "d": "1/2018"}, {"title": "bug forms value status sync ngmodelchange callback", "body": "submitting current behavior within callback form validity nt reflect control status example value fails validation form control still status expected behavior value fails validation would expect status minimal reproduction problem instructions consider component defined value goes valid invalid logged despite value using async validators one would expect logged previous status logged instead see test case motivation use case changing behavior would like filter invalid values callback aside easier angularjs one could set environment", "num": "21513", "d": "1/2018"}, {"title": "angular bot many merge conflict comments", "body": "looks like bot adding multiple merge conflict comment pr even pr updated since last comment supposed see issue example", "num": "21512", "d": "1/2018"}, {"title": "feat allow use host equivalent viewencapsulationnone", "body": "submitting current behavior understand shadowpiercing descendant combinator deprecated want rely code frequently however situation like use example styling component component put html inside directive matstepper component regurgitates html renders making technical host html content though conceptually feels like host parent using view encapsulation style html inside without workaround use simply scope component css using component element selector feels brittle nt dry expected behavior open solution improve matters idea would allow use pseudoselector equivalent simply angular automatically replace component element selector compilation alternatively make deprecated motivation use case changing behavior make easier style component descendants using css make code dry environment", "num": "21511", "d": "1/2018"}, {"title": "router option paramsinheritancestrategy merging params child components", "body": "submitting current behavior angular introduces new router option voithos option set always understanding angular merge child component params parent component params appear case child component params expected behavior expect child components parent components params merged whatever params child components minimal reproduction problem instructions enable option create route child component able access child component userlistpagecomponent expected environment", "num": "21510", "d": "1/2018"}, {"title": "docs markforcheck needed component reused", "body": "x documentation issue request current behavior component resued navigation router doesnt mark component markforcheck something like thisactivatedroutedatasubscribe x gt thishandleroute x handleroute data data let response data xyyz thisdata response component rerendered click inside think obvious maybe bug documented documentation somewhere expected behavior behavior happen often follow best practice map data use async pipe call markforcheck pipe however think router call markforcheck components reused navigation especially changed parametr concrete component path editparam component editcomponent becase obvious component state based parameter angular cli node os angular common compiler compilercli core forms http platformbrowser platformbrowserdynamic router tscwrapped angularanimations angularcdk angularcli angularlanguageservice angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsschematics typescript webpack", "num": "21509", "d": "1/2018"}, {"title": "undesirable scroll bar appearing navbar certain menu items expanded", "body": "repro", "num": "21508", "d": "1/2018"}, {"title": "pass custom animations component instance", "body": "submitting current behavior let say following angular component angular docs example shows set inside decorator could useful pass custom array element order make use different animations depending one passed element instance regardless achieve component instance custom service global config script variable object localstorage variable last options seems working way somewhere back component use expected behavior possibility store animations array somewhere app inject call component eg let imagine animations array stored service whatever target component minimal reproduction problem instructions ca nt reproduce properly explained motivation use case changing behavior case npm library using angular animations component users using want disable customize component animations animations environment", "num": "21507", "d": "1/2018"}, {"title": "fulltemplatetypecheck error property", "body": "hello currently actually found following error activating new angular compiler option customer type code currently line snippets thing occurs snippet might problem usage line ngif different snippet occurs differently raises actually ist line using effect worse use function ngif nt found relevant issue maybe dumb found one please close appropriate ask info needed edit think issue union types different snippet works aus angebot lastofferid type ps feature amazing union types would work well stuff probably found least bugs already", "num": "21505", "d": "1/2018"}, {"title": "ngif type narrowing feature work within else template", "body": "relative submitting current behavior compilation option throw error expected behavior error work guard minimal reproduction problem instructions html state newstatename created", "num": "21504", "d": "1/2018"}, {"title": "remove item formarray causes exception submit", "body": "submitting current behavior remove item formarray submit form causes exception removing item use formarray object reproduces angular worked previous release angular expected behavior exception thrown removing item form successfully submitted minimal reproduction problem instructions repro example found steps reproduce select hero press button press press button one time press exception thrown motivation use case changing behavior worked angular new version functionality removing items formarray broken environment", "num": "21501", "d": "1/2018"}, {"title": "angular form validation duplicate trigger function custom validate", "body": "submitting current behavior testing make formvalidation custom found something unreasonable first init component new formgroup pass function name like customvalidator custom validate consolelog test action see new formgroup call three time action like command consolelog consolelog customvalidator control customvalidator formcontrol validator \u0192 asyncvalidator null oncollectionchange \u0192 pristine true touched false customvalidator formcontrol validator \u0192 asyncvalidator null oncollectionchange \u0192 pristine true touched false customvalidator formcontrol validator \u0192 asyncvalidator null oncollectionchange \u0192 pristine true touched false expected behavior call three time lead call api async duplicate request ca nt fix temporary debounce lodash think shound call one time init javascript ngoninit void thisheroform new formgroup name new formcontrol thisheroname validatorsrequired validatorsminlength thiscustomvalidatorbind lt custom validator method call alterego new formcontrol thisheroalterego power new formcontrol thisheropower validatorsrequired customvalidator control formcontrol consolelog customvalidator control link repro file name appreactiveheroformreactivecomponentts open developer tools see call three time actions custom function validate minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21500", "d": "1/2018"}, {"title": "dynamic compilation angular modules run time external umd bundles", "body": "submitting current behavior dynamic compilation angular modules application run time umd bundles bundles possible decorators missing arranged per angular compiler expectations leads errors ngmodule metadata found abcmodule please add pipe directive component annotation expected behavior achieve true pluggable scenarios angular modules dynamically build umd bundles files using jitcompiler run time minimal reproduction problem instructions build angular app generate bundles per angular package format external bundle load bundle another angular container app based user action please note container app running webpack production configuration systemjs loaded top dynamic support usage shown motivation use case changing behavior business scenarios demands dynamic plugins also feasible always upfront composition modules cost deployment efforts need mechanism support decentralized application development environment", "num": "21498", "d": "1/2018"}, {"title": "merge status pending state commit statuses pending", "body": "currently merge status supports success fail status ci tests progress set merge status pending", "num": "21497", "d": "1/2018"}, {"title": "merge status updated flakey ci job restart", "body": "pr almost green except one failing travis job went ahead restarted job went green merge status nt get updated", "num": "21496", "d": "1/2018"}, {"title": "bot improve bot messages", "body": "ref current message failing check required label second line would clearer expanded would suggest", "num": "21495", "d": "1/2018"}, {"title": "datepipe interprets incorrect way safariios", "body": "submitting current behavior pass without timezone specification datepipe interprets local timezone edgeexplorerchrome firefox safari assumes utc problem demonstrator edgeexplorerchrome firefox output correct safariios incorrect expected behavior safariios interpret pm cst timezone minimal reproduction problem instructions environment", "num": "21491", "d": "1/2018"}, {"title": "router nt insert component named routeroutlet route nonempty path", "body": "submitting current behavior router nt insert component named route nonempty expected behavior component loaded named matches current url minimal reproduction problem instructions working demo remove everything path named outlet works fine working demo motivation use case changing behavior possible access passed params component loaded named environment maybe issues related", "num": "21490", "d": "1/2018"}, {"title": "angular typescript strictfunctiontypes yield virtualtimeschedulerdts error class virtualaction incorrectly extends base class asyncaction", "body": "submitting current behavior try compile angular typescript rxjs getting following error expected behavior build command pass minimal reproduction problem instructions create new angular application angularcli add packagejson install packages add tsconfigjson yarn start error motivation use case changing behavior environment", "num": "21486", "d": "1/2018"}, {"title": "bug ca nt bind ngforin error despite importing commonmodule", "body": "submitting current behavior project two simple modules modules exactly names import use element receive compilation error working demonstration bug seen stackblitz simply uncomment html code file notice exact code works experiencing problem local dev environment well stackblitz expected behavior expected compile without error use element minimal reproduction problem instructions working demonstration bug seen stackblitz simply uncomment html code file environment angularcli", "num": "21485", "d": "1/2018"}, {"title": "ngmodelviewtomodelupdate works define form control input", "body": "want change view model data input onblur event directive want define form control input impact model seen ignore function set model string update model number current behavior update model expected behavior updates model minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21483", "d": "1/2018"}, {"title": "webpack compilation issue angular", "body": "hi using dependencies webpack angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularclasshmr along node npm came accross issue compiling webpack warning angularcore critical dependency request dependency expression warning angularcore critical dependency request dependency expression child htmlwebpackplugin indexhtml chunk indexhtml kb entry rendered child extracttextwebpackplugin chunk extracttextwebpackpluginoutputfilename kb entry rendered child extracttextwebpackplugin chunk extracttextwebpackpluginoutputfilename kb entry rendered tried follow couple similar post nothing helpful far please help", "num": "21482", "d": "1/2018"}, {"title": "angular bazel build broken latest rulestypescript", "body": "submitting current behavior bazel build fails using latest rulestypescript build broken following commit compiler error follows alexeagle aware regression expected behavior build works minimal reproduction problem instructions reproduced updating following rulestypescript environment angular version", "num": "21481", "d": "1/2018"}, {"title": "error error uncaught promise firebaseerror codeinvalidargument invalid document reference", "body": "error error error uncaught promise firebaseerror codeinvalidargument invalid document reference document references must even number segments users firebaseerror invalid document reference document references must even number segments users new firestoreerror functiondocumentreferenceforpath firestoredoc angularfirestoredoc new firebase createclass createproviderinstance resolvengmoduledep ngmodulerefget resolvedep new firestoreerror functiondocumentreferenceforpath firestoredoc angularfirestoredoc new firebase createclass createproviderinstance resolvengmoduledep ngmodulerefget resolvedep resolvepromise resolvepromise eval zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue functions firebaseservicets async login let u await thisafauthauthsigninwithpopup new firebaseauthgoogleauthprovider consolelog u return thisgetuserdata uuseremail public updateuser username phone thisuserrefdoc thisgetemail set username username phone phone logincomponentts login logincomponenthtml help", "num": "21480", "d": "1/2018"}, {"title": "please add ngmodule annotation error angular library trying build using aot", "body": "find detailed information", "num": "21478", "d": "1/2018"}, {"title": "document file found guidengmodule", "body": "submitting current behavior sharing modules doucmentation page see js error expected behavior js error minimal reproduction problem instructions visit page environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21473", "d": "1/2018"}, {"title": "ngmodule faq enhancement request", "body": "submitting current behavior ngmodule faq section service provided feature module visible everywhere states design extensibility ngmodule imports primary goal ngmodule system merging ngmodule providers application injector makes easy module library enrich entire application new services adding httpmodule every application component make http requests fails answer question real question control exportability service list module services exported module without giving developers control words designers see services differently declarables regard expected behavior explain rationale behind services exported default declarables must added list aspect clear faq minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21472", "d": "1/2018"}, {"title": "better approach styles ssr angular universal", "body": "submitting current behavior using angular material angular app server side rendering styles angular material added head tag page website example case styles added page around expected behavior would better styles could added external style sheet environment angularcdk angularcli angularflexlayout angularmaterialmomentadapter angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema schematicsangular schematicsschematics typescript webpack browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "21471", "d": "1/2018"}, {"title": "ca nt catch exception activatedroutequeryparams using url causes app crash", "body": "submitting current behavior using activatedroutequeryparams url includes throws exception ca nt catched anywhere causing app crash expected behavior able catch kind error able keep working app minimal reproduction problem instructions go add layout amp new url error found urierror uri malformed decodeuricomponent ye tn parse tn parselinkurl get objecta invoke r objecta invoke motivation use case changing behavior fixing issue adding url crush application environment", "num": "21468", "d": "1/2018"}, {"title": "sent", "body": "submitting current behavior developed angular application perfectly works chrome firefox ie run application ie application loads without problems dashboard page displayed data never loaded server example latest posts displayed dashboard page investigation realised requests never sent server content never filled application working correctly ie requests immediately sent content loaded expected behavior requests sent application starts minimal reproduction problem instructions angular application send automatically request like chrome firefox motivation use case changing behavior environment others angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter ngrxcore ngrxeffects ngrxstore ngrxstoredevtools ngtoolswebpack nguidatetimepicker ngxtranslatecore swimlanengxdatatable angularpipes apphttp class extends http class import observable subject rxjs import http request requestoptionsargs response requestoptions connectionbackend headers angular import rxjsaddoperatorfilter import injectable angularcore injectable export class apphttp extends http class used services perform http calls", "num": "21467", "d": "1/2018"}, {"title": "compilercli emit common", "body": "submitting current behavior compilercli nt emit expected behavior minimal reproduction problem instructions created reproducing repo see motivation use case changing behavior environment", "num": "21466", "d": "1/2018"}, {"title": "angular animation issue experts needed parentchild components", "body": "counting experts spend roughly full day trying get nested parent child component setup working uses ngif showhide child components vain desperately seeking advice note code snippets simplified code would like goal depending wipe left right currently active child slides left right counter direction newly made active child slide following swipe direction challenge telling child comp direction slide crux child animation determined parent henec million dollar questions either tell child hostbinding animation variable valuestate consider time ngif kicks child animates correctly coding attempt setup nested animation declaration parent manages proper parameterized child animations tried various versions none worked really cases ran funny errors cases nothing happened simplified code missing note issues getting ngfor parent child elements animated parent hosted nested using query animation declaration block however looks like different beast tame animations trigger childanim transition void gt toleft style opacity transform animate easein style opacity transform transition void gt toright style opacity transform animate easein style opacity transform transition leave style opacity animate easeout style opacity export class childcomp hostbinding childanim public childanim toleft default lt must overwritten parent component constructor component selector parent template export class parentcomp public animdirection pass child comp constructor swipehandler event left thisanimdirection toleft else thisanimdirection toright thank much", "num": "21464", "d": "1/2018"}, {"title": "provide method multiple copies ngcontent", "body": "submitting current behavior way multiple copies try copy demo work copied bring much trouble want build lib users wrap content everywhere mini reproduction link similar code need move right place copy missed something way hack expected behavior provide methods copy like add method like way implement minimal reproduction problem instructions motivation use case changing behavior building components support fixed columns table like ant design react version copy content left right order fix way copy users code like quick complex environment", "num": "21462", "d": "1/2018"}, {"title": "language service read property length null", "body": "submitting current behavior visual studio code editor occasionally popups output tab following output expected behavior language service error minimal reproduction problem instructions able deterministically reproduce issue seems happen clibased projects point editing moving components amp modules think robwormald seen environment visual studio code", "num": "21459", "d": "1/2018"}, {"title": "expressionchangedafterithasbeenchecked errors print child component updated parent component", "body": "submitting current behavior lets assume foo fooitem components lets assume foo parent fooitem component make design mistake data flowing backwards child updates parent component unit tests run get expressionchangedafterithasbeenchecked error nt say component violated angular data flow principles expected behavior looks like error happen child componentdirective updating parent error easy debug would nice error message included something like fooitem component incorrectly updated baz property foo minimal reproduction problem instructions nt minimal repro far understand test simulating error scenario motivation use case changing behavior change would make angular based web pages easier debug environment", "num": "21458", "d": "1/2018"}, {"title": "routerlink directive respect prevent navigation", "body": "submitting current behavior attempting prevent navigation anchor routerlink calling click event effect expected behavior called click event navigation prevented minimal reproduction problem instructions link repro clicking catalog still navigates catalog view event though tag contains motivation use case changing behavior environment angular version", "num": "21457", "d": "1/2018"}, {"title": "build bazel", "body": "pr introduced paramsinheritancestrategy routerstatets marked tsconfig config set symbol removed published dts type still referenced preactivationts causing compilation error try compile angular dts files reproduce simply try compile anything using problematic dts files eg using angular material angulartsconfigbuild needed bazel", "num": "21456", "d": "1/2018"}, {"title": "resetform issue binding object", "body": "submitting current behavior model object component call resetform thismodel fields clear wo nt take values model example give forms one single values bound input controls name variables match name input controls second form case see clear form works clear form expects flat structure instead object also resetting form ngsubmitted cleared form submitted flag ngform cleared expected behavior expected values model used resetting form minimal reproduction problem instructions motivation use case changing behavior attempting code undo button app environment", "num": "21452", "d": "1/2018"}, {"title": "docs aio ngclass setter misses part signature containing", "body": "submitting current behavior look ngclass setter assumed problem may happen signatures expected behavior look like source code minimal reproduction problem instructions motivation use case changing behavior improve documentation ps feeling dup sure feel free close environment", "num": "21451", "d": "1/2018"}, {"title": "possible select languagelocale runtime affecting pipes codes etc", "body": "submitting current behavior current situation restricted statically building one given target locale instead possible select change locale runtime addons like exist circumvent expected behavior able select locale runtime influence localeid pipes labels etc affected motivation use case changing behavior unusual provide user chosen locale option usually default chosen browser accept language overridable organization ux requirement provide user set languages choose take effect immediately environment browser apply browser platform others", "num": "21447", "d": "1/2018"}, {"title": "run aio tests prod mode catch optimization issues", "body": "current behavior currently run aio tests dev builds app means issue introduced via build optimizations wo nt catch via ci problem could result us shipping broken code prod almost happened expected behavior running least subset tests prod builds", "num": "21446", "d": "1/2018"}, {"title": "unit tests fail based random things order directory content following tests", "body": "submitting current behavior getting extremely weird behavior run unit tests test fails giving following error first thought cyclical dependency somewhere know test passes followed tests test files move tests files one directory another change content test files bare mind test fails one moving editing find video current behavior nt know explain simply minimal reproduction problem instructions run project root watch video understand link project code dowload motivation use case changing behavior feel might bug testing process environment", "num": "21445", "d": "1/2018"}, {"title": "global configuration", "body": "hello want use global setting like assetfoldername apiurl etc", "num": "21444", "d": "1/2018"}, {"title": "ca nt add dependencies injector smart service", "body": "inject services activatedroute route submitting current behavior specify dependencies declaratively appmodulets expected behavior exceptionservice class work display error message minimal reproduction problem instructions motivation use case changing behavior want use parent class smart service prescribe basic services environment", "num": "21443", "d": "1/2018"}, {"title": "httpclient interceptor httperrorresponse object nt contain response backend", "body": "current behavior java backend returns error access response body httpinterceptor backend returns object looks like errors console however httpinterceptor object get nt contain reference response expected behavior httperrorresponse object contain actual response returned request minimal reproduction problem instructions make failing request back end returns body httpinterceptor check contents httperrorresponse interceptor motivation use case changing behavior provide correct error handling environment", "num": "21442", "d": "1/2018"}, {"title": "error uglifyjs", "body": "submitting current behavior nglint run successfully ngbuild prod give error build time amp serve working fine build prod time give error uglifyjs token name undefined else notfound used expected behavior need error unglify nglint successfully run minimal reproduction problem instructions motivation use case changing behavior environment prod aot", "num": "21441", "d": "1/2018"}, {"title": "mocking httpclient work nested service injecting", "body": "submitting current behavior upgrading httpclient http service nested reference httpclient structure looks like injects injects angular using code mock httpclient testenvironment leads typescript describe tokenhandlerservice gt let service tokenhandlerservice expected behavior test run successfully old mocked httpclass minimal reproduction problem instructions see code environment", "num": "21440", "d": "1/2018"}, {"title": "adding second import construction", "body": "submitting current behavior understand must add itapproutingmodule import construction expected behavior appmodulets minimal reproduction problem instructions screen problem motivation use case changing behavior use tutorial angulario describes construction environment", "num": "21439", "d": "1/2018"}, {"title": "improve size tracking workflow coverage", "body": "tracking file sizes quite better idea useful unnecessary productivity hit time make changes propose following x stop enforcing size limits aio integration tests keep tracking size informational purposes actually enforce limit via payloadlimitssh files x include aio js files file size tracking enforce size js files critical path namely currently renamed embeddedmodule chunkjs see x also improve sizeangulario app x rendering lines add much noise x adding branches", "num": "21437", "d": "1/2018"}, {"title": "controlvalueaccessor writevalue call component destoyed", "body": "submitting current behavior hide show inputcontrol times writevalue call times although component destoyed reinit time ngif expected behavior writevalue call current control minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21434", "d": "1/2018"}, {"title": "summaries contain full path names break bazel idempotency requirements", "body": "submitting current behavior files contain full path information change depending worker selected bazel therefore change every time compile performed breaking idempotency expected behavior files contain fully qualified path names minimal reproduction problem instructions expected properties fully qualified received properties fully qualified motivation use case changing behavior incremental build performance using bazel", "num": "21432", "d": "1/2018"}, {"title": "ngfor cover map arrays map", "body": "submitting current behavior array map covered ngfor error find differ supporting object object object type object ngfor supports binding iterables arrays response kind json essentially type map strictly speaking yes array wrapped array sense interate index index etc expected behavior error shown map actually iterable minimal reproduction problem instructions sorry plunker angular general way complicated feedscomponenthtml feedvalues feedetc feedscomponentts import component oninit angularcore component selector icodfeeds templateurl feedscomponenthtml styleurls feedscomponentscss export class feedscomponent implements oninit feeds feed constructor ngoninit thisfeeds values etc values etc motivation use case changing behavior support maps kinds data would support arrays environment", "num": "21429", "d": "1/2018"}, {"title": "ca nt inject httpclient external library jit", "body": "submitting current behavior try use external library get error application external library imports uses service application imports library tries use library service results browser error application run angular appcomponenthostngfactoryjs sm error error staticinjectorerror injectiontoken documenttoken staticinjectorerror injectiontoken documenttoken nullinjectorerror provider injectiontoken documenttoken nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep createclass createproviderinstance angular slightly descriptive still cryptic error error staticinjectorerror appmodule httpxsrftokenextractor injectiontoken documenttoken staticinjectorerror platform core httpxsrftokenextractor injectiontoken documenttoken nullinjectorerror provider injectiontoken documenttoken nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep createclass createproviderinstance compilations app library work aot jit serve app also works fine use httpmodule instead httpclientmodule also works fine issue seems combination jit httpclientmodule httpclientmodulehttpclient jiterrorworks aotworksworks looked generated umd file added logging correctly grabs members eg expected behavior may issue inside httpclientmodule even something wrong would definitely like see understandable error message minimal reproduction problem instructions reproduced blank application blank sample library generated reproduced separate library seeds simplest show apart generating projects changes made application imported injected library imported injected added rollup externals globals github repos clone test library app npm install library app npm run build library npm link dist library npm link library app ng serve app motivation use case changing behavior like create library application handles http calls api wrapper environment", "num": "21426", "d": "1/2018"}, {"title": "problem compile produccion", "body": "submitting current behavior build prod buildoptimizer option generates behavior ng build everything overlapping events working properly console found errors routes define app compile ng build runit ng serve everything works fine really awkward nt problem version material error compiler producing different result production translate different behavior case environment", "num": "21424", "d": "1/2018"}, {"title": "angular ls nt work nodejs", "body": "working angular ls integration webstorm noticed integration nt work nodejs code nodemodules var reflect definemetadata function getownmetadata function typeof global undefined amp amp global reflect reflect source error nodejs throws exception line", "num": "21420", "d": "1/2018"}, {"title": "httpclient security recommandation", "body": "current behavior make possible also recommend typechecking response httpclient precisely httpresponse expected behavior usage lead multiple security issue http response must focus attention user creating function immediately check received data turn defined interface also usage break ide tslint warning unsafe use type motivation use case changing behavior security rules outside data data function define", "num": "21419", "d": "1/2018"}, {"title": "dynamic reactive form checkbox radio file pick formcontrolname", "body": "submitting current behavior following design pattern given via angular dynamic form guide found checkbox radio file work within question component following answer begin work issue seems html elements dynamically build connect via formcontrolname working code expected behavior would expect code like would work file type works others dynamically built minimal reproduction problem instructions plunker template working broken html motivation use case changing behavior documentation regarding limitation guide official document found would expect work like form input methods environment ref", "num": "21418", "d": "1/2018"}, {"title": "proposal better router error handling support errorcomponent", "body": "submitting current behavior router nt offer uniform error handling solution expected behavior consider route resolve guard provides article based id route obviously id invalid resolve guard fail fetch article case handle error one following approaches used always catch errors resolve guard resolve something distinguishable article eg null case error way component route responsible handling errors use global event handler router events navigate user route renders handle different kind errors shows proper message user problem first approach requires components handle error cases breaks dry single responsibility principles problem second approach causes changes location convenient error addressbar ugly suggested solution support addition definition rendered navigation route encounters error navigation error happens router traverse route tree first route way handling error done level quite flexible example consider typical use case route app shell sidenav header main pages routed children app shell route therefore provide app shell route makes error pages like pages rendered inside app shell specific child route provide rendered case error route instead default errorcomponents able inject navigation error via specific injection token provided router module motivation use case changing behavior error handling routes parameters environment angularcdk angularcli angularflexlayout angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "21415", "d": "1/2018"}, {"title": "error navparams ngmodule", "body": "implemented barcode scanner function ionic applicationbut would like implement function individual ui application searching examples could nt find anything tried convert ionic scanning function angulari installed ionic components angular projecti getting following errors someone help right way thank guys buttonscomponentts import viewchild component angularcore import barcodescanner ionicnative import navcontroller ionicangular import platform ionicangular import formscomponent formscomponent component templateurl buttonscomponenthtml export class buttonscomponent viewchild navcontroller nav navcontroller constructor click barcodescannerscan result gt resultcancelled const barcodedata new barcodedata resulttext thisscandetails barcodedata catch err gt alert err scandetails details thisnavpush formscomponent details details export class barcodedata constructor public text string formscomponentts import viewchild component angularcore import barcodedata buttonscomponent import navcontroller navparams ionicangular import platform ionicangular declare var cordova component templateurl formscomponenthtml export class formscomponent viewchild navcontroller nav navcontroller barcodedata barcodedata constructor public navparams navparams public platform platform thisbarcodedata navparamsget details thisplatform platform launch url thisplatformready gt cordovainappbrowseropen barcodedata system locationtrue back thisnavpop", "num": "21413", "d": "1/2018"}, {"title": "serviceworker properly handle storage quota problems", "body": "discussion taken angularangularcli experiencing issue chrome however seems applicable browser one way another run low disk space likely occasions chrome cuts storage quota zero thrown service worker installation issue appeared navigatorstorageestimate would always return object quota usage service worker script size see browser limitation similar errors browsers caught event passed angular service unfortunately nt see way reproduce issue filling main disk", "num": "21412", "d": "1/2018"}, {"title": "formgroup allow add validators without overwriting existing one", "body": "submitting current behavior similar feature request formgroup right possible add new validators formgroup without overwriting existing one leads strange hacks achieve expected behavior would super nice method like addvalidators abstractcontrol formgroup motivation use case changing behavior component gets input formgroup component add validator formgroup however component shared across application used different formgroup instances possible one already validators defined want avoid situation validators overwritten may lead hard find errors environment", "num": "21410", "d": "1/2018"}, {"title": "angular mistake tutorial services", "body": "subscribe section services tutorial mistakenly named submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21409", "d": "1/2018"}, {"title": "mistake tutorial", "body": "hello try learn angular yet try heroes tutorial find little mistake part displaying list angular couldnt find mockhero module fix problem wrote instead fix problem", "num": "21408", "d": "1/2018"}, {"title": "error unexpected value httpclient imported module appmodule please add ngmodule annotation", "body": "submitting current behavior ionic app angular getting issue use httpclient appmodulets file import ngmodule errorhandler angularcore import browsermodule angularplatformbrowser import ionicapp ionicmodule ionicerrorhandler ionicangular import myapp appcomponent import httpclient angularcommon import aboutpage pagesaboutabout import contactpage pagescontactcontact import homepage pageshomehome import tabspage pagestabstabs import ajaxpage pagesajaxajax import statusbar ionicnativestatusbar import splashscreen ionicnativesplashscreen import networkengineprovider providersnetworkenginenetworkengine ngmodule declarations myapp aboutpage contactpage homepage tabspage ajaxpage imports browsermodule ionicmoduleforroot myapp httpclient bootstrap ionicapp entrycomponents myapp aboutpage contactpage homepage tabspage ajaxpage providers statusbar splashscreen provide errorhandler useclass ionicerrorhandler networkengineprovider export class appmodule expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21405", "d": "1/2018"}, {"title": "syntax mistake angulario", "body": "submitting current behavior path mistake link image expected behavior example two component name different tag less collision", "num": "21404", "d": "1/2018"}, {"title": "error typeerror read property partnumber null", "body": "please find code better understanding logbaseservice servicets import injectable angularcore import http response angular import observable rxjsrx import rxjsaddoperatormap import rxjsaddoperatorcatch const baseurl assetsapijson injectable export class logbaseservice import component oninit input angularcore import logbaseservice serviceslogbaseservice component selector apppartdetails templateurl partdetailscomponenthtml styleurls partdetailscomponentcss export class partdetailscomponent implements oninit partinfo null globalinfodata null packageinfodata null supplierinfodata null supplyinfodata null constructor private logbaseservice logbaseservice ngoninit thisgetallproductinfo getallproductinfo thislogbaseservicegetpartsinfoapi subscribe data gt thispartinfo datapartinfo error gt consolelog server error parent html partdetailscomponenthtml part information supplier amp supply information package information child component partinfocomponentts import component oninit input angularcore component selector apppartinfo templateurl partinfocomponenthtml styleurls partinfocomponentcss export class partinfocomponent implements oninit input partinfodata string constructor ngoninit child html template partinfocomponenthtml part number history part name following process delivery point part weight part material date creation change date predecessor part number lots size parts classification select yes dimensions w mm l mm h mm picture part upload part image max upload images image name title action dimensional drawing edit alternatorjpg alternator drawing edit changed update text part log information itemtext updated itemdate save cancel upload part image part title update cancel current behavior parent component partdetailscomponentts calling logbase service api get data json file working fine response data given partinfocomponenthtml expression also working fine expected behavior part code partdetailscomponentts ngoninit thisgetallproductinfo consolelog data getallproductinfo thislogbaseservicegetpartsinfoapi subscribe data gt consolelog data data available error gt consolelog server error part code partdetailscomponentts ngoninit thisgetallproductinfo consolelog thispartinfo data available get data available component getallproductinfo thislogbaseservicegetpartsinfoapi subscribe data gt thispartinfo datapartinfo error gt consolelog server error data binding getting error console shown due unavailability data getallproductinfo function error typeerror read property partnumber null objecteval updaterenderer objectdebugupdaterenderer updaterenderer checkandupdateview callviewaction execcomponentviewsaction checkandupdateview callviewaction execcomponentviewsaction checkandupdateview callviewaction please help get data getallproductinfo function data available component require details please let know help highly appreciated thanks advance", "num": "21402", "d": "1/2018"}, {"title": "processing data model template type checking", "body": "normal situation appcomponentts typescript import component angularcore export interface ctxfield id number value string component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent ctxfields ctxfield selectedctxfield ctxfield constructor thisselectedctxfield id value public ngoninit appcomponenthtml html current selectedctxfield selectedctxfieldjson ctxvalue everything works conceived developer way incomprehensible ticks model easily redefined template typescript help appcomponenthtml html current selectedctxfield selectedctxfieldjson ctxvalue accidentally intentionally point wrong ngvalue model easily change means data used runtime result application unpredictable additional questions compiler ngfor ngif etc need import commonmodule ngmodel etc need import formsmodule forget add errors appear runtime warning building application webpack clues modules plug crawl stackoverflow minimal reproduction problem instructions repo environment angular version", "num": "21400", "d": "1/2018"}, {"title": "compile production problem", "body": "submitting current behavior everything works ok like nt work compile like material select component sidenav components nt close kept open like nothing works nt problem version material release candidate environment", "num": "21398", "d": "1/2018"}, {"title": "fix travis configuration caching nt hide failures", "body": "last week payload size regression cli helloworld nt immediately obvious caching need figure fix setup avoid problems caching line cc igorminar", "num": "21397", "d": "1/2018"}, {"title": "good selection resources angular like vue awesomevue", "body": "already good selection vuejs however would like see community exist official repository official repository would positive aspect", "num": "21393", "d": "1/2018"}, {"title": "add dependencies injector exception smart service", "body": "usual option example want send errors server appcomponentts typescript import component angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app constructor public ngoninit thismyerrorinvoke example private myerrorinvoke jsonparse test appmodulets typescript import browsermodule angularplatformbrowser import ngmodule errorhandler angularcore import httpclientmodule angularcommon import appcomponent appcomponent import dataservice dataservice import exceptionservice exceptionservice ngmodule declarations appcomponent imports browsermodule httpclientmodule providers dataservice provide errorhandler useclass exceptionservice bootstrap appcomponent export class appmodule exceptionservicets typescript import errorhandler injectable angularcore import dataservice dataservice injectable export class exceptionservice implements errorhandler constructor private data dataservice async handleerror error consoleerror error error const result await thisdatasenderror error error consolelog result dataservicets typescript import component injectable angularcore import httpclient angularcommon injectable export class dataservice constructor private httpclient async senderror error return await error topromise return sucess true mock everything works fine smart service reproduce app files smartservicets typescript import injector angularcore import httpclient angularcommon import dataservice dataservice import activatedroute router angularrouter export abstract class baseinjector export abstract class smartservice extends baseinjector protected data dataservice constructor context injector super context thisdata contextget dataservice exceptionservicets typescript import errorhandler injectable injector angularcore import dataservice dataservice import smartservice smartservice injectable export class exceptionservice extends smartservice implements errorhandler constructor context injector super context async handleerror error consoleerror error error const result await thisdatasenderror error error consolelog result appmodulets typescript import browsermodule angularplatformbrowser import ngmodule errorhandler angularcore import httpclientmodule angularcommon import appcomponent appcomponent import dataservice dataservice import exceptionservice exceptionservice import routermodule routes angularrouter ngmodule declarations appcomponent imports browsermodule httpclientmodule routermoduleforroot path component appcomponent providers dataservice provide errorhandler useclass exceptionservice bootstrap appcomponent export class appmodule problem course use router activatedroute work need use base class baseinjector baseinjector includes used services route zonejs etc logging error consolelog instead consoleerror environment angular version", "num": "21392", "d": "1/2018"}, {"title": "lots weird characters nodemodules angularcoresrcapplicationtokensdts", "body": "submitting current behavior nodemodules angularcoresrcapplicationtokensdts gets created lot strange characters top file expected behavior nodemodules angularcoresrcapplicationtokensdts thos characters minimal reproduction problem instructions creating new app ng new try compile reason something wrong nodemodules angularcoresrcapplicationtokensdts created lot apparently random chracters top motivation use case changing behavior environment", "num": "21391", "d": "1/2018"}, {"title": "strictnullchecks errors third party library templates aot compilation", "body": "copied original report repo provided bug report feature request mark versions angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack repro steps create new project add dependency compile strictnullcheckstrue enable strictnullchecks skiplibcheck tsconfig log given failure ng build prod date hash time chunk styles kb initial rendered chunk polyfills bytes initial rendered chunk main bytes initial rendered chunk inline kb entry rendered error error c uinodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined error c uinodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined error c uinodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined error c uinodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined desired functionality build succeed mention details might useful case added ngsnotify tried version lt", "num": "21390", "d": "1/2018"}, {"title": "new project cli work", "body": "submitting current behavior run ng new myproject terminal vs code run ng serve leave message ca nt execute code freed script since known workaround error getting syntax error vendorbundlejs saw somewhere maybe try work site work latest versions chrome firefox edge expected behavior able launch site wout getting script error tour heros app displayed minimal reproduction problem instructions create new project using cli angular open ie browse site motivation use case changing behavior angular sites able run environment", "num": "21389", "d": "1/2018"}, {"title": "bug serviceworker multiple apps serviceworker one domain", "body": "submitting current behavior installation appserviceworker different basehref purges cache storage entries previously installed appserviceworker domain breaks installed app reachable anymore always redirected latest installed app expected behavior installation multiple appsserviceworkers different basehref one domain possible minimal reproduction problem instructions created following repo reproduce issue follow steps readme motivation use case changing behavior deploy multiple angular apps one domain environment version", "num": "21388", "d": "1/2018"}, {"title": "properly translate sometimes", "body": "submitting current behavior translates wordssentences properly translate others know occurs meet rarely bug use different computer os windows test see problem html includes translation expressions exist messagestrxlf file get result top line normal belows incorrect top expression translated properly ones occurs times expected behavior translate properly minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21387", "d": "1/2018"}, {"title": "animations weird initialisation states", "body": "submitting current behavior angular animation system initialize component exemple testbtn way transcluded component exemple testpopup expected behavior transcluded testbtn display one textstate minimal reproduction problem instructions click send button works properly toggle popup see button component possible states visible note ariahidden props properly set bonus spam click text come bottom top expected via environment", "num": "21386", "d": "1/2018"}, {"title": "new angular app work internet explorer", "body": "submitting current behavior new angular app generated using angular cli work ie get following error expected behavior new app work fine ie given documentation minimal reproduction problem instructions create new app using directory run environment", "num": "21385", "d": "1/2018"}, {"title": "attention maybe typo", "body": "attention maybe typo herocomponent true heroescomponent right true one way data binding selectedhero property herocomponent hero property target element maps hero property herodetailcomponent right one way data binding selectedhero property heroescomponent hero property target element maps hero property herodetailcomponent", "num": "21384", "d": "1/2018"}, {"title": "work without specifying operator services", "body": "adequate behavior write code compiler swear inadequate behavior write code compiler swear appcomponentts typescript import component injectable angularcore injectable thats without export class authservice constructor component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app constructor public auth authservice appmodulets typescript import browsermodule angularplatformbrowser import ngmodule angularcore import appcomponent authservice appcomponent ngmodule declarations appcomponent imports browsermodule providers authservice bootstrap appcomponent export class appmodule purely allowed beginning write injectable without operator lead uncertain behavior appcomponentts typescript import component injectable angularcore import httpclient seleniumwebdriver injectable export class authservice constructor private httpclient component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app constructor private auth authservice appmodulets typescript import browsermodule angularplatformbrowser import ngmodule angularcore import httpclientmodule angularcommon import appcomponent authservice appcomponent ngmodule declarations appcomponent imports browsermodule httpclientmodule providers authservice bootstrap appcomponent export class appmodule would expect beginning worst worst thing add immediately missed statement means ng serve work properly environment angular version browser chrome node version windows", "num": "21382", "d": "1/2018"}, {"title": "router segments parsing error", "body": "submitting current behavior set route match following example url key passed without equal sign expected behavior equals sign meaning path apply parsing query string value passed minimal reproduction problem instructions need add test parsing url equal sign trigger issue motivation use case changing behavior putting encoded strings url common case angular support valid urls environment", "num": "21381", "d": "1/2018"}, {"title": "forbiddenname validator templatedriven form live example nt work", "body": "submitting current behavior forbiddenname validator nt work plunkr example tempaltedrive form expected behavior validation error message visible name bob minimal reproduction problem instructions go form validation live exmaple type bob name input templatedriven form environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21380", "d": "1/2018"}, {"title": "setup redirects old angulario links", "body": "google seach console webmaster tools complaining soft errors following urls ordered priority guessing number link instances web setup redirects api docs able find regexp rewrites old url new one", "num": "21377", "d": "1/2018"}, {"title": "load external js script dynamically angular", "body": "building application using angular wherein want external javascript files loaded specific components globally looked around get implemented nt find example way achieve angular documentation want know way load js files components like including css using styleurls inside angular component found one solution stackoverflow tells export js files using scriptstore service inject service required component link want know recommended way way around achieve please let know another recommended way achieve", "num": "21376", "d": "1/2018"}, {"title": "bug aio incorrect resolution naming conflicts", "body": "submitting current behavior occurrence httpeventtyperesponse would resolved response deprecated expected behavior resolved httpeventtyperesponse minimal reproduction problem instructions motivation use case changing behavior less confusing docs environment", "num": "21375", "d": "1/2018"}, {"title": "unmapped properties response type undefined httpclient", "body": "submitting current behavior userresponse class properties request expect userisselected false undefined expected behavior would expected default value false bool type interface minimal reproduction problem instructions isselected property undefined see console output motivation use case changing behavior bound html expects falsetrue value undefined properties environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21369", "d": "1/2018"}, {"title": "titlecase pipe capitalises special characters middle word", "body": "submitting bug report current behavior using pipe html causes special alphabets like characters capitalised eg gives gives expected behavior give give environment", "num": "21368", "d": "1/2018"}, {"title": "httbb k k", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21367", "d": "1/2018"}, {"title": "component component interaction issue", "body": "need interact components use observables subject method service dose nt work read docs everything thing nt work creating ecommerce shopping app want somebody clicks product buy add shopping cart navts code find angular code client folder app structure homets homepage productpagets productpage shows products homepage productts product component show individual product cost specification new product add new product register navts navigation component contains navigation shopping cart webservicets want send data productts navts using webservicets", "num": "21366", "d": "1/2018"}, {"title": "import css affects parent components cause compile time error", "body": "submitting current behavior create parent component one child component add custom styles child component wo nt affect parent component good add import directive stylesheet child component affect parent component import import fontsize expected behavior create parent component one child component add custom styles child component wo nt affect parent component good add import directive stylesheet child component cause compile time error unpredictable behaviour minimal reproduction problem instructions create parent component one child component add custom styles child component wo nt affect parent component good add import directive stylesheet child component affect parent component motivation use case changing behavior separate styles components environment", "num": "21365", "d": "1/2018"}, {"title": "function getlocalecurrencyname nt work locale code example eses", "body": "submitting current behavior consolelog getlocalecurrencyname eses nt work error displayed error error missing locale data locale eses findlocaledata objectgetlocalecurrencyname componentsoncomponentngoninit checkandupdatedirectiveinline checkandupdatenodeinline checkandupdatenode debugcheckandupdatenode debugcheckdirectivesfn objecteval updatedirectives objectdebugupdatedirectives updatedirectives expected behavior name currency eses returned minimal reproduction problem instructions component import import getlocalecurrencyname angularcommon use fuction eses ngoninit section consolelog getlocalecurrencyname eses motivation use case changing behavior testing angular environment", "num": "21363", "d": "1/2018"}, {"title": "pwa display standalone amp fullscreen working add serviceworkermodule", "body": "submitting current behavior add configuration app module enable angularclijson application install device lg chrome property manifestjson set open device application always open browser new tab remove service worker config row app module app manifest open standalone fullscreen mode expected behavior install app application open stadalone fullscreen mode depends set value manifestjson minimal reproduction problem instructions application generated version updated add angularserviceworker generate angular cli serving application use port forwarding chrome manifestjson json shortname findpark name find nearby car parks starturl search themecolor backgroundcolor ffffff display standalone orientation portrait icons src sizes type imagepng src sizes type imagepng src sizes type imagepng src sizes type imagepng src sizes type imagepng ngswconfigjson motivation use case changing behavior nt know nt working application find example similar app clone build work fine display standalone app environment", "num": "21362", "d": "1/2018"}, {"title": "ngc watch incremental runs full build", "body": "submitting current behavior compile project takes seconds tsc typescript however ngc takes seconds watch mode similar seconds versus single file component change way debug problem desired behavior expected behavior durations close environment", "num": "21361", "d": "1/2018"}, {"title": "handle empty slots imports array module metadata", "body": "submitting current behavior imports array empty uninitialized slot compilation fails error message like error error ngmodule metadata found appmodule ngmoduleresolverresolve expected behavior empty slot either ignored like null undefined currently handled specific error message thrown compile time like numbers strings handled minimal reproduction problem instructions create new app ng new myapp edit appmodulets adding couple imports imports array ngmodule metadata add redundant comma two imports see example build app ng build build fails error message mentioned motivation use case changing behavior trailingconsecutive commas easily left behind hasty developers penalized error mentioned blows away minds posted traumatic experience stack overflow answer hope thats enough motivation fix minor environment", "num": "21358", "d": "1/2018"}, {"title": "router navigate working", "body": "submitting current behavior routerlink got error expected behavior minimal reproduction problem instructions motivation use case changing behavior environment error log error error uncaught promise typeerror thissubscribe function typeerror thissubscribe function observabletrysubscribe observablesubscribe new featurescomponent createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorycreate observabletrysubscribe observablesubscribe new featurescomponent createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorycreate resolvepromise resolvepromise eval zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue zonetaskinvoketask invoke invoketask defaulterrorlogger errorhandlerhandleerror next schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectnext eventemitteremit anonymous zonedelegateinvoke zonerun ngzonerunoutsideangular onhandleerror zonedelegatehandleerror zonerunguarded apimicrotaskdraindone drainmicrotaskqueue zonetaskinvoketask invoketask globalzoneawarecallback", "num": "21357", "d": "1/2018"}, {"title": "refresh components iframes", "body": "submitting current behavior currently tweak component code want see changed reload entire page expected behavior would nice able right click component see options would see frame chrome view frame source would become view component source reload frame would become reload component", "num": "21356", "d": "1/2018"}, {"title": "complied strange", "body": "submitting complied strange issue html style style apply failed current behavior failed change child component style expected behavior change child component style minimal reproduction problem instructions motivation use case changing behavior parent component contains child component child component origin style example xx color fff want change style like childcomponent xx color environment browser chrome desktop version tooling issues node version platform", "num": "21355", "d": "1/2018"}, {"title": "ngcomponent dom compiled different form style compiled", "body": "submitting complied strange issue html style style apply failed current behavior failed change child component style expected behavior change child component style minimal reproduction problem instructions motivation use case changing behavior parent component contains child component child component origin style example xx color fff want change style like childcomponent xx color environment browser chrome desktop version tooling issues node version platform", "num": "21354", "d": "1/2018"}, {"title": "skip external libraries", "body": "submitting current behavior problem encountering one external dependencies issues template would cause compilation errors unless turn unable compile library feature request following propose propose new flag similar skips declarations checking libraries flag skip template check libraries something along etc motivation use case changing behavior still use library even though one dependencies template issue environment", "num": "21353", "d": "1/2018"}, {"title": "supporting huge number similar applications supporting software production lines spls", "body": "submitting x feature request current behavior want create one web app using angular everything superb excellent soon start use benefit company software production line spl things get little ugly example angularjs old school web meant referencing javascript files directly html head section lazy loading html fragment roughly equivalent angular component relevant javascript file could reused automated bigger context angularjs truly serving good role bigger picture providing true businessvalue company based three reasons decided move angular fear angularjs deprecated discontinued proactive approach towards technology change simpler component definition concept scope angular js tricky mature market trend recruit new developers local issue course yet applicable however suffered tremendously harness angular power benefits soon start deviating angular opinionated everything literally encounter tons problems examples want create applications per month similar business context deeper concept ioc field configuration preparation creates business value instead developer project controlling configuration preparation tend configure prepare bigger context spl example angularjs would ask developer create simple folder create html js files features application immediately based convention without extra step yet angular soon create new project tens configuration preparation files created packagejson packagelockjson tsconfigjson tslintjson karmaconfjs polyfillts easily deviate files across projects expensive sense spl example need one projectjson file somehow inherited across projects one polyfillts file even repeated across projects developers wo nt see need use filesystem architecture different angular architecture folder naming folder nesting component naming similar things nt want load entire module rather need load component separately navigate another route need load route component fly lazily nt want create module per component load modules lazily nt want use typescript firstcitizen scripting language bloated boilerplate code specially imports top decorators exports end file want write minimal javascript truly related component logic briefly nt want use webpack want load angular one cdn load material another cdn shared components yet another cdn increase speed loading bloated huge big file created via webpack packs together per app expected behavior angular flexible old school web old standards writing web applications introducing new features additions replacements minimal reproduction problem instructions try think creating similar applications using angular lesser budget dollars spent imagine reduce end cost customers productivity means lesser configuration lesser boilerplate code lesser technologies involved using old familiar tools technologies etc motivation use case changing behavior business value one important drives industry angular great comes create one single adhoc application tbh think best scenario yet power ca nt harnessed maybe nt know support frequency production angular version thank much given context clear would glad provide details examples comparisons", "num": "21352", "d": "1/2018"}, {"title": "import css affects parent components", "body": "submitting current behavior create parent component one child component add custom styles child component wo nt affect parent component good add import directive stylesheet child component affect parent component import import fontsize expected behavior create parent component one child component add custom styles child component wo nt affect parent component good add import directive stylesheet child component affect parent component minimal reproduction problem instructions create parent component one child component add custom styles child component wo nt affect parent component good add import directive stylesheet child component affect parent component motivation use case changing behavior separate styles components environment", "num": "21348", "d": "1/2018"}, {"title": "unhelpful error message output initialized", "body": "submitting current behavior incorrectly initalized eg angular throws error text without pointing field object broken makes impossible tell initialization error expected behavior angular point correct outputcomponent combo developers know problem code problem minimal reproduction problem instructions run angular component subscribe another component output motivation use case changing behavior took hour debugging able find problem element causing easy fix error thrown packagescoresrcviewproviderts createdirectiveinstance around line environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform", "num": "21347", "d": "1/2018"}, {"title": "need way get componentref embeddedviewref", "body": "submitting current behavior lets say template defined somewhere want instantiate ngtemplate possible using viewcontainerref get reference foo component instance know sure ngtemplate contain component expected behavior angular provides api achieve motivation use case changing behavior without needed write code break update angular one solution define foo component like workaround present couple places including code base environment browser browsers", "num": "21341", "d": "1/2018"}, {"title": "compilercli metadata json written via tswritefilecallback", "body": "submitting current behavior synthetic index file written via plain expected behavior intended possible write metadata json minimal reproduction problem instructions see motivation use case changing behavior using compiler programmatic node api ts const tscompilerhost tscompilerhost tscompilerhostwritefile customizing tswritefilecallback ngcreatecompilerhost options tsconfigoptions tshost tscompilerhost environment", "num": "21339", "d": "1/2018"}, {"title": "angularcompilercli uses tsickle enforces typescript lt", "body": "submitting current behavior got following message expected behavior everything working fine minimal reproduction problem instructions try install dependencies packages along dev dependencies installs packages fine without latter one refuses run problem motivation use case changing behavior bug fix environment", "num": "21338", "d": "1/2018"}, {"title": "binding ngforof contentchild", "body": "submitting motivation use case changing behavior like ability able bind directive read items loop like api similar bind stream get latest values currently hackily achieve like like propose able something like javascript class foo contentchild ngforof ngfor use case driving card layout user select card example work around would provide component property since already information feels redundant", "num": "21336", "d": "1/2018"}, {"title": "insert detach viewrefs multiple viewcontainerrefs", "body": "submitted bug report feature request link github issue found bug occurs try detach attach items viewcontainers angular bug caused missing reparenting code angular core sure nature problem might inteded also feature request bug current behavior unable detach viewref viewcontainerref attach different viewcontainerref b insert detaching nt trigger change detection viewcontainers using fails update changes properly expected behavior would like able detach viewref attach new viewcontainer without recreating components inside view work without issues minimal reproduction problem instructions manual parent attachment interaction underlying dom api required uncomment code line fix see workaround amp expected behavior provided attachment logic seems missing angular core located motivation use case changing behavior created multi drag amp drop library angular bug prevented using built ngfor due errors printed console fixing would help fellow developers implement drag amp drop without hassle without digging angular core codebase would allow implement drag amp drop nt recreate components item dragged would allow manipulate dom without using nativeelement worrying ngfor trying find changes throwing errors nodes missing dom possible solution implement public api detaching amp attaching views viewcontainers typescript attachview view viewref index number let template thistemplate let parentnodedef templatedef let parent templateparentview typescript viewrefviewparent parent environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx platform mac linux windows posted utopianio rewarding open source contributors", "num": "21332", "d": "1/2018"}, {"title": "animations query nt work using async pipe", "body": "submitting current behavior animation query nt work using async pipe minimal reproduction problem instructions sections demo container trigger items sections stagger animation applied including rows mattable work environment", "num": "21331", "d": "1/2018"}, {"title": "add option render component tag using tests", "body": "submitting current behavior let say component template testing component content added id testing environment however component tag added expected behavior would expect componenttag also added dom way done using component real app either using routing adding directly dom least behavior configurable motivation use case changing behavior rendering component without enclosing tag specified metadata cause problems component uses using makes sense use component tagname css example style component sometimes useful test css properties opacity positioning etc however since tag used tests css applied tested currently workaround add cssclass eg use class css instead component tag name however would like avoid additional code needed make tests work would better render components tests using tag least make behavior optional environment", "num": "21330", "d": "1/2018"}, {"title": "compiler fulltemplatetypecheck emit better errors diagnostics error directives using hostlistener", "body": "submitting current behavior fulltemplatetypecheck enabled directives using hostlistener annotation fail compile properly expected behavior directive properly typecheck minimal reproduction problem instructions ts import elementref directive hostlistener angularcore directive selector imgfadeinfail export class imgfadeindirectivefail constructor private elementref elementref directive selector imgfadeinok export class imgfadeindirectiveworks constructor set using following template running gives following error motivation use case changing behavior like properly typecheck templates environment", "num": "21329", "d": "1/2018"}, {"title": "activatedroutequeryparams throws execption using url", "body": "submitting current behavior using activatedroutequeryparams url includes throws exception ca nt catched anywhere expected behavior able catch kind error minimal reproduction problem instructions go add layout amp new url error found urierror uri malformed decodeuricomponent ye tn parse tn parselinkurl get objecta invoke r objecta invoke motivation use case changing behavior fixing issue developers use url environment", "num": "21328", "d": "1/2018"}, {"title": "failing build angular source windows", "body": "submitting current behavior trying build angular source script fails error message sh buildsh building version gt buildsh build tools gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt tools compiling npm bin tsc p toolstsconfigjson lt buildsh build tools lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt gt buildsh clean dist gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt lt buildsh clean dist lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt gt buildsh copy files gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt gt copying files needed tests copying files needed benchmarks ln failed create symbolic link polymer file directory expected behavior script pass angular successfully build minimal reproduction problem instructions followed steps guide environment tooling issues node version platform windows enterprise", "num": "21327", "d": "1/2018"}, {"title": "projected content checked even component detached", "body": "submitting current behavior created generic table component allows define columns via templates problem changedetection triggered even component detached due content projection see discussion simplified version problem rootcomponent clickhandler rootcomponent uses changedetectionstrategydefault clickable another component renders rows template specified defines render row functioncall used get value render know case function nt make sense illustrates problem component renders row detached changedetection click function invoked row component although detached changedetection code angularcli project code found appcomponenthtml klick getname row appcomponentts component selector approot templateurl appcomponenthtml export class appcomponent rows constructor private changedetectorref changedetectorref private renderer thisrows thiscreaterows getname row string consolelog getname called return rowname onclick consolelog clicked private createrows count number let rows rowscomponenthtml rowscomponentts component selector approws templateurl rowscomponenthtml export class rowscomponent input rows contentchild templateref template templateref constructor private changedetector changedetectorref ngafterviewinit thischangedetectordetach understand changedetection triggered contentprojection expected behavior way prevent check projected views function updates state views hierarchy proposed solution introduce new viewstate extend new methods setsremoves viewstate change function something like way could change ngafterviewinit lifecycle method rowscomponentts solution fix type problems change behaviour applications use method simpler solution might change markparentviewsforcheckprojectedviews without introducing new viewstate solution might create sideeffects existing applications minimal reproduction problem instructions see running example motivation use case changing behavior need tables lot rows gt perform well aware solutions like virtual scrolling introduces issues eg dynamic height tablerows makes nearly impossible calculate correct height entire table environment browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "21324", "d": "1/2018"}, {"title": "activatedroute parent subscription removed component destroy", "body": "submitting current behavior ran issue past dates subscriptions activatedroute params would stack switching subcomponents parent component trials errors found issue caused subscribing parent route parameters thisrouteparamssubscribe subscription correctly deleted component destroyed thisrouteparentparentsubscribe deleted component destruction subscriptions start stacking manually unsubscribing component destroy fixes issue wondering expected behavior working activatedroute", "num": "21323", "d": "1/2018"}, {"title": "issue routes rendering serving dist folder indexhtml", "body": "submitting path redirectto summary pathmatch full path index component summarycomponent path summary component summarycomponent path reports component reportscomponent path configure component configurecomponent current behavior defined route index path index redirectto summary getting redirected summarycomponent route summary serving locally gives error able redirect index summary without issue however create build project try serving build indexhtml inside distribution folder route index shows error response error response error code message file found error code explanation nothing matches given uri could get clue regarding could get clue regarding need integrate module flask back end please anyone please provide input expected behavior render components routes distribution getting served correctly serving project locally developed minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21322", "d": "1/2018"}, {"title": "defined route index path index redirectto summary getting redirected summarycomponent route summary serving locally gives error able redirect index summary without issue however create build project try serving build indexhtml inside distribution folder route index shows error response error response error code message file found error code explanation nothing matches given uri could get clue regarding need integrate module flask backend please provide inputs", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21321", "d": "1/2018"}, {"title": "ca nt ca nt injected", "body": "submitting current behavior angular di factory providers says unlike ca nt inject expected behavior explain ca nt injected motivation use case changing behavior better understand angular", "num": "21319", "d": "1/2018"}, {"title": "several angulario redirects working", "body": "redirect rules setup nt seem effect broken link examples config present branch", "num": "21318", "d": "1/2018"}, {"title": "google bot indexes pages angulario", "body": "pages redirect setup correct page return http signal page nt exist dgeni knows urls generate firebase config us", "num": "21317", "d": "1/2018"}, {"title": "router malfunction", "body": "two problems specifically routers appcomponenthtml like click login button console see user authenticated however nt go dashboard login component contains function handles login user end send user dashboard however click login logs stays nt move routes properly defined logincomponenthtml reacts properly click however nothing happens anything wrong", "num": "21315", "d": "1/2018"}, {"title": "nextangulario indexed google spite robotstxt disallowing", "body": "example query current result note issue discovered part investigation", "num": "21313", "d": "1/2018"}, {"title": "indexed google", "body": "example query likely robotstxt file missing site note issue discovered part investigation", "num": "21312", "d": "1/2018"}, {"title": "travis builds failing add ppa ppa ubuntutoolchainrtest", "body": "example job logs lost rerunning job looks like travisci issue nt cause problem occurs initialization container code runs nt report issues contact travis support", "num": "21311", "d": "1/2018"}, {"title": "could load summary directive ngclass", "body": "submitting current behavior running module used work fine using angular compiler upgraded angular compiler following error file looks like nt know could causing issue file trying compile environment", "num": "21308", "d": "1/2018"}, {"title": "angular ng build prerendered routes like angular universal static serving featurerequest", "body": "submitting feature request possible build angular app several prerendered routes thinking something similar angular universal build process predefined routes static serving current behavior seem available build option least could find expected behavior add routes prerender building angularclijson ng build create prerendered indexhtml files dist folder defined routes example static prerendering angular allow static serving avoiding extra complexity serverside rendering keep advantages universal app serverside rendering improving load time support open graph tags og tags posted question stackoverflow looking build seems possible anyone else thinks useful", "num": "21307", "d": "1/2018"}, {"title": "angulario translation issue dgeni build failed", "body": "submitting current behavior hi angular developer south korea translating angulario project korean issue example architecture page want translate modules section name korean changed korean tried build failed error log \u03bb yarn docs yarn run rimraf srcgenerated docs json dgeni toolstransformsangulariopackage info running processor readfilesprocessor info running processor extractjsdoccommentsprocessor info running processor collectexamples info running processor readtypescriptmodules info export declarations unknown info export declarations unknown info export declarations unknown info export declarations unknown info export declarations unknown info export declarations unknown info export declarations unknown info export declarations unknown info export declarations unknown info running processor linkinheriteddocs warn unresolved typescript symbol subject doc coreeventemitter class file coresrceventemitterts starting line ending line info running processor parsetagsprocessor info running processor extracttagsprocessor info running processor codenameprocessor info running processor createoverviewdump info running processor convertprivateclassestointerfacesprocessor info running processor mergedecoratordocs info running processor extractdecoratedclassesprocessor info running processor markbarredodocsasprivate info running processor addmetadataaliasesprocessor info running processor computeidsprocessor info running processor filtercontaineddocs info running processor filterprivatedocs info running processor simplifymemberanchors info running processor computepathsprocessor info running processor generateapilistdoc info running processor addnotyetdocumentedproperty info running processor matchupdirectivedecorators info running processor processnavigationmap info running processor renderdocsprocessor info running processor unescapecommentsprocessor info running processor inlinetagprocessor info running processor renderexamples info running processor copycontentassetsprocessor info running processor postprocesshtml info running processor computesearchtitleprocessor info running processor generatekeywordsprocessor info running processor checkunbalancedbackticks info running processor fixinternaldocumentlinks info running processor checkanchorlinksprocessor warn dangling links found guideajsquickreferencejson guidearchitecture eb aa eb warn dangling links found guidearchitecturejson guidearchitecture eb aa eb guidearchitecture eb aa eb error error unmatched links object process fulfilled selfpromisedispatchdone promisepromisepromisedispatch runsingle flush combinedtickcallback processtickcallback error error processing docs error unmatched links object process fulfilled selfpromisedispatchdone promisepromisepromisedispatch runsingle flush combinedtickcallback processtickcallback throw e error unmatched links object process fulfilled selfpromisedispatchdone promisepromisepromisedispatch runsingle flush combinedtickcallback processtickcallback error command failed exit code info visit documentation command section name module \ubaa8\ub4c8 korean word converted successfully eb aa eb dgeni build failed errors tested another test code html fragment identifier make code html file click anchor tag works fine invalid code html specs issue simple fragment identifier many case leave texts english solve problem waiting reply good day expected behavior dgeni build success minimal reproduction problem instructions change link section name another language build motivation use case changing behavior environment", "num": "21306", "d": "1/2018"}, {"title": "documentation service worker browsers support", "body": "submitting current behavior originated text partly copied use shows quite poor support feature relatively important browsers survive working safari especially mobile thing would nt like keep unsupported intention would know angular service worker module services events services provide etc behave browser support service workers silently fail events triggered anyhow ngswworkerjs requested something cached indexeddb instead service worker solution looks cool however answer question use know answers questions expected behavior documentation clearly define going service worker supported browser minimal reproduction problem instructions motivation use case changing behavior eg want implement autorefresh new app version deployed gt need answer question whether service worker manifest downloaded browsers updates pushed need implement twice actually pushing direction service worker case pushes away environment", "num": "21304", "d": "1/2018"}, {"title": "iterate object angular ngfor", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21303", "d": "1/2018"}, {"title": "double comma ngmodule declarations", "body": "submitting current behavior double comma introduced ngmodule declarations web browser gives unclear error message error unexpected value undefined declared module appmodule expected behavior consider giving message specific details minimal reproduction problem instructions add comma declaration appmodule without eg homecomponent othercomponent motivation use case changing behavior faster resolving issue errors environment", "num": "21302", "d": "1/2018"}, {"title": "urlmatcher typescript strict mode wrong defined", "body": "submitting current behavior currently defined typescript strict mode must like example show typed expected behavior define minimal reproduction problem instructions environment angular version tooling issues typescript", "num": "21301", "d": "1/2018"}, {"title": "keyupenter firing", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior im using keyupenter event finalize input desktop seems work fine capturing keyup events either get key enter code enter key enter code numpadenter work correctly touch panel onscreen keyboard get key code fire keyupenter expected behavior keyupenter fired keyup key code fired motivation use case changing behavior unlikely behavior onscreen keyborad changed dont want specialcase places accept inputs would nice angular could handle case environment angular version browser x chromium exceed panel", "num": "21300", "d": "1/2018"}, {"title": "http post gt multiple post requests used method", "body": "approach caused data chaos help", "num": "21298", "d": "1/2018"}, {"title": "service worker uncaught typeerror undefined function", "body": "submitting current behavior load old chrome version case happens error expected behavior service worker work chrome version minimal reproduction problem instructions motivation use case changing behavior need use check chrome version prevent bad practice environment", "num": "21292", "d": "1/2018"}, {"title": "aio bug reactive forms plunker crashing looks like tooling problem", "body": "submitting current behavior plunker reactive forms guide crashes chrome immediate problem plunker generator uploads file named expects physically renaming file plunker makes work appears correct relevant fragment suspect something amiss plunker generator good chance related error forthcoming", "num": "21289", "d": "1/2018"}, {"title": "honouring", "body": "submitting current behavior sure design bug missing feature let explain building library turned also looks something like remove properties problem encountering one external dependencies issues template would cause compilation errors unless turn unable compile library expected behavior honoured type checks library performed new flag added like used skip type checking declaration files motivation use case changing behavior think set check code within library external dependencies like unable validate templates library solves issue environment", "num": "21287", "d": "1/2018"}, {"title": "resolver fails silently variable used resolver property", "body": "versions angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcdk angularcli angularflexlayout angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsschematics typescript webpack repro steps use following example app contactsroutingmodulets use following code export enum userlistresolverproperties users users const userlistresolver userlistresolver userlistresolverpropertiesusers userlistresolver export const routes routes path component contactlistcomponent resolve userlistresolver execute command ng server prod open observed behavior contacts shown dev mode works perfectly fine running app production mode ng build aot prod resolver fails silently error thrown request made desired behavior expected resolver work make request prod mode want able use variable propertyname resolver mention details might useful optional tracked error replacing works fine", "num": "21286", "d": "1/2018"}, {"title": "pristinetouched incorrect test specs template driven forms", "body": "submitting current behavior entering values template driven form test spec status form remains touchedfalse pristinetrue expected behavior entering values template driven form test spec status form change touchedtrue pristinefalse minimal reproduction problem instructions motivation use case changing behavior evaluation pristinetouched needed check expected button states test specs environment", "num": "21285", "d": "1/2018"}, {"title": "changes made component navigating away nt rendered using animations", "body": "submitting current behavior changes made component navigating away nt rendered using animations expected behavior changes rendered component gets destroyed minimal reproduction problem instructions notice homecomponent modalvisible property showshides modal set false navigating away however modal remains visible leave animation component motivation use case changing behavior able hide popupmodal navigation environment", "num": "21284", "d": "1/2018"}, {"title": "bug input typerange displayed correctly regardless attributes order", "body": "submitting current behavior input typerange display wrong value step decimal value attribute placed step attribute value step provided variables expected behavior input typerange displayed correctly regardless attributes order minimal reproduction problem instructions see image attachment plunk motivation use case changing behavior environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21283", "d": "1/2018"}, {"title": "date pipe longdate working zh locales", "body": "submitting current behavior date wed jan cst outputs expected behavior output minimal reproduction problem instructions environment", "num": "21282", "d": "1/2018"}, {"title": "unused import created compiling ngc", "body": "submitting current behavior angular compiler stripping unused inputs classes used solely type definitions ts import component input angularcore import formcontrol angularforms component template export class maincomponent input form formcontrol output file generated unused import used types within component using unused import expected behavior import statement dropped minimal reproduction problem instructions motivation use case changing behavior unused import created generate library using create create import whole dependency example transformed like treeshaking bundle size eventually increase lot environment", "num": "21280", "d": "1/2018"}, {"title": "suggest theme angular retailecommerce website", "body": "need develop one retail website functionality catalogproducts grid view filters store geo location google map search storecatalogproduct loginsignup please suggest theme angular functionality listed", "num": "21277", "d": "1/2018"}, {"title": "reference nonexported function error custom decorator", "body": "submitting current behavior typescript interface nameviewmodel name string namelength number component selector apptest templateurl testcomponenthtml styleurls testcomponentcss export class testcomponent input convert convertname name nameviewmodel export function convertname name string const model nameviewmodel name namelength namelength return model aot build error expected behavior nt think function exported angular compiler care angular decorator minimal reproduction problem instructions motivation use case changing behavior nt think function exported angular compiler care angular decorator environment", "num": "21273", "d": "1/2018"}, {"title": "looks like angulario may longer indexing", "body": "submitting current behavior angulario pages included previewed google search index expected behavior angulario pages included previewed google search index minimal reproduction problem instructions visit also noted several sites may something angular side things environment", "num": "21272", "d": "1/2018"}, {"title": "track size cli hello world forms router material", "body": "material", "num": "21271", "d": "1/2018"}, {"title": "track size cli hello world forms router", "body": "combination", "num": "21270", "d": "1/2018"}, {"title": "track size cli hello world router", "body": "currently nt track size app router", "num": "21269", "d": "1/2018"}, {"title": "track size cli hello world forms", "body": "currently nt track size sample app forms", "num": "21268", "d": "1/2018"}, {"title": "transpiling breaks usage reference simple use case", "body": "submitting current behavior production build displays error occur devaot build offending client typescript code results error obviously within instance function resulting code transpiled typescript javascript pretty printed chrome dev tools see closure created invalidates reference resulting error code exists abstract base class isolates complex data models rest app using subclasses implementations use relatively simple helper functions base class interact underlying data model instance updates subscribed though details almost certainly unnecessary instance variable defined changing last three lines client code works around problem transpiling certain nt typescript issue rather angular issue may well tried upgrading typescript ignoring warnings result effect expected behavior simple code like functions fine dev build transpile code functions identically production minimal reproduction problem instructions hopefully code snippets sufficient since sure simulate devprod builds via something like plunkr absolutely necessary could try put together representative scaleddown project try recreate problem though obscure workaround already spent much time waiting production builds narrow error work around environment", "num": "21267", "d": "1/2018"}, {"title": "support pure array methods annotations", "body": "submitting current behavior using pure method array supported expected behavior support methods like consider supporting using lambda qualify macros minimal reproduction problem instructions export const export const import component angularcore import arrays motivation use case changing behavior better support well used javascript features well better fidelity jit applications", "num": "21265", "d": "1/2018"}, {"title": "formgroupdirectivesubmitted propagated inner formgroupdirectives", "body": "submitting expected behavior error shown even one formgroup page current behavior error shown steps reproduce click submit address error message nt important piece use instead causing bug material component depend formgroupdirectivesubmitted property show errors fields submit set formgroupdirective added tag formgroupdirectives usecase motivation changing existing behavior case parts form subcomponents pretty complicated ones use formgroupname result validation errors nt show places started think formgroupdirective host", "num": "21263", "d": "1/2018"}, {"title": "tab switching transition visually distracting", "body": "current behavior switching example tabs aio transitions cause old pane abruptly disappear new content fly causes lot visual noise well sudden resizing relayout page expected behavior subtle transition like cross fade would likely result better user experience minimal reproduction problem instructions go switch panes motivation use case changing behavior better ux", "num": "21262", "d": "1/2018"}, {"title": "build use vs", "body": "submitting current behavior build locally uses different environment using node version package versions uses expected behavior build uses places using version using minimal reproduction problem instructions reliably reproduce motivation use case changing behavior marked document issue unsure decides use version one place another noticed properties could nt find documentation docs thinking nonstandard could find uses may able better debug find different build environment causing specifically uglify correctly figure using version better reproduce issue seeing perhaps open new issue maybe relevant since gone inconsistent builds still issue environment", "num": "21260", "d": "1/2018"}, {"title": "style bundle adding angular cli", "body": "submitting current behavior styles array injecting server side rendering using dotnet rendering engine expected behavior style bundle added output like browser rendering bundle minimal reproduction problem instructions add style styles array ssr enabled motivation use case changing behavior client side rendering ssr identical environment", "num": "21258", "d": "1/2018"}, {"title": "entrycomponents documented", "body": "submitting current behavior documented ngmodules page expected behavior documented motivation use case changing behavior purpose", "num": "21257", "d": "1/2018"}, {"title": "error missing locale data locale de", "body": "submitting x bug report current behavior problem arises using dynamic localechanging pipe using ng build prod browser following error occurs error missing locale data locale de checked already posted question also found answer confusing fact works using ngserve expected behavior pipe changing date according language selected minimal reproduction problem instructions pipe recieving locale translating service html appmodule ts import registerlocaledata angularcommon import localede angularcommonlocalesde registerlocaledata localede providers provide localeid deps translateservice usefactory translateservice gt translateservicecurrentlang environment angularcore angularcli browser browsers tooling issues node version platform windows", "num": "21255", "d": "1/2018"}, {"title": "please make getlocaledateformat available outside angular framework", "body": "submitting current behavior imported commonmodule set locale using angularcli want use locale settings injected angularcommonlocales file call getlocaledateformat localdataapi next error thrown suspect localdataapi private another way use locale settings expected behavior minimal reproduction problem instructions motivation use case changing behavior would like get access date format used set locale want use parse validate entered dates show used format tooltip environment", "num": "21253", "d": "1/2018"}, {"title": "appinitializer rejected promise throws read property ngoriginalerror undefined", "body": "submitting current behavior following provider cause angular throw error typescript const initprovider provide appinitializer usefactory initfactory multi true function initfactory return gt init function init return new promise resolve reject gt reject error occurs nt exist point related expected behavior error occur unsure happen case rejected logging error continue operating seems like good solution minimal reproduction problem instructions open console following error appear unhandled promise rejection read property ngoriginalerror undefined environment", "num": "21252", "d": "1/2018"}, {"title": "import dragula angular jit working", "body": "use dragula angularcli project need import dragula object packagejson added dragula dependency component import dragula follow log object see exists surprisingly compile app aot mode object exists build jit mode nt exist bug missing something", "num": "21251", "d": "1/2018"}, {"title": "two template", "body": "use two template angular project", "num": "21249", "d": "1/2018"}, {"title": "angular send cookie server ignore withcredential", "body": "use withcredentials see cookies sent server send anything server use laravel backend angular frontend also cookie shown chrome developer tools ca nt access using also used cors middleware laravel like namespace apphttpmiddleware use closure class cors handle incoming request param illuminatehttprequest request param closure next return mixed public function handle request closure next response next request response headers set accesscontrolalloworigin response headers set accesscontrolallowmethods get post options put patch delete response headers set accesscontrolallowheaders contenttype accept authorization xrequestwith response headers set accesscontrolexposeheaders contentdisposition xtotalcount xfilename response headers set accesscontrolallowcredentials true request first time server set cookie response show request frontend refreshtoken const headers new headers contenttype applicationjson authorization bearer thisgettoken let options new requestoptions headers headers withcredentials true return refresh jsonstringify options map response gt consolelog response return responsejson tokendata gt localstoragesetitem token tokendataaccesstoken localstoragesetitem expiresin tokendataexpiresin accept applicationjson textplain acceptencoding gzip deflate acceptlanguage enus en fa authorization bearer connection keepalive contenttype applicationxwwwformurlencoded host roxotest origin referer useragent windows nt khtml like gecko", "num": "21248", "d": "1/2018"}, {"title": "currencypipe currency code displayed instead symbol", "body": "submitting current behavior certain currency symbols displayed rather currency code example brazilian real symbol displayed however georgian lari currency code displayed instead apart course currencies issue expected behavior currency symbol displayed minimal reproduction problem instructions environment", "num": "21247", "d": "1/2018"}, {"title": "previoussibling method", "body": "", "num": "21246", "d": "1/2018"}, {"title": "json parse error", "body": "server respond json string value like abc quotes respnsejson get error unexpected token json position responsetext get incorrect string abc without quotes", "num": "21244", "d": "1/2018"}, {"title": "angular \u6559\u7a0b\u83dc\u5355\u4e2dhttp\u4e2d\u6848\u4f8b\u9519\u8bef", "body": "", "num": "21243", "d": "1/2018"}, {"title": "custom template template driven form plunker example work", "body": "submitting current behavior plunker examples work entering bob name field suppose kick custom validation message instead bob less characters message always display expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21242", "d": "1/2018"}, {"title": "update copyright everywhere", "body": "current status copyright google inc rights reserved use source code governed mitstyle license found license file powered google code licensed mitstyle license documentation licensed cc request copyright google inc rights reserved use source code governed mitstyle license found license file powered google code licensed mitstyle license documentation licensed cc", "num": "21241", "d": "1/2018"}, {"title": "ngmodel doesnt work mobile devices", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21240", "d": "1/2018"}, {"title": "using markup translation units causes error unknown placeholder starttagxxx", "body": "submitting current behavior part template html translatable text expected work docs says use interpolations html markup inside translations generate translation file messagexlf run app angularcli getting following error error error unknown placeholder starttagspan error x id starttagspan ctype xspan adding source exact value nt find example using markup translations sure using right way expected behavior markup translatable context work without error according docs minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21239", "d": "1/2018"}, {"title": "angular packages mixed", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior lookgs like changed like rxjs wrong peers wrong expected behavior point version rxjs instead nodemodules see minimal reproduction problem instructions motivation use case changing behavior wrong environment angular version browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx tooling issues node version platform optional referenced", "num": "21238", "d": "1/2018"}, {"title": "", "body": "submitting current behavior using aspnet core angular template deployment get following error message executing command webpack envprod expected behavior successful aot compilation minimal reproduction problem instructions motivation use case changing behavior environment", "num": "21237", "d": "1/2018"}, {"title": "firefox quantum form validation classes update blurchange value input", "body": "submitting current behavior using form validation firefox quantum seems class remain unchanged unfocusblurred form field expected behavior working expected chrome edge classes form change update soon value changed blurred minimal reproduction problem instructions created plunker demo please open firefox quantum version try write anything field notice name valid false even write something field seems classes form validation nt updatechange self motivation use case changing behavior validating form environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox quantum version safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others packagejson dependencies dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs fontawesome rxjs slideout zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode autoprefixer circulardependencyplugin codelyzer copywebpackplugin cssloader cssnano exportsloader fileloader htmlwebpackplugin istanbulinstrumenterloader jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter lessloader postcssloader postcssurl protractor rawloader sassloader sourcemaploader styleloader stylusloader tailwindcss tsnode tslint typescript uglifyjswebpackplugin urlloader webpack webpackdevserver", "num": "21236", "d": "1/2018"}, {"body": "url present every event filter", "d": "1/2018"}, {"body": "right routerevent event url see mean", "d": "1/2018"}, {"body": "hi rgtgt approutingmodule imported last order matter", "d": "1/2018"}, {"body": "yerkon importing approutingmodule last makes feature routing takes precedence importing approutingmodule last navigating directly redirects toward undesirable list route issue remains", "d": "1/2018"}, {"body": "eagerly loaded routedfeature module adds routes root application think bug correct behavior two routes imports root module", "d": "1/2018"}, {"body": "get happening although refer module types guide eagerly loaded routed feature modules mentionned eager loaded routed feature module must imported another module compiler learns components bug think part documentation bit blur misleading", "d": "1/2018"}, {"body": "eager loaded routed feature module must imported another module compiler learns components imported componentpipesdirective found error thow lazyloaded", "d": "1/2018"}, {"body": "totally right get part thing bothers transforming lazy loaded routed feature eagerly loaded one importing another module like doc says like sample application trivial cause undesired effects import module routes root app context difficult detect agree fact may bug documentation maybe caution specifics eagerly loaded routed feature module imo", "d": "1/2018"}, {"body": "think modification breaks default behaviour", "d": "1/2018"}, {"body": "think misunderstanding ngclass works explanation quite old though basically saying want class added false case always false therefore always see example simply pass toggling variable large property thing show property", "d": "1/2018"}, {"body": "could valid bug simpler repro", "d": "1/2018"}, {"body": "see", "d": "1/2018"}, {"body": "thanks pkozlowskiopensource first last face problem look like bug browser console show descriptive error maybe obvious", "d": "1/2018"}, {"body": "first last face problem look like bug browser console show descriptive error maybe obvious totally look one see handle case correctly add error message", "d": "1/2018"}, {"body": "take care specific case", "d": "1/2018"}, {"body": "trotyl check page hangs iframe loads check hanging firefox", "d": "1/2018"}, {"body": "responsible providing minimal reproduction bug report rather asking debug app", "d": "1/2018"}, {"body": "trotyl updated bug report please check whether issue valid", "d": "1/2018"}, {"body": "bhawinbigstep create minimal repro either plunker stackblitz github repo newly created angular cli would fine idea environment looks like project description helpful anyone trying help", "d": "1/2018"}, {"body": "hi trotyl added problem reproduction steps well please see", "d": "1/2018"}, {"body": "obviously minimal repro entire project", "d": "1/2018"}, {"body": "hi trotyl created stackblitz issue try scroll editor app loading see scroll working seconds view renders try reloading page blockage happens everytime first time", "d": "1/2018"}, {"body": "online demo compile typescript code angular templates fly production performance test real application aot compilation used production mode turn information found thought going report mysterious network request", "d": "1/2018"}, {"body": "compile aot default still getting blockage server trotyl tell reasons please path research get rectifed", "d": "1/2018"}, {"body": "sure angular app", "d": "1/2018"}, {"body": "blue chat app right corner angular app loading via iframe trotyl see login one test accounts scroll little bit see link login test user", "d": "1/2018"}, {"body": "app running jit mode", "d": "1/2018"}, {"body": "ng build envprod compile aot default turn aot setting use", "d": "1/2018"}, {"body": "expected behaviour using lazy loading create puting provider ngmodule level root level create new injector tree lazy module", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "hello adamzr native support push notifications via service clearly needs documentation however inclusion userprovided code sw something explicitly supported may consider feature future", "d": "1/2018"}, {"body": "thanks documentation swpush would great", "d": "1/2018"}, {"body": "splincode related related ca nt reassign variable would cause problems would fine assuming variable named declared controller", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "realized bug want see adequate error example template", "d": "1/2018"}, {"body": "convention better error message consider feature request rather bug report also better update title amp description making others confused", "d": "1/2018"}, {"body": "renamed issue", "d": "1/2018"}, {"body": "analogia item object mutate saved immutable links", "d": "1/2018"}, {"body": "nt mix template loop typescript loops work splincode previous example works fine first case reassigning loop reference variable maybe could use decorator pattern wrap car able reassign", "d": "1/2018"}, {"body": "current description indeed correct class indicate could dependency relates would used parts service dependency removed without causing issue typescript need add injectable class myservicewithoutdep method must add injectable injectable class myservicewithdep constructor private dep dep method ngmodule providers myservicewithoutdep myservicewithdep class mymodule always recommended consistency", "d": "1/2018"}, {"body": "sense without code nothing", "d": "1/2018"}, {"body": "mlcmlapis inputs slow errors input select text area", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "ok probably yes problem somewhere still certainly know well first principal step able reproduce problem think images help anybody mean seriously prepare simple stackblitz demo problem", "d": "1/2018"}, {"body": "jeffersonvivanco able view please refer", "d": "1/2018"}, {"body": "clear cache works fine thanks", "d": "1/2018"}, {"body": "closing appears typescriptlodash issue update angular coincidental changing import statement fixed issue", "d": "1/2018"}, {"body": "mean broken see", "d": "1/2018"}, {"body": "different symptom logs showing expressionchangedafterithasbeencheckederror expression changed checked however adblocker related disabling ublock resolves concern since angular used build many enterprise applications many end users adblockers installed company infosec policy close issue since seems related issue linked", "d": "1/2018"}, {"body": "dankellett related adblocker", "d": "1/2018"}, {"body": "see mean app runs adblocker disabled still producing console error adblockers disabled suggests likely two different issues symptom solely functionality demo nt work adblocker running seems tracked", "d": "1/2018"}, {"body": "dankellett change enough solve problem thit case instead simple solution careful every similar case export class adbannercomponent implements ondestroy oninit constructor private componentfactoryresolver componentfactoryresolver ngoninit thisloadcomponent thisgetads", "d": "1/2018"}, {"body": "dup", "d": "1/2018"}, {"body": "website shows fine", "d": "1/2018"}, {"body": "closing duplicate users affected others working figuring root cause", "d": "1/2018"}, {"body": "nt angular bug open class simply wrong hides element using content overflows wo nt let click either use display none add overflow hidden combination case nt bug report support request therefore closed", "d": "1/2018"}, {"body": "nt using randomly generated numbers cryptography assume reason generated using method simplest", "d": "1/2018"}, {"body": "would like check whether real issue false positive issue channel designed bug report feature request one support request responsible checking whether scanning result real issue false positive could confirm report right repo", "d": "1/2018"}, {"body": "please report issue security angulario help us follow regardless real issue false positive please link issue may want reopen found security issue", "d": "1/2018"}, {"body": "access mentioned page could try different computernetwork", "d": "1/2018"}, {"body": "working page also showing request document failed", "d": "1/2018"}, {"body": "tested different browsers desktop including one think never used browse angulario also tested cell phone network different wifi network result tried clearing cache clearing storage associated angulario still nt work", "d": "1/2018"}, {"body": "seeing jitmatz mentions style guide reactive forms works fine see console js error fetching document error columnnumber filename linenumber message invalid data stack mfbbctryorseterror object image better visualization nothing special network tab edit pointed user gitter channel might region issue south america vpn idea vpn connected though able see page issues", "d": "1/2018"}, {"body": "working neither", "d": "1/2018"}, {"body": "try posting response url", "d": "1/2018"}, {"body": "also get problem", "d": "1/2018"}, {"body": "try posting response url sure according chrome dev tools network pane response empty response contentlength header value full set headers case helps also get problem nt get problem one works fine", "d": "1/2018"}, {"body": "believe firebase hosts docs might caching issue although status page suggests otherwise", "d": "1/2018"}, {"body": "adding pages error", "d": "1/2018"}, {"body": "escalated firebase asked jasonaden current caretaker incident manager", "d": "1/2018"}, {"body": "asked redeploy app already happened someone confirm issue resolved affected regions", "d": "1/2018"}, {"body": "jnizet jitmatz able check", "d": "1/2018"}, {"body": "managed view pages mentioned issue reactive forms testing aot style guide disableclear cache request document failed page interested post mortem", "d": "1/2018"}, {"body": "issue confirm resetting cache refreshing fixed", "d": "1/2018"}, {"body": "appears upstream caching issue cache cleared following work detect similar issue future thanks reporting", "d": "1/2018"}, {"body": "issue solved clearing cache", "d": "1/2018"}, {"body": "got confirmation intermittent firebase issue yesterday caused certain edge caches cache bad content redeployed project today caches purged around world resolved problem following firebase team internally ensure issue nt occur sorry troubles internal reference", "d": "1/2018"}, {"body": "ca nt access angulario materialangulario cliangulario access websites changing country usa vpn", "d": "1/2018"}, {"body": "seymur cleared cache", "d": "1/2018"}, {"body": "gkalpak yeap even tried different devices browsers result site hangs loading", "d": "1/2018"}, {"body": "one came classlist polyfill refer url without sending request amp ones came rxjs setimmediate polyfill used actual message sending removed recent change please note code scanning performed fixed rules need identify whether result real security issue feel anything wrong please report repos belong", "d": "1/2018"}, {"body": "rewrite", "d": "1/2018"}, {"body": "old page still visible although trotyl right rewrite merged sounds like issue duplicate", "d": "1/2018"}, {"body": "ah found misunderstood question", "d": "1/2018"}, {"body": "design creating new array completely different elements time dom nodes would destroyed recreated seems bug special feature chrome keep status even dom", "d": "1/2018"}, {"body": "trotyl thank hint real example creating materialsarray reduce function since reduce takes new empty array starting value problem right interesting part though filtering array filter like work filter return new array nt", "d": "1/2018"}, {"body": "creating new object content trackby designed case", "d": "1/2018"}, {"body": "trotyl learned lot thank much closing issue", "d": "1/2018"}, {"body": "higher resolution image read small text", "d": "1/2018"}, {"body": "oops sorry upload better quality picture evening", "d": "1/2018"}, {"body": "updated ocombe please let know questions vicb suggested actually use open source state machine library implement said would reach discuss detail one thing several us discussed today using pr assignee could used indicate take next action example time green state issue assigned original reviewer blue state pr assigned pr author bot would correctly restore previous team assignee need follow would allow team members watch issues pr assigned follow simplifying whole process figuring issues follow fyi kara jasonaden manughub mhevery", "d": "1/2018"}, {"body": "ca nt reproduce please specify version safari affected", "d": "1/2018"}, {"body": "igorminar see error tested chrome ff edit", "d": "1/2018"}, {"body": "must somehow related happen use vpn", "d": "1/2018"}, {"body": "duplicate closing even though earlier info", "d": "1/2018"}, {"body": "looking one important uglify option set cli set rollup bundle goes yarn rollup amp amp ls lha distbundlejs yarn run tsc amp amp rollup c rollupconfigjs builtindexjs distbundlejs missing exports commonjsproxy default exported import export default amp amp default tslib created distbundlejs done rwr r kamik jan distbundlejs looking", "d": "1/2018"}, {"body": "also matter order plugins rollup showing warning happened due build optimizer trying alter tslib imports believe plugins caused whole tslib retained moving uglify drops size yarn rollup amp amp ls lha distbundlejs yarn run tsc amp amp rollup c rollupconfigjs builtindexjs distbundlejs created distbundlejs done rwr r kamik jan distbundlejs", "d": "1/2018"}, {"body": "know resolution modules different rollup closure tried force usage files mentions way path mapping webpack could nt find rollup looked around bit found allows path mapping rollup using path mapping bundle drops import buildoptimizer rolluppluginangularoptimizer import noderesolve rolluppluginnoderesolve import uglify rolluppluginuglify import paths rolluppluginpaths import pathmapping export default input output name hw file format iife sourcemap true plugins paths pathmapping noderesolve jsnext true module true buildoptimizer uglify mangle true compress puregetters true globaldefs ngdevmode false external yarn rollup amp amp ls lha distbundlejs yarn run tsc amp amp rollup c rollupconfigjs builtindexjs distbundlejs created distbundlejs done rwr r kamik jan distbundlejs", "d": "1/2018"}, {"body": "time ago got insightful suggestion kzc using uglify compress option help code bases using comments applying example shaves resulting bundle yarn rollup amp amp ls lha distbundlejs yarn run tsc amp amp rollup c rollupconfigjs builtindexjs distbundlejs created distbundlejs done rwr r kamik jan distbundlejs", "d": "1/2018"}, {"body": "reference closure example system results bundle instead see know closure performs differently within environment seems parity final size rollupuglify performing slightly better vs", "d": "1/2018"}, {"body": "also try compress option safe sane js alter builtin functions classes uglify overly conservative default echo consolelog foobar substr uglifyjs c consolelog foobar substr echo consolelog foobar substr uglifyjs c unsafe consolelog ooba might also try disabling remove unused function parameters fine code interrogate function get number args echo function f b c consolelog uglifyjs c function f b c consolelog echo function f b c consolelog uglifyjs c keepfargsfalse function f consolelog post uglify input file gist equivalent perhaps could offer suggestions nt want build code", "d": "1/2018"}, {"body": "kzc thanks chiming suggestions reference relevant files far closure output rollup output preuglify rollup output postuglify following suggestions brought shaved bytes final remained big difference difference nonetheless general purpose uglification probably leave", "d": "1/2018"}, {"body": "filipesilva less optimal far settings go could save additional bytes using uses instead uses difference due fact pass lacks due implementation issues pass runs assigns every symbol globally unique name facilitates better function inlining", "d": "1/2018"}, {"body": "kzc thanks checking results really helps validation current results got actually tried exactly like said roughly extra", "d": "1/2018"}, {"body": "rollup equivalent called perhaps set rollup phase prior uglify may result smaller bundle", "d": "1/2018"}, {"body": "nt aware options actually tested neither reduce output beyond threshold also tried turning see could without build optimizer generated bundle instead", "d": "1/2018"}, {"body": "oh well worth shot study uglify output identify low hanging fruit microoptimizations could implemented means create new uglify issue detailing optimization heuristic", "d": "1/2018"}, {"body": "curious total build time closure bundle compared rollupbouglify bundle", "d": "1/2018"}, {"body": "times machine time yarn rollup yarn run rollup c rollupconfigjs builtindexjs distbundlejs created distbundlejs done real user sys time yarn closure yarn run java jar nodemodulesgoogleclosurecompilercompilerjar flagfile closureconf done real user sys rollup closure look closure bundle something noticed property renaming think closure really well especially extra info comments angular packages nt look deeply missing still make wonder bit want figure env thing start looking deeply final bundle code also need check mhevery configure closure equivalent uglify makes reading final bundles much nicer", "d": "1/2018"}, {"body": "closure java build time good much better remember comparable want avoid installing jre far property mangling goes uglify also supports reduce minified output cases optionally supports property whitelists regex patterns well quoted property exclusion uglify property mangling discouraged general use fine bundling specific library application source rules governing properties strictly enforced", "d": "1/2018"}, {"body": "filipesilva awesome investigation rock let us internalize get back action needed side", "d": "1/2018"}, {"body": "kzc unfortunately js version closure compiler uses google web toolkit transpile java bad result consumes lot memory nt feature parity example nt support unicode angular app could ever use use lower barred latin character private namespacing right soln statically link openjdk regular npm distro closure compiler nt aware java runtime dependency tried tell sadly everyone listens", "d": "1/2018"}, {"body": "alexeagle thanks pointing difference two closure versions filipesilva fwiw size uglified bundle property mangling whether works case without mangle property whitelist another matter probably would nt command excludes mangling builtin dom props well property quoted least input ie even dead code", "d": "1/2018"}, {"body": "hey filipesilva somewhat real state close ready land angular run find files trace happened config passed rollup rollup receives application rxjs gets angular plugin means get see buildoptimizer included output rollup run downlevel get run purify get run uglify config passed uglify final result also request debug output use produce humaninspectable still playing options get small sizes got nt test application still works rather know options aggressive", "d": "1/2018"}, {"body": "kzc going property mangling pretty impressive tried yesterday reason nt get much size reduction probably messed config time alexeagle mention run get remember ts stripping pure comments see also build optimizer might detect input aggressive optimizations expect patterns purify also needed anything webpack bundles", "d": "1/2018"}, {"body": "dup", "d": "1/2018"}, {"body": "dup angularangularcli yep", "d": "1/2018"}, {"body": "add statement place inspect call stack debugger breaks reason areiterablesequal gets called debug mode", "d": "1/2018"}, {"body": "thank solve problem", "d": "1/2018"}, {"body": "firefox pretty old support latest versions evergreen browsers", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "agree would useful keep development reason kept right nt want anyone able read content meaning amp description may contain private data", "d": "1/2018"}, {"body": "addition keeping tags actually give us info retrieve component tag ca nt opposite html dom retrieve info dom dev mode said like could many opportunitiesideas especially translators even let us know translated ca nt need choose prefer tag id value gaurantee hide private data think ocombe", "d": "1/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "1/2018"}, {"body": "missed basic points works read doc first channel existed bugs new features answering support questions", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "relates", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked also another related issue", "d": "1/2018"}, {"body": "create pr updating navigationjson", "d": "1/2018"}, {"body": "change made kapunahelewong", "d": "1/2018"}, {"body": "thank yerkon trotyl trotyl right master right pointed yerkon though think gkalpak know reason nt nav", "d": "1/2018"}, {"body": "nt know reason seems like accidental removal unrelated ngmodules pr yes add back smiley yerkon thanks catching feel free submit pr adding back", "d": "1/2018"}, {"body": "duplicate please try clear browser cache", "d": "1/2018"}, {"body": "trotyl quick respond realised probably sw cache comes picture sure lot many people experiencing problem maybe need add notification angulario saying flush cache", "d": "1/2018"}, {"body": "see new example throws run time error open seperate issue", "d": "1/2018"}, {"body": "already tracked nt affect functionality", "d": "1/2018"}, {"body": "hmm running firefox windows working fine", "d": "1/2018"}, {"body": "working fine osx", "d": "1/2018"}, {"body": "dont get tried many times different code created couple different projects locally well plunk posted issue saw thing time firefox working chrome working nt understand exact code working people", "d": "1/2018"}, {"body": "kylehall try different computer", "d": "1/2018"}, {"body": "yeah use mac work tried machine saw problem", "d": "1/2018"}, {"body": "different issue feeling see btw reproduce issue good luck bro", "d": "1/2018"}, {"body": "kylehall would suggest trying different machines using browser incognito mode exclude potential interference browser extensions case sounds like sth specific environment closing till got reliable way reproducing", "d": "1/2018"}, {"body": "know issue closed post new findings anyway case anyone interested long story short nt use vimium browser extension firefox caused problems figured downloading clean version firefox nt extensions worked started disabling addon firefox app worked vimium disabled", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "duplicate indeed thnx trotyl", "d": "1/2018"}, {"body": "support reported tutorial bug explain issue messageservice installed later stage page tutorial add messageservice providers tutorial instructs run ng generate service message moduleapp cli therefore mentioned section heroservice created tutorial instructs run ng generate service hero cli call messageservice yet provide heroservice section needs change provide heroservice since provide open appmodule class import heroservice add ngmoduleproviders array srcappappmodulets providers providers heroservice messageservice provide heroservice since provide open appmodule class import heroservice add ngmoduleproviders array srcappappmodulets providers providers heroservice lt note messageservice yet", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "closing duplicate", "d": "1/2018"}, {"body": "ok like instance inject class instances independent decorator difference class decorated dependencies wont resolved instance ctor parameters undefinednulldefault class decorated instance attempt resolve dependencies throwing exception cant", "d": "1/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "1/2018"}, {"body": "nt think issue raising understood wording existing documentation appears injector documenting injectable metadata annotation comment jotatoledo parts function absolutely correct unfortunately nt line existing documentation simple put existing documentation flat wrong reads adding injectable declares class dependencies injected constructor dependency injector creating instance class false way around declares class used injector injected classes classes construction", "d": "1/2018"}, {"body": "dylanbaxter debug add following file javascript import zonejsdistzone included angular cli import zonejsdistzoneerror reduce stack traces", "d": "1/2018"}, {"body": "included angular cli lol well rather installing cli starting scratch copied zoneerrorjs file repo nodemodules folder rebuilt guess effect error zonesymbolcurrenttask object runcount state notscheduled type microtask zonesymbolerror error networkerror attempting fetch resource instantiating npm angularmaterialbundlesmaterialumdjs loading loading mainjs stack trace iprototypeimport lt zoneprototyperun gt scheduleresolveorreject lt zoneprototyperuntask gt drainmicrotaskqueue zonesymbolstack zoneify lt columnnumber getter amp setter filename getter amp setter linenumber getter amp setter message getter amp setter name getter amp setter originalerr typeerror networkerror attempting fetch resource stack trace zoneify lt j lt zonedelegateprototypeinvoke zoneprototyperun scheduleresolveorreject lt zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue originalstack getter amp setter stack getter amp setter tosource function value tostring function value zoneawarestack getter amp setter proto object zonedelegateprototypeinvoke zoneprototyperun scheduleresolveorreject lt zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue still whole lot detail nothing care could trying tell bad mapping systemconfigjs checked doublechecked already systemconfig baseurl buildapp paths npm nodemodules packages defaultextension js map angularcore npm angularcorebundlescoreumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularcompiler npm angularcompilerbundlescompilerumdjs angularforms npm angularformsbundlesformsumdjs angularcommon npm angularcommonbundlescommonumdjs angularcdkplatform npm angularcdkbundlescdkplatformumdjs angularanimations npm angularanimationsbundlesanimationsumdjs angularanimationsbrowser npm angularanimationsbundlesanimationsbrowserumdjs angularplatformbrowseranimations npm angularplatformbrowserbundlesplatformbrowseranimationsumdjs angularmaterial npm angularmaterialbundlesmaterialumdjs rxjs npmrxjs jquery npmjquerydistjqueryjs hammerjs npmhammerjshammerminjs zonejs npmzonejs still going around circles trying get basic ng stuff working usual", "d": "1/2018"}, {"body": "alright found another issue posted similar error firefox prompted open app chrome revealed appears actual error fetch api load npm angularmaterialbundlesmaterialumdjs url scheme must cors request still unresolved least found way get around useless errors produced zonejs seriously ng devs point zones small application make ng neophytes get around hulking obstacle remove zonejs without breaking stuff", "d": "1/2018"}, {"body": "dylanbaxter sure use config also probably read post", "d": "1/2018"}, {"body": "head explodes looks like got angularcore nt property compileroptions article linked surmise disable zones angular updates data bindings wo nt occur automatically freaking core mission zones damned complicated use angular effectively better go read articles full information might already date fsck gon na go outside build something wood instead kinda crap makes hate computers", "d": "1/2018"}, {"body": "hey joekendall would mind opening issue angular material repo", "d": "1/2018"}, {"body": "oops sorry new issue reference", "d": "1/2018"}, {"body": "mean respect stack blitz broken routing paths defined ones prefix defined path nt see angular", "d": "1/2018"}, {"body": "toxicable stackblitz broken exactly point nt defined path yet access even though", "d": "1/2018"}, {"body": "pitops lazyloaded module provided case", "d": "1/2018"}, {"body": "pitops nt working either way pointed reproduction differs explaination importing lazy module therefore making lazy normal module", "d": "1/2018"}, {"body": "trotyl toxicable see saying want access part ie auth service auth module componentsservices saying using lazy module loading", "d": "1/2018"}, {"body": "pitops want lazy loaded module works real lazy module loaded initialization phase main app starts ca nt directly related use di inject providers main app lazy loaded module", "d": "1/2018"}, {"body": "mlcmlapis get seems since modules tied together using di sense lazy loading impossible course nt auth module lazy loaded module anyway thanks replies may close thread wish", "d": "1/2018"}, {"body": "pitops ooh author please close issue", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "angular portuguese language", "d": "1/2018"}, {"body": "good decorated descriptive follow convention", "d": "1/2018"}, {"body": "enough info actionable please feel free reopen issue template filled", "d": "1/2018"}, {"body": "provide pr shortly", "d": "1/2018"}, {"body": "sorry mistake cause adblock lol", "d": "1/2018"}, {"body": "thanks noticing really angular issue close asked get corrected", "d": "1/2018"}, {"body": "repo actually right place track better place leave open issue fixed", "d": "1/2018"}, {"body": "fixed good", "d": "1/2018"}, {"body": "igorminar thank", "d": "1/2018"}, {"body": "version found open linked commit could two different commit master patch likely could still improved another way go searching issue number changelog", "d": "1/2018"}, {"body": "checked crawler stats look fine far tell also tried fetching site robot succeeded", "d": "1/2018"}, {"body": "think monitor bit first watching analytics crawler stats understand impact unclear could responsible somewhat relevant changes made recently nt make prod yet", "d": "1/2018"}, {"body": "also got notification new search console available site seems unrelated", "d": "1/2018"}, {"body": "index status looking fine note data processing graph appears latency several days graph ends status tuesday days ago", "d": "1/2018"}, {"body": "edit data comment wrong looking angularjsorg think data incomplete yet see less traffic site ignore comment leaving archival purposes sessions today ignore sharp drop nt complete data today yet sessions already number users sharply today started around pt yesterday", "d": "1/2018"}, {"body": "looks like pages googlebot noindex meta tag prevents google indexing page using javascript remove limitations like recommended result pages dropped indexing rendered", "d": "1/2018"}, {"body": "thanks softplus case culprit pr find however odd search console nt warn us", "d": "1/2018"}, {"body": "remove preemptive hard coded tag", "d": "1/2018"}, {"body": "petebacondarwin yeah pr review", "d": "1/2018"}, {"body": "fix production", "d": "1/2018"}, {"body": "igorminar resolved", "d": "1/2018"}, {"body": "waiting analytics data delayed yesterday everything looked good wed jan pete bacon darwin notifications githubcom wrote igorminar resolved receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "root cause", "d": "1/2018"}, {"body": "related", "d": "1/2018"}, {"body": "ocombe understand removed optimization wouldt safer least replace", "d": "1/2018"}, {"body": "problem import version problem happens upgrading", "d": "1/2018"}, {"body": "rokerkony nt need import en locale included angular already adrienboulle thanks repro looking", "d": "1/2018"}, {"body": "ok found issue import multiple locale files function named plural name collision flat modules optimizations cli need find way fix easiest would different name plural function would nt fix real bug fesm optimizations check name collisions across different modules try bundle withing module separately", "d": "1/2018"}, {"body": "bug webpack occurs specific circumstances like ones locales please see details available workaround angular cli far tell sure sort bug get lot attention due low frequency available workaround webpack focus getting recommendation angular replaces empty array elements", "d": "1/2018"}, {"body": "pr would fix side", "d": "1/2018"}, {"body": "fix merged webpack need new version published need publish new version cli", "d": "1/2018"}, {"body": "ocombe great thx pow low wrong project using cli blocked webpack cli update", "d": "1/2018"}, {"body": "true wo nt change anything though since webpack blocker", "d": "1/2018"}, {"body": "reverting commit option", "d": "1/2018"}, {"body": "something turns webpack patch nowhere close released asked waiting release", "d": "1/2018"}, {"body": "ok thx", "d": "1/2018"}, {"body": "waiting fix well started noticing error project run angular angular cli tried updating angular cli still issues ca nt get working matter version revert back sure", "d": "1/2018"}, {"body": "make sure delete packagelockjson lock version packagejson remove", "d": "1/2018"}, {"body": "benchmarks really old using probably want see uptodate benchmarks benchmark", "d": "1/2018"}, {"body": "also", "d": "1/2018"}, {"body": "yes many different benchmarks claims regarding speed coming experience although majority behavior normal boundary overall experience somewhat slower webview application running android ios smartphones desktop amp laptops angular flawless way increase angular speed running mobile using jsx something similar would great opinion based anuglar use cordova may angular created another behavior found html rendered javascript jsx android app navigation response speed become much faster true compared angular angular felt chunky heavy weight process going behavior", "d": "1/2018"}, {"body": "nt tell us app comparing big difference jit aot mode angular application example probably best step would compare angular version others see app initialization phase app repeated rendering phase", "d": "1/2018"}, {"body": "yes comparing simple apps angularbased cordova app talking ionic ui framework based angular wwwionicframeworkcom create demo app minute using cli overall usage angular example rather slow normal web apps native apps built java amp objectivec javascriptbased html rendering app example app see fast navigation responds tap try react native example app similar experience thanks", "d": "1/2018"}, {"body": "nothing runtime angular use since already alternate strategy called change detection actually puts angular ahead microbenchmarks vs vue react continues performing well size application scales using api onpush guide improving speed app post change detection", "d": "1/2018"}, {"body": "jsx virtual dom could improve runtime performance met webview vs native view performance issue ionic using webview making slower native views try nativescript using native views", "d": "1/2018"}, {"body": "see question virtual dom angular quite often every months comes might worth framework design comparison angulario people know vdom nt make sense angular implementation vuejs page docs", "d": "1/2018"}, {"body": "template literals lithtml better long term option vdom standards prospective", "d": "1/2018"}, {"body": "misterti pass plain html binding rewrite global definition nt expect functionality inserting custom components simply passed content processed angular compiler encapsulated styling component use metadata compiled angular compiler used", "d": "1/2018"}, {"body": "see way pass csshtml string angular runtime per example would processed correctly stay contained", "d": "1/2018"}, {"body": "manage ro make work correctly iframe read play store would reject app using iframe although content display would private display public site", "d": "1/2018"}, {"body": "also ss far remember angular docs emulated contain css frkn breaching tje component native encapsulation work properly", "d": "1/2018"}, {"body": "misterti use dynamic html runtime example generated cms cases load angular compiler even aot mode app compile adhoc html templates components modules see discussion relation native encapsulation nt try yet would interesting see working demo example", "d": "1/2018"}, {"body": "plunker option native mode comment emulated uncomment native appts test", "d": "1/2018"}, {"body": "emulated styles changes compile time top scope add raw css scoped next time submit issue please add steps required reproduceobserve plunker thanks", "d": "1/2018"}, {"body": "understand emulated compile time thanks great information promise better next time", "d": "1/2018"}, {"body": "wish type would take generic could type strictly currently type little better stringkeyed dictionary following would preferred breaking change", "d": "1/2018"}, {"body": "thanks intentional return observable fact internally behaviorsubject nt supposed exposed public api may later change another implementation keeps observable shape", "d": "1/2018"}, {"body": "setup minimal repro also strange name module", "d": "1/2018"}, {"body": "mean minimal repo letter drive app file stores", "d": "1/2018"}, {"body": "please read understand ask minimal reproduction good way make minimal repro create new app via add minimum possible code show problem push repository github link", "d": "1/2018"}, {"body": "tried using something else path project", "d": "1/2018"}, {"body": "create minimal repo project", "d": "1/2018"}, {"body": "tried using something else h htdocs path project try", "d": "1/2018"}, {"body": "tried using something else h htdocs path project works ca nt believe problem alexzuza thanks lot saved", "d": "1/2018"}, {"body": "looks like addressed closing open new issue needed", "d": "1/2018"}, {"body": "igorminar", "d": "1/2018"}, {"body": "made pr able config would like make pr config", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "thanks trotyl close favor", "d": "1/2018"}, {"body": "thanks jialipassion see commented well", "d": "1/2018"}, {"body": "wrong changed long ago component view yet created component constructor called use oninit lifecycle callback access view component", "d": "1/2018"}, {"body": "hmmm one problem allows use component initialization especialy code property setters means create property set check setters nice solution", "d": "1/2018"}, {"body": "tend agree kukjevov current behaviour seems sideeffect implementation choices rather designing api user expectations", "d": "1/2018"}, {"body": "static queries viewchild contentchild inside embedded view initialized view creation dynamic queries viewchildren contentchildren viewchildcontentchild located inside embedded view calculated change detection cycle far know behavior added part new view engine", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "1/2018"}, {"body": "plunker nontrivial party css top clear mean counter item stays space consecutive items using nffor directive ol tag spent couple minutes looking plunk could nt find tags might missed plunker small reproduction problem given going close issue support request", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "ok", "d": "1/2018"}, {"body": "closing duplicate", "d": "1/2018"}, {"body": "funny enough started running updated chrome issue nt present", "d": "1/2018"}, {"body": "thought code failed simple something like certainly show", "d": "1/2018"}, {"body": "getting exact problem version chrome nt think issue", "d": "1/2018"}, {"body": "note seem run unit testing running app everything seems fine far curiosity folks also seeing testing", "d": "1/2018"}, {"body": "issue angular latest chrome occurs even testing", "d": "1/2018"}, {"body": "see", "d": "1/2018"}, {"body": "also met write plunker display question", "d": "1/2018"}, {"body": "thanks updated original issue include plunker", "d": "1/2018"}, {"body": "could please update issue description give steps reproduce issue plunker thanks", "d": "1/2018"}, {"body": "done let know covers", "d": "1/2018"}, {"body": "thanks looking", "d": "1/2018"}, {"body": "could please make sure fixes issue guess legit issue code see correct error message fix", "d": "1/2018"}, {"body": "vicb updated latest angular still issue reached release yet message still pointing simple element removing ngclass row fixes", "d": "1/2018"}, {"body": "ketec check fix released checking fix commit check commit page github see available master released yet", "d": "1/2018"}, {"body": "thanks vicb looks like change lookup index use instead seems like would make big difference debug screenshot sent would change things instead obviously critical since former valid index latter way actually test new version pushed npm think way point dependency github packagejson sure ever needed google around see find answer", "d": "1/2018"}, {"body": "looks like need route might good feature implement pretty rare use case could solved validating route configurations think better solution would validation adding logic would make router codebase larger small use case larger use case involved go ahead create new issue describing thanks", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "ngmodel directive called next microtask queue parent component ngmodel component one dirty check ngmodel component would checked later parent component later dirty check running strategy parent component stop ngmodel component check demo may confirm words", "d": "1/2018"}, {"body": "demo basically written cause infinite loop function returns new instance every change detection run trigger entire list rerender construct new element trigger mouseover event trigger new cd run trigger new list basically avoid binding methods angular must reexecute method detect changes made nt additionally adding parameter prevents list entirely rerendered normally tracks identity method provides whole new set identities suspect specific chrome due timing anything else", "d": "1/2018"}, {"body": "demo seem cause infinite loop works firefox edge appear loop infinitely angular catching infinite loop condition behind scenes probably throw exception like one throws dev mode last change detection cycle detects inconsistent data thought binding code common practice like tutorial found behavior consistent nt seem like timing issue least deterministic one one event handler would attached work nt specific browser perhaps event fired attached new element different browsers causing one browser attach mousedown event successfully nt blocking issue rather something encountered progressive refactoring confused condition create bug seemed precise felt like edge condition failure", "d": "1/2018"}, {"body": "see reactivexrxjs", "d": "1/2018"}, {"body": "thanks see comment root issue also ca nt use intersection types ca nt instance assign property missing words events event types time ever one event type", "d": "1/2018"}, {"body": "really provide way reproduce closing repro", "d": "1/2018"}, {"body": "weird augmenting mentioned lines result output change error error stays points result already compiled typescript based package webpack seems rootor least source error removing webpack iframe runtime results flawless app error seems related function usedneeded running app makes weirder also happening", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "wrong project", "d": "1/2018"}, {"body": "let continue discussion bazelwatcher issue nt think angularspecific probably repro bazelhelloworld app", "d": "1/2018"}, {"body": "alexeagle reference bazelwatcher issue could track", "d": "1/2018"}, {"body": "thread", "d": "1/2018"}, {"body": "unclosed tag would like submit pr", "d": "1/2018"}, {"body": "unclosed tag would like submit pr ok", "d": "1/2018"}, {"body": "created pull request", "d": "1/2018"}, {"body": "working fine", "d": "1/2018"}, {"body": "clicking button toggle flag happening", "d": "1/2018"}, {"body": "course wo nt nt call event handler", "d": "1/2018"}, {"body": "check app bootstrapped ngzone button click trigger view changes", "d": "1/2018"}, {"body": "see current zone wrong using unpatched nt see relates issue", "d": "1/2018"}, {"body": "application component state changed dynamically externally without inputs", "d": "1/2018"}, {"body": "nt think problem zones take look changed ngif showhide working expected", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "related see also comment reproduction", "d": "1/2018"}, {"body": "closing duplicate reproduction gt actionable", "d": "1/2018"}, {"body": "duplicate part content projection", "d": "1/2018"}, {"body": "trotyl oh ok cool searched since simply go introduced another developer nt appear thread nt come looks like taken care least enough additional issue nt add anything go ahead close thanks", "d": "1/2018"}, {"body": "today live examples converted stackblitz refresh page new link", "d": "1/2018"}, {"body": "issue tracker right place general questions please read issue template creating issue", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "angular applications integrate editors terms pr important", "d": "1/2018"}, {"body": "ng templates valid html issue must rouge", "d": "1/2018"}, {"body": "last question asked jul one solved problem", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "basically support issue scanned whole documentation nt found anything accomplish basically itworks add documentation nt good angular anyways", "d": "1/2018"}, {"body": "understood probably best create new issue mark documentation request agreed valid issue thanks", "d": "1/2018"}, {"body": "ignore reopen", "d": "1/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "1/2018"}, {"body": "trotyl", "d": "1/2018"}, {"body": "looks fine likely due", "d": "1/2018"}, {"body": "toxicable solved yet nt know related country tested smartphone mobile data different laptops", "d": "1/2018"}, {"body": "tested vpn worked problem without vpn", "d": "1/2018"}, {"body": "nt think problem end afaict", "d": "1/2018"}, {"body": "leaving country name going happen anyone else azerbaijan", "d": "1/2018"}, {"body": "add answer ocombe point communication community another issue understand concern asked question last week team reply make announcements even cautious people take say fact works said nice everyone happy rarely case development things get postponed things take priority things get canceled nt work issues arise nt anticipate etc point even say estimation changes people get angry took said granted planed accordingly project business etc let say announce angular elements released march convinced boss use next project instead vue like alshdavid wants turns march ready buggy postpone need finish something else first boss comes blames return blame angular team angular connect sure would get runtime code translations done said talk making good progress design docs working already high hopes turns core changes new renderer make work much easier also obsolete finished part decided wait little work runtime new renderer postponed instead best apparently one blamed delay time could happened would felt terrible even really fault best make announcements like heard try best future share roadmap work probably hiring new devrel also help communication rob amp stephen already lot ground cover hope understand position well developer really really want share new exciting stuff planned give actual numbers new bundle size good conscience totally understand nt make real estimations hand text nearly perfect attentionnote announcements suggest make estimations delays explain best community understand think zelda everyone okay year delay end get ghe best game ever also tesla hyped made big promises even cant hold community okay long get something great end make big announcments go make hype real show everyone project great even greater every year", "d": "1/2018"}, {"body": "angular great big ass applications would focus marketing technology architecture maintainable even people working years following project evaluation use company frankly found exact opposite every major version update angular many problems breaking changes impossible create big project current state hope maintain one year old versions nt get bugfixes need stay date breaking changes place nt know libraries like react etc makes angular usable companies need projects supported longer time", "d": "1/2018"}, {"body": "roeba pains hear feel like spend lot time make sure nt break people much provide lts versions lts patch year breaking changes major versions following semver make sure provide guidelines update things usually deprecate old behaviors possible give people time update code good feedback say easy upgrade major versions come concrete examples", "d": "1/2018"}, {"body": "every major version update angular many problems breaking changes roeba please fake facts even nt like never version", "d": "1/2018"}, {"body": "roeba pain rc angular since felt like updating minor thing changed httpmodule big deal update also could still use old module despita breaking changes optional deprecations like said anyway might topic issue", "d": "1/2018"}, {"body": "suggestions add issue", "d": "1/2018"}, {"body": "mickl guess mean vuejs rather visjs", "d": "1/2018"}, {"body": "lol sorry worked much visjs updated everything", "d": "1/2018"}, {"body": "roeba true upgrade angular completely done several hours side one person app modules components absolutely problems also anonymous profile nt look trustworthy point view seriously represent difficult show trivial details deliberately", "d": "1/2018"}, {"body": "mickl thanks kind comments things well well sharing hopes angular issue overall nt actionable resolvable single issue going close love continue conversation please drop email devrel angulario love discuss ideas look ways help us improve things help activate community", "d": "1/2018"}, {"body": "issue target instead tsconfigjson error wo nt appear since const feature", "d": "1/2018"}, {"body": "wrong repo", "d": "1/2018"}, {"body": "thank new problem compilation next error node version", "d": "1/2018"}, {"body": "exact version two angular applications happens build targeting targeting fixed fix one projects using interceptors auth one using lazy loaded modules", "d": "1/2018"}, {"body": "turned source maps find error line", "d": "1/2018"}, {"body": "looks like two issues one angularcli please move repo another http reproduction still issue please create reproduction file new issue filling new issue template suggest using stackblitz plunker github", "d": "1/2018"}, {"body": "angular opposite backend redirection please report server devtool instead also possibly duplicate please provide minimal reproduction", "d": "1/2018"}, {"body": "hi recorded video scenario also mention using server webpack masked angular cli scenario used work earlier versions upgrading angular broken please take look screencast attached also project tried one provided angulario docs jan pmwebmzip", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked reproduce problem external project able look otherwise could related specific environment would nt allow debugging happen", "d": "1/2018"}, {"body": "also", "d": "1/2018"}, {"body": "agreed document better anyone looking info topic currently supporting subset css selectors element selectors attribute selectors including values pseudoselector combination including", "d": "1/2018"}, {"body": "happy address nobody else working already", "d": "1/2018"}, {"body": "never worked way need import modules want depend pass array parameter typescript error seeing valid", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "fwiw might want look basicly removes need code every form", "d": "1/2018"}, {"body": "frederikprijck see still using subscription directive update form value trying avoid feature request", "d": "1/2018"}, {"body": "source code explicitly mentions expected multiple considered unsecure work around easily sanitizing thought worth bringing", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "mhevery question problem explicitly stated work around behavior hence question problem thought could useful bring problem encountered know bug ca nt realy find anything docs mentioning behavior considered unsafe thanks", "d": "1/2018"}, {"body": "really wish angular global switch feature always brings trouble help using api know api want enable sanitization know something usergenerated content disable know", "d": "1/2018"}, {"body": "reopening clarify whether design decision eg due higher complexity omission cae either document limitation add support multiple urls clear sanitizer currently recognizesanitize multiple urls styles eg recognized sanitized fine backgroundimage url unable recognizedsanitize backgroundimage url url recognizing able handle forms would complicated nt sound impossible thoughts mprobst", "d": "1/2018"}, {"body": "also applies multiple transform recognized sanitized fine transform rotate unable recognizedsanitize transform rotate scale", "d": "1/2018"}, {"body": "technical limitations regexp fundamental design decision reasoning behind craft regexp matches multiple urls without accidentally allowing arbitrary css using parentheses good fix ghetolay example multiple transformation functions make sure cc rjamet prs", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "get windows logged user name angular application anybody please let know", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "danieldaeschle could try add line polyfillts", "d": "1/2018"}, {"body": "jialipassion error nt appear anymore still white screen nt open developer tools internet explorer open see website", "d": "1/2018"}, {"body": "danieldaeschle sure reason could post reproduce repo", "d": "1/2018"}, {"body": "forget say using materialdesignlite getmdlio maybe occures issue", "d": "1/2018"}, {"body": "danieldaeschle sure provide reproduce repo help debug", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "danieldaeschle download repo change line ca nt reproduce everything work fine", "d": "1/2018"}, {"body": "another module chrome working great ie still working developer console opened using mdl maybe company environment buggy test home later thanks help", "d": "1/2018"}, {"body": "try add override intranet default one information could found", "d": "1/2018"}, {"body": "reproduce issue fixing app tried whatever could think ca nt debug different behavior without devtools open notoriously defined open devtools nt issue case afaict html seems rendered correctly containers height sounds like bug possibly related flexbox layout andor mdl issue", "d": "1/2018"}, {"body": "danieldaeschle ok reinstall got error install", "d": "1/2018"}, {"body": "trotyl tried already nt help gkalpak yes think mdl bug something found fix", "d": "1/2018"}, {"body": "mdl bug every mdl element invisible", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "duplicate please refer", "d": "1/2018"}, {"body": "closing duplicate nt describe issue", "d": "1/2018"}, {"body": "seems like problem php code specifically line partnername jsondecode post name familiar php nt understand name come try debug piece code", "d": "1/2018"}, {"body": "think passing json body nt know convert wwwformurlencoded data try using instead case nt need specify header btw since automatically set based type", "d": "1/2018"}, {"body": "gkalpak solutionb worked thanks igorminar yes removed jsondecode making conflicts php script", "d": "1/2018"}, {"body": "still problem value added see dom refresh page angular concept run method getting array database another time consume resources igorminar gkalpak", "d": "1/2018"}, {"body": "charge updating value works example post operation successful update items array data already payload", "d": "1/2018"}, {"body": "closing since seems resolved", "d": "1/2018"}, {"body": "trying use valid iso date spec format describing actually mysql date already feature request gon na close issue wondering works chrome accept mysql date formats", "d": "1/2018"}, {"body": "igorminar expectation deliver visual mockup today us review discuss move html mockup agreed upon design match expectation", "d": "1/2018"}, {"body": "sjtrimble see visual mock today jan html mock wonder could skip html mock case think petebacondarwin html mocks add enough value skip ask gkalpak help css gets crazy", "d": "1/2018"}, {"body": "reason pushed html css nt think time well spent trying convert photoshop html css given particularly strong would end taking longer way", "d": "1/2018"}, {"body": "would mock htmlcss easily translate angulario setup agree html mocks would help nt george could css pete eng bits tue jan pete bacon darwin notifications githubcom wrote reason pushed html css nt think time well spent trying convert photoshop html css given particularly strong would end taking longer way receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "way currently designed much custom css planned tried work within current classesstyles throughout pages much possible", "d": "1/2018"}, {"body": "igorminar jbogarthyde land already drafted content changes class api docs making changes directly source code api ref content originates collaborating engineers source assume also aspect engineering reviewinput want technical accuracy completeness proposed class rewrites might break actual classes sprint next let target good class sprint key validation templates css etc agree", "d": "1/2018"}, {"body": "done initial rewrites classes changedetectorref viewref embeddedviewref viewcontainerref componentref animationbuilder animationfactory one done technical review content put new template take opportunity develop procedure writerengineer collaboration api doc", "d": "1/2018"}, {"body": "jenniferfell yeah directly source code content comments need eng review", "d": "1/2018"}, {"body": "adding latest mockup well reference", "d": "1/2018"}, {"body": "thanks brocco added details issue description", "d": "1/2018"}, {"body": "nt think every much issue opened week end night takes hours someone opens slack channel get messages people ignore channel much noise also want scheduled function activations firebase functions need external cron service ping service trigger see demo app", "d": "1/2018"}, {"body": "caretakers expected follow regressions even weekends goal ensure something important happens like bad release site get notified someone reviews report determines appropriate path resolution", "d": "1/2018"}, {"body": "yeah scheduling jobs firebase hard either use external service ping firebase end point post video setup app engine instance post aware options", "d": "1/2018"}, {"body": "inclined go wwwcronjoborg approach seems easier setup", "d": "1/2018"}, {"body": "could also piggyback ngbuildsio server would couple unretated things", "d": "1/2018"}, {"body": "rather add kind crossdependency ngbuildsio tue jan george kalpakas notifications githubcom wrote could also piggyback ngbuildsio server would couple unretated things receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "could also monitor number comments since issue opened determine kind threshold like x comments x hours hot topic look", "d": "1/2018"}, {"body": "yeah worth looking well tue jan pm olivier combe notifications githubcom wrote could also monitor number comments since issue opened determine kind threshold like x comments x hours hot topic look receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "another ugly workaround found aside creating one guard combines manually use nested routes", "d": "1/2018"}, {"body": "could wrap new guard implements logic", "d": "1/2018"}, {"body": "hacky way meant within motivation", "d": "1/2018"}, {"body": "looks like problem packagejson typings sharedsharedmoduledts sharedsharedindexdts creates issue solve replacing typings sharedsharedmoduledts means created indexts export classes need import client project import direclty indexts import item kandanvielfbittestsharedindex sure whether issue packagejson typings property allow array fails later compiling included dependency issue angularcli commented ievhenikonnykov issue please add ngmodule annotation error due multiple reasons", "d": "1/2018"}, {"body": "dup", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "chaitanyash read doc section first need", "d": "1/2018"}, {"body": "hey mhevery thanks taking care fast think reopened think fix applied sufficient first preview text changed gender property outputs one following string values f second think change confusing since reader cant understand put values gender property write strings since text think fix author gender select male female f clear using preview text gender property outputs values f user put order use yosi", "d": "1/2018"}, {"body": "cc vicb", "d": "1/2018"}, {"body": "please file issue", "d": "1/2018"}, {"body": "petebacondarwin really consider consolidating directory structure markdown files images examples collocated let yet stackblitz pr touches almost files", "d": "1/2018"}, {"body": "please also remember update pullapprove docs group md primary kapunahelewong secondary dennispbrown backup thanks", "d": "1/2018"}, {"body": "yup thanks capturing issue mon jan pm jennifer fell notifications githubcom wrote please also remember update pullapprove docs group md primary kapunahelewong secondary dennispbrown backup thanks receiving assigned reply email directly view github mute thread", "d": "1/2018"}, {"body": "duplicate function call like style value blocked sanitizer need bypass sanitizer use correct binding syntax make work", "d": "1/2018"}, {"body": "please note polyfill lib wrote way endorsed google official polyfill angular anything said problem angular independently polyfill lib", "d": "1/2018"}, {"body": "thank information efforts without ability handle translations outside template makes angular quite challenging achieve fluid approach internationalization notwithstanding third party libraries initial polyfill working quite well far experimented provides cohesion development process", "d": "1/2018"}, {"body": "reproduce issue using wrote script workaround reads file spits target tags", "d": "1/2018"}, {"body": "nope working fine", "d": "1/2018"}, {"body": "ca nt reach several hours", "d": "1/2018"}, {"body": "going close since site seems working fine people", "d": "1/2018"}, {"body": "works thanks", "d": "1/2018"}, {"body": "splincode feel free submit pr see instructions someone like stephenfluin would take look approve", "d": "1/2018"}, {"body": "splincode options presentations angular conferences many blogs like", "d": "1/2018"}, {"body": "stephenfluin robwormald", "d": "1/2018"}, {"body": "closing issue lots great angular training courses also check actively working many content authors gdes writing speaking awesome things angular codeschool nt updated angular others believe founder gregg left believe chatted together working original course thanks mlcmlapis great list feel free submit find", "d": "1/2018"}, {"body": "one small hurdle overcome sitemaps require fully qualified urls rather relative ones etc docgen time know host name deployed since defined building aio app transmitted app via environments deployment time options could generate multiple versions sitemap one environment dgeni change deployment script include relevant file upload could generate generic sitemap using relative paths prepend deployment host sitemap deployment time deployment script could use logic deployment script uses determine appropriate host inside dgeni think approach straightforward thoughts gkalpak igorminar", "d": "1/2018"}, {"body": "approach sounds fine ideally part build step ca nt think straight forward way deployment sgtm", "d": "1/2018"}, {"body": "nt need site map domain main angulario ones robotstxt set disallow crawling fine hardcoded domain name sun jan george kalpakas notifications githubcom wrote approach sounds fine ideally part build step ca nt think straight forward way deployment sgtm receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "nt need site map domain main angulario doh implemented remove since adds unnecessary complexity tooling leave functionality future wait goahead removing", "d": "1/2018"}, {"body": "created second commit strips replacing functionality", "d": "1/2018"}, {"body": "mhevery manughub please add ivy backlog", "d": "1/2018"}, {"body": "igorminar added ivy backlog", "d": "1/2018"}, {"body": "add reproduction issue", "d": "1/2018"}, {"body": "working think sort array somewhere second", "d": "1/2018"}, {"body": "jotatoledo reproduction steps inside demo nt know stupidity expected track trackby index would give angular needed track objects manage subscriptions properly", "d": "1/2018"}, {"body": "also note two really strange bugs real code losing reference saving setrides latest json deleted ride changed values subscriptions ended recreating entire form onchanges instead using", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "ericmartinezr thanks answer reminder issue raisied issue stackoverflow", "d": "1/2018"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines", "d": "1/2018"}, {"body": "actually running problem created library ngpackagr used npm link include brand new angularcli project angular soon included module library got compilation error said library massive including one would nt feasible see knock bare library see still end result maybe angular mismatch library targets angular", "d": "1/2018"}, {"body": "also ran problem upgrading setup little funky working getting ngpackagr working big library issues meantime long time using link tsconfigjson file example app import like modulets file defines module since mylibrary outside tree main app also keep uptodate packagejson file library fine eventually anyway correctly packaged module fine release get error atloader mylibrarynodemodules redeclare blockscoped variable ngdevmode error atloader nodemodules redeclare blockscoped variable ngdevmode apparently tries read something twice expects hope helps stuck moment week vacation hopefully resolved return think duplicated simplest setup described manage get time catch flight make tiny repo reproduces hope sufficient make someone go aha know update forgot say remembered update angular library working fine updated angular main app everything hunky dory tried compile aot first time using angularcompilerplugin ngtoolswebpack nt working different issue dawned update angular libraries mylibrary level get error jit drop libraries back work move forward", "d": "1/2018"}, {"body": "problem downgrading solved", "d": "1/2018"}, {"body": "similar maybe related problem closure compiler bundle browser module advancedoptimizations declared", "d": "1/2018"}, {"body": "downgrading solved problem", "d": "1/2018"}, {"body": "ran issue today case problem one libraries direct dependency installing library actual ngproject also created nodemodules folder two versions project declare ngdevmode global scope resulting error message described issue", "d": "1/2018"}, {"body": "making extern worked closure compiler", "d": "1/2018"}, {"body": "believe actragschuster explanation suggestion declare angular umbrella dependencies provided related following suggestions error cleared note also using ngpackagr create npm package", "d": "1/2018"}, {"body": "ngmodule imports httpmodule inmemorywebapimoduleforroot inmemorydataservice missing httpmodule cause issue", "d": "1/2018"}, {"body": "thanks phlars falling back worked peerdependencies solution valid situation", "d": "1/2018"}, {"body": "closing proper repro would really help someone could create new issue proper repro thanks", "d": "1/2018"}, {"body": "trying find time manage post", "d": "1/2018"}, {"body": "thanks crowmagnumb please post open new issue monitor closed issues", "d": "1/2018"}, {"body": "ok created new issue repo showing error", "d": "1/2018"}, {"body": "opening issue realized error may actually helpful since case explained would impossible since class apply element sure bug anymore", "d": "1/2018"}, {"body": "personnaly would want compiler tell case impossible error", "d": "1/2018"}, {"body": "related angular behavior observe", "d": "1/2018"}, {"body": "thanks alexzuza open bug microsoft", "d": "1/2018"}, {"body": "expected run dev mode see rartionale cd executed twice make sure loop", "d": "1/2018"}, {"body": "function execute times sorry thought mistake de victor berchet notifications githubcom enviado viernes de enero de para angularangular cc lenin author asunto angularangular ngfor iterate function called many times expected run dev mode see rartionale cd executed twice make sure loop receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "sure best place comment also found issue challenge thanks raising issue", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "major release ask component owner remove experimental flag apis around version would rephrase ask component owner review existing experimental flags remove flag api considered stable sure around release good indicator api stability", "d": "1/2018"}, {"body": "right", "d": "1/2018"}, {"body": "using es example take look stackblitz locale change formatting currency pipe change currency set currency code want use first parameter currency pipe see documentation locale never change currency code use makes sense value locales write differently english spanish", "d": "1/2018"}, {"body": "one implementation use http request highly suggest u try import observable rxjsobservable import httpclient angularcommon import yourmodel yoursource service fetchdata observable use service controller html datafield", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "mhevery moment js used heavy date manipulations required", "d": "1/2018"}, {"body": "yes thinking think change tests programmatically get timezone adjust expected values accordingly", "d": "1/2018"}, {"body": "similar said idea url may come old site used correctly redirected", "d": "1/2018"}, {"body": "added list url closing dupe", "d": "1/2018"}, {"body": "sorry many tabs open posted wrong repo deleted", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "dcesiel use property route", "d": "1/2018"}, {"body": "thanks mlcmlapis fixed would connected two configuration options based angular docs", "d": "1/2018"}, {"body": "thought issue solved spoke soon take look stackblitz set enabletracing false runguardsandresolvers always yet consolelog appcomponent fires click", "d": "1/2018"}, {"body": "dcesiel way use bit different always sense relevant component level show stackblitz demo see console repeated clicking button always runs guard related resolver also subscription observable always returns actual data resolver changing similar behavior subscription observable using route like subscription also runs changed means routing example component reinstantiated repeated clicking button runs also guard related resolver subscription observable returns data resolver switching routes difference always returns different number random returns always number logic behavior case described", "d": "1/2018"}, {"body": "multiple actors rebasing pr always bad idea rebasing general bad loose track history ok someone works isolation pr rather merge master branch", "d": "1/2018"}, {"body": "vicb nt understand last sentence please clarify usecase workflow following send small change fixes docs pr fails infrastructure issue travis since sent pr infra issue worked around master nt want go rebase pr manually want robot nt want happen automatically want human add label trigger operator workflow especially useful small prs outside contributors hard get rebase prs long pr rebases cleanly nt understand would lose history problems merge conflict robot detect comment issue human need take clarify concern please", "d": "1/2018"}, {"body": "checked briefly would require checking branch rebase git cli using forked processes seems like complicated thing firebase functions", "d": "1/2018"}, {"body": "ok case let focus workflows first please leave notes help us pick issue future thanks mon jan olivier combe notifications githubcom wrote checked briefly would require checking branch rebase git cli using forked processes seems like complicated thing firebase functions receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "vickydp simple reproduction demo required use", "d": "1/2018"}, {"body": "fwiw works fine projects angular beta several lazy loaded modules turn load lazy loaded child modules", "d": "1/2018"}, {"body": "please open new issue repro thanks", "d": "1/2018"}, {"body": "current optional chaining proposal returned value would always regardless input expression angular keep consistency", "d": "1/2018"}, {"body": "already significantly different proposal throws specification nonsensical would always throw either made statically illegal made mean instead makes sense never legal believe right meaning recommend standards committee", "d": "1/2018"}, {"body": "alexeagle even merge label applied tests failing travis pullapprove labels", "d": "1/2018"}, {"body": "good question merits discussion initially applied label otherwise green pr think probably better described sad finally get pr green travis see go yellow person ready merge harm testing internally many failures see travis distinct tests run disjoint two makes overall pr process faster run two slow ci systems parallel downsides might use testing resources impressed much already abused", "d": "1/2018"}, {"body": "environment node os windows pro angular", "d": "1/2018"}, {"body": "angular issue caused ngtoolswebpack already fixed", "d": "1/2018"}, {"body": "oh thanks docs said works fine update", "d": "1/2018"}, {"body": "verified local update changes waiting version update", "d": "1/2018"}, {"body": "dup", "d": "1/2018"}, {"body": "see broken live example links something fix", "d": "1/2018"}, {"body": "realised things also happen api requests urls set datagroups static assets stop api server get open check network tab sure working fine point past think wondering might rather issue cli instead", "d": "1/2018"}, {"body": "error online see lot things loaded service worker turn online nothing loaded", "d": "1/2018"}, {"body": "seems like disable sw registration already registered offline functionality works fine", "d": "1/2018"}, {"body": "apply pull requests issues", "d": "1/2018"}, {"body": "ah one important thing milestone labels issue change reevaluate rules issue currently milestone move backlog matches criteria issue already backlog milestone longer matches criteria backlog eg label missing moved backlog milestone state milestone default untriaged state", "d": "1/2018"}, {"body": "code ready deployed need add permissions bot readwrite issues receive events issue labeled", "d": "1/2018"}, {"body": "node code review also noticed comp missing spec ocombe added", "d": "1/2018"}, {"body": "olivier use ref xxx instead close xxx fix xxx future nt want commit close issue yet fri jan pm olivier combe notifications githubcom wrote reopened receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "x bot nt seem triaging new issues x part issue also triage old issue nt done ideally robot reevaluate preexisting issues redeployment ensure state corresponding rule configuration even better would robot reeavluated also redeployment config repo changed", "d": "1/2018"}, {"body": "config merged reading milestone id config file string github expects number fixed code nt throw error anymore nt seem set milestone either", "d": "1/2018"}, {"body": "ok points done point reevaluate also remove issues backlog happens check new issues match new rules", "d": "1/2018"}, {"body": "triaged assigned backlog great removed type bug label issue remained backlog issues match backlog criteria backlog please look thanks", "d": "1/2018"}, {"body": "type label missing still backlog", "d": "1/2018"}, {"body": "similarly someone manually assigns issue backlog milestone issue nt qualify kicked", "d": "1/2018"}, {"body": "ahhh nt say rules earlier ok add auto remove function", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "careful logic programmer going grocery store wife tells buy gallon milk eggs buy dozen programmer goes buys everything drives back house upon arrival wife angrily asks get gallons milk programmer says eggs", "d": "1/2018"}, {"body": "tue jan olivier combe notifications githubcom wrote careful logic programmer going grocery store wife tells buy gallon milk eggs buy dozen programmer goes buys everything drives back house upon arrival wife angrily asks get gallons milk programmer says eggs receiving modified openclose state reply email directly view github mute thread", "d": "1/2018"}, {"body": "vicb suggesting dropping hi since noice kind agree", "d": "1/2018"}, {"body": "need automated notification ui bot label message already know bot funny much polite informative", "d": "1/2018"}, {"body": "making super explicit nt hurt like greeting since helps establish friendly tone would even better could use name eg prevents message sounding robotic", "d": "1/2018"}, {"body": "vicb jelbourn", "d": "1/2018"}, {"body": "sgtm", "d": "1/2018"}, {"body": "duplicate fixed days ago noticed behavior last days", "d": "1/2018"}, {"body": "closing think fixed", "d": "1/2018"}, {"body": "seems related recent issue angularcli", "d": "1/2018"}, {"body": "please file issue", "d": "1/2018"}, {"body": "angular team changed logic metadata created invoking decorators longer dependent reflect api try", "d": "1/2018"}, {"body": "alexzuza thanks", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "heya nt know helps issue reminds something happened angulario roughly timeframe fix application specific though might problem sure check last comment given nt changed problematic code months experienced significant loss traffic originating search engines starting around december believe something changed crawlers period time cased site deindexed resulted traffic loss", "d": "1/2018"}, {"body": "valid email discussed many times want report problem unexpected class please fill issue template provides minimal reproduction", "d": "1/2018"}, {"body": "problem think related commit", "d": "1/2018"}, {"body": "problem broke live demo running front people event looked pretty stupid gt", "d": "1/2018"}, {"body": "fixed locking versions packagejson rather risking semver pulling latest version", "d": "1/2018"}, {"body": "issue believe supplied type implements appears line downgrading introduction solved issue", "d": "1/2018"}, {"body": "done clean checkup repository updating angular seems fix issue", "d": "1/2018"}, {"body": "problem version epsilonqc deleting angular folder node modules directory running npm install last version works", "d": "1/2018"}, {"body": "confirmed also happening experienced unexpected failures ci pipelines repository already said lock angular version order keep working please fix", "d": "1/2018"}, {"body": "error happening using devdependencies angularcli angularcompilercli angularcore uninstall angularcli g remove nodemodule folder", "d": "1/2018"}, {"body": "exact issue attempting ng build angular packages locked installed packages worked thanks workaround theprodmustgoon", "d": "1/2018"}, {"body": "tried delete nodemodules install still nt work error packagejson dependencies angularanimations angularcdk angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter ngbootstrapngbootstrap rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript tried downgrade still nt work fix error", "d": "1/2018"}, {"body": "issue due packagejson versions angularcommon gt angularcompiler gt angularcore gt angularforms gt angular gt angularplatformbrowser gt angularplatformbrowserdynamic gt since want support angular facing problem change dependencies gt gon na fine face problem earlier", "d": "1/2018"}, {"body": "reproduce repo", "d": "1/2018"}, {"body": "jialipassion repo reproduces error ps bencuk pointed works fine rolling back versions thank benc", "d": "1/2018"}, {"body": "experiencing issue getting attention", "d": "1/2018"}, {"body": "closing duplicate", "d": "1/2018"}, {"body": "nt think possible assign form group twice get rid deeper one", "d": "1/2018"}, {"body": "assign formgroup multiple times required put textbox component like submit form first name component code first name", "d": "1/2018"}, {"body": "see problem would better solved flag model", "d": "1/2018"}, {"body": "agree adding submitted flag formgroup better option already saw mentioned opening issue open issue track feature change adding submitted flag formgroup better leave open till functionality implemented", "d": "1/2018"}, {"body": "prasannapattam right need dedicated issue think alternative solution use case one might confusing opened new one anyone interested track", "d": "1/2018"}, {"body": "error plnkr specifically creating embedded plnkr programmatically temporary workaround rightclick copy url paste address bar replace example would become", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "issue new occurrence let keep open fixed", "d": "1/2018"}, {"body": "tried fixed", "d": "1/2018"}, {"body": "goodwine feature supported current implementation leaving open improve doc improve error message", "d": "1/2018"}, {"body": "want process input change one second use rxjs debounce operator integrated angular would probably similar mechanism would much performance improvement", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "close dup", "d": "1/2018"}, {"body": "believe encountering related issue call query params within method overriden event triggering route back route queryparams current workaround use delay call till", "d": "1/2018"}, {"body": "hard investigate without reproduction bourey could create preferably minimal grin reproduction either repo live demo case helps stackblitz playgrounds ngupgradestatic ngupgradelite wonder related jasonaden marked regression previous version known work", "d": "1/2018"}, {"body": "gkalpak took hours get concise reproduction see issue experiencing stackblitz example complicated special bootstrapping believe issue clearly demonstrated also tested stackblitz angular versions issue remained", "d": "1/2018"}, {"body": "gkalpak thought regression turns previously broken changing label", "d": "1/2018"}, {"body": "also fix went make change ngupgrade injectorget rootscope locationchangesuccess next string string state gt const url documentcreateelement urlhref next currently testing change internally make sure nt open issues", "d": "1/2018"}, {"body": "igorminar jules suggested follow google dev doc guidelines guidelines complete angular large investment timeexpertise one thing would mean updating angular guidelines use sentence caps page title doc page nav titles experience sentence caps become industry standard inpage titles tech doc agree style change", "d": "1/2018"}, {"body": "looks fixed see", "d": "1/2018"}, {"body": "yes fixed tue jan brian douglas notifications githubcom wrote looks fixed see receiving assigned reply email directly view github mute thread", "d": "1/2018"}, {"body": "confirmed fixed", "d": "1/2018"}, {"body": "mjomaa look escpecially", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation try angularcli repo", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "format defined cldr would create pipe change format", "d": "1/2018"}, {"body": "extra commas required see elision", "d": "1/2018"}, {"body": "extra commas valid keep undefined values array avoid duplication data optimization", "d": "1/2018"}, {"body": "give us version typescript version webpack also generate minimal reproduction project github use great tested new cli project builds fine version cli node angular windows", "d": "1/2018"}, {"body": "project sent private narrowed error markdown directive since imported library error angular something code breaking webpack optimizer somehow closing issue since problem angular source code", "d": "1/2018"}, {"body": "exactly issue nt use library tried angular cli angular", "d": "1/2018"}, {"body": "dup", "d": "1/2018"}, {"body": "consider creating pr change", "d": "1/2018"}, {"body": "chuckjaz confirm issue", "d": "1/2018"}, {"body": "aware filed bug typescript", "d": "1/2018"}, {"body": "reading right says set typescript nt even final yet seems like long time broken tools", "d": "1/2018"}, {"body": "indeed work way described afaict short demo hard tell might problem case without actual reproduction feel free modify example reproduce issue post back closing since everything seems work expected", "d": "1/2018"}, {"body": "currency symbol english defined cldr data working supporting providing localized symbols currencies see closing one since duplicate", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "eric martinez thank much response suggestion regards anees azam eric martinez notifications githubcom sent wednesday january pm angularangular cc aneesazam author subject angularangular conversion json date date hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag angular wondering nt resolve support issues via issue tracker please check explanation receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "really one comment hint", "d": "1/2018"}, {"body": "ngelementconstructoris ngelementconstructorname guess shorter nt think really matters much polymer folks moving away remove ngelementconstructor upgrade method still useful cases ce api nt available imho useful even using ce directly way simpler componentfactoryresolver shenanigans support using component angular templates exporting custom element app nt think renaming selectors good idea easily work around simply importing ngmodule components declared ngmodules turning customelementsschema module uses ces means practice ideal world really one angular component per ngmodule per angular element allows go compiler get compiled ngfactories work standalone without global knowledge tradeoff verbose longer term custom element angular otherwise typecheckable vanilla files since public api custom element props attributes events expressed without additional metadata see remove second signature registerascustomelements probably fine ideally drop need module ref think ways ivyland expect move closer something like ts const whatever defineelement selector whatever template fn factory factoryfn customelementsdefine whateveris whatever ts customelementsdefine someother whatever", "d": "1/2018"}, {"body": "ngelementconstructoris ngelementconstructorname guess shorter nt think really matters much polymer folks moving away nt think matters much probably matter whenif add support customized builtin elements example want custom element extends define use like case element defined name tag selector would nt use would carefull encourage patterns like may break future support using component angular templates exporting custom element app nt think renaming selectors good idea easily work around simply importing ngmodule components declared ngmodules turning customelementsschema module uses ces would mean possible use custom element angular component nt sound like good idea would also mean consumer responsible knowing component dependencies include manually example usecase mentioned original comment consumer interested custom element must still load custom element depends automate maybe reasonable firstversion tradeoff nt feel strongly pointing means practice ideal world really one angular component per ngmodule per angular element allows go compiler get compiled ngfactories work standalone without global knowledge tradeoff verbose top head another tradeoff wo nt share instance unless explicitly wired like contrast custom elements come single share instance", "d": "1/2018"}, {"body": "see observable emitting value add consolelog problem data source", "d": "1/2018"}, {"body": "see observable emitting two values first correctexpected one second emit previous value case mentioned nt get emits two values", "d": "1/2018"}, {"body": "behavior without using async pipe since issue angular raise related project support channels information found contributing guide", "d": "1/2018"}, {"body": "well subscribe store directly get expected emitted value", "d": "1/2018"}, {"body": "github issues bug report feature request rxjs tutorials please respect contributing guide quick answer order matters", "d": "1/2018"}, {"body": "think issue async pipe subscribing observable inside component works fine subscribing via async pipe inside component inside template via async pipe", "d": "1/2018"}, {"body": "pschmoek wo nt work subscribe name value already said", "d": "1/2018"}, {"body": "trotyl really interesting nt matter since ngoninit runs sychronously subscribe handlers invoked later micro tasks async pipe working initialized ngoninit nt case correct wrong", "d": "1/2018"}, {"body": "pschmoek intrinsic evil synchronous bidirectional event stream specific angular part wo nt suggest depending kind vulnerable code angular view rendering happens consider order combing pipe expected", "d": "1/2018"}, {"body": "sunilpes theme dynamic loading lazy loaded modules discussed several issues go", "d": "1/2018"}, {"body": "plunker seem work could provide app stackblitz", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "expected behavior forms least one enabled control longer considered disabled push enabled control enables form might try pushing disabled control like disabled", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "ericmartinezr hello close bug seems solution problem yet tried angular animations animations animation happening inside component component display set none animation automatically stop revisit component everything set default problem trying keep animation going background component hidden display open see progress animation made idea would appreciate suggestion asked questions many people clue yet", "d": "1/2018"}, {"body": "certain bug would really nice respect issue template one deleted fill information required especially minimal reproduction bug", "d": "1/2018"}, {"body": "ok added template please review problem solution please let know thanks", "d": "1/2018"}, {"body": "see", "d": "1/2018"}, {"body": "thomhehl simple reproduction demo necessary attached project simply right way demonstrate potential problem nt suppose anybody install locally", "d": "1/2018"}, {"body": "mlcmlapis shall create demo", "d": "1/2018"}, {"body": "thomhehl use super easy fast demonstrate simple demo problem", "d": "1/2018"}, {"body": "mlcmlapis ok created put code ca nt figure put indexhtml make whole thing work lend hand please", "d": "1/2018"}, {"body": "thomhehl hmm trying put selector main component enough main bootstrapped component btw sure problem possible generalize still concentrate login logic", "d": "1/2018"}, {"body": "mlcmlapis yes thanks recreating issue comment two input boxes message shows uncomment message disappears appears bug", "d": "1/2018"}, {"body": "thomhehl seems occur using inputs properties binding nt exist setting credentials value containing solves issue", "d": "1/2018"}, {"body": "skreborn credentials defined logincomponentts correct", "d": "1/2018"}, {"body": "thomhehl yes skreborn right console see", "d": "1/2018"}, {"body": "mlcmlapis maybe need initialize values ngoninit", "d": "1/2018"}, {"body": "thomhehl see updated comment initialize define declaration already", "d": "1/2018"}, {"body": "thomhehl ca nt bind undefined property", "d": "1/2018"}, {"body": "skreborn mlcmlapis initalized values nt appear changed anything", "d": "1/2018"}, {"body": "nt declared object though anyhow nt angular fault support request instead bug report still trouble figuring please open issue stackoverflow close", "d": "1/2018"}, {"body": "thomhehl initialized property continue nt sense please careful using first try explain step step etc believe chance bug", "d": "1/2018"}, {"body": "mlcmlapis skreborn seems done thanks help", "d": "1/2018"}, {"body": "update igorminar discussed offline test description read clarify", "d": "1/2018"}, {"body": "pr tomorrow missing test", "d": "1/2018"}, {"body": "nt think missing test test description confusing sounded like multilinesingleline regexes instead string starts etc also nt clear whether string referred test string pattern string", "d": "1/2018"}, {"body": "ok sorry missunderstanding better coder english speaker provide full coverage code could add tests using like using like", "d": "1/2018"}, {"body": "request add work bullet point addressing issue updateon debounce support input", "d": "1/2018"}, {"body": "angular supported new version typescript supported mode ts causes lot mess angular code reported microsofttypescript solutions discussed nothing seems included release plans", "d": "1/2018"}, {"body": "thanks cyrille discuss issue tue jan cyrille tuzi notifications githubcom wrote angular supported new version typescript supported strict mode ts strictpropertyinitialization causes lot mess angular code reported microsofttypescript solutions discussed nothing seems included release plans receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "back taken system error wed jan karasu notifications githubcom wrote document appears removed receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "ooc since info already available github", "d": "1/2018"}, {"body": "speed release review meeting sit go commits merged since last release", "d": "1/2018"}, {"body": "limitation github api status api accepts messages characters maximum documented get following error solution link page see details possible bot need code", "d": "1/2018"}, {"body": "would possible link point super simple page listing issues detail eg without truncating grin", "d": "1/2018"}, {"body": "yes said possible bot need code templating system probot make possible need host anywhere else anything", "d": "1/2018"}, {"body": "wow missed last sentence previous comment", "d": "1/2018"}, {"body": "also hit issue found weird way properly clear invalid state validators returning reset error state get applied even truthy keys present", "d": "1/2018"}, {"body": "theory happens code transpile umd commonjs bundle nt seem like something backwards compatible fashion unless missing something prefer drop whole abstraction favor inline going gated inlining factories nt need rewrite making cli smart enough pick imports like rewrite", "d": "1/2018"}, {"body": "personally prefer dropping abstraction well nt considered implications option much cli could smart enough pick imports think already", "d": "1/2018"}, {"body": "understanding available targeting requirement ts meaning support", "d": "1/2018"}, {"body": "big problem applications proper issue libraries packaging concerns angular codebase could consumed tooling understood know also load statement referencing formats like umd commonjs would provided externally nt think transpiles anything", "d": "1/2018"}, {"body": "toxicable dynamic import restriction module types except allowed example source", "d": "1/2018"}, {"body": "trotyl right mistake confused two however would still breaking change since people use since cli default", "d": "1/2018"}, {"body": "toxicable check restriction meant source files compilation declaration files typechecking emited pattern indicating dynamic import", "d": "1/2018"}, {"body": "oh interesting point maybe would fine make change", "d": "1/2018"}, {"body": "great breakdown trotyl", "d": "1/2018"}, {"body": "filipesilva still compatible webpack", "d": "1/2018"}, {"body": "igorminar webpack supports primary code splitting construct nt listed docs even supported since webpack betas", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation circular dependency google also add constructor solve problem", "d": "1/2018"}, {"body": "thank answer time figure fell circular dependency edit stupid defined import sorry wasting time already posted giving correct answers", "d": "1/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "already looked info nt find solution particular problem", "d": "1/2018"}, {"body": "zerokk see logical problem lazy loaded module time depend simply sense", "d": "1/2018"}, {"body": "mlcmlapis yeah post new info something let explain changed main component achievedcombinedmodule name thing main components called appcomponent changed selector class name app began compiling got another problem see mainmodule main component template quite simple href points module triggers route module click get following error falling back main page error uncaught promise error staticinjectorerror appmodule applicationref gt ngzone staticinjectorerror platform core applicationref gt ngzone nullinjectorerror provider ngzone nullinjectorprototypeget webpackinternal resolvetoken webpackinternal tryresolvetoken webpackinternal staticinjectorprototypeget webpackinternal resolvetoken webpackinternal tryresolvetoken webpackinternal staticinjectorprototypeget webpackinternal resolvengmoduledep webpackinternal ngmodulerefprototypeget webpackinternal resolvengmoduledep webpackinternal createclass webpackinternal createproviderinstance webpackinternal initngmodule webpackinternal ngmoduleref webpackinternal createngmoduleref webpackinternal debugcreatengmoduleref webpackinternal ngmodulefactoryprototypecreate webpackinternal routerconfigloaderprototypeload lt webpackinternal mapsubscriberprototypenext webpackinternal subscriberprototypenext webpackinternal promiseobservableprototypesubscribe lt webpackinternal zonedelegateprototypeinvoke webpackinternal oninvoke webpackinternal zonedelegateprototypeinvoke webpackinternal zoneprototyperun webpackinternal scheduleresolveorreject lt webpackinternal zonedelegateprototypeinvoketask webpackinternal oninvoketask webpackinternal zonedelegateprototypeinvoketask webpackinternal zoneprototyperuntask webpackinternal drainmicrotaskqueue webpackinternal zonetaskinvoketask webpackinternal invoketask webpackinternal globalzoneawarecallback webpackinternal stack trace resolvepromise webpackinternal resolvepromise webpackinternal scheduleresolveorreject lt webpackinternal zonedelegateprototypeinvoketask webpackinternal oninvoketask webpackinternal zonedelegateprototypeinvoketask webpackinternal zoneprototyperuntask webpackinternal drainmicrotaskqueue webpackinternal zonetaskinvoketask webpackinternal invoketask webpackinternal globalzoneawarecallback webpackinternal causing errors definitely descriptive", "d": "1/2018"}, {"body": "definitely bug going trying fix previous bug reverted back changes check could get error working changes said last post still makes sense error happens randomly giving low information module metadata missing add fix", "d": "1/2018"}, {"body": "zerokk create github repo minimal code reproduce", "d": "1/2018"}, {"body": "alexzuza sorry doubts project setup ask anyways think pretty well explained", "d": "1/2018"}, {"body": "zerokk sorry exact case usually say gitter channel possible guess exactly locally believe true hundreds cases people willing bet sure bug issuse finally nt see mistake misunderstanding typo big effects fact unfortunately negative many hours spent something could explained several minutes", "d": "1/2018"}, {"body": "create managed fix problem literally putting one project inside another really silly thing pulled modules file components put another project containing actual main module perform routing everything started work", "d": "1/2018"}, {"body": "think reason async emitter overlaps typing causes infinity loop", "d": "1/2018"}, {"body": "seems solve issue thanks", "d": "1/2018"}, {"body": "result correct dom without workaround find work way works designed least feature request", "d": "1/2018"}, {"body": "alexzuza mentioned works designed also get right plunker want reproject said use case legit little known angular construct attribute defines would selected", "d": "1/2018"}, {"body": "alexzuza based nested content projection works shadowdom plunker chrome shadowdom afaik angular content projection emulated style encapsulation modeled look like deviation shadowdom behaviour unexpected vicb thanks info", "d": "1/2018"}, {"body": "kolkov custom components tags use attribute components directives would", "d": "1/2018"}, {"body": "mlcmlapis try use solution project build example nt see extra tags build project see tags nt undestand", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "jotatoledo thanks interesting informative read manual still understand extra tags come case get rid dropdown lists work", "d": "1/2018"}, {"body": "article explains clear way archieve looking plus mlcmlapis already gave hint close falls within category support", "d": "1/2018"}, {"body": "jotatoledo put question differently code compile differently case extra tags second appear difference use another router", "d": "1/2018"}, {"body": "kolkov related sure talking see difference recommendation jumped directly middle enhanced template missed necessary information understand fully", "d": "1/2018"}, {"body": "finally figured pay attention directive removes unnecessary tags understand arise", "d": "1/2018"}, {"body": "kolkov yep effect direct manipulation hierarchy elements dom used specific reasons angularic also general recommendation", "d": "1/2018"}, {"body": "mlcmlapis thank much canonical way would advise using one described", "d": "1/2018"}, {"body": "another thing routed components dont selectors", "d": "1/2018"}, {"body": "kolkov yes specific cases need avoid adding custom component tags dom example structures called attribute components take roles also play important roles many angular abstraction constructs also use fully programmatic way creating components many times combined dynamic loading called lazy loaded modules", "d": "1/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "1/2018"}, {"body": "question relevant even look closely like issue support", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "reported friend mine suggested approach works however still mystery original case template updated recalculated getter host binding", "d": "1/2018"}, {"body": "waterplea could provide information reproduce change browser size ca nt reproduce", "d": "1/2018"}, {"body": "well mean ca nt reproduce open spoiler clicking showhide button make browser window smaller blue rectangle text gets taller text still visible reproduce first open spoiler clicking showhide button text visible inside blue rectangle make page smaller either resizing browser dragging edge stackblitz preview pane text wrap lines blue rectangle stay height happen though blue rectangle increase height since recalculated see value spoiler height inside html put make sure recalculated", "d": "1/2018"}, {"body": "matsko", "d": "1/2018"}, {"body": "iayush simple reproduction problem needed", "d": "1/2018"}, {"body": "hi building app angular want redirect user back register page dashboard logouttherefore calling function logout button click clearing cookies using thisrouternavigate register navigate backbut happens url changes get blank screen used consolelog check ngonint called register component see called jan milo\u0161 lapi\u0161 notifications githubcom wrote iayush simple reproduction problem needed receiving mentioned reply email directly view github mute thread notice information contained email message andor attachments may contain confidential privileged information intended recipient dissemination use review distribution printing copying information contained email message andor attachments strictly prohibited received communication error please notify us reply email telephone immediately permanently delete message attachments", "d": "1/2018"}, {"body": "iayush simple reproduction problem needed ca nt think reproduction demo somebody create", "d": "1/2018"}, {"body": "property controls update valid state value affect change detection rest component might still want react input changing even though nt want update returns update strategy abstractcontrol ie event control update", "d": "1/2018"}, {"body": "understand comment logically inputcomponent want update emit new value start changedetection events monitoredbound seems waste time", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "mean like something else mind", "d": "1/2018"}, {"body": "ericmartinezr exactly looking thank nt clear docs supported use viewchild get first element directive matching selector view dom", "d": "1/2018"}, {"body": "leningsv simple reproduction needed", "d": "1/2018"}, {"body": "elaborate example requested n errors point dependence objects levels work working multiple select url test de milo\u0161 lapi\u0161 notifications githubcom enviado lunes de enero de para angularangular cc lenin mention asunto angularangular ngfor support multiple nested levels leningsv simple reproduction needed receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "cid perspective create object dynamically independent know error occurs thank much hope help de lenin samaniego vizcaino leningsv hotmailcom enviado lunes de enero de para milo\u0161 lapi\u0161 angularangular angularangular cc mention asunto angularangular ngfor support multiple nested levels elaborate example requested n errors point dependence objects levels work working multiple select url test de milo\u0161 lapi\u0161 notifications githubcom enviado lunes de enero de para angularangular cc lenin mention asunto angularangular ngfor support multiple nested levels leningsv simple reproduction needed receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "leningsv hmm problem angular nested basic fact js objects share references inner objectsarrays even references first level different whole case bit unreadable using undefined arrays initializing relations using type construct best idea finally reason true reference operands objects arrays also objects point view javascript compares internal references equal operands refer object memory", "d": "1/2018"}, {"body": "hi case moment using communication components lists independent resources solve problem would like know another way something angle force send list send unique thanks de milo\u0161 lapi\u0161 notifications githubcom enviado lunes de enero de para angularangular cc lenin mention asunto angularangular ngfor support multiple nested levels leningsv hmm problem angular nested ngfor basic fact js objects share references inner objectsarrays even references first level different whole case bit unreadable using undefined arrays initializing ngmodel relations finally reason listapadre canalesventa listapadre canalesventa true reference receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "leningsv looked shared reference line true cycles reference try separate ones like example using problem disappears", "d": "1/2018"}, {"body": "leningsv solution could pipe makes array immutable", "d": "1/2018"}, {"body": "leningsv hmm trying make immutable data cycle luck pipe getter except hard coded declaration", "d": "1/2018"}, {"body": "leningsv wider discussion looks solutions switching whole case completely reactive forms principle create model structure first including immutable lists tag linking structure template elements create programmatically shadow copy hook principle hard declaration array lists tag generated via immutable list looks one possible get immutable array list tag iteration", "d": "1/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "1/2018"}, {"body": "please add repro issue", "d": "1/2018"}, {"body": "yes add reproduction plunkr stackblitz thanks", "d": "1/2018"}, {"body": "expected behavior disabled control values included aggregate form values match native form behavior see docs", "d": "1/2018"}, {"body": "thank pointing kara one last question controls disabled values included parent aggregate value confusing behavior documentation nt clear expected behavior", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "code throw guard canactivate catch first place btw dont use issue tracker general questions see", "d": "1/2018"}, {"body": "hi jotatoledo thanks answer found need trying build general errorhandler app catches server client errors reacts case route resolve error would like redirect page data route available way comment would need implement catch every route resolve injecting router redirect page nt get happening httperrorresponse data available server angular throws uncaught promise error see thumbs guess missing something go investigate thanks", "d": "1/2018"}, {"body": "angular producing error ts error therefore change message example", "d": "1/2018"}, {"body": "toxicable true ts able associate message correct file line number angular compiler leaves dark", "d": "1/2018"}, {"body": "ok asking change source mapping", "d": "1/2018"}, {"body": "last two typos covered", "d": "1/2018"}, {"body": "thx jnizet heart noticed issue submitting pr several minor guide fixes mostly guides trotyl incorporated jnizet issues pr go see missed", "d": "1/2018"}, {"body": "gkalpak think continue first remove conflict parts later afaik official ones always get merged quickly would better users", "d": "1/2018"}, {"body": "thx trotyl merked merge picked caretaker soon feel free ping review update pr", "d": "1/2018"}, {"body": "obtin want rude read latest discussion using issue channel please", "d": "1/2018"}, {"body": "mlcmlapis updated issue thankyou", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation angular repo angularjs try", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "dynamically added control form array appear capture changes unless non dynamically added control edited works fine", "d": "1/2018"}, {"body": "implementation nt correctly depict described see sun jan pm fabian wiles notifications githubcom wrote dynamically added control form array appear capture changes unless non dynamically added control edited works fine app receiving authored thread reply email directly view github mute thread kwasi gyasiagyei part edged crowd mobile email kwasi edgedagency skype kwasigyasiagyei web", "d": "1/2018"}, {"body": "nested form see", "d": "1/2018"}, {"body": "problem persists even form nested use formarrayname obtain control top level form tried multiple variations behavior almost form group recognizes dynamically added controls", "d": "1/2018"}, {"body": "minimal reproduction could provide reproduction without nesting formgroup", "d": "1/2018"}, {"body": "problem updated use still behavior would still like remove nesting completely", "d": "1/2018"}, {"body": "replaced minimal reproduction", "d": "1/2018"}, {"body": "awesome thanks see issue push controls obtained formarray updated online stackblitz code working version correctly tracks updates control value", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "definitively angular bug likely missing one bootstrap dependencies jquery bootstrap js might consider using one native integration bootstrap angular ex", "d": "1/2018"}, {"body": "pkozlowskiopensource thank reply one week perfectly works course know choices limited using simple bootstrap ng bootstrap reasons important days worked countinously updating packagejson angular dependencies therefore thought maybe problem coming angular trotyl jotatoledo ericmartinezr know important vote issue sorry everybody clever smart profession like better things", "d": "1/2018"}, {"body": "personally downvoted cause didnt provided sort reproduction issue plus isnt angular related issue", "d": "1/2018"}, {"body": "trotyl jotatoledo ericmartinezr accept reproduction like plunker offered could provide access repository much effort anyone clone npm install know problem angular related one sorry guys also developer also use git somebody ask something never downvote question ca nt comprehend someone ass got problem suppose guys angular folks think good introduction user uses product course right vote personally mean matter world better place voting seriously suppose bored guys job boring", "d": "1/2018"}, {"body": "woteska simply true nt prepare simple form reproduction stackblitz plunker means anybody spend many times time even understanding exactly problem multiply number people number issues see simple reproduction important preparing simple reproduction also means many cases problem disappear author finds problem finds related angular", "d": "1/2018"}, {"body": "know problem angular related one refer several support channels described contributing stated issue template github channel support request suppose guys angular folks normal user currently people watching repo would noticed kind updates downvote signal letting others know need waste time checking one even support request duplication outofscope issues wo nt downvote wellformed filled issue template provided minimal reproduction", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation use angular wire class di meaning try inject token due resolved", "d": "1/2018"}, {"body": "ohhhh jesus mistake removed injectable everything ok generated service cli thank", "d": "1/2018"}, {"body": "trotyl ericmartinezr know important vote issue sorry everybody clever smart profession like better things", "d": "1/2018"}, {"body": "woteska nt take personally quick way signal issue typo misunderstanding response means new message subscribed angular repository", "d": "1/2018"}, {"body": "mlcmlapis think worst message user get message user ask anything stupid downvoted ask anything doubt", "d": "1/2018"}, {"body": "woteska absolutely channel issues support remember message sent people actually actually issues probably issues", "d": "1/2018"}, {"body": "mlcmlapis okay yes many massages please tell know user one bug", "d": "1/2018"}, {"body": "woteska point first step creating simple demo problem stackblitz plunker nothing step examines situation user side well avoid case something nt work bum new issue somebody find problem nt mean problems issues exist level balance", "d": "1/2018"}, {"body": "closing favor", "d": "1/2018"}, {"body": "patrickmichalina use syntax finally static path", "d": "1/2018"}, {"body": "mlcmlapis please read", "d": "1/2018"}, {"body": "patrickmichalina yep generally know nt mean relates actual principles static analyzable code angular aot compilation", "d": "1/2018"}, {"body": "import establish dependency statically analyzed however implementations may still able perform speculative fetching simpler cases like import foojs", "d": "1/2018"}, {"body": "believe angular lazy load case considered simple terms fetching locally defined modules analyzed aot compiler", "d": "1/2018"}, {"body": "patrickmichalina implemented webpack loader similar angularcli replace paths module names aot compilation similar syntax", "d": "1/2018"}, {"body": "delagen thanks check need one fusebox", "d": "1/2018"}, {"body": "need two transformers achieve lazyloading process wrap arrow function local exported function typescript export function return import lazymodule gt mlazymodule export const routes path loadchildren similar metadata lowering process must done aot compilation mapping corresponding typescript export function return import lazymodule gt mlazymodule export const routes path loadchildren typescript export function return import lazymodulengfactory gt mlazymodulengfactory export const routes path loadchildren real path mapping depends generate factory files still done aot compilation since dynamic import still typechecking first one valid feature request general metadata lowering support second one tooling specific belong repo still need write loader arrow function supported", "d": "1/2018"}, {"body": "extra note set able use ts tooling support moment namely cli instead use almost identical", "d": "1/2018"}, {"body": "appreciate feedback thanks great tips clear trotyl saying using format work current aot compiler js export function return import lazymodulengfactory gt mlazymodulengfactory export const routes path loadchildren", "d": "1/2018"}, {"body": "patrickmichalina yes use format replace loader build time works", "d": "1/2018"}, {"body": "related", "d": "1/2018"}, {"body": "ericmartinezr sure cause reduce nesting export interface itest test index string class appcomponent test itest testvalue works without error know", "d": "1/2018"}, {"body": "thx reporting issues addressed point would require slightly significant layout change kind difficult test regression since becomes really noticable lt wonder worth fixing petebacondarwin igorminar minimum supported screen width", "d": "1/2018"}, {"body": "russianlanguage layout bit fix shadows", "d": "1/2018"}, {"body": "whoops sorry bad repo", "d": "1/2018"}, {"body": "fwiw downloaded zip got exact error running angularclijson seems pointing nt exist note webpack used run server issue comes done prior running server webpack config looks fine guess expected angularcli webpack point different entry files server part vs", "d": "1/2018"}, {"body": "create mainserverts file src directory following code export appservermodule appappservermodule", "d": "1/2018"}, {"body": "anchor fixes problem", "d": "1/2018"}, {"body": "maxkorz would interested submitting pr fix styles defined nt think test eg tests would cool could grin", "d": "1/2018"}, {"body": "bit torn one already possible get updated value passing rather exporting passing eg could see people using pattern check old value concerned may removing functionality folks fix said end day confusing behavior esp comes stale control status possible people save copy old value thinking make change ensure mark breaking", "d": "1/2018"}, {"body": "probably best use encapsulation deprecated remove easy replacement", "d": "1/2018"}, {"body": "vicb comforting know use thanks", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github thanks issue need reproduction exact usecase though please create one", "d": "1/2018"}, {"body": "ravishivt works chrome firefox", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked find use case params may flattened inside resolvers working fix something else found please reproduce file new issue", "d": "1/2018"}, {"body": "afaict partly duplicate last time checked could nt find causing see could chrome bug", "d": "1/2018"}, {"body": "work notice return type note typecheck feature ts types checked following code example ngif gets transformed stamements ts able resolve types template type check complain case either refactor code last resort use see", "d": "1/2018"}, {"body": "workaround implemented", "d": "1/2018"}, {"body": "think simplest workaround would tell typescript nt looking workaround simply wanted warn angular team issue", "d": "1/2018"}, {"body": "think use arraysplice remove item array", "d": "1/2018"}, {"body": "error plunkr returns given nt exist", "d": "1/2018"}, {"body": "yep thanks maximelafarie forgot remove import appmodulets woking debug see duplicate call", "d": "1/2018"}, {"body": "laptransang expected validator would called least twice formcontrol created status correct relation initial value formcontrolname directive created status updated validator directives defined template looks like validator called third time part formgroupdirective global update tree may able prevent third time move things around need testing", "d": "1/2018"}, {"body": "yep thanks response kara think twice reasonable use debounce lodash decorator fix asynchronous call validate", "d": "1/2018"}, {"body": "think angular elements", "d": "1/2018"}, {"body": "snarun explain need way dynamic behavior static things ahead time", "d": "1/2018"}, {"body": "ahead time might work building composite solutions especially given context let explain look way building composite solution different teams composite app current context container app set functionalities form bundles per angular package format geographically separated teams responsible providing functionalities form bundles container app consumes based user actions individual bundles adheres osgi module standards associating metadata bundle like module component names ideal context container app download instantiate bundles per user request needs osgi specific metadata associated bundle know module component information angular framework nt support whereas javascript libraries supports eg react backbone etc current context forces container app compose bundles upfront using hard references route configurations web pack build process bundle optimizations followed deployment however feasible always especially comes build deployment efforts associated container app container app rebuild deployed even small change bundle need option create true dynamic plugins achieving objective creating highly modular angular systems isolates developers change empowers team agile allows organizations change way develop software", "d": "1/2018"}, {"body": "snarun thanks explanation interesting see problem way also agree arguments way angular going also right immediately nt need jit runtime compilation limitations need accept separate base angular standard libs outside apps avoid duplication separated base angular libs use umd modules loaded ondemand take even advantages caching proxy servers directly browsers caches optimize get minimum functionality needed apps use shared lib instead standard angular libs cli treeshake source code optimization angular elements probably shared lib base angular libs logical necessary version module plugins fully compiled aot mode bundled combinations using schema module bundle load bundles fully programmatically want ondemand using angular router presumptions keep metadata form metadata know directly apps code create separate remote abstraction logic probably registration records modules servers applications read metadata part bundles probably inefficient problem understand load", "d": "1/2018"}, {"body": "mlcmlapis thank separate base angular standard libs outside apps avoid duplication even also felt instance check ngmodule failing due duplication angular modules umd bundles selfcontained hence fails ngmodule instance check metadata part bundles probably inefficient problem understand load bundle owners register information bundle registry container app consumes info bundle registry cdn sort delivery mechanism need validate rest steps mentioned however clear available build techniques might help looks like going workaround also confirm whether angular going direction toxicable says wait angular elements", "d": "1/2018"}, {"body": "snarun ok fine bundle owners register information bundle registry container app consumes info bundle registry cdn sort delivery mechanism seeing could depend probably scope fully angular spa application using angular elements nt lot sense mixed environment yes also confirm whether angular going direction toxicable says wait angular elements many options closure compiler amp bundler rollup systemjs builder mention named ones clear available build techniques might help looks like going workaround", "d": "1/2018"}, {"body": "snarun look also", "d": "1/2018"}, {"body": "thank taken another approach writing compiler webpack run time causes issues cleverly hiding angular reference variables functional scopes scenario required modifications webpack libraries well angular package format apf libraries remains intact compiler transforms apf files run time webpack recognizable form", "d": "1/2018"}, {"body": "merge status bot ever differ pr status github plus merge label", "d": "1/2018"}, {"body": "nt think", "d": "1/2018"}, {"body": "nt proposing", "d": "1/2018"}, {"body": "go check failing status failing checks pending successful pending status pending checks successful status successful", "d": "1/2018"}, {"body": "correct label requirements fri jan olivier combe notifications githubcom wrote check failing status failing checks pending successful pending status pending checks successful status successful receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "yes noticed well either forcepushing nt trigger status check merge status nt updated properly investigate", "d": "1/2018"}, {"body": "another one", "d": "1/2018"}, {"body": "ok found bug matching correctly status updates existing prs database status updates tricky linked commit specific pr means match usually head sha one prs case simplest way fix restart one travis build jobs bazel job takes good candidate go around try restart prs affected", "d": "1/2018"}, {"body": "message clear providing workaround issue fixed new prs please clarify", "d": "1/2018"}, {"body": "fixed bug code updated prs created since yesterday fixed status ok existing prs new ones", "d": "1/2018"}, {"body": "confirm behave safari vs chrome ocombe please take look", "d": "1/2018"}, {"body": "going problem code like component html comes like layout div go width solve", "d": "1/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue think want componentless route way inheriting params parent component use pathless configurations children something like", "d": "1/2018"}, {"body": "hi hours trying solve post solve issue regards diego", "d": "1/2018"}, {"body": "nt reported rxjs repo instead", "d": "1/2018"}, {"body": "nt reported rxjs repo instead almost certainly yes", "d": "1/2018"}, {"body": "found already reported", "d": "1/2018"}, {"body": "closing duplicate", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "ericmartinezr oh wow thank", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "sorry nt handle user support github issue tracker could try angular channel gitter stackoverflow", "d": "1/2018"}, {"body": "believe problem eg try ts module resolution written", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation angular repo firebase", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "nt see error", "d": "1/2018"}, {"body": "upon trying neither", "d": "1/2018"}, {"body": "see error came google search angular module import top link longer valid takes error came", "d": "1/2018"}, {"body": "kapunahelewong related yesterdays ngmodule change", "d": "1/2018"}, {"body": "alexeagle oh yes thank tagging thank spottedmahn catching submitting pr", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "kapunahelewong maybe already fixed", "d": "1/2018"}, {"body": "hi thank questions working faqs right helpful meantime might interested new documentation merged yesterday ngmodules doc help clarify questions provider scope section providers page", "d": "1/2018"}, {"body": "kapunahelewong provider scope section providers page link posted describes user module limit scope services various means nt explain module private services must good reasons module private declarables services good reasons things historical reasons please state", "d": "1/2018"}, {"body": "hm think might interested doc currently working misko nt quite ready yet injector trees early stages probably go ngmodules section ready think entitled something like injectors injector trees gist work progress pretty rough maybe help expert services gkalpak would able enlighten us think actually scoped module services caveat taken precipice knowledge", "d": "1/2018"}, {"body": "really sure mhevery igorminar better idea smiley guess would say modules introduced grouping componentsdirectives rather services need services accessed via identifier eg type token access restricted restricting access identifier componentsdirectives hand identified eg template selector string need different way disambiguate also keep mind modules injector order support private services nontrivial changesto di implementation would needed like said stabbing dark could totally different reasons caveats grin", "d": "1/2018"}, {"body": "ok better handle topic provide suggestions overarching goal show people create services private feature module actually possible steps actually mentioned restrict service scope module section faq honestly appears hidden hard decipher language create service class usual add service class list annotation feature module class add service class instead list component within feature module needs use service service available within feature module users module", "d": "1/2018"}, {"body": "added external style sheet would delay app booting would nt styles might jarring users style sheet downloads", "d": "1/2018"}, {"body": "agree toxicable mention every request would trigger writeread filesystem would handle caching requests etc behavior desirable well implement taking speed tradeoffsextra overhead ssr generated styles class added intercept html returned user cut styles put stylesheet append stylesheet link back html would ideal users however probably nt implemented platformserver", "d": "1/2018"}, {"body": "extending supported use case api deprecated please switch using instead", "d": "1/2018"}, {"body": "note nt generally accept support requests issue tracker suspect something needs change angular", "d": "1/2018"}, {"body": "point taken spent roughly day half taken consideration managed get setups working fine laid official angular documentation animate anitmatechild suspect mentioned approach either supported indeed bug short combination custom components parent component determining child visible ngif animation direction state child either getting error mentioned nothing happens", "d": "1/2018"}, {"body": "maybe helps give child components states prev next active set states parent state places input value child component settergetter function animation state value everything must happen isactive value set component already deleted dom new value arrives far know animation module allows animations ngif", "d": "1/2018"}, {"body": "tried various ways timing rightly mentioned critical makes passing variables non trivial also specifically suggest passing variable getter function input value using input retrieve lateslow also feeding parent variable directly child childanim variable setting childanim html template using hostbinding work causes dreaded thank though appreciate thought edit btw use void gt xyz transitions per angular doc tested staticly setting states child comp code", "d": "1/2018"}, {"body": "solution parent needed set referenced child comp reference make sure use settimeout changing variable allow child comp update input val", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "take look bit sugar using templates", "d": "1/2018"}, {"body": "toxicable thanks tips sugar implement use write external template element thanks advice anyway", "d": "1/2018"}, {"body": "yes point use directive along component solve problem", "d": "1/2018"}, {"body": "yep duplicate", "d": "1/2018"}, {"body": "longer reproduced plugin", "d": "1/2018"}, {"body": "heathkit mhevery", "d": "1/2018"}, {"body": "related tldr way router know event prevented preventdefault scope angular meant prevent routing may try handle navigation imperatively", "d": "1/2018"}, {"body": "notice several places type could seemingly used hardcoded instead sure named type nt used consistently voithos recall paramsinheritancestrategy type nt used consistently also curious nt caught testing kind test add tries compile project step applied", "d": "1/2018"}, {"body": "looks like setting caused breakages tests may updated catch kind bug", "d": "1/2018"}, {"body": "sent pr believe simplest solution regression removing tag type remain relevant dts file resolve compilation error", "d": "1/2018"}, {"body": "believe original reasoning per discussion pr avoid littering public namespace yetanother type alias thus used internally consistency whereas external types used equivalent imply anything public", "d": "1/2018"}, {"body": "thanks voithos sounds like updating use place would also another reasonable solution imply anything preactivationts public check see declarations produced mean even though declarations directly part router public api surface still public consumers package believe use part problem", "d": "1/2018"}, {"body": "ah may oversight think intent keep internal using sounds like reasonable solution igorminar would able confirm", "d": "1/2018"}, {"body": "case preferred approach put alternate pr", "d": "1/2018"}, {"body": "ping prs two solutions discussed far someone core team reviewmerge one get next patch release", "d": "1/2018"}, {"body": "pshields please merge single pr rebase master like get release tuesday evening wednesday thanks", "d": "1/2018"}, {"body": "igorminar either one fixes regression imo merging would redundant recommend merging based earlier discussion issue really want merge let know proceed combining single pr", "d": "1/2018"}, {"body": "thanks picked think need eventually want remove annotations good enough tue jan patrick shields notifications githubcom wrote igorminar either one fixes regression imo merging would redundant recommend merging based earlier discussion issue really want merge let know proceed combining single pr receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "turns one file whose published declarations reference still issue someone reopen sorry missing mistake although searched occurrences paramsinheritancestrategy published declarations must either missed incorrectly assumed reference compilation path since nt shown original error based igorminar earlier comment wanting eventually remove annotations put removes annotation change avoids class error first place making type definition available declarations since afaik angular nt currently good way test compilation published package yet think safest way", "d": "1/2018"}, {"body": "going open another issue since related maybe track well referenced seems another issue compiling bazel unrelated compiling throws following error isolated repro steps simple clone run build succeeds run run build fails error", "d": "1/2018"}, {"body": "alexeagle hmagrini perhaps open issue alexeagle repo", "d": "1/2018"}, {"body": "edit upon inspection think list least peerdependency since without installed among nodemodules makes sense module ca nt resolved resulting error seen verified running seeing error thrown anymore makes sense happy open pr original comment mhevery kinda unsure open repo since issue seems related exports rather bazel build least compilation error seems caused tries import although module get exported seems whole ca nt found", "d": "1/2018"}, {"body": "think meant optionaldependency nt make sense greenfield angular app install ngupgrade history angularjs wonder reproducible outside bazel agree ought typechecking router dts files would fail ngupgrade installed cc jasonaden", "d": "1/2018"}, {"body": "working expected expects value structure matches control structure form eg properties value match whatever put attribute template otherwise forms api way knowing value go control names properties class nt matter also worth noting angular set ngsubmitted class expected would remove one", "d": "1/2018"}, {"body": "look set set submit think quick close one expected bug design work around anyone complex object model longer use resetform without work around calls setting new model callingnchange detedtion using thisformvalue sent iphone jan pm kara notifications githubcom wrote working expected reset expects value structure matches control structure form eg whatever put name attribute template otherwise forms api way knowing value go control also worth noting angular set ngsubmitted class expected would remove one receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "good spot ericmartinezr problem docgen look", "d": "1/2018"}, {"body": "fixed see", "d": "1/2018"}, {"body": "closing already mentioned issues next iteration component make easier possible clear core team develop functionality requirement internally could community effort", "d": "1/2018"}, {"body": "next iteration series", "d": "1/2018"}, {"body": "experienced outage production got merged introducing build optimizer related regression contained fix prioritize fixing feature work otherwise risk outages", "d": "1/2018"}, {"body": "reason run tests prod mode issues might appear dev mode", "d": "1/2018"}, {"body": "likely application code im going debug entire application specific want report please make minimal reproduction", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "router one dependency depends errorhandler hence cyclic dependency trying use injector get infinite loop exceptionservice trying create router trying create exceptionservice really want router exceptionservice inject modules set manually also ca nt activatedroute singletons available components", "d": "1/2018"}, {"body": "works use getter bad even figure code regress case everything working typescript import injector inject angularcore import httpclient angularcommon import dataservice dataservice import activatedroute router angularrouter export abstract class baseinjector export abstract class smartservice extends baseinjector protected data dataservice constructor context injector super context thisdata contextget dataservice although said activatedroute work", "d": "1/2018"}, {"body": "splincode inefficient use contextget every time wo nt work try use routerroute constructor infinite loop seemingly reason nt use injector dangerous generally bad idea ca nt use annotations like still ca nt use activatedroute singleton throw try get route", "d": "1/2018"}, {"body": "inefficient use contextget every time mean", "d": "1/2018"}, {"body": "splincode opened issue yesterday closed support request used issue template time support request need bring stackoverflow create github issues", "d": "1/2018"}, {"body": "see missing return event change intercept method like javascript intercept request httprequest next httphandler observable return nexthandle request map event httpevent gt event instanceof httpresponse return event catch error gt error instanceof httperrorresponse", "d": "1/2018"}, {"body": "please file issue instead", "d": "1/2018"}, {"body": "problem simple service nested service configuration unit tests service simple write test like faills message test executed change test still failing message remove fooservice providers testbed test httpclient directly injected works direct injection httpclient works injection httpclient service fails using angular completely blocking since write single unit test services", "d": "1/2018"}, {"body": "fact error specific httpclient common blocking meet tests soon inject type another type example simple causes error import injectable angularcore import testbed angularcoretesting injectable export class foo constructor public bar bar injectable export class bar describe foo gt error message appearing test execution ca nt retrieve instance foo dependency injector says ca nt resolve parameters one parameter type bar testbed retrieve bar instance works seems problem retrieve instance bar rather retrieve metadata foo providing types inject", "d": "1/2018"}, {"body": "created new application angular cli updated appcomponentspects file declare injectable foo bar classes previous post add providers testing module enough reproduce error test execution however error serve build application curious searched found reason looked files changed application generated angular cli fact changed one file importance file commented polyfill use aot jit uncommenting polyfill tests pass may comment polyfill rewritten misleads tests run jit", "d": "1/2018"}, {"body": "another option could run test aot available moment see angularangularcli", "d": "1/2018"}, {"body": "fredgate use aot everything except tests well moved polyfill load tests think issue closed works intended assuming root cause original issues figured since clearly stated jit requires polyfill work let wait aot unit tests supported get rid completely", "d": "1/2018"}, {"body": "think effectively close issue works intended however would nice review comment mentions disabled aot used problem unit test ca nt run aot mode lead problem mentioned adding polyfill testts good workaround load tests use phantomjs cicd server wanted thing corejs polyfills work loaded late need keep polyfills polyfilljs file bad forces package polyfills required tests ci production build could nice possibility one polyfill file application execution another tests execution", "d": "1/2018"}, {"body": "agree makes sense add something like something similar case think better open separate issuepr repo file question link issue motivation change angular issue rather issue package agree point separate polyfills wonder people still use phantomjs running tests chrome firefox shipped headless support ago phantomjs abandoned dom implementation deviates modern browsers", "d": "1/2018"}, {"body": "quite excited guys found issue left disappointed morning finding polyfill already uncommented tests still fail nested services inject httpclient suppose issue different mine afterall still blocking would love feedback issue edit ok sorry figured adding polyfill testjs help got confused error message misleading told unable inject actually test service unable inject first place", "d": "1/2018"}, {"body": "submiting pull request angulardevkit planned migrate phantomjs chrome headless question remains run unit tests machine chrome installed phantomjs simply add npm package phantomjsprebuilt dev dependency useful continuous integration server nothing need installed prerequite", "d": "1/2018"}, {"body": "fredgate seen puppeteer yet believe solves exactly problem concerned however would highly recommend run ci jobs inside docker container use image required software already preinstalled example docker image used angular builds", "d": "1/2018"}, {"body": "think issue filed could please", "d": "1/2018"}, {"body": "alexeagle yes sure", "d": "1/2018"}, {"body": "tinayuangao could please take look", "d": "1/2018"}, {"body": "updated payload size app made amp optional added branches included files", "d": "1/2018"}, {"body": "sergeymalykh templatedriven forms form driven template remove form directive template associated control removed well plunker using reactive forms direction inverted driven form control model present template expected removing form directive dom destroy associated control value updates", "d": "1/2018"}, {"body": "kara bug could explain fix though nt use ngmodel behavior repeat change expected removing form directive dom destroy associated control value updates remove associated control thank much advance", "d": "1/2018"}, {"body": "looks like dupe please track", "d": "1/2018"}, {"body": "mderoche shoud nt imported injected di still one instance app", "d": "1/2018"}, {"body": "mlcmlapis chance willing expand bit possibly know project somewhere packages module makes use httpclient trying project working well figure move find proper way post method mderoche", "d": "1/2018"}, {"body": "update always dumbest things particular case code nt working totally unrelated reason case mderoche ought able remove line module may well ditch accompanying import top file reason mine nt working nested whole library project would easy make changes get working actually published library problem unless inside library well meant actually multiple versions httpclient bouncing around project removed folder nested library problem confusing mderoche please feel free ask questions", "d": "1/2018"}, {"body": "unfortunately work removing import library results injector error", "d": "1/2018"}, {"body": "mderoche hmm strange works jit aot mode without problem", "d": "1/2018"}, {"body": "mlcmlapis work using setup mentioned different setup secondary module using coming external library", "d": "1/2018"}, {"body": "mderoche ah forgot external library package lazy loaded module try external lib", "d": "1/2018"}, {"body": "mderoche made test injection external package level using package lazy loaded module works jit aot mode mystery nt work side demo package trivial one demo enough located get request wants load resource content nt matter displayed like", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "1/2018"}, {"body": "angular support node yet keep mind upgrading", "d": "1/2018"}, {"body": "hi ohrrkan thanks feedback disagree additional type safety creates security risk using fact worse allows developers access properties object", "d": "1/2018"}, {"body": "dupe", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "pkozlowskiopensource trying stackover flow wellthere response trying get solution possible means", "d": "1/2018"}, {"body": "trying stackover flow wellthere response trying get solution possible means would success support forum distilling problem question simples possible form minimal party dependencies minimal amount code providing minimal runnable example plunker similar guess getting answers since people hard time understand problems case support questions answered", "d": "1/2018"}, {"body": "given would added time think makes sense track part existing issue", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "pleasure drop angular ocean", "d": "1/2018"}, {"body": "annnnd fixed", "d": "1/2018"}, {"body": "hey jupie likely nt place inside heroes folder look file paths u see following srcappheroesheroescomponentts srcappmockheroests see files folder u want import mockheroes inside heroescomponent need use mandatory follow project structure toh uses know need adjust imports accordingly case", "d": "1/2018"}, {"body": "always import modules", "d": "1/2018"}, {"body": "please keep github issues bug reports feature requests better avenues troubleshooting questions stack overflow gitter mailing list etc", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation change since point", "d": "1/2018"}, {"body": "thank much saved time", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "yeah looks like duplicate", "d": "1/2018"}, {"body": "nt look like angular issue issues material components try filing repo", "d": "1/2018"}, {"body": "seems angular issue material comment see buid app ng build everythings works ok everything freeze add prod buildoptimizer material affect way please kara reopen issue", "d": "1/2018"}, {"body": "concluded cache indeed involved case new version getting released since last successful build would mean yarn run without lockfile happy install older cached version satisfies range even newer version satisfies range published yet cached kind unexpected possible igorminar know case anyway case one solution would avoid using yarn cache eg use something like", "d": "1/2018"}, {"body": "told kara blowing away travis cache caused previously green builds fail might right might release transitive unpinned dependency broke us tue jan george kalpakas notifications githubcom wrote concluded cache indeed involved case new version getting released since last successful build would mean yarn run without lockfile happy install older cached version satisfies range even newer version satisfies range published yet cached kind unexpected possible igorminar know case anyway case one solution would avoid using yarn cache eg use something like yarn install emoji cachefolder yarnlocalcache receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "think link u r looking", "d": "1/2018"}, {"body": "well", "d": "1/2018"}, {"body": "hey splincode sarunint seems answered question close issue still outstanding questions let know make sure address", "d": "1/2018"}, {"body": "sounds like support question honestly issue far long please provide much brief issue ask stackoverflow create new issue please use issue template answer questions provided template", "d": "1/2018"}, {"body": "looks like angularcli issue hard tell without information error characters seeing suggest opening cli repo info", "d": "1/2018"}, {"body": "looks like angular compiler reporting errors templates library think bug ca nt control third party templates definition files", "d": "1/2018"}, {"body": "steps nt say assume must turn well assume correct", "d": "1/2018"}, {"body": "relates", "d": "1/2018"}, {"body": "chuckjaz provided repro contain tsconfigs thing seems determine whether errors shown aot compilation double checked updated versions everything still seems happen angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsschematics typescript webpack kamik master npm run ng build aot reproapp ng ng build aot date hash time chunk inline inlinebundlejs inlinebundlejsmap inline kb entry rendered chunk main mainbundlejs mainbundlejsmap main bytes initial rendered chunk polyfills polyfillsbundlejs polyfillsbundlejsmap polyfills bytes initial rendered chunk styles stylesbundlejs stylesbundlejsmap styles kb initial rendered error nodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined nodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined nodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined nodemodulesngsnotifyngsnotifydtstoastcomponenthtml object possibly undefined", "d": "1/2018"}, {"body": "dup also reported angularcli repo", "d": "1/2018"}, {"body": "duplicate mentioned ericmartinezr", "d": "1/2018"}, {"body": "alxhub could valid solution dbcachets typescript export class cachedatabase implements database private cachescope string distinct multiple scopes private tables new map gt constructor private scope serviceworkerglobalscope private adapter adapter thiscachescope thisscopescope delete name string promise thistableshas name thistablesdelete name return thisscopecachesdelete list promisengsw db thiscachescope open name string promise thistableshas name const table thisscopecaches open cache gt new cachetable name cache thisadapter thistablesset name table return thistablesget name provide different scopes scope always default wanted intercept requests url path service worker script located maybe get basehref somehow obtain safely something like", "d": "1/2018"}, {"body": "found browseradapterts related platform used nt know wire", "d": "1/2018"}, {"body": "get safe way using document available sw available platform browser", "d": "1/2018"}, {"body": "service worker code dom access manipulate build process include appbasehref info replacing entries", "d": "1/2018"}, {"body": "created issue angular cli repo involved somehow basehref option cli needs passed service worker nt think service worker able without information cli", "d": "1/2018"}, {"body": "replacing key seems work even replacing occurences unique key work distinction better look dev tools entries without prefix replace occurences content entry still gets overwritten another app", "d": "1/2018"}, {"body": "research maybe helpful somehow renaming entries seems work cache storage seems like invalid state created branch repo swappone run open pages swappone swapptwo look cache storage dev tools entries ngsw swapptwo db control ngsw swappone db control values assignments latest manifests image afterwards also renamed entries way round commit create reproduction weird state result looks clean renaming still weird somehow also refreshed cache dev tools", "d": "1/2018"}, {"body": "changed dom since last exported elements autogenerated ids could changed since try custom ids see works", "d": "1/2018"}, {"body": "hi ocombe changed dom since last exported elements autogenerated ids could changed since text changed inside area lt bla bla bla changes translation run mac windows machines run windows machine try custom ids see works coluld solution try time necessity adding custom ids every translation otherwise nt know whether every generated ids run different machines", "d": "1/2018"}, {"body": "closing repro available", "d": "1/2018"}, {"body": "thank cub looking", "d": "1/2018"}, {"body": "looks like angularcli issue filed repo", "d": "1/2018"}, {"body": "right dementey care submit pr fix", "d": "1/2018"}, {"body": "happens denotes decorator simply add nothing might well write anything else typescript injectable export class authservice consolelog nothing export class authservice add though make typescript keep class types around bit hack make dependency injection work without application would idea meant runtime note decorator unlike example special content nt technically required service work helps dependency injection alternatively omit decorator services use decorator constructors really nt upsides approach typescript export class authservice component export class appcomponent constructor inject authservice private auth authservice case would classify working intended bug shortcoming angular pretty sure requirement using character decorators explained clearly somewhere documentation", "d": "1/2018"}, {"body": "unfortunately increases learning curve taken granted", "d": "1/2018"}, {"body": "seems compiler check still missing decorator checked compiler need use generate component function call used without also see injectable still required testing hence ca nt removed doubles confusion future current state", "d": "1/2018"}, {"body": "even connect wrong service work add correct operator means special check", "d": "1/2018"}, {"body": "doubles confusion future current state injectable frustrating", "d": "1/2018"}, {"body": "seems compiler check injectable still missing strict typechecking already came version see bad checking misused decorator factory function doubles confusion future current state injectable accept parameters like useless conventional decorator see", "d": "1/2018"}, {"body": "would used old injector", "d": "1/2018"}, {"body": "sorry works intended even confusing per explanation", "d": "1/2018"}, {"body": "looks like segments get parsed method urltreets course wo nt simple removing regex sure know enough url rule permutations propose fix", "d": "1/2018"}, {"body": "suspecting fundamental flaw implementation seems use representation incoming request urls url routes configuration understand codebase better concepts segments like", "d": "1/2018"}, {"body": "seems selector either use property change selector property could added template", "d": "1/2018"}, {"body": "skreborn right changed selector name works", "d": "1/2018"}, {"body": "dup", "d": "1/2018"}, {"body": "also", "d": "1/2018"}, {"body": "working", "d": "1/2018"}, {"body": "doc think covers redirects need add", "d": "1/2018"}, {"body": "result following redirects required", "d": "1/2018"}, {"body": "worried going match even valid urls nt redirected checked nt name yay rest looks good", "d": "1/2018"}, {"body": "maybe also add link docslatestguide guide docslatestguidelifecyclehooks guidelifecyclehooks docslatestguidengmodule guidengmodules docslatestresources resources rule redirects could relax match well would match cases rest lgtm", "d": "1/2018"}, {"body": "working associated service worker routes", "d": "1/2018"}, {"body": "keep open land patch branch well", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation lazily load modules", "d": "1/2018"}, {"body": "toxicable mentioned nt issue feature close", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation json returned nt property", "d": "1/2018"}, {"body": "nt look like angular issue closing", "d": "1/2018"}, {"body": "relates", "d": "1/2018"}, {"body": "trotyl oh yes sorry closing", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "prepare basic simple demo using singleton service one observable stream used components di discuss problem angular gitter channel close issues definitely issue misunderstanding something side", "d": "1/2018"}, {"body": "new issue linked", "d": "1/2018"}, {"body": "need load locale data first ts import registerlocaledata angularcommon import localees angularcommonlocaleses registerlocaledata localees eses", "d": "1/2018"}, {"body": "today install example stop working", "d": "1/2018"}, {"body": "moment application open correctly standalone mode deployed external server still working served localhost", "d": "1/2018"}, {"body": "nodemodulesbintsc p apptstsconfigwatchjson w synchronizing program files lines nodes identifiers symbols types memory used io read io write parse time bind time check time emit time total time compilation complete watching file changes file change detected starting incremental compilation synchronizing program files lines nodes identifiers symbols types memory used io read io write parse time bind time check time emit time total time compilation complete watching file changes nodemodulesbinngc p apptstsconfigwatchjson w time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes file change detected starting incremental compilation time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes", "d": "1/2018"}, {"body": "one bug least watch mode broken last releases oldprogram option always undefined", "d": "1/2018"}, {"body": "fix definitely better still fishy files changed changing angular component node nodemodules angularcompilerclisrcmainjs p apptstsconfigwatchjson w time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes file change detected starting incremental compilation time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes", "d": "1/2018"}, {"body": "runs better still slow node nodemodules angularcompilerclisrcmainjs p apptsconfigwatchjson w time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes file change detected starting incremental compilation time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes file change detected starting incremental compilation time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes file change detected starting incremental compilation time diagnostics emitted user ts files generated ts files generated json files total time compilation complete watching file changes", "d": "1/2018"}, {"body": "last change results smaller generated code unexpected igorminar tbosch familiar piece code", "d": "1/2018"}, {"body": "chuckjaz proceed rebase continuously anything help merging process", "d": "1/2018"}, {"body": "read", "d": "1/2018"}, {"body": "mlcmlapis guy got specific error message error unexpected value undefined declared module appmodule perfect look error got generic way tell went wrong also refer stack overflow thread linked see lot people get error due various different reasons", "d": "1/2018"}, {"body": "ok section principle arguments suggest angular compiler still think part linter like compiler", "d": "1/2018"}, {"body": "would suggest compiler handles gaps imports array like declarations throwing specific error message similar error unexpected value undefined declared module appmodule make things consistent save lives though completely agree linter job compiler thats found mistake", "d": "1/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "1/2018"}, {"body": "yeah nt enough info issue actionable think bug please file issue following template", "d": "1/2018"}, {"body": "referring hmr already possible", "d": "1/2018"}, {"body": "nt look related angular repo closing", "d": "1/2018"}, {"body": "provide repro stackblitz plunkr sure enough info actionable", "d": "1/2018"}, {"body": "nefcanto thoughts base ideas probably need custom project template think angular devkit schematics would useful setup exactly need probably would interesting also look around nwrl nx workspace monorepo concept filesystem architecture point view actually ca nt load component separately definition module one component inside lines code could single one file probably relevant using typescript must ca nt use js want work effectively chance follow people reactions around world reality would hard find person wants torture use js nonsense nt need use angular cli webpack many options like rollup closure compiler systemjs builder mention mostnamed ones even use custom logic leads separating angular libs code apps use external libs external cdns servers effectively use proxy caches browser caches even cross many apps share libs without duplication probably best could create extracted custom shared angular lib would contain parts standard angular libs necessary set apps would equivalent treeshaking process standalone app level would probably used angular elements case", "d": "1/2018"}, {"body": "actually ca nt load component separately technically possible demo example single component could loaded directly gets little benefit easily integrated router", "d": "1/2018"}, {"body": "trotyl lol always surprise", "d": "1/2018"}, {"body": "specially imports top decorators exports end file nefcanto totally javascript typescript superset javascript inherited javascript features demos without using typescript like find little difference without aot support highly based typescript performant runtime", "d": "1/2018"}, {"body": "tortyl angular architecture style guide everything good clean codebase needs one project understand projects need set dependencies control enforce prevent deviation many projects make sure developer uses version say x developer also use version manage want remove testing projects cause ca nt afford testing costs nt need aot fanciness cool ok performance issues gain businessvalue somewhere else want typescript configured across projects probably nt understand experienced developers work one project ca nt perceive context eyes company one simple single project comes discipline corporate standards angular becomes true pain ass works one one way change bugs start appear ca nt centralize things easily like give example net projects built using msbuild configured via special xml files called c language company want serve websites customers want make sure one excel library used export data done r amp spent money nt want developer waste time benchmarking libraries easily create special type files called target files like create shared environment ask developers include targets file build configuration see company works way savings even imagine spl net platform manage run applications using team less developers competition businessvalue right yet manage webapps using angular probably need least developers know developer net manage least application based improvements infrastructure made spl yet ca nt get things angular", "d": "1/2018"}, {"body": "tortyl google io heard saying million applications google play app store believe millions joke anymore many companies working field creating lowcost applications highvolumes special type customers let think wordpress example thousands businesses ok website made wordpress nt need spend huge amount money setup teams create highly sophisticated customized web sites business create applications web android ios types companies yet make happy need reduce costs reduce costs need extract similar functionalities many projects control somehow central place need follow nt repeat pattern possible android studio via android modules gradle build system possible visual studio via dll files msbuild configuration yet somehow impossible angular could write angular simple javascript terms old fashion web like including js files head etc would benefit main reason moving angular overall market trend developers switching getting harder find developers older technologies customers hear get hype ask material design many factors push us go towards angular yet good creating many many applications single standard", "d": "1/2018"}, {"body": "nefcanto severe misunderstanding angular angular cli angular framework idea would use angular cli tool help quickly setup angular development environment angular architecture style guide everything good clean codebase needs one project angular cli provides except style guide abstract principle want custom project structure welcomed create angular cli designed spa usage projects need set dependencies could search term micro frontend looking", "d": "1/2018"}, {"body": "nefcanto think convinced nwrl nx workspace monorepo concept concept interested arguments exactly reasons ever came generally nx workspace concept something took much wider experiences google monorepo concepts google applying internally many years lot larger apps portfolio probably hundreds apps maybe thousands fighting types problems hundreds hundreds developers around world", "d": "1/2018"}, {"body": "trotyl angulario starts angular cli searched could nt find section create angular application without angular cli think point mentioned might helpful guide right direction examples create angular app without angular cli", "d": "1/2018"}, {"body": "mlcmlapis thankful link introduced yeah right concerns comes business law also comes scene try somehow done multiple repos ca nt definitely give try cause said close mindset need", "d": "1/2018"}, {"body": "nefcanto facts first stable angular version lands first stable angular cli version lands added cli quickstart addition noncli parts migrates examples angular cli migrates docs angular cli done yet angular cli save time reducing learning curve forbidding creativity find noncli example everywhere want outofbox wellmaintenance productionready project template certainly hard course nx good example", "d": "1/2018"}, {"body": "general topic hoping address futrue really actionable going close continue discussion", "d": "1/2018"}, {"body": "tortyl based guideline angular angular cli already started r amp create infrastructure angular intend load umd modules via old school head script reference create object model android concepts c application many modules one one root module module many components root module one one root component component loaded via route change probably creating boilerplate codes module component definitions also bootstrapping root module via c injecting code http response creating convention spl developers would engaged creating views components spend zero time keeping projects sync course know path might feasible even feasible would definitely lose benefits angular like aot compilation flexibility multiple routeroutlet deep linking similar scenarios yet businessvalue gain would much", "d": "1/2018"}, {"body": "based guideline angular angular cli saying mean raise specific actionable feature request specific repo rather abstract support request like angular cli provide support lib development angular compiler aot support javascript files better webpack ejection support better documentation schematics official tooling wo nt able cover everyone advanced requirements still made use course know path might feasible even feasible would definitely lose benefits angular like aot compilation flexibility multiple routeroutlet deep linking similar scenarios aot routing feasible individual build process unless dropping typescript usage making custom aot tooling support would indeed require knowledge angular compiler javascript building tools depending whether worthy", "d": "1/2018"}, {"body": "nefcanto certainly possible load umd dynamically really necessary statically load umd modules via old school head script reference best would create shareable umd contains necessary parts base apps code loading section advantages", "d": "1/2018"}, {"body": "redradist problem related fact import external styles technically possible angular compiler process dynamic thing imagine resource change moment possible imports apply style encapsulations final effect would apply component always global effects apply local things content file use metadata angular compiler able create encapsulated styles applied component example see id concrete element page", "d": "1/2018"}, {"body": "mlcmlapis thank answer maybe case better add warning compile error developer side view obvious behavior mlcmlapis maybe possible encapsulate import external styles case angular universal server compile templates", "d": "1/2018"}, {"body": "redradist nt think processing external styles could extremely hard even possible end question finally exact cases would extremely beneficial maybe possible encapsulate import external styles case angular universal server compile templates", "d": "1/2018"}, {"body": "mlcmlapis okay error compilation emphasis fact cause unpredictable behavior", "d": "1/2018"}, {"body": "redradist please close issue create new feature one link one thanks", "d": "1/2018"}, {"body": "tested different env looks like information needed would logged error context closing information different log message", "d": "1/2018"}, {"body": "jelbourn mhevery", "d": "1/2018"}, {"body": "provide specific code samples situation would need reference component instance sample code expect retrieve", "d": "1/2018"}, {"body": "kara cdk table tree would easier go person", "d": "1/2018"}, {"body": "angular currently supports upto typescript use tilde prefix packagejson prevent npm installing typescript", "d": "1/2018"}, {"body": "sarunint really interested solution maybe could updated", "d": "1/2018"}, {"body": "well thing typescript following semantic versioning introducing breaking changes even minor updates angular team basically need update code support different versions typescript support typescript coming angular though see", "d": "1/2018"}, {"body": "see feel free close issue duplicate aforementioned", "d": "1/2018"}, {"body": "azarus point opening another issue problem please add comment new findings thnx closing duplicate", "d": "1/2018"}, {"body": "hi sorry issue submitted submitted utopianio bot", "d": "1/2018"}, {"body": "azarus added advice review comment submit issues utopianio get created automatically pkozlowskiopensource sorry inconvenience", "d": "1/2018"}, {"body": "seems happening root component reducing severity sure whether effort worth payoff", "d": "1/2018"}, {"body": "affects components appcomponent example using added dom testing environment instead child elements", "d": "1/2018"}, {"body": "onload method parameter", "d": "1/2018"}, {"body": "indeed right came conclusion guess bug better error message change bug title", "d": "1/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue internally using native function function throwing error percents illegal urls unless providing url encoding space", "d": "1/2018"}, {"body": "yeh nt great story windows issue already tracked", "d": "1/2018"}, {"body": "pkozlowskiopensource angular dev team works linuxmacos develop angular", "d": "1/2018"}, {"body": "using windows recommend installing ubuntu microsoft store build angular using works without problems", "d": "1/2018"}, {"body": "dtsodium guess always want manually unsubscribe subscription", "d": "1/2018"}, {"body": "searching solution problem read numerous times supposed manually unsubscribe route parameters could nt find anything route parent parameters tough", "d": "1/2018"}, {"body": "dtsodium auto unsubscribe always supposed actual using recommended way manually unsubscribe recommended change logic component receives emits upper component levels", "d": "1/2018"}, {"body": "saying architecture ideal route product ids parameters renders component navigation different product editing pages router outlet render chosen component components need retrieve edited product subscribe product id parent route someone suggestion better happy hear nt mind unsubscribing manually actually like better way think confusing destroying component autounsubscribes actived route using parent may wrong seems parent property activated route still belongs activated route instance private property component", "d": "1/2018"}, {"body": "dtsodium something like route", "d": "1/2018"}, {"body": "yes product id redirects product idedit could loaded product first component loaded subcomponents passing product wa nt user able access functionnalities url directly maybe better way nt easy find angular bestpractices always seems exist least ten methods achieve something", "d": "1/2018"}, {"body": "dtsodium ok placed affects basic fact component reused new instance created rerouting", "d": "1/2018"}, {"body": "sure angular engine computes way see product editing component reacts product id parameter change loads new product using service would say new instance created", "d": "1/2018"}, {"body": "dtsodium one component really shared means new instance created routing done fine subscription still enough route definition subscribed returns value know product routing", "d": "1/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue suggestions good manually subscribing going unsubscribe however might something useful coming release minutes feature allow basically merge params children always access parent params nt need go anymore intend eventually make default behavior documentation end release goes", "d": "1/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "maybe wrong technically stating userservice wo nt available heroservice since nt want latter one mangle sensitive data common scenario since need flag userservice require flag heroservice constructor create new instances service provider factory function access userservice able pass flag heroservice constructor make sense thoughtram dot io interesting posts angular di shed light current explanation heroservice wo nt direct access user information decide authorized maybe would simpler understand nt want heroservice direct access user information otherwise could decide authorized", "d": "1/2018"}, {"body": "thanks reply jvquarck makes sense got hung upon ca nt ca nt inject userservice heroservice nt think technically ca nt nt reason stated", "d": "1/2018"}, {"body": "regarding needing engineering input engineer verifyelaborate jvquarck explanation edit doc needed", "d": "1/2018"}, {"body": "verify redirects setup ensure still work", "d": "1/2018"}, {"body": "stephenfluin mentioned issue well", "d": "1/2018"}, {"body": "could rules deployed see working still broken", "d": "1/2018"}, {"body": "gkalpak still see broken could service worker interfering redirects", "d": "1/2018"}, {"body": "right serviceworker need explicitly exclude swrouting", "d": "1/2018"}, {"body": "let master let instead fix sw upgrade pr tue jan george kalpakas notifications githubcom wrote right serviceworker need explicitly exclude swrouting receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "close target patch branch", "d": "1/2018"}, {"body": "also look fix search queries particular angular api ie trying search google returns bunch invalid links page found titles see nt see correct link among results", "d": "1/2018"}, {"body": "page renders correctly requested reindexing page let see helps", "d": "1/2018"}, {"body": "realized pages attractive content bot thanks displaying search hints order find content reader looking page full keywords links crawlers indexes oddly finds valuable", "d": "1/2018"}, {"body": "aware way use javascript dom signal bot page page might hackish solution might work could full page reload special url would hit http server would serve page http status would work user navigates page aio doc viewer realizes issues command cause full page reload request hits service worker sw supported installed delegates request firebase hosting server server would configured understand paths legal issue http page would come back browser http browser would still bootstrap page render displaying page found content human crawler would honer http status kick page index quite nasty sure prettier way also makes realize lucky know legal url paths ahead time dynamic url segments application eg unable use trick without consulting data store would prevent us using static http server", "d": "1/2018"}, {"body": "relevant support page uses term soft kind handling invalid urls document nt explain clientsidesinglepage apps instead since ca nt easily issue http code except hack described", "d": "1/2018"}, {"body": "igorminar hopefully reindex help similar issues present api doc pages well couple examples probably results expected show results expected show results expected show however queries work correctly eg results results", "d": "1/2018"}, {"body": "igorminar feels like could simplify hack hit route without data forward knownurl page eg serve status firebase function probably oversimplifying problem", "d": "1/2018"}, {"body": "thinking single url server always returns sure crawler understand respond sequence nagivate get client side redirect get status server status associated nt know need preserve originalurl render useful page nonbot users client side", "d": "1/2018"}, {"body": "stephenfluin could confirm status get properly associated original url would definitely simplify implementation would make supporting dynamic usecases much simpler well", "d": "1/2018"}, {"body": "advised use noindex metatag indicate status prevent crawlers crawling content page tag must document nt know added document via javascript let try solution first crazy redirections two options doc viewer adds meta tag via meta service rendering removes pages put noindex meta tag host default doc viewer removes documents except upon initial rendering behaves toggling noindex metatag needed second option added benefit also preventing urls throw crawler indexed meta tag set statically removed dynamically successfully render document realize currently nt need care toggling meta tag initial navigation crawlers today always full page reload url knows long stay way futureproof solution would toggle tag rendering document doc viewer", "d": "1/2018"}, {"body": "cross reference second solution would also help us fix", "d": "1/2018"}, {"body": "created pr using strategy suggested igor see unable verify whether approach works bot via test project since nt appear rendered correctly bot nt seem indexed code test project", "d": "1/2018"}, {"body": "production let let crawler job weekend revisit stats search results", "d": "1/2018"}, {"body": "keep issue open confirm fix worked", "d": "1/2018"}, {"body": "think order expedite also implement fixes", "d": "1/2018"}, {"body": "igorminar way clean google index cache site going still showing lots soft cached fixed xmas", "d": "1/2018"}, {"body": "check tonight sun jan pete bacon darwin notifications githubcom wrote igorminar way clean google index cache site going still showing lots soft cached fixed xmas receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "looked seems setting redirects submitting sitemap trigger enough crawler activity get links removed redirects also fix navigation old content outside angulario uses old links give us extra link juice totally worth meantime want ahead used feature within search console hide old ts dart urls", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "oh sorry apologize", "d": "1/2018"}, {"body": "yeah looks like support question closed might also try angular gitter resource help track problem", "d": "1/2018"}, {"body": "seems root url nextangulario indexed nothing else maybe expected behavior", "d": "1/2018"}, {"body": "think know going note found noindex meta tag docs explains block nextangulario via robotstxt robot know url exists allowed index search snippet result information available page better solution would remove robotstxt restriction instead use metatag pages solution much compatible solution proposed resolve pages indexed issue", "d": "1/2018"}, {"body": "mean remove metatag leave", "d": "1/2018"}, {"body": "gkalpak yes", "d": "1/2018"}, {"body": "sure best way fix could prefer pulling currently deployed build site adding robots file would like avoid trying create new build old stack dependencies pinned time rebuilding tough", "d": "1/2018"}, {"body": "hmm problem went away could even contact support job passes rerun", "d": "1/2018"}, {"body": "saw issue twice various jobs evening reopening investigation", "d": "1/2018"}, {"body": "got within last day restarting build", "d": "1/2018"}, {"body": "travis bad days think problem resolved let keep monitoring days", "d": "1/2018"}, {"body": "believe resolved", "d": "1/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template please also include reference repository duplicates issue", "d": "1/2018"}, {"body": "looks like filed angularcli repo given would added ng build cli config", "d": "1/2018"}, {"body": "anyone wants achieve angular universal starter pack already implements sample prerendered routes take look prerenderjs rendering staticpathsts containing routes render also added feature request angularcli useful default functionality issue closed kara sorry reopening", "d": "1/2018"}, {"body": "thanks info take look next week", "d": "1/2018"}, {"body": "hey progress", "d": "1/2018"}, {"body": "sorry got lost list things try find time tomorrow", "d": "1/2018"}, {"body": "well spent considerable time today significantly complicated hoped seems need decode anchor matching processor causes problems anchors encoded api docs angulario still working", "d": "1/2018"}, {"body": "ok worked required new release dgenipackage need land changes angulario project deal breaking changes version", "d": "1/2018"}, {"body": "wow requires something thought thanks great solution", "d": "1/2018"}, {"body": "chembu jenniferfell fyi", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation well known question angular need google", "d": "1/2018"}, {"body": "think dupe seems like intention implement", "d": "1/2018"}, {"body": "looks like submitted mistake given empty closing", "d": "1/2018"}, {"body": "use linter using recommended rule show warning case", "d": "1/2018"}, {"body": "declerations array type array type class javascript represented constructor function", "d": "1/2018"}, {"body": "consider giving message specific details array like creating array elements sure done comes logging error error message perfectly valid saying value undefined declared module supposed", "d": "1/2018"}, {"body": "sure done comes logging error error message perfectly valid agree error message spot others mentioned linters might help catching error even earlier closing nt think much better framework side", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "1/2018"}, {"body": "duplicate custom key code mapping", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "yeah nt look like issue feature request going close", "d": "1/2018"}, {"body": "okay final say", "d": "1/2018"}, {"body": "based link service worker chrome introduced fully completed maybe actual implementation using something available introduced later thinking tried see error provided", "d": "1/2018"}, {"body": "question nt need works old chrome problem app broken version use users app use old chrome remove add manual implementation service worker app works", "d": "1/2018"}, {"body": "works fine going close issue", "d": "1/2018"}, {"body": "igorminar please remove issues aio project close", "d": "1/2018"}, {"body": "options unrelated", "d": "1/2018"}, {"body": "maybe add another flag suggested case mentioned indeed skiplibcheck used skip type checking new flag added like skiplibtemplatetypecheck skiplibcheck used skip type checking declaration files", "d": "1/2018"}, {"body": "sure create another issue requesting feature", "d": "1/2018"}, {"body": "code ts export enum userlistresolverproperties users users const userlistresolver userlistresolver userlistresolverpropertiesusers userlistresolver export const routes routes path component contactlistcomponent resolve userlistresolver treated identically aot compiler tries determine value statically disregards code might modify values referenced several workarounds working version use variable initializers instead assignment statements failure silent error compiler nt recognize considered dynamic modification metadata", "d": "1/2018"}, {"body": "form control considered dirty user interacts ui somehow toggled programmatic changes see docs test value changed programmatically expected behavior fix test setting value native element dispatching native event see examples template driven forms spec", "d": "1/2018"}, {"body": "behaves expected leave operation remove children container child contents hang around animation done animation query items wish hide style hidden", "d": "1/2018"}, {"body": "ocombe general bug named format retrieval dataextracting process function used get rid extra bytes corresponding fallback logic reusing removed formats runtime case locale provide formats amp latter stripped named format found runtime making regarded normal format", "d": "1/2018"}, {"body": "oh good catch trotyl fallback logic data except formats fix", "d": "1/2018"}, {"body": "ocombe raise pr would fine better solution", "d": "1/2018"}, {"body": "rollup smart enough include tried running rollup yet", "d": "1/2018"}, {"body": "yes check full description wed jan sarun intaralawan notifications githubcom wrote rollup smart enough include angularforms tried running rollup yet receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "somewhat related", "d": "1/2018"}, {"body": "unrelated", "d": "1/2018"}, {"body": "checked webmaster tools see surface nt seem problem number documents hosted angulario index however try fetch language service doc google bot rendering fails error empty document viewer info went wrong request fetch json doc failed case usually render network error page happening tried several urls suffer issue would explain low quality search results example urls nt render google bot example urls render google bot thing pages vs work common number path segments url single path segment seems work multiple nt work nt know coincidence clear urls indexable past something aio google bot must changed cause regression stephenfluin repro also surfaced two related issues also address nextangulario indexed nt similarly indexed weird setup robotstxt next domains missing robotstxt fix pages old urls previous angulario site indexed regular documents setup redirects ensure bogus urls render end index", "d": "1/2018"}, {"body": "thinking maybe change introduced lazyloaded components could responsible page indexes fine use lazyloaded component far know", "d": "1/2018"}, {"body": "would potentially using rendertron good fix googlebot", "d": "1/2018"}, {"body": "arjunyel angulario proving ground ensuring angular apps work well box want avoid setting custom infrastructure make seo work thanks suggestion", "d": "1/2018"}, {"body": "fix change error logging setup send errors external storage google bot crawling site general instructions found", "d": "1/2018"}, {"body": "ok gkalpak pr info problem got", "d": "1/2018"}, {"body": "stacktrace maps back specifically line", "d": "1/2018"}, {"body": "path gets invoked try instantiate embedded component attributes like explains certain pages work others nt nt embedded components attributes work typically top level pages like marketing pages", "d": "1/2018"}, {"body": "debugged found root cause problem google bot evaluates get array evergreen browsers get try find attribute name get undefined rest code fails", "d": "1/2018"}, {"body": "fix", "d": "1/2018"}, {"body": "fix production requested reindexing site via webmaster tools", "d": "1/2018"}, {"body": "back normal", "d": "1/2018"}, {"body": "bit postmortem odd problematic code around since forever months precise quite certain execution path since time search traffic affected mid december one could argue traffic hit due holiday season case slump start later less abrupt analyzed google analytics data noticed saw similar looking curve number sessions angulario look breakdown traffic sources see top sources organic search referrals links sites direct traffic people clicking bookmarks typing angulario browsers see search traffic important source traffic contributing traffic big contribution search traffic alone easily skew overall session count curve let see curve looks like sessions originating organic search alone similar looking curve curve sessions acquired via referrals links looks different little bit seasonality around holidays directly acquired sessions also looks quite normal bit seasonality around holidays conclusion given nt changed problematic code months experienced significant loss traffic originating search engines starting around december believe something changed crawlers period time cased site deindexed resulted traffic loss", "d": "1/2018"}, {"body": "please supply link repository reproduces issue", "d": "1/2018"}, {"body": "problem still happens original project unable recreate smaller simplified representative version happens regardless js generated use closure shown original description problem runtime error seems logical since see reason closure generated lines code tried copying original project ensure exact versions everything place effect simplified application obviously nt make use thirdparty code google material moment google maps etc even though imported via modules assume build process would exclude regardless inclusion affect ts js compilation makes sense inclined say close issue justify spending much time trying recreate simplified project nt reproducible problem nothing", "d": "1/2018"}, {"body": "ukrukarg discussed different solution offline anyone finding issue generally speaking used toplevel form directive nested formgroups want use instead ensure nested group value validation status properly synced parent group value validation status among things nested typically indicates nested form related parent form another toplevel form connected parent model relatively common pattern css positioning reasons might subform happens within form tags another form unrelated eg shopping checkout form newsletter signup sub form connect nested directives parents case would break apps pattern instead relaying submitted property directives pursue adding property provide result added benefit simplifying material error matchers", "d": "1/2018"}, {"body": "fields used webpack see managed angular cli would start making sure environments use angular cli version", "d": "1/2018"}, {"body": "yeah noticed using version version environments tho tried fresh", "d": "1/2018"}, {"body": "updating cli seems fix whatever issue seeing think definitely issue somewhere nt think something likely come may already fixed latest version etc unless somehow pops back think less nonissue closing thanks info pointing right direction", "d": "1/2018"}, {"body": "sorry issue caused angular please contact author project file issue issue tracker", "d": "1/2018"}, {"body": "ok thanks confirmation raise issue", "d": "1/2018"}, {"body": "would nice since used cdk overlay", "d": "1/2018"}, {"body": "find documentation faqs also interesting googling angulario entrycomponents nt seem find anything angulario", "d": "1/2018"}, {"body": "thank spottedmahn doehl documentation forthcoming see new file dedicated pr details still need working maybe help questions meantime let know questions", "d": "1/2018"}, {"body": "hi spottedmahn doehl new page dedicated entrycomponents entry components close issue still outstanding questions please feel free let know see room improvement new doc interested feedback", "d": "1/2018"}, {"body": "awesome thanks kapunahelewong", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "please read question writing automated answers thank", "d": "1/2018"}, {"body": "know data pipe receive locale extra parameter nt need write pipe html would work", "d": "1/2018"}, {"body": "yes used however dynamically changing locale date module set quoted code wrote date always german works ng build prod well", "d": "1/2018"}, {"body": "nt understand change value currentlanguage template time would use another language could provide minimal example could try would make things clearer see trying", "d": "1/2018"}, {"body": "found error using instead sorry taking time thank still think would found otherwise", "d": "1/2018"}, {"body": "problem", "d": "1/2018"}, {"body": "exported common module try import like work please provide reproducible example stackblitz plunkr demonstrates issue", "d": "1/2018"}, {"body": "works thanks", "d": "1/2018"}, {"body": "already opened issue lib repo", "d": "1/2018"}, {"body": "already opened issue lib repo bevacquadragula yeh need duplicate till library author actually confirms pb angular lib", "d": "1/2018"}, {"body": "investigation discovered problem comes angularcli works pkozlowskiopensource sure understand closed issue said problem comes angular lib issue remain open angular dragula anyway reopen issue angularcli close one lib", "d": "1/2018"}, {"body": "pkozlowskiopensource sure understand closed issue said problem comes angular lib said please check comment", "d": "1/2018"}, {"body": "pkozlowskiopensource well comment clear author actually confirms pb angular lib record opened issue", "d": "1/2018"}, {"body": "till library author actually confirms pb angular lib forgot read till", "d": "1/2018"}, {"body": "ericmartinezr bad please use emojis constructive purpose github facebook twitter", "d": "1/2018"}, {"body": "means using two templates", "d": "1/2018"}, {"body": "site template admin template home template two site template want url changes site template also changes", "d": "1/2018"}, {"body": "use two components", "d": "1/2018"}, {"body": "use two module", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "thnx ericmartinezr", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "meet problem request cross domain api authorization header missing", "d": "1/2018"}, {"body": "noticed order get working use example", "d": "1/2018"}, {"body": "yes symbolnarrow used depends data available cldr", "d": "1/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation assuming using httpclient use", "d": "1/2018"}, {"body": "maybe express clearly server respond id name test parsed js object name test correct server respond parsed js correct server respond parsed js array correct server respond abc parsed js object abc error angualr response abc changed abc without quotes", "d": "1/2018"}, {"body": "already set responsetype responsecontenttypejson", "d": "1/2018"}, {"body": "try", "d": "1/2018"}, {"body": "case jsonparse abc correctserver respond abc string abc", "d": "1/2018"}, {"body": "duplicate fixed already please note deprecated maintenance make sure using", "d": "1/2018"}, {"body": "yep duplicate indeed thnx trotyl", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "working properly angulario please report issue angularcn", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "dup", "d": "1/2018"}, {"body": "yes one mon jan pm eric martinez notifications githubcom wrote dup receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "closing duplicate", "d": "1/2018"}, {"body": "already pr", "d": "1/2018"}, {"body": "thank nilsnaegele absolutely correct merged like close issue outstanding questions please let know", "d": "1/2018"}, {"body": "interestingly problem occurs", "d": "1/2018"}, {"body": "give content translation file fails please", "d": "1/2018"}, {"body": "tried reproduce problem simple repo error thrown investigating find clue root problem", "d": "1/2018"}, {"body": "guess used incorrect markup target translations", "d": "1/2018"}, {"body": "seems due duplicate message id mistakenly using id two attributes one containing another containing reason thought complains happen see fix id issue time changed something else smile anyways seems real issue", "d": "1/2018"}, {"body": "correct pick latest major version time writing read semantic versioning", "d": "1/2018"}, {"body": "looks like expected behavior peer dependencies semver", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "latest quantum version working fine testing beta release tried filling bug report firefox issues tracker", "d": "1/2018"}, {"body": "checked seems plugin causing issue start working run firefox safe mode", "d": "1/2018"}, {"body": "ericcarraway added new issue details please check", "d": "1/2018"}, {"body": "see last commit made chuckjaz review line code", "d": "1/2018"}, {"body": "believe part", "d": "1/2018"}, {"body": "probably linked", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "duplicate indeed thnx trotyl", "d": "1/2018"}, {"body": "try remove code constructor oninit function", "d": "1/2018"}, {"body": "ericmartinezr find problem tries set ngdirty code however angular set ngdirty class problem use reactive form validation set per formcontrols default value works chrome nt works ie fix problem", "d": "1/2018"}, {"body": "stellalim please create minimal repro plunker stackblitz issue actionable", "d": "1/2018"}, {"body": "closing nt sufficient information", "d": "1/2018"}, {"body": "made code example stack blitz see app take options getoptions function typescript nt know returns full response", "d": "1/2018"}, {"body": "hello due way passing around untyped fashion typescript infer many signatures intend call code nt work typical reason options computed elsewhere want centralize construction headers parameters etc recommend approach keep set time call use object spread operator mix parameters keep type options tells typescript want assert nothing structure helps signatures match correctly code looks like going close issue http apis rely proper type information provided nt bug let know solution works", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "1/2018"}, {"body": "continue error add imports routermoduleforroot routes exports routermodule help thanks", "d": "1/2018"}, {"body": "cssagogo would either project handy state happy look would help figure might need edit doc", "d": "1/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue put url variables hash case either hash part url variable way around using hash url vars come", "d": "1/2018"}, {"body": "ok tks", "d": "1/2018"}, {"body": "shim file using deprecated package deprecated early development angular reason need use shims ie enabled project error script parse error nt every browser ie try reproducing without including outofdate deprecated shim", "d": "1/2018"}, {"body": "hi chuckjaz thank reply reproducing issue using shims issue log mainbundlejs file", "d": "1/2018"}, {"body": "could reproduce issue given repository gives error compiled example directly using emits contain references looks like issue angular cli one delegated tools ngc typescript report", "d": "1/2018"}, {"body": "closing reproducible", "d": "1/2018"}, {"body": "hi guys issue still reproducible please find comments fully runnable sample showcases problem compiler error reproduced chuckjaz caused issue cli bootstrap information also available also updated package version swimlanengxdatatable reproduce issue also change target target tsconfigjson tsconfigappjson tsconfigspecjson files new fully runnable sample reproduces issue available repo use target issue resolved get following issue code snapshot type map array type string type make project working target thank time efforts", "d": "1/2018"}, {"body": "also got error image ca nt execute code freed script although added following code suggested team polyfillsts file", "d": "1/2018"}, {"body": "use target issue resolved get following issue code downleveliteration flag required using nonarray iterables", "d": "1/2018"}, {"body": "danailvasilev work need build target run sample target everything work fine", "d": "1/2018"}, {"body": "thank guys ok set target however documentation note use target ie add information polyfillsts file related ie well regarding use downleveliteration flag foreach regarding issue know fixworkaround nt take effect", "d": "1/2018"}, {"body": "danailvasilev ca nt reproduce nt set flag also opened nothing happened", "d": "1/2018"}, {"body": "hi jialipassion please find comments strange issue reproduced side open console flag set tested behavior personal work pc reproduced machines current version colleague pc however reproduced another issue something security exception including current one well found something interesting set directly property true indexhtml file issue nt seem occur use however approach setting polyfillsts file nt take effect know happening also use per issue discussion concluded following problem occurs open console nt break functionality nt want see exception development set property true production nt set order avoid performance issue case mention comment fix merged thank", "d": "1/2018"}, {"body": "danailvasilev please try settings websocket connect angular web app angular dev server every time refresh ie page new web socket created ie maximum websocket connections default error occurs change number modify registry hkeycurrentusersoftwarepoliciesmicrosoftinternet explorermainfeaturecontrolfeaturewebsocketmaxconnectionsperserver add key modify value modify error gone", "d": "1/2018"}, {"body": "hi jialipassion thank investigation could nt find property regedit searched following places well used searching tool hkeycurrentuser hkeylocalmachinesoftwarepoliciesmicrosoftinternet explorermainfeaturecontrol hkeycurrentuser hkeylocalmachinesoftwaremicrosoftinternet explorermainfeaturecontrol maybe manually add keyvalue anyway please comment point confirm point previous post thank", "d": "1/2018"}, {"body": "ok seems like getting realm technical support trying keep repo issue angular going close", "d": "1/2018"}, {"body": "danailvasilev default exists need create keys also tried settings per issue discussion concluded following problem occurs open console nt break functionality nt want see exception development set zoneenablecrosscontextcheck property true production nt set order avoid performance issue case mention comment fix merged thank fact several issues related compile project ie work throw error like open without set flag error like may occur case set flag true polyfill performance impact mode error believe error server try way would like make pr add information sure right place later", "d": "1/2018"}, {"body": "hello see site produce issue without source code difficult debug upload minimal cli project demonstrates issue", "d": "1/2018"}, {"body": "alxhub take time upload minimal project plz nt close issue thank u", "d": "1/2018"}, {"body": "also problem", "d": "1/2018"}, {"body": "appears issue domino angular exception coming domino angular something missing", "d": "1/2018"}, {"body": "sorry late response chuckjaz endless winter holidays try dig deeper thanks paying attention problem", "d": "1/2018"}, {"body": "chuckjaz right problem domino already fixed commit problem solved next version domino sure angularplatformserver update dependency", "d": "1/2018"}, {"body": "impankratov sounds like either cli issue compiler issue ask compiler guys take look cli issue likely close open cli project", "d": "1/2018"}, {"body": "jasonaden thanks", "d": "1/2018"}, {"body": "looks like covered", "d": "1/2018"}, {"body": "closing scope", "d": "1/2018"}, {"body": "problem either added ugly spinner instead progress bar clients nt happy would best topic priorities somehow", "d": "1/2018"}, {"body": "doronsever case critical tested editing resulted file works installed created gulp task replaces file build script became could used default task simply run like name tasks course case convention upload urls contain also log big multiple line message console build nt forget removing workaround soon feature gets implemented angular team meanwhile reporting progress uploads works wanted let know works posted issue read would fix progress reporting took read granted nt tested", "d": "1/2018"}, {"body": "mrcroft thank much least working", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation could probably take exact issue stackoverflow get quick answer actual bug please create small isolated reproduction problem create new issue need use stackblitz easier us download replicate", "d": "1/2018"}, {"body": "thanks taking look add bit detail routing navigation docs also saw milestone milestone components inline templates examples srcappappcomponentts srcappherolistcomponentts etc however time get milestone plunker zip mentioned components using templateurl example recreates heroes feature services episode tour heroes tutorial copying much code tour heroes services example code download example add heroes functionality follow steps create srcappheroes folder adding files implementing hero management delete placeholder herolistcomponentts app folder create new herolistcomponentts srcappheroes copy contents appcomponentts services tutorial download example make minor necessary changes delete selector routed components nt need delete relabel delete bottom template rename appcomponent class herolistcomponent causes two issues first plunker zip inconsistent rest documentation routing amp navigation section secondly step make minor necessary changes would nt make sense mention elements linked examples include templateurl line sure translation heads documentation incorrect stands perhaps regression changing documentation examples want create new issue instead", "d": "1/2018"}, {"body": "thanks issue however would significant breaking change nt something want take right", "d": "1/2018"}, {"body": "thanks nt something going tackling right may take another look lazy loading near future would wholistic approach specific routing", "d": "1/2018"}, {"body": "hello angular use cldr data values believe daysmonths capitalized please open issue cldr repository thanks", "d": "1/2018"}, {"body": "hi bobbyangers could link spot needs attention sure page section thank", "d": "1/2018"}, {"body": "hi title correspond section paragraphe also robert angers sent iphone jan kapunahele wong notifications githubcom wrote hi bobbyangers could link spot needs attention sure page section thank receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "ah see mean reason left code tabs nt contain styles though project like could certainly put styles component nt effect actionfunctionality component curious link bobbyangers hope helps thanks keeping eye close outstanding questions feel free tag", "d": "1/2018"}, {"body": "hi checked final zip herodetailcomponentcss gt gt data herocompnentcss gt gt empty tab showing wrong one robert angers sent iphone jan kapunahele wong notifications githubcom wrote ah see mean reason herodetailcomponentcss left code tabs nt contain styles though project like could certainly put styles component nt effect actionfunctionality component curious link bobbyangers hope helps thanks keeping eye close outstanding questions feel free tag receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "thanks bobbyangers reopening make sure address maybe looking wrong file checked see meant one instead one nt include css tabs either could link spot part might numbering issue tutorial files named different numbers actual parts tutorial thanks", "d": "1/2018"}, {"body": "error still presist rxjs wrong uses angular", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "copied run warnings", "d": "1/2018"}, {"body": "happens module module see warning use package builder angular shows rxjs guess error described patrik jan sarun intaralawan notifications githubcom wrote copied packagejson run npm install warnings receiving authored thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "still nt catch mean module module could provide minimal example repository look wrong", "d": "1/2018"}, {"body": "bash bash git clone cd corifeusweb yarn install output", "d": "1/2018"}, {"body": "add rxjs dependencies", "d": "1/2018"}, {"body": "peer dependencies automatically installed must install", "d": "1/2018"}, {"body": "nt rxjs packagejson trick", "d": "1/2018"}, {"body": "yes package installs nt show warning way works thanks", "d": "1/2018"}, {"body": "npm dependencies work ca nt rely transitively installed dependency fri jan notifications githubcom wrote yes package corifeusbuilderangular installs nt show warning way works thanks receiving modified openclose state reply email directly view github mute thread", "d": "1/2018"}, {"body": "igorminar well least works found error warning remove decorators working thanks much", "d": "1/2018"}, {"body": "update reproduction provided closing issue still problem please open new issue", "d": "1/2018"}, {"body": "closing since action part", "d": "1/2018"}, {"body": "vandivier nt need ts solved supported ts adding", "d": "1/2018"}, {"body": "default html behavior buttons without type treated type submit form submits trigger synthetic click events submit buttons design expected angular nt prevent forms submitting invalid like angularjs added automatically override behavior see", "d": "1/2018"}, {"body": "sounds like duplicate basically problem router hard time redirects navigation already executing case please create new issue running example stackblitz", "d": "1/2018"}, {"body": "updates error get actually changed since reported problem igorminar opened issue testing safari dp release safari webkit still get old one", "d": "1/2018"}, {"body": "hello difficult us list editors way knowing follow changes nt want promote external services require pay working editor angular time still months away said know people working following editors reached us point get details probably support angular text united po editor editors might work well crowdin get localization one sky web translate", "d": "1/2018"}, {"body": "ocombe thanks list surprised see almost none services support xliff", "d": "1/2018"}, {"body": "yes nt seem widely adopted unfortunately", "d": "1/2018"}, {"body": "component part single module design ca nt verify jit aot passes one pointed one break separate module closing working intended plans solve different way take longer get", "d": "1/2018"}, {"body": "component part single usedreferenced module aot throwing errors modules referenced throwing application context errors nt understand applications reads files found via ts resolution workaround would least disable error aot follows referenced code entrypoints least allow configurable disabling monorepository users continue use aot issues going crop people use", "d": "1/2018"}, {"body": "created diagram show talking hope explains better green shared lib red coca cola blue pepsi yellow sprite essentially whitelabelling product company car insurance websites notice website brandedcoloured differently sometimes clients request something slightly differentunique like product view nt want recreate things nt change library right stands solutions disable aot create component per module thousands modules", "d": "1/2018"}, {"body": "intellix understand real lib package nt use setup entry points aot compilations", "d": "1/2018"}, {"body": "using nxcli folder apps folder libs app tsconfig defining path libs lib indexts exports module components within problem lib indexts contains aot finds despite importedused within ngmodule", "d": "1/2018"}, {"body": "intellix oh ok lib installed standard lib work use building libs ask app uses custom libs lib npmjscom public private private standalone npm server", "d": "1/2018"}, {"body": "error still closure compiler version", "d": "1/2018"}, {"body": "mlcmlapis click button route url guard console anything click product route product think guard consolelog guard click url", "d": "1/2018"}, {"body": "rainstormza hmm forgot say another property affects behavior rerunning guards resolvers set also possibilities set route definition want affect see action stackblitz demo without router events invoked", "d": "1/2018"}, {"body": "mlcmlapis works thanks think trigger ngoninit component want go route invoke ngoninit solution", "d": "1/2018"}, {"body": "rainstormza nt design triggering would mean creating new instance component true question need run probably logic code improved allow react data changes without necessity running nt know exact case ca nt explicit", "d": "1/2018"}, {"body": "mlcmlapis got need run ngoninit click url want component lazyload component rerender mean want component trigger service logic ngoninit solution anything like thanks", "d": "1/2018"}, {"body": "rainstormza yes run hook unit tests still think improve logic code component would able detect automatically refreshed one way could via resolver run code singleton service component subscribed emit something component understands would able run need", "d": "1/2018"}, {"body": "mlcmlapis think router event trigger event something click url angular router event nt trigger event angular router event always trigger event click url could please show way emit event click url thanks anyway tried way think nt look like good way", "d": "1/2018"}, {"body": "rainstormza remember new feature nt exist ca nt count without using routers events generated sure trying find probably migration best believe without problems thought already", "d": "1/2018"}, {"body": "exists forroot ca nt forchild accept additional parameter well", "d": "1/2018"}, {"body": "works case accept necessary means setting router singleton", "d": "1/2018"}, {"body": "nt setting router singleton root mean onsameurlnavigation work throughout entire application want want onsameurlnavigation work differently different levels app", "d": "1/2018"}, {"body": "levels lazy loaded modules router singleton principally one url address bar spa app switch works globally without param route routers events generated nothing bit unclear case events ca nt processed know routes come lazy loaded modules", "d": "1/2018"}, {"body": "mlcmlapis seeking following onsameurlnavigation reload page refreshed api data feed onsameurlnavigation absolutely nothing ended bypassing need reusing functions inside ngoninit ngondestroy ngaftercontentinit would easier reload capabilities far route", "d": "1/2018"}, {"body": "ah nothing creating new instance component get router events example emit observable subscribe stream something let component instance know use route differently rerun resolver get refreshed data exactly want", "d": "1/2018"}, {"body": "thank mlcmlapis makes sense using router events exactly need appreciate advice", "d": "1/2018"}, {"body": "fixed weeks ago", "d": "1/2018"}, {"body": "content centered vertically bar desktop mobile seems left aligned mock image recommend center aligned update mobile mockup reflect yup see updated already thanks also mobile clear text link could add visual cue let user know go survey maybe underline part text underline visually appealing tried could bold text quick survey change text mobile say click change text shortened version tell us experience angular assuming modified text button next reads take survey think first easiest open feedbackpreferences bold looks good see updated mock thanks message appears per session sounds like really bad user experience sessions angulario shortlived means users close notification several times campaign suggest show notification user closes user already taken survey would certainly good show message per session others nt see issue reminding approach works recommend post elsewhere user get elsewhere perhaps though process behind perhaps user clicks away message without reading really paying attention first time may willing take survey later point time perhaps user rush get information need leave guys decide best since nt way know someone took survey ca nt stop displaying notification based session angulario short lived people come look api doc leave show notification every time come really annoying see three options dismissal persisted across sessions keep displaying user clicks dismiss x button display current campaign dismissal persisted across sessions display every time campaign duration persist dismissal nth dismissal really combination think sensible want expose survey people bombard also github campaign notification bar works eg net neutrality good guiding precedence us stephenfluin agree message bar appears seconds mean navigate angulario desktop see nothing seconds notification bar appears pushes normal content mean something else request team nt think adds much value guys intent notification bar drops seconds page finished loading pushed normal content said within seconds general imaging experience gives flashbacks poorly designed news sites lazy load aggressively display ads via delayed overlays think take github net neutrality banner guiding example render banner initial rendering without kind delays let us know think taking quick survey also request notification text descriptive right clear survey angulario angular something else let us know think angular taking quick survey hopefully fit mobile version tell us experience angular taking quick survey stephenfluin may need provide additional input based survey goals messaging initially thought process keep simple interested providing feedback click regardless descriptive text additionally survey questions long user easily quickly decide whether want participate recommend keeping simple users less likely read long sentence let us know think taking quick survey help angular answering survey questions help angular answering questions help angular taking minute survey stephenfluin preference", "d": "1/2018"}, {"body": "hope save first dismissal whenever possible cookie session localstorage agree waiting drop nt add value cut render initial load sounds good would preference", "d": "1/2018"}, {"body": "ok summarize spec bit", "d": "1/2018"}, {"body": "final spec icons used insertcomment close gray background darkgray red button brightred fontsize mobile ideal toolbar height needed maintain marginpadding left right content centered vertically amp horizontally bar except close button margins required desktop amp mobile click message icon text navigate survey remove message bar clicking x close icon slide would nice animation message appears rendering shell first time x hit campaign end date configurable via source code reached let set end utc unless stephenfluin would like run shorter longer message read help angular taking minute survey text mocks since changed desktop also click go survey button navigate survey mocks text outdated gkalpak petebacondarwin one get done early next week survey already launched feature request time sensitive prioritized feature work thanks ton", "d": "1/2018"}, {"body": "use local storage keep info whether campaign dismissed already", "d": "1/2018"}, {"body": "work tonight", "d": "1/2018"}, {"body": "nt like suggestyou make survey stackoverflow", "d": "1/2018"}, {"body": "able still reproduce narrowed behavior router specific use cases app bundled single bundle flickering reproducible router configured issue may happen router configured routes use lazyloading repeating happens routermodule configured mode may huge issue since app developers setting usehash true support ideally error would handled gracefully", "d": "1/2018"}, {"body": "another issue description repro bundled metadata json metadata two exported fesm bundles issue", "d": "1/2018"}, {"body": "also seeing issue angular angularcli", "d": "1/2018"}, {"body": "yadue jackjamieson yes required manual intervention probably wo nt building via ci personally building via cli ftping built files server workaround works itsnotvalid agree output different without sounds like something maybe someone good knowledge way angular builds look", "d": "1/2018"}, {"body": "idea issue resolved update project material depends fails build", "d": "1/2018"}, {"body": "temporary workaround could create node package js file add project dependency installlocal useful want install package locally need anymore", "d": "1/2018"}, {"body": "samanmohamadi packages files like chartist plugins use case", "d": "1/2018"}, {"body": "create directory ex chartistplugins copy js file chartistplugins directory run enter questions assumed already installed installlocal import package like npm packages project remove allowjs tsconfig", "d": "1/2018"}, {"body": "appreciate workaround want pipe affecting us well", "d": "1/2018"}, {"body": "another workaround defining similar path alias defining declaration stub location file importing like make sure declaration file node installed enables like import", "d": "1/2018"}, {"body": "also issue packaging library npm nt work particular third party library going go back angular meanwhile", "d": "1/2018"}, {"body": "anyone workaround angular install local work windows machine link vladimiry workaround also work hansl eta pr blocker project", "d": "1/2018"}, {"body": "vladimiry workaround also work ameya try execute first updated comment", "d": "1/2018"}, {"body": "hi hansl also facing issue eta resolution", "d": "1/2018"}, {"body": "downgrading angular solved problem understand solution everyone though", "d": "1/2018"}, {"body": "hi hansl update issue resolved already productionready application build angular downgrading angular option us one blocker thinking breaking external js dependant part angular application used angular application via html iframes eta date hold bug avoid unnecessary extra work", "d": "1/2018"}, {"body": "gregdbqn option want use material angular tracking issue since nov least month issue know opensource project everyone contributing complexity code part angular also high", "d": "1/2018"}, {"body": "btw going without cli respectively without angular compiler might option nt mean using ejected cli weback config custom webpack config containing example stuff like etc", "d": "1/2018"}, {"body": "ameya try workaround posted", "d": "1/2018"}, {"body": "solution use prod allowjs tsconfigjson work let know anything wrong myappmyapptest gt ng build prod date hash time chunk scripts scripts kb initial rendered chunk styles kb initial rendered chunk polyfills bytes initial rendered chunk main bytes initial rendered chunk inline kb entry rendered error error write file myappmaapptestnodemodulesjsplumbdistjsjsplumbjs would overwrite input file adding tsconfigjson file help organize projects contain typescript javascript files learn myappmyapptest gt tsconfigjson compileonsave false compileroptions allowjs true outdir distouttsc sourcemap true declaration false moduleresolution node emitdecoratormetadata true experimentaldecorators true target typeroots nodemodules types lib dom", "d": "1/2018"}, {"body": "ameya also need use line would something like running command receive error like one posted however go one ts files project make change save file app automatically rebuild without error hope helps still nt work reason please let know", "d": "1/2018"}, {"body": "thanks help myappmyapptest gt ng build prod watchauto date hash time chunk scripts scripts kb initial rendered chunk styles kb initial rendered chunk polyfills bytes initial rendered chunk main bytes initial rendered chunk inline kb entry rendered error error write file myappmyapptestnodemodulesjsplumbdistjsjsplumbjs would overwrite input file adding tsconfigjson file help organize projects contain typescript javascript files learn could something cli version mine angularcli angularcompilercli", "d": "1/2018"}, {"body": "ameya get error must save ts file start transpile process get error", "d": "1/2018"}, {"body": "thanks ericmartinezr great analysis first alternative seems best", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "completely blocked due problem control registry entry please let know workaround sort switch disable functionality solution", "d": "1/2018"}, {"body": "closing since reply weeks anyone else issue let us know please add example reproduce issue", "d": "1/2018"}, {"body": "workaround would recommend setting executing", "d": "1/2018"}, {"body": "robwormald comments behavior", "d": "1/2018"}, {"body": "also issue", "d": "1/2018"}, {"body": "bmbell please share work around", "d": "1/2018"}, {"body": "ziaulain example manually attach css class called active pass object function like inject angular router component import router angularrouter constructor private router router finally implement isactivepage method component public isactivepage page boolean ideally would page defined type rather type simple example", "d": "1/2018"}, {"body": "hello mean blank input empty string", "d": "1/2018"}, {"body": "hum refering api date pipe mistake take look maybe need update feat req btw ocombe thinking empty strings null values cases system model optional date properties case date property nt found entire ui show nt came back think serious stuff token like localeid default set null job nt sure best way", "d": "1/2018"}, {"body": "yes update angular check still problem reproducible example plunkr stackblitz would nice", "d": "1/2018"}, {"body": "addressed pr new doc published angular compiler options", "d": "1/2018"}, {"body": "plan change angular build single whole repository forcing function make strict settings consistent", "d": "1/2018"}, {"body": "closing", "d": "1/2018"}, {"body": "alxhub created reproduction repo see ngsw nt register", "d": "1/2018"}, {"body": "could create reproduce repo would like debug related part", "d": "1/2018"}, {"body": "jialipassion ask", "d": "1/2018"}, {"body": "thank think may found reason try check create pr", "d": "1/2018"}, {"body": "created pr used repo test worked splaktar could try attached test repo used repo error occurs zonejszip", "d": "1/2018"}, {"body": "jialipassion try settimeout may problem test though", "d": "1/2018"}, {"body": "test different think ok update tested repo ok reason stable update internal task count never decrease", "d": "1/2018"}, {"body": "ok thank much think result performance gain", "d": "1/2018"}, {"body": "believe performance current version except rare case lot calls logic kind case performance improvement new pr trigger", "d": "1/2018"}, {"body": "jialipassion ok thank explanations much appreciated", "d": "1/2018"}, {"body": "jialipassion ca nt really help google api error since nt details work perhaps nt hosting project added allowed list well tested copying zip file folder prod build serving via tried couple different versions chrome service worker register tests updated repo fix minor issues include steps testing service worker readme go change service worker registers properly without changes zonejs", "d": "1/2018"}, {"body": "jamesdaniels taking look november firebase side nt look like real progress towards solution made", "d": "1/2018"}, {"body": "splaktar got try update repo find zone stable", "d": "1/2018"}, {"body": "splaktar think reason make long maybe need provide manually register way little research", "d": "1/2018"}, {"body": "need well recommended way workaround moment", "d": "1/2018"}, {"body": "update", "d": "1/2018"}, {"body": "updates released seems version works", "d": "1/2018"}, {"body": "checked reproduction repo using version issue still present think delagen might facing problem hope chuckjaz someone take second look updated repo run build error free", "d": "1/2018"}, {"body": "problem waiting updates", "d": "1/2018"}, {"body": "gaelmigliorini hmm really simple reproduction able run locally via ngc possible reproduce way cli case sure angular", "d": "1/2018"}, {"body": "mlcmlapis use cli webpack directly cli related setup also happening running ngc webpack application runtime", "d": "1/2018"}, {"body": "mlcmlapis jozsefm using cli problem also occurs console running app error ng build aot", "d": "1/2018"}, {"body": "proble problem still resolve", "d": "1/2018"}, {"body": "case problem either server server settings requests status comes case notification authorization error called redirect without reloading authorization page", "d": "1/2018"}, {"body": "freehuoshan look server side server setting problem somewhere", "d": "1/2018"}, {"body": "yes solved problem mainly authentication service cors service authentication service go back directly nt set cors header", "d": "1/2018"}, {"body": "updates", "d": "1/2018"}, {"body": "running issue well ngpackagr uses approach rendering solution useless single sharedmodule reexported index file breaks error thrown line bundlerts file declaration undefined declaration found symbol canonicalsymbol", "d": "1/2018"}, {"body": "reverted", "d": "1/2018"}, {"body": "genaantg problem think route loaded data param example route loaded navigation api handle error navigates custom error page api exception throwed due code import errorhandler injectable injector angularcore import router angularrouter injectable export class apperrorhandler implements errorhandler constructor private injector injector handleerror error void const routerservice thisinjectorget router routerservicenavigatebyurl error skiplocationchange true router navigates another url skiplocationchange trivial false result thing see breadcrumb loaded data param previous router generic error page think activatedroute old data nt know normal behaviour propertie specify data cleaned bug", "d": "1/2018"}, {"body": "calamarico think bug problem data param using navigation method nt use data param probably problem method router package line line method timeout maybe needs delay components view state change something like", "d": "1/2018"}, {"body": "genaantg sounds logical projects nt resolved yet problem right maybe tried another way", "d": "1/2018"}, {"body": "calamarico yet need time testing posting reproduction bug", "d": "1/2018"}, {"body": "ok working also asked question stackoverflow hope share solutions soon", "d": "1/2018"}, {"body": "calamarico good job thank today check think already imported module", "d": "1/2018"}, {"body": "genaantg forget import browsermodule wrong resolve problem said see navigatebyurl executed oninit method component executed navigates executed inside apis angular timing problem instantiating correctly component", "d": "1/2018"}, {"body": "calamarico yep think problem delay described", "d": "1/2018"}, {"body": "waiting use feature", "d": "1/2018"}, {"body": "hope implement micro frontend architecture angular elements eg combine several angularbased elementsapplication one page therefore question possible combine several angular versions one page angular elements would great question possible impact addressed documenation", "d": "1/2018"}, {"body": "pstrh would assume since angular elements creates sandbox bound host element would able use different angular versions like could use framework elements page different elements nt need know code controls others", "d": "1/2018"}, {"body": "general release date roadmap would helpful", "d": "1/2018"}, {"body": "skreborn describe idea would possible mix different versions keep also reasonable size whole", "d": "1/2018"}, {"body": "playground learn angualr elements date trouble finding many articles resources angularelements want intended purpose exactly organization beginning phases moment currently attempting convert existing angular app use angularelements developed internally opensource alpha build somewhere examine expounding previous comment expect see beta release allow older versions angular built incorporated angularelements microframwork", "d": "1/2018"}, {"body": "mlcmlapis thinking size implications honestly idea could done also keeping reasonable constraints bundle sizes version use load entire bundle separately nt say would good idea mix different angular versions suppose could theoretically work sidebyside without interfering one another", "d": "1/2018"}, {"body": "skreborn ok wanted confirm idea would change game seeing general limitation would surprised lot solution appears actually think want use several components minimum footprint similar step cli today generate minimal shared lib would contain absolutely necessary parts standard angular libs logical using angular version must", "d": "1/2018"}, {"body": "updates targeting initial experimental release elements validating angulario aim solve use case first get details get closer release feel free ask questions ca nt promise answer watching capturing use cases conceptually elements least initial implementation pretty straightforward nt really change much angular parallel major work happening view engine early numbers extremely promising terms code size mainly foundational work post see interesting things happen talk soon please keep mind labs project make guarantees ship dates functionality etc know plenty people excited aim get something useable devs hands sooner later learn iterate understand things may batteriesincluded stable angular apis support cli come may roll webpack config similar short term stay tuned hope implement micro frontend architecture angular elements eg combine several angularbased elementsapplication one page therefore question possible combine several angular versions one page angular elements would great question possible impact addressed documenation theory yes ideal part experimental process along upcoming view engine changes would hope running multiple versions would unnecessary pstrh would assume since angular elements creates sandbox bound host element would able use different angular versions like could use framework elements page different elements nt need know code controls others conceptually correct indeed ideal playground learn angualr elements date purely proof concept reasonably similar approach thing understand anything magical would possible developer write similar layer need something like right would worth reading understanding nt require support angular compiler current codebase labselements branch expect merge master shortly pending initial docs trouble finding many articles resources angularelements want intended purpose exactly organization beginning phases moment currently attempting convert existing angular app use falls angular labs want open set expectation production ready yet basic docs initial release full documentation integration graduates labs status angularelements developed internally opensource alpha build somewhere examine expounding previous comment expect see beta release see allow older versions angular built incorporated angularelements microframwork sure understand question unlikely backwards facing work elements nothing special elements something require would likely possible hint angular elements ngupgrade specifically downgrade basically thing bridging angular api custom elements spec angularjs apis respectively mlcmlapis thinking size implications honestly idea could done also keeping reasonable constraints bundle sizes version use load entire bundle separately nt say would good idea mix different angular versions suppose could theoretically work sidebyside without interfering one another going quote numbers suffice say reasonably confident within next couple major versions angular bundle size least concerns later", "d": "1/2018"}, {"body": "holding breath looking updates progress every second day team want move vue angular hope ability integrate angular elements existing codebase easing transition angular shift decision favour angular vue release reported around marchapril planning progress report elements around time know much time need buy", "d": "1/2018"}, {"body": "think elements could really really push angular alot also need ability create libraries easy soon possible anyway main problem community getting updated dont know guys working expect something really import projects plan robwormald filipesilva ocombe", "d": "1/2018"}, {"body": "look milestone angular task angular elements mvp follow", "d": "1/2018"}, {"body": "ok thank saying got informations elements ask long time also middle long issues would great place see expect angular future currently work priority experimental etc etc eg summarization presentation angular connect updates issue goes elements libraries three things know bet much going eg robwormald said something bundle size concern us future thats actually case dont make already public example someone says vis got x kb angular got lets prefer vis since bundle size highest priority could respond yes angular team much incredible work look schedule even plan half size next release also working", "d": "1/2018"}, {"body": "understand concern asked question last week team reply make announcements even cautious people take say fact works said nice everyone happy rarely case development things get postponed things take priority things get canceled nt work issues arise nt anticipate etc point even say estimation changes people get angry took said granted planed accordingly project business etc let say announce angular elements released march convinced boss use next project instead vue like alshdavid wants turns march ready buggy postpone need finish something else first boss comes blames return blame angular team angular connect sure would get runtime code translations done said talk making good progress design docs working already high hopes turns core changes new renderer make work much easier also obsolete finished part decided wait little work runtime new renderer postponed instead best apparently one blamed delay time could happened would felt terrible even really fault best make announcements like heard try best future share roadmap work probably hiring new devrel also help communication rob amp stephen already lot ground cover hope understand position well developer really really want share new exciting stuff planned give actual numbers new bundle size good conscience would nt understand turns differently someone else might someone would write blog post telling world angular sucks xxx much better least actually done yyy instead telling people would happen make end would hurt angular whole community want", "d": "1/2018"}, {"body": "vijayanandkannan component true dynamic plugin doubt think need convincing solution loading angular modules external umd bundles runtime", "d": "1/2018"}, {"body": "snarun sure mean true dynamic plugin module html code form controls comes database inserted using jit form controls build dynamically validation based controls part html look plunkr example working need verify reason see building form controls thisaddcomponent html code dynamically complied runtime", "d": "1/2018"}, {"body": "snarun would interesting us show us small principal example also still sure mean think exactly", "d": "1/2018"}, {"body": "seeing well make reproduction publically available temporarily disable ngsw since staging site need keep working probably wo nt fail unless previous version ngsw installed change app redeploy nt upgrade libraries kept versions angular everything else another staging build pushed staging seems like ngsw failing upgrade properly using firebase hosting", "d": "1/2018"}, {"body": "experiencing well issue preventing us moving sw production", "d": "1/2018"}, {"body": "also issue like everything working locally hosting firebase hosting breaks error", "d": "1/2018"}, {"body": "well service worker bad line time", "d": "1/2018"}, {"body": "created blog post angular elements researches angular amp web components hope help new users get started angular elements", "d": "1/2018"}, {"body": "chance someone assigned one near future", "d": "1/2018"}, {"body": "problem solution", "d": "1/2018"}, {"body": "ticket appears closed someone post fix still getting error uncaught error unexpected value imported module function please add ngmodule annotation u arrayforeach tgetngmodulemetadata tloadmodules tcompilemoduleandcomponents tcompilemoduleasync tcompilemoduleasync tbootstrapmodule il", "d": "1/2018"}, {"body": "rpeddu sure update package see error try", "d": "1/2018"}, {"body": "issue anyone post fix pls", "d": "1/2018"}, {"body": "building", "d": "1/2018"}, {"body": "issue disabling mangle option production webpack configuration uglifyjs plugin reveals error someone angular cli team please help frustrating know particular issue occur previous app projects using angular cli version pkozlowskiopensource reproduce clone angularstarter repo install npm modules run production webpack configuration moment achieving setup local web site iis pointing dist subfolder console error see browse site also attached screen grab achieve fyi tried updating angular packages latest version error still persists", "d": "1/2018"}, {"body": "case anyone else issue managed work around issue help angular bug fix also see fix use buildoptimizer jit production builds project specifically based angular starter repo please note fix changing configbuildutilsjs line tidy removed redundant aot check line anyway hope helps wasted lot time", "d": "1/2018"}, {"body": "update found already pull request angular starter repo exactly changes came", "d": "1/2018"}, {"body": "issues project upgraded angular several animations broken look ugly quite frustrating case animations entryleave animations component different triggers child items sure workaround", "d": "1/2018"}, {"body": "problem updates", "d": "1/2018"}, {"body": "updates fixed", "d": "1/2018"}, {"body": "still problem build", "d": "1/2018"}, {"body": "noderino upgrade every dependency updated angular cli", "d": "1/2018"}, {"body": "update angular cli delete nodemodule packagelockjson npm resolve error case", "d": "1/2018"}, {"body": "trying hour solve garrybrown advice removing well running npm version gt verify nt fixing seemed trick getting angular cli warning using latest typescript warning removed next cli update note already done installed latest cli per github release instructions", "d": "1/2018"}, {"body": "update typescript globally locally solved problem", "d": "1/2018"}, {"body": "solved removing packagelockjson npm install typescript", "d": "1/2018"}, {"body": "briancodes solution worked node typescript edit add encountering locally building production flag encountered ionic pro build process update typescript far seemed resolve", "d": "1/2018"}, {"body": "still issue", "d": "1/2018"}, {"body": "facing problem opened another issue problem", "d": "1/2018"}, {"body": "hello found problem latest version samsung internet service worker described strange behavior first access ok refresh website unvailable message delete cookies cookies website refresh ok app work untill next refresh maybe linked didnt bug previous samsung internet version", "d": "1/2018"}, {"body": "would voice little inconvenient broke several interfaces existing app bug fix release took longer diagnose would like passed cause breakage", "d": "1/2018"}, {"body": "ericlarson angular applies resjson try removing see works", "d": "1/2018"}, {"body": "jgodi hey getting similar error using ngpackagr help would lovely", "d": "1/2018"}, {"body": "alxhub estimate complete looks like original milestone missed", "d": "1/2018"}, {"body": "solution", "d": "1/2018"}, {"body": "solution", "d": "1/2018"}, {"body": "dottodot resolved issue", "d": "1/2018"}, {"body": "unfortunately ca nt remember exactly problem believe issue relates http requests app example try load app api server running throws error", "d": "1/2018"}, {"body": "case using docker expected things work way someonesomething accesses url mebrowser container whatever end captured host windows case hosts file redirects since hosts file reaches container recognises server name proxy container seems nt work expect turns add alias api url nginx service got answer stackoverflow", "d": "1/2018"}, {"body": "news guys igorminar trotyl mhevery", "d": "1/2018"}, {"body": "encounter issue angular version workaround", "d": "1/2018"}, {"body": "update issue problem application run angular", "d": "1/2018"}, {"body": "found workaround sure best solution fix testserviceisenabled subscribe result boolean gt expect result toequal observableof true const req reqflush obserbvableof true", "d": "1/2018"}, {"body": "workaround gave", "d": "1/2018"}, {"body": "add snippet code", "d": "1/2018"}, {"body": "sure like export const flushok status statustext ok work async gt servicemyfunction subscribe data gt expect data toequal observableof true", "d": "1/2018"}, {"body": "submitted pr doubt right one travis builds doesnt like", "d": "1/2018"}, {"body": "think pretty important maybe follow well cc filipesilva high dependency typescript range example see makes fix something seemingly generated somewhere around angular cli meaning downgrading cli fixes issue angular compiler nt support ts beyond time cli release tied angular ultimately puts somewhat dependency block ts supported angular cli something seemingly created", "d": "1/2018"}, {"body": "closing definitely configured preload already please open new issue find additional place optimise thanks samccone", "d": "1/2018"}, {"body": "meanwhile post important planned release dates comments thanks", "d": "1/2018"}, {"body": "ocombe referring comment nov created feature request cli would nice angular contributor could add comment issue raise awareness cli team think reality usecases applications need aot static parts app jit dynamic content server view cli angular support use case properly possible guess number aotjit related issues become less", "d": "1/2018"}, {"body": "exactly support idea surprised angular animation feature nt ship builtin loop function hard time properly looping angular animation loop count built set number times want animation loop angular animations come loop function", "d": "1/2018"}, {"body": "angular come animation loop hopefully google make happen", "d": "1/2018"}, {"body": "awesome nekkon sry delay finally created loop demo workaround see click go loop state source need loop demo component page hope helps another person need", "d": "1/2018"}, {"body": "amazing uses event fired animation finished still would like see iterationcount properly implemented angular", "d": "1/2018"}, {"body": "yeah work around ideal would something like make repeat state changes make repeat times", "d": "1/2018"}, {"body": "yeah iteration count implemented angular hope google guys find feature request", "d": "1/2018"}, {"body": "would say time abandon angular animations permanently check new javascript aniamtion framework see easily trigger complex animations realized angular animations waste time buggy limitations browseranimationsmodule extremely sensitive crashes whole app tiny bit mistake point stop using angular animations google team decides improve doubt create something beat animejs", "d": "1/2018"}, {"body": "crashes whole app tiny bit mistake thank throwing error instead automagically working whatever heck think correct mistake stop using angular animations google team decides improve realize angular opensource free jump help create something beat animejs", "d": "1/2018"}, {"body": "news", "d": "1/2018"}, {"body": "thirdparty code imports screwed one example swaggercodegen imports httpclientmodule course change code generator case current behavior generally pitfall", "d": "1/2018"}, {"body": "johanneshoppe made mistake correct thirdparty lib else say api inject di", "d": "1/2018"}, {"body": "johanneshoppe think issue apply swaggercodegen since imported since method done think still something changed code generation template please open issue however agree would nice mistake importing anywhere else would cause notice error presented developer", "d": "1/2018"}, {"body": "macjohnny would expect supposed import lazyloaded childs appmodule cases imported triggers behaviour described issue nt", "d": "1/2018"}, {"body": "johanneshoppe case swagger codegen generated yes import lazyloaded children get behavior described issue however necessary add functionality defines providers api services declare components anything else would require importing anywhere else root module explicitly checked whether imported throws error means behavior issue occurs import lazyloaded child module", "d": "1/2018"}, {"body": "task update lock files installing new version yarn change lockfiles still install packages run want get latest packages list outdated packages nt want change versions right nothing update yarn dependency everything work", "d": "1/2018"}, {"body": "apparently circleci image already using yarn confirm alexeagle", "d": "1/2018"}, {"body": "angular circleciconfigyml currently docker run rm circleci yarn version tue jan olivier combe notifications githubcom wrote apparently circleci image already using yarn confirm alexeagle receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "afraid seeing similar issues moving angular stay empty one calls expected valid case start checking looks like request response seems matching standard required headers yet seeing nothing console result seemed work using version angular received results similar testing specific service call ideas trotyl careful examine nt missing headers make work could nt spot afraid actually found regression bug angular angular", "d": "1/2018"}, {"body": "seem work regular httpclient calls httpinterceptor angular http call httpclient httpinterceptor code part http response backend console logging request passes interceptor twice options preflight get logging httpclient call includes contenttype custom response headers logging httpinterceptor includes contenttype response header bjeaurn indicated work angular giving bit thought wondering access http request http response interceptor might looking request instead response", "d": "1/2018"}, {"body": "bjeaurn bertjan httpclient amp interceptor came httpinterceptor specific issue nt get could worked request passes interceptor twice options preflight get xhr expose request amp response user happen filtered httpeventtype", "d": "1/2018"}, {"body": "ok found problem caused course inspecting request headers instead looking response headers works intercept method reason confusion probably point view signature intercept changed bit custom intercept method created previously working http response interceptor http request next chain inspecting http response interceptor obviously hook nexthandle pipe", "d": "1/2018"}, {"body": "mistake sure cleared confusion issue already works set correct headers service plug response httpinterceptor httpclient", "d": "1/2018"}, {"body": "bertjan would mind posting map function please comment issue familiar pipe function", "d": "1/2018"}, {"body": "sure function inspects response headers via emits event eventemitter action needed", "d": "1/2018"}, {"body": "nevermind found function rxjs library confused like import map rxjsoperators unfortunately nt solve problem stepping eventually able see json body response rest api map method interceptor also able see accesscontrolexposeheaders set network tab chrome dev tools back map method interceptor none http headers set", "d": "1/2018"}, {"body": "apologies advance formatting mobile figured map method response interceptor import map rxjsoperators import httpresponse angularcommon return nexthandle req pipe map resp httpresponse note still set accesscontrolexposeheaders header explicitly backend", "d": "1/2018"}, {"body": "going spent day bug", "d": "1/2018"}, {"body": "main thing wrong nt put careful", "d": "1/2018"}, {"body": "duylampersol people thread found due faults still reproduction remainings provide repro solved quicker", "d": "1/2018"}, {"body": "trotyl duylampersol sure even bug big difficulty finding fault dev side part server settings super irrelevant side need set headers properly including security headers modern browsers require side need check using goes first application running works exactly expected", "d": "1/2018"}, {"body": "export class zoneclientbackend extends zonemacrotaskwrapper httpevent gt implements httpbackend constructor private backend httpbackend super handle request httprequest observable gt return thiswrap request protected delegate request httprequest observable gt return thisbackendhandle request zonemacrotaskwrapperthiswrap firebase obserabledelegate httpbackend firebase use vikerman caeruskaru make instruction sir simple try best work please important make firebase app working production", "d": "1/2018"}, {"body": "hi vikerman plan update examples angularuniversal way provide snippet handle observablespromises xhr requests created httpclient thanks advance kind regards", "d": "1/2018"}, {"body": "hey caeruskaru update solution", "d": "1/2018"}, {"body": "dcballs hiepxanh apologize nt able get touch vikerman want coordinate best design doc try end month promises", "d": "1/2018"}, {"body": "yes thanks alot give us hope relax opensource whenever ready tell help anything love support angular team", "d": "1/2018"}, {"body": "thank caeruskaru need assistance provide example implementation customized solution nt hesitate ask cheers", "d": "1/2018"}, {"body": "hi going fixed next release workaround waiting release", "d": "1/2018"}, {"body": "encountered error today apply workaround provided uparlange fixed next release", "d": "1/2018"}, {"body": "also experiencing issue service dynamically introduces overlay content", "d": "1/2018"}, {"body": "mobx seems ability bind data class mobxangular controll view render destroy also detectchange mobx smart although must write lots external code template", "d": "1/2018"}, {"body": "linbolen yes example angular change detection becomes smarter works completely without zonejs support computed properties zonejs minified size whole mobx library minified size mhevery estimates priorities implementing computed properties angular maybe help creating initial document architectural design comparison frameworks implement computed properties", "d": "1/2018"}, {"body": "plans fix people working systemjs", "d": "1/2018"}, {"body": "issue anyone found fix", "d": "1/2018"}, {"body": "hi update bug timeframe fix available get error running angular app angular cli", "d": "1/2018"}, {"body": "news using angular tests still failing", "d": "1/2018"}, {"body": "updates failing use angular use even upgrading", "d": "1/2018"}, {"body": "sorry updating angularcli resolved issue thanks", "d": "1/2018"}, {"body": "may problem using jest run tests added following jestglobalmocksjs fixed", "d": "1/2018"}, {"body": "ok tested looks fine thank", "d": "1/2018"}, {"body": "guys think line could related errors default nt sw cached content fetched work offline mode got offline app working one time messed configurations sw deleted sw production build unable track cause issue", "d": "1/2018"}, {"body": "helped fixing thx hand tutorial could benefit global description need works introduction diagram could help words vs image split parts end part application still work document rather long mean files listed final code review mention syntax errors ide auto completion sneaky attack light change hero application tired nt know goal achieve means approximatively half document wondering ends nt think opening another issue relevant category fit end may help authors make tutorial evolve frenchie sorry english", "d": "1/2018"}, {"body": "problem agree application work time instructions indicate try although hardly take credit person submitted fix documentation submitted pull request hopefully incorporated online documentation soon", "d": "1/2018"}, {"body": "believe error documentation comes code referenced location md file references module located", "d": "1/2018"}, {"body": "fixed documentation patch submitted awaiting approval pull request", "d": "1/2018"}, {"body": "still facing issue even latest", "d": "1/2018"}, {"body": "try replace routermoduleforchild routermoduleforroot", "d": "1/2018"}, {"body": "updating libraries latest angular angular cli typescript get similar error environment application modules services inserted outside app folder using typescript path mapping see error get browser console", "d": "1/2018"}, {"body": "resolutions imported httpmodule amp httpclientmodule appmodulets still getting error", "d": "1/2018"}, {"body": "happened routingmodules imported forchild routes importing routertestingmodule imports declarations configuringtestingmodule fixed issue import routingmodule module", "d": "1/2018"}, {"body": "afaict also fails", "d": "1/2018"}, {"body": "issue got pages chapter darkseal book little handy compile script many pages explains else needed upgrade find code", "d": "1/2018"}, {"body": "using angular version import httpclientmodule appmodulets httpmodule import httpmodule angular import httpclientmodule angularcommon import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import appcomponent appcomponent ngmodule declarations appcomponent imports browsermodule formsmodule httpmodule momentmodule httpclientmodule providers bootstrap appcomponent export class appmodule fixed issue", "d": "1/2018"}, {"body": "fixed issue chakrapanikulkarni unfixed deprecated httpmodule removed idea httpclientmodule nt sufficient presumably replaces httpmodule", "d": "1/2018"}, {"body": "chakrapanikulkarni right solution using import also keep mind default return observable already converted json furthur need use subscribe directly", "d": "1/2018"}, {"body": "add import httpmodule angular appmodulets http add import httpclientmodule angularcommon appmodulets", "d": "1/2018"}, {"body": "imported httpmodule httpclientmodule still getting error please one help trying implement routing", "d": "1/2018"}, {"body": "amitkprajapati import httpclientmodule", "d": "1/2018"}, {"body": "problem app issue like check appmodulets file inner import check modules created see newly created files unimported case tried register effect without importing freezerservice core module manages service module", "d": "1/2018"}, {"body": "add array appmodulets", "d": "1/2018"}, {"body": "stop ionic rerun show real error message", "d": "1/2018"}, {"body": "ilivestrong got adding userlistcomponent fixed component imported usermodule imported appmodule hope helps", "d": "1/2018"}, {"body": "working solutions files", "d": "1/2018"}, {"body": "add provider array side appmodulets donot forget import sure camera work properly browser error posted go away", "d": "1/2018"}, {"body": "sorry accessing computers travelling fri jan pm muhammad umair notifications githubcom wrote add camera provider array side appmodulets donot forget import receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "one right define provider appmodule file pm jerson notifications githubcom wrote sorry accessing computers travelling fri jan pm muhammad umair notifications githubcom wrote add camera provider array side appmodulets donot forget import receiving mentioned reply email directly view github receiving commented reply email directly view github mute thread", "d": "1/2018"}, {"body": "need provide dataservices import import dataservice dataservice component selector templateurl styleurls providers dataservice", "d": "1/2018"}, {"body": "error occur use feature module add routermoduleforroot routermoduleforfeature items reducers", "d": "1/2018"}, {"body": "thanks jersonjohn suggestions helped", "d": "1/2018"}, {"body": "make sure adding httpmodule http problem even adding http would fix issue add httpmodule shown next paragraph add import httpmodule angular appmodulets course means add imports array well add import http angular appmodulets still show error even add reference imports arraylist newest version cli add build using npm generating new package reason must previously done longer trying build youtube series project need import httpmodule appmodulets file", "d": "1/2018"}, {"body": "information deprecated favor package use latest one make upgrade easy", "d": "1/2018"}, {"body": "problem moved property component inside parameters solved moved back", "d": "1/2018"}, {"body": "seems kind changes purpose gain nothing fix nothing break builds working long time good", "d": "1/2018"}, {"body": "could accomplish without loadash code", "d": "1/2018"}, {"body": "tresorunikin nt work property nested object consider something like code would see url like api call edit amp disclaimer nt know already addressed recent updates still using workaround op works prob", "d": "1/2018"}, {"body": "problem appscripts version either downgrade app scripts version upgrade appscripts make build prod aot problem resolved", "d": "1/2018"}, {"body": "encountered issue could nt easily tell could caused followed upgrade instructions comments upgraded angular got different error seems tslint related nt find anything reasonable could fix thought came mind try using yarn instead npm deleted nodemodules reinstalled everything yarn tried running development build use aot flag bang throws different time useful meaningful error filename line number fixed works seriously considering moving yarn permanently could add tried installing npm time removing packagelockjson file see quite many changes dependencies difficult tell changed dependency version made actual error message show consider deleting packagelockjson reinstalling dependencies see reveals actual issue", "d": "1/2018"}, {"body": "aghaaliabbaskhan thats whole truth appscripts forward wrong error angular still ionic problem error cames ng", "d": "1/2018"}, {"body": "tlaak packaging nt issue sure yarn installed version angular", "d": "1/2018"}, {"body": "crutchcorn many changes able tell quickly suspect version mismatch somewhere removing unexpected closing tag restoring packagelockjson still getting flags error deleting packagelockjson reinstalling works", "d": "1/2018"}, {"body": "upgrading angular gives clear message sure components imported ngmodule ou excluded tsconfig file", "d": "1/2018"}, {"body": "please make sure paths match exactly angular casesensitive paths took hours last night track issue angular aot build bad code good code capital programtitles whole problem error message angular aot build ca nt resolve appmodulengfactory discussion thread definitely helped thanks necessary downgrade earlier angular version get meaningful error message pointed problem component", "d": "1/2018"}, {"body": "angular always sensitive even early beta", "d": "1/2018"}, {"body": "incorrect casing path would also cause issues ci pipelines happen run linux casesensitive file system unlike macos windows", "d": "1/2018"}, {"body": "jsmike method called part view model pipeline words called value change initiated user ui typing text input example cases valuechange event always emitted design took look demo reason programmatic call triggering way cva set calling method take bounds logic mentioned suggest implementing another way model view pipeline essentially telling forms api also view model write every time model view write nt recommended addition forcing valuechange event also force control become dirty whenever value changes programmatically generally speaking want call cva change initiated ui eg mousemove event bounds logic would better injecting ngcontrol cva programmatically setting value really add detailed guide cvas api docs", "d": "1/2018"}, {"body": "hi kara best way inject ngcontrol cva know access ngcontrol implementing bettersuggested pattern", "d": "1/2018"}, {"body": "ca nt even get work related", "d": "1/2018"}, {"body": "work z output basic format case", "d": "1/2018"}, {"body": "ocombe oops looks like version mismatch", "d": "1/2018"}, {"body": "ocombe revisiting issue try format date like gmt timezone getting produce remove", "d": "1/2018"}, {"body": "nt think format", "d": "1/2018"}, {"body": "shlomiassaf sure mean previous comment simply allow js config compile although recommended use remove ts loader exactly recommended", "d": "1/2018"}, {"body": "want share workaround put together reading advices patching script current version moment writing prevents updating prepared put patched copy somewhere repo grab patched version changed compared original file add script run every time copyoverwrite location run build normal see consolelog message using patched angularcli profit", "d": "1/2018"}, {"body": "jabbera use approach custom headers nt complex side note security standpoint nt want application access token app access auth tokens prone xss attacks may need polyfilled", "d": "1/2018"}, {"body": "seedy strongly disagree useful crosscutting aspects namely things need done app independently logic used thing like logging auth loading notifications reason used party modules implementing generic loading notification auth logic without touching existing code interceptors use custom api extended forcing change existing code however ot issue interceptors option ignore specific api", "d": "1/2018"}, {"body": "would possible interceptors declared global current behavior local instance httpclient idea would project provide several using factory list activated interceptors example want specific httpclient instance rest apis configured differently call partner api different auth different interceptor would enable ignore interceptor use configured httpclient could add remove interceptors specific subset requests impact business code provider injection dependency backward compatibility reasons keep current behavior global interceptors", "d": "1/2018"}, {"body": "jccazeaux possible every instance gets interceptors using solution using fact also enabled disabling particular interceptor sending unique header metadata still solution far perfect think possible send additional data interceptor like possible angular even reason people consider anit pattern still option life would much easier corner cases refactored code deleted custom inheriting favour simple httpclient simplifies lot things time creating wrapper around httpmodule provide default headers every request etc interceptors nt yet still one solution problem talking extend httpclient custom implementation seriously nt best pattern like work http api directly wrappers written achieve simple things", "d": "1/2018"}, {"body": "tried extending httpclient say good idea jcimoch mean every instance gets interceptors currently possible think may possible configure interceptors without using headers metadat really intrusive possible provider configuration nt", "d": "1/2018"}, {"body": "jccazeaux import section module like lazy loaded one instead injection di interceptors reset every instance gets interceptors", "d": "1/2018"}, {"body": "ok module several different interceptors nt know clear idea", "d": "1/2018"}, {"body": "jccazeaux hmm want interceptors written understand", "d": "1/2018"}, {"body": "nt want interceptors apply requests mid size web application several rest backends business api partner api technical api see node api called localhost application maintainable need different httpclients configurations business api must csrf proof partner support ca nt activate otherwise cors fail csrf header technical api specific need specific behaviors tomorrow partner csrf activate minimal code impact configured httpclient specific partners requests add interceptor impact business code request added ignore header metadata would modify request forget one sure nt mutliple backends would totally useless midsize business apps useful previous internal framework add revealed useful complete framework angular imho kind stuff nb servers backend predictable depends user used interceptor filter", "d": "1/2018"}, {"body": "jccazeaux understand arguments actually using lazy loaded module importing httpclientmodule means creating new httpclient instance possibility provide set interceptors module level would mean separate lazy loaded module services extra api need although technically work smoothly sure best solution maybe would better consult theme author httpclientmodule alxhub present often gitter channel nt problem reach", "d": "1/2018"}, {"body": "mlcmlapis working design allow registration interceptors lazy loaded modules would installed globally still single set interceptors application nt like way works currently accidentally bind lazy module get instance nt share root interceptors interceptors critical security example", "d": "1/2018"}, {"body": "alxhub understand idea still trying imagine would possible allow creation sets interceptors identifying allowing use optionally ids control set called default would still calling interceptors", "d": "1/2018"}, {"body": "mlcmlapis multiple sets interceptors job nicely alxhub think possible", "d": "1/2018"}, {"body": "christianulbrich thanks link localstorage versus cookie token look", "d": "1/2018"}, {"body": "christianulbrich ca nt use httpclient within interceptor circular dependency still stuck fetch unless another idea tried chaining calls together fire order ie token local storage original call fires const tokenevent nexthandle tokenrequest", "d": "1/2018"}, {"body": "needed complicated skip urls newbie angular const excludedurl apiworldcityall apiworldcountryall excludedurlsome x gt x requrl thislog excluded request requrl return nexthandle req", "d": "1/2018"}, {"body": "jabbera try decomposite service try get token resolved problem removing calls httpclient service token logic new service deals tokens without requests", "d": "1/2018"}, {"body": "olegbabkin work interceptors community interceptors many interceptors many applications many urls soon become pretty complicated backend configuration possibilities spring resttemplate allows instantiate many needed set interceptors possible something similar angular", "d": "1/2018"}, {"body": "encountered problem interceptor need http request get new token", "d": "1/2018"}, {"body": "alxhub sets interceptors working design allow registration interceptors lazy loaded modules would installed globally still single set interceptors application idea single set interceptors application installed globally including defined lazy loaded module generally fine allow easy filtering using subsets interceptors following would enough ability set optional mark interceptor probably set defined maybe array combinations would easy available later inject registered interceptors httpinterceptors chain last first including skipping interceptors mark requested set mark array ability specify set interceptors array request get post pass able get chaining interceptors set interceptors used calling request interceptors used", "d": "1/2018"}, {"body": "alxhub thought something interceptors declared lazy loaded modules become global module loaded lead strange behaviour ajax requets behave depending user navigation still conviced angular allow define sets interceptors mlcmlapis describes well considered", "d": "1/2018"}, {"body": "agree jccazeaux really bad idea might bring unpredictable behaviour whole application", "d": "1/2018"}, {"body": "import ngmodule localeid angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import appcomponent appcomponent import hellocomponent hellocomponent import registerlocaledata angularcommon import ptbr angularcommonlocalespt registerlocaledata ptbr ngmodule imports browsermodule formsmodule declarations appcomponent hellocomponent providers provide localeid usevalue ptpt bootstrap appcomponent export class appmodule", "d": "1/2018"}, {"body": "ocombe nice example works fine need register locale within module javascript import ngmodule localeid angularcore import registerlocaledata angularcommon import ptbr angularcommonlocalespt registerlocaledata ptbr ngmodule imports browsermodule formsmodule declarations appcomponent hellocomponent providers provide localeid usevalue pt bootstrap appcomponent export class appmodule example", "d": "1/2018"}, {"body": "well done gbgames know forehead pain well", "d": "1/2018"}, {"body": "way actually revision rather see screenshot", "d": "1/2018"}, {"body": "mentioned comment part final intentional since last revision nt flake aio tests fact getting instead weird unexpected hope false reporting chromedriver protractor karma seems think build chromedriverprotractor think", "d": "1/2018"}, {"body": "protractor false reporting version way sounds bit fishy perhaps protractor actually using different chrome version real", "d": "1/2018"}, {"body": "nt think version chrome available protractor use might worth investigating chromedriver reporting btw either", "d": "1/2018"}, {"body": "still strange since webdriver asks chrome", "d": "1/2018"}, {"body": "created check travis build seems indeed use chromium version install", "d": "1/2018"}, {"body": "discussed offline turns spoke soon stopped looking log saw error happens nonclibased examples clibased ones ignoring variable something broke switched clibased examples petebacondarwin right seems different version chrome atm used examples tests since clibased would explain flakes started happening blue probably started happening version chrome updated past certain pinned version chrome would never noticed different version failed tests great eye petebacondarwin smiley need find way use pinned version examples tests optionally try find chrome comes grin", "d": "1/2018"}, {"body": "install new version typescript tools vs make sure change typescript build project", "d": "1/2018"}, {"body": "seems issue broke build version works fine latest generate js factories emit metadata definitions files nodemodules", "d": "1/2018"}, {"body": "running using ngxboostrap seem related fact xcomponentjs xcomponentngfactoryjs generated nodemodules folder factories references rewritten local paths making impossible bundle using rollup issue well described either keep js files rewrite imports js files", "d": "1/2018"}, {"body": "allnamesrtaken using building lib", "d": "1/2018"}, {"body": "mlcmlapis using ngc nodemodulesbinngc p srctsconfigjson edit work add tsconfigjson indicates related forces library add number specific includes less optimal", "d": "1/2018"}, {"body": "allnamesrtaken hmm using building packages due specs angular package format later compiling app packages already installed others packages versions packages already ngc able compile packages aot mode created finally create bundles js ngfactoryjs included eliminate decorators nt need aot mode steps nt need add anything section file", "d": "1/2018"}, {"body": "mlcmlapis sound like workaround point clean ngc generate broken files either mangle path add js files imported using module format get work sure feels like law least surprise action", "d": "1/2018"}, {"body": "routereusestrategy plunkr lead error reattach activatedroutesnapshot created different route jumping child route another sibling back first parent found implementing routereusestrategy bit combersome children routes maybe redirects guidance implement reuse strategy cases bug", "d": "1/2018"}, {"body": "krivochenko managed build without flag building webpack ca nt figure means", "d": "1/2018"}, {"body": "seems like building solves issue creates another people reported real problems modules ca nt see wrong idea error really means also people said could problem breaking build deppending configs issue exactly case mine", "d": "1/2018"}, {"body": "thanks works tooo", "d": "1/2018"}, {"body": "got error updating solved replacing following appmodulets current packagejson config last hours update several major updating conf included downgrading corrections like typescript name firebasecrud version author ionic framework homepage private true scripts clean ionicappscripts clean build ionicappscripts build lint ionicappscripts lint ionic build ionicappscripts build ionic serve ionicappscripts serve dependencies angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angulartscwrapped ionicnativeappminimize ionicnativeautostart ionicnativecore ionicnativedatepicker ionicnativegeolocation ionicnativenativestorage ionicnativenetwork ionicnativesplashscreen ionicnativestatusbar ionicstorage cordovaandroid cordovabrowser cordovapluginappminimize cordovapluginautostart cordovaplugincompat cordovapluginconsole cordovaplugindevice cordovaplugingeolocation cordovapluginnativestorage cordovapluginnetworkinformation cordovapluginsplashscreen cordovapluginstatusbar cordovapluginwhitelist firebase ionicangular ionicpluginkeyboard ionicons latest moment rxjs swtoolbox typescript zonejs devdependencies ionicappscripts ionicclipluginionicangular typescript description ionic project cordova plugins cordovapluginconsole cordovaplugindevice cordovapluginsplashscreen cordovapluginstatusbar cordovapluginwhitelist ionicpluginkeyboard cordovapluginappminimize cordovaplugingeolocation geolocationusagedescription control de presencia cordovapluginnativestorage cordovapluginnetworkinformation cordovapluginautostart platforms android browser", "d": "1/2018"}, {"body": "working solutions attached files", "d": "1/2018"}, {"body": "need change building library might try updating angular dependencies latest know better error definitions error part guessing library dependent changed syntax without documenting happened ensevilla firebase hase bad making kinds changes lately see importing firebase app module nt see using roll back made breaking changes way modules imported", "d": "1/2018"}, {"body": "suggested zhaoshiming import httpmodule appmodulets also faced issue importing httpmodule problem fixed", "d": "1/2018"}, {"body": "still issue imported httpmodule httpclientmodule nothing working angular", "d": "1/2018"}, {"body": "import httpclientmodule angularcommon import httpmodule angular imports httpclientmodule httpmodule providers httpclientmodule use things solve problem", "d": "1/2018"}, {"body": "thanks mahanjoy answer still working", "d": "1/2018"}, {"body": "similar issues imports error staticinjectorerror reportsservice", "d": "1/2018"}, {"body": "meet problem fixed use import httpclientmodule angularcommon import httpmodule angular imports httpclientmodule httpmodule need add httpclientmodule providers", "d": "1/2018"}, {"body": "thanks vincentalibert helped", "d": "1/2018"}, {"body": "using cli getting error message version typescript correct needed update typescript", "d": "1/2018"}, {"body": "anyone looking issue working doc actual behaviour governing rules quite subtle please see also documentation update contain mention", "d": "1/2018"}, {"body": "kapunahelewong actually discussing mhevery want change current behaviour confusing new proposal given hold work documentation till resolved otherwise would documenting moving target", "d": "1/2018"}, {"body": "alxhub hi alex updates getting console read property length null httpheadersapplyupdate checked may caused value passed headerset string code snippet let token localstoragegetitem authtoken let logininfo thislocalusergetinfoforheader values token login info headers empty till user logs question update values headers app initialization", "d": "1/2018"}, {"body": "alxhub please check part angular docs trying exactly getting headers values service depends user logged seems values headers updated may causes problem nt know could check", "d": "1/2018"}, {"body": "likewise happens called keyboard event", "d": "1/2018"}, {"body": "looks like core problem let track", "d": "1/2018"}, {"body": "kara referenced issue", "d": "1/2018"}, {"body": "adding note angular workaround use thing noticed data update comes really late existing form event sounds redundant huh", "d": "1/2018"}, {"body": "created pr proposed fix", "d": "1/2018"}, {"body": "issue example sure comp webpack falls build", "d": "1/2018"}, {"body": "nt fall component guide set webpack angular app falls grin issue underlying example would fall label said webpack guide deprecated removed sidenav accessible direct url search prs progress remove altogether eg see reasoning reasons mentioned going close", "d": "1/2018"}, {"body": "looks like duplicate", "d": "1/2018"}, {"body": "jasonaden basic reproduction problem using external packages see reproduction steps clone repo npm install npm run ngc gulp serve aot see following imports file", "d": "1/2018"}, {"body": "inline function also always compiles errors use exported named function argument loadchildren chances add support lamdaarrow functions", "d": "1/2018"}, {"body": "hi textbook promise usage instead observable worked yes please provide example thanks", "d": "1/2018"}, {"body": "samihdev clear relevant issue per comment op promise vs observable suggestion independent either", "d": "1/2018"}, {"body": "textbook comment thought able test using promises instead observable need example test working exactly meant sorry elaborative enough", "d": "1/2018"}, {"body": "update even angular cli nt find anything", "d": "1/2018"}, {"body": "need", "d": "1/2018"}, {"body": "also", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "slightly different setup custom component driving child ngif also error occurs nonprod code throws dreaded error however replace child divs custom child components use error creates another issue ca nt dynamically assign animation direction thoughts", "d": "1/2018"}, {"body": "able resolve issue statically providing animation states previously function dynamically generating animation states run time referenced store array states statically provide decorator componentanimations sure case error message definitely correct import browseranimationsmodule properly done", "d": "1/2018"}, {"body": "solution parent needed set referenced child comp reference make sure use settimeout changing variable allow child comp update input val", "d": "1/2018"}, {"body": "tried resolved really enjoying feature working lot better", "d": "1/2018"}, {"body": "mhevery mean cant fixed angular compiling big templates jit slow", "d": "1/2018"}, {"body": "handle json errors blob response type", "d": "1/2018"}, {"body": "matsko angular version problem still fixed far tell expect able pass params variable binding soon thanks response", "d": "1/2018"}, {"body": "nt working expected thisuser new user thisformresetform thisuser clearing fields nt resetting controls thisuser populating dropdowns value removing ngsubmitted form", "d": "1/2018"}, {"body": "updates solved work around works randomly fails least", "d": "1/2018"}, {"body": "recommendation people needs allowjs revert angular gets solved", "d": "1/2018"}, {"body": "think solved issue upgraded latest angular cli fixed issue angular doesnt work", "d": "1/2018"}, {"body": "still work angular cli allowjs set throws error write file", "d": "1/2018"}, {"body": "jackjamieson please try read thread first making additional comments error belong issue track", "d": "1/2018"}, {"body": "hey guys trying reproduce weeks clicking graph link hitting back button right away luck tempted close issue still valid guys still reproduce", "d": "1/2018"}, {"body": "matsko still reproduce windows machine angular think miss hit refresh button step please refer ghetolay comment take look animation gif link stackbliz angular", "d": "1/2018"}, {"body": "yep still long use mouse button hit back fast get error going ui button even keyboard shortcut slow provoke error maybe best repro would protractor test precise timing back action", "d": "1/2018"}, {"body": "alright able reproduce", "d": "1/2018"}, {"body": "got working ngupgradelite requires bit futzing around example root appmodule typescript function dummybootstrap element element modules string config export class appmodule constructor private readonly ngzone ngzone private readonly injector injector ngdobootstrap const injector thisinjectorget injector setuplocationsync bootstrap dummybootstrap injector thisinjector angular injector injector angularjs injector ngzone thisngzone", "d": "1/2018"}, {"body": "think could make simpler helper typescript function setuplocationsynclite injector injector const injector injectorget injector const router router injectorget router const url documentcreateelement injectorget rootscope locationchangestart next string string gt urlhref next routernavigatebyurl urlpathname urlsearch urlhash export class appmodule constructor private readonly injector injector ngdobootstrap setuplocationsynclite thisinjector const router thisinjectorget router routerinitialnavigation", "d": "1/2018"}, {"body": "wo nt benefit improvementschanges eg", "d": "1/2018"}, {"body": "case need factor functionality function like gave wrap upgradeheavy", "d": "1/2018"}, {"body": "would nice feature expect blur occurs within debounce time change event immediately executed", "d": "1/2018"}, {"body": "like new feature update async model user stopped printing passed second usage html typescript class component public query firstname string processing better performance always detecting", "d": "1/2018"}, {"body": "would breaking without lot added value want transform something outside template need import pipe one would expect import numberpipe strange call class something different actually export date number formatting functions used pipe also use code using pipe correct way", "d": "1/2018"}, {"body": "markperrybv working expected lifecycle hook using called control registration changes group validity checked try moving call using instead", "d": "1/2018"}, {"body": "closing repro", "d": "1/2018"}, {"body": "also getting error metadata version mismatch error", "d": "1/2018"}, {"body": "others mentioned expected behavior changes text field would produce string value like convert string different type custom control value accessor number field viable options", "d": "1/2018"}, {"body": "would say docs aio project needs gkalpak write docs", "d": "1/2018"}, {"body": "error updates", "d": "1/2018"}, {"body": "matsko feedback please", "d": "1/2018"}, {"body": "reading docs eink reader device would great", "d": "1/2018"}, {"body": "mgatto angular documentation changing relatively lot would mean new pdf day maybe several times day still think advantage", "d": "1/2018"}, {"body": "camdenkid thanks additional detail sorry delayed thanks think notifications set correctly oops", "d": "1/2018"}, {"body": "absence easy npm installation latest version apparently another recommended way use current version benchpress project monorepo pretty involved build source bug fixes latest versions really like access daft missing something really obvious thanks advance", "d": "1/2018"}, {"body": "schedule next sprint", "d": "1/2018"}, {"body": "updates", "d": "1/2018"}, {"body": "issue come function contain body", "d": "1/2018"}, {"body": "thanks saved", "d": "1/2018"}, {"body": "error ca nt resolve parameters router error app testing", "d": "1/2018"}, {"body": "faced issue resolved case missed injectable decorator serverservicets file", "d": "1/2018"}, {"body": "missing front injectable get error extremely simple scenario find nothing web probably simplestupid documented found many times", "d": "1/2018"}, {"body": "day realized removed polyfills nt think need missing", "d": "1/2018"}, {"body": "another scenario problem appear seems ng build watch running ng build prodenv cause dist files built corrupt errors instance error data service regarding injectable might want stop ng build watch fully stopped run ng build prodenv fyi ran issue", "d": "1/2018"}, {"body": "updates problem angular webstorm mac linux", "d": "1/2018"}, {"body": "maybe unrelated case typescript language service enabled webstorm refer language service works fine settings also using throws following error ng directive routerlinkstubdirective included module available inside template consider adding ngmodule declaration error ng component routeroutletstubcomponent included module available inside template consider adding ngmodule declaration disabling settings webstorm keeping added option also works fine nt know missing line fine without simply keep using option webstorm latest version angular latest version", "d": "1/2018"}, {"body": "avbentem solved problem checking recompile changes box options webstorm next time changed character recompiled errors went away thanks", "d": "1/2018"}, {"body": "thank changing character recompiling trick", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "1/2018"}, {"body": "form control takes object developer deep copy behavior desired", "d": "1/2018"}, {"body": "gkalpak wan na update ticket downgrademodule working perfectly finally got time remove hacky code put unsubscribe observables", "d": "1/2018"}, {"body": "lemoinem obvious router nt call markforcheck components reused", "d": "1/2018"}, {"body": "also face issue writing unit test angular using angular cli angular tried use fixtureautodetectchanges beforeeach function test still failed", "d": "1/2018"}, {"body": "closing looks like approach traction", "d": "1/2018"}, {"body": "aklaus created would great give feedback", "d": "1/2018"}, {"body": "report angular cli another library suffered problem angular info maybe still problem", "d": "1/2018"}, {"body": "closing update please open new issue still see pb", "d": "1/2018"}, {"body": "recommended workaround use formbuilder need", "d": "1/2018"}, {"body": "also noted form builder group docs mentions valid keys extra parameter map validator asyncvalidator formcontrol docs show add updateon assume missed updateon added", "d": "1/2018"}, {"body": "vivainio workaround works const controlconfig loop fields set default values field required fieldsforeach field gt controlconfig fieldkey fieldvalue updateon blur validators fieldvalidators return thisfbgroup controlconfig work though nt currently const controlconfig loop fields set default values field required fieldsforeach field gt controlconfig fieldkey fieldvalue fieldvalidators return thisfbgroup controlconfig updateon blur", "d": "1/2018"}, {"body": "luck workaround wait resolved using updateon", "d": "1/2018"}, {"body": "feature inconvenient need use formcontrol constructors instead formbuilder set validation onblur", "d": "1/2018"}, {"body": "consistency ease use", "d": "1/2018"}, {"body": "great idea came url thinking googling feature would give view oomph make least event processing lot easier", "d": "1/2018"}, {"body": "hi guys strange still issue updated till issue reproduced empty application component render simple html also got version also reproduce maybe smth wrong", "d": "1/2018"}, {"body": "upgraded still fixed", "d": "1/2018"}, {"body": "solael hey test google chrome maybe extensions block behaviour alos check browsers problem reproduce", "d": "1/2018"}, {"body": "working angular tested chrome version official build firefox ubuntu", "d": "1/2018"}, {"body": "possible different problems causes behaving case one open new issue linking original one new reproduction", "d": "1/2018"}, {"body": "issue fixed please somebody provide solution", "d": "1/2018"}, {"body": "hello everyone issue plnkr resolved still sounds like experiencing issue case please provide working reproduction stackblitz investigate otherwise nothing done right", "d": "1/2018"}, {"body": "closing repro", "d": "1/2018"}, {"body": "another launch announcement rule use create production bundle see doc example usage point missing codesplittinglazyloading windows support feature parity angular cli features aware", "d": "1/2018"}, {"body": "point missing codesplittinglazyloading windows support feature parity angular cli webpack features like inlining images tsfiles via require loaders", "d": "1/2018"}, {"body": "artaommahe good point probably long tail features aware solutions things google matter finding idiomatic way measuring demand features add", "d": "1/2018"}, {"body": "clarify others want use method httpheaders use like unfortunately nt work like one would expect", "d": "1/2018"}, {"body": "nt get working anyone atm issue idea properly headersheadersset however thisinit never called set never setting internal headers missing something", "d": "1/2018"}, {"body": "turns person still remnants old http module well", "d": "1/2018"}, {"body": "someone using iis work perfectly", "d": "1/2018"}, {"body": "seems already fixed", "d": "1/2018"}, {"body": "currently created online editor catch kind errors", "d": "1/2018"}, {"body": "igorminar technical way angular compiler could target react native output target biggest issue nativescript lack strong community surrounding project right thing propping project angular nt committed technology stacks committed best experience end user right entire team considering leaving angular entirely react native provides better story mobile something really nt want might forced higher quality mobile solution nt arise angular side things could target react native output nativescript parity react native longer reason consider leaving angular ecosystem", "d": "1/2018"}, {"body": "staeke work oninit capture templateref however adding hashvariable ngtemplate reading name works fine", "d": "1/2018"}, {"body": "ocombe ready us tackle love help standardizecompose error messages make sure docs covers", "d": "1/2018"}, {"body": "thanks reporting issue since fixed one recent releases cedriclevasseur cover wanted questions please let know revisit", "d": "1/2018"}, {"body": "perfect thanks", "d": "1/2018"}, {"body": "hi mickeysegal yes process figure handled currently backlog working right taking little time issue reach appropriate team members right apply labels figure issue go depending labels things effect path related issuesprs level effort different roles people need consulted ultimately gets assignment might imagine issues cover structural tonalthematic topics docs involve discussion find best solutions incorporated existing work need addressed tagging jenniferfell docs team project manager see suggestions mickeysegal thanks patience get means feel free submit issues prs anything like see improved", "d": "1/2018"}, {"body": "mickeysegal google led straight scouring tutorial see ever explained magic behind changed see path actually mattered course idea thanks posting", "d": "1/2018"}, {"body": "got problem added class declares static method believe static methods within classes used ie mymoduleforroot angular thinks defining module function would compatible aot compilation fails directive like nt worry angular class intented used bootstapping modules", "d": "1/2018"}, {"body": "meeroslav avoid cors absolute urls using proxy configuration set proxyconfigjson root project configure like see worked", "d": "1/2018"}, {"body": "thanks using cli look source see handle proxy config still think part httpclient though", "d": "1/2018"}, {"body": "checked cli wrong proxy refers would nt help production clientside api domain", "d": "1/2018"}, {"body": "help problem", "d": "1/2018"}, {"body": "experiencing issue solution", "d": "1/2018"}, {"body": "issue solution", "d": "1/2018"}, {"body": "created new angularcli project scss copied pasted example problem", "d": "1/2018"}, {"body": "fixed made mistake started empty project working", "d": "1/2018"}, {"body": "mistake see issues slightly different setup custom component driving child ngif throws dreaded error however replace child divs custom child components use error creates another issue ca nt dynamically assign animation direction thoughts", "d": "1/2018"}, {"body": "solution parent needed set referenced child comp reference make sure use settimeout changing variable allow child comp update input val", "d": "1/2018"}, {"body": "olivermuc thanks reference avoid performance loss settimeout creates macrotask full change detection better create microtask instead eg using since callback run current loop microtask main operations finish", "d": "1/2018"}, {"body": "thanks maxmarkus please elaborate performance gain also ensures child comp parameter animdirection gets properly set thisisactive true kicks please note isactive variable controlled parent comp levels beneficial isactive control could course handed comp directly edit gave shot approach unfortunately nt work timing nt allow child animate config update time kicks", "d": "1/2018"}, {"body": "import browseranimationsmodule angularplatformbrowseranimations also include import browseranimationsmodule", "d": "1/2018"}, {"body": "hey guys please include working stackblitz example error otherwise ca nt investigate breaking", "d": "1/2018"}, {"body": "vikerman opinion one", "d": "1/2018"}, {"body": "reason closing issue nt see solution issue also experiencing", "d": "1/2018"}, {"body": "fixed updated", "d": "1/2018"}, {"body": "issue upgraded", "d": "1/2018"}, {"body": "mrahhal solution nt work httperrorreponse improvement typescript import injectable angularcore import httperrorresponse httpevent httphandler httpinterceptor httprequest httpresponse httpresponsebase angularcommon import observable rxjsobservable import rxjsaddoperatorcatch import rxjsaddobservablethrow handle empty json responses injectable export class emptyresponsebodyinterceptor implements httpinterceptor constructor", "d": "1/2018"}, {"body": "exactly problem even import route path variable environment uses function calculate value variable luck router url displays undefined consolelog shows variable value properly help would appreciated", "d": "1/2018"}, {"body": "got problem removed following lines code compiles without errorswarnings manually add lines erros thrown", "d": "1/2018"}, {"body": "would nice yet find easy way implement global warning pending changes service something like could iterate active components page call specific method asking whether pending changes", "d": "1/2018"}, {"body": "get component instance using angular sure version became available", "d": "1/2018"}, {"body": "two hooks since version get instance component", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "update", "d": "1/2018"}, {"body": "feels convoluted rather different methods call different results rather inference currently used", "d": "1/2018"}, {"body": "pastafarian agree one case see responsetype option return login options work hand return options sure agree easier intuitive previous incarnation contrary clunky relies lot covers inference", "d": "1/2018"}, {"body": "ca nt really follow stumbled upon code using latest version vs code tells last line wrong reading comments feeling write workaround nt get even mean", "d": "1/2018"}, {"body": "tobihagemann want", "d": "1/2018"}, {"body": "thanks alxhub reread comment begin understand happening read carefully guess choice choose inline inline casting inline using spread operator things typedependent basically three options variant second option really workaround stated issue way things preferred option", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "key answer inline options object call typescript compiler complain return type way compiles without complaining res arraybuffer inline options like", "d": "1/2018"}, {"body": "nt old one allow pass nullsundefined would put query string noticed iv recently updated use httpclient found change functionality broken lot services", "d": "1/2018"}, {"body": "still getting enough define animation trigger regardless animation breaks browseranimationsmodule noopanimationsmodule", "d": "1/2018"}, {"body": "got error wrote heroes heroes error disappears corrected heroes heroes found solution", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation still feel issue please create isolated reproduction usecase stackblitz create new issue", "d": "1/2018"}, {"body": "already fixed", "d": "1/2018"}, {"body": "thanks sharing temporary fix", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "merging issue root cause pr flight", "d": "1/2018"}, {"body": "im trouble updating angular webworker powered application using issues back workaround helpful feels awkward", "d": "1/2018"}, {"body": "expected behavior according semantics described use last decorator kind eg component entire metadata base class overwritten defined derived class changing hostlistener click work expected since property decorator nt get overwritten fixing would breaking change existing inheritance behavior", "d": "1/2018"}, {"body": "stonecourier library update issue", "d": "1/2018"}, {"body": "report happening well using angular", "d": "1/2018"}, {"body": "able reproduce issue using firebase handle authentication work instead would get error url matcher able make match paused code resumed app would catch nt encounter problem also solves problem definitely hack", "d": "1/2018"}, {"body": "jurito could please pull request commit great never option", "d": "1/2018"}, {"body": "yep mlaval right queries meant descent view content component plunker elements part directive template view part content saying usecase legit saying current queries design impl follow different set rules mental model would need new design impl cover usecase marking feature request needs design", "d": "1/2018"}, {"body": "discussing mhevery really want descend template rendered component placed content would require us know much mlaval suggestion way go closing wo nt fix", "d": "1/2018"}, {"body": "error token refresh request getting intercepted http calls inside interceptors fire interceptors makes another http call fires interceptors stack overflow alxhub posted good solution preventing recursive calls interceptors need make http request inside one dependent service call inject httpbackend use instead httpclient per docs interceptors sit httpclient interface httpbackend injected httpbackend dispatches requests directly backend without going interceptor chain nt see use case solution nt work think issue closed documentation http interceptors updated point usage bypass situation", "d": "1/2018"}, {"body": "hi little new angular please bear got circular reference issue upgrading angular started following advice injecting httpclient via constructor rather using injector authentication service uses msal javascript use azure authentication service used inject configservice via constructor get policy info etc via http get also interceptor sets header bearer token upon return config service injects httpclient via constructor makes call method load data backend api changed configservice injection authenticationservice use injector running issues interceptor happy injector error typeerror thisinjget function injectable export class authenticationhttpinterceptor implements httpinterceptor private authenticationservice authenticationservice config service called anymore authenticationservice returning sorts undefined types specifically constructor private inj injector thisconfigservice injget configservice advice appreciated thanks mike", "d": "1/2018"}, {"body": "thinking switch new httpclient fix switched months face issue recommend people switch new httpclient give lot nice features error handler across app errorhandler interface got error tried inject httpclient errorhandler since errorhandler actually intercepts errors http well issue came injectorget way way resolve place large app using injector want remove find better way fix injectable export class errorhandlerservice implements errorhandler private httpclient", "d": "1/2018"}, {"body": "gkalpak wrong nt even work ublock similair disabled get error nt give clue thanks crappy zonejs relevant tl dr use plunker anymore stackblitz way go", "d": "1/2018"}, {"body": "roestvrijstaal works fine work could please provide link plunker nt work tell us browser may internet blocks way currently transition phase plunker stackblitz", "d": "1/2018"}, {"body": "easy extend add custom methods dynamic interceptors usage example ofc possible pass parameters custom methods interceptors", "d": "1/2018"}, {"body": "alxhub roadmap plan", "d": "1/2018"}, {"body": "dawidgarus point would nice able send metadata without extending httpclient plenty reasons would want inject raw custom implementation example complex project combination different modules across different teams developing modules isolation consuming app would force apply every minor change keep extended classes sync provide one really big ugly make every time yo want inject module customization using native implementation solve problems", "d": "1/2018"}, {"body": "jcimoch still possible achieve ended something like project teams agree use instead", "d": "1/2018"}, {"body": "hi guys news feature", "d": "1/2018"}, {"body": "hi guys news feature", "d": "1/2018"}, {"body": "biggest problem observe nt exist docs lose hours found topic", "d": "1/2018"}, {"body": "update issue occurs addressed ran across bug today async pipe ca nt quite comprehend previous value still wrapped change detection run", "d": "1/2018"}, {"body": "guyjstitt somewhat sensible explanation previous comment took time understand every part sounds reasonable fix avoid async pipe get hit issue write async pipe nt wrap values ps remember issue exists develop mode goes away", "d": "1/2018"}, {"body": "would great way involve router applications use router rather pull dependency needed also seems bit hacky use router general purpose lazy loading mechanism case need lazily load certain modulescomponents related current route solution using import appear work aot webpack produces chunk lazily loaded module appear aot code generated factories would used fairly large parts application would nice take advantage aot", "d": "1/2018"}, {"body": "jcludwig cant use yet use thing example want", "d": "1/2018"}, {"body": "toxicable really clear stackblitzcom site behind scenes tried exporting project work locally get error console like command also seem output code lazy bundle ideas experience using cause angularwebpack anything special using dynamic import expression module type causes webpack generate separate bundle lazily loaded module however angular aot appear follow link lazy code factories", "d": "1/2018"}, {"body": "jcludwig certainly works", "d": "1/2018"}, {"body": "jcludwig changing toxicable code appcomponent line seemed fix ie remove path module", "d": "1/2018"}, {"body": "jcludwig top mattmcardle mentioned also need adding dummy route module using default config ejected cli compilation transform every property token seperate chunk working stackblitz guess ejected cli config provided make work exported app stackblitz code added appmodule one sad part application using useless dependency", "d": "1/2018"}, {"body": "marcincichocki mattmcardle indeed trying make work without add dummy route router see original comment mlcmlapis work also using dummy route provide working repro think able get version working without using router though far seems like need put components section ngmodule decorator order factories get included lazy module rather specifying work progress", "d": "1/2018"}, {"body": "jcludwig using compile lazy loaded module marcincichocki confirmed certainly way let cli compile never heard tried section way get lazy loaded module compiled know cli splits routes", "d": "1/2018"}, {"body": "title issue make lazy loading available outside router module like focus developing solution require router made progress getting work see github repo linked earlier", "d": "1/2018"}, {"body": "issue nt really around angular tooling meaning cli way cli transitively webpack pickup lazy routes therefore make chunks modules looking token wait change works make things better right solutions wrappers around current methods", "d": "1/2018"}, {"body": "related issue cli repo", "d": "1/2018"}, {"body": "toxicable almost verbatim copy project crashes also tried angulardynamic failed error tried lot possible paths prefixing various amounts sure path issue yet using aot using webpack awesometypescriptloader angularrouterloader ordinary lazy paths working correctly idea wrong", "d": "1/2018"}, {"body": "jasonaden havent explained get reference magic factory really frustrating thing op wanted mount submodule specific path seemingly unrelated rubbish come play reason mounting modules path lazy loading horrible intertwined", "d": "1/2018"}, {"body": "please help sort issue configurations missing application thanks", "d": "1/2018"}, {"body": "issue switched angular adjusted code accordingly result url nt contain parameters tried change set method append issue idea fix", "d": "1/2018"}, {"body": "alekseytimonin httpparams immutable set method returns new httpparams without mutating original one code simply also note simply pass simple javascript object", "d": "1/2018"}, {"body": "issue simply put params generated request url looks weird like updates amp clonefrom null null example let new httpparams set firstname john set lastname doe params generate request like gt apipeople firstname john amp lastname doe however generate request like gt apipeople updates amp clonefrom null null currently remove usage httpparams generate request string feels bad suggestion idea fix would really appreciated best", "d": "1/2018"}, {"body": "angular version higher solved", "d": "1/2018"}, {"body": "thank however actually using angular happened part code changed", "d": "1/2018"}, {"body": "using try upgrade", "d": "1/2018"}, {"body": "cexbrayat new httpparams still strange implementation show typescript error fromobject map value string need convert bool number string developers need write utils simply convert plain object http params ts import httpparams angularcommon export function tohttpparams obj object httpparams let params new httpparams const key obj objhasownproperty key const val obj key val null amp amp val undefined params paramsappend key valtostring return params js const mylistfilter pagenumber contractid aaab onlyactive true const params tohttpparams mylistfilter oh finally would possible allowing set number boolean datetime", "d": "1/2018"}, {"body": "facing issue simple repro uses nested reactive form ngif", "d": "1/2018"}, {"body": "still problem must use work update angular", "d": "1/2018"}, {"body": "trying follow documentation using callback route callback route eagerly loaded method authentication upon success navigates another route using route lazy loaded sit callback route navigate route eagerly loaded works refactored feature module load eagerly solves problem module large figured using best practices load user logged", "d": "1/2018"}, {"body": "himajasuman still issue provide minimal repro case one linked number components clear one looking", "d": "1/2018"}, {"body": "kara minimal reproduction expected behavior forms pristine current behavior first form dirty second pristine bug affects internet explorer detailed comment", "d": "1/2018"}, {"body": "closing corrected update clibased docs mortichar outstanding questions please let know", "d": "1/2018"}, {"body": "fixed closed", "d": "1/2018"}, {"body": "hi thanks patience fixed doc updated cli closing outstanding questions please let know", "d": "1/2018"}, {"body": "augustbend elaborate number property reduce thanks", "d": "1/2018"}, {"body": "dependency injection related titles could use tech writer attention longer identical could better", "d": "1/2018"}, {"body": "fixed previous update closing testing talking foxandxss", "d": "1/2018"}, {"body": "thanks dancancro working rethinking presentation ngmodules related documentation topic confused pr big see singleton services doc progress ideas clarifying please feel free comment", "d": "1/2018"}, {"body": "always looked coremodule vs sharedmodule point di lazyloading taking acount lazy loaded module di container coremodule contains providers imported appmodule sharedmodule hand contains anything providers unless certain providers singleton case lazyloading libraries aswell angular router see implemented modules forroot includes providers appmodule sounds abit like coremodule definition forchild acts sharedmodule defined faq libraries different method names ngrx case socalled coremodule modulexforroot sharedmodule modulexforchild exact module different stuff imported thanks note might core sharedmodule definitions forroot mostly includes declarations aswell idea behind sounds di looking sure need explicit core sharedmodule practice often see multiple modules either act core providers root sharedmodule declarations pipes nonesingleton providers single probably larger project nt get wrong think idea behind coremodule sharedmodule important sure one named core sharedmodule exactly people coz docs mention explicitly like resulting big core sharedmodules remember starting angular told need coremodule sharedmodule without real reason managed understand di works started understand coming explain coremodule sharedmodule mostly start explaining di works case lazyloading useful situation explaining problems solved module types also seen coremodules act module keep appmodule clean making appmodule responsible bootstrapping app imho nice idea something unrelated coremodule definition dancancro roles identical provision appwide singletons ought two coremodule eliminated nt think coremodule appmodule also using socalled importing certain modules ur appmodule nt named coremodule however think naming coremodule explicitly confusing coz makes people think need called coremodule per application might multiple socalled coremodules real application", "d": "1/2018"}, {"body": "addressed changes cli documentation new projects please file new issue still problem", "d": "1/2018"}, {"body": "updated fixed closing", "d": "1/2018"}, {"body": "see also", "d": "1/2018"}, {"body": "worked", "d": "1/2018"}, {"body": "problem exists even latest versions solution delete nodemodules directory inside folder deleted nodemodules directory inside folder cause error go away compile act caused visual studio indicate nolonger installed updated restored error continued nolonger present", "d": "1/2018"}, {"body": "sometimes component jet initialized access get error says child component undefined first thing consider need wait view initialized access viewchild access component afterviewinit method however even access child component afterviewinit sometimes viewchild still returning null problem causedwas ngif directive solution use viewchildren instead viewchild subscribe changes subscription executed component ready example parent component parentcomponent want access child component mycomponent import component viewchildren afterviewinit querylist angularcore import mycomponent mycomponentcomponent export class parentcomponent implements afterviewinit code emitted clarity viewchildren mycomponent childrencomponent querylist public ngafterviewinit void thischildrencomponentchangessubscribe comps querylist gt access child component form", "d": "1/2018"}, {"body": "marcobarbero using setter reason observable", "d": "1/2018"}, {"body": "issue well workaround time", "d": "1/2018"}, {"body": "since filed issue doc changed use cli mitigate issues close issue outstanding issues please let know", "d": "1/2018"}, {"body": "cool mate cheers", "d": "1/2018"}, {"body": "must run created validation status correct creation time would break whole lot forms status would nt right nt likely change fwiw trying check equality two fields better way current implementation value changes validation function wo nt run status wrong usually better create group validator one level way simply check rather relying property component", "d": "1/2018"}, {"body": "hi tyeth thanks since fixed ca nt duplicate still need help please let know", "d": "1/2018"}, {"body": "writen plunker using template variables understand expressionchangedafterithasbeencheckederror change order components error disappers tried changedetectordetectchanges works", "d": "1/2018"}, {"body": "alexcenteno evaluation logic top bottom property set first reset using reference set meantime via withing one cd cycle repeated checking inputs child components beginning cd cycle dev mode detects change property", "d": "1/2018"}, {"body": "hi mlcmlapis thank time way avoid error guess something worry call enableprodmode", "d": "1/2018"}, {"body": "alexcenteno yes prod mode checking cd cycle invoked nt mean satisfied apply different logic passing cross child components also problem nt property use attribute component using would fine would allow update without error", "d": "1/2018"}, {"body": "using standart throw warning dev mode incorrectly work prod mode dispatching selecting different levelscontainers approach remove warning message seems complicated export class homecontainer isactivesidenavmenu thisstoreselect fromhomeisactivesidenavmenu isactivesidenavmenu ngoninit thisisactivesidenavmenu subscribe res gt thisisactivesidenavmenu res thiscddetectchanges idea solve problem correctly", "d": "1/2018"}, {"body": "rimlin tried directly subscribing store think similar problem avoiding template solved problem", "d": "1/2018"}, {"body": "thanks advice tried solution seems clear less code also need call otherwise view updated", "d": "1/2018"}, {"body": "using angular something like works", "d": "1/2018"}, {"body": "feature", "d": "1/2018"}, {"body": "see also", "d": "1/2018"}, {"body": "someone add specific repro case stackblitz plunker", "d": "1/2018"}, {"body": "know fairly late debate approach considered better pattern tytskyi approach kara wondering anyone wanted weigh one better weigh least site source official documentation seems missing piece personally see last resort option injecting directly seems better option surface benefits using", "d": "1/2018"}, {"body": "andreibelokopytov \u043a\u0430\u043a \u044d\u0442\u043e \u0432\u043e\u043e\u0431\u0449\u0435 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u0448\u0430\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044e \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430", "d": "1/2018"}, {"body": "nt think ever worked custom value accessors actually directive specifically selects custom value accessor way knowing happens checkbox hood nt match selector implemented roles suggested may able support box custom checkbox controls need provide validator", "d": "1/2018"}, {"body": "trying use workaround seems work setting module refinjector view container facing another issue way remains false function thus turn digest zone triggered dom nt get updated user actions perhaps default value could passed via info param submit pr tiny feature would accepted", "d": "1/2018"}, {"body": "fdim using nt lazyloaded modules run inside zone anyway could share minimal reproduction issue either repo check live exampe stackblitz could use project starting point", "d": "1/2018"}, {"body": "gkalpak yep using main application module lazy loaded modules aside lazy angular module loaded also comes angular module initialized via introduced angularjs includes downgraded components ones fail initialize routes set main application bundle splitting done like described fake lazy route prepare stackblitz example tomorrow still need", "d": "1/2018"}, {"body": "gkalpak prepared repository issue mentioned reproduced regular cli project complete example visible commit eventually run npm start open see link go route loads lazy module div element clicked showhide another element clicking affect unless called something else triggers digest fix made sure actual fix test open developer tools lookup file locate put breakpoint inside function line change true component lazy module invoked value true component work intended gitter questions", "d": "1/2018"}, {"body": "thx repro fdim nt think get week try take look early next week", "d": "1/2018"}, {"body": "closing longer reproducible", "d": "1/2018"}, {"body": "getting runtime errors caught aot nt import module containing event binding directive causes nothing happen production example confirm directive ts import directive hostlistener output eventemitter angularcore directive selector appconfirm export class confirmdirective output appconfirm new eventemitter constructor hostlistener click onclick const result confirm sure thisappconfirmnext result usage", "d": "1/2018"}, {"body": "facing issue test export function main describe lrcategoriescomponent gt let fixture componentfixture let component lrcategoriescomponent let de debugelement let glservice generalledgeservice let lrservice lrservice let spy jasminespy error message also error breaking random tests working well", "d": "1/2018"}, {"body": "igorminar amp vikerman news", "d": "1/2018"}, {"body": "also using prerenderio instead ssr currently separate bug http requests given need set windowprerenderready true perfect spot navigationend fire ngafterviewinit component loaded route change however angular fires almost immediately component nt loaded thus giving false positive indexer prerenderio", "d": "1/2018"}, {"body": "alexzuza points expected behavior framework directives inside template false ngif expression wo nt processed nt really recommend mixing templatedriven reactive strategies way eg validator directives instead validator functions toggling control value ngif end playing timing brittle suggest switching email validator function imperative addremove control functions", "d": "1/2018"}, {"body": "looks like dupe", "d": "1/2018"}, {"body": "must working tradingview charts ngondestroy called dom case chart container removed call chart js object results parennode found one example also name implies executes dom removed", "d": "1/2018"}, {"body": "use case believe able find successful work around clean thirdparty event handlers ts html elementref nt disposed yet seems allow successfully reference dom element need", "d": "1/2018"}, {"body": "means equals definition still valid duplicate bindings detected", "d": "1/2018"}, {"body": "based working intended close changes future would affect testing well tracked issue", "d": "1/2018"}, {"body": "hey estimate fixed", "d": "1/2018"}, {"body": "priority low nt hold breath", "d": "1/2018"}, {"body": "syntax ambiguous already got rejected optional chaining proposal final syntax waiting update writing different syntax logic code template code may good idea", "d": "1/2018"}, {"body": "anybody", "d": "1/2018"}, {"body": "hi telmaco make plunkr wrote working update lazy loaded modules set data routes animation based changes value animation wo nt trigger", "d": "1/2018"}, {"body": "angular maybe scroll nt exist recommended way angular", "d": "1/2018"}, {"body": "well case error template error child component ngdestroy nt getting destroyed trying set readonly property would worth time checking child components whether getting destroyed properly", "d": "1/2018"}, {"body": "incase help someone future found issue solution like following error error cleanup component parentcomponent testing child component router settings test file configured like like gives error export const routes routes path component parentcomponent children path childpath param component childcomponent test configuration testbedconfiguretestingmodule declarations childcomponent imports routertestingmodulewithroutes routes beforeeach gt fixture testbedcreatecomponent childcomponent component fixturecomponentinstance test get param gt routernavigate childpathsomeparam res gt fixturedetectchanges expect componenturlparam toequal someparam export const routes routes path childpath param component childcomponent", "d": "1/2018"}, {"body": "would helpful possible guards well example resolve guard server lookup route data result authentication error well like able display error without aborting navigation", "d": "1/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "1/2018"}, {"body": "thanks ncoley providing updated link angular team please document configs stable place", "d": "1/2018"}, {"body": "dgroh core module need need components shared module another point suppose appmodule coremodule sharedmodule modules need many modules example commonmodule last modules import commonmodule modules sharedmodule import core feature modules import formsmodule httpmodule", "d": "1/2018"}, {"body": "point importing things shared module code module different concerns need reevaluate architecture import common forms http see thinkster", "d": "1/2018"}, {"body": "ok import common forms sharedmodule curious also import http angular documentation explained shared module components directives pipes shared accross feature modules services included produce unstable behaviour dependency injector included lazy loaded module services preferly included coremodule module provides providers declarations components directives pipes avoid duplication provider instances loading child injector route necessary module forroot method", "d": "1/2018"}, {"body": "point lot people make also legit imply call angular docs modules well documented imo service always singleton angular real danger might lazy loaded module case would go kiss principle case lazy loaded module would start rethinking also nt agree core contain components app relies component exist would nevet put shared could course put appmodule conceptual would wrong still thoughts wish angular team improve docs information samples modules", "d": "1/2018"}, {"body": "dottodot ca nt drill module modules concatenated webpack moduleconcatenationplugin bhagatparwinder hard tell prod bundle definitely normal optimizations default latest cli release please make sure using latest build using issue persists please provide minimal reproduction form git repo clone inspect currently baseline stock hello world app produced cli without forms router material track progress working improving sizes filed start tracking size apps use common combination libraries", "d": "1/2018"}, {"body": "bhagatparwinder try running bundle size much smaller also case may know careful rxjs imports using httpclient nt need install angularhttp anymore user sourcemapexplorer build check else responsible large size", "d": "1/2018"}, {"body": "going close issue generic actionable continuously working reducing size concrete size regressions found particular issue fixed result size decrease please file new issue", "d": "1/2018"}, {"body": "following tutorial also issue anyone find solution", "d": "1/2018"}, {"body": "still face issue routing angular app times either safari chrome iphone get error error uncaught promise typeerror thisrouterserializeurl function thisrouterserializeurl thisurltree thisrouterserializeurl nt occur android desktop", "d": "1/2018"}, {"body": "got similar failure another place forms message user agent", "d": "1/2018"}, {"body": "getting five navigationend events fired", "d": "1/2018"}, {"body": "hello guys wanted fix issue gkalpak said mobile hover click acts like hover click possible view click theses links could please give idea fixed reason wanted fix issue also noticed redundant scrolling bars around card description please take look attachment also wanted know remove bars description less card height description would bigger card would scrollable thank", "d": "1/2018"}, {"body": "sorry late response sergeome assuming still interested hlp address issue would awesome removing unnecessary scrollbars sure hoverclick issue fixed top head could biotwittergithub links always visible mobile instead hover design question maybe sjtrimble ideas said big fan current flipping cards prefered expanding cards", "d": "1/2018"}, {"body": "hello gkalpak happy address issue however noticed change cards made months ago link also tried reproduce able navigate contributor twitter personal page mobile however pointed obvious unless actually click attaching video recording observation could please suggest fix thank", "d": "1/2018"}, {"body": "bug still reproducible would nice fixed", "d": "1/2018"}, {"body": "closed implementation really helping seems like quick google serach returns interesting results vocajs easy improve current pipe someone want spend couple hours looking existing impls help would appreciated", "d": "1/2018"}, {"body": "reproduction help", "d": "1/2018"}, {"body": "could someone please target file attributes removed template durning bundle cc ocombe", "d": "1/2018"}, {"body": "changed pr", "d": "1/2018"}, {"body": "hi following thread long time saw first beta read changelog see anything related longstanding issue news front least guarantee interface similar polyfill thanks work", "d": "1/2018"}, {"body": "going one last betas maybe rc know know interface similar closure since google uses internally code translations may using wrapper maybe change interface angular sure yet polyfill use similar interface possibility define id description amp meaning necessary believe need one way another either via parameters via decorator", "d": "1/2018"}, {"body": "mention using kamranahmedse solution work using lazy loaded modules non lazy loaded modules running across issue jasonaden apologies familiar process would possible reopen issue would preferable go ahead create new one proper example thank", "d": "1/2018"}, {"body": "charliegreenman ended back issue new issue generally nt see issues closed best thing open new issue ideally addressing whatever reason earlier one closed case would adding link reproduction pr description", "d": "1/2018"}, {"body": "running exact issue resolved", "d": "1/2018"}, {"body": "closed", "d": "1/2018"}, {"body": "use angular tried update languageservice nt make sense angular version", "d": "1/2018"}, {"body": "hi vicb issue resolved satisfaction close issue anything else help", "d": "1/2018"}, {"body": "problem new api angular number formatted properly currency think useless nt help", "d": "1/2018"}, {"body": "simmilar problem still exists firefox", "d": "1/2018"}, {"body": "alternative use method insert formarray class position way formgroup invalid formarray also invalid using nested validation nt work", "d": "1/2018"}, {"body": "hi try code settimeout", "d": "1/2018"}, {"body": "latest angular like update strings ended service passing route config whenever need work import routereusestrategy angularrouter import activatedroutesnapshot detachedroutehandle angularrouter import injectable angularcore export class defaultroutereusestrategy implements routereusestrategy shoulddetach route activatedroutesnapshot boolean return false store route activatedroutesnapshot detachedtree detachedroutehandle void shouldattach route activatedroutesnapshot boolean return false retrieve route activatedroutesnapshot detachedroutehandlenull return null shouldreuseroute future activatedroutesnapshot curr activatedroutesnapshot boolean return futurerouteconfig currrouteconfig injectable export class customroutereusestrategy extends defaultroutereusestrategy shouldreuseroute future activatedroutesnapshot curr activatedroutesnapshot boolean const reuse futuredata amp amp futuredatahasownproperty reuse futuredatareuse true return supershouldreuseroute future curr amp amp reuse ipassynk thanks sharing approach", "d": "1/2018"}, {"body": "toxicable kara get fixed released since breaking change", "d": "1/2018"}, {"body": "anyone else wanting workaround declare local variable validateemail azaz form group dont use email use pattern formgroup validatorspattern thisvalidateemail", "d": "1/2018"}, {"body": "errors project show node browser newrelic shows error please find screenshot", "d": "1/2018"}, {"body": "wow spent hours trying figure angular router nt fully rendering auxiliary routes turns adding import solved problem calls coming leaflet map even though right reference angular component somehow nt triggering zone view nt refreshing", "d": "1/2018"}, {"body": "honest jasonaden nt think matters one way either one could open would nice see activity angular team even acknowledgment either issue would nice offense intended anyone", "d": "1/2018"}, {"body": "problem universal adding trailing slash rendered", "d": "1/2018"}, {"body": "updates issue scenario applicable especially building pluggable modules like loading external umd files instantiating angular module", "d": "1/2018"}, {"body": "snarun read", "d": "1/2018"}, {"body": "thank mlcmlapis soln works modules referred location dynamic loading umd bundles leading problems ngmodule metadata found nested imported modules eg unexpected value commonmodule imported module templatemodule please add ngmodule annotation applicable try instantiate umd bundle entry module internally multiple imports referred modules adding custom ngmodule annotation modules later stitching good idea alternatives using combination ngc rollup generating bundle webpack building container app systemjs importing dynamic bundles", "d": "1/2018"}, {"body": "snarun bit lost nested imported modules need jit complier aot app use static modules use ngc systemjs builder bundling systemjs loading", "d": "1/2018"}, {"body": "mlcmlapis look case building pluggable system plugins format umd bundles bundles generated per angular package format angular app import umd bundles runtime browser client compile using sync async methods compiler tried compiler well jitcompiler client leads ngmodule metadata found error error similar one listed however could able successfully compile modules ngmodule annotation imports case realtime scenarios", "d": "1/2018"}, {"body": "snarun ah us running app aot mode load custom bundle bundled ahead time contain original umd part decorators extracted nt need case ngfactoryjs part able run without compiler thought important compile really dynamical modules mainly html templates come dms nt able guess", "d": "1/2018"}, {"body": "mlcmlapis true decorators extracted link maintained compilation would go components initialized sure whether angular team address", "d": "1/2018"}, {"body": "snarun tool using building umds generally building libs", "d": "1/2018"}, {"body": "mlcmlapis use ngc rollup", "d": "1/2018"}, {"body": "snarun hmm using build custom packages umds created way contain complete decorators extract optimize bundle size creating custom bundles", "d": "1/2018"}, {"body": "mlcmlapis verified output ngpackagr rollup umd bundles decorators defined without annotation tag jit compiler recognize module without metadata decorators arranged differently generating jit summary another option increase bundle size trade current context", "d": "1/2018"}, {"body": "snarun thanks info", "d": "1/2018"}, {"body": "get error message put imports wrong places putting declarations providers bootstrap instead imports", "d": "1/2018"}, {"body": "calnedarcomponent export module requires component import module used component resolves issue rendered component", "d": "1/2018"}, {"body": "fixed error fix default exports reference", "d": "1/2018"}, {"body": "sure solution correct issue think try reorder import libs top file", "d": "1/2018"}, {"body": "figure proxy ca nt call post request authorization header", "d": "1/2018"}, {"body": "construct post request options include keep sending option back server following request keep alive cookie expressjs set two necessary cors options configuration example angular post request expressjs cors options var cors require cors var cookiesession require cookiesession var app express var corsoptions needed angular credentials true origin undefined appuse cookiesession secret secreto apppost toolslogin cors corsoptions req res next gt reqsessiontoken hola resstatuscode ressetheader contenttype applicationjson resjson status ok body successfully created cookie", "d": "1/2018"}, {"body": "nt issue getting nested animations working ngfor example itjustdoesntwork believe could issue related ngif andor use nested custom components amended details counting experts spend roughly full day trying get nested parent child component setup working vain desperately seeking advice knows perhaps ca nt done note code snippets simplified code would like goal depending wipe left right currently active child slides left right counter direction newly made active child slide following swipe direction crux slide animation change determined parent million dollar questions either tell child hostbinding animation variable valuestate consider time ngif kicks child animates correctly setup nested animation declaration parent manages proper parameterized child animations tried various versions none worked cases ran funny errors cases nothing happened simplified pseudo code best shot still nt work missing export class childcomp hostbinding childanim public childanim constructor component selector parent template animations trigger parentanim transition gt toleft query child transition enter style transform animate easein style transform transition leave style opacity animate easeout style opacity optional true transition gt toright query child transition enter style transform animate easein style transform transition leave style opacity animate easeout style opacity optional true export class parentcomp hostbinding parentanim public parentanim constructor swipehandler event left thisparentanim toleft else thisparentanim toright thank much", "d": "1/2018"}, {"body": "solution parent needed set referenced child comp reference make sure use settimeout changing variable allow child comp update input val", "d": "1/2018"}, {"body": "use like code", "d": "1/2018"}, {"body": "closing feedbackimportant use case", "d": "1/2018"}, {"body": "dominicboettger markpieszak adding link tags possible want remove always get error error removing tag thisdocumentqueryselectorall function", "d": "1/2018"}, {"body": "crebuh tried markpieszak example amp remove", "d": "1/2018"}, {"body": "thanks looking side navigation thoughts helpful", "d": "1/2018"}, {"body": "jasonaden meantime official recommendation use elementrefnativeelement set focus even though direct dom access discouraged security risk set programmatic focus despite clear accessibility concerns approach", "d": "1/2018"}, {"body": "really crossing fingers fixed next update", "d": "1/2018"}, {"body": "working dockable panels solutions attach dynamic component portalhost also throws error", "d": "1/2018"}, {"body": "seeing issue using portalhost loading indicator wrapping settimeout work nt ideal", "d": "1/2018"}, {"body": "thanks johnchristopherjones error message totally misleading waited hour two googling amp staring packagejson something like hey forgot include animation foostate", "d": "1/2018"}, {"body": "news issue least workaround one work also even stranger work inline animation component try put animations separate file reuse issue happens weirdest thing happens certain animations certain components work fine", "d": "1/2018"}, {"body": "issue get love practically use angular together custom elements", "d": "1/2018"}, {"body": "issue even though imported map import rxjsaddoperatormap property map exist type observable related typescript version something else", "d": "1/2018"}, {"body": "started use angular still seems deep imports working yet ide automatically predicts add import related deep level removing deep link app started work fine example import elementref angularcore works fine hand import elementref angularcoresrclinkerelementref throws error made work removing rest deep link leaving angularcore", "d": "1/2018"}, {"body": "paladinium using jit summaries dynamic compilation angular files browser client looking solution resolving angular application files browser client using jit compiler success far", "d": "1/2018"}, {"body": "alexzuza add case code throw error see section appmodulets section import browsermodule angularplatformbrowser import jitcompilerfactory angularplatformbrowserdynamic import childcomponent childchildcomponent import htmloutlet childhtmloutlet import ngmodule compiler compileroptions compilerfactory angularcore export function createcompiler compilerfactory compilerfactory return compilerfactorycreatecompiler import appcomponent appcomponent ngmodule declarations appcomponent childcomponent htmloutlet imports browsermodule providers provide compileroptions usevalue multi true provide compilerfactory useclass jitcompilerfactory deps compileroptions provide compiler usefactory createcompiler deps compilerfactory bootstrap appcomponent export class appmodule packagejson os nodejs add small demo ok failed add project could look thanks", "d": "1/2018"}, {"body": "jackclarify use ngtools package without cli use optimizations remove metadata compile aot modules want lazy load module aot compiled compile ngc directly ngtools bundle rollup webpack system js bundler closure compiler think cli take use case consideration offer way bundle without removing metadata think open issue cli repository please", "d": "1/2018"}, {"body": "cli version dont remove decorators", "d": "1/2018"}, {"body": "alekcei thank much works thanks might use latest version supported appreciate cli remove decorators thanks mlcmlapis", "d": "1/2018"}, {"body": "jackclarify need angular cli added flag", "d": "1/2018"}, {"body": "mlcmlapis dose mean aot jit compile work together right using ngtools angularcli", "d": "1/2018"}, {"body": "alekcei mean clear sorry find wrong using angularcli work", "d": "1/2018"}, {"body": "guys cli removing meta information jit compiler needs want changed recommend upvote cli issue", "d": "1/2018"}, {"body": "jackclarify nt know anything possible use cli alekcei wrote know open issue trying solve problem removing decorators nt use ngtools cli nt affect us understand real problem many others use", "d": "1/2018"}, {"body": "running issue aot lazy loaded modules jit angular angularcli webpack using try run app jit compiler module loader looks lazymod lazymod instead lazymodngfactory lazymodngfactory works trying use jitcompiler manually updating references use lazymodngfactory lazymodngfactory leaves object lazymod modified angularcompilerplugin strip decorators see difference output present modification keeping decorators still see error nt think keeping decorators step required fix issue angular lazy loading jit ideas could missing details provide get fully functioning app lazy loading running minus ability compile dynamic components adding jit compiler breaks issues", "d": "1/2018"}, {"body": "mattduch detects angular compiler available di yes supposes jit module wanted loaded loads supposes aot module wanted loaded automatically missing reason lazy load jit modules main reason use jit compiling ability get construct string contains html template cms example compile runtime browser", "d": "1/2018"}, {"body": "mlcmlapis sorry confusion everything aot compiled main app lazy loaded feature modules templates inlined internally one place make use component renders tables dynamically based database configurations order provider compiler one component adding jitcompilerfactory seen various threads around using jit compiled dynamic components within aot apps better way provider jitcompiler component happy try way supply jitcompiler tell loader treat lazy loaded modules aot anyways separate attempted create jitcompiler dynamic jit based table component used instead default injectable directives depends paging loading helpers etc jit compiled using templateurl rather using already aot compiled version present bundles", "d": "1/2018"}, {"body": "still got issue angular", "d": "1/2018"}, {"body": "issue still present created stackblitz reproduce issue simple usecase transition triggered content outer animated properly content inner disappears immediatly far know already pr changes pipeline asking assume fixed release since already working properly pm sees regression fix somehow need better sample reproduce information feel free ask", "d": "1/2018"}, {"body": "fixed issue add path value like example like path loadchildren appcomponentspagenotfoundpagenotfoundmodule pagenotfoundcomponentmodule pathmatch full", "d": "1/2018"}, {"body": "problem", "d": "1/2018"}, {"body": "still broken news issue", "d": "1/2018"}, {"body": "happening well seems ie issue chance covered angular going require us handle annoying logic", "d": "1/2018"}, {"body": "nsksaisaravana feature dynamically load template component roadmap link roadmap mentioned", "d": "1/2018"}, {"body": "sunilpes available right need use angular compiler combine aot mode usually app core jit mode dynamic parts read", "d": "1/2018"}, {"body": "mlcmlapis went issue tried loading modules fly runtime using module using method works question module internal angular lowlevel api going work expected coming major versions well trying build tool based module compiler load dynamic modules fly", "d": "1/2018"}, {"body": "sunilpes available right need use angular compiler combine aot mode usually app core jit mode dynamic parts cant use due extremely slow big templates", "d": "1/2018"}, {"body": "sunilpes hmm question actually think version allow using new view engine way code name open really interesting new possibilities version far say anything concrete", "d": "1/2018"}, {"body": "want fixed meantime working around using", "d": "1/2018"}, {"body": "interesting seems got fixed without anyone noticing change included angular actually verify working expected tested angular feel free reopen issue still exists", "d": "1/2018"}, {"body": "handle styles string", "d": "1/2018"}, {"body": "agree xaralis imho routing order parentchildren concept matter resolver guard simple sso totally messed case", "d": "1/2018"}, {"body": "miloszsobczak yep exactly currently resolvers totally useless case logic guards ensure data loaded stored inside ngrx store let resolvers read data store expose simpler access components feels weird probably trash resolvers altogether eventually", "d": "1/2018"}, {"body": "xaralis came conclusion also using ngrx store canactivate returns store property selector observable filter operator determine data false case loading data happens dispatched action appcomponent ngoninit picked ngrx effect calls service data nt false filter crucial guard see loads route components using selectors", "d": "1/2018"}, {"body": "looks like related pending pr discuss chuck see fix negatively impact performance", "d": "1/2018"}, {"body": "cyrilletuzi commit fixed issue please let know otherwise", "d": "1/2018"}, {"body": "kyliau tested angular typescript language service typescript plugin problem still", "d": "1/2018"}, {"body": "cyrilletuzi base problem vsc extension actually able use actual lib", "d": "1/2018"}, {"body": "mlcmlapis tried without vsc extension using language service typescript plugin tsconfigjson", "d": "1/2018"}, {"body": "cyrilletuzi ah ok", "d": "1/2018"}, {"body": "fixed finally thanks everyone means use language service directly ts plugin without vs code extension much faster note language service currently broken ts see", "d": "1/2018"}, {"body": "cyrilletuzi curious get working removed vs code extension added plugins item tsconfigjson nt see hovers intellisense made sure vs code using typescript", "d": "1/2018"}, {"body": "suppose use external templates vs code extension still needed requires vs code specific code plugins ts config work files inline templates", "d": "1/2018"}, {"body": "ah yeah angular app templates file got thanks", "d": "1/2018"}, {"body": "everything mentioned far seems vscode specific fix intellijwebstorm", "d": "1/2018"}, {"body": "hello problems still webstorm build built january jre jvm openjdk server vm jetbrains sro mac os x", "d": "1/2018"}, {"body": "globally subscribe defined return http request data", "d": "1/2018"}, {"body": "upgraded angular modify contextreplacementplugin regex according solution namely worked", "d": "1/2018"}, {"body": "well resolved workaround currently facing similar behavior mi problem routes dynamic ca nt write current route inner outlet", "d": "1/2018"}, {"body": "simillar issue sure solve", "d": "1/2018"}, {"body": "current logic implemented framework works follows keep traversing content elements seen template making notes directives including components give element soon encounter first element directive set flag make note seen directive keep descending upon encountering another element directive component stop descending queries simply nt stop step continue descent matching directives content nodes visited algorithm explains sticking directive directives querying break queries totally see behaviour might nonintuitive surprising users got system place support nested tabsetlike usecases unfortunately current algorithm bit heavyhanded stop descending upon encountering directive second time come different set rules logic ca nt easily fix issue", "d": "1/2018"}, {"body": "plunker one use play different directives see stoping descending content nodes", "d": "1/2018"}, {"body": "pkozlowskiopensource tabset example would nt accurate say elements inside element traversed directives", "d": "1/2018"}, {"body": "tabset example would nt accurate say elements inside element traversed tabset tab directives aciccarello sure would accurate nt think drag matters presence elements inside content queried consider example would break tabset implementation reallife demonstration practice", "d": "1/2018"}, {"body": "uhh seems even subtle testing seems like limitations applies perview percomponent template", "d": "1/2018"}, {"body": "ok trying come sensible documentation current behaviour mhevery believe way things work correctly confusing point label bug propose simpler system current working proposal change follow following rule query direct children sense elements template specified examples give component example query would pick example query would pick tabs selected since element direct child example query would pick second element direct child proposal make rules pretty clear easy follow unfortunately breaking change technically speaking present believe bugfix rather change expected behaviour however got valid usecase breaking implementation proposal please speak would love know reallife usecase element content queried", "d": "1/2018"}, {"body": "use multipage ca nt recommend either wait official sollutions spa love angular next project spa jumped angularjs nt know supposed used owns everything inside framework aot thing back multipage pretty easy code make work got fragile time every major sometimes minor releases breaks stuff still removal annotations aot mode made things runtime impossible", "d": "1/2018"}, {"body": "check maybe help", "d": "1/2018"}, {"body": "nt mind syntax seems like reasonable solution anything else requires separator best could think boolean bitwise operators behave per usual js require separator specified like another option could defining cases child elements eg html form form ngifdo far simpler", "d": "1/2018"}, {"body": "relates possible one", "d": "1/2018"}, {"body": "yeah nt think separator approach great idea also seems reasonable also anyone following wants actual workaround without duplicate code ngtemplateoutlet used style suggested though still lot boilerplate html form form", "d": "1/2018"}, {"body": "hi try implement ngswitch works like charm spec file get error provider ngswitch might cause", "d": "1/2018"}, {"body": "case someone wondering stackoverflow question", "d": "1/2018"}, {"body": "point multi argument true", "d": "1/2018"}, {"body": "projects create array subscription pushing every subscription subscribe array ngondestroy loop unsubscribe subscription typescript export class test implements ondestroy private subscriptions subscription lazyloadmessages thisautoscroller thisautoscroll thissubscribemessages ngondestroy thissubscriptionsforeach sub gt subunsubscribe", "d": "1/2018"}, {"body": "davilink since found clean using single subscription unsubscribing whole collection easily like ts export class mycomponent implements oninit ondestroy private subscriptions new subscription constructor thissubscriptionsadd timer ngoninit thissubscriptionsadd timer ngondestroy thissubscriptionsunsubscribe", "d": "1/2018"}, {"body": "think proposal still relevant", "d": "1/2018"}, {"body": "update", "d": "1/2018"}, {"body": "yes problem", "d": "1/2018"}, {"body": "exact issue angular leaveanimation toplevel routeroutlet triggered correctly every component nested routeroutlet immediately disappears working prior version angular sadly recall version change stopped working though", "d": "1/2018"}, {"body": "vladjerca thank workaround tried submit occurs twice fix", "d": "1/2018"}, {"body": "adwd nt use ngsubmit bind forms directly bind submit", "d": "1/2018"}, {"body": "vladjerca wow fix works nt know thanks", "d": "1/2018"}, {"body": "progress", "d": "1/2018"}, {"body": "alexeagle think one already taken care us running ts code tsickle shipping npm closed", "d": "1/2018"}, {"body": "externs copied manually tsickle output ideally generate reviewed trivial search externsjs angular repo think nothing", "d": "1/2018"}, {"body": "using jmcclanahan example appears work well use case add fixed issue hostbinding properties triggering", "d": "1/2018"}, {"body": "figured would take swing potential solution worked fork original plunkr work around need resolve component factory service resolverservice provided module entrycomponent passed second service changerservice uses resolved factory adds component view maincomponent", "d": "1/2018"}, {"body": "seriously nt understand god damn router check plunker forked patkoeller example basically want inject component toplevel app use directive commands relative defining lazy loaded module like generate pass injector works case screws every routerlink reassign resolve pass injector router instance seams work intended confusing file bug", "d": "1/2018"}, {"body": "problem plan fix thank", "d": "1/2018"}, {"body": "know late found issue searching answer binding properties custom components shared module case problem lazy loaded page still included appmodulets file removing fixed ca nt bind xxx since nt known property putting anyone else facing issue really error message nothing actual solution", "d": "1/2018"}, {"body": "also manually refresh page adding reactiveformsmodule imports module could see change livereload nt work", "d": "1/2018"}, {"body": "hi would like know state issue since want run resolvers concurrently would need executed sequentially hibumbapartha code working", "d": "1/2018"}, {"body": "actually need opposite one guard resolve canactivate wait previous executes prevent concurrent execution", "d": "1/2018"}, {"body": "mickl need thing", "d": "1/2018"}, {"body": "opened issue feel free give thumbs", "d": "1/2018"}, {"body": "update issue", "d": "1/2018"}, {"body": "similar issue angular", "d": "1/2018"}, {"body": "encountered bug", "d": "1/2018"}, {"body": "encountered bug well", "d": "1/2018"}, {"body": "still working", "d": "1/2018"}, {"body": "turns invoked bootstrapping component since usually bootstrapping components bootstrapping angularjs inside instead indeed run sure reasoning running using easy workaround manually calling need case need call setuplocationsync ngupgrade upgrademodule ts import setuplocationsync angularrouterupgrade ngmodule imports providers provide urlhandlingstrategy useclass coexistingurlhandlingstrategy declarations entrycomponents export class appmodule constructor private upgrade upgrademodule ngdobootstrap thisupgradebootstrap documentbody old strictdi true setuplocationsync thisupgrade", "d": "1/2018"}, {"body": "im also trying delete formgroup large reactive formarray using code sometimes get deletes single ride public deleteride ride formgroup number void thisunsubscribechanges ride thismyridesremoveat validate form need validation fired input value changes position array changes private revalidate void", "d": "1/2018"}, {"body": "using angular material must find way show error message used following solution place directly underneath input message wish display style red error effect add directly element display hint error inside block look something like add many need unique test great decent workaround gets fixed", "d": "1/2018"}, {"body": "also issue dist file coming one help", "d": "1/2018"}, {"body": "hi thank providing workaround nightwnvol however use appcomponent get ajax icon loading main page believe issue xhr encounter issue thank", "d": "1/2018"}, {"body": "likeamugger hi sorry ca nt help post example code", "d": "1/2018"}, {"body": "nightwnvol hi could replicate error previously still working desired attached codes thank much indexhtml angular app appcomponentts import component angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title angular app", "d": "1/2018"}, {"body": "likeamugger check element exists removing", "d": "1/2018"}, {"body": "likeamugger checked correct path scripts", "d": "1/2018"}, {"body": "cauehqueiroz added statement still work nightwnvol changed certain correct editing based comments scripts still load without refresh looks like currently navigate different component refreshing component page thanks getting back appreciated help", "d": "1/2018"}, {"body": "likeamugger errors console route different component", "d": "1/2018"}, {"body": "nightwnvol old code errors routing matter much refresh scripts work workaround added errors navigating components issues refresh well however attempt refresh component requires id eg errors", "d": "1/2018"}, {"body": "likeamugger think problem scripts loaded twice try load scripts function add event tag eg appcomponentts export class appcomponent constructor loadscripts documentgetelementbyid remove var documentcreateelement script id src assetsjsjqueryminjs documentheadappendchild", "d": "1/2018"}, {"body": "nightwnvol works may best solution least could see pages refreshing thank much help", "d": "1/2018"}, {"body": "ericsimontonsama spending time nt able figure may take another stab later working also discovered arg seems like pieces internally allow reusing compiled templates subsequent spec methods spec testbed needs provide way tell reuse summaries instead clearing everything spec methods less ideal option would provide way get current set aotsummaries called pass back via arg subsequent spec methods individual summaries pulled manually pulling every summary individually type nt viable option", "d": "1/2018"}, {"body": "added input element worked", "d": "1/2018"}, {"body": "dupe", "d": "1/2018"}, {"body": "thanks justsahid save day", "d": "1/2018"}, {"body": "getting issue using weex fsevents wanted error windows users may fsevents installation problems like fsevents wanted os darwin arch current os arch remove nodemodule weextoolkit run command like npm install nooptional weextoolkit g", "d": "1/2018"}, {"body": "running issue error nt reach component ca nt error handling", "d": "1/2018"}, {"body": "dmitrimaltsev amazing thanks", "d": "1/2018"}, {"body": "also seems related", "d": "1/2018"}, {"body": "still nt know properly use nested routes time says reattach activatedroutesnapshot created different route angular another way reuse routes", "d": "1/2018"}, {"body": "flymithra maybe ask wardbell closed issue following reason problem obscure general interest", "d": "1/2018"}, {"body": "long totally lost core topic", "d": "1/2018"}, {"body": "admin angular", "d": "1/2018"}, {"body": "ticket flagged feature fieldsets used according specs bug breaks intrinsic inbrowser behavior", "d": "1/2018"}, {"body": "problem workaround ledzz work also tried calling changedetectorrefdetectchanges controller nt help either", "d": "1/2018"}, {"body": "problem controller template custom component implements controlvalueaccessor never gets new value passed writevalue method appear workarounds", "d": "1/2018"}, {"body": "subset form fields know duplicated slightly better using instead probably mitigate issues browser controls quirks mentioned issue still strikes bizarre design behavior suppose performance issue everything angular magically binds except simplest forms", "d": "1/2018"}, {"body": "problem well setvalue nt cause change valuechanges firing values set", "d": "1/2018"}, {"body": "news", "d": "1/2018"}, {"body": "updates", "d": "1/2018"}, {"body": "problem still exists version", "d": "1/2018"}, {"body": "chuckjaz get angular", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "webstorm always tell component directive need considering add ngmodule declaration", "d": "1/2018"}, {"body": "fix bug angular updating fixed webstorm reporting every component included module", "d": "1/2018"}, {"body": "version still affected", "d": "1/2018"}, {"body": "long bit lost use reproduction problem latest angular problem exist", "d": "1/2018"}, {"body": "reproduction create angular app destroy repeat times check browser memory amp nodes", "d": "1/2018"}, {"body": "raedslab looks fine inspect profile notice greens dom gc blues js gc working fine", "d": "1/2018"}, {"body": "raedslab thanks mean open angular app new tab close tab open anything unrelated angular tab", "d": "1/2018"}, {"body": "raedslab repeated reloading app pattern gc recycling works secs chrome windows fcu", "d": "1/2018"}, {"body": "toxicable thank appreciate effort looked stackblitz seems working test local app mlcmlapis results seem consistent toxicable fyi results getting november something might gotten fixed meanwhile might something wrong", "d": "1/2018"}, {"body": "noticed pages would eventually become unresponsive navigating back forth pages application navigating away page seems like old component would stay memory navigating back page another instance component would created alongside old component example looks like dom nodes never garbage collected continue grow application crashes", "d": "1/2018"}, {"body": "hkevin hmm something related stackblitz environment sure comes directly angular", "d": "1/2018"}, {"body": "mlcmlapis experience issue application", "d": "1/2018"}, {"body": "hkevin ran example using full screen stackblitz window chrome saw similar pattern manually forced gc collection chrome manually trigger gc run screenshot", "d": "1/2018"}, {"body": "hkevin real world application able get rid componentsservices kept memory multiple times fixing still attached event handlers subscribed observables however experience dom nodes issue dom nodes removed even manually triggered gc stackblitz example real world", "d": "1/2018"}, {"body": "ca nt count amount instances wished implemented", "d": "1/2018"}, {"body": "angular reactive forms one features really beats framework making reactive forms strongly typed would bring next level widening gap competition", "d": "1/2018"}, {"body": "thanks reporting issue luckily already fixed one recent releases please update recent version resolve problem upgrade problem still exists application please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "1/2018"}, {"body": "one year later still get changed warning ridiculous", "d": "1/2018"}, {"body": "literally ran issue well compiler tries pull mock used tests fails part main module knows nt need file warning", "d": "1/2018"}, {"body": "please fix make warning general experience angular aot build less stellar", "d": "1/2018"}, {"body": "discussion got conclusion need create one component per module seems module compilation context way collect stuff together", "d": "1/2018"}, {"body": "taking size history book", "d": "1/2018"}, {"body": "xesenix context organization parts whole", "d": "1/2018"}, {"body": "case anyone still stuck script run postinstall script workaround consolewarn angular compiler warning nttconsolewarn messagesjoin n filestofixforeach gt try", "d": "1/2018"}, {"body": "angular compiler use output tsconfig change tsconfigappjson exclude files dont want includes eg", "d": "1/2018"}, {"body": "andelaandrewmakenzi suggested gigantic chat absolutely shame reading whole thing however issues emerge depend one component library uses barrel files indexts import component barrel file compiler tries load components referenced barrel file complain module makes difficult package reusable component libraries basically whole point component architecture first place solution works great people mock components getting error running tests organization like mine tried create common component library pull ones need given project tsc exclude sadly help", "d": "1/2018"}, {"body": "andelaandrewmakenzi suggestion seems help problem previously component unit test spec would like included aotbuild maybe mock component would even like projection maybe somehow addressed later version angular think case lot new component even referenced ngmodule must name convention exclude tsconfigjson pleasant time", "d": "1/2018"}, {"body": "someone give state issue", "d": "1/2018"}, {"body": "also still waiting update", "d": "1/2018"}, {"body": "nice presentation angular connect kara ends saying custom forms controls awesome amp scary good important feature custom controls missing", "d": "1/2018"}, {"body": "anyone else finding issue future looks like returns promise holds value navigation occurred using fallback behavior", "d": "1/2018"}, {"body": "reason applicable radio inputs", "d": "1/2018"}, {"body": "fixed time soon real gapping hole big feature angular check workaround use would nice docs say nt support reactive forms completely state actually incomplete", "d": "1/2018"}, {"body": "news topic would also need possibility set route active restrictings etc would need sth like ignore set ignored evaluating current active route", "d": "1/2018"}, {"body": "sure extent may related case situations retain common validation responses api cache set lifetime validation request subsequently called determine available rule cache exists nt expired return cached version declared returning instead hitting api call cache returns new instance async validator successfully processes returns appropriate result cache state retains pending status", "d": "1/2018"}, {"body": "hmm think several things play prerequisite feature work css source maps generated correctly angular compiler source maps passed correctly angular cli", "d": "1/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "1/2018"}, {"body": "experiencing issue well still present bug problem end angular", "d": "1/2018"}, {"body": "hey klinki familiar imagine different still something needs covered docs happy need help details recently reorganized fleshed ngmodules related documentation doc dedicated lazy loading feature modules pr merged fixes example btw page nt mention router loader though nt use one make example think direction", "d": "1/2018"}, {"body": "issue forgot add ie instead", "d": "1/2018"}, {"body": "mattdistefano vicb solution binding attrlist worked wonders built angular component essentially lookup found used custom component would share last updated data list list id import name component manually set developer make sure list input use", "d": "1/2018"}, {"body": "karsunke used workaround great working user wants go back via back button browser url always goes back foobar instantly change foobar somename tried workaround getting smelly workaroundworkaroundworkaround need global configuration queryparamshandling", "d": "1/2018"}, {"body": "noted linked issue keep parameter redirectto absolute subscribe activatedroute get query params", "d": "1/2018"}, {"body": "issue nothing redirectto dont use anywhere project current workaround preserving query params global way clean solution", "d": "1/2018"}, {"body": "clear button submit button html type specified pressing enter triggered first button clear submit type submit set explicitly clear button type button angular switched triggering submit enter keypress error omission", "d": "1/2018"}, {"body": "duplicate fixed already", "d": "1/2018"}, {"body": "sorry late response jrichardeau meant mini app actually creating module rather two modules one angularjs one angular contain necessary components test bootstrap module would bootstrap tests use approach see example test really tests use approach feel free look around", "d": "1/2018"}, {"body": "issue angularforms", "d": "1/2018"}, {"body": "able determine wether ngcontent exists seems important option works unviersal would nice", "d": "1/2018"}, {"body": "closing workaround", "d": "1/2018"}, {"body": "pcroc mentioned idea declaring input really nt practical simple scenarios extra overhead form extra variables track individual field complex scenarios simply nt work similar case table kara please reconsider issue api considered relatively straightforward simple cases able focus form input pretty direct ask form module", "d": "1/2018"}, {"body": "realappie others said works changing different component altogether imagine orderscomponent customerscomponent ca nt switch without losing unsaved state", "d": "1/2018"}, {"body": "problem found works like charm", "d": "1/2018"}, {"body": "unfortunately nt work angular underlying api changed however testbed seems cache set aotsummaries used test seems like would needed speed things substantially would option tell testbed reuse aotsummaries subsequent spec methods instead clearing recreating spec method", "d": "1/2018"}, {"body": "anyone might interested release angular finally able move karma jest results tests monorepo karma minutes mins effective run time compilation full run jest secs full run addition installed vscode plugins runs tests fly editor one one massive gain ca nt even begin say happy think using vvasabi workaround might get even better results going give try thanks much thymikee pointing jest anyone wants info feel free contact", "d": "1/2018"}, {"body": "create sample repo best practices test setup template cache setting aot summaries", "d": "1/2018"}, {"body": "vikerman would awesome probably complicated since undocumented idea actually anything aot summaries", "d": "1/2018"}, {"body": "lol wtf happened thank god googled first", "d": "1/2018"}, {"body": "particular issue resolved already changing generated imports point rather trivial setup systemjs configuration works described another issue prevents usecases discussed please file new issue thanks", "d": "1/2018"}, {"body": "igorminar sbabeal confirm possible compile angular app using ngc use systemjs without deep linking problems", "d": "1/2018"}, {"body": "also seeing problem", "d": "1/2018"}, {"body": "ran issue unfortunately disable onlyself true emitevent false workaround seem work case calling disable entire formgroup watching valuechanges formgroups controls emit event controls", "d": "1/2018"}, {"body": "closing easily done extending pipe class", "d": "1/2018"}, {"body": "artstar thanks work aot option make work aot", "d": "1/2018"}, {"body": "sajeevsp aot compiler bit silly make function calls wrap function call another function", "d": "1/2018"}, {"body": "lts commitment documented", "d": "1/2018"}, {"body": "create example testing onpush component approach would create container test component mentioned docs", "d": "1/2018"}, {"body": "aspnetcore add layoutcshtml like", "d": "1/2018"}, {"body": "toxicable works get error nt least prevent global error handler picking code export class myngmoduleloader implements ngmodulefactoryloader private systemjsngmoduleloader systemjsngmoduleloader", "d": "1/2018"}, {"body": "nt inject directly done di automatically instantiated depends app mode jit yes aot", "d": "1/2018"}, {"body": "mlcmlapis well manually instantiates need inject di nt going resolve u instantiated throughout di", "d": "1/2018"}, {"body": "frederikprijck sure supposed writing explicitly noticed probably reason create new instance without di", "d": "1/2018"}, {"body": "probably avoid creating manually aswell reason toxicable", "d": "1/2018"}, {"body": "would advise avoiding creating one specifically need something like error catching retrying situation", "d": "1/2018"}, {"body": "toxicable ca nt u use something like export class myngmoduleloader implements ngmodulefactoryloader constructor private systemjsngmoduleloader systemjsngmoduleloader load path string systemjsngmoduleloader would nt work guess factory still option", "d": "1/2018"}, {"body": "frederikprijck sure reason could nt however example bit explicit understanding little bit", "d": "1/2018"}, {"body": "hi hours trying solve post solve issue regards diego", "d": "1/2018"}, {"body": "proxyzone fixed material tests beforeeach async ex", "d": "1/2018"}, {"body": "problem someone good response", "d": "1/2018"}, {"body": "germankuber nope using workaround bencameron suggested sadly see comments team members hoping could added version", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "philosophical questions aot compiler allow private properties template mean component template belong component", "d": "1/2018"}, {"body": "using native javascript private property future wo nt work either jit aot way keep consistency make public would new inconsistency real javascript private property fake typescript private property trotyl true already going significant cognitive dissonance typescript javascript going cause lot pain invested compile time privacy say best way handle use writing less code make transition easier default continue javascript", "d": "1/2018"}, {"body": "aluanhaddad actually typescript properties supported future new compilerrenderer structure wo nt recommend near future possible binding properties ivy app ivyonly libraries", "d": "1/2018"}, {"body": "resolved", "d": "1/2018"}, {"body": "mention one must definetely use htaccess file possible use instead way risky hacked cant believe people suggest kind answers", "d": "1/2018"}, {"body": "every project going production many us search web learning tool hack solves temporary problem learning project happy use", "d": "1/2018"}, {"body": "could link article discussion use htaccess could nt find anything suitable", "d": "1/2018"}, {"body": "ibaff indeed hard find relevant articles although read advices many times several occasions using apache like years apparently say performance issue hacked recently security specialists security team disabled htaccess strongly suggesting us leave vhosts configs apache conf levels guess blokes know personaly rather put htacess files knowing contain permisionsrules asside public directories might retreived one day tempered one reason another put apache chroot ftp whole web server yes bloody pain centralizing configs instead spreading clearly better practice although apache configs allows files inclusions end folder far better maintenance especialy linux especialy using cli", "d": "1/2018"}, {"body": "thanks answer sad hear hacked agree better put config small hosting let change htaccess case choose", "d": "1/2018"}, {"body": "going let configurable wait policies protractor please follow adding initial support use track get extra feature protractor heathkit qiyigg", "d": "1/2018"}, {"body": "downvotes without reason functionality nt needed actually exact situation believe use canactivatechild root prevent route changes right", "d": "1/2018"}, {"body": "downvotes seem response comments add nothing discussion vs adding reaction original proposal rather response proposal", "d": "1/2018"}, {"body": "borriej seems typo mentioned twice snippet following nt", "d": "1/2018"}, {"body": "lroitman confused using almost exactly code original question angular fact see route data coming fine fix", "d": "1/2018"}, {"body": "leaving people similar issues also might help use cases unhandy mark fields dirty actually never touched", "d": "1/2018"}, {"body": "blasz found way fix issue", "d": "1/2018"}, {"body": "looks like fixed", "d": "1/2018"}, {"body": "brandonroberts thanks lot buddy", "d": "1/2018"}, {"body": "solved buildoptimizer", "d": "1/2018"}, {"body": "trotyl yup thanks pointing angularcli angulardevkitbuildoptimizer already strip stuff default creating production builds", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "different use case want use input selector ie suffix focus event empty readonly inputs focused open dialog return object identifier know maybe autocomplete would better user request handle way final decision feature workaround would hidden input gets populated independent control think would easier use readonly attribute", "d": "1/2018"}, {"body": "thanks ocombe", "d": "1/2018"}, {"body": "thanks ocombe updates would greatly appreciated desperately waiting runtime past months last build eta please let us know soon updated eta sorry persistent building languages ends excruciatingly slow moment", "d": "1/2018"}, {"body": "angular unfortunately could nt find anything related overlooked something ocombe maybe could update us release plan thx lot amp thx lot effort", "d": "1/2018"}, {"body": "ocombe guy waiting check youtube link comment", "d": "1/2018"}, {"body": "planning constantly evolving whenever give probable release date turns something else gets priority becomes required shifts date know disappointing waiting feature everything increase priority meeting tomorrow discuss backlogplanning let know get anything new", "d": "1/2018"}, {"body": "ocombe get released month buy pack craft beer", "d": "1/2018"}, {"body": "add bottles german beer another bottles ask angular elements library support damn getting informations going horrible", "d": "1/2018"}, {"body": "ocombe rare lifetime opportunity acquiring bottles expensive craft beer make development community happy fulfill promises accomplish things friend", "d": "1/2018"}, {"body": "mickl angualr elments understand allow us build nonspa pages use angular components native elements selfwidgets", "d": "1/2018"}, {"body": "yes know features everyone waiting one knows status expect", "d": "1/2018"}, {"body": "someone promises add last bottles beer start counting", "d": "1/2018"}, {"body": "add ocombe name fav brand edit someone create service similar eth bounty named beerbounty p", "d": "1/2018"}, {"body": "promised little update still aiming release runtime gives us weeks going short probably added one last releases behind flag runtime come code translations work templates well anyway use mechanism said certain service ready might postpone make sure wo nt break right releasing feel like right choice follow runtime case roadmap nt need major version release behind flag nt break anything anyway could prevent us releasing time stumble upon unexpected issue know development works breaks internal google apps messed somewhere something top priority comes along switch focus one new things depends blocked delayed runtime depends major internal changes members team working", "d": "1/2018"}, {"body": "senior angularjs developer using pascalprecht translate lib years excited angular rookie naively browsing successfully integrating professional project spending whole day messing frontend hardcoded labels porting xlf file need translating raw labels within ng services looking google find solution angular ages rn", "d": "1/2018"}, {"body": "macadoshis use polyfill lib", "d": "1/2018"}, {"body": "macadoshis imagine since", "d": "1/2018"}, {"body": "thank pointing ocombe go ngxtranslate supports async loading translations keys factory provider seems supports sync rawloading knownbeforebootstrap fixed locale", "d": "1/2018"}, {"body": "ocombe close polyfill wrote released anything aware prepare also would mind listing list features released version testing going", "d": "1/2018"}, {"body": "nt details code translation service work next week probably traveling mountain view know behind scene similar closure library since google using internally similar polyfill well release runtime one bundle locale translations resolved runtime maybe code translations time otherwise come soon behind flag requires use new renderer called ngivy battletested", "d": "1/2018"}, {"body": "modules app importexport routermodule yet still problem gives", "d": "1/2018"}, {"body": "guess routerlink became routerlink", "d": "1/2018"}, {"body": "completely agree idea angular never force implementation choosing application language defined said awesomeness behind angular lies behind fact framework facilitates many aspects development would much awesome angular would facilitate lazy loading specific locales honest nt dug implementation angular feature howerever read documentation first find documentation found little awkward read compared fluidity found every angulario sections however believe issue discussed thread easy understand section understand correctly using aot compiler requires define ahead time language used serve angular app like ng serve aot localefr translate app different languages would serve app many times thus using times resources physical server understand correctly say propose implement sort locale routing bootstrapping everyone angular apps could look something like library created mentioned earlier post exactly would wished angular support box would awesome developer could simply configure aot compiler use angularoffered localerouters configuration could look something like ng serve aot", "d": "1/2018"}, {"body": "aiming requires major changes taking long language detection provide methods different platforms decide use roadmap", "d": "1/2018"}, {"body": "guys awesome love", "d": "1/2018"}, {"body": "solution using pipe directive stackoverflow plunker demo", "d": "1/2018"}, {"body": "needs proper zone imports", "d": "1/2018"}, {"body": "version makes svg filters work seems version needed adding ends causing filters work check safari chrome patched issue back removing using works well create routes like point base tag required else looking assets", "d": "1/2018"}, {"body": "disabled definitely allow accept function disabled state often change mess helper methods watchers check condition", "d": "1/2018"}, {"body": "run well implement fix advised custom encoder ask possible reason bug still open plain incorrect according http standards encode missing something", "d": "1/2018"}, {"body": "dtwright wrote section explaining details found package created solve problem", "d": "1/2018"}, {"body": "simple issue resolved yet years", "d": "1/2018"}, {"body": "try package built solve code replace line typescript import httpclientmodule angularcommon import httpclientmodule ngx rest code let know works", "d": "1/2018"}, {"body": "china sorry english problem post use post data ng maybe change space find router path could also", "d": "1/2018"}, {"body": "auqfyanjun check comment package developed purpose mentioned", "d": "1/2018"}, {"body": "sayakmukhopadhyay hi ths help find comment maybe someoen give answer post change httpparams use next way", "d": "1/2018"}, {"body": "issue ever get resolved least someone team explain works way works resolved infuriating angular brakes simple standard", "d": "1/2018"}, {"body": "issue ca nt send dates iso format api sign replace blank space", "d": "1/2018"}, {"body": "jkyoutsey thank much dude publish web site exactly problem tryed localhost like u said worked applyed webconfig publish host works perfect thanks", "d": "1/2018"}, {"body": "think angular playground best option right", "d": "1/2018"}, {"body": "workaround available", "d": "1/2018"}, {"body": "see comment", "d": "1/2018"}, {"body": "compilecomponents needs called inject restructuring test seems like correct way forward", "d": "1/2018"}, {"body": "noodling problem week driving crazy one problems running sure possible clean way differentiate moving navigation vs navigation former scrolltotop may make sense latter certainly make sense since main viewport necessarily changing content autoscroll retention behavior implemented browser appears affect window well secondary containers also change content problem hairy least chrome behavior seems change scrollbar present viewchange seeing chrome jump top ca nt scroll view change however retain scroll position even tiny scrollbar present view change nt make much sense pretty sure going crazy point", "d": "1/2018"}, {"body": "usecase created displays error messages control looks something like html errors key adding throughout application longer knows changed current workaround change duplicate logic throughout nt bad issue tag guess least discuss potentials state object containing state booleans gets emitted checked like statuschanges valuechanges observable state individually", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "working expected compiler tried mimic aot setup usevalue values cloned workaround use object prototype use usefactory", "d": "1/2018"}, {"body": "needs investigation propose solution", "d": "1/2018"}, {"body": "testbedoverrideprovider override providers irrespective level original providers defined kyliau please add example repo part", "d": "1/2018"}, {"body": "workaround currently use empty path lazy loaded modules ill work expected toggle outlet want see answer demo q", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "ended exporting array routes point children property achieves goal without hack need lazy load use want routes placed top former routes get result", "d": "1/2018"}, {"body": "code works perfectly dev environment try npm run build get following error error nodemodulescssloader nodemodulessassloaderlibloaderjs nodemodulesextracttextwebpackplugindistloaderjs omit remove true nodemodulescssloader nodemodulessassloaderlibloaderjs srcappcommunicationcentercommcenter componentscss module build failed allcommongrid invalid css e expected selector atrule exports moduleex devgreatergivingcommunicationcentersrcappcommunicationcentercommcentercomponentscss line column srcappcommunicationcentercommcentercomponentscss srcappcommunicationcentercommcentercomponentts srcappcommunicationcentercommcentermodulets srcappapproutingmodulets srcappappmodulets srcappmaints error nodemodulescssloader nodemodulessassloaderlibloaderjs nodemodulesextracttextwebpackplugindistloaderjs omit remove true nodemodulescssloader nodemodulessassloaderlibloaderjs srcassetsstylescss module build failed imported stylesheet invalid css e expected selector atrule exports moduleex devgreatergivingcommunicationcentersrcassetsstylescss line column srcassetsstylescss following code webpackconfigcommonjs var htmlwebpackplugin require htmlwebpackplugin var extracttextplugin require extracttextwebpackplugin var copywebpackplugin require copywebpackplugin var helpers require helpers var webpack require webpack moduleexports entry app srcappmaints polyfills srcpolyfillsts styles srcassetsstylescss resolve extensions ts js module rules test ts use loader awesometypescriptloader options transpileonly true loader loader angularrouterloader test html loaders htmlloader test scss exclude nodemodules helpersroot src stylescss use tostringloader cssloader sassloader test scss use extracttextpluginextract use cssloader sassloader test pngjpe use fileloader nameassets name hash ext exprcontextcritical false plugins new extracttextplugin define save file filename styles name bundlecss allchunks true new htmlwebpackplugin template srcindexhtml new copywebpackplugin nodemodulesfroalaeditorcss assetsfroalaeditorcss nodemodulesfontawesomecssfontawesomemincss assetsfontawesomecssfontawesomemincss nodemodulesfontawesomefonts assetsfontawesomefonts new webpackprovideplugin jquery jquery jquery webpackconfigprodjs var path require path var webpack require webpack var webpackmerge require webpackmerge var commonconfig require webpackconfigcommon var extracttextplugin require extracttextwebpackplugin var uglifyjsplugin require uglifyjswebpackplugin const env processenvnodeenv processenvenv production moduleexports webpackmerge commonconfig output path pathresolve dirname dist publicpath filename name hash js chunkfilename id hash chunkjs plugins new webpacknoemitonerrorsplugin new webpackoptimizeuglifyjsplugin mangle keepfnames true new extracttextplugin styles hash css new webpackdefineplugin processenv env jsonstringify env new webpackloaderoptionsplugin options htmlloader minimize false workaround new uglifyjsplugin maseeharazzack", "d": "1/2018"}, {"body": "still seeing problem using using angular latest still routes click", "d": "1/2018"}, {"body": "cvsguimaraes thanks lot bro worked", "d": "1/2018"}, {"body": "zoechi cvsguimaraes issue row checkboxes model array items came across posts explanationclarifications guys posted helped resolve issue thanks lot", "d": "1/2018"}, {"body": "problem animation working firefox even using polyfill", "d": "1/2018"}, {"body": "also issues firefox using polyfill simple animation const instyle style opacity height padding margin const outstyle style opacity height padding margin component selector appcamerapointform template providers formcontrolservice animations trigger flyinout state instyle state void outstyle transition void gt animate easein transition gt void animate easeout edit nevermind issue firefox implementing correctly solution expand per thread mohammedzamakhan property width correct problem margin property workaround expand margin margintop marginright marginbottom marginleft code reference", "d": "1/2018"}, {"body": "solution problem yet", "d": "1/2018"}, {"body": "taken issue following worked export const windowinjection new injectiontoken windowinjection providers provide windowinjection usevalue window constructor inject windowinjection private window", "d": "1/2018"}, {"body": "bump updates big issue", "d": "1/2018"}, {"body": "add example example repo", "d": "1/2018"}, {"body": "obsolete better wrappers componentfixture methods", "d": "1/2018"}, {"body": "want check control touched", "d": "1/2018"}, {"body": "clarifying example around ngmodel async issues would useful kyliau please add part", "d": "1/2018"}, {"body": "coming wrapper makes easier use testbed general also specifically rxjs", "d": "1/2018"}, {"body": "vikerman could link work done", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "markperrybv thisformcontrol new formcontrol null works", "d": "1/2018"}, {"body": "would nt dude issues upgrade version angular kara suggests also longer template forms transitioned reactive forms model suits needs lot better", "d": "1/2018"}, {"body": "workaround using viewchild get input setting nativeelement value upon changes", "d": "1/2018"}, {"body": "viruskst huh exactly see subscribe function executed param view nt updated known issue", "d": "1/2018"}, {"body": "newer jasmine use asyncawait kyliau add asyncawait example", "d": "1/2018"}, {"body": "use workaround also eventemitter shared service thisrouternavigate url gt thisserviceemmiteremmit data service emmiter eventemitter new eventemitter constructor thisserviceemmitersubscribe tried works fine behaviorsubject shared service", "d": "1/2018"}, {"body": "reloading browser make data erased right", "d": "1/2018"}, {"body": "well found workaround uirouter already hit rc stage moved back one", "d": "1/2018"}, {"body": "use instead", "d": "1/2018"}, {"body": "long list comments let try sum html itemname problems code created becomes true point observable already emitted list considered ngfor multiple create multiple subscription may may problem using could one way solve issue", "d": "1/2018"}, {"body": "please reopen still issue", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "andreevartem thanks solution selector provideparentform works fine thanks works great try ng build prod aot error throws error error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function position original ts file resolving symbol provideparentformdirective srcappdirectivesprovideparentformdirectivets solved replace anonymous lambda method explicitly method import directive forwardref angularcore import ngform controlcontainer ngmodelgroup angularforms export function test form ngform return form directive selector appprovideparentform providers provide controlcontainer usefactory test deps ngform export class provideparentformdirective reference solution found case someone needed", "d": "1/2018"}, {"body": "ocombe look said blog post", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "nt seem testing issue ptal vicb", "d": "1/2018"}, {"body": "rtm post angular allow something like progress resolving issue build custom directive", "d": "1/2018"}, {"body": "would really nice get actual feedback angular core team topic", "d": "1/2018"}, {"body": "sure started become possible successfully using something like elements bound like also see closed", "d": "1/2018"}, {"body": "hi even used ngmodel along formcontrolname large complex form similar type input elements type validations input elements contains values large json object wanted solution touch main object iterated main object build form value object changed change corresponding input field automatically reflect component therefore change value form input field value updated main object component due ngmodel send updated object form submit destination time wanted use form validation power create form controls input fields used formcontrolname along ngmodel acheive form validation well data auto change main object one suggest correct approach angular", "d": "1/2018"}, {"body": "kyliau consider mock backend example", "d": "1/2018"}, {"body": "angular", "d": "1/2018"}, {"body": "data point seeing increase messages chrome console relating", "d": "1/2018"}, {"body": "made pr able config zone hostlistener would like make pr config passive seems lot discussion discussed try modify pr", "d": "1/2018"}, {"body": "two years future solution issue make magaiverism put element inside container catch behavior describe documentation wo nt using angular version", "d": "1/2018"}, {"body": "lordazzi misunderstanding", "d": "1/2018"}, {"body": "restarting worked", "d": "1/2018"}, {"body": "angular believe issue form still exists following design pattern given via angular dynamic form guide found three checkbox radio file work within question component following answer begin work issue seems html elements dynamically build connect via formcontrolname static work problem plunker template working broken html", "d": "1/2018"}, {"body": "creating custom video player using requestanimationframe update frame accurate time value however run outside angular suggested runs much slower updates roughly every frames without runoutsideangular function runs fine updates every frame relevant section component updateframe thistime thispipevideonativeelementcurrenttime thisframe mathround thistime thisfps frame rate fps playvideo thisanimframe thisngzonerunoutsideangular gt requestanimationframe gt thisupdateframe thispipevideonativeelementplay thisplaying true", "d": "1/2018"}, {"body": "want run outside faster way document later add following code loading", "d": "1/2018"}, {"body": "guys someone still problem using iis add config webconfig original solution", "d": "1/2018"}, {"body": "hopefully things get drastically better losing see", "d": "1/2018"}, {"body": "somombo article confirmed bullshit long time ago people actually know stuff made fun author none took seriously likes react vue fanboys naturally", "d": "1/2018"}, {"body": "fact matter issue low priority angular team fact lowest possibly priority see published priority list angularhq look issue number case despite issue generated alot discussion interest community shown number comments someone cares issue would really like see implemented instead waiting well honestly potentially never perhaps fill official annual angular survey make known feel like issue higher priority would appreciate seeing fufilled sooner rather later nt forget thank angular team great work done", "d": "1/2018"}, {"body": "would also like cast vote feature cause much grief trying work around issue", "d": "1/2018"}, {"body": "somombo please nt read much priority angularhq yet priority formula fully fleshed said think revisit feature request ships afraid nt bandwidth sooner working would conflict already ongoing work compilercore area quick fix request suspect going take considerable effort get done properly stuff working make one much easier implement", "d": "1/2018"}, {"body": "igorminar ivy work makes feasible yes past", "d": "1/2018"}, {"body": "igorminar mhevery stress enough thankful rest us also sure given us concrete feedback thoughts needs happen first issue properly addressed always clear us laymen quick fix however barring fact quick fix type thing done right especially appreciative seems also feel useful feature angular know busy ca nt possibility respond like every single issue sincere gratitude whenever excited looking forward angular beyond thank great work", "d": "1/2018"}, {"body": "please reconsider supporting one level nested destructuring", "d": "1/2018"}, {"body": "coming test wrapper library solve issue", "d": "1/2018"}, {"body": "vikerman close using great hoping angular team would include fix", "d": "1/2018"}, {"body": "would like try make pr mock date patch jasmineclock", "d": "1/2018"}, {"body": "made pr support features pr support auto patch automatically run test called rxjs support need import javascript import librxjsrxjsfakeasync get date diff correctly done gt fakeasynctestzonerun gt let result null make pr pr merged diestrin necroskillz dfederm cwmrowe please check whether requirement met", "d": "1/2018"}, {"body": "jialipassion info last test leaks subscription observable never completes subscription never unsubscribed instead write fix completes sending single value anyway looks like fix issue thanks making library obsolete xd", "d": "1/2018"}, {"body": "odd may instance spending lots time debugging turned using output property handle custom event angular recognize property custom event property passed template eg issue far issue concerned valid event handler heck work development built project even strange issue errors warning solution subscribersubscription related errors come well imagine one subscribed guess correlation", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "kyliau something consider", "d": "1/2018"}, {"body": "example covered part resolving", "d": "1/2018"}, {"body": "dzmitryshylovich fix looks good point view chance create pr soon", "d": "1/2018"}, {"body": "happened bcz u r returning data json format", "d": "1/2018"}, {"body": "azjkjensen share solution found one using webpack building help would appreciated thanks", "d": "1/2018"}, {"body": "unfortunately longer part project ca nt remember fix sorry", "d": "1/2018"}, {"body": "still issue production mode app barely usable edge basically unusable chrome firefox opera runs perfectly using latest angular ngbootstrap ui elements code pretty basic list items container set oveflow auto one clickable expand show information using hidden isexpanded div inside list item element", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "appmodule referenceerror headers undefined", "d": "1/2018"}, {"body": "michaeljota sure statement true take flex box example flex applies direct children adding extra tag parent child requires special treatment css add angular component tag", "d": "1/2018"}, {"body": "daveawb angular components consistent custom elements like tags internal views inside affected context need rather indeed concepts valid usecases", "d": "1/2018"}, {"body": "daveawb case sounds like place instead", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "bump looking forward proper solution", "d": "1/2018"}, {"body": "put single named project many times please via ngtemplateoutlet directive twig template one template two template three still transclude last visible project anywhere one condition matches time example", "d": "1/2018"}, {"body": "tusharsingh problem zonejs ca nt monkey patch jsonp see clear explanation problem article still think ngzone zonejs required change detection angular article usually party libraries places google facebook twitter etc use jsonp technique robwormald correct wrong", "d": "1/2018"}, {"body": "vienojyoti case necessary make request server asks server right", "d": "1/2018"}, {"body": "vienojyoti could provide reproduce repo try make patch", "d": "1/2018"}, {"body": "jialipassion sure please give hours smile right back", "d": "1/2018"}, {"body": "jialipassion go testzonejswithjsonp repository tries confirm fact zonejs ca nt nt monkey patch jsonp project consists frontend application backend application web app interface two buttons first button triggers get request second button triggers jsonp request entire application wrapped inside zone output bunch logs javascript console also perform consolelog directly within response handlers js console logs get request js console logs jsonp request seen zonejs catch jsonp response response actually javascript code executed browser inside newly injected tag", "d": "1/2018"}, {"body": "vienojyoti thank sample check", "d": "1/2018"}, {"body": "vienojyoti make pr update sample provided", "d": "1/2018"}, {"body": "thank jialipassion gladly update test repository pr lands", "d": "1/2018"}, {"body": "case necessary make request server asks server right mlcmlapis jsonp works across domains nt need use proxy server please topic learn jsonp", "d": "1/2018"}, {"body": "vienojyoti yep know reaction problem zonejs go server eliminate wait new version zonejs pr jialipassion see", "d": "1/2018"}, {"body": "thank worked nice", "d": "1/2018"}, {"body": "one whose component must call within block nt want put inner login block suggest cal within block like solved problem", "d": "1/2018"}, {"body": "updates", "d": "1/2018"}, {"body": "jcwardle thanks polyfill link fixed issue", "d": "1/2018"}, {"body": "believe obsolete missed something please open new issue", "d": "1/2018"}, {"body": "record still believe wrong thing forcing users install polyfills required", "d": "1/2018"}, {"body": "anyone happen know new way angular pretty general component gets called time less work rerender try fake animations loading etc", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "actually long weeks frustration found way repo contains sample compiling component realtime adding leaflet tooltip simple amp easy code using service since projects hopefully useful", "d": "1/2018"}, {"body": "programmist work get error error ca nt resolve parameters activatedroute", "d": "1/2018"}, {"body": "zhuanjiaozm try", "d": "1/2018"}, {"body": "zhuanjiaozm remove activatedroute providers provide mock test without problems", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "attempting get routing working fragment timing issues tried everything thread avail ideas please see stack overflow", "d": "1/2018"}, {"body": "ran issue jumptoanchor functionality wanted throw hat ring took approach polyfills behavior module way code nt actually change polyfill removed angular core implements fragment navigation works creating directive binds monitors stream different previous suggestions different app nt really know", "d": "1/2018"}, {"body": "worked best navigation changes constructor private route activatedroute ngoninit thissub thisroutefragmentsubscribe hash string gt hash const cmp documentgetelementbyid hash cmp cmpscrollintoview else windowscrollto", "d": "1/2018"}, {"body": "solution angular universal makign cors calls", "d": "1/2018"}, {"body": "solution create pipe return values array propierties object import pipe pipetransform angularcore pipe name valuearray export class valuearraypipe implements pipetransform el parametro object representa los valores de las propiedades indice transform objects return objectvalues objects template implement", "d": "1/2018"}, {"body": "tstpierre might also need set host widthheight overriding default style selector elements child components using heightwidth probably referenceing htmlbody sizing hosts sizing", "d": "1/2018"}, {"body": "obsolete", "d": "1/2018"}, {"body": "icepeng actually nt got quite right turning standard input observable new pattern would actually provides way access inside observable even though nt observable observable get observable observables course first place example might seem sensible already pass observable inputs however provides lot value passed input already observable eg", "d": "1/2018"}, {"body": "problem passing observable input totally possible right would nt quite work", "d": "1/2018"}, {"body": "fxck well right wo nt called observable emits input remains long use async pipe subscribe observable passed work fine async pipe manually triggers child component change detector", "d": "1/2018"}, {"body": "yes directed towards icepeng", "d": "1/2018"}, {"body": "ohjames fxck nt know passing observable possible right sorry wrong information", "d": "1/2018"}, {"body": "since directly passing observable possible sure would useful think value changed observable problem already personal opinion", "d": "1/2018"}, {"body": "icepeng consider make consumable observable without jumping hoops also consider writing thirdparty library nt want force consumers library pass observables component many users nt comfortable streams avoid rxjs many instances useful", "d": "1/2018"}, {"body": "ohjames would static value nt think observable however understand people want feature solution seems good writing thirdparty library approach seems better would nice angular core provide decorator like ngchanges ngchanges behaviorsubject lt prop string gt input prop string ngoninit thisngchanges subscribe changes gt consolelog changesprop possible implement", "d": "1/2018"}, {"body": "replayobservable buffer length would preferable need behavioursubject value semantics also access property whether possible implement check issue history many different implementations options none great outright broken properly need linked pr something similar", "d": "1/2018"}, {"body": "cents objectobserve depreciated favour proxies solution extend proxy yes know reason returned constructor listen key belonging object observable get keyname method use object angular class one ts import observable rxjsobservable import subject rxjssubject extends class able observe key affectation class observableproxy private changes subject lt propertykey gt new subject lt propertykey gt example ts class user extends observableproxy public name string const user user new user user get name subscribe value gt consolelog value username toto prints consolelog toto", "d": "1/2018"}, {"body": "leaving stone agree kylecordes immutability high level state best way go either high level parent component onpush change detection strategy component notify changes new references passed could store medium proper way state need save reduxlike state management system pure functions updating state observed across application angular nice implementation redux names angularredux point view ways think components destroy lifecycle good", "d": "1/2018"}, {"body": "angular team provide update whenif going resolved large client provide pretty clunky workaround order circumvent roadmap", "d": "1/2018"}, {"body": "sure think bypasssecurity sanitizer allow", "d": "1/2018"}, {"body": "workaround might dynamically add script tag using javascript", "d": "1/2018"}, {"body": "lmfinney changing value ngvalue solves problem example", "d": "1/2018"}, {"body": "also running issue", "d": "1/2018"}, {"body": "hi mhevery vicb submitted pr issue time ago fixed conflict lint errors tests see please let know something cheers", "d": "1/2018"}, {"body": "shortsighted like many things new angular means forcing certain data model every endpoint regardless wether sensible", "d": "1/2018"}, {"body": "recommend read useful article abourt angular best solution web app hope find interesting information", "d": "1/2018"}, {"title": "short syntax vbind prop modifier", "body": "problem feature solve make things shorter easier write proposed api look like syntax shortcut similarly would nice shortcut leading even makes sense", "num": "7582", "d": "1/2018"}, {"title": "document error trick", "body": "version reproduction link steps reproduce expected reactive actually happening reactive", "num": "7581", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce pass sync prop parent grandson child expected warning actually happening", "num": "7580", "d": "1/2018"}, {"title": "listeners updated correctly component reuse", "body": "version reproduction link steps reproduce click alert something problem click switch click alert expected expected alert click button actually happening alert click button considering edge case listeners removed component reuse perhaps bug line", "num": "7579", "d": "1/2018"}, {"title": "setting dynamic path template src property", "body": "problem feature solve sure whether good alternative problem yes exist would help users dynamically set path src template need one ts file src script tag multiple html files one template tag one time per request users set dynamic path src needed binding starts work proposed api look like example look like seen src binded would change path setting component passed parent component props way path becomes dynamic nt write script everytime different html work", "num": "7578", "d": "1/2018"}, {"title": "work vhtml truncate", "body": "hello try make vhtml messagecontent truncate work use messagecontent truncate okey html code render please help", "num": "7577", "d": "1/2018"}, {"title": "happens object change detection caveats", "body": "vma reactive vmb reactive html html value null b value b null js js var vm new vue el app data vma vmb result value b value", "num": "7576", "d": "1/2018"}, {"title": "capture event always trigger bubble event element", "body": "problem feature solve see suggest two buttons trigger capture bubble similar \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u4e8b\u4ef6\u7684\u6355\u83b7\u9636\u6bb5 example trigger click inner view proposed api look like need change api feature", "num": "7575", "d": "1/2018"}, {"title": "capture event trigger capture event element", "body": "problem feature solve users nt need care order bind capture capture events got result capture events always trigger capture one click button proposed api look like", "num": "7574", "d": "1/2018"}, {"title": "pitfalls vue dependency detection may cause redundant dependencies", "body": "version reproduction link steps reproduce click app component update expected app component updates actually happening app component updates twice props used child component detected dependencies parent component possible stop dependency detection entering child component", "num": "7573", "d": "1/2018"}, {"title": "want append html template modal previous website body tag built jquery possible way using vuejs", "body": "", "num": "7572", "d": "1/2018"}, {"title": "vfor key effectless abstract render function", "body": "version reproduction link steps reproduce toggle items notice uuid expected component instance created destroyed actually happening abstract one works like index btw works expected", "num": "7571", "d": "1/2018"}, {"title": "allow props different internal external names", "body": "problem feature solve consider element maintains internal state value browser irrespective whether driven looking vue component libraries components externalize state props meaning parent component must define value component data use wire component used without nt maintain state internally component ideally like author input components satisfy following requirements used without component maintains state used state driven entirely prop emitting events results somewhat messy code like js vuecomponent checkbox template internalvalue checked unchecked props value type boolean default false data return internalvalue false watch value immediate true handler value thisinternalvalue value methods toggle thisinternalvalue thisinternalvalue order distinguish prop data used respectively problem rarely used code used watcher remember use throughout component code template instead since mutable source truth avoid could instead name prop data would use ideal external prop called simply value proposing feature specify internal name prop exposed within component without changing external name prop templates kind like method arguments work objectivec proposed api look like js vuecomponent foo props value internalname valueprop template valueprop", "num": "7569", "d": "1/2018"}, {"title": "vmodel resets slot", "body": "version reproduction link steps reproduce type input second box expected second input component bound behave differently first bound ie behaves like tag actually happening two things second input box resets short amount time second input box seems delete end string unchanged try typing two keys quickly discovered working custom input component using slot way put content next box seems like common usecase reporting could nt find issue docsrepoforums", "num": "7568", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9 expected \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9 actually happening \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9 \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9", "num": "7567", "d": "1/2018"}, {"title": "keepalive nt call destroy view actived", "body": "version reproduction link steps reproduce navigate pagea make keepalive cache pagea component navigate pageb make keepalive cache pageb component remove cache pagea pagea destroyed correctly navigate back pagea remove cache pageb pageb destroyed expected pageb destroyed actually happening pageb destroyed", "num": "7566", "d": "1/2018"}, {"title": "\u65e0\u6cd5\u963b\u6b62 productiontip", "body": "version reproduction link steps reproduce \u8fd9\u91cc\u65e0\u6cd5\u963b\u6b62 vue \u8fd8\u6ca1\u662f vueconfigproductiontip false \u5982\u679c\u5728\u8fd9\u91cc\u963b\u6b62 vueconfigproductiontip false expected \u963b\u6b62 productiontip actually happening \u65e0\u6cd5\u963b\u6b62 productiontip", "num": "7565", "d": "1/2018"}, {"title": "serverrendered output id attribute different guide clientside hydration amount app browser", "body": "version reproduction link steps reproduce js cliententryjs import createapp appjs const app router store createapp windowinitialstate consolelog xixii storereplacestate windowinitialstate routeronready gt let element documentqueryselector dataserverrendered true app mount element app mount app js serverjs const express require express const path require path const server express const renderoption template require fs readfilesync dirname indextemplatehtml const renderer require vueserverrenderer createrenderer renderoption const serverbundle require distbundleserverjs serveruse expressstatic pathresolve dirname dist const createvueinstance serverbundledefault const clientbundlefileulr bundleclientjs serverget apigetbloglist function req res consolelog bloglist resjson list title \u54c8\u54c8\u54c8 title \u5475\u5475\u5475 title \u563b\u563b\u563b serverget req res gt requrl faviconico resend return consolelog requrl const templatedata title vue \u670d\u52a1\u7aef\u6e32\u67d3\u5b9e\u8df5 bundleurl clientbundlefileulr const context url requrl createvueinstance context vueinstance gt vueinstancecode consolelog find router else \u6b64\u65f6store\u91cc\u9762\u9884\u8bf7\u6c42\u7684\u6570\u636e\u5df2\u7ecf\u88ab\u5b58\u5165contextstate\u4e86 \u6253\u5165\u6a21\u677f\u6570\u636e\u91cc templatedatastate contextstate rendererrendertostring vueinstance templatedata err html gt err consolelog err resstatus end internal server error return else resstatus end html onreject gt consolelog onreject serverlisten expected html actually happening html serverrendered output id attribute", "num": "7564", "d": "1/2018"}, {"title": "use vnodes without dom representation", "body": "problem feature solve thread forum attempting use vue manner similar aframe state graphics engine managed vue components template composition really nt need actual dom nodes since actual rendering delegated underlying framework right able represent scene state custom components way actually components initialized rendering empty dom nodes seems unnecessary add overhead actual dom representation leads strange cascading empty div structure document proposed api look like component property marks virtual vnode property marks virtualonly", "num": "7563", "d": "1/2018"}, {"title": "vueconfigproductiontip false working anymore", "body": "version reproduction link steps reproduce current tools freshly installed generate new webpackbased project expected nt show annoying warning actually happening warning shown reported railstation closed automatically", "num": "7562", "d": "1/2018"}, {"title": "vshow display flickering component ios", "body": "version reproduction link steps reproduce vshow display opacity transition flicker expected show opacity css animation actually happening show opacity css animation flickering test case recurrent ios iphone plus ios iphone record video bug", "num": "7561", "d": "1/2018"}, {"title": "mousemove event executed watcher", "body": "version reproduction link steps reproduce use chrome winxp click inner component see console log expected mousemove event triggered affter watcher actually happening mousemove event triggered watcher maybe say use latest chrome version customers use winxp version last version winxp nt known vue bug chrome bug chrome user click component triggered click mousemove event works well vue version demo seen vue release log change von event handler macro task still understand log", "num": "7560", "d": "1/2018"}, {"title": "component cached passed property case iterating descending ordered array", "body": "version steps reproduce use component property display loop ordered descendant array expected actual value actually happening cached value previous object displaying new vuejs probably issue dummy one still realized fix situation collection objects sorted lodash iterating also display one object property usage vuejs component like finally add new objects array going first elements ordered array component display newly added object proper way continue display previous one actualty second duplicate page refresh fixing situation pretty sure code issue know clear hope someone could figure wrong let know example also provided thank", "num": "7559", "d": "1/2018"}, {"title": "component cached passed property case iterating descending ordered array", "body": "new vuejs probably issue dummy one still realized fix situation collection objects sorted lodash iterating also display one object property usage vuejs component like finally add new objects array going first elements ordered array component display newly added object proper way continue display previous one actualty second duplicate page refresh fixing situation pretty sure code issue know clear hope someone could figure wrong let know example also provided thank", "num": "7558", "d": "1/2018"}, {"title": "remove attribute merging functional components prop definition", "body": "problem feature solve currently using functional components without definition attributes rendered using jsx spread remain merged current usage implementation export default functional true render data props const type fill props output proposed api look like explicit attributes render dom using functional component prop definition fix lt code gt delete dataattrs lt code gt explicitly passing attributes use spread notation get remaining replacing object usage implementation export default functional true render data props const fill type attrs props dataattrs attrs output explicitly passing attributes usage implementation export default functional true render data props const fill type formtarget props output conclusion examples show behaviour attributes left child dictating attributes shoud rendered either approach explcititly name attributes pass onto element original propsattrs rendered attributes adds polution dom especially attributes arraysobjectsfunctionssymbols", "num": "7557", "d": "1/2018"}, {"title": "way update recalculate filtered values", "body": "problem feature solve hi angular filters use stateful values updated automatically modulefilter translate function rootscope function translate value return rootscopetranslate value value translate stateful true return translate vue filters recalculate filter undefined methods recalculate methods filters recalculate use forceupdate method proposed api look like link filters use context data vuefilter translate function value gt return storetranslate value value auto manually rerender value change object storetranslate", "num": "7556", "d": "1/2018"}, {"title": "way update recalculate filtered values", "body": "hi angular filters use stateful values updated automatically modulefilter translate function rootscope vue filters recalculate filter undefined methods recalculate methods filters recalculate use forceupdate method would like get link filters use context data auto manually rerender value change object storetranslate", "num": "7555", "d": "1/2018"}, {"title": "class attribute ignored functional components", "body": "version reproduction link steps reproduce create functional component render parent component classes applied classes wo nt expected would expected class attribute would present dom like regular stateful components actually happening class attribute lost appear dom think issue might related", "num": "7554", "d": "1/2018"}, {"title": "vue warn", "body": "problem feature solve warnings vue looks like errors might little confusing would better changing consoleerror consolewarn improve convenience browser console filtering feature proposed api look like replacing consoleerror consolewarn warnings", "num": "7553", "d": "1/2018"}, {"title": "htmlprogresselement value attribute nt removed fed false null undefined", "body": "version reproduction link steps reproduce per documentation null undefined false remove attribute expected value attribute removed actually happening specific htmlprogresselement attribute removed giving false exception failed set value property htmlprogresselement provided double value nonfinite giving null undefined value htmlprogresselement without value attribute changes visual represent indeterminate state link", "num": "7552", "d": "1/2018"}, {"title": "method exec twice use axios", "body": "version reproduction link steps reproduce real exist url method url would ok test run console show result twice twice expected one twice output actually happening happen twice full code put", "num": "7551", "d": "1/2018"}, {"title": "\u7ec4\u4ef6\u7ee7\u627f", "body": "problem feature solve proposed api look like export default name render h return thisparenth", "num": "7550", "d": "1/2018"}, {"title": "scoped class leaks children", "body": "version reproduction link steps reproduce parent component apply scoped class div child name class make sure scoped use different css properties overwriting expected would expect scoped classes actually scoped actually happening scoped styles leaking children divs sharing datav attributes bad", "num": "7548", "d": "1/2018"}, {"title": "wrong bracket error caught version", "body": "working javascript export default name app components message lt change parentheses working error message data return", "num": "7547", "d": "1/2018"}, {"title": "ipadiphone keyboard shown input gets focus works vue", "body": "version reproduction link steps reproduce open link ipad iphone tap text expected input becomes visible gets focus onscreen keyboard ipadiphone shown actually happening input becomes visible gets focus onscreen keyboard ipadiphone shown works vue test stopped working vue test web app use ui pattern clicking text icon start editing something many places vue ipadiphone users would need tap show inputtextarea onscreen keyboard appear ipadiphone need tap twice one time show inputtextarea one time make onscreen keyboard appear", "num": "7546", "d": "1/2018"}, {"title": "filter empty arguments cause error chrome", "body": "version reproduction link steps reproduce chrome filter empty arguments html text somefilter parentheses html text somefilter expected error error actually happening chrome report error invalid expression unexpected token f somefilter text raw expression text somefilter found error also examined chrome errors guess bug occurs chrome", "num": "7544", "d": "1/2018"}, {"title": "loading slot props", "body": "version reproduction link steps reproduce loading true false control slot loading source expected loading prop actually happening loading prop", "num": "7543", "d": "1/2018"}, {"title": "set variable component created hook finished", "body": "problem feature solve like wait page finished loading ie hook finishes running display certain elements unfortunately nt work prevents mustache templates appearing nt stop incomplete elements waiting data api ready proposed api look like would good variable available component like automatically set hook finishes use template hide elements show loading spinners currently need manually every component need add end created hook set would good handled automatically least way set created hook across components rather needing component way add variable set aftercreated mounted hook components done one central place components use", "num": "7542", "d": "1/2018"}, {"title": "\u7236\u7ec4\u4ef6\u80fd\u4e0d\u80fd\u76f4\u63a5\u4f20\u9012\u6240\u6709\u6765\u63a5\u6536\u7684props\u7ed9\u5b50\u7ec4\u4ef6", "body": "problem feature solve proposed api look like", "num": "7541", "d": "1/2018"}, {"title": "webpack author talked vue better react", "body": "webpack author talked vue better react", "num": "7540", "d": "1/2018"}, {"title": "vuejs awesome", "body": "sorry silly issue wanted thank maintainers vue totally changed workflow made developing frontend applications pleasure donating get involved", "num": "7539", "d": "1/2018"}, {"title": "vue component dont updating", "body": "version reproduction link steps reproduce yarn amp amp yarn dev run chrome click button expected current time replaced initial value actually happening initial value updated", "num": "7538", "d": "1/2018"}, {"title": "component per row inlinetemplate", "body": "problem feature solve moment seems impossible create one component per row table using inline templates collected unsuccessful attempts fiddle link suggested linusborg open issue apparently never happended proposed api look like considering limitations involved restrictions allowed elements tables would seem likely supported although pretty ugly form understanding would valid html honor child requirement vue", "num": "7537", "d": "1/2018"}, {"title": "make vue support complete attribute syntax", "body": "problem feature solve runtime set attribute failure compliant parsers generate attributes string names vue library create compiler ok library builtin dom setattribute method fails example numeric attribute perfectly standard settable javascript nonetheless css responds usefully js code read strange numeric attributes got useful running code converted vue without tiny patch others proposed api look like change api poc monkey patch fixes problem anybody care fork investigate fix fully monkey patch proper way fix library call site modified", "num": "7536", "d": "1/2018"}, {"title": "empty props compile wrong thing", "body": "version reproduction link steps reproduce expected props compile playsinline autoplay mute actually happening props compile playsinline autoplayautoplay mutemute nt work either problem things like hack solution onload", "num": "7535", "d": "1/2018"}, {"title": "empty props compile wrong thing", "body": "vue version writing produces rendered setting props empty strings still produces thing problem things like hack solution onload", "num": "7534", "d": "1/2018"}, {"title": "focus handler vmodel change cancels selection input text tab", "body": "version reproduction link steps reproduce click results window jsfiddle hit tab first input selected text inside highlighted hit tab expected second input selected text inside highlighted actually happening second input selected text inside highlighted cursor end text encountered issue vue numeric formats number focusblur tabbing number user needs change user needs manually backspace left arrow key instead typing number directly", "num": "7533", "d": "1/2018"}, {"title": "add global config show event handlers development", "body": "problem feature solve development hard find method used handle events element using browser dom inspector able see handler name content development easier developer locate handler code proposed api look like set global config handlers seen dom inspector html hahaha since valid elementsetattribute changed von", "num": "7532", "d": "1/2018"}, {"title": "layout calculations beforeenter hook cancel entering animation transition elements", "body": "version reproduction link steps reproduce click toggle slide enable transition currently working remove scrolltop layout calculations beforeslideenter element slide smoothly transition working expected gradual sliding right actually happening scrolltop calculations entering transition gone found wrapping child component additional div solve problem however seems like hack apologize bug raised questions forum discord stackoverflow one able answer started think might bug stackoverflow link", "num": "7531", "d": "1/2018"}, {"title": "silence prop mutation warning", "body": "problem feature solve case using pulling vuetable component mixin fine use prop defaults define want defaults even use cssmodules vuetable without modifying template problem comes using prop matter parent needs transformed passed template using component mixin good technique override defaults third party components way transform prop passing template mutating prop since use technique docs creating separate data computed attribute want avoid modifying template keep name come reasonable workaround triggers warning mutating prop works case technique used makes warning less obsolete would like disable example technique using vuetable override import vuetable export default mixins vuetable props nodatatext type string default return data available nodatatemplate type string default return data available mounted thisnodatatemplate lt div class styleempty gt thisnodatatext lt div gt happening effectively using different prop parent use mutating prop used parent effectively become data attribute using mixin must remain prop means danger child mutating parents state warning trying cover proposed api look like thinking simply another option props currently another one could added thinking something like default props parent mutate state turn data attribute lives props main use overwriting component change true use prop data attribute without triggering warning help make sure cause people add mutate state without warning without proper handling warning added component uses prop like normal something like basically reversal current warning", "num": "7528", "d": "1/2018"}, {"title": "functional component wrapping native input control ca nt work correctly vmodel", "body": "version reproduction link steps reproduce input text field expected output actually happening output add modifier resolving issue like maybe add modifiers exact value transforming method sometimes want customize behavior text field like", "num": "7526", "d": "1/2018"}, {"title": "custom command vfocus ca nt used mobile browser pc browser", "body": "problem feature solve set input box get focus mobile browser current pc browser solves problem proposed api look like vfocus", "num": "7525", "d": "1/2018"}, {"title": "vshow triggers transition every time value changes irrespective value truthiness", "body": "version reproduction link steps reproduce bind nonboolean truthy value number string periodically change value different truthy value triggers enter transition every time value changes expected anything element classes change actually happening triggers enter transition every time value changes even though value remains truthy causes element momentarily classes triggers css transition briefly especially noticeable safari check instead see transition occur see srcplatformswebruntimedirectivesshowjs workaround bind boolean values", "num": "7523", "d": "1/2018"}, {"title": "error nexttick typeerror read property createelement undefined", "body": "", "num": "7522", "d": "1/2018"}, {"title": "", "body": "evan help", "num": "7521", "d": "1/2018"}, {"title": "async templates", "body": "problem feature solve like propose adding async modifier template directives loops svelte breeze ideally would allow using async lists wait promise resolve displaying list item passing promises component properties delay rendering component props resolved problem solve well first would move lot promise complexity components keeping lean instead handling passed promises automatically would allow devs manually need break backwards compatibility proposed api look like js promised values loops use foo expected promised props", "num": "7520", "d": "1/2018"}, {"title": "vueserverrenderer file sync resolve webfont support query string", "body": "problem feature solve elementui custom theme scss font file using query string resulting failure load file use npm package report error see elementui issue sure handle issue proposed api look like na", "num": "7519", "d": "1/2018"}, {"title": "automatically fix javascript errors pull requests", "body": "run sticklerci service aimed improving code quality simplifying code review automating code feedback pull requests launched autofixing javascript pull request commits javascript open source project service save time brain power automatically fixing style errors interested trying product submit pull request configuration file maintainer need enable webhooks logging enabling webhook thank", "num": "7517", "d": "1/2018"}, {"title": "vue warn mutating nested parent props", "body": "version reproduction link steps reproduce open console click counter expected show warning mutating object prop actually happening warning shows mutating primitive props", "num": "7516", "d": "1/2018"}, {"title": "vueextend mutates original object", "body": "version reproduction link steps reproduce run fiddle look code vs html expected still array extending actually happening normalized using vueextend", "num": "7515", "d": "1/2018"}, {"title": "vueextend mutates original object", "body": "failed creating issue", "num": "7514", "d": "1/2018"}, {"title": "vue js select bind data row wise get data select item", "body": "", "num": "7513", "d": "1/2018"}, {"title": "", "body": "\u62a5\u9519 avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated status", "num": "7512", "d": "1/2018"}, {"title": "computed property getter setter handling camel kebab case conversion", "body": "version reproduction link steps reproduce html contains kebabcase eg per jsfiddle vmodel agedays computed property defined new vue uses camelcase getter setter agedays jsfiddle expected page loads without error actually happening chrome amp firefox dev unable render failed generate render function referenceerror invalid assignment lefthand side changing lowercase name html vmodel attribute computed property case jsfiddle changing agedays fixes problem", "num": "7511", "d": "1/2018"}, {"title": "npm run build \u7684\u65f6\u5019\u62a5\u7684\u9519", "body": "error ebusy resource busy locked open \u5c0f\u7a0b\u5e8f\u5f00\u53d1\u5e93miniapppattern\u6a21\u677f\u56db\u671f\u780d\u4ef7fourdistindexhtml error native npm err code elifecycle npm err errno npm err four build npm err exit status npm err npm err failed four build script npm err probably problem npm likely additional logging output npm err complete log run found npm err c", "num": "7509", "d": "1/2018"}, {"title": "npm run build \u7684\u65f6\u5019\u62a5\u9519 \u770b\u4e0d\u5230\u4ec0\u4e48\u9519\u8bef", "body": "error ebusy resource busy locked open \u5c0f\u7a0b\u5e8f\u5f00\u53d1\u5e93miniapppattern\u6a21\u677f\u56db\u671f\u780d\u4ef7fourdistindexhtml error native npm err code elifecycle npm err errno npm err four build npm err exit status npm err npm err failed four build script npm err probably problem npm likely additional logging output npm err complete log run found npm err c", "num": "7508", "d": "1/2018"}, {"title": "vueconfigproductiontip false working anymore", "body": "version config vueconfigproductiontip false running vue development mode back console checked vue working version output console desired", "num": "7507", "d": "1/2018"}, {"title": "checkboxes nt keep explicitly declared checked state", "body": "version reproduction link component version without component steps reproduce toggle checkboxes times expected checkbox always stay checked toggling actually happening see example manually bind change event checked attribute input would like control state even though always force value true checkbox always toggles checkedunchecked makes template data sync even calling help case", "num": "7506", "d": "1/2018"}, {"title": "checkboxes nt keep explicitly declared checked state", "body": "version reproduction link steps reproduce toggle checkboxes times expected checkbox always stay checked toggling actually happening see example manually bind change event checked attribute input would like control state even though always force value true checkbox always toggles checkedunchecked makes template data sync even calling help case", "num": "7505", "d": "1/2018"}, {"title": "unknown custom element using parcel sfcs typescript", "body": "version reproduction link steps reproduce open expected test custom element rendered actually happening error learning vue rewrite times try making work tried lookin unknown custom element issues could nt find solution name provided children put object parent sfc", "num": "7504", "d": "1/2018"}, {"title": "text interplation work one time", "body": "hi simple component like vuecomponent lookup props message type string required false messagetwo string template lookuptemp data function return labletitle thismessage labletitletwo thismessagetwo template markup like first line interplation shown time pobolem ps use vue script want add extra functionality current project", "num": "7503", "d": "1/2018"}, {"title": "simplify usage css modules", "body": "problem feature solve css proposed api look like \u901a\u8fc7\u6307\u4ee4\u7684\u6765\u6307\u5b9a\u5173\u8054\u7684css module\u540d vue vue \u901a\u8fc7\u6839\u7684\u6807\u7b7e\u5c5e\u6027\u8868\u660e\u5f53\u524d\u6a21\u677f\u5185\u7684\u5168\u90e8class\u5e94\u8be5\u81ea\u52a8\u8f6c\u6362\u4e3acss vueloader vue vue vue vue div divfoo div class bar vue \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6307\u4ee4\u4e13\u95e8\u7528\u4e8e\u5904\u7406css vue vue vue vue vue div divfoo vcssmodule divbar vcssmodule class baz vue", "num": "7502", "d": "1/2018"}, {"title": "namespaced mixins", "body": "problem feature solve want able create namespaced mixin let take notification mixin example function use strict import component use function use strict nt scale since nt really know method comes already solved using prefix method function use strict seems bad implementation proposed api look like let take first example function use strict could injected component function use strict", "num": "7501", "d": "1/2018"}, {"title": "use puppeteer instead phantomjs tests", "body": "problem feature solve pr check existence really carry polyfill production builds phantomjs solutions drop code build time move tests personally prefer cons reduce vuejs size better tests performance proposed api look like", "num": "7500", "d": "1/2018"}, {"title": "refs bug vue", "body": "version reproduction link steps reproduce count try click export default data return mounted consolelog thiscount consolelog refsreference thisdemo computed count \u8be5\u8ba1\u7b97\u5c5e\u6027\u662f\u76f4\u63a5\u88abvuex\u6302\u8f7dvue\u5b9e\u4f8b\u4e0a\u8fb9\u53bb\u7684 return storestatehi methods demo refsreferenceonclick gt consolelog box width height border solid red position relative btn width height border solid yellow background position absolute left top transform translate expected consolelog actually happening consolelog print inconsistency", "num": "7499", "d": "1/2018"}, {"title": "vue\u4e2d", "body": "count try click export default data return mounted consolelog thiscount consolelog refsreference thisdemo computed count \u8be5\u8ba1\u7b97\u5c5e\u6027\u662f\u76f4\u63a5\u88abvuex\u6302\u8f7dvue\u5b9e\u4f8b\u4e0a\u8fb9\u53bb\u7684 return storestatehi methods demo refsreferenceonclick gt consolelog box width height border solid red position relative btn width height border solid yellow background position absolute left top transform translate", "num": "7498", "d": "1/2018"}, {"title": "return promise support asyncawait", "body": "problem feature solve may situations use multiple calls single function case using asyncawait functionality useful prevent overly nested unreadable code right use either js async mymethod js mymethod proposed api look like return promise may also take closure parameter compatibility reasons could use three variants", "num": "7497", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce mounted async function let vm pageno pagesize expected actually happening \u4e2d props\u7684options\u59cb\u7ec8\u6709\u503c \u4e2d props\u7684options\u59cb\u7ec8\u4e3a\u7a7a", "num": "7496", "d": "1/2018"}, {"title": "", "body": "mounted async function let vm pageno pagesize \u4e2d props\u7684options\u59cb\u7ec8\u6709\u503c \u4e2d props\u7684options\u59cb\u7ec8\u4e3a\u7a7a", "num": "7495", "d": "1/2018"}, {"title": "async transformation component spec difficult work", "body": "problem feature solve vue export default props bar js import foo foovue consolelog props sync fooprops bar settimeout gt consolelog props async fooprops bar type null object mutated hard work make constant make easy library authors consume transform vue specs synchronously proposed api look like proposed api mutate component spec asynchronously", "num": "7494", "d": "1/2018"}, {"title": "async transformation component specs confusing", "body": "vue export default props bar js import foo foovue consolelog props sync fooprops bar settimeout gt consolelog props async fooprops bar type null object mutated hard work make constant", "num": "7493", "d": "1/2018"}, {"title": "functional single file component components option", "body": "version reproduction link ng pattern functional ok pattern functional steps reproduce found ca nt use option single file component html import somechildren somechildren export default components somechildren occure expected occure use child component actually happening occure workaround occure use js import vue vue import somechildren somechildren vuecomponent somechildren somechildren export default use", "num": "7492", "d": "1/2018"}, {"title": "injections resolve differently functional components", "body": "version reproduction link steps reproduce open repro link verify component tree component provides verify two components inject verify output expected receive provided actually happening receives provided nt found information behavior docs looks like functional components resolve injections functional context parent component intended work works", "num": "7490", "d": "1/2018"}, {"title": "vue rerender view arraysplice", "body": "version reproduction link steps reproduce use vue try sort nested array thisdataproparraysplice index thisdataproparraysplice index expected update data view actually happening update data view back step", "num": "7489", "d": "1/2018"}, {"title": "multiple nested vfor keys transition", "body": "nt know issue trying figure transitions multiple nested loops given code link transitiongroup working", "num": "7488", "d": "1/2018"}, {"title": "\u8fd9\u53ef\u80fd\u662fvirtualdom\u4e2d\u4e00\u4e2a\u5f88\u9690\u853d\u7684bug", "body": "version reproduction link steps reproduce \u65e0 expected \u65e0 actually happening \u65e0 \u6240\u4ee5\u6211\u5224\u65ad\u8fd9\u884c\u4ee3\u7801 \u4f46\u6211\u4e0d\u6562\u76f4\u63a5\u63d0pull", "num": "7487", "d": "1/2018"}, {"title": "vue ssr \u6e32\u67d3\u5185\u5b58\u76f4\u6da8", "body": "vue ssr", "num": "7486", "d": "1/2018"}, {"title": "multitype props defined without value gets empty string true boolean string", "body": "version reproduction link steps reproduce define multitype boolean string prop call component specifying prop name without value expected prop contains true boolean type actually happening prop contains empty string sequence change result give result version change result either vue version edge jsfiddle", "num": "7485", "d": "1/2018"}, {"title": "add information boolean props acting flags docs", "body": "problem feature solve docs request undocumented boolean prop say writing lead set leads bugs due resolved verbose code people nt stumble upon fact proposed api look like add docs make pull request russian english docs nt know appropriate place information maybe end props sections near type validation", "num": "7484", "d": "1/2018"}, {"title": "uglifyjs alioss build\u65f6\u5019\u62a5\u9519", "body": "error uglifyjs unexpected token name mime", "num": "7483", "d": "1/2018"}, {"title": "vue ssr \u6e32\u67d3list \u51fa\u73b0\u62a5\u9519\u7684\u60c5\u51b5", "body": "version reproduction link steps reproduce \u8fd9\u662f\u5728\u4f7f\u7528 vue ssr expected \u4e0d\u4f1a\u62a5\u9519 actually happening \u9875\u9762\u65e0\u6cd5\u6e32\u67d3 q", "num": "7482", "d": "1/2018"}, {"title": "beforeupdate actually executed render", "body": "version reproduction link steps reproduce add render beforeupdate hook instance trigger data value change means expected per api beforeupdate supposed fired render state changes hook trigger additional rerenders actually happening beforeupdate actually invoked render current version could result infinite update loop state changes beforeupdate trigger another rerendering", "num": "7481", "d": "1/2018"}, {"title": "double value appear textarea using render function create vue file", "body": "version reproduction link steps reproduce sorry things could use vue file definition jsfiddle please follow steps create textarea component like export default props value type string render function h var return h textarea input function e emit update value etargetvalue import vue file use vue component run codes expected type textarea character would appear textarea actually happening type textarea characters would appear textarea time use component definition html everything goes well ie chrome like example running jsfiddle using definition vue file compiled would get wrong still ok safari chrome", "num": "7480", "d": "1/2018"}, {"title": "template renderer csp", "body": "problem feature solve context state provided template renderer inline script created may useful provide nonce gets attached script tag unsafeinline csp nt enabled proposed api look like", "num": "7479", "d": "1/2018"}, {"title": "content security policy ignoring xframeoptions frameancestors directive", "body": "version reproduction link steps reproduce yarn run dev expected expect see facebook customer chat actually happening iframe partially loaded fbdialog seem prevent rest plugin showed", "num": "7478", "d": "1/2018"}, {"title": "list nodes recreated shuffled downwards", "body": "version reproduction link steps reproduce say array computed property extracts items list based start run computed list increase decrease use item value inspect resulting dom chrome see filtered list moved right index increased dom nodes replaced index moved left first node replaced expected would expect increasing decreasing index would yield dom patch either recreating first last node list actually happening increasing index causes full dom refresh decreasing index yields expected behaviour", "num": "7477", "d": "1/2018"}, {"title": "big dom change vue blocks ui", "body": "version reproduction link steps reproduce start devserver build serve nginx open page last generate store data configures used amounts click toggle showinfo reflects itemcomponent wich renders stuff click jop nope times expected expect clicks happening imediatly actually happening whole ui freezes sek click events processed experienced problem production investigating", "num": "7476", "d": "1/2018"}, {"title": "ability create full independent clone vue constructor", "body": "problem feature solve multiple concurrent independent applications clean independent vueprototype event bus reactive data without global mixinshooks pollution eg beforecreate eg vuex uses global vue may polluted global mixins vuebased templating tools serverside email creation using vue template proposed api look like currently kept common work", "num": "7475", "d": "1/2018"}, {"title": "parent component styles leak child components svg", "body": "version reproduction link steps reproduce always happen ca nt set styles svg child component parent component child component parent component set style svg page see relevant style picture shows nt work edit current node browser development tools hit two spaces works picture shows also tried binding style expected expected actually happening always happen set styles eg background svg child component works english good description may clear go clone projectand reproduce thank", "num": "7474", "d": "1/2018"}, {"title": "refs error", "body": "version reproduction link check real web page steps reproduce check console expected refs vue component actually happening refs array contain vue component", "num": "7473", "d": "1/2018"}, {"title": "typescript support style styles option componentoptions", "body": "problem feature solve developer vue typescipt need add new styles option componentoptions feature allow developer import styles import template example javascript import component vue vuepropertydecorator component template require homehtml style require homescss possible import multiple styles styles require homescss proposed api look like optionsdts case import multiple styles need modify typewebpackenvindexdts adding new require function", "num": "7472", "d": "1/2018"}, {"title": "uigthujkp", "body": "", "num": "7471", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u65e0 expected \u65e0 actually happening \u65e0 oldvnodetext \u4e3a true", "num": "7470", "d": "1/2018"}, {"title": "", "body": "oldvnodetext \u4e3a true", "num": "7469", "d": "1/2018"}, {"title": "passing listeners functional component jsx", "body": "version reproduction link steps reproduce try pass listeners like const decorator functional true render h props listeners return export default decorator expected events emitted emitted parent component actually happening parent component nt receive anything examples docs maybe using wrong way", "num": "7468", "d": "1/2018"}, {"title": "prop sync modifier warning vue", "body": "prop sync modifier used vmodel control dialog visibility vueesmjs vue warn avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated visible", "num": "7467", "d": "1/2018"}, {"title": "allow specifying parameter names custom events", "body": "problem feature solve besides event handling vue saying amp still easy use angularjs angularjs allow developers specify name event callback argument example implementing custom dropdown selector every item label value customizable user wrote code blow angularjs html vue write method handle ca nt get parameter template magic parameter works native events ca nt implement normal way custom events proposed api look like good naming things", "num": "7466", "d": "1/2018"}, {"title": "simple nested scoped slot", "body": "problem feature solve provide slot grandchildren proposed api look like example components parent gt groupedlist gt simplelist want provide slot parent simplelist currently write groupedlist like simple way nt work like", "num": "7464", "d": "1/2018"}, {"title": "vuessrclientplugin bug caused copywebpackplugin", "body": "version reproduction link steps reproduce clone repo view source code prefetched client plugin expected resources copied copywebpackplugin nt prefetched actually happening client plugin prefetches resources copied copywebpackplugin use clientplugin copywebpackplugin bundle\u51fa\u6765\u7684\u6e90\u7801\u603b\u662f\u5c06copywebpackplugin", "num": "7461", "d": "1/2018"}, {"title": "history\u6a21\u5f0f\u7a81\u7136\u5931\u6548", "body": "version reproduction link steps reproduce export \u8def\u7531\u793a\u4f8b export default new router mode history scrollbehavior savedposition savedposition return savedposition else return x routes expected url\u6309\u7167history\u6a21\u5f0f\u663e\u793a actually happening url\u6309\u7167hash\u6a21\u5f0f\u663e\u793a \u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898 \u5728chrome \u6d4f\u89c8\u5668\u4e2d\u7684\u6548\u679c \u5728safari\u4e2d\u7684\u6548\u679c", "num": "7459", "d": "1/2018"}, {"title": "history\u6a21\u5f0f\u7a81\u7136\u5931\u6548", "body": "", "num": "7458", "d": "1/2018"}, {"title": "vue\u6587\u4ef6\u7684this\u6307\u5411\u95ee\u9898", "body": "version reproduction link steps reproduce return expected function return \u8fd9\u6bb5\u4ee3\u7801\u7684this\u6307\u5411window actually happening function return \u8fd9\u6bb5\u4ee3\u7801\u7684this\u662fundefined", "num": "7457", "d": "1/2018"}, {"title": "embedding class interpretering render function first parameter", "body": "problem feature solve may want add class vnode draw supposing selectorlike style might helps little alternative methods proposed api look like", "num": "7455", "d": "1/2018"}, {"title": "slots work differently based way defined tag template string", "body": "version reproduction link steps reproduce render another component within component directive handle component slots differently based define template define template tag works expected injected component uses slot contents intended decide use template string use slot contents also whole slot content slot injection provide slot like injected template string whole tag injected expected use slot contents exclude slot tag actually happening slot tag injected example clearly see difference methods notice footer red slot css applying style", "num": "7453", "d": "1/2018"}, {"title": "question non spa web app", "body": "question work classical single page app app views generated server side added vue enhance user experience components bundled one webpack file included every page obviously get components current page question impact perfs", "num": "7451", "d": "1/2018"}, {"title": "watch\u591a\u4e2a\u5c5e\u6027\u6307\u5411\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u66f4\u52a0\u7b80\u6d01\u7684\u5199\u4e3a\u4e00\u884c\u4ee3\u7801", "body": "problem feature solve watch\u591a\u4e2a\u5c5e\u6027\u6307\u5411\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u66f4\u52a0\u7b80\u6d01\u7684\u5199\u4e3a\u4e00\u884c\u4ee3\u7801 proposed api look like watch\u591a\u4e2a\u5c5e\u6027\u6307\u5411\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u66f4\u52a0\u7b80\u6d01\u7684\u5199\u4e3a\u4e00\u884c\u4ee3\u7801", "num": "7449", "d": "1/2018"}, {"title": "emit\u548c on\u80fd\u5426\u52a0\u4e0a\u540c\u65f6\u7ed1\u5b9a\u6216\u8005\u89e6\u53d1\u591a\u4e2a\u4e8b\u4ef6", "body": "problem feature solve emit\u548c on\u80fd\u5426\u52a0\u4e0a\u540c\u65f6\u7ed1\u5b9a\u6216\u8005\u89e6\u53d1\u591a\u4e2a\u4e8b\u4ef6 proposed api look like emit\u548c on\u80fd\u5426\u52a0\u4e0a\u540c\u65f6\u7ed1\u5b9a\u6216\u8005\u89e6\u53d1\u591a\u4e2a\u4e8b\u4ef6", "num": "7448", "d": "1/2018"}, {"title": "vue\u4e8b\u4ef6\u80fd\u5426\u52a0\u4e0a\u7c7b\u4f3cjquery\u7684\u547d\u540d\u7a7a\u95f4", "body": "problem feature solve vue\u4e8b\u4ef6\u80fd\u5426\u52a0\u4e0a\u7c7b\u4f3cjquery\u7684\u547d\u540d\u7a7a\u95f4 proposed api look like vue\u4e8b\u4ef6\u80fd\u5426\u52a0\u4e0a\u7c7b\u4f3cjquery\u7684\u547d\u540d\u7a7a\u95f4", "num": "7447", "d": "1/2018"}, {"title": "data passing bug", "body": "version reproduction link steps reproduce fill modal setting form save player component display according settings still works fine second time editing modal setting form input without saving player component reacts immediately latest settings expected everytime editing modal setting player component nt react immediately save actually happening child component modal setting mutating parent component score counter even though props object array read also know object array auto mutate parent due javascript passed reference therefore reproduction source see use vbind settings child component instead vbind settings settings somehow still mutating parent data", "num": "7446", "d": "1/2018"}, {"title": "need judge styles transitionprop duration undefined", "body": "version reproduction link steps reproduce run unit test shows var transitiondurations styles transitionprop duration split typeerror read property split undefined think need judge styles transitionprop duration undefined expected styles transitionprop duration defined actually happening styles transitionprop duration defined fixed var styles windowgetcomputedstyle el var transitiondelays styles transitionprop delay styles transitionprop delay split var transitiondurations styles transitionprop duration styles transitionprop duration split var transitiontimeout gettimeout transitiondelays transitiondurations var animationdelays styles animationprop delay styles animationprop delay split var animationdurations styles animationprop duration styles animationprop duration split var animationtimeout gettimeout animationdelays animationdurations", "num": "7444", "d": "1/2018"}, {"title": "emit passes arrays reference", "body": "version reproduction link steps reproduce open jsfiddle link mark check boxes child container click notify parent button emit event watch counter parent event updates click pop button pop local data notice checkboxes child component affected expected clicking pop button counter parent go affecting child component selection actually happening child component selection affected appears passing array additional argument reference array passed around tried objects place arrays able create issue expecting copy array passed reference seems like way cheat twoway binding parentchild components p", "num": "7441", "d": "1/2018"}, {"title": "\u5728\u56fd\u5185\u9489\u9489\u6d4f\u89c8\u5668\u5185\u6838\u4e2d\u4f7f\u7528vue", "body": "import babelpolyfill", "num": "7440", "d": "1/2018"}, {"title": "allow jsxcreateelement inside template prop functions", "body": "problem feature solve allows inlining render functions inside template quick expressive rendering using render functions pass component define method vue instance returns jsx would nice small functions could define inline anonymous proposed api look like allow jsx inside feature would accepted would interested looking contributing could point right direction thanks", "num": "7439", "d": "1/2018"}, {"title": "custom errors prop validators", "body": "problem feature solve loving way prop specification validation works compared react one thing wish custom validator functions could explain validation failed nt hunt validator function follow logic check data proposed api look like javascript props foobar type object required true validator function value default error message valuefoo return false", "num": "7438", "d": "1/2018"}, {"title": "vmodel nt work properly checkbox", "body": "version reproduction link steps reproduce click checkbox expected one checkbox selected actually happening two checkboxes selected happens two element content", "num": "7437", "d": "1/2018"}, {"title": "issue use vm destroy routercomponent keepalive cached component work anymore", "body": "", "num": "7435", "d": "1/2018"}, {"title": "using one props vmodel access prop created hook first modification prop via vmodel reset", "body": "version reproduction link steps reproduce select text text input press backspace delete expected text inside input deleted actually happening text inside input deleted restored immediately deletion also modification reset first modification", "num": "7434", "d": "1/2018"}, {"title": "", "body": "problem feature solve proposed api look like", "num": "7433", "d": "1/2018"}, {"title": "", "body": "init webpack", "num": "7432", "d": "1/2018"}, {"title": "reintroduce triple curly braces vhtml alternative", "body": "problem feature solve moment whenever use vhtml introducing another wrapping element top element want include template eg generate following code cool paragraph however inline paragraphs first paragraph second paragraph third paragraph introduced many unnecessary wrapper elements surrounding element lose ability style paragraphs different colours whatnot css paragraph margin set via fail well stopped relationship soon divs introduced ps reason used p p margin applied set paragraphs proposed api look like ideally usage would like generate following first paragraph second paragraph third paragraph result much cleaner highly intuitive easy read importantly regain ability style paragraphs anyway want method", "num": "7431", "d": "1/2018"}, {"title": "native", "body": "problem feature solve flutter sdk \u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u5355\u4e00\u4ee3\u7801base\u8de8\u4e09\u4e2a\u5e73\u53f0 android ios fuchsia proposed api look like \u6211\u7684\u5efa\u8bae\u662fvue\u53ef\u4ee5\u5728flutter \u4e4b\u4e0a\u5f00\u53d1vue", "num": "7430", "d": "1/2018"}, {"title": "failed resolve directive still works", "body": "version reproduction link steps reproduce register directive use directive component html refresh expected tooltip show log errors actually happening tooltip displays normally however console logs error found srcjsvuepagescomponentsmodulevue tooltip works properly vue warns error", "num": "7429", "d": "1/2018"}, {"title": "watchers nt triggrered nested changes", "body": "version reproduction link steps reproduce click button reproducer content passed child component corrrently however watcher never getting triggered even tho value changed workaround delete property set uncomment line expected watcher get called value changing actually happening watcher getting called object nt changed", "num": "7428", "d": "1/2018"}, {"title": "methods event defined firefox", "body": "version reproduction link steps reproduce open reproduction link chrome firefox click image see console error firefox expected work actually happening throws error firefox", "num": "7427", "d": "1/2018"}, {"title": "mapgetters twice", "body": "", "num": "7426", "d": "1/2018"}, {"title": "use datatable forloop using http request", "body": "hello sir u show example datatable using hhtp request forloop", "num": "7425", "d": "1/2018"}, {"title": "run meteor project problem like fix", "body": "processing files akryum vuecomponent target webbrowser watch homesourdesktopposnewposimportsmodulesaccclientpagesaccounttypevue enospc errnoexception fswatcherstart objectfswatch componentwatcherwatchpath componentwatcherupdate vuecompoaddcompileresult replenish", "num": "7424", "d": "1/2018"}, {"title": "add cloneslot directive", "body": "problem feature solve take child component default slot recursively clone allowing user define child sample declarative way consider example following template declaration formsetmanager component takes formsetrow definition example internally clone many formsetrow components user demands note plain formsetrow component cloned children well means sample provided cloned recursively unable get build clean solution use case using scoped slots believe solution use case implies user needs fully implement render function formsetmanager component proposed api look like proposed api could look something like following template also consider previously described formsetmanager template key example proposed cloneslot directive shown example takes formsetrow child clones arbitrary number times case dictated vfor rows used cloneslot defined data rows changes appropriate number formsetrows clonedgenerated", "num": "7423", "d": "1/2018"}, {"title": "bind boolean values accessibility attributes", "body": "problem feature solve know vue currently removes html attributes bound boolean evaluates false currently renders perfect however work well aria attributes per spec many aria attributes need values set screen readers ideally renders fiddle demonstrates desired output current workaround works gets messy multiple aria attributes know could also use feels even messier hackish proposed api look like easiest way think fixing modifier renders thoughts guidance", "num": "7422", "d": "1/2018"}, {"title": "allow unescaped attribute value", "body": "problem feature solve situations desirable html entities value attributes good example would obfuscating email address bots replacing character attribute value unicode character entity character something like would become vue escaping character entities making code invalid trying user land filters directives even using directive managed get success directive creating whole element children needs attribute value unescaped highly impractical especially child elements mix proposed api look like use modifier vbind directive", "num": "7421", "d": "1/2018"}, {"title": "possibility pause", "body": "problem feature solve example application timeout bar pause hover proposed api look like div width height background venteractive transition width venter width venterto width", "num": "7420", "d": "1/2018"}, {"title": "change property appvue affect property vuex store", "body": "version reproduction link steps reproduce suppose object vuex store data name john lname doe name george lname doe appvue follow prop data thisgetfetcheddata returns prop vuex store follow thisdatasplice expected expected remove first element data prop appvueonly actually happening besides also removed first element vuex store property think javascript issue dont know something wrongcheck jsfidlle link understand mean", "num": "7419", "d": "1/2018"}, {"title": "transition bug multiple ul", "body": "version reproduction link steps reproduce expected transition actually happening code transition ok first element array ul second ul hidden without work solved", "num": "7418", "d": "1/2018"}, {"title": "change property appvue affect property vuex store", "body": "suppose object vuex store data name john lname doe name george lname doe appvue follow prop data thisgetfetcheddata returns prop vuex store follow thisdatasplice changes prop appvue also prop vuex store also tried like jsfidlle think vuex issuemaybe javascript issue something wrong", "num": "7417", "d": "1/2018"}, {"title": "change property appvue affect property vuex store", "body": "suppose object vuex store data name john lname doe name george lname doe appvue follow prop data thisgetfetcheddata returns prop vuex store follow thisdatasplice changes prop appvue also prop vuex store also tried like jsfidlle think vuex issuemaybe javascript issue id something wrong", "num": "7416", "d": "1/2018"}, {"title": "transition bug multiple ul", "body": "hello version vue code transition ok first element array ul second ul hidden without work solved", "num": "7415", "d": "1/2018"}, {"title": "", "body": "", "num": "7414", "d": "1/2018"}, {"title": "vmodel working input type vue modal", "body": "lt div class modalheader gt lt slot name header gt default header lt slot gt lt div gt lt div class modalbody gt lt slot name body gt name lt input type text vtext myname gt myname lt br gt lt br gt age lt input type number gt lt br gt lt br gt mobile lt input type number gt lt br gt lt br gt lt slot gt lt div gt lt div class modalfooter gt lt slot name footer gt lt button von click pushtotable gt submit lt button gt lt button style display none gt edit lt button gt lt button class modaldefaultbutton click emit close gt close lt button gt lt slot gt lt div gt lt div gt lt div gt lt div gt input data student info name age mobile export default name app data return showmodal false myname age mobile", "num": "7413", "d": "1/2018"}, {"title": "extends option behavior mixins", "body": "version reproduction link steps reproduce see console expected compb created compa created actually happening compa created compb created doc says option similar difference components options takes higher priority source component extended however fact source component extended higher priority mixins see source code vuejs js export function mergeoptions parent object child object vm component object const extendsfrom childextends extendsfrom parent mergeoptions parent extendsfrom vm childmixins let l childmixinslength lt l parent mergeoptions parent childmixins vm extendsmixins almost", "num": "7412", "d": "1/2018"}, {"title": "transition leaveto class removed properly", "body": "version reproduction link steps reproduce click showhide button switch another browser tab seconds go back jsfiddle see message displayed expected clicking showhide button fiddle waits seconds hides message fiddle waits second shows message actually happening clicking showhide button switching another browser tab seconds come back see message class fadeleaveto element behave", "num": "7411", "d": "1/2018"}, {"title": "vue \u7ec4\u4ef6\u9500\u6bc1", "body": "problem feature solve \u6700\u8fd1\u505a\u4e86\u4e00\u4e2a\u9879\u76ee \u6280\u672f\u6808vuejs vuex vecharts elementui \u5177\u4f53\u505a\u6cd5\u662f \u5728\u7ec4\u4ef6beforedestroy\u8fd9\u4e2a\u51fd\u6570\u5f00\u542floading proposed api look like \u65e0", "num": "7410", "d": "1/2018"}, {"title": "disable comment stripping vue template", "body": "version reproduction link steps reproduce add html block contains comments directive root level rendered notice inline comments stripped expected inline comments markup remains untouched vue actually happening vue still seems parsecompile contents inside directive supposed work way love find another way disable comment stripping reason need using legacy knockoutjs markup inside larger vue vm knockoutjs syntax allows using comment bindingsdirectives stripped vue", "num": "7409", "d": "1/2018"}, {"title": "bind implementation slower native modern browsers", "body": "version reproduction link steps reproduce run tests across modern browsers see result expected custom bind implementation performance level native actually happening custom bind implementation performance lower native tested safari native slower chrome native faster edge native faster firefox native faster believe issue think something improved", "num": "7408", "d": "1/2018"}, {"title": "document vmodel nt work inheritattrs", "body": "problem feature solve per sounds like number people expecting vmodel work inheritattrs attrs listeners also caught assumed bug googling found rejected pr nt see anything docs suggested trying would nt work would possible document nt expected work maybe would made pr nt time right perhaps assign might get chance weekend cheers david proposed api look like na", "num": "7407", "d": "1/2018"}, {"title": "bind checked properties checkbox bidirectional render method", "body": "version reproduction link steps reproduce bind checked properties checkbox bidirectional render method mycheckbox component ca nt set otherwise appear warning understood modifies attribute value mycheckbox vue nt allow operation expected setting ischecked value externally shown display mycheckbox component actually happening ischeckedtrue mycheckbox component rendered checkbox fails selected default", "num": "7405", "d": "1/2018"}, {"title": "dynamic input type longer works vmodel value time", "body": "version reproduction link steps reproduce open js console see vue warn error compiling template testitem testvalue value testitem conflicts vmodel element latter already expands value binding internally found expected template compiled without errors like vue actually happening errors template compilation codepen still renders component webpack wont build bundle error code worked", "num": "7404", "d": "1/2018"}, {"title": "valid versions available pinkiepromise", "body": "version reproduction link steps reproduce npm install global vuecli cnpm install global vuecli expected vue work actually happening vue work", "num": "7403", "d": "1/2018"}, {"title": "valid versions available pinkiepromise", "body": "", "num": "7402", "d": "1/2018"}, {"title": "valid versions available pinkiepromis", "body": "", "num": "7401", "d": "1/2018"}, {"title": "webpack path aliases componentvue files", "body": "problem feature solve webpack aliases work properly import statements however sections componentvue would great add feature componentvue works fine even location changes would super cool btw love vue thanks lot great work proposed api look like cases might listed", "num": "7400", "d": "1/2018"}, {"title": "webpack aliases vue section", "body": "problem feature solve basically today noticed webpack aliases work properly import statements however section vue component example given src alias works fine import smth smth section tried failed thought would great able write code way componentvue works even location changes would super cool btw love vue thanks lot great work proposed api look like webpack aliases vue section", "num": "7399", "d": "1/2018"}, {"title": "last webpack template update broke assets routing", "body": "version reproduction link steps reproduce run default installation create new project run dev server webpack nt allow put images assets folder created vue cli transfer images static folder took hour figure would imagine confuse lot people issue last update created one routing expected confuse people actually happening confuses people requires transfer images assets static folder dev server", "num": "7398", "d": "1/2018"}, {"title": "optionally allow scoped lots behave like normal ones", "body": "problem feature solve find creating simple list component want able provide multiple entries single want provide multiple subtitle elements like subtitles item write work fine subtitles going stack nt want static use scoped data instead yes use scoped slots wo nt stack anymore last one rendered reproduce problem uncomment line since returns single vnode ca nt either use render function manually replicate normal slot stacking behavior scoped ones proposed api look like probably something like", "num": "7397", "d": "1/2018"}, {"title": "internet explorer app div gets deleted", "body": "hello new vue made implementation vue cdn link script using package manager everything works fine chrome ff make work ie already try babelpolyfill thing nothing worked indexhtml vuejs controller open console view seems deletes app div help please", "num": "7396", "d": "1/2018"}, {"title": "forceupdate update computed fields", "body": "version reproduction link steps reproduce build project open buildbuildhtml wait seconds expected last update time change actually happening last update time change", "num": "7395", "d": "1/2018"}, {"title": "typescript computed properties correctly infer even simple return types", "body": "version reproduction link steps reproduce cloning repo run yarn load webpack attempt build project point typescript compilation fail errorreproductionvue file alternatively open vscode something else good typescript integration see errors expected affected file would expect computed methods behave standard type inference due straightforward return types indeed access member shows data members methods even correct values computed properties actually happening time try return data member computed properties method gives type error implicitly return type return type annotation referenced directly indirectly one return expressions value gives error property exist type note longer includes computed properties data members additionally hovering type view even method shows return type even though trivial vue figure type simple string return", "num": "7394", "d": "1/2018"}, {"title": "handle vmodel bindings correctly", "body": "version reproduction link steps reproduce type first input type second input type third input type first input expected input longer updates value used actually happening first input regular input field using vmodel second input custom component bound using inside input third input second uses seems vmodel related handling inputs applied case authoring reusable form components application ran treating text inputs textareas identically using application seems component receiving new prop reason updating actual value dom happy try fix would appreciate someone pointing right direction looked internal vue code yet", "num": "7393", "d": "1/2018"}, {"title": "ca nt import vue using typescript node", "body": "version reproduction link steps reproduce clone repo git clone install dependencies npm install compile ts tsc launch app see error constructor node buildmainjs expected create new vue instance using constructor actually happening get error typeerror constructor believe related issue included comments using output typescript webpack one similarity op using typescript option something definitely wrong standard import typescript using vue setting ssr node typescript looks like tried number workaround including trying load vueesmjs file via property without success getting exact error op", "num": "7392", "d": "1/2018"}, {"title": "cancelled transitions vshow still add entertoclass leavetoclass", "body": "version reproduction link steps reproduce cancel transition next frame example cancelling fadeout transition expected classes added element actually happening classes still added element despite transition cancelled lines likely put guard", "num": "7390", "d": "1/2018"}, {"title": "ssr support inline resource specified files server side rendering", "body": "problem feature solve using ssr commonschunkplugin often generate time always small without ssr using inline resource plugin able make transformed inline html file ssr html output generated automatically proposed api look like", "num": "7389", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce expected \u7236\u7ec4\u4ef6\u5176\u4ed6\u7ec4\u4ef6\u72b6\u6001\u66f4\u65b0\u7684\u65f6\u5019\u4e0d\u8981\u5f71\u54cdslot\u7ec4\u4ef6\u7684render actually happening \u5b50\u7ec4\u4ef6\u6e32\u67d3\u4e24\u6b21", "num": "7386", "d": "1/2018"}, {"title": "generated style passing shadow root boundary", "body": "version reproduction link steps reproduce seems vue nt consider happens vue component mounted inside shadow root component style gets placed web app therefore style able style elements generated vue component inside shadow root reproduction pen works one nt see app works click buttons nothing styled expected app styled actually happening nt styles placed nt propagate shadow root way configure vue place element sibling rendered output somewhere else need generated placed inside shadow root otherwise effect", "num": "7385", "d": "1/2018"}, {"title": "value bindings eventtargetvalue", "body": "version reproduction link steps reproduce run jsfiddle select value select box check console event value string object expected eventtargetvalue selected object actually happening string saying object object since supports objects value bindings select boxes expecting event return object", "num": "7384", "d": "1/2018"}, {"title": "wrong generated js code typescript amd umd version", "body": "version reproduction link steps reproduce run app opening vueproblemappvueproblemappindexhtml file see error console expected typescript compiler take vue typings produce right code actually happening resulted js code right see comments detail explonation several days ago created wrong generated js code typescript amd umd bug click link see detail explanation problem got answer noob js nt get right first time get right problem still relevant evan answered seems nothing config points vue module vuejs umd build included ts compiler resolving nodemodulesvue using main field packagejson commonjs build need specify mapping using compileroptionspaths tsconfig get evan right thought requirejs download wrong vuejs file right one umdamd module system ts compiler makes reference vuejs file commonjs module system got error right ts compiler make reference mysite case mysitevuejs matter vuejs file vuejs link error also try change main config nodemodulesvuepackagejson like main distvuejs gives error checked vuejs file loading requirejs right file requirejs parse right problem typings also make import like like offered everything works fine loading vuejs file mysitevuejs get right problem still remains", "num": "7383", "d": "1/2018"}, {"title": "components transtiongroup able distribute props components declared tag props", "body": "problem feature solve example row component includes cols wan na cols transition effect give row propsbut props wrote effect row componentand use row gt transtiongroup combination css lose effect proposed api look like", "num": "7382", "d": "1/2018"}, {"title": "typeerror use operator search names", "body": "version reproduction link steps reproduce run open console debugger expected target variable type checked string trying perform line prevent big error message actually happening big error message comes going look fix post figure", "num": "7381", "d": "1/2018"}, {"title": "\u4f7f\u7528provide inject", "body": "version reproduction link steps reproduce expected inject\u7684\u503c\u6b63\u5e38 actually happening", "num": "7380", "d": "1/2018"}, {"title": "long vuecli support typescript", "body": "hi everybody chinese question really want use typescript build project support vuecli vue author said support future long see support long vuecli totally support using typescript", "num": "7379", "d": "1/2018"}, {"title": "support module methods options", "body": "problem feature solve app growing bigger bigger divide method option small modules module things help us work clear proposed api look like javascript mounted thisinitinitui methods init initui work", "num": "7378", "d": "1/2018"}, {"title": "would better add alias elem el", "body": "version reproduction link steps reproduce var vm new vue el app \u8fd9\u91cc\u6bd4\u8f83\u559c\u6b22\u7528 el \u52a0\u4e00\u4e2a\u522b\u540d elem data expected var vm new vue elem app \u8fd9\u91cc\u6bd4\u8f83\u559c\u6b22\u7528 el \u52a0\u4e00\u4e2a\u522b\u540d elem data actually happening el gt elem", "num": "7377", "d": "1/2018"}, {"title": "vue\u4f7f\u7528keepalive\u7684\u65f6\u5019\u5982\u679c destroy\u540e\u9875\u9762\u518d\u4e5f\u65e0\u6cd5\u88ab\u7f13\u5b58", "body": "vue\u4f7f\u7528keepalive\u7684\u65f6\u5019\u5982\u679c destroy\u540e\u9875\u9762\u518d\u4e5f\u65e0\u6cd5\u88ab\u7f13\u5b58", "num": "7376", "d": "1/2018"}, {"title": "wrong generated js code typescript amd umd", "body": "version reproduction link steps reproduce run app opening vueproblemappvueproblemappindexhtml file see error console expected typescript compiler take vue typings produce right code actually happening resulted js code right see comments detail explonation want use vuejs typescript application try add via npm packagejson tsconfigjson try use see tsconfig file use amd module system means produce information define function result js file problem step something goes wrong get wrong generated code js code vue constructor right get instead course undefined gives error note use vuejs file version right one amd umd module system problem try use umd module system vie tsconfig used typescript version", "num": "7374", "d": "1/2018"}, {"title": "wrong generated js code typescript amd umd", "body": "want use vuejs typescript application try add via npm packagejson tsconfigjson try use see tsconfig file use amd module system means produce information define function result js file problem step something goes wrong get wrong generated code js code vue constructor right get instead course undefined gives error note use vuejs file version right one amd umd module system problem try use umd module system vie tsconfig used typescript version", "num": "7373", "d": "1/2018"}, {"title": "gesture library", "body": "version reproduction link steps reproduce want know gesture library use expected recommend gesture library actually happening project need gesture library ca nt understand methods vuetouch", "num": "7372", "d": "1/2018"}, {"title": "\u624b\u52bf", "body": "version reproduction link steps reproduce expected \u63d0\u4f9b\u89e3\u7b54 actually happening \u63d0\u4f9b\u53ef\u7528\u624b\u52bf\u5e93", "num": "7371", "d": "1/2018"}, {"title": "", "body": "", "num": "7370", "d": "1/2018"}, {"title": "handle compositionevent android", "body": "version reproduction link steps reproduce android select input tag ime google japanese example contents expected update data compositionend event fired according issue actually happening see screen shot vmodel sync input data compositionend fired suggestion replacing check code", "num": "7367", "d": "1/2018"}, {"title": "elementui requires peer vue none installed", "body": "create project version want use elementui write npm install elementui save get error elementui requires peer vue none installed resolve", "num": "7366", "d": "1/2018"}, {"title": "using sync watch time cause dead cycle error", "body": "version reproduction link steps reproduce using async watch time expected execute actually happening repeat execution", "num": "7365", "d": "1/2018"}, {"title": "\u5728mainjs \u4e2d \u5f15\u5165import iconfontscss \u62a5\u9519", "body": "", "num": "7363", "d": "1/2018"}, {"title": "improve compiler rendering boolean attributes", "body": "problem feature solve issue related previously discussed problem way compiler deals boolean attributes quite counterintuitive enabled attributes get different treatments quite hard make sense honest list preregistered booleans render key key unknown booleans render key means custom attributes expected consider empty string true statement hard reason since languagelibrary actually cast empty string true statement making quite implicit behaviour preregistered boolean attributes behave differently unknown ones quite unexpected believe would quite simplecommon inexperience developer confused boolean attribute hard differentiate normal string attribute ca nt checked false true thus reliable way right would manually declare booleans strings hardcoded userdeclared accepted values myboolean true false instead elegant standard boolean promotes unstableunreliable code proposed api look like sake userfriendliness code stability overall safety would suggest changed future proposal would handle booleans unless require documented custom default value sake compatibility boolean attribute declared render key true even better key true improved performance passing native implementation declared nt need render", "num": "7362", "d": "1/2018"}, {"title": "using isandroid check adding composition event listener vmodel", "body": "problem feature solve code talking isandroid check added commit since event listener added enabled device pc wonder vue need think check proposed api look like none", "num": "7361", "d": "1/2018"}, {"title": "ie\u517c\u5bb9\u6027", "body": "", "num": "7360", "d": "1/2018"}, {"title": "\u517c\u5bb9\u6027", "body": "", "num": "7359", "d": "1/2018"}, {"title": "\u5916\u94fe\u8fd4\u56devue\u89e6\u53d1\u4e8b\u4ef6", "body": "problem feature solve proposed api look like", "num": "7358", "d": "1/2018"}, {"title": "watching space delimited path", "body": "thought vue watcher able watch path accessed via edited regex responsible parsing sure break anything sure intention anyway trying parse strings create functions like b example bit confused anyway hope consider change going use privately need commitpull request anyway", "num": "7357", "d": "1/2018"}, {"title": "npm run build getting error", "body": "hello recently started learning vuejs made simple app want build im getting errors saying typeerror requestshortenershorten functionetc uploaded picture easier understanding", "num": "7355", "d": "1/2018"}, {"title": "error compiling template using parsing markdown text vue laravel", "body": "im using parsedown package parsing markdown use blade input pre code triple backtick parsing markdown show error compiling template also page return blank could happen", "num": "7354", "d": "1/2018"}, {"title": "vbind bug", "body": "version reproduction link steps reproduce need click next img look border around img also nt forget read explanation bug img expected expected nothing empty img cause src actually happening appearance gray border", "num": "7353", "d": "1/2018"}, {"body": "would useful custom elements accept either attributes props name adding whole extra amount awesome convenience", "d": "1/2018"}, {"body": "worth noting attribute prefixed legal dom throw taking symbol vue templates nt get way dom usage", "d": "1/2018"}, {"body": "although interestingly dom element starts attribute like html string attribute gets parsed forbidden set via example", "d": "1/2018"}, {"body": "great idea consider", "d": "1/2018"}, {"body": "reactive changing caused rerender happens pull latest value b well reactive means mutating value trigger rerender", "d": "1/2018"}, {"body": "role child component component wrapper sth like", "d": "1/2018"}, {"body": "reemit child passes prop remember syntax sugar", "d": "1/2018"}, {"body": "sync across multiple layers bad practice anyway unless coupled components used app context consider using global state management solution", "d": "1/2018"}, {"body": "looks like reused component keeping event listeners workaround moment add attribute one components", "d": "1/2018"}, {"body": "checking git version looks like already fixed thanks reporting edit duplicate", "d": "1/2018"}, {"body": "well ca nt work sfcs processed build time javascript code component run later runtime browser", "d": "1/2018"}, {"body": "ca nt even considered enhancement future could possible way achieve ca nt possible", "d": "1/2018"}, {"body": "ca nt even considered enhancement future simply logically impossible could possible way achieve sure context want something like sure something similar stitched together would question forumvuejsorg suggest start discussion topic information requirements feature wo nt happen would would happen vueloader vue would thewrong repository anyways", "d": "1/2018"}, {"body": "nt put script js file use several components", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "misunderstanding capturing event effect interceptnig event triggered nested child element use capture element triggered event real effect see mdn topic event listeners attached event target event target phase rather capturing bubbling phases events target phase trigger listeners element order registered regardless parameter mode works browsers dont think work around behaviour gets vote", "d": "1/2018"}, {"body": "nt understand want making feature request please make proper one", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "hm indeed odd completeness version using prop updates", "d": "1/2018"}, {"body": "linusborg nt think anything wrong going prop used template root instance normal render changes matter update comes", "d": "1/2018"}, {"body": "yeah ok update twice row nt make sense", "d": "1/2018"}, {"body": "especially since updates nt access prop child see fiddle", "d": "1/2018"}, {"body": "mmh point showed maybe nt see correctly bad", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "decademoon looks like nt need maintain js vuecomponent checkbox template value checked unchecked props value type boolean default false methods toggle emit input thisvalue gives additional control eg html allows maintain model changes outside component mean emitting event nt mean state changed indicates change full control believe exists", "d": "1/2018"}, {"body": "oevgeny thank response solution wo nt allow component used without check fiddle see checkbox component still toggled without requiring state specified hence necessary", "d": "1/2018"}, {"body": "checkbox probably bad example ca nt imagine use case want checkbox without better example would tabs component sometimes nt care selected tab component maintain state situations need control selected tab parent component prop binding needed", "d": "1/2018"}, {"body": "solution wo nt allow component used withou exactly think ok want components datastate driven want control outside create uncontrolled one utilizing controlled checkbox note nt prop means pass initial value ca nt use hand also emits input event listen changes gives us cleaner separation checkbox state mix controlled uncontrolled outside state one components example becomes unclear state use like shown make sense better example would tabs component approach used driven components guess", "d": "1/2018"}, {"body": "component nt new component wraps necessary state duplicate props forward emitted events order fully mimic checkbox bad example lot components complex nt checkbox wo nt methods checkbox", "d": "1/2018"}, {"body": "believe controlleduncontrolled input something nt mixed usage example provided uncontrolledcheckbox component nt checkbox yes nt hand need generic component checkbox could wrap one time set use explicitly know checkbox although nt solve problem props routing", "d": "1/2018"}, {"body": "think achievable userland via global mixin need manually set watchers provide additional keys", "d": "1/2018"}, {"body": "mixin created automatically update prop value response event emitted component demo js vuemixin created optionsprops const prop objectkeys optionsprops const config optionsprops prop const checkbox template value checked unchecked props value type boolean default false syncon input methods toggle emit input thisvalue vue output warning prop mutated", "d": "1/2018"}, {"body": "disable console error like sweat js const error consoleerror consoleerror gt prop value consoleerror error", "d": "1/2018"}, {"body": "decademoon updated implementation support mapping prop another field added case internal state could sync state provided parent component see", "d": "1/2018"}, {"body": "solved elegantly using computed setter vue vuecomponent checkbox template internalvalue checked unchecked props value type boolean default false computed internalvalue get return thisvalue set v emit input v methods toggle thisinternalvalue thisinternalvalue", "d": "1/2018"}, {"body": "posva component wo nt work without done hide emitting input event setter make writing controlled components easier since nt litter throughout code still original problem needing use everywhere wanted avoid first place oevgeny believe controlleduncontrolled input something nt mixed agree think settle making components controlled even means need use make work even nt plan using data parent component thank help everyone", "d": "1/2018"}, {"body": "prop getting set changing definition template fixes issue want change vue behavior pass prop see documentation model information", "d": "1/2018"}, {"body": "\u4e0d\u8981\u7528 issue", "d": "1/2018"}, {"body": "vue line vue settimeout \u6539\u6210 settimeout", "d": "1/2018"}, {"body": "\u53d1\u73b0 vueconfigdevtools \u6539\u6210 settimeout", "d": "1/2018"}, {"body": "looking like custom renderer", "d": "1/2018"}, {"body": "couple considerations using custom renderer resolution use case api design allow nodes analogue xml tags eg rendered output tag name possibility run custom renderer alongside standard renderer eg using standard vue renderer create canvas element dom use custom one scene would great able use existing vue devtools custom renderer otherwise fine suggestion future solution thank time edit looking proposed api perhaps would possible implement argument differently custom renderer accepts constructor function etc first point may need consideration", "d": "1/2018"}, {"body": "reproduction please", "d": "1/2018"}, {"body": "fyi video accessible", "d": "1/2018"}, {"body": "link weibo link china upload videos vk try link posva", "d": "1/2018"}, {"body": "lol case appreciate somebody test nt devices", "d": "1/2018"}, {"body": "also seeing webview android transition finishes quickly flickers complete also first link video works takes bit time load also similar seeing", "d": "1/2018"}, {"body": "also upload video vimeo try posva", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow please provide minimal repro reporting bug", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "stateful filters bad idea explicitly removed vue method calls refers reactive state update automatically either state reactive bug believe bug please open bug report reproduction", "d": "1/2018"}, {"body": "method refer reactive state wanted use global value way restart method const storemixin beforecreate const options options const translatemixin methods translate value return storetranslate value value", "d": "1/2018"}, {"body": "define reactive property translate method see", "d": "1/2018"}, {"body": "thanks forceupdate worked component new vue instance", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "expected need pass object realising note docs though create pr", "d": "1/2018"}, {"body": "understood thanks much", "d": "1/2018"}, {"body": "posva would happen know possible vueloader", "d": "1/2018"}, {"body": "nt written code handles functional components vueloader think blakenewman sorry nt know", "d": "1/2018"}, {"body": "think intentional vue warning ignored scenarios use instead eg vuerouter", "d": "1/2018"}, {"body": "unfortunately warnings nt come stack traces", "d": "1/2018"}, {"body": "documentation referring boolean attributes sure want add magic specific attributes removed value moment use workaround js vuecomponent myprogress functional true render h data gt numberisfinite dataattrsvalue delete dataattrs return h progress data", "d": "1/2018"}, {"body": "workaround implicitly removing falsy values would breaking change nogo time adding modifier seems like overkill since niche use case also explicit control condition attribute removed", "d": "1/2018"}, {"body": "template compiled js codes function changed called function called", "d": "1/2018"}, {"body": "jounqin delete loop template fragment see console happen also changed different result loop tempate influence method strange", "d": "1/2018"}, {"body": "misunderstanding question removed template vue render changes vue knows reference template", "d": "1/2018"}, {"body": "expected calling method template vue call every time renders also come handy", "d": "1/2018"}, {"body": "posva jounqin seems behavior react framework methods relationship data model method recalled data model change little strange change title function way also console twice", "d": "1/2018"}, {"body": "exactly react", "d": "1/2018"}, {"body": "yes mistakes test react framework behaviorand one question axios scenario fact want load data sync request render response template one time need rerender changed data idea", "d": "1/2018"}, {"body": "please follow reporting issue guidelines", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "valid object way vue know intended", "d": "1/2018"}, {"body": "generating fails older browsers fyi arguments", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow open bug report please add repro provide different versions expected vs actually happening", "d": "1/2018"}, {"body": "even better way intercept hooks components something like set function one place get called beforeafter component hooks modify vuex store update templates however like show loading progress", "d": "1/2018"}, {"body": "doable global mixin point anything want hook well count", "d": "1/2018"}, {"body": "hook defined guaranteed run hooks individual components", "d": "1/2018"}, {"body": "called", "d": "1/2018"}, {"body": "case would set false set true component initialization work done rely templates would already true even though component hook nt completed would nt work solve problem", "d": "1/2018"}, {"body": "use different mixin make execute", "d": "1/2018"}, {"body": "demonstrates exact problem want hidden end set true beginning even using mixin suggested set false beginning true hook component finished", "d": "1/2018"}, {"body": "oh sorry meant using instead updated snippet want trigger timeout may consider using promises waiting finish able achieve method showed please move conversation discord forums want help", "d": "1/2018"}, {"body": "try codepen example nt work either timeout example would normally asyncawait request codepen nt support nt work locally asyncawait either may consider using promises waiting finish mean component issue component nt set vue set global mixin nt working", "d": "1/2018"}, {"body": "\u53ef\u4ee5\u770b\u770b vm attrs", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "javoski attrs\u6ca1\u6709\u5305\u542b\u901a\u8fc7vmodel\u4f20\u5165\u7684value", "d": "1/2018"}, {"body": "ziqiangwang \u5bf9 component \u7684 \u548c dom \u5143\u7d20\u7684 \u548c \u5b83\u4f1a\u5305\u542b \u7684 value", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "thank kind words find donate project cheers", "d": "1/2018"}, {"body": "ca nt run right code write consolelog print vue component sure current component instance docs vueclasscomponent state work", "d": "1/2018"}, {"body": "ran linusborg said vue instance closing since something need fixed one libraries fix anything vue core", "d": "1/2018"}, {"body": "oki", "d": "1/2018"}, {"body": "something need fixed one libraries posva nt think real fix array functions behave classes assigned class properties", "d": "1/2018"}, {"body": "maybe thinking transform code passing babel plugins therefore black magic", "d": "1/2018"}, {"body": "dealing tables html templates general careful browser html vue gets parse take vue take look html see vue sees gets templates help understand one template nt work creates documentfragment think fixable nt checked behaves consistently among browsers", "d": "1/2018"}, {"body": "use case attributes starting numeric chars doubt use case worth extra handling", "d": "1/2018"}, {"body": "sorry clear issue nonalphabetic attributes numeric attributes one use case nonalpha attributes second use case amazing forms one encode valid attributes use cases indeed academic motivated wanting abuse attributes kind cheap dsl certainly commercial usage know possible ultimately agree nonalpha attributes marginally useful shall close puppy thank much time", "d": "1/2018"}, {"body": "price progress compliant parsers create dom element attributes subsequently js unsettable via setattribute following workaround albeit slower accesses full possible attribute namespace using setattributenode function attrnode ele attr value", "d": "1/2018"}, {"body": "working expected attributes set names purpose works older browsers", "d": "1/2018"}, {"body": "posva okay fine nt really suggesting solution appropriate one", "d": "1/2018"}, {"body": "reason muted autoplay browsers require value nt something working tested mobile browsers everything worked fine", "d": "1/2018"}, {"body": "posva safari iphone nt recognize throws notallowederror try play", "d": "1/2018"}, {"body": "tested safari worked correctly could give information please versions could share stackstrace", "d": "1/2018"}, {"body": "posva actual use case navigatormediadevicesgetusermedia mediastream true work ios devices ipads particular iphones iphone users day telling nt work reason muted autoplay browsers require value muted muted makes sense default behavior eg bare nt understand nt able override", "d": "1/2018"}, {"body": "case may probably related something else feel free come back manage get information ps need set codesandbox simple repro much faster use jsfiddle", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "example without vue thing happens fix need call native method select text case vue additionally need call method handler dom updated", "d": "1/2018"}, {"body": "sqal said", "d": "1/2018"}, {"body": "related answer personally think add development would potentially create problems would make debugging harder also necessary keep sync updating html would take quite effort questionable gain aware vue devtools make vue apps debugging much easier", "d": "1/2018"}, {"body": "posva actually quite easy add feature already using development function createelement function bind", "d": "1/2018"}, {"body": "mmh weird may something wrong version without vue mimics vue also fails chrome think layout calculation may enforcing values early thus triggering transition", "d": "1/2018"}, {"body": "truly strange maybe chrome bug vue example issue safari firefox solution wrap child component additional div seems solve problem wonder bug solution", "d": "1/2018"}, {"body": "maybe chrome triggers event layout calcultion", "d": "1/2018"}, {"body": "vue example nt limited chrome though happening firefox safari able solve wrapping child component another parent div makes think might vue bug solution", "d": "1/2018"}, {"body": "props meant readonly able suppress warning acknowledging sometimes acceptable otherwise may want wrap vuetable component best option contact author send pull request create fork wrap component use template sometimes render function may make things easier", "d": "1/2018"}, {"body": "component wrapped via mixin issue stems wanting edit template editing template use different prop name wo nt work understand idea read actually conforms render defining prop based another prop however default use another prop initialized moves setting little lifecycle using key idea solution effectively anything lets set default later lifecycle without triggering warning cover use case tried making pull request got lost code lifecycle witch decided make issue open discussion first keep thinking may open another issue pull request example discussion manage add", "d": "1/2018"}, {"body": "talking pull request vuetable vue wrapping component done via mixin wrapping code showed template vue myvuetablevue", "d": "1/2018"}, {"body": "guess using example vuetable bad idea really related problem nothing could add pull request helps also wrap described well issue want adjust styles especially case using css modules nt think would also happen scoped css though needs context active component parent brings interesting easy get around issue needing override component keeping template intact see example first message wrapping prop div passes css module class normally would think override prop vuetable set default since readonly see prop within default function mean end day looking suppress warning dev set default prop value point values props available used defer prop props set", "d": "1/2018"}, {"body": "nt work automatically correct neither work automatically nrmoal components set", "d": "1/2018"}, {"body": "linusborg nt really understand answer could provide complete working example please tried implement vmodel functional component ended far complex implementation one assignment", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "vshow bind none boolean value", "d": "1/2018"}, {"body": "definitely something convenience exactly like using", "d": "1/2018"}, {"body": "mounting components work want properly test vue components recommend check want render components server check please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "adding directly templates would big overhead template compilation also runtime handle async data completely doable userland scoped slots though created small package basic functionality showcase", "d": "1/2018"}, {"body": "feature request", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "answer", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "vue nt handle kebapcase camelcase attribute values expressions prop attribute names nt makes sense attribute values forced lower case browser", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "even calling help case hmm apparently made mistake component version guess need call specific comoponent root instance fixes issue version without custom component still seems need even call forceupdate make template rerender", "d": "1/2018"}, {"body": "workaround moment change value force render works noncomponent approach edit another workaround would disable checkboxes unticked easiest one force checked status checkbox works cases unsure something component scenario since browser toggling state make sure prop nt change therefore component never rerenders afraid may scenario noncomponent version nt render state changed", "d": "1/2018"}, {"body": "workaround mind manually trigger data change js ontogglestate key event const checked eventtarget thisstate key checked nexttick gt thisstate key true", "d": "1/2018"}, {"body": "setting value checkbox setting value seems work scenarios", "d": "1/2018"}, {"body": "missed without touching dom part previous comment", "d": "1/2018"}, {"body": "hi posva thank solution settings indeed fixes issue yeah also wonder whether improved inside vue react somehow least explain users docs current behaviour confusing say even working vue almost years could nt figure another example opinion user easily fall trap simple text field want control value field accept case reproduce issue follow steps set new value value goes back expected set time stays would expect", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "sorry akryum opened new one p closing", "d": "1/2018"}, {"body": "likely issue parcel ts plugin vue plugin working together properly vue core problem please open issues related projects instead", "d": "1/2018"}, {"body": "ok opened issue", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "use text shown put different tag first one shown", "d": "1/2018"}, {"body": "one thing causing fact vue renders one root node try html lt div gt lt div gt labletitletwo lt div gt lt div gt labletitle lt div gt lt div gt", "d": "1/2018"}, {"body": "api", "d": "1/2018"}, {"body": "would even better nt see need nt scale since nt really know show method comes yes know comes mixin explicitly included component idea mixin reuse behaviour across components explicit transparent way would apply things like hooks want namespace functions related component want use mixin add namespace easily way proposed dynamic name using function js function buildnotificationmixin namespace return created namespace namespace show gt componentvue const component mixins buildnotificationmixin notifications use computed group things related", "d": "1/2018"}, {"body": "nt vue core mixin mechanism already flexible enough", "d": "1/2018"}, {"body": "tests vue may need run phantomjs based tools like scrapers backwards compatibility", "d": "1/2018"}, {"body": "strange costs bytes every build maybe support delete code building time rly dont need carry users", "d": "1/2018"}, {"body": "wait carry polyfill case vuejs site scrapped increase bundle size every build case nt understood", "d": "1/2018"}, {"body": "evan said backwards compatibility would breaking change wont mjor release plan one near future general", "d": "1/2018"}, {"body": "fyi extra size small enough worth happens multiple things also supported browsers like internet explorer", "d": "1/2018"}, {"body": "site built vue site scraper built phantomjs used able scrape site patch update site suddenly break scraper tradeoff bytes vs use case bytes vs backwards compat", "d": "1/2018"}, {"body": "nothing vue number big", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "already returns promise specify callback", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "bet transformation done vueloader", "d": "1/2018"}, {"body": "would useful library authors might use spec create modules interesting things example tool generates custom elements vue components specs internal rendering custom element content rendered defined component people may try want map custom element attributes object properties based definition need define standardized custom element classes problem custom element class defined asynchronously means library author simply export class synchronously provide promise callback end user receive class order use would ideal", "d": "1/2018"}, {"body": "foo component spec mutated tested code samples poi produces array logs please make sure error nt come one dependenciesloader provide repro opening bug report", "d": "1/2018"}, {"body": "using vuecli make basic app part code think triggers sure yet let investigate push get desktop", "d": "1/2018"}, {"body": "alright found causing simple reproduce vue export default props bar js import foo foovue import vue vue consolelog foo props sync fooprops bar vueextend foo mutates consolelog foo props sync fooprops bar type null async case turns someone relying component spec may control someone else extends therefore becomes async problem without deterministic way run logic happened", "d": "1/2018"}, {"body": "forgot say passed message mutating original component come back confirmation", "d": "1/2018"}, {"body": "one solution normalize vueloader component definition already normalized state imported", "d": "1/2018"}, {"body": "made new issue", "d": "1/2018"}, {"body": "closing favour", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "reopened", "d": "1/2018"}, {"body": "expected side effect way functional components work since functional components nt instances immediatly evaluated parent scope generated vnodes passed slot content means component already run rendered normal component like immediatly rendered parent context passed component vnode rendered render cycle functional component ca nt inject content provided already run content provided indeed documented clearly context provideinject generally another side effect example functional component main instance example reason functional component rendered parent render cycle would kind open issue docs team take care would course also open pr first shot documenting feel", "d": "1/2018"}, {"body": "another side effect example contextparent functional component main instance example ah see thank detailed response although nt expect behavior mismatch would great update docs according added proposal though see linked issue", "d": "1/2018"}, {"body": "using array index doesnt work changes uniquely identify distinct item array use real id", "d": "1/2018"}, {"body": "please open issues using guide", "d": "1/2018"}, {"body": "\u624b\u52a8\u827e\u7279\u5927\u4f6c", "d": "1/2018"}, {"body": "\u5728 test coverage", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "\u7ed3\u5408 chromedevtools", "d": "1/2018"}, {"body": "hmm looks like pr nt fix supposed fix curious around year since also looks like nt take account ordering ordering nt impact", "d": "1/2018"}, {"body": "feel free open pr docs repo propose improvement", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "called data changes virtual dom rerendered patched means exactly means generated ed virtual dom node applied real dom tree hand api means method generate virtual dom mean drawn real dom admittedly overloaded chrisvfritz idea", "d": "1/2018"}, {"body": "think indeed mismatch since description indicates mutate state applied entails hooks called virtual dom render functions called give proper thought next week", "d": "1/2018"}, {"body": "saw updated guys really think good idea resolving simply revising wording api docs nt think first never exactly meaning target following term ie dom especially vue using virtual dom people coming react background always consider running function using terms generating virtual dom nodes course unless vue wants unique one secondly decide take path updating docs match current behavior api description needs revised also lifecycle diagram link since two places consistently indicate like current behavior nt believe deliberately designed called hence functional bug instead documentary allowed changeupdate states component without triggering additional lifecycle hook much less useful developers point view common case developers matter coming react angular updating states components per changes props know called various cases like state changed props changed even parent forcing update react similar separate hooks allow developers detect changes even update states calling link however unlike react vue one lifecycle hook documented able detect changes update states becomes hopeful place suppose perform common practices", "d": "1/2018"}, {"body": "nobelhuang nt worry nt considered resolved yet fault issue accidentally closed nt remove pr discussing problem detail herringtondarkholme", "d": "1/2018"}, {"body": "thanks passionate discussion doc issue accidentally closes reopen issue since still review api description needs revised also lifecycle diagram think beforeupdate called render give example called beforeafter render give significant difference old doc said state change occur however think might inappropriate state changing lead infinite loop whether called render however disallow state changing dispatch action flux store words triggering rerender wonder matters call beforeafter render allowed changeupdate states component beforeupdate changing state use case discussed suspect proper usage react recommend course vue nt want unique vue one lifecycle hook beforeupdate becomes hopeful place suppose perform common practices real proposal right difference prop change topdown component execute lifecycle trigger state change execute finally one state change however lead infinite loop request use perform state change", "d": "1/2018"}, {"body": "herringtondarkholme thanks comments give example called beforeafter render give significant difference surely said state changing disallowed nt matter called doc diagram indicate allows tried found led infinite loop calling order matters way also tried changing states beginning know wrong operation see circumvent situation turned infinite loop calling order matter also ticks given never read vue source code correct wrong changing state use case nt think changing state running use case react still provides allow operation developers need yes think keep current behavior would better new lifecycle hook like request use watch perform state change actually curious could nt find filed bugs regarding weird behavior filed guessed mentioned people could use achieve goal cases however think component rerendered changed could also parent forcing update even changed approach sufficient addition one uncommon case many say want state changes matter prop changed way specify props watched explicitly anyway think functional bug would good like lifecycle thanks guys awesome works", "d": "1/2018"}, {"body": "doc diagram indicate allows imho whenever called new doc removed suggestion beforeupdate executed beforeafter render differs change state probably issue yet reported please provide concrete example need change state beforeupdate nt think changing state render running use case react provides componentwillreceiveprops allow operation developers need agree useful indeed uncommon component large prop set eg bridging component google map seen developers uses helper function dynamically watch props change say summarize discussion list points whether allow state change call vue provide helper wrap thread", "d": "1/2018"}, {"body": "okay seems provide couple examples came examples randomly example jsfiddle imagine timer initially set years months days hours minutes seconds respectively count values also changed anytime want start new timer however new timer starts counting would short pause signal countdown indicate currently paused counting see whenever matter time props timer changed need update states like could done easily efficiently state changing allowed course achieve result using might invoked times time props change example jsfiddle imagine jigsaw puzzle game board component host puzzle pieces pieces added board board could show different background color hint player indicating heshe approaching goal see actually changes detected component state change based reactive parent forcing rerendered convenient update state course know use method work value replacing use used many times template method would called many times one render process case know write function alleviate nt think easier feeling lost point thread wrap want state api doc lifecycle diagram consistently indicate change states nt think initially designed allow hence think functional bug", "d": "1/2018"}, {"body": "progress", "d": "1/2018"}, {"body": "hi fujisunny able reproduce issue ie following code vue export default props value type string render h return h textarea input e gt emit update value etargetvalue still facing issue suggest open github repro upload problematic code give repo address back us", "d": "1/2018"}, {"body": "jkzing still facing problem push reproduction code ie version hope reproduction would help", "d": "1/2018"}, {"body": "provide little bit background think related vue also sharing cpomplete project us minimal runnable reproduction", "d": "1/2018"}, {"body": "ho sorry maybe report vue template thought would config could allow facebook iframe load site", "d": "1/2018"}, {"body": "would ask question post makes think related template", "d": "1/2018"}, {"body": "probably use forum aka help implementing feature", "d": "1/2018"}, {"body": "linusborg said please use whole project repro boil repro feel free open new issue repro", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "hopefully screenshot help reproduce configfiltercount visible items configitemcount existing vuex", "d": "1/2018"}, {"body": "supposed attached screenrecording well seems got attached mail thread sorry anyway seemed lil bit laggy trying freeze ui thomas kle\u00dfen notifications githubcom image bildschirmfoto um hopefully screenshot help receiving subscribed thread reply email directly view github mute thread telefon", "d": "1/2018"}, {"body": "thx quick reply add screenrecording tidy code bit", "d": "1/2018"}, {"body": "click toggle showinfo reflects itemcomponent wich renders stuff click jop nope times buttons nt exist app assume referring add toggle counter main counter shows items right toggle takes around seconds nothing unusual situation generally vue fact needs time updating elements rendering list items never good idea justifiable common use case opinionexperience real problem situation specifically getter performance sinkhole items called times running times array items normalize data keeping ids array content object keyed id lookups much much faster adding since returning function getter update components everytime add remove items really cachable like normal getters suspicion would much rendering getter calculation killing performance short bug problem implementation sidenote machine running", "d": "1/2018"}, {"body": "linusborg refactoring prototyp bit solve real problem right assume real problem amount data reactivness clients handle long story short dev everything fine macbook production tablet ui got freezes items render expected build performance prototype played bit got freezes macbook started panicking thats wrote issue apologies investigated seems problem limitations device right change prototype something like benchmark devices abilities want know affects itemcount usecases affects dummycount usecases affects filtercount usecases usecases change single itemdetailcount showcounter onoff items vshow instead vif add itemdetailscount press button increment counter done next thing want showing time freeze include benchmark button witch test defined values three variables provides graph somehow decide much items target", "d": "1/2018"}, {"body": "sorry items expected behavior bug fixed expect us help tune performance app becomes support request simply nt issues rendering many items almost always call bad idea especially mobile ddevices suggested consider using virtual scrolling library", "d": "1/2018"}, {"body": "please implement like", "d": "1/2018"}, {"body": "edge case people encounter nt need added vue core since extracted single function separate package", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow nt use full project repro take look", "d": "1/2018"}, {"body": "misusing usually static string reference like array using array see also", "d": "1/2018"}, {"body": "jounqin got source code insert ref vfor tag parent children mean children ref record array know good solution nt know fire children function parent function", "d": "1/2018"}, {"body": "define element children inside difference repeated inside matter repeated self change code use work correctly", "d": "1/2018"}, {"body": "thanks explanation jounqin", "d": "1/2018"}, {"body": "users interface augmenting already please read official typescript doc", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "alias sure syntax jsx pass spread whole object something working work everything looks fine fire issue also think could improve docs adding sample code guide make sure open pr", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "already handle events callback well magic parameter event works native events ca nt implement normal way custom events also work custom events nt know trying vue already know angularjs normal use vue tools therefore different implementation use forum discord server want share thoughts devs get feedback", "d": "1/2018"}, {"body": "oh definitely documented seeing doc vm emit event arguments string event args trigger event current instance additional arguments passed listener callback function event handling listening events method event handlers methods inline handlers nothing else", "d": "1/2018"}, {"body": "may want pr guide end js function passing objects another js pattern", "d": "1/2018"}, {"body": "ok understood vue support specifying param name support full js spec surprise template define arrow function template extract first object param simulate named params event works arrow function template edit straightforward way guessing works", "d": "1/2018"}, {"body": "support full js spec surprise template define arrow function template extract first object param simulate named params nt support reuses code makes browser execute yes ways please hijack issue post usage question use appropriate channels suggested also take look source code generates function provide one", "d": "1/2018"}, {"body": "generates function provide one supported files still think good idea support named params natively less confusing less code need write arrow function straightforward maybe allow using raw string templates please hijack issue post usage question use appropriate channels suggested also take look source code generates function provide one ok", "d": "1/2018"}, {"body": "possible duplicate", "d": "1/2018"}, {"body": "asking way using templates", "d": "1/2018"}, {"body": "looking way nt work see slot template parent slot data number grandchild", "d": "1/2018"}, {"body": "simply need repeat pattern used", "d": "1/2018"}, {"body": "way via templates", "d": "1/2018"}, {"body": "nope least moment closing duplicate", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow also related vuerouter turns bug make sure open issue boiled reproduction", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "dot think want put additional logic tagname string", "d": "1/2018"}, {"body": "extra parsing hurts performance even users use feature add h wrapper though", "d": "1/2018"}, {"body": "ok determined tag name tag skipped closed sorry inconvenience", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "receive data changed callback watch multiple properties one call know one triggered watcher", "d": "1/2018"}, {"body": "please precise opening feature request fr short translator gives meaningless sentences done multiple times", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "referring already namespace events vue gives plain event familiar anyone already dealt native events js", "d": "1/2018"}, {"body": "coming object passed reference change deep copy object via jsonparse could via objectassign external library see code achieve desired result nt know better method making deep copy case take look vuex way store data unrelated components could also update modalsetting object modal component click save", "d": "1/2018"}, {"body": "antoninarquey said bug", "d": "1/2018"}, {"body": "alright works thanks", "d": "1/2018"}, {"body": "please make sure boil repros strict minimal reporting bug error looks like providing transitionduration animation fail ever styles initialized empty string default may want know forum discord server lot people active ask questions", "d": "1/2018"}, {"body": "made repros bug look please thanks please clone project npm install amp npm run unit show errors posva remove directive vloading error", "d": "1/2018"}, {"body": "still many things like vuerouter elementui sure used though please use forums discord first come back find bug", "d": "1/2018"}, {"body": "javascript works want pass copy need copy", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "embedding jsx parsing inside template parser lot work plus related issues regarding syntax highlighting tooling support etc nt think justifies use case", "d": "1/2018"}, {"body": "well validator function could nicer sent builtin errorwarn handler get nice component trace something likely add", "d": "1/2018"}, {"body": "bind value objects compared using shallow equality need give option unique property differentiated", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "issues bug reporting ask questions discord forums props readonly trying mutate thus change input value prop modified value restored next update use data property computed setter instead computed setters prop sync modifier", "d": "1/2018"}, {"body": "\u628a\u8fd9\u4e24\u4e2a\u5143\u7d20\u5305\u5728\u4e00\u4e2a\u7ec4\u4ef6\u91cc\u5c31\u884c\u4e86", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "nt play well virtual dom render function approach ya pen vue would require major changes underlying architecture something likely nt want point opinion curiosity kind app building relies heavily inserting html like perception escape hatch edge cars something one replies regularly experience", "d": "1/2018"}, {"body": "using prismic headless cms prismicdom library returns field values html course example use illustrate make use triple curly braces prismicdom returns field values cms html string frontend components structure values way eg imgimg p love know better way approach though", "d": "1/2018"}, {"body": "joining potential html together html", "d": "1/2018"}, {"body": "maybe make work tags", "d": "1/2018"}, {"body": "wo nt work", "d": "1/2018"}, {"body": "admittedly hacky less performant way would render vue instances pievce html extract vnodes use dnymaically created functional component display ugly works edit updated fiddle reusable", "d": "1/2018"}, {"body": "thanks linusborg akryum really helpful think go akryum solution see takes definitely works example shown report back gets tricky sophisticated use case", "d": "1/2018"}, {"body": "\u53d1\u81ea\u6211\u7684vivo\u667a\u80fd\u624b\u673a andyqin notifications problem feature solve flutter sdk \u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u5355\u4e00\u4ee3\u7801base\u8de8\u4e09\u4e2a\u5e73\u53f0 android ios fuchsia proposed api look like \u6211\u7684\u5efa\u8bae\u662fvue\u53ef\u4ee5\u5728flutter \u4e4b\u4e0a\u5f00\u53d1vue receiving subscribed thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "\u672a\u6765\u53ef\u80fd\u66f4\u591a", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "weex \u548c nativescript", "d": "1/2018"}, {"body": "weex\u5f3a\u70c8\u63a8\u8350", "d": "1/2018"}, {"body": "solved put custom directive instantiation main vue instance still strange works yet generates warning", "d": "1/2018"}, {"body": "need use option looks like option", "d": "1/2018"}, {"body": "please open issues involves party libs repos first", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "sorry difficulty understanding part done scoped slots try explain assume want passing props cloneslot component directive think want props passed instance formrow component difference nt want pass props like html want happen instead props passed kind background could use", "d": "1/2018"}, {"body": "want happen instead props passed kind background exactly props generated component user nt need specify template last example user knows nothing props note nt exist component proposed way clone default slot n times rescursively put proposed api look like section maybe nt given enough context problem trying solve trying build set generic components vuejs handle django formsets purpose split problem basically three components well defined responsibilities responsible generating whatever user provides children component example would generate n components properties exclusively generated passed whatever defined children precise need pass row index initial data prefix boolean value component charge cloninggenerating whatever defined children example inputs props need passed children generated component exclusively also responsible hidingdisplaying delete button accordingly acts proxy component mediator example two components functionality irrelevant trying explain mention think generates children nothing regular text input field notifies changes parent still difficulties understanding scoped slots solves problem without without specifying etc template template raised issue read people solutions similar use cases vuejs forum websites fall back implementing render function plus custom js function clone vnodes never seen something different scoped slots provideinject assumed way go felt use case simple enough yet way code straightforwardeasy way even implementing render function currently experimenting path got stuck call createelement pass custom props slotsdefault think possible correct wrong could something like still need provide detailed implementation trying achieve set jsfiddle nonworking implementation comment everything detailed way discuss proposing scopedslot plus pi fits use case thanks time update formsets note added better expose trying achieve working moment hope piece code better exposes difficulties facing come solution also reread pi documentation due suggestion problem provide prop generated vfor think nt possible thing right pi designed inject objects wellknown point injection trying provideinject something generated template", "d": "1/2018"}, {"body": "thanks detailed input something work short time right trx answer long form later", "d": "1/2018"}, {"body": "values always booleans explicit imo include whitelist aria attributes impractical modifier seems unnecessary cast", "d": "1/2018"}, {"body": "escaping using happens html put js nt work vue escaping found working", "d": "1/2018"}, {"body": "see thanks clarification", "d": "1/2018"}, {"body": "ca nt pause css transitions afaik use js transitions instead certainly possible depoending animation lib used outside scope vue solved party library developer", "d": "1/2018"}, {"body": "unfortunately nt think even technically possible", "d": "1/2018"}, {"body": "copy array modifying next time please ask kind questions forum discord channel stackoverflow", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "transition applies direct child div rather use also reproduction code functional issue fullfil requirements", "d": "1/2018"}, {"body": "thank solved problem", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "think correct higher priority nt mean priority calling behavior mixin extends seems", "d": "1/2018"}, {"body": "order seems correct think classes always call right beginning would also breaking change feasible right", "d": "1/2018"}, {"body": "posva difference maybe doc needs modified", "d": "1/2018"}, {"body": "contributions improving docs always welcome make sure open pr think could clearer", "d": "1/2018"}, {"body": "\u8fd9\u4e0d\u662f feature issue", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "please read use latest vue version using example", "d": "1/2018"}, {"body": "sqal awesome thanks", "d": "1/2018"}, {"body": "thanks report js engines nt optimize fnbind past record fact comment js engines constantly evolving implementation slower haha since functionprototypebind used js world believe js engines optimize native usage like seems better use native one", "d": "1/2018"}, {"body": "issues concerning documentation opened", "d": "1/2018"}, {"body": "update ok misled vue document link thinking written enough understand bidirectional binding js vmodel ischecked const mycheckbox props value render h return h input attrs type checkbox domprops checked thisvalue change e gt emit input etargetchecked js vbind checked const props checked render h return h input attrs type checkbox domprops checked thischecked change e gt emit input etargetchecked \u6211\u88abvue vmodel\u5176\u5b9e\u662f", "d": "1/2018"}, {"body": "warning message added able see", "d": "1/2018"}, {"body": "ok want dynamic input type", "d": "1/2018"}, {"body": "actually think warning nt emitted inputs dynamic type binding may skip conflict check actual available yet compiler made pr resolve issue", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thank hard work", "d": "1/2018"}, {"body": "vuecli installed", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "reinitialize existing project", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "moved", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "please post template related issues template repo", "d": "1/2018"}, {"body": "sorry bad", "d": "1/2018"}, {"body": "nt really see duplicated scoped slots name necessary even good idea", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "know forceupdate used force update ui inter computed data see also", "d": "1/2018"}, {"body": "jounqin pointed force view rerender computed properties computed property contain external nonreactive variable time makes impure", "d": "1/2018"}, {"body": "known limitation type system manually annotate computed properties likely wontfix otherwise would already implemented part herringtondarkholme ktsn might able provide insights", "d": "1/2018"}, {"body": "documented also issue tracking underlying type system improvement however evan said fixed vue side", "d": "1/2018"}, {"body": "herringtondarkholme thanks info keep eye underlying ts issue", "d": "1/2018"}, {"body": "vue nt know element end bound attribute instead property need explicitly bind property using", "d": "1/2018"}, {"body": "confronted something strange vue rescue totally reasonable answer even docs could worth adding note guide somewhere entirely sure thanks quick reply building vue given reason enjoy frontend development", "d": "1/2018"}, {"body": "worth mentioning nt work use using syntax", "d": "1/2018"}, {"body": "well known issue typescript community use webpackrollup workaround esmcommonjs interop issue sadly fix vue community alternatively please patiently await proper interop", "d": "1/2018"}, {"body": "may get answer", "d": "1/2018"}, {"body": "duplicate said jkzing", "d": "1/2018"}, {"body": "way configure instances placed next dom generated component instance would sweeeeeeeeeeet would mean could keep styles cascading child components using shadowdom see comment", "d": "1/2018"}, {"body": "alright thought workaround nt tried yet set vueloader option extract styles using location knowing filename shadow roots duplicates styles shadow root bunch unnecessary styles components least work official solution would great idea yet could", "d": "1/2018"}, {"body": "vue nt consider shadow dom designed way vue move style around know move anyways however insert style right next element mont make work like described article please provide smaller repro next time todo list unnecessary showcase problem save us time said could also handled bundler level maybe loader top vueloader closing since something solved vue core", "d": "1/2018"}, {"body": "posva thanks insight make shorter pen next time thing converting vue component custom element skatejs like nt access style inside sfc may even written sfc general purpose tool looked imported component object nt see style content anywhere miss super helpful tool could easily inject shadow root thought vueloader adding component spec gets exported vue file see imported object could runtime extract rules stylesheet based id inject styles shadowdom heavier", "d": "1/2018"}, {"body": "ah looking nt seem like difficult give go", "d": "1/2018"}, {"body": "components generated designed nonshadowdom usage moment likely alternative loader generates web component directly", "d": "1/2018"}, {"body": "got styles working shadow roots copying global new element inside shadow roots copy rules match components rendered inside given shadow root implemented vuewebcomponent meets requirements vuecustomelement able elements instantiated elements nestable composable elements distribute expected shadowdom elements generated tool otherwise work exactly expect custom element without knowing caring internal implementation uses vue", "d": "1/2018"}, {"body": "expected behavior dom inout elements automatically stringifies anything set property behavior nothing vue", "d": "1/2018"}, {"body": "sorry really scope question specific setup resolved issues issues bug reports originates vue", "d": "1/2018"}, {"body": "solved following langts import vueconstructor vue const vue require vue vueconstructor cast vueconstructor get typings const app new vue template hello world similar different situation using output typescript webpack one similarity op using typescript option something definitely wrong standard import typescript using vue setting ssr node typescript looks like tried number workaround including trying load vueesmjs file via property without success getting exact error op put together reproduction opened new issue", "d": "1/2018"}, {"body": "ran issue understanding vuejs file setting variable like vueclasscomponent vueclasscomponentjs line vueclasscomponent file special case handle missing default export vue works vueclasscomponentjs line unfortunately typescript compiler output special case handling missing default however typescript new option fixes issue set output contains function called handles missing default property properly", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "believe fix appropriate setting string really actually ca nt string variables seem bit weird take look think alright simply make code say properties set strings always undefined technically value set value becoming undefined next tick evidenced open node terminal type wordletter terminal output reason error also consolelog wordletter straight try access property via key undefined nt see harm returning undefined", "d": "1/2018"}, {"body": "feel free submit pr adds warning development mode test ofc", "d": "1/2018"}, {"body": "posva wo nt issues reactivity", "d": "1/2018"}, {"body": "set must used object anyways", "d": "1/2018"}, {"body": "yes look warnings implemented tested add warning method", "d": "1/2018"}, {"body": "look vue get ready start working guys", "d": "1/2018"}, {"body": "hi sent pull request issue", "d": "1/2018"}, {"body": "according documentation supposed using way think", "d": "1/2018"}, {"body": "\u5e94\u8be5\u7528function\u4f5c\u4e3aprovide\u7684\u503c \u539f\u56e0\u7c7b\u4f3cdatamustbeafunction", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "app grows bigger split components instead cramming methods component", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "\u76f8\u5bf9\u4e8e el \u6765\u8bf4\u53ea\u662f\u4e2a\u4eba\u66f4\u559c\u6b22", "d": "1/2018"}, {"body": "\u81ea\u5df1\u559c\u6b22\u52a0\u4e2a mixin \u5c31\u597d\u4e86\u554a \u4e0d\u8981\u603b\u60f3\u7740\u5f80 vue \u6838\u5fc3\u5305\u52a0\u975e\u901a\u7528\u6027\u529f\u80fd\u6765\u89e3\u51b3\u81ea\u5df1\u7684\u4e2a\u4eba\u9700\u6c42", "d": "1/2018"}, {"body": "\u6dfb\u52a0\u4e00\u4e2a api api", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "problem trying fix see default export vue min js workaround try use import vue vuepropertydecorators way get working keep mind real solution", "d": "1/2018"}, {"body": "thanks works use normal fix deployed", "d": "1/2018"}, {"body": "seems nothing config points module umd build included ts compiler resolving using main field commonjs build need specify mapping using tsconfig", "d": "1/2018"}, {"body": "thanks sorry mistake", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "related vue project need read document popular gesture libs carefully", "d": "1/2018"}, {"body": "\u770b\u4e0d\u61c2\u8bf7\u597d\u597d\u5b66\u82f1\u8bed", "d": "1/2018"}, {"body": "want know gesture library use", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "giving pull request according suggestion", "d": "1/2018"}, {"body": "thanks sounds reasonable suggestion ktsn kazupon op suggests vmodel update value composition happens discussed especially affects japanese input android ime like google chinese input nt exhibit problem android check dates back long ago looks like leave untouched code base yup chinese input stop firing input event composing japanese input correctly fires input correctly set eventiscomposing true however vue uses btw whitey test case almost valuable collected album hehe", "d": "1/2018"}, {"body": "translate english extensive discussion thank reasonable reply", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "prop created template changed every time updated trigger watcher", "d": "1/2018"}, {"body": "jounqin explained using object literal prop binding causes child component think prop changed every render behavior likely improved future manually compare new old values watcher avoid unnecessary updates", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "proposal would handle booleans unless require documented custom default value sake compatibility vue moment attributes need explicit values browsers work probably ie end syntaxes valid boolean attribute declared render key true even better key true improved performance passing native implementation unfortunately browser works attributes always stored strings declared nt need render happens right put nutshell remove current behaviour adding values would break browser support make attributes always string value would differ native html attribute handling ps make sure use lowercase attribute html browser convert anyway", "d": "1/2018"}, {"body": "reading spec boolean attribute without value assigned eg checked implicitly equivalent one empty string assigned ie checked consequence represents true value values true false allowed boolean attributes represent false value attribute omitted altogether two points absolutely blow mind implicit behaviors yuck choice choice anyway helped understand inner logic better thanks", "d": "1/2018"}, {"body": "nt use feature requests ask questions", "d": "1/2018"}, {"body": "since two types provided issue tools", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "\u90a3\u662f windows \u4e0a\u7684 ie", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "special use case application developers design nofitication event sorry framework handle", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "datacards array items", "d": "1/2018"}, {"body": "problem solved wujunchuan said used instead look exactly case try use ajaxloader loading images empty images src", "d": "1/2018"}, {"body": "expected please use", "d": "1/2018"}, {"body": "javoski want use ajaxloader temporary empty images alright project border remove", "d": "1/2018"}, {"body": "issue related vue ask questions stackoverflow forums", "d": "1/2018"}, {"body": "asifarran right create event subscriptions add condition handler case need even events would never fire actually another simple way handle case pass computed property listeners object null condition met example", "d": "1/2018"}, {"body": "maybe need", "d": "1/2018"}, {"body": "kingwl still adds listener op wants avoid sqal suggestion actually valid workaround simplified", "d": "1/2018"}, {"body": "yes sqal solution good one inlining like shows close enough mind thanks leads deeper issue though rebind happens data change upon evaluation condition changes generally event spec object passed von different existing event subscriptions cleaned still hopefully disposed end component lifecycle von rebinds may edge case large impact scenarios reference scenario complex svg need optionally attach mouse overout handlers specific elements based logic component long lived one underlying data changes leading rebinding need attach event handlers different elements rebind hence need dispose previous subscriptions nt dangle orphaned sad drink memory typical solution going end set one top level event listener per event type let events bubble explain motivation trying vue way first quite bit processing happen handlers intended precalculate bake right event subscriptions handlers less quicker fluid response invoked elements nt require opposed filtering relying dom queries handler", "d": "1/2018"}, {"body": "vsevolodtrofimov whole point avoid event subscription happening applying condition handler satisfy requirement please note comments provide satisfactory resolution closing issue reflect", "d": "1/2018"}, {"body": "possible pass arguments handler", "d": "1/2018"}, {"body": "pmayer curry handler use", "d": "1/2018"}, {"body": "playing around however found strange nt produce current work around right referenced cloned actually clone need use clonenode however also caused problem tag one another exposing vnode api propose expressed like avoid cluttered", "d": "1/2018"}, {"body": "thank richardtallent detailed proposal would argue limit reactivity within custom properties thus would totally doable userland actually example extracted standalone vue plugin", "d": "1/2018"}, {"body": "josephuspaye", "d": "1/2018"}, {"body": "link fortuitous slot discovery slot scope compiling perhaps choice calling runtime arises learning nuxt framework ssr serversiderendering vuejs see exploding templates later ssr clientside runtime evaluation", "d": "1/2018"}, {"body": "enough", "d": "1/2018"}, {"body": "\u6211\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898 \u4e0d\u8fc7\u73b0\u5728\u5df2\u7ecf\u89e3\u51b3\u4e86 \u4e3b\u8981\u539f\u56e0\u662f static \u9759\u6001\u6587\u4ef6\u4e2d\u6709 \u7684\u8bed\u6cd5 \u800c babel \u7f16\u8bd1\u65f6\u4e0d\u4f1a \u7f16\u8bd1 static \u4e2d\u7684\u6587\u4ef6 \u89e3\u51b3\u65b9\u5f0f \u7b2c\u4e00\u79cd gt \u628a static \u6587\u4ef6\u653e\u5230 src \u4e2d \u7b2c\u4e8c\u79cd gt \u624b\u52a8\u628a static \u6587\u4ef6\u4e2d\u7684\u6539\u6210 \u9700\u8981\u6267\u884c npm run build \u4e4b\u540e\u518d\u770b npm run dev \u7684\u65f6\u5019\u6682\u65f6\u6211\u8fd9\u8fd8\u4e0d\u884c \u53ef\u80fd\u662f dev \u7684\u65f6\u5019\u4e0d\u4f1a\u6267\u884c babel \u8fdb\u884c\u7f16\u8bd1 \u4f46\u662f build \u4e4b\u540e\u7684\u6587\u4ef6\u662f\u53ef\u4ee5\u5728 \u9489\u9489\u6216\u8005\u4e0d\u652f\u6301", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c \u521d\u59cb \u7684 transform \u4ee5\u4e0a\u4e24\u70b9\u7f3a\u4e00\u4e0d\u53ef", "d": "1/2018"}, {"body": "niceue", "d": "1/2018"}, {"body": "\u6211\u6ca1\u52a0transition\u4e5f\u9047\u5230\u4f60\u8fd9\u4e2a\u95ee\u9898", "d": "1/2018"}, {"body": "use case would like get suggestion workaround method main container call ajax init get user info commit vuexstore child inside would like call different api calls stage according user role come vuexstore lifecycle call asyncawait flow would follow order parent beforecreate parent create child beforecreate child create child mounted understand correctly component lifecycle currently get user info get workaround would like keep init api called inside used many pages container vuerouter posted question stackoverflow thanks", "d": "1/2018"}, {"body": "time ago interested creating vetur integration quasar framework rstoenescu delayed approaches quasar deliberately huge toyed simple jstoveturlike json converter make things sane brief experience two cents community going settle custom block approach js eg object import custom logic seems like better alternative structuredtext formats like yaml jsdoc due use cases avoid duplication thus improving maintainability like following components extending components components sharing common properties disconsider message doable otherwise missing something", "d": "1/2018"}, {"body": "shameleo hit problem think sort feature along lines suggested excellent idea aside valid drawbacks highlight basic problem repeated boilerplate case generations also current boilerplate might reducing composability several components injecting via common component ui used across projects even current two slots ugly", "d": "1/2018"}, {"body": "honest question even need wrap everything single root element technical limitation arbitrary decision technical due diff algorithm written technical implement easily transpiled thus solving problem idk easy", "d": "1/2018"}, {"body": "proof works nt seem like requires update diff algo", "d": "1/2018"}, {"body": "trusktr technical challenge conversion template render function implementation virtualdom render function builds nodes child component represented parent virtual dom single current implementation diffing algorithm responsible comparing current old virtualdom patching differences real dom rely fact every vnode child component single matching html element real dom next vnode virutaldom child component vnode guaranteed match next html element real dom sidenote fiddle functional components nt restriction represented vnode parent since nt instance nt manage virtualdom allowing fragments requires significant changes algorithm since would somehow keep parent informed times many root nodes child currently managing real dom parent rerenders knows many htmlelements skip reach next html element nt belong child component intricatecomplicated piece code heart vue critical render performance important make work correctly also make highly performant pretty hefty task evan mentioned react waited complete rewrite rendering layer remove restriction", "d": "1/2018"}, {"body": "implying opting convert multiple roots template multiple roots render function works performance nonetheless would work make fiddle shows nt work", "d": "1/2018"}, {"body": "implying opting convert multiple roots template multiple roots render function works performance nonetheless would work saying current virtualdom diff amp patch algorithm heavily relies fact child component always exactly one root element would break completely one root node child component saying making work one root component complicated adds additional logic challenge make change without negatively impacting render performance current implementation", "d": "1/2018"}, {"body": "still convinced multiple roots even needed core team currently working supporting great nt feel like roadmap already every time thought hey might need multiple root nodes puts dangerous path adding much complexity single component always end better simpler solution lives well within single root node paradigm solutions usually rely scoped slots highly recommend learning use well never need think multiple root nodes", "d": "1/2018"}, {"body": "core team currently working supporting great nt feel like roadmap already nice roadmap wo nt happen anytime soon would also breaking change component written multiple root nodes would nt work otherwise solid advice complexity scoped slots", "d": "1/2018"}, {"body": "one show rewrite fiddle scoped slots show possible output two elements time component outer component like example using template instead render function tried using slots wouldnt let put slot element root component linusborg ability return array function removed", "d": "1/2018"}, {"body": "linusborg ability return array render function removed would think would remove anything returning array render function nt work never worked continue work vue notable exception functional components reasons l laid need help specific challenge implementing feature forumvuejsorg chatvuejsorg approriate place issue", "d": "1/2018"}, {"body": "functional components nt restriction represented vnode parent since nt instance nt manage virtualdom last checked though possibly changed since vue sfc support multiple root elements within given comment would fairly straightforward allow within functional template sfcs think might go long way addressing many desired usecases without requiring rewrite fundamental architecture", "d": "1/2018"}, {"body": "oh see works well nt need help writing singleroot components converting singleroot components multiple roots allows useful patterns otherwise certain patterns doable without multiroot components react added community needed trying understand removed useful issue hoping feature added seems valid let people compose freely fwiw sort composing nt currently doable custom elements virtual component systems allow moment component instances nt actually get placed dom css style coming soon currently behind flags allow web components achieve thing ie achieve multiroot rendering would vue among things example chatter problems stackoverflow", "d": "1/2018"}, {"body": "trying understand removed useful refers removal vue vue design decision mainly much easier performant virtualdoms generally worked vue nt use virtualdom react rewrite whole rendering engine get setup performant way understand useful scenarios tradeoff usefulness amount work required make happen", "d": "1/2018"}, {"body": "understand useful scenarios tradeoff usefulness amount work required make happen linusborg thoughts earlier question allowing functional template sfcs would sufficiently low work", "d": "1/2018"}, {"body": "tbh nt aware nt work still test yeah rust fixable problem template compilation", "d": "1/2018"}, {"body": "would nice allowed multiple root elements", "d": "1/2018"}, {"body": "could someone open issue vueloader", "d": "1/2018"}, {"body": "\u4ee3\u7801\u7cbe\u7b80\u5230 \u53ea\u6709\u4e00\u4e2a iframe", "d": "1/2018"}, {"body": "zjxpcyc \u6211\u6700\u540e\u5728\u81ea\u5df1\u5de5\u7a0b\u5185\u5bb9\u91cd\u65b0copy\u4e86\u4e00\u904d\u4ee3\u7801", "d": "1/2018"}, {"body": "also work slotscope", "d": "1/2018"}, {"body": "tried fix issue encountered problem got way access vnode html element want get vnode path find good way missing something better solution", "d": "1/2018"}, {"body": "xlotlu really like approach making use existing slot mechanism component extension sure whether proposed syntax best least good starting point discussion finally decided add two cents still bit surprised frustrated hours research thinking tinkering stumbled upon article helped feel completely dumb unable figure solve problem existing means someone else already said fact people use templating libraries like pug component inheritance proof enough demand completely ignored problem approaches think using existing mechanisms like mixins slots want change javascript markup always end implementing composition elements least two times slot mechanism expects data passed parent child parent template resides child actually whereas class inheritance within javascript works opposite way something couples together would useful nt think using scopes define potential child component able merge additional content parent template bad op points nt see feature would collide conventional scopes feature request defining rules existing scopes could used way round within child component enable semantically correct component inheritance said neither vue javascript expert therefore certainly overlooked important points speak feature also anyone think elegant way implement component inheritance like described linked article pure vue please share thoughts", "d": "1/2018"}, {"body": "xlotlu sorry really nt see provides get right example whole new instance parent component created proposed approach child component parent actually instance created situation parent either serves prototype child directly used level markup tree equivalent independent instances possibility inherit extend parent within child template makes possible couple class extension script level would therefor enable full component inheritance imho template inheritance makes sense conjunction component class extension also understand aiming help look content distribution templates component class extension separately claimed mechanism bring two together therefor provide api content manipulation child parent destroying original semantics slots system see want", "d": "1/2018"}, {"body": "know put vif parent tag redundancy invalid", "d": "1/2018"}, {"body": "want control existing since nt make sense invalid add wrap like", "d": "1/2018"}, {"body": "mix require export ca nt mix import moduleexports skottiewang notifications githubcom maysnow mint\u7684\u6e90\u7801\u4e5f\u8fd9\u6837\u5199\u7684 receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "hey made mixin wraps component methods tracks status returned promises lets use thisasyncpending inside components intercepts async errors passes vue errorhandler kinda hacky also super useful think javascript import vue vue vueconfigerrorhandler err gt consolelog handling error err mixin tracks component asyncpending state catch async errors wrapping methods vuemixin data gt asyncpending beforecreate const methods optionsmethods const key objectkeys methods const method methods key methodbusytracked return const wrappedmethod function args const result methodapply args const ispromise result amp amp typeof resultthen function ispromise return result", "d": "1/2018"}, {"body": "encounter exactly problem sirlancelot hot reloading becomes useless case vuex use manually refresh time", "d": "1/2018"}, {"body": "please revisit issue think listening camel case events dom templates impossible talked wish could consistent components default solved problem implementing helper function issues events versions edit seems like vue introduced solves dom issue still think aim consistency", "d": "1/2018"}, {"body": "hi issue still active", "d": "1/2018"}, {"body": "yes", "d": "1/2018"}, {"body": "know older thread setting throws uncaught referenceerror sanitizehtml defined know sanitizehtml defined previously imported used vue called", "d": "1/2018"}, {"body": "ran issue nt need poll transition poll el still present dom", "d": "1/2018"}, {"body": "unbinding removed elements page resulting jarring transition elements created directives bad practice", "d": "1/2018"}, {"body": "elements created directives bad practice using native js plugins like packery comfortable way go directive destroy packery instance unbind directly layout goes drain nt destroy producing memory leak slows every following instance packery think relevant issue", "d": "1/2018"}, {"body": "\u521a\u770b\u5230\u7684", "d": "1/2018"}, {"body": "also agree builtin officially endorsed way uniquely identifying component would nice expecially since useful making things properly accessible using library returning id number components particularly unique go forward mixin method outlined", "d": "1/2018"}, {"body": "going create new issue found one bug different seems might help solve current issue created simple situation reproduce transition bug reproduction link steps reproduce click showhide button switch another browser tab seconds go back jsfiddle see message displayed expected works like switching browser tabs clicking showhide button fiddle waits seconds hides message fiddle waits second shows message actually happening clicking showhide button switching another browser tab seconds come back see message element", "d": "1/2018"}, {"body": "alexbazilev think case different situation created separate issue nvm situation saying sorry spam", "d": "1/2018"}, {"body": "\u5b98\u65b9\u6587\u6863\u597d\u50cf\u6ca1\u6709\u5199\u554a", "d": "1/2018"}, {"body": "dengshenkk \u4f7f\u7528\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\u8868\u5355\u8f93\u5165\u7ec4\u4ef6 \u4e2d\u6709\u6d89\u53ca", "d": "1/2018"}, {"body": "posva understanding vue reactivity returning null would definitely better option rather returning string", "d": "1/2018"}, {"body": "renders expected", "d": "1/2018"}, {"body": "haowu javoski disagree safari part tried google chrome ipod touch also renders", "d": "1/2018"}, {"body": "javoski says web inspector error shown photo seems like tick read properly", "d": "1/2018"}, {"body": "hey guys problembut solved problem found problem due structure dom tree case two nested html elements think makes frame render wrong", "d": "1/2018"}, {"body": "good solution problem changing key triggers complete rerender component even nothing changed another way triggering transitions", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "add new modifier", "d": "1/2018"}, {"body": "xiguaxigua found way fix problem", "d": "1/2018"}, {"body": "aarbel nt found way fix", "d": "1/2018"}, {"body": "case button type submit", "d": "1/2018"}, {"body": "leonnylino use axios looking ajax based solution", "d": "1/2018"}, {"body": "transition worked vif vshow resort solution work", "d": "1/2018"}, {"body": "implemented", "d": "1/2018"}, {"body": "yes dynamic types work", "d": "1/2018"}, {"body": "nt need end anyway since wanted ensure number input field realized good future projects suppose", "d": "1/2018"}, {"body": "chance support portal natively vue although portalvue working nicely cases still side effects like leaving empty wrapper element thus may interfere something especially styles relying dom structure like work abstract components would great imo eliminate empty wrapper still get everything right unless feature supported vue core hacking render functions return inner may still cause problems", "d": "1/2018"}, {"body": "maybe start feature request portalvue quite open nt portals roadmap vue moment", "d": "1/2018"}, {"body": "alternatively could consider wrap functional component return multiple root nodes functional component component instance linusborg also work single files components getting error", "d": "1/2018"}, {"body": "although highly respect opinions knowledge would like present different view developer may want know boolean prop defined two examples component developer external use may want build logic determine property defined various internal checks robustness realistic impose use mybool undefined especially trying make component robust flexible fortunately workaround impose external changes explicity set default undefined multivalue prop includes boolean value may desired example simplifies usage component assumes happy default following example scenarios prop false icon displayed b undefined defined true display default icon c string custom icon name however since vue forces undefined false manage case b since observe undefined state would forced add second prop thus requiring two props boolean string something could done one additionally ask user pass string false true string since could icon name since undefined fasly negative impact keeping however loss functionality removing additional irritant define boolean string prop undefined default prop defined component receive empty string instead expected true value maybe submit seperate issue see following jsfiddle examples", "d": "1/2018"}, {"body": "defcc fergaldoyle update", "d": "1/2018"}, {"body": "think casting null would make sense number type used angularjs removing object null would suffice thats initially declare model text field nt populated placeholder text also show properties null", "d": "1/2018"}, {"body": "nt like setting properties controllers created component set views project called vueheadful based headful generic library set meta tags javascript vueheadful supports setting title description keywords language properties use vueheadful register component js import vue vue import vueheadful vueheadful vuecomponent vueheadful vueheadful new vue configuration use component every views", "d": "1/2018"}, {"body": "johnleider issue believe unclear pre render work text site prerendering nt appropriate userspecific content route like myprofile prerendering wo nt effective content page different depending looking sometimes update routing strategy compensate eg users usernameprofile public profiles otherwise risk leaking private information world says appropriate user specific content sometimes update routing strategy", "d": "1/2018"}, {"body": "also implementing virtual scroll feature came across exact problem unfortunately problem seems hurt performance quite lot smooth scrolling eg macbook pro touchpad scrolling upwards buttery smooth scrolling downwards creates microstutter caused many dom updates capture shows problem well", "d": "1/2018"}, {"body": "reason ca nt import vue files completly fresh vue init webpacksimple folder run npm run dev initially soon try import vue component error occurrs nodemodulesbabelloaderlib nodemodulesvueloaderlibselectorjs typescript amp srcappvue module found error ca nt resolve componentsheadervue c laragonwwwvuetutorialsvueclitutorialvuejsroutervueroutersrc nodemodulesbabelloaderlib nodemodulesvueloaderlibselectorjs typescript amp srcappvue srcappvue srcmainjs multi webpack devserverclient webpackhotdevserver srcmainjs", "d": "1/2018"}, {"body": "get back kind problem dynamic components static async component passed absolutely way find children finished rendering parent component must execute code child components done loading problem parent lifecycle done children created called solution mdreizin posted work components nt known", "d": "1/2018"}, {"body": "donnysim preventing applying mixin would add hook component", "d": "1/2018"}, {"body": "akryum kind requires know many components wait loading requires different implementations code second time enter page components already resolved normal lifecycle runs", "d": "1/2018"}, {"body": "big problem component appear list resolved late lifecycle detect components many loaded yet case kind work around problem injecting global mixin emits mountedcreated events components count many loading loop sadly case async components increase difficulty dealing lifecycle something needs happen mounted event async components get created mounted", "d": "1/2018"}, {"body": "got error trying watch literal path spaces still work thought act square bracket property access syntax", "d": "1/2018"}, {"body": "possible emit functional components", "d": "1/2018"}, {"body": "unless mistaken short answer functional component instance therefore methods hackery believe actually emit context object render fn receives contains always vue instance could choose take global approach see event emitting functional component depending use case likely best solution", "d": "1/2018"}, {"body": "hey researching optimizing dashboard elements making sfc component functional sounds awesome wont able methods computed props right use render function jsx least define inside render function self correct", "d": "1/2018"}, {"body": "possible emit functional components access object functional context example call listener like method inside use render function jsx least define inside render function self correct yes", "d": "1/2018"}, {"body": "akryum thanks larger template heavy func components might better jsx standard render functions would make things bit harder read advanced tutorial would really sweet", "d": "1/2018"}, {"body": "nt need use render function functional components anymore use templates fri jan dobromir hristov notifications githubcom wrote akryum thanks larger template heavy func components might better jsx standard render functions would make things bit harder read advanced tutorial would really sweet receiving commented reply email directly view github mute thread", "d": "1/2018"}, {"body": "blocka use function something instantiate chart example", "d": "1/2018"}, {"body": "unless rendering chart completely vnodes would need regular component lifecycle methods fri jan dobromir hristov notifications githubcom wrote blocka use function something instantiate chart example receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "akryum solution works leaves feeling functional sfc templates could use little love process rewriting several components could functional getgo little disappointed experience sfc already context accessible template could nt properties mapped root props emit listeners allowing type sfc work api requestsomething propshello propsworld export default props hello world could become hello world export default props hello world", "d": "1/2018"}, {"body": "nt add damn information vue tutorial", "d": "1/2018"}, {"body": "think actually correctness issue performance one seems chrome least actually result small indent start paragraph presumably honouring rendered natively browser html gross annual salary normally indent", "d": "1/2018"}, {"body": "issue closed even nt bug seems reasonable api would support works fine limitation weird unreadable", "d": "1/2018"}, {"body": "implemented", "d": "1/2018"}, {"body": "updates", "d": "1/2018"}, {"body": "sibling components like case button lives different slot parent use bus instance example use dedicated state management solutions like vuex info meaningless container components hold part state children meaningless may good solution make maintainable use case", "d": "1/2018"}, {"body": "akryum use case", "d": "1/2018"}, {"body": "solution provide inject without using reactive data documentation provideinject", "d": "1/2018"}, {"body": "problem", "d": "1/2018"}, {"body": "well", "d": "1/2018"}, {"body": "necessary feature dry code opinion right create watchers thing form lot input custom modifier would solve everything", "d": "1/2018"}, {"body": "make end value variable", "d": "1/2018"}, {"body": "pls change delimiters using vue webpacksimple new vue delimiters el app render h gt h app nt work pls help", "d": "1/2018"}, {"body": "yeah im need thats helper", "d": "1/2018"}, {"body": "sorry revive old issue could nt find relevant discussion elsewhere encounter problem trying separate presentation logic vue vm clientside business rules persistence code model model class instance pretty natural fact vm attributes support class instances mean vue vm instance intended contain presentation business persistence logic pattern nt considered thanks creating reactive view library used progressively instead taking app way", "d": "1/2018"}, {"body": "bumped since remove doesnt work since dont perform change trough assignment reverse assign remove returns removed array reverse condition assign result back case works perfect", "d": "1/2018"}, {"body": "recently ran discovered much easier way shortcircuit vue observation logic define property nonconfigurable background application work party library openlayers creates class instances hold data nt support reactivity system trying shoehorn one caused many headaches let tell viable solution large scale application using library let openlayers things way wants make vue play nicer horribly nested uber objects doom prior finding issue application using gigs ram largest dataset caused vue making objects reactive also really slow loading tried vuenonreactive helped get us gig prior using vue application sitting around solution anything nt want reactive simply mark simple stops property properties observed vue dependency arguably even incorrect application largest dataset simple easy required documentation change vue side make official way making something nonreactive", "d": "1/2018"}, {"body": "interesting definitely seems like viable alternative", "d": "1/2018"}, {"body": "think directive would help greatly performance instance template array parsed every time need display property object html findsubtotal paymentterm shortdescription anfloat findsubtotal paymentterm int anfloat findsubtotal paymentterm cap anfloat findsubtotal paymentterm ins findsubtotal paymentterm fee anfloat findsubtotal paymentterm ter js findsubtotal termindex return thissubtotalsfind st gt sttpterms termindex workaround missing improve performance think reopening issue could solve problem thanks", "d": "1/2018"}, {"body": "alexandrebonneau", "d": "1/2018"}, {"body": "volcanicpenguin nt know use case check worked use case may ideal solution working none less", "d": "1/2018"}, {"body": "keen support", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "future plans add support technical reason vue could support map set", "d": "1/2018"}, {"body": "actually able reproduce different way putting ngif input element", "d": "1/2018"}, {"body": "weex like reactnative doesnt render webview create real native app like react native", "d": "1/2018"}, {"body": "weex looks well built hard get support looks nice little bit behind vs weex support use many existing nativescript plugins", "d": "1/2018"}, {"body": "like said weex framework building native mobile crossplatform uis moreover evan help weex already supported vuejs one frontend frameworks words use vuejs syntax develop native apps based weex", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "think bigger problem lack clear pattern init proposed using using proposed prograhammer job neither solution explicitly saying non reactive properties instance logic related component lifecycle obviously waiting something happen really mind simply wanting define non reactive instance state also pattern since everyone call properties whatever want otoh using seems hackish exposes vue guts also distinction reactive non reactive state either live level better solution imo would explicit syntax declare non reactive component state personally really like first idea ardoramor using underscores non reactive properties", "d": "1/2018"}, {"body": "well repeat saying nt feel usefulimportant enough worth adding dedicated api neither solution explicitly saying non reactive properties instance anything reactive nt enough everything needs dedicated api react takes extreme everything prop local state little nothing else otoh using options seems hackish exposes vue guts also distinction reactive non reactive state either optionsmystring live level optionsdata optionsmethods nothing reactive options used create component since nonreactive data experience mostly exactly constants options actually find place quite fitting react want provide abstractions use case justfies added technical debt maintaince burden personally nt feel like case better solution imo would explicit syntax declare non reactive component state personally really like first idea ardoramor using underscores non reactive properties data would breaking change definite", "d": "1/2018"}, {"body": "nothing options reactive reactive natural state things javascript justify sticking non reactive component state anywhere non reactive options used create component since nonreactive data experience mostly exactly constants options actually find place quite fitting quite contradictory argue putting component state directly reactive component state live alongside etc instead living directly assume means component state reactive component state either case logical non reactive state would either go inside inside property eg directly would breaking change definite makes sense arguing something need done", "d": "1/2018"}, {"body": "quite contradictory argue putting component state directly options passage quoted explicitly says experience nonreactive state usually constant options sense state wo nt change constant use code talk directly options put dedicated object established pattern many many plugins party components use define config options constants etc pp also flags like functional true inheritattrs false live directly options well nt doubt instances one actual component state mutated reactive eg performance reasons experience edge case deserving api arguing something need done arguing issue seeing severe enough warrant action leads additional api everything needs api things sufficiently solved establishing pattern personally think one cases could add something docs define official pattern deal extending api surface wo nt get vote least agree looking offical pattern switch vuejsorg repo open issue", "d": "1/2018"}, {"body": "sense state wo nt change constant use code state means ok talk directly options put dedicated object yes nt solve problem consistent official pattern solving arguing issue seeing severe enough warrant action leads additionbal api ok", "d": "1/2018"}, {"body": "official way declaring nonreactive state", "d": "1/2018"}, {"body": "simplesmiler thanks excellent advice please consider points sirlancelot passing data relevant ever props provideinject parent vuex revisiting issue years wiser think legitimate use case presented passing data parent component possibly deep child reason complained prop syntax passing children deep results ridiculous amount code repetition believe caught long time ago taken long time provideinject address use case still nt fully address look deeply nested child component uses mysterious property idea inherited parent chain hints template actual composition happens check implementation details every component chain figure one introduced property scope evan sound lot like closures js sounds great well said whole point components break code logically isolated units well turns component logically isolated whether using props closures runtime parent context must provide required attribute parent component declaratively pass attribute prop child components access parent attributes via parent parent component arrtibute suggestion parent component data available reference via closure regardless passing method required attribute must exist parent scope good reason methods logical isolation runtime question input need declared twice component props code ca nt props inferred code like closures js want declarative input props parameters want inferred input convenient familiar way like closures provide js decision made ultimately understand performance king vue prevents shooting feet vuex inject global state provideinject selectively inject state parent dangerous walk chain options exist carefully limit select must passed regarding jochantrelle nt jerk think gets however rant may rest us admit awe brilliance find ironic requested solution implement differently provideinject introduced vue let quote injected property inject would traverse parent chain first provider reached provideinject provide data distant descendant allows create amazing functionalities indeed smarter teams people developing frameworks vue included may get resume well familiar react provideinject similar react context feature ngcontroller looks like came right side regarding decoupling explicit data passing makes individual component decoupled usage context makes easier reason maintain makes component reusable necessary evan nt component need prop prop come runtime comes context parent component runtime real difference declarative vs implied decoupling well sometimes want declarative props sometimes nt nt vue give dev sharp knives let use right tool job like js would even argue provide inject solution unfortunately even tighter coupling parents children wanted parent explicitly declare providing closure scenario child free reference parent data without parent knowing cleaner less dependent admittedly poorly performing solution key child says need thismyattr nt walk chain find regarding modularityreusability loss dry repeating data declarations props etc small violation considering benefits modularity reusability except modularity reusability nt lost dependency somewhere component chain whether dependency expressed using vuex explicitly props parent inject etc dependency still exists component still reusable matter approach used child component still ideologically requires whether passed explicitly parent provide reason performance dev option components nt need start like solution better provideinject attribute component uses nt func data attr computed etc automatically added props list runtime prop passed parent check parent scope chain nothing yet still found default prop value used default silently fail alternatively powerful inject provide avaliable injects data root descendants injects descendants thisx like vuex store inherits parent attributes current instance walk chain inject first x regardless provided parents inherits levels parent attributes current instance better provideinject syntax", "d": "1/2018"}, {"body": "hello new vue made implementation vue cdn link script using package manager everything works fine chrome ff make work ie already try babelpolyfill thing nothing worked indexhtml vuejs controller open console view seems deletes app div help please", "d": "1/2018"}, {"body": "mariomenjr provide reproduce please", "d": "1/2018"}, {"body": "mariomenjr please use new issue tool open new issue", "d": "1/2018"}, {"body": "please provide way update actually replace object referenced data eg etc", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "akryum thank much try", "d": "1/2018"}, {"body": "revati could show example use saying way without explaining rest us still poking dark", "d": "1/2018"}, {"body": "wickedsik go little bit expresive way handle optional props", "d": "1/2018"}, {"body": "found action firefox chrome different updated event triggered firefox fall stuck never come chrome deal correctly", "d": "1/2018"}, {"body": "accepted practiceanswer issue", "d": "1/2018"}, {"body": "christophernewton best solution far", "d": "1/2018"}, {"body": "big thankyou trying directly assign properties vue instance going nuts smile", "d": "1/2018"}, {"body": "hi body using vuejs laravel dynamic custom form fields coming database followed vmodel form name field works problem get field values laravel controller anybody using tylerotwell formjs class help greatly appreciated thanks", "d": "1/2018"}, {"body": "help forum one dedicated answering questions", "d": "1/2018"}, {"body": "someone needs receive undefined boolean prop multitype prop include boolean simply set default value undefined see jsfiddle comparison results various boolean props scenarios", "d": "1/2018"}, {"body": "try recursive functions nt know compares performance javascript var f g var c e var b new object copy reference var b consolelog true alter one object alters hence copy reference consolelog true", "d": "1/2018"}, {"body": "pixelbacon return false vue working fine", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "also edge use case involves needing reference dom element may hidden depending breakpoint hidden underlying data changes computed values end incorrect features nt rendered properly window resize method could simply recompute window resize dom element available", "d": "1/2018"}, {"body": "dom nt sources truth using vue dom simply view data data exists dom gon na bad time", "d": "1/2018"}, {"body": "sirlancelot nt sources truth dom vue incrementallyadoptable javascript framework like use vue jquerylike tool entrusted dom vue admit vue fullabstract power let need operate dom sometimes want use vue simple action", "d": "1/2018"}, {"body": "sirlancelot bit tough explain datacomputed values remain source truth go detail referencing dom elements render indicator element selected tab ui indicator transitionsanimates width left position new tab clicked smallmobile screens different ui used select dropdown select tabs utilize data let call render widthleft position indicator computed method let call returns width left offset button corresponds value problem arises user changes via select ui small viewport since value changes tabs nt displayed ca nt get widthleft offset selected tab therefore nt return correct value user switches medium breakpoint tabs redisplayed indicator nt styled properly edge case bueno current solution move tabs offscreen via css instead still inspected whenever changes causes headaches buttons tab hierarchy could manually breakpoint change little saner explicit sorry length think enhancement warrants investigation could useful", "d": "1/2018"}, {"title": "trigger sticky events", "body": "app small component filtering search results search triggered triggers event component listening sometimes listening component yet instantiated event occurs like post sticky events posted stay somewhere could read using simple getter pattern looking similar add new method triggersticky would deliver event like trigger one would need consume calling getstickyevent similar call would let developers worry instantiation order components caller could ensure event lost even would listeners time event gets posted", "num": "4181", "d": "1/2018"}, {"body": "sounds fine create object guaranteed instantiated search component store events hears listening component created later look stored events starting problem", "d": "1/2018"}, {"body": "exactly already thinking could part backbonejs backbone would take care storing sticky events offer api triggering clearing", "d": "1/2018"}, {"body": "backbone extendable wanted add standard functionality perhaps plugin could suffice", "d": "1/2018"}, {"body": "idea modelparse called collectionfetch everywhere read called", "d": "1/2018"}, {"body": "even weird case want override constructor want perform code constructor call super constructor stuff constructor solution like", "d": "1/2018"}, {"title": "nt set meta data frozen objects", "body": "fix ember changed code ember stops working ie perhaps ember set meta data frozen objects dutch warning get points ca nt find already fixed ember gt javascript var setmeta void exportspeekmeta void choose one appropriate given platform emberutilshasnativeweakmap var getprototypeof objectgetprototypeof var metastore new weakmap else setmeta function fallbacksetmeta obj meta objdefinenonenumerable objdefinenonenumerable embermetaproperty else objectdefineproperty obj metafield metadesc lt", "num": "16201", "d": "1/2018"}, {"title": "yarn test fails branch name", "body": "running branch name test fails following message convert illegal characters branch name something legal", "num": "16198", "d": "1/2018"}, {"title": "documentation embercompare needs updated rfc", "body": "needs updated rfc examples documentation need updated well", "num": "16190", "d": "1/2018"}, {"title": "generated test referencing fail box using beta", "body": "several test blueprints already updated order support new testing api approved rfc within new beta app generating instanceinitializer using blueprint merged tests fail box due helper present within newly generated app helper supposed part new app blueprints incorrect", "num": "16180", "d": "1/2018"}, {"title": "result server query immutable", "body": "try work reproduction attempts remove object array ember data objects like hitting line ember data using ember data seems like code exists recent ed well guess would assume came side effect quite sure", "num": "16178", "d": "1/2018"}, {"title": "tagless component defined es class causes error", "body": "trying use es class syntax actually using embertypescript issue related project understand rfc merged time last year work done space support projects like emberclitypescript emberdecorators read rfc using class syntax correctly understand perhaps still something wrong trying tagless element way es classes implemented seems problem see following example created ember twiddle javascript import ember ember export default class mycomponent extends embercomponent constructor super compiles fine visit page get strange error unsure things wrong uncovered legitimate bug something yet implemented ideas", "num": "16177", "d": "1/2018"}, {"title": "rendering htmlsafe falsey value first thing root loading template causes entirety loading template content permanently displacereplace root app outlet", "body": "entering root loading route first load loading template renders htmlsafe falsey value undefined etc results root application outlet permanently rendered order respect adjacent dom please see attached twiddle minimum recreation issue toggle double stash triple stash loading route see issue appear disappear issue first results switch issue still present app twiddle update issue actually little bit worse thought turns loading template content getting permanently rendered main application outlet updated twiddle demonstrate see content placed foo loading template ends permanently placed main application outlet", "num": "16172", "d": "1/2018"}, {"title": "vs text inputs vs checkboxes", "body": "text inputs work although handlers passed different arguments checkboxes see found difference fairly surprising wasted time care admit trying track actions attached checkboxes nt firing cause behavior difference focusin default event name action assigned focusin used default focusin handler textsupport mixin thanks pointer alexspeller nt really figured distinction exists historical reasons perhaps would nice consistent least made clear docs moment sections actions checkboxes actually adjacent input helpers page literally reads event names must dasherized checkboxes also use input helper create checkbox setting type fairly misleading", "num": "16171", "d": "1/2018"}, {"title": "docs observersandobjectinitialization contradicts eslintpluginember recommendations", "body": "reviewing documentation setting observers init sets embereslint rule using components docs updated provide preferredpattern example", "num": "16170", "d": "1/2018"}, {"title": "error assertion failed observer called without valid path", "body": "mean debug", "num": "16161", "d": "1/2018"}, {"title": "class documentation transition disappeared ember", "body": "go select show private bottom nav menu see last time transition seen alive little csi forensic work required figure happened could refactoring moved way place yuidocs processed", "num": "16153", "d": "1/2018"}, {"title": "memory leak action helper asyncawait tests", "body": "memory leak believe might found memory leak created application reproduces problem available description issue repository readme copy according page tests execution container object heap snapshot one means memory leak believe found one reproducible case action helper hbs used via test implemented asyncawait leak memory happen test written old style reproduction steps open chrome browser visit tests select acceptance memory leak module let tests run open console memory tab take heap snapshot filter container container object heap container object heap point happen action helper used test asyncawait far able confirm happens version also application tests compiling lot templates use tests async seems add lot leaked memory additional notes ember twiddle jsbin preferred reproduction repo work providing one", "num": "16152", "d": "1/2018"}, {"title": "enable embertemplateblocklethelper default", "body": "goal issue track work still necessary ship block helper release ember consult rfc reference x write api documentation document guides", "num": "16150", "d": "1/2018"}, {"title": "refine error messages around allowing normal javascript property gets", "body": "issue tracking problems come due allowing normal javascript property lookup work computed properties context process landing change allow use normal property lookups get properties defined computed properties ember practice means cases later able drop replace however handful small historical issues could make transition little messy landed issue chances encountered warning ember encountered one historical issues computed properties used directly prototype ember internal implementation details ember caused computed properties directly present objects nt use would see internal ember descriptor representing computed property private api internal implementation detail never intended public even intimate api internal implementation detail changed still private descriptor object relocated object meta also private api allows us make normal property lookup work general people relying presence internal descriptor encountered error related problem probably using addon relies nowdefunct private implementation detail best bet follow instructions error message ask help devember ember proxies tricky secondly since new behavior relies using allow users ember proxies stop using previously since ember objects required use access properties could uniformly use code never need worry whether object ember proxy however use normal property access computed properties ember proxies special object implemented using ember proxy advertise requiring access proxied properties analogous libraries javascript ecosystem expose api different normal js property access patterns since proxies relatively rare ember compared property access ember objects emberjsrfcs merged felt cost losing consistent property access everyone types everywhere nt need know object special worth benefit normally needing use transition worried people accidentally migrate ember proxies regular property access added assertion code fires use normal property get ember proxy property present object returns value undefined developmentmode assertion implemented using proxies yet present supported browsers cover browsers people typically use development part avoids vast majority mistakes introduce possible problem code probes objects discover whether implement protocols mean probing code resilient way write code would unfortunately apps always control probing code could come test frameworks generic serialization logic etc notably probing code problem ember proxy finds way probing code property present object true usually real property ember proxy important part returns something definitely possible ember proxy could return object every possible property probing code checks protocol usually present wrapper object like would trigger assertion inappropriately problem comes probing code previously would look properties wrapper proxy object order provide good errors people accidentally removing nt normal property accesses ember proxies become sensitive behavior correct mental model going forward objects notably values returned relationships ember data special objects require nonstandard api process migration introduces ambiguity got error nt expect please reply issue information happened help improve error message advice workarounds", "num": "16148", "d": "1/2018"}, {"title": "transition beforemodel queryparams sets queryparam name different route", "body": "ember twiddle reproduces issue click link go foo bar back foo see url behaves would expect foo paramtrue gt bar gt foo paramtrue however refresh click bar first foo notice param gets stuck go back bar bar gt foo paramtrue gt bar paramtrue read sticky params sure whether intended behavior param sticks time issue sticking situation inconsistency seemed point something", "num": "16143", "d": "1/2018"}, {"title": "attribute accept true value", "body": "running ember following work despite documentation stating pass attribute", "num": "16142", "d": "1/2018"}, {"title": "array prototype extensions causing problems jquery file upload plugin", "body": "hi tried upgrade ember got stuck reproduced issue new embercli project found tried documented readme", "num": "16141", "d": "1/2018"}, {"title": "emberdebug ecmascript imports broken", "body": "according es spec able something like though console replies using described docs warn throw upon usage however works embercli node emberclibabel packagejson macos according ember slack help reproducable fresh install", "num": "16139", "d": "1/2018"}, {"title": "quest allow plain classes services", "body": "classes rfc merged time take advantage internal cleanup allow ember applications use classes applications going start services service superclass empty subclass however still number things work context background first functionality rfc yet implemented part problems minor related ing subclass ember superclass since quest using basic classes extend directly relevant pzuraq working identifying limitations writing failing tests second order support simple objects need decide public api dependency injecting es classes requires deciding stable public api dependency injection general smallest incremental step expect static method takes might want little take responsibility writing rfc finally need decide handle computed properties news classes incremental step support computed properties directly ember still require set properties directly services emberdecorators addon could used get sugar features however expect people feel need use every time use bare classes probably pull enough ember proper avoid example could add decorator fields moment calls hood need review apps decide many services real world rely lot ember object model features current status work items identify limitations current support es classes pzuraq fix defer write rfc dependency injecting outside oldstyle ember classes wycats survey realworld apps use ember object model features services useful thing could right go app survey services use certain features example survey skylight hang community slack coordinating work community slack join stesclassservices channel", "num": "16134", "d": "1/2018"}, {"title": "generated service injected ember serve restarted", "body": "got stuck little trying figure could nt inject newly created service turns restarting ember serve solved issue still reduced steps reproduce problem every time another terminal applicationhbs foocmpjs import component embercomponent import inject service emberservice export default componentextend shoppingcart service full error message browser console error assertion failed attempting inject unknown injection service shoppingcart new embererror assert registryvalidateinjections factorymanagercreate proxycreate curlycomponentmanagercreate appendopcodesevaluate vmnext templateiteratornext", "num": "16133", "d": "1/2018"}, {"title": "build tag published dist tag", "body": "build npm info embersource name embersource description javascript framework creating ambitious web applications disttags latest beta lts", "num": "16128", "d": "1/2018"}, {"title": "input helpers docs link doc page give whoops something went wrong error followed", "body": "ember docs page input helpers link actions section link document event names currently points visited resolves shows whoops something went wrong error screen following error console", "num": "16127", "d": "1/2018"}, {"title": "use prototypejs ember application", "body": "hi sorry english possible use prototypejs ember application want migrate test framework dont need make big change code web page use scriptaculous", "num": "16119", "d": "1/2018"}, {"title": "use shorthands component paths called template", "body": "ruby rails nice option enter end component name template automatically look components names folder hierarchy bubbling finds instead using following handlebar actually emblem call component added pod structure authenticatedpremisespremisedashboardbookengineerservicesaccountservicessectorholdingjobtypeappointmentfaultstemplateembl authenticatedpremisespremisedashboardbookengineerservicesaccountservicessectorholdingjobtypeappointmentfaultspriorityquestionedit appointmentappointment selectpriority routeaction selectpriority could use would still use automatically located folder template wondering something already considered adding ember handlebar could potentially new useful feature add actually complicated add logic", "num": "16118", "d": "1/2018"}, {"title": "recreate dom element component", "body": "custom component wraps element change content need reset state element unfortunately dom apis allow state reset eg method way remove means need remove element replace new one reliably reset state currently parent component property toggles rendering template however something concern parent would like way cleanly component maybe new component method", "num": "16111", "d": "1/2018"}, {"title": "browser support list", "body": "official list supported browser please cant see list browser supported description readmemd file please", "num": "16109", "d": "1/2018"}, {"title": "use router service route", "body": "hi inject routerservice route property replaced javascript import route emberrouting import inject emberservice export default routeextend router inject api expose property public private use named inject like seems work box intent use urlfor generate url meta tags method available thanks", "num": "16088", "d": "1/2018"}, {"title": "live api docs emberbind emberversion emberonerror", "body": "related issue pr merged things floating global public need home since ember global nt accessible api docs site bind onerror version exposing ember global confusing new devs think worth noting ton private properties still thus visible full list public private cc toddjordan", "num": "16082", "d": "1/2018"}, {"title": "tryinvoke caninvoke compare isequal missing updated imports docs", "body": "according part module api docs reflect think got overlooked documentation block follow pattern example class fixed method update ought target lts candidate later", "num": "16079", "d": "1/2018"}, {"title": "browserstack error automation testing time expired", "body": "kategengler already working browserstack folks resolving wanted make issue track ci failing cross link folks", "num": "16065", "d": "1/2018"}, {"title": "check change binded values", "body": "check change input onchange check change already binded values need check change binded values call action", "num": "16064", "d": "1/2018"}, {"title": "fix visit promise resolution", "body": "fix pr makes issue worse less likely render fully resolved visit promise resolved issue causes lot tests force flush run loop ensure visit done rendering clarify issue nt error handling actually resolving promise rendering actually settled", "num": "16059", "d": "1/2018"}, {"title": "quest making jquery optional", "body": "year going allin stripping ember bare essentials first target effort making jquery optional applications nt using jquery nt need include bulk successfully making jquery optional cuts around minifiedgzipped code juicy target around total size ember app initial vendorjs rwjblue done lot work far front package tests clean without jquery time finish job testing ember first time working ember follow steps make sure latest version node latest lts node update latest version yarn clone run populate run go browser edit packages editor refresh browser rinse repeat testing ember without jquery test ember without jquery add query parameter running tests get bunch failures working removing dependency jquery one package time test single package without jquery run tests hitting url making progress order make progress removing jquery dependency need satisfy two criteria fewer tests fail mode tests fail without making progress way means incremental work always merged master regressions using ember way always used current status work items wycats got package failing tests branch however violated rule making progress broke bunch tests running jquery things could work x getting tests passing normal mode x getting remaining tests passing get tests passing without jquery ember x componentcontexttestjs failing linktotestjs failing x multipleapptestjs failing x reexportstestjs failing x basictestjs failing x queryparamstestjs failing x emberapplication rwjblue x emberconsole x emberdebug x emberextensionsupport x emberglimmer x embermetal x emberrouting x emberruntime x embertemplatecompiler x embertesting snewcomer x emberutils x emberviews x internaltesthelpers switch packages run ci without jquery see example ember x emberapplication x emberconsole x emberdebug x emberextensionsupport x emberglimmer x embermetal x emberrouting x emberruntime x embertemplatecompiler embertesting x emberutils x emberviews tested moment x internaltesthelpers x rfc allow users opt jquery make sure people using jquery get good errors addon try x write simonihmig rwjblue x merge make sure error messages good people try rely jquery features jquery disabled x ember components pending requests test helpers rwjblue work different way new test helpers anything else write opting jquery guide like deprecation guide except jquery deprecated yet emberjslearningteammanagers blockers shipping flag stuff work considering feature done figure strip extraneous noise jquery imports nojquery mode signify ember observer addon depends jquery kategengler hang community slack coordinating work community slack join devjqueryremoval channel", "num": "16058", "d": "1/2018"}, {"title": "advise helpermodifier", "body": "hello attempting add bootstrap tooltip popovers bootstrap suggests know could make live call would rather make something target specific elements instead adding another watcher whole dom would like something like time intent making content dynamic would like componenthelpermodifier like helpermodifier sense live inside element add attributes required care element else happening element tracked code led believe helper modifier helper even makes sense seems like action helper modifier nt know modifier make one place read topic possible go making better way likely overthinking whole thing addons emberobserver code may read better understand honest still months ember help would amazing also asked slack channel got response thus turned thank greatly", "num": "16055", "d": "1/2018"}, {"title": "query parameter serialization regression", "body": "works fine ember javascript import route emberroutingroute import inject service emberservice export default routeextend ajax service model return thisget ajax request foo data bar qux bar query parameter serialized array generated encoded url looks like model hook raises typeerror following stack trace taking freshlygenerated ember cli repo toggling embersource dependency get workingnonworking version jquery emberajax versions types query parameter values strings numbers nonarray objects seem serializing correctly", "num": "16053", "d": "1/2018"}, {"title": "undefined component integration test", "body": "also posted import ember ember const component computed inject service ember export default componentextend currentuser service classnames listgroupitem tagname li visiblereagents computedfilter inventoryreagents function reagent return thisget currentusershowarchivedreagents reagentget archivedat undefined tests would work well part component integration tests would undefined import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile import startmirage helpersstartmirage moduleforcomponent inventoriesleftmenuitem integration component inventoriesleft menu item integration true setup startmirage thiscontainer aftereach windowservershutdown test renders function assert let inventory windowservercreate inventory title inventory createdat inventoryreagents windowservercreatelist reagent inventory thisset inventory inventory thisrender hbs assertequal li length assertequal badge length nt accessible test", "num": "16052", "d": "1/2018"}, {"title": "chai error attempted access property", "body": "running tests ember beta getting error error assertion failed attempted access property due certain internal implementation details ember property previously contained internal descriptor object private api therefore would internal implementation detail never intended public even intimate api internal implementation detail changed still private descriptor object relocated object meta also private api soon accessing object return computed value see rfc details error seems stem way chai logic works test like let arr beforeeach function arr emberobjectcreate id emberobjectcreate id tests function expect arr tocontain foo chai code blows something like sure reproduce via twiddle clone repo run included test see error note drop back chai problem goes away", "num": "16049", "d": "1/2018"}, {"title": "ember radio buttons prob", "body": "hi following place avg max binding values coming another json object ie querychoice getting values controller getting querychoice need actual binded value", "num": "16042", "d": "1/2018"}, {"title": "emberloggerdebug results double output", "body": "means new ember app using see following output debug build cause boolean logic believe refactored", "num": "16041", "d": "1/2018"}, {"body": "oops already fixed master", "d": "1/2018"}, {"body": "need update blueprint thanks reporting", "d": "1/2018"}, {"body": "mmun would mind taking look without deeper dive seem assertion correct manually mutating ed record array based long standing assertion seems ed specifically takes stance supposed immutable", "d": "1/2018"}, {"body": "yeah make sense point seems like specific case due complex web lies ties together model related records perhaps ca nt get away longer", "d": "1/2018"}, {"body": "fwiw still able mutate array via", "d": "1/2018"}, {"body": "closing think explanation makes sense better understood found better solution", "d": "1/2018"}, {"body": "problem work needs set called case using fields might fix js class mycomponent extends embercomponent tagname constructor though fix problem tagname needs conditional example ember power select", "d": "1/2018"}, {"body": "love work pr using fields seem fix seems transpilation tends spit especially context say something really supported anyway good job making pr", "d": "1/2018"}, {"body": "way get observer called object initialization case would need use thank", "d": "1/2018"}, {"body": "yep use case already done eslint plugin included stock embercli install nt docs reflect need disable linting rule one needs use strategy would happy submit pr", "d": "1/2018"}, {"body": "hello yanzixiang closing since emberjs bug please go help channel slack registered use slackin app thank", "d": "1/2018"}, {"body": "thanks detailed bug report update action usage something idiomatic exact usage demo app basically components template root template eg neither assigning value used element space think specific usage something ember assert unclear related seeing closer make expect easier rule things", "d": "1/2018"}, {"body": "initially found code like leaking memory leaking assuming memoryleak function context usage helper came updated example leak still", "d": "1/2018"}, {"body": "rwjblue spend time boiling maybe looking fix could point right direction would happy dig embers internals", "d": "1/2018"}, {"body": "find description packagesemberglimmerlibcomponentslinktots line let currentwhen get currentwhen next line typeof currentwhen boolean return currentwhen assume something wrong type returned getter", "d": "1/2018"}, {"body": "updated boolean test passing", "d": "1/2018"}, {"body": "thanks reporting essentially issue following", "d": "1/2018"}, {"body": "believe fixed closing happy reopen mistaken", "d": "1/2018"}, {"body": "tested posted repo related errors pop thanks", "d": "1/2018"}, {"body": "add version post", "d": "1/2018"}, {"body": "emberclibabel packagejson", "d": "1/2018"}, {"body": "awesome see survey include services provided addons services", "d": "1/2018"}, {"body": "app output", "d": "1/2018"}, {"body": "three production apps surveys josemarluedke include services provided addons", "d": "1/2018"}, {"body": "intercom numbers counts services eg services use multiple times total", "d": "1/2018"}, {"body": "actions techincally methods called using bind helper templates", "d": "1/2018"}, {"body": "data complex apps yapp app total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions app total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions also several services mix emberevented emberconcurrency tasks", "d": "1/2018"}, {"body": "data core app tradegecko total services object proxy injects another service alias readonly computed properties volatile observers concatenated merged properties actions well several emberconcurrency tasks one usage", "d": "1/2018"}, {"body": "one internal apps total services object proxy injects another service alias readonly computed properties volatile observers concatenated merged properties actions", "d": "1/2018"}, {"body": "app", "d": "1/2018"}, {"body": "counting addons numbers number services use one features total count instances", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties nt know actions", "d": "1/2018"}, {"body": "heroku dashboard", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "minutebase total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions kayako total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions", "d": "1/2018"}, {"body": "wycats finished test broken component behavior found another test skipped demonstrates issues constructors going start adding tests observer behavior next", "d": "1/2018"}, {"body": "pzuraq great work keep em coming", "d": "1/2018"}, {"body": "app total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions emberconcurrency tasks app older total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions", "d": "1/2018"}, {"body": "hey exciting work travisweb total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions sure object proxy services extensions others think mean also sure whether nonvolatile computed properties include guessed", "d": "1/2018"}, {"body": "backspace listed separately object proxy means", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions eventedmixin emberconcurrency tasks", "d": "1/2018"}, {"body": "counts ghost proxymixin injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions eventedmixin", "d": "1/2018"}, {"body": "tradegecko total services computed properties going grow quite", "d": "1/2018"}, {"body": "great looks like far dominant usecases service injection computed properties simple computed property macros like alias readonly really great news features clearer path direct migration classes features ember object model like concatenated properties keep surveys coming", "d": "1/2018"}, {"body": "actions services think feature might unused mainly due education people nt know opinion untapped feature especially immutable state service example love actions work functions bound parent object default would prevent need object", "d": "1/2018"}, {"body": "knownasilya personal opinion modern ember actions functions point helper bind function therefore nt need worry oldstyle actions new code think", "d": "1/2018"}, {"body": "personal opinion modern ember actions functions point action helper bind function definitely semantics inferred interestingly also taken perspective voted actually fixing semantics please review history suggest point simple binding purposes folks use helper provided rather therefore nt need worry oldstyle actions new code think tbh nt think simple might writing new code authoring replacement existing concept consider refactoring service controller new code talking template code totally agree refactor number templates simply refactor service seems nonideal", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly computed properties volatile observers concatenated merged properties actions", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "fyi others disttag corrected issue track fixing cause", "d": "1/2018"}, {"body": "cc emberjslearningteammanagers", "d": "1/2018"}, {"body": "looks like link updated point longer gives whoops error however leaves user top page rather jumping event names section something easy add nt know scroll find relevant content could confusing", "d": "1/2018"}, {"body": "hi heahcamerountoiaussiquelleimage sorry use github bug reports post question stack overflow join slack community thank good luck", "d": "1/2018"}, {"body": "route using template component called faults template could also higher hierarchy like example would like call component faults template fetch closest component folder tree", "d": "1/2018"}, {"body": "moved", "d": "1/2018"}, {"body": "would make main component move element template quite easy wrap conditional", "d": "1/2018"}, {"body": "know comes implementation issues well eg longer use would traverse dom find actual element call methods leads actual current solution use wrapper parent component something feel needed", "d": "1/2018"}, {"body": "note element reset issue also applies stateful dom elements like maybe glimmer handle", "d": "1/2018"}, {"body": "solution suggested almost certainly path forward much closer glimmer components template includes root element instead configuring js definitely agree still issues dealt finding element decent work arounds well example grab video element could something like js let videoid export default componentextend tagname init thissuper arguments didinsertelement thisvideoelement documentgetelementbyid", "d": "1/2018"}, {"body": "rwjblue shall close", "d": "1/2018"}, {"body": "sure close happy reopen suggestion nt work", "d": "1/2018"}, {"body": "putting browser support matrix readme would confusing master branch canary channel point would list edge evergreen browsers current release still supports tracked", "d": "1/2018"}, {"body": "already private property class hm sure specifically going provide embertwiddlecom reproduction", "d": "1/2018"}, {"body": "see used route codebase sure injection work service injections marked private api maybe throw error someone tries inject router service route using basic twiddle see console logged error router service instance", "d": "1/2018"}, {"body": "closed tracked", "d": "1/2018"}, {"body": "pr", "d": "1/2018"}, {"body": "addressed pr mentioned", "d": "1/2018"}, {"body": "resolved browserstack updated opensource account", "d": "1/2018"}, {"body": "hello mehrajpasha closing since emberjs bug please go help channel slack registered use slackin app fourth time invite join channel ask help please use slack triaging time limited would grateful could go bugs thank", "d": "1/2018"}, {"body": "krisselden provide context bug fix pr makes issue worse less likely render fully resolved visit promise resolved refer specific behaviors need change current implementation us consider promise resolution fixed close bug", "d": "1/2018"}, {"body": "promise resolves", "d": "1/2018"}, {"body": "also think would nice api promise rendering settled", "d": "1/2018"}, {"body": "mechanism flush tests artificially forced visit behave synchronously swapped use instead temporarily fixed test failures work progressing", "d": "1/2018"}, {"body": "want help get branch passing normal mode follow instructions contributions target", "d": "1/2018"}, {"body": "sure matters want access npm package even move somewhere please contact", "d": "1/2018"}, {"body": "topaxi package right assume thinking use let people opt original functionality", "d": "1/2018"}, {"body": "actively working getting branch passing", "d": "1/2018"}, {"body": "took look amp references jquery", "d": "1/2018"}, {"body": "checked packages w wo packages pass emberconsole tests emberviews tests emberdebug embermetal emberruntime emberutils internaltesthelpers", "d": "1/2018"}, {"body": "would like pick package", "d": "1/2018"}, {"body": "get package passing locked ci runs without jquery see initially setup", "d": "1/2018"}, {"body": "looks like switched run ci without jquery added separate todo ensuring packages locked edit looking older version file four modules", "d": "1/2018"}, {"body": "acorncom woot woot", "d": "1/2018"}, {"body": "got tests passing branch reason tests failing evening love pr get things passing nobody tackles try wrap later weekend", "d": "1/2018"}, {"body": "anything help", "d": "1/2018"}, {"body": "think take look bug branch", "d": "1/2018"}, {"body": "wycats yeah take look promises figure though give shot tomorrow morning", "d": "1/2018"}, {"body": "wycats emberjquery includes jquery vendor bundle also allows including slim version instead full jquery build yes thought might used optin old behavior", "d": "1/2018"}, {"body": "wycats browserstack failures wanted look seems first jobs failing travis sure related tried running browserstack tests locally could nt seem get work would recommend setting vm ie nt generally test ie", "d": "1/2018"}, {"body": "others looking test browsers microsoft provides virtual machines testing edge amp ie", "d": "1/2018"}, {"body": "landed emberglimmer changes wycats working unlocked package anyone time pick wycats left push without jquery finish line", "d": "1/2018"}, {"body": "rwjblue snewcomer need land", "d": "1/2018"}, {"body": "rwjblue still looking help emberglimmer never looked code try help", "d": "1/2018"}, {"body": "looks like finished confirming", "d": "1/2018"}, {"body": "wycats yes finished remaining package took brief looks quite many failures straightforward fix however think might make sense decouple", "d": "1/2018"}, {"body": "decouple way", "d": "1/2018"}, {"body": "wycats think decouple per file good enough somebody wants still current state package disabled packagesembertestscomponentcontexttestjs failing packagesembertestshelperslinktotestjs failing packagesembertestsintegrationmultipleapptestjs failing packagesembertestsreexportstestjs failing packagesembertestsroutingbasictestjs failing packagesembertestsroutingqueryparamstestjs failing", "d": "1/2018"}, {"body": "thanks updated", "d": "1/2018"}, {"body": "emberjslearningteammanagers additional instructions ember data", "d": "1/2018"}, {"body": "anything left error message front", "d": "1/2018"}, {"body": "hello thettl closing since emberjs bug please go help channel slack registered use slackin app possible create custom element modifiers rfc thank", "d": "1/2018"}, {"body": "thank information serabe find alternate methods though mentioned also asked slack channel got response thus turned wonderful day", "d": "1/2018"}, {"body": "mwpastore could publish demo repo test possible fix", "d": "1/2018"}, {"body": "fwiw related", "d": "1/2018"}, {"body": "recent commit pushed fix without actual repro ca nt confirmdeny whole thing works", "d": "1/2018"}, {"body": "rwjblue quick quite literally repo one route published", "d": "1/2018"}, {"body": "rwjblue tried pr repro repo say ten times fast getting progress", "d": "1/2018"}, {"body": "digging essentially issue following", "d": "1/2018"}, {"body": "believe fixed closing happy reopen mistaken", "d": "1/2018"}, {"body": "sure ember bug may need move different issue tracker done investigation generally speaking nt see obvious issue though odd start routing component test code snippets shared type test known work think would need reproduction repo could clone test", "d": "1/2018"}, {"body": "right thinking could linked mirage also yes routing stuff useless removed still working hard issue going isolate separate repo look come back first need upgrade app latest mirage realised something need anyway might solve current problem", "d": "1/2018"}, {"body": "rwjblue dummy repo uncomment debugger line run usual compare debug mode type see defined debug mode type see dummy app nt need app need get thanks advance", "d": "1/2018"}, {"body": "example use arrow functions want correct arrow functions intentionally modify context inside function match context created case creating arrow function module scope strict mode context fix issue would need update", "d": "1/2018"}, {"body": "ha sorry think changed automatically perhaps using actual inside context unfortunately gives result without arrow functions pushed", "d": "1/2018"}, {"body": "hi stephanebruckert demo project adds ton deps packagejson bowerjson try reproducing brand new project using mirage add model route etc many deps track happening easily thanks", "d": "1/2018"}, {"body": "hi back brand new project commit shows available expected commit shows available anymore soon relationship added main model thanks time also asked", "d": "1/2018"}, {"body": "explained soquestion bug ember might bug mirage override custom collection type without proper management", "d": "1/2018"}, {"body": "thanks luxferresum suggested worked around ember issue maybe emberclimirage issue discussed thanks everyone", "d": "1/2018"}, {"body": "issue chai attempting provide nice display message failing assertion custom display logic accomplish using copyfork node see invoked recursively inspects property object function invoke essentially way customize inspection output ala specific situations node recommended way customize inspection changed implementing function object using custom symbol see existing descriptor trap already handles properly believe correct solution add list exceptions descriptor trap mind sending pr", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "running similar issue using chai deep equal however case property try add detailed reproduction time wish better understanding since basically test failures ember related section code chai related", "d": "1/2018"}, {"body": "dhaulagiri goal assertion throw error folks touch descriptors way nt possible accidentally pretty uncommon situation prior implementing emberjsrfcs native getters cps wanted ensure folks relying using descriptors directly prototype think example make much simpler thisget first thisget last let person personcreate first robert last jackson worked definition worked ember versions descriptor trap specifically geared towards making throw descriptive error since used personnameget", "d": "1/2018"}, {"body": "makes sense reason bit head scratcher errors come across actually app code directly either chai described jquery plugin need dig see actually happening", "d": "1/2018"}, {"body": "right usage proxy somewhat hard get right actually reports legitimately catching bugserrors test code accessing cp like always previously throwing error concerned usages type describe general object probing really related specific issues trying flag actually going make assertion less useful extremely noisy one possible solution would remove branch instead assert user accesses one known properties computed property prototype allow access return chancancode thoughts", "d": "1/2018"}, {"body": "reopening even though landed fixes many scenarios still certain covered cases dhaulagiri running", "d": "1/2018"}, {"body": "rwjblue pushed another sample test mimics app code sample repo reproduces error seen", "d": "1/2018"}, {"body": "awesome thank try dig afternoon", "d": "1/2018"}, {"body": "continues game whackamole added exceptions merged clean keep hitting new land mines another one related jquery plugin using attempted access property object object object object adding exception triggers error", "d": "1/2018"}, {"body": "old version jquery believe line latest version line triggering us app", "d": "1/2018"}, {"body": "going use motivation remove jquery plugin question since wanted anyway chai issue reproduced comment still lingers", "d": "1/2018"}, {"body": "dhaulagiri believe recent changes addressed remaining issues tested sample repo latest beta build includes changes tests pass", "d": "1/2018"}, {"body": "rwjblue thank sure test next release confirm sounds like able close", "d": "1/2018"}, {"body": "confirmed chairelated errors fixed confirm jquery one since removed plugin codebase looks like others able confirm linked issues", "d": "1/2018"}, {"body": "fyi fix released part", "d": "1/2018"}, {"body": "confirmed figure new test failures coming try report", "d": "1/2018"}, {"body": "thank reaching mehrajpasha however reserve issue tracker bugs ember check community page stackoverflow discuss slack links ask question good luck", "d": "1/2018"}, {"body": "definitely truthy javascript ember different mentioned think latter probably syntax error nt think seen examples ember docs wanted clarify intended behavior", "d": "1/2018"}, {"body": "behavior worked point past", "d": "1/2018"}, {"body": "sure knowledge", "d": "1/2018"}, {"body": "discussed sorry tell closing bug changing behaviour would affect ember users cause strange behaviour scenarios vs thank sorry inconveniences", "d": "1/2018"}, {"body": "serabe worries think answered question sufficiently came alternative approach emblem thanks", "d": "1/2018"}, {"body": "think intend support disabling provided example trigger assertion basically value passed array assert", "d": "1/2018"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "1/2018"}, {"body": "went prs updated current state need know couple details thoov embermetal complete mikerhyssmith need help emberruntime thank", "d": "1/2018"}, {"body": "serabe embermetal complete yet remaining work done pr either later today sometime weekend", "d": "1/2018"}, {"body": "hi serabe sorry delay pr done weekend", "d": "1/2018"}, {"body": "np thank", "d": "1/2018"}, {"body": "thoov add info refactoring packagesemberruntimetestssuites use conventional system specifically like something like described", "d": "1/2018"}, {"body": "rwjblue yes add example converting emberruntime example", "d": "1/2018"}, {"body": "mikerhyssmith packagesemberruntimetestssuites currently concept called suitebuilder needs converted newer abstracttestcase model js const suite suitemodulebuildercreate suitemodule includes suitetest includes returns correct value startat positive function assert let data thisnewfixture let obj thisnewobject data assertequal objincludes data true return true included assertequal objincludes data false return false included internaltesthelperslibtestcases class runtimetestcase extends abstracttestcase newfixture newobject js convert tests pretty much one one modulefor includes class extends runtimetestcase test includes returns correct value startat positive function assert let data thisnewfixture let obj thisnewobject data let know need help anything packagesemberruntime", "d": "1/2018"}, {"body": "thoov thanks noticed fair remaining tests testboth work done embermetal tests support need wait go first", "d": "1/2018"}, {"body": "michaelklishin moving away testboth hood converting however second qunit test references usesaccessors never set therefore nt useful originally going support cases probably saw realized could kill one pr recently moved away testboth use guide let know need help anything", "d": "1/2018"}, {"body": "running issue embercli", "d": "1/2018"}, {"body": "believe need initialize controller check default values query params order know display trying confirm", "d": "1/2018"}, {"body": "confirmed commenting twiddle indeed lead things working thanks dhaulagiri", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "serabe sorry totally forgot bit time week check", "d": "1/2018"}, {"body": "evoactivity ping", "d": "1/2018"}, {"body": "serabe terrible nt actually minutes ping timed well confirm updating resolve issue", "d": "1/2018"}, {"body": "thank", "d": "1/2018"}, {"body": "stefanpenner ping", "d": "1/2018"}, {"body": "serabe problem resolved suspect want close must ensure folks carrying torch", "d": "1/2018"}, {"body": "filed crbug sent friendly reminder tweet", "d": "1/2018"}, {"body": "svenpl behaviour documented somewhere find thank", "d": "1/2018"}, {"body": "find either maybe even working plain object already unwanted behaviour", "d": "1/2018"}, {"body": "quite likely closing please change code supported method signature thank", "d": "1/2018"}, {"body": "cahbriangantzler ping", "d": "1/2018"}, {"body": "sorry must missed first one ill see reproduce small application", "d": "1/2018"}, {"body": "sorry search code lot repos commits find happening included info request would reminded code happening guess figured would remember much time passed might close time give example even without example though someone able explain code far use didseen set curious thanks", "d": "1/2018"}, {"body": "experience tests run isolation whole suite run means tests quite likely ones failing sideeffect free many possible reasons sneaky one using promises tests automatically wait resolve plain starts one tests settleds another causing latter fail thank", "d": "1/2018"}, {"body": "think due change use length certain conditions always gets means property calculated way earlier update somehow marked watched tests ember length computed glimmer rerender chaindepswatching fase somehow latter makes rerender thinks value changed must say really familiar glimmer code tests maybe someone else take", "d": "1/2018"}, {"body": "think might eager say dep already done scenario key actually gets multiple calls also invalidate watching nodes depend remembers already done prevents chains reregistering deps breaks chain manifest since chains would register next render dirty recomputed yet one recompute fine length recomputed render first time updated chains incomplete state removed dependencies never recomputed would reset depwatch tree could fix issue ignoring didseen altogether function dependentkeysdidchange obj depkey meta meta meta depkey return var seen didseen var top seen maybe changes grouped another way array gets one change didseen entries get reset false told recompute somewhere edit nt know didseen supposed cycle detection could also reset end", "d": "1/2018"}, {"body": "closing according triage policy please answer previous comments reopen thank", "d": "1/2018"}, {"body": "averydev statement makes easier add remove elements", "d": "1/2018"}, {"body": "rtablada yep confirming isolating bug exists regardless element removed dom result change evaluation conditional template", "d": "1/2018"}, {"body": "appears way teardown event handler attached onclick attribute short use style attaching event items destroyed recreated eg long list browser cleans us element handler attached detached dom unreachable javascript elements dom object js wrapper collected point browser point collect attached handler good thing plenty good alternatives listener downside infact would strongly encourage direct property listeners possible", "d": "1/2018"}, {"body": "ran examples chrome seems improved gc abandoned listeners since bug reported whew previously seen abandoned listeners last seemingly forever leaving alone enough gc using syntax lots listeners likely addedremoved blog post bug point recommend closing", "d": "1/2018"}, {"body": "averydev memory growth chart climb simply gc pressure mean leak comparison heap snapshot snapshot toggling onoff times toggling onoff times leak closure action dom removed", "d": "1/2018"}, {"body": "krisselden thanks confirming got distracted bugging friends existing open memory issues forgot issue minutes using syntax would strongly recommend", "d": "1/2018"}, {"body": "oh stefanpenner downside aware", "d": "1/2018"}, {"body": "simplest work dom specified api also takes form data binding hood imho legacy originates templates aware html syntax could", "d": "1/2018"}, {"body": "ok good know thanks", "d": "1/2018"}, {"body": "scissorsneedfoodtoo work", "d": "1/2018"}, {"body": "scissorsneedfoodtoo juventinoromero update apidocs supports release url deployed today go ahead convert links inline documentation suggest breaking directory folks work concurrently get band update description make quest style yes feel free start", "d": "1/2018"}, {"body": "toddjordan issue emberlearnemberapidocs emberjsemberjs sorry stupid question", "d": "1/2018"}, {"body": "please starting part ask lock nt duplicate efforts thank", "d": "1/2018"}, {"body": "emberjs code changes need made repo inline documentation", "d": "1/2018"}, {"body": "lend hand start bottom three embertesting emberextensionsupport emberutils", "d": "1/2018"}, {"body": "ynotdraw go bit wrapped another project", "d": "1/2018"}, {"body": "ynotdraw go ahead also busy another project week catch later thanks", "d": "1/2018"}, {"body": "take", "d": "1/2018"}, {"body": "sure williamhaley let know questions", "d": "1/2018"}, {"body": "check ynotdraw pr example needs done", "d": "1/2018"}, {"body": "similar work tracked guides", "d": "1/2018"}, {"body": "bandwidth weekweekend another set feel free assign embertemplatecompiler nodemodule emberenvironment loader", "d": "1/2018"}, {"body": "looks like following require url updates marked list embertemplatecompiler nodemodule emberenvironment loader move next three appear need changes emberrouting internaltesthelpers emberconsole", "d": "1/2018"}, {"body": "take package", "d": "1/2018"}, {"body": "package looks like nt require change either one file package indexjs links pointing api docs edit references global api made pr", "d": "1/2018"}, {"body": "first contribution seems like good one start", "d": "1/2018"}, {"body": "pick today", "d": "1/2018"}, {"body": "changes see pick", "d": "1/2018"}, {"body": "thanks everyone submitted prslooked packages heart reviews evening", "d": "1/2018"}, {"body": "looks like close book one thanks much ynotdraw parrryy karthiick marcoumpierrez williamhaley making happen cool see come together", "d": "1/2018"}, {"body": "closed fixed", "d": "1/2018"}, {"body": "howdy folks hit issue working new guidesapp reproducible way hitting bug using liquidfire presence loading template causes issue steps reproduce clone repobranch npm wait prembertrue npm start one issues sure causing problems reproducing issue nt seem consistent reason able say method reproduces prember configured prerender pages least one issue guaranteed", "d": "1/2018"}, {"body": "experienced version tests use sinonjs stubbing functions calls test like passing js test shows correct error message function assert const sandbox sinonsandboxcreate stubs async call made component const stub sandboxstub model function returns rsvpreject error line thisrender hbs return wait gt assertequal assertion rsvpreject propagates chain breaks test apart rwjblue suggestion changing line use sinon helper also works sinon methods return native js promise rsvp", "d": "1/2018"}, {"body": "hey encountered issue far understand fixes workarounds yet", "d": "1/2018"}, {"body": "stumbled solution set value change checkbox erase value show correct value chrome say following ensure correct behaviour browsers quote someone chatroom answering hairy ie question properly light incense order chant throw chicken bones instances like make question less silly insanity find", "d": "1/2018"}, {"body": "perhaps pertinent question change order value type attributes get behaviour edit jsfiddle shows mean", "d": "1/2018"}, {"body": "get example specify layout child component", "d": "1/2018"}, {"body": "mhluska like solution answer javascript import originalcomponent originalcomponent export default originalcomponentextend layoutname componentsoriginalcomponent", "d": "1/2018"}, {"body": "still happens really", "d": "1/2018"}, {"body": "fwiw digging see leveraging jwt swap browserstack worked found indicates jwt addon deprecated removed future therefore travis folks would nt land pr adding browserstack jwt support", "d": "1/2018"}, {"body": "stefanpenner man thanks", "d": "1/2018"}, {"body": "solved manually updating url error action error error transition const router thisget routerroutermicrolib let url", "d": "1/2018"}, {"body": "experienced problem could nt find better solution calling inside hook", "d": "1/2018"}, {"body": "also experiencing issue sudden probably since upgrading dependencies try reproduce", "d": "1/2018"}, {"body": "also lose time figure false positive error using inside documented guide api nevertheless still produces error would save time lot emberjs new comers", "d": "1/2018"}, {"body": "also happens news", "d": "1/2018"}, {"body": "today stumbled upon bug refresh route model exactly ie model hook called ember lts ember edit workaround", "d": "1/2018"}, {"body": "unless missing transition still documented emberjscom", "d": "1/2018"}, {"body": "kerrick right looks like removed documentation last time", "d": "1/2018"}, {"body": "see", "d": "1/2018"}, {"body": "marking issue stale due inactivity someone reproduction current version ember happy reopen", "d": "1/2018"}, {"body": "serabe also extremely unlikely root cause issue persists since rendering engine rewritten entirely since issue addressed backflow rerendering directly since", "d": "1/2018"}, {"body": "amazing ember devs would address ridiculous control controllers must use ember create emberview dom controllers follow component spec", "d": "1/2018"}, {"body": "issue resolved lands", "d": "1/2018"}, {"body": "excellent sorry nt realize coming", "d": "1/2018"}, {"body": "explained brettburley serializer qps work depends value default value thank", "d": "1/2018"}, {"body": "closing inactive", "d": "1/2018"}, {"body": "want ability work pojo send object party vanilla js library", "d": "1/2018"}, {"body": "yes please struggling party api current workaround object array fields seems silly function would great", "d": "1/2018"}, {"body": "taras sure never implemented workaround", "d": "1/2018"}, {"body": "nt know really maintaining embercliappversion anymore could try file bug", "d": "1/2018"}, {"body": "live ca nt find ember api docs", "d": "1/2018"}, {"body": "might seem like old post think override active class might need reopen linkcomponent app initializers folder ember like import linkcomponent emberroutinglinkcomponent export function initialize application linkcomponentreopen activeclass export default name attributes initialize class attribute helper could shed light issues", "d": "1/2018"}, {"body": "notifypropertychanged nt force nt changed could something tells ember something changed update template old chap even nt changed", "d": "1/2018"}, {"body": "would side effects update template value nt changed", "d": "1/2018"}, {"body": "extremely basically functionality sadly missing would helpful focus getting basics right going adding bells whistles framework", "d": "1/2018"}, {"body": "timothyerwin actually pretty easy work around also think right bad moment change things like tracked im glimmer show need rethink entire cpthing long term also nt get wrong would love sometimes", "d": "1/2018"}, {"body": "ember issue encounter frequently lately often hidden behind something else like filter sort cp macro easy forget effectively creating dependent key nested properties", "d": "1/2018"}, {"title": "wrong instanceof check jqueryfninit", "body": "jqueryfninit test instanceof jquery correct new jquery call anywhere library ie code context context instanceof jquery context context jquery constructor function new jqueryfninit call new jquery thanks", "num": "3958", "d": "1/2018"}, {"title": "using jquery version locally working", "body": "description per jquery documentation suppose work local disk well code works fine reference link jquery lib versions problem whenever try fallback use local downloaded file version fails relevant code simple tried several workarrounds including pasting whole file html script none worked neither chrome firefox windows tried similar following well error message detailed error referenceerror defined detailed error typeerror pageexecute undefined additionaly times get also network error file found even though file located even copied parent folder child folders eliminate dought downloaded", "num": "3957", "d": "1/2018"}, {"title": "wrong type check isfunction", "body": "introduced bug typecheck correct method used produces failing unit tests", "num": "3955", "d": "1/2018"}, {"title": "datedropper datedropper dateformat ddmmyy val returns null safari browser", "body": "using jquery function get value date type every browser getting value except safari one idea happening", "num": "3954", "d": "1/2018"}, {"title": "codejquerycom cdn responding", "body": "anyone else facing problems jquery cdn codejquerycom apps fail load jquery dependency", "num": "3953", "d": "1/2018"}, {"title": "patternexec run non sanitized string returned server", "body": "venerability exists within jquery library within ajax component third parameter callback jqxhr object method getresponseheader method may called key connection access response headers parsing headers method calls exec responseheadersstring without sanitizing string client reach third party service man middle attack performed malicious code contained headers could executed client machine practice vulnerability blocked modern browsers eg chrome firefox safari message put console reading page allowed display insecure content xxxx", "num": "3952", "d": "1/2018"}, {"title": "nt fadein method work firefox browser fadeout work situation please", "body": "description link test case", "num": "3951", "d": "1/2018"}, {"title": "support last ios versions drop android browser jquery", "body": "description currently support browsers amp versions exceptions ie ios amp android wrt ie obvious ca nt switch amp scheme browser dead support legacy reasons android browser still around android browser market share android ca nt drop android browser yet ios different nt progress quickly desktop rollingrelease browsers safari updated separately os people update os pretty quickly stats show hardly anyone uses ios version older given moment apple stats provide insight nt separate older versions currently explicitly support ios means long nt release new major jquery version test amp ios versions currently could limit specific number ios versions supported line desktop browsers feel amp might little perhaps limit last stable versions would happen jquery amp newer try limit patchminor releases link test case na", "num": "3950", "d": "1/2018"}, {"title": "found potential security vulnerability repository granted security alert access", "body": "found potential security vulnerability repository granted security alert access", "num": "3949", "d": "1/2018"}, {"title": "exception thrown caught jquery bootstrap", "body": "mvc app bootstrap jquery use nugget update bootstrap application crashes immediately error exception thrown caught downgrade bootstrap everything works perfectly something nt understand definitely something wrong jquery bootstrap", "num": "3948", "d": "1/2018"}, {"title": "bundled packagejson dependencies empty leads npm errors", "body": "description packagejson dependency npm static version npm nt compatible npm terms npm dependency dezalgo link test case none", "num": "3947", "d": "1/2018"}, {"title": "bundled", "body": "description link test case", "num": "3946", "d": "1/2018"}, {"title": "get image dimensions new created element", "body": "description want create new image element get dimensions information fails jquery works javascript wonder ca nt get information jquery improper usage code javascript var src jquery fail case get image dimensions var src src load function consolelog jquery output jquery javascript javascript result expect var new image src load function consolelog javascript output javascript run code chrome firefox fail first jquery case link test case testing environments jquery ubuntu firefox chrome", "num": "3945", "d": "1/2018"}, {"title": "ajax change url", "body": "consider following ajax request call correct url like consider request expected url called strange behaviour call instead expected sure whats happening tried settings working working leading call", "num": "3944", "d": "1/2018"}, {"title": "order script executed", "body": "hello created script executed order script times log console index value datas alert array lenght alert get run amp get function script times log console index value datas alert array lenght times get run amp get function nt know wrong maybe anyone help regards szymon", "num": "3943", "d": "1/2018"}, {"title": "question", "body": "public class registerviewmodel required datatype datatypeemailaddress stringlength errormessage must least max characters long minimumlength display name \u90ae\u7bb1 public string email get set next viewcshtml model registerviewmodel viewdata title register viewdata title create new account register section scripts await htmlpartialasync validationscriptspartial question eventhrouth submit form data also remind danger user name must letters digilts named username input", "num": "3942", "d": "1/2018"}, {"title": "support object selector", "body": "description support object selector js successfully setup event handler document selectstart dragstart document function e epreventdefault unsuccessfully remove event handler document selectstart dragstart document looks like problem second argument work string link test case", "num": "3941", "d": "1/2018"}, {"title": "jqueryfnload uncaught typeerror urlindexof function", "body": "description getting error getting traced jqueryfnload function jqueryfnload function begins jqueryfnload function begins lines removed new version error occurs try run snippet code definition load within iframe creation causing typeerror link test case", "num": "3940", "d": "1/2018"}, {"title": "jquery nt optimize attribute selector contains", "body": "selector works noticeable faster since optimized documentqueryselectorall", "num": "3938", "d": "1/2018"}, {"title": "jquery nt optimize identifier backslash", "body": "jquery nt optimize selector x documentgetelementbyid x problem regex nt recognize backslashes escape character", "num": "3937", "d": "1/2018"}, {"title": "small probability work", "body": "environment jqueryversion chrome latest firefox latest example view codepen", "num": "3935", "d": "1/2018"}, {"title": "performance greatly improved", "body": "combined selectors js aperformancenow lt jquery div span divspan input label bperformancenow consolelog ba separate selectors js aperformancenow lt jquery div jquery span jquery divspan jquery input jquery label bperformancenow consolelog ba documentqueryselectorall combined js aperformancenow lt documentqueryselectorall div span divspan input label bperformancenow consolelog ba documentqueryselectorall separated js aperformancenow lt documentqueryselectorall div documentqueryselectorall span documentqueryselectorall divspan documentqueryselectorall input documentqueryselectorall label bperformancenow consolelog ba documentgetelementsbytagname works way faster js aperformancenow lt documentgetelementsbytagname div documentgetelementsbytagname span documentgetelementsbytagname divspan documentgetelementsbytagname input documentgetelementsbytagname label bperformancenow consolelog ba", "num": "3934", "d": "1/2018"}, {"title": "add tooo sloooooow", "body": "add slow happens adding lot elements previous selection problem fixed many ways also stupid ways give super results really frustating chrome latest version firefox slower responds good manner check link sample adding rows rows takes seconds wait bit result alert stupid second fix respond istantly cache comment first part want jsfiddle", "num": "3933", "d": "1/2018"}, {"title": "jquery create html graph", "body": "hi team new jquery want good document learn getting actually want display html bar chart takes input excel sheet generate graph bar chart display html time open html read excel sheet generate graph facing lot issue able read data plot graph please help direct get knowledge read demo example understand work thanks ashissh", "num": "3930", "d": "1/2018"}, {"title": "vulnerability jquery", "body": "hello please would like test security project scan found vulnerability jquery vulnerable known vulnerabilities affecting installed version jquery framework exchanges data using javascript object notation json jquery framework exchanges data using javascript object notation json without associated protection scheme allows remote attackers obtain data via web page retrieves data url src attribute script element captures data using javascript code aka javascript hijacking suppress thanks", "num": "3927", "d": "1/2018"}, {"title": "jquery breaks droppabledraggable subpixel widthheight", "body": "description issue using jquery draggable elements width height subpixels eg using em rem units draggables fly back source position even configured snap stay target expected behaviour snap remain target browsers affected recent chrome firefox ie link test case minimal test case reproduce drag white boxes onto drop targets gt bounce back bug css remove subpixels line gt works expected leave subpixels swap jquery library first html lines gt works subpixels use different values subpixels get different failures draggable works one works etc", "num": "3926", "d": "1/2018"}, {"title": "jquery cache cause memory leak", "body": "hi already asked question one replied spa page events bind using jquery page load diagnosing app memory leak issues testing navigating pages back forth looking heap snapshot many detached dom trees caused jquery cache size growing navigating pages potential memory leak also tested unbinding events page load unbinding events cache size stable need unbind every events every pages cache holds dom even dom removed document need add info like test fiddle", "num": "3925", "d": "1/2018"}, {"title": "deferred fail throwing uncaught promise chrome", "body": "odd behaviour jquery ajax interactions deferred fail deffered catch chrome firefox writing callback like ajax call fails called expected another error thrown browser shown inspector tools change behaviour operates expected uncaught promise errors also executes twice understand docs appears deferred fail deferred catch thing documented add handlers called deferred object rejected subtlety two methods missing even docs suggest using fail correct behaviour done meantime replacing fail catch seems solving issue", "num": "3924", "d": "1/2018"}, {"title": "syntaxerror jquery elqueryselectorall x line ie", "body": "resolve error jquery javascript library ie syntaxerror elqueryselectorall x inside code assert function el elinnerhtml", "num": "3923", "d": "1/2018"}, {"title": "infrastructure grunt commands amp check work", "body": "ticket need check new maybe old ones grunt commands fit example work jquery builded execute though still work grunt commands like appear work commands maybe others either fixed documented removed order confuse user documentation needs provided readmemd side note wonder java still required order execute tests need provided additional documentation provide reference cc krinkle", "num": "3922", "d": "1/2018"}, {"title": "grunt commands amp work", "body": "executing commands mentioned header tests run cc krinkle", "num": "3921", "d": "1/2018"}, {"body": "think bug follow issue template post test case showing broken want help jquery works probably best ask stackoverflow", "d": "1/2018"}, {"body": "async attribute also might running page locally without dev server wo nt work current browsers might want ask stack overflow resolve problems", "d": "1/2018"}, {"body": "thanks helpfull reply syntax used async someone stackoverflow recommended way work without well dev server elaborate use local copy jquery lib", "d": "1/2018"}, {"body": "use local copy still need run local dev server serve filesystem please look help stack overflow though", "d": "1/2018"}, {"body": "please provide link reduced test case demonstrating issue", "d": "1/2018"}, {"body": "basically failing unit tests", "d": "1/2018"}, {"body": "link unit tests test case need something reduced demonstrate clear issue isfunction lot going tests one failures follows codepath never touches jquery undefined supposed script tag led entirely unclear", "d": "1/2018"}, {"body": "btw good places start", "d": "1/2018"}, {"body": "well showed exact commit change already wrote always compiled jquery iteration try create reduced testcase find time week", "d": "1/2018"}, {"body": "showed exact commit change already wrote mean nt help us require test case forced sift everyone applications ai nt nobody got time", "d": "1/2018"}, {"body": "try create reduced testcase find time week", "d": "1/2018"}, {"body": "supposed answer getattribute undefined supposed script tag led isfunction entirely unclear", "d": "1/2018"}, {"body": "supposed answer see mean git bisect led fair enough still unclear two related thank get test case happy take closer look", "d": "1/2018"}, {"body": "issue seems related plugin jquery also nt provided test case issue template asked create need please look help stack overflow", "d": "1/2018"}, {"body": "file specifically nt load", "d": "1/2018"}, {"body": "mgol whole domain unreachable however seems working", "d": "1/2018"}, {"body": "thanks update close issue still happens reopen", "d": "1/2018"}, {"body": "provide proof concept jsbincom jsfiddlenet would preferred", "d": "1/2018"}, {"body": "sorry got kinda busy time put one together tomorrow nite", "d": "1/2018"}, {"body": "issue template asked test case nt see nt provided information besides method name amp browser enough might better look help stack overflow first", "d": "1/2018"}, {"body": "sorry new take care later solved thank", "d": "1/2018"}, {"body": "decided last stable ios android go away", "d": "1/2018"}, {"body": "thank opening issue security vulnerability refers ways jquery abused open possibility xss attack usually attaching unsanitized user input dom best guard vulnerabilities ultimately impossible guard overly critical bit ridiculous list vulnerabilities lowerlevel api like jquery wraps native apis always open abuse rather see warning update jquery suggests sanitizing user input nt anything worry", "d": "1/2018"}, {"body": "likely related message says update jquery problem go away also affect request data crossorigin untrusted domains without specifying", "d": "1/2018"}, {"body": "things issue template asked ticket provide test case", "d": "1/2018"}, {"body": "test case", "d": "1/2018"}, {"body": "test case simplest possible set code shows problem meager information sounds like new bootstrap nt compatible jquery however huge app lots code could due anything goal test case help identify problem without one ca nt much", "d": "1/2018"}, {"body": "give exact place jquery crashes think would shorter faster way give wrong else give repro minimum requested", "d": "1/2018"}, {"body": "probably nt going help need know got might want see effect changing jquery versions bootstrap versions trying browsers", "d": "1/2018"}, {"body": "ok get back assume attach repro issue", "d": "1/2018"}, {"body": "template said like case site like jsfiddlenet jsbincom easily try share", "d": "1/2018"}, {"body": "ok", "d": "1/2018"}, {"body": "fyi bootstrap documentation use jquery slim version everything fine codepen use latest bs jquery full version fine", "d": "1/2018"}, {"body": "bootstrap switches bootstrap datetimepicker many things sure bootstrap jquery fine project absolutely nothing however case world repro soon", "d": "1/2018"}, {"body": "getting error updated bootstrap looks like issue lies bootstrap jquery least default position said could look test case", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "mgol since commented packagelock pr maybe something look getting fixed", "d": "1/2018"}, {"body": "oops thanks report wonder happened cc timmywil", "d": "1/2018"}, {"body": "problem version deps object empty", "d": "1/2018"}, {"body": "tag main jquery repo also extra deps fine object empty", "d": "1/2018"}, {"body": "thanks banged head hour wondering kept getting npm errors", "d": "1/2018"}, {"body": "banging head hour", "d": "1/2018"}, {"body": "ca nt help notice dependencies exactly match mention perhaps something went haywire release process would account appearing", "d": "1/2018"}, {"body": "updates thread", "d": "1/2018"}, {"body": "yea weird nt know happened release dependencies jquery dependencies", "d": "1/2018"}, {"body": "know happened release using npm adds dependencies installed dependencies used needed add option prevent immediate release fix", "d": "1/2018"}, {"body": "timmywil used current master project npm stuff fixed", "d": "1/2018"}, {"body": "frankdspeed generated tag", "d": "1/2018"}, {"body": "timmywil probally anyway need wait upgrade applications broken many packages requiring jquery latest doomed need wait ca nt hotfix much packages hope get done learnd also backup nodemodules folder dev", "d": "1/2018"}, {"body": "frankdspeed fine need get new release", "d": "1/2018"}, {"body": "released checked packagejson dependencies empty expected fine apologize inconvenience", "d": "1/2018"}, {"body": "pulled issue indeed fixed side thanks", "d": "1/2018"}, {"body": "also confirm fixed installed materializecss latest timmywil thank jquery team fast reaction happens developers know", "d": "1/2018"}, {"body": "elements document thus nt measurable width height example consider document css rule actual width height document would match natural dimensions image want value browser provides properties use", "d": "1/2018"}, {"body": "jquery chrome macos", "d": "1/2018"}, {"body": "might actually chrome bug since also call wrong url method post", "d": "1/2018"}, {"body": "filed bug chrome issue tracker ca nt reproduce using xml example using chrome linux mint", "d": "1/2018"}, {"body": "ajax requests asynchronous everything correct please look programming help stack overflow", "d": "1/2018"}, {"body": "nt look like jquery issue please look help stack overflow", "d": "1/2018"}, {"body": "found fault thank u", "d": "1/2018"}, {"body": "problem nt passing trying", "d": "1/2018"}, {"body": "trying remove event handler", "d": "1/2018"}, {"body": "expecting looks like delegated event handler attached delegated", "d": "1/2018"}, {"body": "turn possibility select text page turn possibility select text page", "d": "1/2018"}, {"body": "yes delegated handler js document selectstart dragstart function e epreventdefault document selectstart dragstart", "d": "1/2018"}, {"body": "actually nt know source taken think work work also currently work", "d": "1/2018"}, {"body": "nt work way probably get help stackoverflow since nt bug", "d": "1/2018"}, {"body": "may remove support", "d": "1/2018"}, {"body": "jquery migrate help find problems", "d": "1/2018"}, {"body": "asking faster sure bug issue", "d": "1/2018"}, {"body": "problem contains problem jquery nt parse idxyz part idxyz contains xyz valid selector queryselectorall takes slow path", "d": "1/2018"}, {"body": "oh related ticket sure impact real code timings likely based tight loop high iterations", "d": "1/2018"}, {"body": "correct still nt see reason make code pessimization greatly improved simple regex change", "d": "1/2018"}, {"body": "sure give try want keep mind additional regex complexity nt reduce performance common case", "d": "1/2018"}, {"body": "course btw option store parsed selector structure current jquery implementation parses selector string time runs", "d": "1/2018"}, {"body": "plumbing already sizzle case complex selectors nt want reimplement inside jquery optimize rare cases long term proposed merging sizzle jquery anything think would eliminate need many optimizations", "d": "1/2018"}, {"body": "btw expected time release", "d": "1/2018"}, {"body": "thank opening issue trying pull valid bits running separately idea gets extremely complicated besides one selectors potential check lot stuff slow doubt running attribute part separately would make much difference performance slow part invalid part much except recommend giving big block text", "d": "1/2018"}, {"body": "jquery idx find contains works much faster one selector due optimization queryselectorall first part easily split optimized jquery going hard", "d": "1/2018"}, {"body": "much faster would definitely run qsa would less text working learning site recommends things like sizzle extensions reason however sizzle already certain simple selectors like id class already take care common cases nt think worth adding attribute also nt think realize implications behind suggestion going run every valid part selector qsa matches selectors like complete rewrite sizzle honest exactly may happen future roadmap thing simple enhancement", "d": "1/2018"}, {"body": "well yes always thought jquery working way holds parse tree cache parse selectors time surprise see na\u00efve implementation btw performance issues reality due bad design going make drastically less queries", "d": "1/2018"}, {"body": "intentionally leave complex cases alone nt want reimplement escaping logic situations real code lack optimization makes difference typically examples given show sort tight loop selecting things times similar nt realistic", "d": "1/2018"}, {"body": "yes real word scenario need use selector id containing colon case simple getelementbyid times faster jquery btw queryselectorall nt think logic complex also many css selectors parsers used inspiration", "d": "1/2018"}, {"body": "know want something literal characters would need escaped css use", "d": "1/2018"}, {"body": "solution means need parse selector make optimization path exactly jquery", "d": "1/2018"}, {"body": "thanks opening issue idea behind catch common cases meant get overly complicated one common cases fast enough", "d": "1/2018"}, {"body": "actually sizzle already right regexp reason jquery nt use sizzle implementation miss thanks", "d": "1/2018"}, {"body": "meant catch every selector quick pass make common selectors like id class bit faster sizzle handles rest much complicated regex patterns meant match selector spec", "d": "1/2018"}, {"body": "timmywil small addition handling escaping small enough", "d": "1/2018"}, {"body": "instead w w w w w w", "d": "1/2018"}, {"body": "please review new pr smaller change", "d": "1/2018"}, {"body": "description sorts array dom elements place duplicates removed note works arrays dom elements strings numbers api doc", "d": "1/2018"}, {"body": "thanks opening issue microperformance improvement real use case performance good enough almost cases nt actually see suggestion improve jquery", "d": "1/2018"}, {"body": "difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements rare anyway solution exactly would recommend learning site ca nt remove", "d": "1/2018"}, {"body": "thanks report jquery doc imo davide messaggio originale oggetto jqueryjquery add tooo sloooooow da timmy willison jqueryjquery cc sdav author difference add also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove uniquesort add receiving authored threadreply email directly view github mute thread apiversion publisher apikey name github entity externalkey githubjqueryjquery title jqueryjquery subtitle github repository mainimageurl github url difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove action name view issue url", "d": "1/2018"}, {"body": "thanks opening issue however repo bug tickets feature requests find support stackoverflowcom jquery gitter", "d": "1/2018"}, {"body": "timmywil thank guiding redirecting", "d": "1/2018"}, {"body": "thanks opening issue jquery lowerlevel library convenience wrappers around native apis jquery vulnerable things jquery would compromise security site like things vanilla js known vulnerabilities many ways ridiculous ultimately users responsible security sites jquery still best keep users making silly mistakes jquery misused abused many ways would impossible impenetrable safeguards point may actually nothing wrong site tell warning nt help", "d": "1/2018"}, {"body": "thanks timmywil response please nt show jquery vulnerablity example maven project found suppress code node js project", "d": "1/2018"}, {"body": "scan tool may option prevent specific vulnerabilities shown know unaffected beyond scope jquery bug tracker though would need look docs", "d": "1/2018"}, {"body": "seems like jquery ui bug jquery one subpixel values becoming important highresolution displays seems like would nt want fix ui bug truncating values", "d": "1/2018"}, {"body": "jqueryui bug reverting previous jquery library fix yes agree truncation would nt solution", "d": "1/2018"}, {"body": "reason major version bump make changes added things could potentially break code semver intends signal fractional dimensions documented migration guide", "d": "1/2018"}, {"body": "thank posted jqueryui forum", "d": "1/2018"}, {"body": "ca nt say sure without test case looks like rebinding handler navigation single page full page reload previous handler would still case expected behavior remove element jquery somehow jquery know get rid handler", "d": "1/2018"}, {"body": "thanks report please provide test case jsfiddle js bin show issue", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "thank opening issue however please follow bug report template provided clicking new issue unearthed old issue without test case specific problem likely need investigate issue stackoverflowcom", "d": "1/2018"}, {"body": "side note wonder java still required order execute tests considering chrome amp firefox nt supported java time tests work java required succeed also removed tests element causing problems outdated java alerts ie", "d": "1/2018"}, {"body": "markelog mgol work fine note however important difference others uses chromeheadless starts ends automatically singlerun whereas others bring karma dashboard browser choice click debug start tests pressed debug press debug documented gruntfile idea want run specific browser want able debug eg set breakpoint rerun tests extra step pressing debug probably nice karma could use improvement consider alternative without debug mode browser visually open see tests run anything qunit devtools like breakpoints rerunning individual tests karma close browser soon tests finish unfortunately enabling debug mode meaning browser stays open starting automatically mutually exclusive step start debug manually nt see good way change perhaps compromise rename task hint desired also add subtask starts chrome firefox without debug mode think next bug report karma closes browser something answer use karma chromedebug instead", "d": "1/2018"}, {"body": "think merge ticket need inventory grunt npm commands want userfacing ensure work", "d": "1/2018"}, {"body": "wish command updated description ticket", "d": "1/2018"}, {"body": "save downloaded file html file kevin", "d": "1/2018"}, {"body": "reopened valid test case", "d": "1/2018"}, {"body": "testcase want see clearly converting using parsefloat issue use come check width using clientwidth goes getcomputedstyle get width later convert px", "d": "1/2018"}, {"body": "bharatnishad jsfiddle js bin run clearly see expect get screenshot middle execution nt really help much nt know code getting", "d": "1/2018"}, {"body": "see weird situation use come middle execution functionality kept element display none middle event handler file execute make true try compute width browser jquery width functionality get two time goes jquery width function get correct browser width happens time time get width call many times width function rest time may get correct width even time calling width function produce jsfiddle online see issue think time elemoffsetheight populate try take width computed style width function means jquery width function val name width elemoffsetwidth elemoffsetheight styles getstyles elem val lt val null fall back computed uncomputed css necessary val curcss elem name styles try get getstyles var getstyles function elem return elemownerdocumentdefaultviewgetcomputedstyle elem null function curcss elem name computed var width minwidth maxwidth ret style elemstyle seen elemownerdocument style attribue width taking value ret computedgetpropertyvalue name computed name ret nt know setting width windowdoucment take style width attribute hope gave enough information want live demo arrange video call show", "d": "1/2018"}, {"body": "volunteer time project lack capacity debug full application code especially video call provide succinct test case demonstrating problem nt enough information even verify one", "d": "1/2018"}, {"body": "progress great thing thankful plethora frameworks chose building web sites apps doubt jquery going away anytime soon reason reason c sqlite going away old hype always exist current shiny new thing sometimes justified sometimes substitute confidence knowing using seasoned stable thoroughly tested well documented library huge install base knowledge base plugin ecosystem usual always question choosing right tool job point still many jobs jquery still right tool probably continue", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "possibly related", "d": "1/2018"}, {"body": "progress update set edge locally seeing failures investigate", "d": "1/2018"}, {"body": "fixing fix might able incorporate", "d": "1/2018"}, {"body": "seems android call ontimeout handler test added added ontimeout responder test ensures actually respond native calls browser never calls nt necessarily something wrong see options add workaround use settimeout call ontimeout manually sounds errorprone hacky nt run test android lean towards", "d": "1/2018"}, {"body": "well run tests holds excludes android", "d": "1/2018"}, {"body": "pr mgol noted accessing object directly rather potential break case replaced rather amended also could nt find mention property documentation inclined leave asis since ca nt move deprecated js nothing done migrateapi nothing", "d": "1/2018"}, {"body": "intended expose next major well create issue remove jquerycssprops", "d": "1/2018"}, {"body": "looks nt one documented undocumented features nt see sign discussed stackoverflow example unfortunately searching names somewhat common variable names possible missed fine either way far removal seems safe created issue migrate", "d": "1/2018"}, {"body": "looks like fixed ie jsbin ow gbcr lt anyone else confirm update nevermind see thanks core team contributors", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "hi delmarwichnieski solve try try catch could fix", "d": "1/2018"}, {"body": "issue resolved versions jquery", "d": "1/2018"}, {"body": "yet make next release", "d": "1/2018"}, {"body": "timmywil case milestone get updated points", "d": "1/2018"}, {"body": "working make release", "d": "1/2018"}, {"body": "jquery released load function deprecated use jquery load function previous version jquery", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "assigned track issue", "d": "1/2018"}, {"body": "anarcat cve incorrect stable jquery version suffers issue regression happened preparation jquery fixed released", "d": "1/2018"}, {"body": "mgol well based cve snyk database says versions lt gt sure parsed version numbers right read releases eg vulnerable happy clarify description cve better idea going want submit update cve", "d": "1/2018"}, {"body": "never submitted update cve feel free range database incorrect affected version earlier amp later nt exhibit issue cves assigned bugs existing prerelease versions range changed", "d": "1/2018"}, {"body": "acknowledged carry mitre sure marked vulnerability snyke therefore mitre done homework better arguably nt much information available begin without digging deep source code worth requested cve form strongly encourage security researchers upstream project systematically request cve assignments discovering andor releasing security issues makes tracking much easier across ecosystem upstream vendors downstream distributors linux distros thanks", "d": "1/2018"}, {"body": "solve problem", "d": "1/2018"}, {"body": "assigned track issue", "d": "1/2018"}, {"body": "docsonly action see actual removal occur", "d": "1/2018"}, {"body": "still broken issue tracked one future milestones", "d": "1/2018"}, {"body": "yes ticket still open milestone scroll top ticket say like submit pr review", "d": "1/2018"}]