[{"title": "using jquery version locally working", "body": "description per jquery documentation suppose work local disk well code works fine reference link jquery lib versions problem whenever try fallback use local downloaded file version fails relevant code simple tried several workarrounds including pasting whole file html script none worked neither chrome firefox windows tried similar following well error message detailed error referenceerror defined detailed error typeerror pageexecute undefined additionaly times get also network error file found even though file located even copied parent folder child folders eliminate dought downloaded", "num": "3957", "d": "1/2018"}, {"title": "wrong type check isfunction", "body": "introduced bug typecheck correct method used produces failing unit tests", "num": "3955", "d": "1/2018"}, {"title": "datedropper datedropper dateformat ddmmyy val returns null safari browser", "body": "using jquery function get value date type every browser getting value except safari one idea happening", "num": "3954", "d": "1/2018"}, {"title": "codejquerycom cdn responding", "body": "anyone else facing problems jquery cdn codejquerycom apps fail load jquery dependency", "num": "3953", "d": "1/2018"}, {"title": "patternexec run non sanitized string returned server", "body": "venerability exists within jquery library within ajax component third parameter callback jqxhr object method getresponseheader method may called key connection access response headers parsing headers method calls exec responseheadersstring without sanitizing string client reach third party service man middle attack performed malicious code contained headers could executed client machine practice vulnerability blocked modern browsers eg chrome firefox safari message put console reading page allowed display insecure content xxxx", "num": "3952", "d": "1/2018"}, {"title": "nt fadein method work firefox browser fadeout work situation please", "body": "description link test case", "num": "3951", "d": "1/2018"}, {"title": "support last ios versions drop android browser jquery", "body": "description currently support browsers amp versions exceptions ie ios amp android wrt ie obvious ca nt switch amp scheme browser dead support legacy reasons android browser still around android browser market share android ca nt drop android browser yet ios different nt progress quickly desktop rollingrelease browsers safari updated separately os people update os pretty quickly stats show hardly anyone uses ios version older given moment apple stats provide insight nt separate older versions currently explicitly support ios means long nt release new major jquery version test amp ios versions currently could limit specific number ios versions supported line desktop browsers feel amp might little perhaps limit last stable versions would happen jquery amp newer try limit patchminor releases link test case na", "num": "3950", "d": "1/2018"}, {"title": "found potential security vulnerability repository granted security alert access", "body": "found potential security vulnerability repository granted security alert access", "num": "3949", "d": "1/2018"}, {"title": "exception thrown caught jquery bootstrap", "body": "mvc app bootstrap jquery use nugget update bootstrap application crashes immediately error exception thrown caught downgrade bootstrap everything works perfectly something nt understand definitely something wrong jquery bootstrap", "num": "3948", "d": "1/2018"}, {"title": "bundled packagejson dependencies empty leads npm errors", "body": "description packagejson dependency npm static version npm nt compatible npm terms npm dependency dezalgo link test case none", "num": "3947", "d": "1/2018"}, {"title": "bundled", "body": "description link test case", "num": "3946", "d": "1/2018"}, {"title": "get image dimensions new created element", "body": "description want create new image element get dimensions information fails jquery works javascript wonder ca nt get information jquery improper usage code javascript var src jquery fail case get image dimensions var src src load function consolelog jquery output jquery javascript javascript result expect var new image src load function consolelog javascript output javascript run code chrome firefox fail first jquery case link test case testing environments jquery ubuntu firefox chrome", "num": "3945", "d": "1/2018"}, {"title": "ajax change url", "body": "consider following ajax request call correct url like consider request expected url called strange behaviour call instead expected sure whats happening tried settings working working leading call", "num": "3944", "d": "1/2018"}, {"title": "order script executed", "body": "hello created script executed order script times log console index value datas alert array lenght alert get run amp get function script times log console index value datas alert array lenght times get run amp get function nt know wrong maybe anyone help regards szymon", "num": "3943", "d": "1/2018"}, {"title": "question", "body": "public class registerviewmodel required datatype datatypeemailaddress stringlength errormessage must least max characters long minimumlength display name \u90ae\u7bb1 public string email get set next viewcshtml model registerviewmodel viewdata title register viewdata title create new account register section scripts await htmlpartialasync validationscriptspartial question eventhrouth submit form data also remind danger user name must letters digilts named username input", "num": "3942", "d": "1/2018"}, {"title": "support object selector", "body": "description support object selector js successfully setup event handler document selectstart dragstart document function e epreventdefault unsuccessfully remove event handler document selectstart dragstart document looks like problem second argument work string link test case", "num": "3941", "d": "1/2018"}, {"title": "jqueryfnload uncaught typeerror urlindexof function", "body": "description getting error getting traced jqueryfnload function jqueryfnload function begins jqueryfnload function begins lines removed new version error occurs try run snippet code definition load within iframe creation causing typeerror link test case", "num": "3940", "d": "1/2018"}, {"title": "jquery nt optimize attribute selector contains", "body": "selector works noticeable faster since optimized documentqueryselectorall", "num": "3938", "d": "1/2018"}, {"title": "jquery nt optimize identifier backslash", "body": "jquery nt optimize selector x documentgetelementbyid x problem regex nt recognize backslashes escape character", "num": "3937", "d": "1/2018"}, {"title": "small probability work", "body": "environment jqueryversion chrome latest firefox latest example view codepen", "num": "3935", "d": "1/2018"}, {"title": "performance greatly improved", "body": "combined selectors js aperformancenow lt jquery div span divspan input label bperformancenow consolelog ba separate selectors js aperformancenow lt jquery div jquery span jquery divspan jquery input jquery label bperformancenow consolelog ba documentqueryselectorall combined js aperformancenow lt documentqueryselectorall div span divspan input label bperformancenow consolelog ba documentqueryselectorall separated js aperformancenow lt documentqueryselectorall div documentqueryselectorall span documentqueryselectorall divspan documentqueryselectorall input documentqueryselectorall label bperformancenow consolelog ba documentgetelementsbytagname works way faster js aperformancenow lt documentgetelementsbytagname div documentgetelementsbytagname span documentgetelementsbytagname divspan documentgetelementsbytagname input documentgetelementsbytagname label bperformancenow consolelog ba", "num": "3934", "d": "1/2018"}, {"title": "add tooo sloooooow", "body": "add slow happens adding lot elements previous selection problem fixed many ways also stupid ways give super results really frustating chrome latest version firefox slower responds good manner check link sample adding rows rows takes seconds wait bit result alert stupid second fix respond istantly cache comment first part want jsfiddle", "num": "3933", "d": "1/2018"}, {"title": "jquery create html graph", "body": "hi team new jquery want good document learn getting actually want display html bar chart takes input excel sheet generate graph bar chart display html time open html read excel sheet generate graph facing lot issue able read data plot graph please help direct get knowledge read demo example understand work thanks ashissh", "num": "3930", "d": "1/2018"}, {"title": "vulnerability jquery", "body": "hello please would like test security project scan found vulnerability jquery vulnerable known vulnerabilities affecting installed version jquery framework exchanges data using javascript object notation json jquery framework exchanges data using javascript object notation json without associated protection scheme allows remote attackers obtain data via web page retrieves data url src attribute script element captures data using javascript code aka javascript hijacking suppress thanks", "num": "3927", "d": "1/2018"}, {"title": "jquery breaks droppabledraggable subpixel widthheight", "body": "description issue using jquery draggable elements width height subpixels eg using em rem units draggables fly back source position even configured snap stay target expected behaviour snap remain target browsers affected recent chrome firefox ie link test case minimal test case reproduce drag white boxes onto drop targets gt bounce back bug css remove subpixels line gt works expected leave subpixels swap jquery library first html lines gt works subpixels use different values subpixels get different failures draggable works one works etc", "num": "3926", "d": "1/2018"}, {"title": "jquery cache cause memory leak", "body": "hi already asked question one replied spa page events bind using jquery page load diagnosing app memory leak issues testing navigating pages back forth looking heap snapshot many detached dom trees caused jquery cache size growing navigating pages potential memory leak also tested unbinding events page load unbinding events cache size stable need unbind every events every pages cache holds dom even dom removed document need add info like test fiddle", "num": "3925", "d": "1/2018"}, {"title": "deferred fail throwing uncaught promise chrome", "body": "odd behaviour jquery ajax interactions deferred fail deffered catch chrome firefox writing callback like ajax call fails called expected another error thrown browser shown inspector tools change behaviour operates expected uncaught promise errors also executes twice understand docs appears deferred fail deferred catch thing documented add handlers called deferred object rejected subtlety two methods missing even docs suggest using fail correct behaviour done meantime replacing fail catch seems solving issue", "num": "3924", "d": "1/2018"}, {"title": "syntaxerror jquery elqueryselectorall x line ie", "body": "resolve error jquery javascript library ie syntaxerror elqueryselectorall x inside code assert function el elinnerhtml", "num": "3923", "d": "1/2018"}, {"title": "infrastructure grunt commands amp check work", "body": "ticket need check new maybe old ones grunt commands fit example work jquery builded execute though still work grunt commands like appear work commands maybe others either fixed documented removed order confuse user documentation needs provided readmemd side note wonder java still required order execute tests need provided additional documentation provide reference cc krinkle", "num": "3922", "d": "1/2018"}, {"title": "grunt commands amp work", "body": "executing commands mentioned header tests run cc krinkle", "num": "3921", "d": "1/2018"}, {"body": "think bug follow issue template post test case showing broken want help jquery works probably best ask stackoverflow", "d": "1/2018"}, {"body": "async attribute also might running page locally without dev server wo nt work current browsers might want ask stack overflow resolve problems", "d": "1/2018"}, {"body": "thanks helpfull reply syntax used async someone stackoverflow recommended way work without well dev server elaborate use local copy jquery lib", "d": "1/2018"}, {"body": "use local copy still need run local dev server serve filesystem please look help stack overflow though", "d": "1/2018"}, {"body": "please provide link reduced test case demonstrating issue", "d": "1/2018"}, {"body": "basically failing unit tests", "d": "1/2018"}, {"body": "link unit tests test case need something reduced demonstrate clear issue isfunction lot going tests one failures follows codepath never touches jquery undefined supposed script tag led entirely unclear", "d": "1/2018"}, {"body": "btw good places start", "d": "1/2018"}, {"body": "well showed exact commit change already wrote always compiled jquery iteration try create reduced testcase find time week", "d": "1/2018"}, {"body": "showed exact commit change already wrote mean nt help us require test case forced sift everyone applications ai nt nobody got time", "d": "1/2018"}, {"body": "try create reduced testcase find time week", "d": "1/2018"}, {"body": "supposed answer getattribute undefined supposed script tag led isfunction entirely unclear", "d": "1/2018"}, {"body": "supposed answer see mean git bisect led fair enough still unclear two related thank get test case happy take closer look", "d": "1/2018"}, {"body": "issue seems related plugin jquery also nt provided test case issue template asked create need please look help stack overflow", "d": "1/2018"}, {"body": "file specifically nt load", "d": "1/2018"}, {"body": "mgol whole domain unreachable however seems working", "d": "1/2018"}, {"body": "thanks update close issue still happens reopen", "d": "1/2018"}, {"body": "provide proof concept jsbincom jsfiddlenet would preferred", "d": "1/2018"}, {"body": "sorry got kinda busy time put one together tomorrow nite", "d": "1/2018"}, {"body": "issue template asked test case nt see nt provided information besides method name amp browser enough might better look help stack overflow first", "d": "1/2018"}, {"body": "sorry new take care later solved thank", "d": "1/2018"}, {"body": "decided last stable ios android go away", "d": "1/2018"}, {"body": "thank opening issue security vulnerability refers ways jquery abused open possibility xss attack usually attaching unsanitized user input dom best guard vulnerabilities ultimately impossible guard overly critical bit ridiculous list vulnerabilities lowerlevel api like jquery wraps native apis always open abuse rather see warning update jquery suggests sanitizing user input nt anything worry", "d": "1/2018"}, {"body": "likely related message says update jquery problem go away also affect request data crossorigin untrusted domains without specifying", "d": "1/2018"}, {"body": "things issue template asked ticket provide test case", "d": "1/2018"}, {"body": "test case", "d": "1/2018"}, {"body": "test case simplest possible set code shows problem meager information sounds like new bootstrap nt compatible jquery however huge app lots code could due anything goal test case help identify problem without one ca nt much", "d": "1/2018"}, {"body": "give exact place jquery crashes think would shorter faster way give wrong else give repro minimum requested", "d": "1/2018"}, {"body": "probably nt going help need know got might want see effect changing jquery versions bootstrap versions trying browsers", "d": "1/2018"}, {"body": "ok get back assume attach repro issue", "d": "1/2018"}, {"body": "template said like case site like jsfiddlenet jsbincom easily try share", "d": "1/2018"}, {"body": "ok", "d": "1/2018"}, {"body": "fyi bootstrap documentation use jquery slim version everything fine codepen use latest bs jquery full version fine", "d": "1/2018"}, {"body": "bootstrap switches bootstrap datetimepicker many things sure bootstrap jquery fine project absolutely nothing however case world repro soon", "d": "1/2018"}, {"body": "getting error updated bootstrap looks like issue lies bootstrap jquery least default position said could look test case", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "mgol since commented packagelock pr maybe something look getting fixed", "d": "1/2018"}, {"body": "oops thanks report wonder happened cc timmywil", "d": "1/2018"}, {"body": "problem version deps object empty", "d": "1/2018"}, {"body": "tag main jquery repo also extra deps fine object empty", "d": "1/2018"}, {"body": "thanks banged head hour wondering kept getting npm errors", "d": "1/2018"}, {"body": "banging head hour", "d": "1/2018"}, {"body": "ca nt help notice dependencies exactly match mention perhaps something went haywire release process would account appearing", "d": "1/2018"}, {"body": "updates thread", "d": "1/2018"}, {"body": "yea weird nt know happened release dependencies jquery dependencies", "d": "1/2018"}, {"body": "know happened release using npm adds dependencies installed dependencies used needed add option prevent immediate release fix", "d": "1/2018"}, {"body": "timmywil used current master project npm stuff fixed", "d": "1/2018"}, {"body": "frankdspeed generated tag", "d": "1/2018"}, {"body": "timmywil probally anyway need wait upgrade applications broken many packages requiring jquery latest doomed need wait ca nt hotfix much packages hope get done learnd also backup nodemodules folder dev", "d": "1/2018"}, {"body": "frankdspeed fine need get new release", "d": "1/2018"}, {"body": "released checked packagejson dependencies empty expected fine apologize inconvenience", "d": "1/2018"}, {"body": "pulled issue indeed fixed side thanks", "d": "1/2018"}, {"body": "also confirm fixed installed materializecss latest timmywil thank jquery team fast reaction happens developers know", "d": "1/2018"}, {"body": "elements document thus nt measurable width height example consider document css rule actual width height document would match natural dimensions image want value browser provides properties use", "d": "1/2018"}, {"body": "jquery chrome macos", "d": "1/2018"}, {"body": "might actually chrome bug since also call wrong url method post", "d": "1/2018"}, {"body": "filed bug chrome issue tracker ca nt reproduce using xml example using chrome linux mint", "d": "1/2018"}, {"body": "ajax requests asynchronous everything correct please look programming help stack overflow", "d": "1/2018"}, {"body": "nt look like jquery issue please look help stack overflow", "d": "1/2018"}, {"body": "found fault thank u", "d": "1/2018"}, {"body": "problem nt passing trying", "d": "1/2018"}, {"body": "trying remove event handler", "d": "1/2018"}, {"body": "expecting looks like delegated event handler attached delegated", "d": "1/2018"}, {"body": "turn possibility select text page turn possibility select text page", "d": "1/2018"}, {"body": "yes delegated handler js document selectstart dragstart function e epreventdefault document selectstart dragstart", "d": "1/2018"}, {"body": "actually nt know source taken think work work also currently work", "d": "1/2018"}, {"body": "nt work way probably get help stackoverflow since nt bug", "d": "1/2018"}, {"body": "may remove support", "d": "1/2018"}, {"body": "jquery migrate help find problems", "d": "1/2018"}, {"body": "asking faster sure bug issue", "d": "1/2018"}, {"body": "problem contains problem jquery nt parse idxyz part idxyz contains xyz valid selector queryselectorall takes slow path", "d": "1/2018"}, {"body": "oh related ticket sure impact real code timings likely based tight loop high iterations", "d": "1/2018"}, {"body": "correct still nt see reason make code pessimization greatly improved simple regex change", "d": "1/2018"}, {"body": "sure give try want keep mind additional regex complexity nt reduce performance common case", "d": "1/2018"}, {"body": "course btw option store parsed selector structure current jquery implementation parses selector string time runs", "d": "1/2018"}, {"body": "plumbing already sizzle case complex selectors nt want reimplement inside jquery optimize rare cases long term proposed merging sizzle jquery anything think would eliminate need many optimizations", "d": "1/2018"}, {"body": "btw expected time release", "d": "1/2018"}, {"body": "thank opening issue trying pull valid bits running separately idea gets extremely complicated besides one selectors potential check lot stuff slow doubt running attribute part separately would make much difference performance slow part invalid part much except recommend giving big block text", "d": "1/2018"}, {"body": "jquery idx find contains works much faster one selector due optimization queryselectorall first part easily split optimized jquery going hard", "d": "1/2018"}, {"body": "much faster would definitely run qsa would less text working learning site recommends things like sizzle extensions reason however sizzle already certain simple selectors like id class already take care common cases nt think worth adding attribute also nt think realize implications behind suggestion going run every valid part selector qsa matches selectors like complete rewrite sizzle honest exactly may happen future roadmap thing simple enhancement", "d": "1/2018"}, {"body": "well yes always thought jquery working way holds parse tree cache parse selectors time surprise see na\u00efve implementation btw performance issues reality due bad design going make drastically less queries", "d": "1/2018"}, {"body": "intentionally leave complex cases alone nt want reimplement escaping logic situations real code lack optimization makes difference typically examples given show sort tight loop selecting things times similar nt realistic", "d": "1/2018"}, {"body": "yes real word scenario need use selector id containing colon case simple getelementbyid times faster jquery btw queryselectorall nt think logic complex also many css selectors parsers used inspiration", "d": "1/2018"}, {"body": "know want something literal characters would need escaped css use", "d": "1/2018"}, {"body": "solution means need parse selector make optimization path exactly jquery", "d": "1/2018"}, {"body": "thanks opening issue idea behind catch common cases meant get overly complicated one common cases fast enough", "d": "1/2018"}, {"body": "actually sizzle already right regexp reason jquery nt use sizzle implementation miss thanks", "d": "1/2018"}, {"body": "meant catch every selector quick pass make common selectors like id class bit faster sizzle handles rest much complicated regex patterns meant match selector spec", "d": "1/2018"}, {"body": "timmywil small addition handling escaping small enough", "d": "1/2018"}, {"body": "instead w w w w w w", "d": "1/2018"}, {"body": "please review new pr smaller change", "d": "1/2018"}, {"body": "description sorts array dom elements place duplicates removed note works arrays dom elements strings numbers api doc", "d": "1/2018"}, {"body": "thanks opening issue microperformance improvement real use case performance good enough almost cases nt actually see suggestion improve jquery", "d": "1/2018"}, {"body": "difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements rare anyway solution exactly would recommend learning site ca nt remove", "d": "1/2018"}, {"body": "thanks report jquery doc imo davide messaggio originale oggetto jqueryjquery add tooo sloooooow da timmy willison jqueryjquery cc sdav author difference add also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove uniquesort add receiving authored threadreply email directly view github mute thread apiversion publisher apikey name github entity externalkey githubjqueryjquery title jqueryjquery subtitle github repository mainimageurl github url difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove action name view issue url", "d": "1/2018"}, {"body": "thanks opening issue however repo bug tickets feature requests find support stackoverflowcom jquery gitter", "d": "1/2018"}, {"body": "timmywil thank guiding redirecting", "d": "1/2018"}, {"body": "thanks opening issue jquery lowerlevel library convenience wrappers around native apis jquery vulnerable things jquery would compromise security site like things vanilla js known vulnerabilities many ways ridiculous ultimately users responsible security sites jquery still best keep users making silly mistakes jquery misused abused many ways would impossible impenetrable safeguards point may actually nothing wrong site tell warning nt help", "d": "1/2018"}, {"body": "thanks timmywil response please nt show jquery vulnerablity example maven project found suppress code node js project", "d": "1/2018"}, {"body": "scan tool may option prevent specific vulnerabilities shown know unaffected beyond scope jquery bug tracker though would need look docs", "d": "1/2018"}, {"body": "seems like jquery ui bug jquery one subpixel values becoming important highresolution displays seems like would nt want fix ui bug truncating values", "d": "1/2018"}, {"body": "jqueryui bug reverting previous jquery library fix yes agree truncation would nt solution", "d": "1/2018"}, {"body": "reason major version bump make changes added things could potentially break code semver intends signal fractional dimensions documented migration guide", "d": "1/2018"}, {"body": "thank posted jqueryui forum", "d": "1/2018"}, {"body": "ca nt say sure without test case looks like rebinding handler navigation single page full page reload previous handler would still case expected behavior remove element jquery somehow jquery know get rid handler", "d": "1/2018"}, {"body": "thanks report please provide test case jsfiddle js bin show issue", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "thank opening issue however please follow bug report template provided clicking new issue unearthed old issue without test case specific problem likely need investigate issue stackoverflowcom", "d": "1/2018"}, {"body": "side note wonder java still required order execute tests considering chrome amp firefox nt supported java time tests work java required succeed also removed tests element causing problems outdated java alerts ie", "d": "1/2018"}, {"body": "markelog mgol work fine note however important difference others uses chromeheadless starts ends automatically singlerun whereas others bring karma dashboard browser choice click debug start tests pressed debug press debug documented gruntfile idea want run specific browser want able debug eg set breakpoint rerun tests extra step pressing debug probably nice karma could use improvement consider alternative without debug mode browser visually open see tests run anything qunit devtools like breakpoints rerunning individual tests karma close browser soon tests finish unfortunately enabling debug mode meaning browser stays open starting automatically mutually exclusive step start debug manually nt see good way change perhaps compromise rename task hint desired also add subtask starts chrome firefox without debug mode think next bug report karma closes browser something answer use karma chromedebug instead", "d": "1/2018"}, {"body": "think merge ticket need inventory grunt npm commands want userfacing ensure work", "d": "1/2018"}, {"body": "wish command updated description ticket", "d": "1/2018"}, {"body": "save downloaded file html file kevin", "d": "1/2018"}, {"body": "reopened valid test case", "d": "1/2018"}, {"body": "testcase want see clearly converting using parsefloat issue use come check width using clientwidth goes getcomputedstyle get width later convert px", "d": "1/2018"}, {"body": "bharatnishad jsfiddle js bin run clearly see expect get screenshot middle execution nt really help much nt know code getting", "d": "1/2018"}, {"body": "see weird situation use come middle execution functionality kept element display none middle event handler file execute make true try compute width browser jquery width functionality get two time goes jquery width function get correct browser width happens time time get width call many times width function rest time may get correct width even time calling width function produce jsfiddle online see issue think time elemoffsetheight populate try take width computed style width function means jquery width function val name width elemoffsetwidth elemoffsetheight styles getstyles elem val lt val null fall back computed uncomputed css necessary val curcss elem name styles try get getstyles var getstyles function elem return elemownerdocumentdefaultviewgetcomputedstyle elem null function curcss elem name computed var width minwidth maxwidth ret style elemstyle seen elemownerdocument style attribue width taking value ret computedgetpropertyvalue name computed name ret nt know setting width windowdoucment take style width attribute hope gave enough information want live demo arrange video call show", "d": "1/2018"}, {"body": "volunteer time project lack capacity debug full application code especially video call provide succinct test case demonstrating problem nt enough information even verify one", "d": "1/2018"}, {"body": "progress great thing thankful plethora frameworks chose building web sites apps doubt jquery going away anytime soon reason reason c sqlite going away old hype always exist current shiny new thing sometimes justified sometimes substitute confidence knowing using seasoned stable thoroughly tested well documented library huge install base knowledge base plugin ecosystem usual always question choosing right tool job point still many jobs jquery still right tool probably continue", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "possibly related", "d": "1/2018"}, {"body": "progress update set edge locally seeing failures investigate", "d": "1/2018"}, {"body": "fixing fix might able incorporate", "d": "1/2018"}, {"body": "seems android call ontimeout handler test added added ontimeout responder test ensures actually respond native calls browser never calls nt necessarily something wrong see options add workaround use settimeout call ontimeout manually sounds errorprone hacky nt run test android lean towards", "d": "1/2018"}, {"body": "well run tests holds excludes android", "d": "1/2018"}, {"body": "pr mgol noted accessing object directly rather potential break case replaced rather amended also could nt find mention property documentation inclined leave asis since ca nt move deprecated js nothing done migrateapi nothing", "d": "1/2018"}, {"body": "intended expose next major well create issue remove jquerycssprops", "d": "1/2018"}, {"body": "looks nt one documented undocumented features nt see sign discussed stackoverflow example unfortunately searching names somewhat common variable names possible missed fine either way far removal seems safe created issue migrate", "d": "1/2018"}, {"body": "looks like fixed ie jsbin ow gbcr lt anyone else confirm update nevermind see thanks core team contributors", "d": "1/2018"}, {"body": "fixed", "d": "1/2018"}, {"body": "hi delmarwichnieski solve try try catch could fix", "d": "1/2018"}, {"body": "issue resolved versions jquery", "d": "1/2018"}, {"body": "yet make next release", "d": "1/2018"}, {"body": "timmywil case milestone get updated points", "d": "1/2018"}, {"body": "working make release", "d": "1/2018"}, {"body": "jquery released load function deprecated use jquery load function previous version jquery", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "assigned track issue", "d": "1/2018"}, {"body": "anarcat cve incorrect stable jquery version suffers issue regression happened preparation jquery fixed released", "d": "1/2018"}, {"body": "mgol well based cve snyk database says versions lt gt sure parsed version numbers right read releases eg vulnerable happy clarify description cve better idea going want submit update cve", "d": "1/2018"}, {"body": "never submitted update cve feel free range database incorrect affected version earlier amp later nt exhibit issue cves assigned bugs existing prerelease versions range changed", "d": "1/2018"}, {"body": "acknowledged carry mitre sure marked vulnerability snyke therefore mitre done homework better arguably nt much information available begin without digging deep source code worth requested cve form strongly encourage security researchers upstream project systematically request cve assignments discovering andor releasing security issues makes tracking much easier across ecosystem upstream vendors downstream distributors linux distros thanks", "d": "1/2018"}, {"body": "solve problem", "d": "1/2018"}, {"body": "assigned track issue", "d": "1/2018"}, {"body": "docsonly action see actual removal occur", "d": "1/2018"}, {"body": "still broken issue tracked one future milestones", "d": "1/2018"}, {"body": "yes ticket still open milestone scroll top ticket say like submit pr review", "d": "1/2018"}]