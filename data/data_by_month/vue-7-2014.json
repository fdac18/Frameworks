[{"title": "seems broken", "body": "know used utilize worked perfectly fine cooked basicsimple jsfiddle use components amp nt get expected results latest build unless dun goofed ie used sample docs seems replace template content completely children ie missing", "num": "379", "d": "7/2014"}, {"title": "using grouping svg container tag g work templates", "body": "using g tag templates nt seem working jsfiddle g tag jsfiddle without g tag adding mapg fragmentjs seems fix issue mapg maptext mapcircle mapellipse mapline mappath mappolygon mappolyline maprect reason lovin vuejs way awesome job", "num": "378", "d": "7/2014"}, {"title": "vuejs server jsdom", "body": "trying make bothside templating vuejs jsdom seem work mostly still got problems rendered vue component gets undefined content instead proper string template param seems jsdom wo nt fully emulate modern object functions changing data objects vue initialization wo nt result dom updates help", "num": "377", "d": "7/2014"}, {"title": "vrepeat amp vstyle nt work", "body": "like html", "num": "375", "d": "7/2014"}, {"title": "property manipulated ui nt get updated values set code", "body": "example provided example move one amount sliders height slider gets set correct value also test computed even though amount height properties get modified time lines purpose seems provide desired result times times causes ui sync model way force ui updated changing property code", "num": "374", "d": "7/2014"}, {"title": "plan", "body": "", "num": "373", "d": "7/2014"}, {"title": "vmodel working input type hidden", "body": "nt know missed something vmodel nt seem update value value hidden input changes example", "num": "372", "d": "7/2014"}, {"title": "feature filter support function values", "body": "think would great could filter functions created jsfiddle demonstrate provide particular usage examples clear enough", "num": "371", "d": "7/2014"}, {"title": "computed property updating properly", "body": "compute value conjunction two boolean values data object result update access getters boolean values returning result get expected value click b button notice b value remains false c works expected", "num": "370", "d": "7/2014"}, {"title": "default data shared reference viewmodels", "body": "run strange behavior assumed created new instance component would clone values definition instead seems copied everything reference think right way structure use case found one would assume insantiated pages home settings key passed mode however happens time component created user key present pages array gains new settings value means component recreated several times throughout flow program extra values added list quick fix something like ready function think nt intuitive automatically called vue would better solution", "num": "369", "d": "7/2014"}, {"title": "computed properties get called even used", "body": "computed properties seem called unexpectedly initialisation even used purpose thanks", "num": "368", "d": "7/2014"}, {"title": "show view ready shown", "body": "lets assume views first list items second edit form items every view loading logic rest calls loading done view shown works great initial start page loaded switch one view another time new view shown data fully loaded changing current view triggers data loading switches html time causes page content blink little shown data yet loaded solve ok loading logic views parent controller manages views", "num": "367", "d": "7/2014"}, {"title": "bad low level api call", "body": "big deal vuesrcdirectivesonjs reset function reset function var el thisiframebind thiselcontentwindow thisel thishandler amp amp elremoveeventlistener thisarg thishandler added code thishandler amp amp reason init call removeeventlistener thishandler null according specs calls must always handler happens update function thisreset line called thishandler line defined", "num": "366", "d": "7/2014"}, {"title": "vrepeat copies first bound element", "body": "use vrepeat put elements use bindings inside tried vtext repeat statement copies elements first bound child ie using datamodel list example following html wo nt display expected static see jsfiddle", "num": "365", "d": "7/2014"}, {"title": "vstyle working properly", "body": "hi vstyle nt working expected please see jfiddle console also see exception initialization otherwise opacity changes properly width height amp scale", "num": "364", "d": "7/2014"}, {"title": "use amp amp operation expression", "body": "using expression display user gender first variable user null error seems amp amp operation work expected", "num": "363", "d": "7/2014"}, {"title": "best way cleanup vue object", "body": "code clears parent dom using jquery empty function context pjax website sure every event listener created vuejs cleanly removed calls removeeventlistener avoid memory leaks looking code appears unbind public methods remove amp destroy latter right", "num": "362", "d": "7/2014"}, {"title": "vrepeat object differing behavior accessing properties via dot vs bracket notation", "body": "sure bug could arguably design seems like vrepeat nt like accessing key value properties using dot notation fine using brackets notation demonstration", "num": "361", "d": "7/2014"}, {"title": "opportunities bind date obj input type date like dominputvalueasdate", "body": "spec", "num": "360", "d": "7/2014"}, {"title": "directive persistent views", "body": "something like vpersistentview would hide view instead destroying course user know created ready events would fired", "num": "359", "d": "7/2014"}, {"title": "possible watch value owned parent inside component", "body": "call something like parent watch property watcher destroyed automatically switch vview", "num": "358", "d": "7/2014"}, {"title": "populate select element options nt select vmodel update", "body": "", "num": "357", "d": "7/2014"}, {"title": "event boots vuejs", "body": "understand vuejs starts booting parsing dom mustaches etc understood right reasons nt done earlier fires", "num": "356", "d": "7/2014"}, {"title": "standard way reveal body everything loaded", "body": "", "num": "355", "d": "7/2014"}, {"title": "get vm instance dom element", "body": "event delegate scenes example listening document click event know dom element clicked get vm instance element clicked demo", "num": "353", "d": "7/2014"}, {"title": "event used inside component template inserted", "body": "tried ready event nt find element login inside settimeout attached event nt seem fire way", "num": "352", "d": "7/2014"}, {"title": "von click handler still trigger click event even mousemoved", "body": "title element try mousedown mousemove mouseup click event triggered bug", "num": "351", "d": "7/2014"}, {"title": "watch whole data except properties", "body": "see code use right way", "num": "350", "d": "7/2014"}, {"title": "support complex propertise", "body": "handling serverside errors need able something like errerrors ulastname thereabouts however throws exception work around something note love vuejs way", "num": "349", "d": "7/2014"}, {"title": "retrieving encapsulated component", "body": "hello months still loving vue stumbled upon something registered amp encapsulated private components vm created via dom others need created procedurally tried returns possible moment also remember issue bpierre specific way instanciate given component without retrieve first", "num": "348", "d": "7/2014"}, {"title": "triggering nondom connected component", "body": "trying test vue component without currently adding dom triggered least consolelog gives something data changes nt triggering output wrong", "num": "346", "d": "7/2014"}, {"title": "loading indicator best practice", "body": "would recommended implementation loading indicator inside componet template", "num": "345", "d": "7/2014"}, {"title": "computed property dependency collection", "body": "sibling components one depends value get computed property works expected put dependent component second dom vice versa true source issue seems dependency collection mechanism however use sibling vm computed property vm must ready first else collected dependency way explicitly specify keypath separate vm dependency computed property force components load specific order fiddle showing issue app works markup wrong perhaps sign poor application design goal many pages one global footer like communicate one another also able show hide footer easily pagebypage basis component definition opposed adding lifecycle callback every page change visibility", "num": "342", "d": "7/2014"}, {"title": "component render without node", "body": "strange issue sure something wrong template use render add html element like works fine", "num": "341", "d": "7/2014"}, {"title": "support nested keypaths filters computed properties", "body": "vue data supports nested objects navigated using operator like normal javascript objects defining filters computed properties however one currently limited flat structure improved organisation readability sometimes would useful able describe filters computed properties also hierarchical way", "num": "340", "d": "7/2014"}, {"title": "firefox warning typeerror mutating prototype", "body": "line firefox gives warning typeerror mutating prototype object cause code run slowly instead create object correct initial prototype value using objectcreate", "num": "339", "d": "7/2014"}, {"title": "access child components", "body": "access child components loaded via vview", "num": "338", "d": "7/2014"}, {"title": "get currentview model", "body": "trying get multi page setup similar example get current view model would like set data", "num": "337", "d": "7/2014"}, {"title": "option actual template node auto use", "body": "", "num": "335", "d": "7/2014"}, {"title": "csp compliant build", "body": "basically use different uses esprima since size nt matter much cspenforcing environments extra code acceptable tradeoff", "num": "334", "d": "7/2014"}, {"body": "\u624b\u52a8\u521b\u5efa\u4e00\u4e2a vm \u554a", "d": "7/2014"}, {"body": "guess want use tag rather one also want instantiate vue component definition", "d": "7/2014"}, {"body": "doh yes silly thanks", "d": "7/2014"}, {"body": "full svg tag list really long current map includes commonly used ones probably include possible tags though", "d": "7/2014"}, {"body": "yah would love full svg support well using coming react element js mapping really sucks add lot elements makes wonder way tunnel things without specifying everything disclaimer nt looked code saying past react project quite painful add multiple unsupported tags", "d": "7/2014"}, {"body": "huh right longer thought least", "d": "7/2014"}, {"body": "jsdom compatibility roadmap current focus getting fleshed branch meanwhile appreciate effort determining cause issues", "d": "7/2014"}, {"body": "thanks response work matter", "d": "7/2014"}, {"body": "input updated model write locked avoid circular updates modify model sliding ignored computed property locked got changed general avoid side effects computed properties getters", "d": "7/2014"}, {"body": "right currently way opening exceptions lock mechanism", "d": "7/2014"}, {"body": "tests limiting value setter works value slider forcing ui directly seem work using filter almost works except slider gets jerky idea", "d": "7/2014"}, {"body": "filter values applied async think direct ui manipulation proper work around vue dom updates applied async model changes hand jsut set slider", "d": "7/2014"}, {"body": "would good idea however specific case min still needs adjusted dynamically variable value since also requires direct dom manipulation think prefer limiting value looks little bit better thank input", "d": "7/2014"}, {"body": "probably interested branch", "d": "7/2014"}, {"body": "branch released intended version leading however since full rewrite expect take iron potential new issues", "d": "7/2014"}, {"body": "pretty excited see vue maturing grown big fan would mind expanding reasons behind rewrite presumably api change primarily implementation change pm evan wrote next branch released intended version leading however since full rewrite expect take iron potential new issues reply email directly view github", "d": "7/2014"}, {"body": "full rewrite", "d": "7/2014"}, {"body": "guotie see post", "d": "7/2014"}, {"body": "way clean concise neat words still ones applying design want happy knowing vue become monster", "d": "7/2014"}, {"body": "gaydenko absolutely certain tradeoffs made terms correctness vs conciseness overall scope size library remain close right things belong vue core lib always live plugin", "d": "7/2014"}, {"body": "great", "d": "7/2014"}, {"body": "wait long time next branch", "d": "7/2014"}, {"body": "guotie expect take another month fixed timeline yet", "d": "7/2014"}, {"body": "handler need change model changing directly dom element documentqueryselector", "d": "7/2014"}, {"body": "yes made purpose external library changes hidden inputs values need changes reflected vue data model", "d": "7/2014"}, {"body": "case interaction different worlds would use events sending pubsub guess conceptually correct different worlds share data send messages see probably external library nt events aware", "d": "7/2014"}, {"body": "vue detect changes directly setting input elements design know external lib changed input value manually trigger event input element notify vue sync value back model", "d": "7/2014"}, {"body": "yes solved problem", "d": "7/2014"}, {"body": "also got issue resolve defined easy accessible place function finish handlers way markup kept clean also results less typing strongly sure vue api must extended way", "d": "7/2014"}, {"body": "reason works change back use stops working strange", "d": "7/2014"}, {"body": "preprocessing vue filter functions function body contains filter inlined compiled getter think directly setting works bypasses step meanwhile definitely try make function filters work intended upcoming version", "d": "7/2014"}, {"body": "expected behaviour see dependency collection gotcha section", "d": "7/2014"}, {"body": "expected behavior defining component definition like setting something constructor prototype shared across instances type native javascript objects instance properties defined constructor similarly vue component instance data defined hook", "d": "7/2014"}, {"body": "add watcher inside ready event watcher readded every time component created", "d": "7/2014"}, {"body": "hmm yeah makes sense chance advising users sort structuring guide time future", "d": "7/2014"}, {"body": "thelinuxlich afaik ready triggered per instance component", "d": "7/2014"}, {"body": "oh okay", "d": "7/2014"}, {"body": "getter andor setters executed initialization determine data dependencies computed properties need recalculated dependency modified", "d": "7/2014"}, {"body": "thank", "d": "7/2014"}, {"body": "solved issue changed view directive vuedirective xview bind function", "d": "7/2014"}, {"body": "good concern consider adding official", "d": "7/2014"}, {"body": "thanks usually fine call listener value since spec says calling removeeventlistener arguments identify currently registered eventlistener eventtarget effect case checking handler first avoid expensive call still good change", "d": "7/2014"}, {"body": "good monitoring event bindings useful", "d": "7/2014"}, {"body": "understand html specification", "d": "7/2014"}, {"body": "missing closing div brackets", "d": "7/2014"}, {"body": "check regarding selfclosing tags", "d": "7/2014"}, {"body": "thanks replies using self closing never realized xhtml vs sorry derp amp thanks quick reply", "d": "7/2014"}, {"body": "fixed dev branch already thanks noting", "d": "7/2014"}, {"body": "really problem way vue data observation works least nt like nondeterministic data structures basically sees reference something template eg assume exists nt exist create placeholder thing conditional nt work easiest workaround stub user object nt user behavior go away next release uses different strategy problem", "d": "7/2014"}, {"body": "method call unbinds directiveslisteners etc removes element dom keeps instance alive reinsertion", "d": "7/2014"}, {"body": "thanks", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "achieve simply", "d": "7/2014"}, {"body": "would nt insert component template dynamically like vview", "d": "7/2014"}, {"body": "since want keep views alive created together one visible one time", "d": "7/2014"}, {"body": "okie dokie", "d": "7/2014"}, {"body": "watcher stay belongs parent unwatch hook though", "d": "7/2014"}, {"body": "ok solved using broadcast", "d": "7/2014"}, {"body": "mean populating", "d": "7/2014"}, {"body": "yeah", "d": "7/2014"}, {"body": "currently issues used together populated options compiled time options present yet someone suggested introducing separate directive might make easier work dynamic options", "d": "7/2014"}, {"body": "oh got", "d": "7/2014"}, {"body": "thelinuxlich", "d": "7/2014"}, {"body": "great gaydenko", "d": "7/2014"}, {"body": "vue nt boot automatically compilation starts explicitly create top level instance", "d": "7/2014"}, {"body": "ooh see btw excellent job crafting api vuejs", "d": "7/2014"}, {"body": "thanks glad like", "d": "7/2014"}, {"body": "vcloak", "d": "7/2014"}, {"body": "exactly", "d": "7/2014"}, {"body": "sure understand example fully could put clickhandler logic inside text component listening dom event component logic handle stored within component make code reusable edit see want change behavior sibling elements vms one actually received event run issues managing kind behavior cleanly end day components ideally deal children recommend registering child vm parent vm using manage event api check", "d": "7/2014"}, {"body": "got thank", "d": "7/2014"}, {"body": "template mean partials", "d": "7/2014"}, {"body": "yeah using like vuespa example", "d": "7/2014"}, {"body": "supposedly partials inserted ready hook look", "d": "7/2014"}, {"body": "native browser behavior", "d": "7/2014"}, {"body": "ermmm right element dragging mistake", "d": "7/2014"}, {"body": "could know property get changed data problem solved", "d": "7/2014"}, {"body": "ways make properties separate object watch documentation says additional properties attached viewmodel data object ready hook observed introduce thisresult alternatively docs say comes processing object data properties keys starts skipped rename result result", "d": "7/2014"}, {"body": "thank bdaglish made test result still want way use wrapper scope watching result solve problem feel good way try demo saw property attached ready hook still observed way use result truly make observed result dose nt render html template demo", "d": "7/2014"}, {"body": "interesting use case make improvements interface event includes exact path changed inside object wait till next major release im meanwhile grouping different objects seems easiest workaround", "d": "7/2014"}, {"body": "okay using grouping way fit case looking forward watch new feature", "d": "7/2014"}, {"body": "closed fast grouping way make code fatter enhancement tag", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "asip key problem async function case", "d": "7/2014"}, {"body": "thanks working next major release address issue", "d": "7/2014"}, {"body": "internal single example quotes really obligatory treat content string literal nt evaluating number current context", "d": "7/2014"}, {"body": "encapsulate", "d": "7/2014"}, {"body": "oops forgot put fiddle used instantiation option like thecomponentjs moduleexports template require thecomponenthtml indexjs var root new vue components thecomponent require thecomponent", "d": "7/2014"}, {"body": "dug source found private components stored hash fix interested know shorter way though", "d": "7/2014"}, {"body": "ignore apparently tangled wires untangle gt lt sorry noise", "d": "7/2014"}, {"body": "nt define component definition since component nt template vue way tell expect observe property way vue initializes data observing twostep process first observe properties option scan template see thing user expect bind template found property found process observed add new observed property best practice define data fields option even value", "d": "7/2014"}, {"body": "fabulous info thanks best seriously", "d": "7/2014"}, {"body": "loading indicator indicate images component", "d": "7/2014"}, {"body": "component date fetched remote source", "d": "7/2014"}, {"body": "would create loader component nest", "d": "7/2014"}, {"body": "sounds like great idea thanks", "d": "7/2014"}, {"body": "hmm general avoid depending another vm computed properties design perspective ideally page components nt aware footer logic whether show footer depending current page seems belong footer put pagefooter relationship object footer component instead scattered component assume using switch pages property app vm footer computed property like", "d": "7/2014"}, {"body": "seems missing closing bracket p", "d": "7/2014"}, {"body": "a\u0155rr im idiot", "d": "7/2014"}, {"body": "sure one especially computed properties bring extra complexity internals filters able nest seems purely readabilitysyntax preference thing one way define filters object first gradually build js var filters group filterscurrency validators filtersemail filtersname", "d": "7/2014"}, {"body": "verison ff warning error breaks execution", "d": "7/2014"}, {"body": "ok looks like recently added ff annoying message affect behavior vue since lot libraries depend hack ff maintain backwards compatibility perf implications negligible use cases vue", "d": "7/2014"}, {"body": "use", "d": "7/2014"}, {"body": "give view", "d": "7/2014"}, {"body": "ah thank nt know give id first", "d": "7/2014"}, {"body": "give example behave afaiu remove need things like right", "d": "7/2014"}, {"body": "well currently template option accepts three things template string id selector template node either node native node documentfragment already fix intended make possible example removes need call extra", "d": "7/2014"}, {"body": "also consider acornjs alternative potentially slightly faster parser esprima played shimmingmodifying today could nt get far esprimaacorn solid parsing javascript syntax object even instrumenting string nt get us much closer goal actually executing without breaking strict unsafeeval csp maybe missing something ideas", "d": "7/2014"}, {"body": "nt got time dig yet take look", "d": "7/2014"}, {"body": "definitely useful thanks references", "d": "7/2014"}, {"body": "worth able get working strict csp environment using browserified version notevil package nt time right test thoroughly could heavily optimized get job done anyone looking quick dirty solution may good starting point complete implementation commit", "d": "7/2014"}, {"body": "finally figured caused infinite loop within data binding nt properly distinguishing regular objects nodedocument like objects thus indexing forever extend convertkey function also check special objects specific fields documenturi documents stylesheets used shadowroots objects nt really know implement less fuzzy way shadowroots really lacking identifying attribute think never want watch either think thanks alessandro", "d": "7/2014"}, {"body": "closing since addressed different issue", "d": "7/2014"}, {"body": "figured required dragover event", "d": "7/2014"}, {"body": "favor backbone like event object would clean methods many components dmfilipenko dynamically binding event handlers viewmodels initialization seems like recipe unnecessary state ca nt picture reasonable situation following would nt work case checking current state expensive would implicate issues design", "d": "7/2014"}, {"body": "first version vuets typescript approach using vue currently depends next build vue given uses within call super map class members vue config important part aligns configuration api runtime api vue typescript class allows finding interfacetype errors deep within project handy team development larger apps actively using vue larger project continue refine approach ongoing sorry delay ted thu jun pm nathan ridley notifications githubcom wrote hey going updates reply email directly view github", "d": "7/2014"}, {"body": "use consolelog view debug data", "d": "7/2014"}]