[{"title": "optional tags sfc", "body": "problem feature solve html completion still suboptimal template tags sublime text less clutter indentation done svelte proposed api look like appvue hello name export default", "num": "8873", "d": "9/2018"}, {"title": "dtx grid vue", "body": "hi dear created powerful datagrid vuejs free open source get address think lot people needs component sorry puting post issues part love vuejs think everybody loves regards dt", "num": "8872", "d": "9/2018"}, {"title": "functional component rendering named slot", "body": "version reproduction link steps reproduce nothing particular expected display actually happening displays make childvue nonfunctional works use default named slots works openned topic forum got answer", "num": "8871", "d": "9/2018"}, {"title": "find module vue single ts", "body": "webpack testvue hhhh export default name ttt appvue import ttt componentstestvue find module componentstestvue add ok dont want add expected behaviour actual behaviour find module componentstestvue steps reproduce problem location minimal repository demonstrates issue", "num": "8869", "d": "9/2018"}, {"title": "find module vue ts", "body": "webpack test vue loader vueloader options loaders ts babelloader tsloader tsx babelloader tsloader testvue hhhh export default name ttt appvue import ttt componentstestvue find module componentstestvue add langts ok nt want add expected behaviour actual behaviour find module componentstestvue steps reproduce problem location minimal repository demonstrates issue", "num": "8868", "d": "9/2018"}, {"title": "computed setter triggered reactive array operations", "body": "version reproduction link steps reproduce click assignment button see alert whereas clicking pushing button wo nt clicking manual set button trigger alert expected alert computed setter triggered array push since push splice etc supposed reactive according actually happening assignment array triggers computed setter reactive array operations nt alert also gets triggered manual done behaviour expected", "num": "8867", "d": "9/2018"}, {"title": "simple bind actually seem improve performance", "body": "problem feature solve helper function bundled vuejs simple bind faster native function bind fn ctx function boundfn const l argumentslength return l l gt fnapply ctx arguments fncall ctx fncall ctx record original fn length boundfnlength fnlength return boundfn bind slow myth true quite time native bind faster much recent browser arrow functions even faster long need reuse functions somewhere else please refer benchmark think bigger review helper functions see case use still modern browses proposed api look like replace simple bind native bind", "num": "8866", "d": "9/2018"}, {"title": "vueextend causes nested mixins merged twice", "body": "version reproduction link steps reproduce open console expected actually happening still gets applied used even though already done", "num": "8865", "d": "9/2018"}, {"title": "separate vue component ts html", "body": "hi using typescript make application everything seemed fine separated module parts component like masterlayoutcomponentts masterlayoutcomponenthtml actually component combined one file ran smoothly want separate module parts future code longer longer therefore hard track issue available ran application changing code like one error thrown using runtimeonly build vue template compiler available either precompile templates render functions use compilerincluded build anyone help thanks", "num": "8864", "d": "9/2018"}, {"title": "\u5927\u5e45\u5ea6", "body": "aaa \u7684", "num": "8863", "d": "9/2018"}, {"title": "watch unicode properties like a\u4e2d\u6587", "body": "version reproduction link steps reproduce project vue component instance vue property instance watch properties instance show error watcher accepts simple dotdelimited paths expected error code run continue actually happening code seems stopped run", "num": "8862", "d": "9/2018"}, {"title": "optional chaining error babel", "body": "version reproduction link steps reproduce use optional chaining operator template user id expected output users id template blank undefined actually happening invalid expression unexpected token n user id n raw expression user id optional chaining works fine script section sfc vue component work template section reference nuxtjs project stock settings babel optional chaining plugin version actually vue", "num": "8861", "d": "9/2018"}, {"title": "filter allows mutation state", "body": "version reproduction link steps reproduce look value rendered expected expected filters pure functions allowed mutate state way actually happening state mutated reference reactive property passed breaks conceptual model filters pure functions people use filters way transforming displayed without mutating actual underlying state would good safeguard potential bugsmisuse filters", "num": "8860", "d": "9/2018"}, {"title": "add api create onetime watcher easily", "body": "problem feature solve assume component need something async state gets data means component nt need state changes help achieve problem vue fires callback fast code like nt work defined function time guess block finished callback fired live demo sure ways avoid problem think better delay callback execution bit add new api work proposed api look like behaves like normal automatically unwatch callback fired think modifier events", "num": "8859", "d": "9/2018"}, {"title": "vuejs\u63a5\u5165\u7684saucelabs\u6700\u8fd1\u4e3a\u5565\u770b\u4e0d\u5230\u6d4f\u89c8\u5668\u517c\u5bb9\u6027\u4e86", "body": "version reproduction link steps reproduce expected \u671f\u671b\u770b\u5230\u6d4f\u89c8\u5668\u7684\u517c\u5bb9\u6027\u6d4b\u8bd5\u7ed3\u679c actually happening \u671f\u671b\u770b\u5230\u6d4f\u89c8\u5668\u7684\u517c\u5bb9\u6027\u6d4b\u8bd5\u7ed3\u679c", "num": "8858", "d": "9/2018"}, {"title": "saucelab\u4e3a\u5565\u4e0d\u80fd\u663e\u793a\u6d4f\u89c8\u5668\u7684\u517c\u5bb9\u6027\u4e86", "body": "", "num": "8857", "d": "9/2018"}, {"title": "trigger without corresponding vifvshow component mounting", "body": "problem feature solve without corresponding component template root never triggered may design confusing component template root get triggered component mounted proposed api look like following modal template mounteddestroyed dynamic classes applied correctly inner slideup effect never triggered propose including inner ones associated etc triggered component mounting amp destroy html currently using following workaround parent calling method via listening destroying modal javascript export default data return show false mounted thisshow true methods close thisshow false nexttick gt emit close", "num": "8856", "d": "9/2018"}, {"title": "check tag already windowcustomelements registry top checking config ignoredelements", "body": "problem feature solve vue mounting function called checks among others whether element tag list context app uses multiple web components nt want manually add every new component tag list maintaining list could quickly become headache also checks custom elements registry could figure element question necessarily unknown proposed api look like api would stay top checking function would also check defined defined return false happy submit pull request wanted discuss first make sure nt design constraints adding something like", "num": "8855", "d": "9/2018"}, {"title": "error load", "body": "vue vue thanks", "num": "8854", "d": "9/2018"}, {"title": "ca nt capture dot keypress", "body": "version reproduction link steps reproduce open chrome press prompt alert firefox nt firefox supported browser probably drop support future check file set custom keycodes need make least work chrome directives ca nt use modifier directive like one could think somehow capture key described documentation automatic key modifiers however ca nt vue uses instead think using step right direction however using keyboardeventkey instead keyboardeventcode open whole ordeal problems like issue check online viewer vs check tried capture key documentation regarding keyboardeventcode expected key captured actually happening key captured", "num": "8853", "d": "9/2018"}, {"title": "wather \u5728\u4e25\u683c\u6a21\u5f0f\u4e0b \u7684\u95ee\u9898", "body": "version reproduction link steps reproduce expected slove problem actually happening \u5728ie \u6d4f\u89c8\u5668\u4e0b", "num": "8852", "d": "9/2018"}, {"title": "reset computed data base state", "body": "version reproduction link steps reproduce want reset rolelist data everytime user change role expected select change reset rolelist actually happening resetting rolelist data", "num": "8851", "d": "9/2018"}, {"title": "error render axios get rest", "body": "", "num": "8850", "d": "9/2018"}, {"title": "invalid expression unexpected identifier vue js", "body": "finding problem sending compact data controller vue component props code blade file projects also tried jsonencode projects still working code component props projects created error invalid expression unexpected identifier id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat raw expression projects id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat", "num": "8847", "d": "9/2018"}, {"title": "invalid expression unexpected identifier vue js", "body": "finding problem sending compact data controller vue component props code blade file projects also tried jsonencode projects still working code component export default data return props projects created consolelog created consolelog thisprojects mounted consolelog thisprojects consolelog hot job mounted yeah vue warn error compiling template invalid expression unexpected identifier id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working lt span categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat raw expression projects id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working lt span categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat found", "num": "8846", "d": "9/2018"}, {"title": "\u76f8\u540c\u7684\u4e24\u4e2a\u7ec4\u4ef6\u5728\u4f7f\u7528vif \u5207\u6362\u65f6\u4e0d\u4f1a\u89e6\u53d1destroy \u7684hook", "body": "version reproduction link steps reproduce \u76f8\u540c\u7684\u4e24\u4e2a\u7ec4\u4ef6\u5728\u4f7f\u7528vif \u5207\u6362\u65f6\u4e0d\u4f1a\u89e6\u53d1destroy expected actually happening \u76f8\u540c\u7684\u4e24\u4e2a\u7ec4\u4ef6\u5728\u4f7f\u7528vif \u5207\u6362\u65f6\u4e0d\u4f1a\u89e6\u53d1destroy \u7684hook", "num": "8844", "d": "9/2018"}, {"title": "hook nt work case set", "body": "version component diff nt hook demo", "num": "8843", "d": "9/2018"}, {"title": "overriding binded prop hypenated syntax instead camelcase working", "body": "version reproduction link steps reproduce create two child components prop camelcase bind props first child second try override camelcase prop hypenated syntax first child second expected prop override correctly actually happening prop keep parent value meet issue camelcase coding stye eslint vuerecommended throw error prop hypenated", "num": "8842", "d": "9/2018"}, {"title": "deep selector broken production mode", "body": "version reproduction link sorry busy build issue needed provide repo weekend probably nt need steps reproduce although maybe bug seems vueloader exactly maybe angular use familiar relays work since vueloader repo seems active report let users could find already many issues deep selector think wo nt offensive vueloader depends could process deep selector needs exactly process css correctly production mode result css processed wrong syntax considered combinator process combinator flag production default development result ie ie deep ie needs space combinator production mode deep selectors wo nt work production mode imo maybe right combinators usually combinators still work even space hand feature used vue rather pure css nt consider passable expected actually happening versions less vueloader", "num": "8841", "d": "9/2018"}, {"title": "comes error using key data props", "body": "version reproduction link online example steps reproduce expected acts actually happening use key data props comes error invalid expression unexpected token raw expression vmodel invalid expression unexpected token n n raw expression found use instead ok makes confused key work makes different", "num": "8840", "d": "9/2018"}, {"title": "comes error using key data props", "body": "version use instead ok makes confused key work makes different", "num": "8839", "d": "9/2018"}, {"title": "chrome dom element updating safari fine", "body": "version reproduction link steps reproduce repro shows fully functional version sure show repro application updating properly chrome expected reactive properties updating expected actually happening fields updating chrome browser updates properly safari setting selectedmessage vuex store mutation simple mutation properties update reactivity nt work properly fields dom chrome loaded safari fields update expected", "num": "8838", "d": "9/2018"}, {"title": "multiple root nodes returned render function error functional component", "body": "version reproduction link steps reproduce open reproduction link look js console expected multiple root elements functional components actually happening multiple root nodes returned render function render function return single root node error console nothing render according functional component way go need one root element", "num": "8837", "d": "9/2018"}, {"title": "suggestion allow multiple names named slot", "body": "problem feature solve flexibility using slots could allow slot take multiple variations name example pass one names slot render workaround use currently adding following code method would great could done automatically proposed api look like current use code", "num": "8836", "d": "9/2018"}, {"title": "setinterval interferes selecting option", "body": "version reproduction link steps reproduce load page select option list time selection fail due timer interference expected selection work normal actually happening selection work fires around time setinterval timer fires", "num": "8835", "d": "9/2018"}, {"title": "vue running firefox", "body": "version reproduction link steps reproduce google chrome works fine fire fox get error typeerror undefined constructor learn nothin display screen expected app shows normaly actually happening get error nothing display upload mainjs packagejson name chatbotmariana description vuejs project version author ranieri abreu silva junior rabreu indracompanycom license mit private true scripts dev crossenv nodeenvdevelopment webpackdevserver open hot build crossenv nodeenvproduction webpack progress hidemodules prod crossenv nodeenvdevelopment webpackdevserver port hot host dependencies axios compression expressminify jquery popperjs vue vueresource vuerouter browserslist gt last versions ie lt devdependencies babelcore babelloader babelpresetenv crossenv cssloader fileloader vueloader vuetemplatecompiler webpack webpackdevserver im using javascript dont tsconfig", "num": "8834", "d": "9/2018"}, {"title": "vue instance events object ids", "body": "problem feature solve currently object contains event names keys arrays listeners values let say listen event emitted also listens event would good pass also unique ids user call smth like inside hook unsubscribe events listens saves subscriptions proposed api look like save functionality", "num": "8833", "d": "9/2018"}, {"title": "duplicate keys detected warned", "body": "version reproduction link steps reproduce check reproduction url expected duplicate keys detected warned actually happening duplicate keys detected warned addvnodes called vnodes key warned", "num": "8832", "d": "9/2018"}, {"title": "using multiple selects vmodel bound unbound values causes value overriding", "body": "version reproduction link steps reproduce change first select change newly displayed select see set bound vals select instead values change first select use number modifier vmodel exchange bound number values strings fix issue least specific desired effect fix problem either using vbind value values using nonbound values values far tell mix cause override bug expected different values variable actually happening second variable overwritten first value posteddiscussed discord chat", "num": "8831", "d": "9/2018"}, {"title": "ssr escape raw nodes", "body": "problem feature solve rendering script tag server content escaped breaking js code html var x rendered html var x quot quot proposed api look like solution would allow users define escaped override map option disable escaping et thanks", "num": "8829", "d": "9/2018"}, {"title": "async rendering vue", "body": "problem feature solve vue world like react world proposed api look like", "num": "8828", "d": "9/2018"}, {"title": "css children selector nt work elements slot", "body": "component root slot root gt position absolute position absolute nt work", "num": "8827", "d": "9/2018"}, {"title": "vfor iterating velse", "body": "version reproduction link steps reproduce add element velse sibling vif condition evaluates falsy iteration happens element expected vfor iterate velse actually happening vfor iterating velse", "num": "8826", "d": "9/2018"}, {"title": "nondeterministic css ordering extracted css ssr app", "body": "version reproduction link steps reproduce reproduction steps outlined readme github repo expected development production builds extracted css stylesheets loaded deterministic order believe reading various semirelated github issues order corresponds import order via webpack case ssr well would expect order since file loaded statically loaded dynamically via routes order either way would expect global styles always loaded first followed dynamicroute styles allowing proper cascade actually happening think two issues play primary issue development mode file incorrectly loaded file breaking cascade contents secondary issue production mode file properly loaded first loaded prior even though imported reverse order even ssring home page additional notes trying determine feels like optimal solution think options loose descending order optimal likely increasing order feasibility global styles root component would always loaded first followed styles component matched current route additional routespecific styles would loaded demand routing understand likely beyond scope bundle renderer potentially something implemented application global styles root component would always loaded first followed styles current routecomponent followed styles additional routecomponents global styles root component would always loaded first followed styles routelevel components importorder ie routedeclaration order also worth noting specific scenario larger app slightly different nt able quite reproduce exactly minimal repo quite sure specific app case dynamic routes defined order home page page development mode stylesheets included order app home production mode stylesheets included order home app demo repo production build correct insofar nt break cascade either route development build incorrect one routes actual app development mode breaks cascade route production build breaks routes", "num": "8825", "d": "9/2018"}, {"title": "sync async component registration issue", "body": "try register sync async components common folder like vuecomponents componentname vue vuecomponent componentname componentconfigdefault componentconfig let componentname asynccomponents vuecomponent componentname gt import new vue el app got error img split components folders works fine vuecomponentssynccomponents componentname vue vuecomponent componentname componentconfigdefault componentconfig let componentname asynccomponents vuecomponent componentname gt import", "num": "8824", "d": "9/2018"}, {"title": "different functional componens key", "body": "version reproduction link steps reproduce create create render app expected everything works fine actually happening vue warns key create components render function directly works fine without duplicated keys keys situation export default functional true render createelement return createelement div staticclass createelement div staticclass b first createelement div staticclass b component image shows difference vnode objects moreover looks likes works fine vue template exporer go crazy try compile", "num": "8822", "d": "9/2018"}, {"title": "closed current window", "body": "problem feature solve windowopener null windowopen self windowclose proposed api look like windowopener null windowopen self windowclose", "num": "8821", "d": "9/2018"}, {"title": "closed current", "body": "", "num": "8820", "d": "9/2018"}, {"title": "inactive keepalive component keeps updating bound nested properties", "body": "version reproduction link steps reproduce press hide labels open dev tools select doesupdate component press add stuff expected remains actually happening goes component doesntupdate nt update add stuff expected bound property top level nt dev tools issue observe behavior devtools disabled", "num": "8819", "d": "9/2018"}, {"title": "computed property selectmany already defined data", "body": "version reproduction link steps reproduce defined following instance new vue objectprototypeselectmany function get found warn initcomputed expected warning actually happening warning console", "num": "8818", "d": "9/2018"}, {"title": "\u5f00\u53d1\u5229\u5668 parcel watch indexhtml", "body": "vuecli \u51fa\u6765\u540e npm run serve \u65e0\u6cd5\u751f\u6210 dist \u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9 \u4f7f\u7528 parcel watch indexhtml \u5b8c\u7f8e\u89e3\u51b3", "num": "8817", "d": "9/2018"}, {"title": "vuedirectivethe element instruction binding data update upload also triggers", "body": "bind two different elements different instructions vhello vworld find vhello vworld hook functions upload triggered template updated think binding element upload trigger elements bound instruction", "num": "8816", "d": "9/2018"}, {"title": "prevent props update child parent", "body": "assing model value props parent child component model parse assing child change value also change parent please help prevent update parent model value", "num": "8815", "d": "9/2018"}, {"title": "update value renderless component vmodel", "body": "version reproduction link steps reproduce declare renderless b stateless custom components put b see reproduction link expected update scoped slot component actually happening updated plain html custom component problem computed props component use getters setters might problem custom components nt always use input event sometimes update sometimes select etc use hoc approach", "num": "8814", "d": "9/2018"}, {"title": "click event trigged twice situation", "body": "version reproduction link steps reproduce click text hello expected click event handleclick triggered twice see console log message becomes hello add add actually happening click event run fyi add attribute label click event triggered", "num": "8813", "d": "9/2018"}, {"title": "vue support clone method instance", "body": "problem feature solve hello develop vue project using cdn link build way wan na know clone vm instance attribute data store router new vm instance change vm instance data invoke vm instance method push vm content router new page never change origin one wan na clone new vm instance current state without dom render question vm instance data setter method vuex dispatch maybe clone method without dom refs mounted method care data proposed api look like var vm new vue running moment dont wan na change data crt vm instance change data effect render question make clone method var newvm vmclone withoutdom true newvm datatabledata newvm datainvokerequestdata", "num": "8812", "d": "9/2018"}, {"title": "accessing data functions passed parent causes list siblings recompute", "body": "version reproduction link steps reproduce click button expected computedvalue recalculated changed list element look console logs see slightly modified fiddle expected behavior using accessor actually happening computedvalue elements recalculated", "num": "8811", "d": "9/2018"}, {"title": "vueserverrenderer webpack deprecation warning plugins", "body": "problem feature solve webpack deprecation warning tapableplugin deprecated proposed api look like change compilerplugin compilerhooks hookname support new tappable syntax question preferred way support new syntax leaving webpack compatibility", "num": "8810", "d": "9/2018"}, {"title": "disable observing components hidden vshow", "body": "problem feature solve app several nontrivial component blocks one constantly updating lot inner components app dynamic moment time one block must visible nt think using good idea case recreating blocks rather expensive decided use instead noticed inner components still updated every block even hidden even worse updates computational heavy app basically wasting cpu clocks updating hidden elements simplified example js number number js var vm new vue el test data number visible true setinterval function vmnumber still updated even proposed api look like either make behavior default add attribute control something like", "num": "8808", "d": "9/2018"}, {"title": "vue router lost meta config", "body": "version reproduction link steps reproduce install vue install vuerouter define router meta info define beforeeach callback tometa empty object expected tometa current definition object actually happening empty object beforerouteenter hook trigger", "num": "8806", "d": "9/2018"}, {"title": "html entities attributes always decoded string templates", "body": "version reproduction link steps reproduce try dynamically load input field value contains encoded single quote plain html normally input field display single quote input box however vue shows input box tested multiple encoded chars everything works correctly except single quote stated hcysunyang entities except listed issue expected single quote shown input field loaded async vue actually happening show input field loaded async vue", "num": "8805", "d": "9/2018"}, {"title": "el property", "body": "problem feature solve var app new vue el app el property impossible understand intuitively means novice developer vue opinion much readable call property element etc proposed api look like var app new vue element app", "num": "8804", "d": "9/2018"}, {"title": "vue", "body": "version reproduction link steps reproduce ok bug expected actually happening", "num": "8803", "d": "9/2018"}, {"title": "vue computed", "body": "problem feature solve consolelog thisshophischange thiscurmemberid undefined proposed api look like computed showshopbasicform consolelog consolelog thisshophischange consolelog thiscurmemberid consolelog thisshophischange thiscurmemberid consolelog return thisshophischange thiscurmemberid result ob observer buyerprotection chanyedai chanyedailist array chanyedaimap cx ob observer value dep dep vmcount proto object undefined undefined", "num": "8802", "d": "9/2018"}, {"title": "vtext available slots", "body": "version reproduction link steps reproduce hi according docs dom result however trying build component like running problem works added slots collection using creates problem added slots collection sure whether intended best way solving guessing could check innertexthtml element hoping better way expected behaviour described documentation actually happening expected", "num": "8800", "d": "9/2018"}, {"title": "vtext available slots", "body": "hi according docs dom result however trying build component like running problem works added slots collection using creates problem added slots collection sure whether intended best way solving guessing could check innertexthtml element hoping better way sorry using issue helper nt able reproduce entire environment using codesandboxcodepen", "num": "8799", "d": "9/2018"}, {"title": "refs type definition include", "body": "try refer nonexisting ref vue", "num": "8798", "d": "9/2018"}, {"title": "listeners include input listener attrs nt include value prop", "body": "version reproduction link steps reproduce open codepen url open console expected attrs listeners actually happening attrs listeners", "num": "8797", "d": "9/2018"}, {"title": "vuex actions mutations update state", "body": "vuex action mutation modify state state different api asynchronous operations also performed mutation", "num": "8796", "d": "9/2018"}, {"title": "uncaught syntaxerror unexpected identifier", "body": "version reproduction link steps reproduce using vuecli created project occur uncaught syntaxerror unexpected identifier create vue project vuecli npm run serve open chrome devtools see webpack srcmainjs routerjs storejs file first line import vue vue throw error uncaught syntaxerror unexpected identifier project running well packagejson dependencies devdependencies expected fix error actually happening uncaught syntaxerror unexpected identifier", "num": "8795", "d": "9/2018"}, {"title": "problem passing data vue component using sync", "body": "version reproduction link steps reproduce pass json data html attribute component using sync expected data available prop used actually happening json gets distorted console throws error trying pass data laravel blade view vue component using sync make prop reactive however work passing json static data work", "num": "8794", "d": "9/2018"}, {"title": "ie firefox destroy \u4e0d\u80fd\u89e3\u51b3", "body": "", "num": "8793", "d": "9/2018"}, {"title": "pass wrapped computed vmodel", "body": "version reproduction link steps reproduce want reorder array use generate form called formconfig since use computed params vmodel work subcomponents original input solution expected comupted pass vmodel actually happening computed passed vmodel design way made code work expected tip use get set", "num": "8792", "d": "9/2018"}, {"title": "optout servercachekey", "body": "problem feature solve able decide runtime component cached server example reusable imageviewer component want cached certain use cases would preferred able return undefined servercachekey function know component wo nt cached currently would cached name would collide uses component also returned undefined proposed api look like api existing servercachekey takes props object allow returning undefined indicate skip looking component server renderer cache even component name", "num": "8790", "d": "9/2018"}, {"title": "read file without extension copied root file", "body": "hi everyone developing project using issue following trying implement universal links ios devices apple requires json file named without extension places root level used copy file root level working fine issue comes trying access file head nothing happens rename file add extension see properly reference head see facebook file fine opinions ideas thanks", "num": "8789", "d": "9/2018"}, {"title": "want add two hooks", "body": "problem feature solve want add two hooks show hide happens current page displayed window focus window behind current display window window blur calls two methods current component proposed api look like", "num": "8788", "d": "9/2018"}, {"title": "vif work", "body": "version reproduction link steps reproduce define element template vif false gt set vif reference data computed property returns false template contents rendered even though skipped workaround put vif within expected per template contents rendered actually happening template contents rendered found problem toplevel vue component vue file jsfiddle shows happens", "num": "8787", "d": "9/2018"}, {"title": "vbind class nt support class name hyphen", "body": "version reproduction link steps reproduce create vbind class class name contain hyphen example vbind class blahactive isactive vue fail accept blahactive valid class name change blahactive remove hyphen works expected hyphen acceptable part class name needs documented since html supports hyphen class name vue support actually happening vue nt support class names hyphen", "num": "8786", "d": "9/2018"}, {"title": "race condition transitiongroup", "body": "version reproduction link steps reproduce click add button expected animation work properly animation classes cleaned actually happening enter animation nt work new item element keeps class forever style tag binding triggers second rerender transitiongroup component transitiongroup setting entering new child triggering callback updated include new item calls pending callback triggers called wo nt called class remain element happens transitiongroup move transition bug also occurs elements changed", "num": "8785", "d": "9/2018"}, {"title": "oddity js transition hooks used combination css", "body": "version reproduction link steps reproduce remove unused parameter callback signature expected component transition enter leave actually happening component enters immediately without transitioning callback nt needed transition duration implicit css noted docs however retaining parameter function signature unclear work since unused within function definition", "num": "8784", "d": "9/2018"}, {"title": "recursive components make sure provide name option name provided components", "body": "version reproduction link steps reproduce run code expected error actually happening shows error console hi use vue components following error unknown custom element register component correctly recursive components make sure provide name option component however provided names components sample fiddle reproduce error open developer console see error small difference fiddle code use vue components import relatively add components fields components import commentslist commentslistvue export default name comments components commentslist import commentslist commentslistvue export default name comment components commentslist import comment commentvue export default name commentslist components comment", "num": "8783", "d": "9/2018"}, {"title": "recursive components make sure provide name option name provided components", "body": "hi use vue components following error unknown custom element register component correctly recursive components make sure provide name option component however provided names components sample fiddle reproduce error open developer console see error small difference fiddle code use vue components import relatively add components fields components import commentslist commentslistvue export default name comments components commentslist import commentslist commentslistvue export default name comment components commentslist import comment commentvue export default name commentslist components comment", "num": "8782", "d": "9/2018"}, {"title": "improve prop api", "body": "problem feature solve allows add possible values prop generate default validation functions parts component api used generate component docs proposed api look like", "num": "8781", "d": "9/2018"}, {"title": "support destructuring assignment component properties special attribute", "body": "problem feature solve like function definitions available component props grow time leading calls like individual component layout literal simple attribute values fine clear intent unused props suitable defaults warn required etc however component used loop often turn bunch yakshaving developer basically destructuring iterated item hand individual attribute bindings tiresome errorprone forgetting colon interpreted values swapped values bad pascaltokebab conversions etc verbose made two errors way current alternative developers use parameter type object catchall properties easily create maintain component instances alternative propose special magic attribute designated maybe props attribute bound object vue unpack properties object assign respective samenamed props proposed api look like proposed special attribute two examples would equivalent ones javascript see using form literal attribute values individual component would silly vast improvement desired attributes component already match available object using spread operator would even easy tweak object add attributes example would equivalent javascript want use form incoming state object nt match component interface problem use computed value map state component properties beauty similar situations places application make mixin encapsulating logic component interface backing data mapping needs change need adjust one place code markup every page used component notes collision explicitlydefined attribute key value propose attribute override object keys value matching attribute name would ignored would require changes components would unaware attribute would see incoming properties since nt use jsx nt know option would useful terrible neutral developers precedent magic nondirective attributes key various slotrelated attributes etc serious concern collisions actual components wild using prop called props imagine two solutions bypass functionality component prop named props choose another candidate less likely create compatibility issues perhaps vprops suspect would syntactic sugar template compiler since compiler would nt know keys expect", "num": "8780", "d": "9/2018"}, {"title": "vmodel \u6570\u636e\u7ed1\u5b9a\u9519\u8bef", "body": "version reproduction link steps reproduce \u5728\u4e00\u4e2a\u9875\u9762\u6709\u591a\u4e2a vmodel \u8868\u5355\u7684\u53e6\u5916\u4e00\u4e2a\u503c\u4f1a\u7f6e\u7a7a \u6bd4\u5982 obja null b null vmodel objaa vmodel objab \u7b2c\u4e00\u4e2a\u503c\u4f1a\u7f6e\u7a7a expected \u6539\u5b8c\u4e00\u4e2a\u503c\u540e\u4e0d\u5f71\u54cd\u53e6\u5916\u4e00\u4e2a\u503c actually happening \u6539\u5b8c\u7b2c\u4e00\u4e2a\u503c\u540e\u7b2c\u4e8c\u4e2a\u503c\u4f1a\u7f6e\u7a7a", "num": "8779", "d": "9/2018"}, {"title": "array data remains one component disappears another component type shows", "body": "version reproduction link steps reproduce click elements list click show second button click elements upper list click show first button expected upper list contain elements clicking first button elements second button nothing bottom list actually happening bottom list remains click another button see vue nt call mounted one component disappears second shows", "num": "8778", "d": "9/2018"}, {"title": "different template different enviorment", "body": "problem feature solve different template different enviorment proposed api look like hello want build web app mobile app android ios want use component platform need different template different environment like possible different way implement", "num": "8777", "d": "9/2018"}, {"title": "different template different enviorment", "body": "hello want build web app mobile app android ios want use component platform need different template different environment like possible different way implement", "num": "8776", "d": "9/2018"}, {"title": "", "body": "", "num": "8775", "d": "9/2018"}, {"title": "strange behaviour concerning scripttag", "body": "version reproduction link steps reproduce include scripttag type applicationjavascript inside vueactivated tag expected probably error like error compiling template templates responsible mapping state ui avoid placing tags sideeffects templates", "num": "8774", "d": "9/2018"}, {"title": "change data javascript devtool connected data binding", "body": "version reproduction link steps reproduce code explain expected message variable change actually happening nothing", "num": "8773", "d": "9/2018"}, {"title": "\u6dfb\u52a0\u6307\u4ee4\u7f13\u5b58\u81ea\u5b9a\u4e49\u6570\u636e\u5230\u5143\u7d20dataset\u4e2d", "body": "problem feature solve proposed api look like", "num": "8772", "d": "9/2018"}, {"title": "document mentioned must define component name use vue file", "body": "problem feature solve proposed api look like please add document must define component name vue file nested use typescript proname import vue vue import component vueclasscomponent component name tree must defined props pro object export default class tree extends vue", "num": "8771", "d": "9/2018"}, {"title": "doument mentioned must define component name vue self contained", "body": "thing found", "num": "8770", "d": "9/2018"}, {"title": "possible nt rerender dom ssr client side", "body": "problem feature solve best performance proposed api look like nothing need change", "num": "8769", "d": "9/2018"}, {"title": "mixin data nt available render", "body": "version reproduction link steps reproduce see jsfiddle expected actually happening got got console error like bllow vue warn property method mixinvar defined instance referenced render make sure property reactive either data option classbased components initializing property see found", "num": "8768", "d": "9/2018"}, {"title": "allow arrayobject binding specific related attributes", "body": "problem feature solve docs state special functionality really useful class style often references things exact usecase applies lot attributes involved semantic accessible markup instance attribute accepts list ids must correct spacing compatible screenreaders list often dynamic often controlled externally would potentially need combined local describedby coming externally works describedby boolean would evaluated separately avoid printing false essentially rebuild whatever beautiful easiness vue engine already class style order make sure code semantic attributes would greatly benefit would aria relationship attributes well nonaria relationship type attributes like attribute table cell lot weird code get proper strings based values nested data realized exact logic already hidden somewhere vuejs think writing accessible code extremely important vue make simple possible perhaps community standard way set predictible ids automatically would make establishing semantic relationships elementscomponents main accessibility challenge dynamic js driven interfaces popular days much simpler able update docs call important attributes would great opportunity push people toward writing accessible code well proposed api look like sure specific issues allowing attribute behave way would preferred solution difficult causes particular performance concerns adding behaviour specific attributes called would review valid html attributes see would make sense would good alternative solution", "num": "8767", "d": "9/2018"}, {"title": "lag render using cross subarray", "body": "version reproduction link steps reproduce isolated bug reproduce try hideshow hello world message redraw instant use load data button try hideshow hello world message lag fully dependant cpu velocity seems settimeout inside vue cause lag expected instant redraw actually happening lag redraw depending computer cpu use cross arrays avoid using toggle function completely aware code kind tricky ca nt understand lag follow experts", "num": "8766", "d": "9/2018"}, {"title": "set attributes root html tag component automatically", "body": "version reproduction link steps reproduce open reproduction link open devtools element attribute expected element nt attribute actually happening know problem foo component nt declare fields comment foo component element attribute problem variable passed determined probably component nt need field set attribute root html tag component automatically", "num": "8765", "d": "9/2018"}, {"title": "\u662f\u5426\u53ef\u4ee5\u8003\u8651\u6dfb\u52a0 data \u5c5e\u6027\u7684\u81ea\u52a8\u6ce8\u518c\u529f\u80fd", "body": "problem feature solve \u6bd4\u5982 username \u81ea\u52a8\u5728 data \u4e2d\u6ce8\u518c user \u5bf9\u8c61\u548c\u5c5e\u6027 name \u56e0\u4e3a\u6709\u65f6\u5019\u5728\u5199\u4ee3\u7801\u65f6\u4f1a\u51fa\u73b0\u7c7b\u4f3c abcdname data proposed api look like \u6dfb\u52a0\u7c7b\u4f3c\u4e8e angularjs \u4e2d\u90a3\u6837\u7684\u5728\u6a21\u7248\u4e2d\u5199\u7684\u8868\u8fbe\u5f0f username \u5728 scope \u4f5c\u7528\u57df\u81ea\u52a8\u751f\u6210\u76f8\u5e94\u7684\u5bf9\u8c61\u548c\u5c5e\u6027", "num": "8764", "d": "9/2018"}, {"title": "vue component", "body": "version reproduction link steps reproduce vue expected vue actually happening vue", "num": "8763", "d": "9/2018"}, {"title": "key event wrongly triggered unknown modifieraliaskeycode every key safari", "body": "version reproduction link steps reproduce please open codepen link safari ios observed bug works fine chrome ubuntu expected two inputs first working expected second showing weird behaviour first textfield handler fire pressing escape typing work expected pressing escape focused clear input second textfield handler unknown key code using unknown key modifier alias typing work first input actually happening typing second input safari ios always trigger handler thus clearing input typing feels wrong imho happen key modifieraliascode recognized triggered key", "num": "8762", "d": "9/2018"}, {"title": "use transition wrapper routeview route change venter dom appear vleave", "body": "vue vuerouter animated transitionenterclass animated transitionleaveclass route change cause page blink dom vleave nt appear", "num": "8761", "d": "9/2018"}, {"title": "strategy merging mixins property incorrect", "body": "version reproduction link steps reproduce open reproduction link open devtool see error means nt set value created hook component dose nt trigger initialized component right use mix option also contians property previous overridden current property may cased using merge strategy rather use concat concat two proerty see relevant code change root options root options changed let jump component stage see proerty overrode trying print occurs error expected output actually happening send pr time", "num": "8760", "d": "9/2018"}, {"title": "style binding implicitly assign px default unit numeric values certain css properties", "body": "problem feature solve assigning values css property via style binding like using shorthand syntax actually gon na work need explicitly set via interpolation code becomes verbose combining number occurrences binding becoming ridiculous sure currently elegant solution would also good referenced docs react default behavior add px specified proposed api look like common css properties like vue implicitly assign px value would definitely make code much cleaner code interpreted", "num": "8759", "d": "9/2018"}, {"title": "scopeslot slot", "body": "version reproduction link steps reproduce hei props list type array default gt mounted consolelog new vue el app data return data zhangsan lisi wanwu zhaoliu tianqi xiaoba html hello world hello worldsss hello scoperow expected \u6240\u6709\u7684slot\u6807\u7b7e\u90fd\u5e94\u8be5\u88ab\u6e32\u67d3\u51fa\u6765 actually happening \u4f5c\u7528\u57df\u63d2\u69fd\u548c\u5177\u540d\u63d2\u69fd\u6709\u88ab\u6e32\u67d3 \u7528render\u4e0d\u5b58\u5728\u8be5\u95ee\u9898", "num": "8758", "d": "9/2018"}, {"title": "add way check component responds event make vmevents public", "body": "problem feature solve would nice able check component responds given event already listeners declared template object ones registered nt show object stored private object would like suggest either add function checks component responds given event make public call proposed api look like method called could considered returning component responds given event otherwise array strings passed method instead string could return component responds events alternatively interface could simply", "num": "8757", "d": "9/2018"}, {"title": "slot slotscope", "body": "", "num": "8756", "d": "9/2018"}, {"title": "allow mutating props", "body": "problem feature solve currently building sandbox component allows playing live demo vue component problem encountered common error know security rule vuejs used yeah bad practice thing functionality sandbox comp needs access properties update reactivity process must update values child component sandbox parent component tag precise even error reactivity still values well updated searched use workaround stackoverflow say need use computed propeties data nt use prop values directly reactivity present child component updated ask help somebody knows update props keeping reactivity system great vuejs devs add option flag disable error maybe thanks advance proposed api look like maybe thing like simple flag option disable avoid mutating props error", "num": "8754", "d": "9/2018"}, {"title": "onsen ui navigator usage vue js cli project issues", "body": "hi recently set project using vue cli command trying get onsen ui navigator work inside files file comes project default trying get navigator work another page eg tried linking another page function working new page loading however animation code button links another page vue js script bottom technically links page nt create pushpull affect", "num": "8753", "d": "9/2018"}, {"title": "vue close page function", "body": "function cause page close vue help removes contents page remains open", "num": "8752", "d": "9/2018"}, {"title": "recalculated values dependent computed properties changed calculated properties dependent recalculated", "body": "problem feature solve sorry following content translated accurately use chinese example proposed api look like", "num": "8751", "d": "9/2018"}, {"title": "vhtml \u5e0c\u671b\u80fd\u652f\u6301\u89e3\u6790\u7ec4\u4ef6", "body": "problem feature solve \u4e00\u4e9b\u52a8\u6001\u7684html\u5b57\u7b26\u4e32\u4e2d \u9700\u8981\u7528\u5230\u4e00\u4e9b\u5c01\u88c5\u597d\u7684\u7ec4\u4ef6 proposed api look like vhtml", "num": "8750", "d": "9/2018"}, {"title": "props object change type inside child component", "body": "version reproduction link steps reproduce normally nothing look htmland js file inside repro link expected client object inside data value details object received prop inside child component actually happening client function object details using vue js inside laravel app expert vuejs beginner every additional advices apreciate", "num": "8749", "d": "9/2018"}, {"title": "access mycompoennt", "body": "hey guys try access instance inside component titlemycomponent tried something like nt work undefined somebody tip thanks lot", "num": "8747", "d": "9/2018"}, {"title": "dependencies found actually dependencies", "body": "version steps reproduce actually git pull branch run yarn serve expected expected run well try yarn serve vueproject actually happening dependencies found viewswarehousedeliverydeliverydetailvue srcrouterwarehousedeliveryindexjs viewswarehousedeliverydeliverymainvue srcrouterwarehousedeliveryindexjs viewswarehousedeliverydeliveryparentvue srcrouterwarehousedeliveryindexjs viewswarehouselabellabeldetailvue srcrouterlabelindexjs viewswarehouselabellabelmainvue srcrouterlabelindexjs viewswarehouselabellabelparentvue srcrouterlabelindexjs viewswarehouseorderorderdetailvue srcrouterwarehouseorderindexjs viewswarehouseorderordermainvue srcrouterwarehouseorderindexjs viewswarehouseorderorderparentvue srcrouterwarehouseorderindexjs install run npm install save viewswarehousedeliverydeliverydetailvue viewswarehousedeliverydeliverymainvue viewswarehousedeliverydeliveryparentvue viewswarehouselabellabeldetailvue viewswarehouselabellabelmainvue viewswarehouselabellabelparentvue viewswarehouseorderorderdetailvue viewswarehouseorderordermainvue viewswarehouseorderorderparentvue error says dependencies found actually dependencies router vue project dont clue", "num": "8746", "d": "9/2018"}, {"title": "vuejsorg home page contains broken img", "body": "version reproduction link steps reproduce open go platinum sponsors snapshot expected available image link actually happening broken image image src returns found message", "num": "8745", "d": "9/2018"}, {"title": "feature request snap package support", "body": "thinking setup install process fedora ubuntu linux distros could improved snap package version creating snap create snaps preferred programming language linux distros snap support", "num": "8744", "d": "9/2018"}, {"title": "option selected custom select uses domprops", "body": "version reproduction link steps reproduce create custom component docs suggested export default render function h const self return h select domprops value selfvalue self slotsdefault however option selected expected option must selected actually happening thing selected removed works fine open issue relates", "num": "8742", "d": "9/2018"}, {"body": "work fyi lazy change event listener input change related enter pressed maybe browser testing emitting event maybe use form submit event want detect enter", "d": "9/2018"}, {"body": "work fyi lazy change event listener input change related enter pressed maybe browser testing emitting event maybe use form submit event want detect enter mean inputvalue vuedata vuedata updates well inputvalue still spite getter called vue input updates press enter", "d": "9/2018"}, {"body": "posva", "d": "9/2018"}, {"body": "makes every tool ecosystem outdated clear benefits use sublime text", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "nt make root app functional", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "setter applied assignment", "d": "9/2018"}, {"body": "application setter reactive array operation considered feature future", "d": "9/2018"}, {"body": "think could moment use method put side effect", "d": "9/2018"}, {"body": "code provided seems outdated actually vue prefers native bind already see", "d": "9/2018"}, {"body": "nt use vueextend mixin mixins plain objects", "d": "9/2018"}, {"body": "use typescript nt", "d": "9/2018"}, {"body": "provide example handle using typescript posva", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "still use file entry point component include script tag attribute pointing separated script file", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "next time take time add repro added", "d": "9/2018"}, {"body": "babel actually used intemplate strings see sure anything changed regarding", "d": "9/2018"}, {"body": "make filters pure functions prevent said filter provided pure function", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "unwatching nexttick also work use btw", "d": "9/2018"}, {"body": "thanks interest looks like working saucelabs maybe updating generation svgs", "d": "9/2018"}, {"body": "thank much", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "adding fix problem", "d": "9/2018"}, {"body": "use nested transition info docs", "d": "9/2018"}, {"body": "nested apply transition classes node leaves dom would seem indicated docs default use transitions specified entering leaving mean bug understanding use", "d": "9/2018"}, {"body": "appear render dom first time already visible leaving nested transitions make sure durations applied correctly", "d": "9/2018"}, {"body": "take stackoverflow sandbox showing mean transition classes applied inner properly entering leaving", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "vue changed syntax please read documentation first thanks", "d": "9/2018"}, {"body": "keycode works fine firefox fixed", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2018"}, {"body": "bug getter needs touch vue knows track dependency try also mutation nt changing value", "d": "9/2018"}, {"body": "sirlancelot want achieve user change anything rolelist go another role changes reset go back original data right change anything also change storestate dont want preserve original data need deep clone", "d": "9/2018"}, {"body": "please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "error axios vue", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "taking", "d": "9/2018"}, {"body": "\u6dfb\u52a0\u552f\u4e00", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "sandbox seems working expected expected result", "d": "9/2018"}, {"body": "sandbox show props overrided one really overrided expected result two props overrided showing working maybe normal behavior vue currently said bug someone code camelcase use eslint vuerecommended", "d": "9/2018"}, {"body": "sorry bad fast copy pasting sandbox sandbox really show mean", "d": "9/2018"}, {"body": "fyi deep selector part vueloader please wait repro open issue", "d": "9/2018"}, {"body": "posva please read description close answered questions fyi deep selector part vueloader although maybe lessjs bug seems vueloader exactly vuecomponentcompilerutils maybe angular use familiar relays work since vueloader repo seems active report let users could find already many issues deep selector think wo nt offensive please wait repro open issue sorry busy build issue needed provide repo weekend probably nt need probably nt need bold imply necessary provide demo give wrong code chain already shows one line let create repo clone run show whether terminal sounds ridiculous rule convenient maintain repos also say needed based read links give rather close", "d": "9/2018"}, {"body": "always provide repro exceptions busy", "d": "9/2018"}, {"body": "reserved keyword js nt still work though", "d": "9/2018"}, {"body": "kaelwd said see language specification", "d": "9/2018"}, {"body": "ok see think also key es cause thx", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "works correctly chrome would advise go forum discord server details may something full code causing problem", "d": "9/2018"}, {"body": "functional component way go need one root element yes still ca nt multiple root elements regular component provided example order fix wrap template app single div error disappear", "d": "9/2018"}, {"body": "sure understand one root element template", "d": "9/2018"}, {"body": "test becomes two elements", "d": "9/2018"}, {"body": "ah see problematic since whole point avoid extra wrap break template functional component one solutions proposed issue locked solution third party library use undocumented attributes hacky according author throw error try import", "d": "9/2018"}, {"body": "multiple possible names nt look like good idea use case", "d": "9/2018"}, {"body": "reason lot libraries provide multiple aliases functions allows easier use certain applications specific use case building piece much larger app consumed casebycase basis particular slot name commonly used various ways sometimes abbreviated sometimes sometimes dropped word", "d": "9/2018"}, {"body": "imho essential keep consistent vocabulary across whole team especially larger apps let collaborators refer slot different names nt seem good practice think wo nt accept thanks", "d": "9/2018"}, {"body": "agree justineo also main concern", "d": "9/2018"}, {"body": "aight disagree nt good practice every application figured would ask thanks", "d": "9/2018"}, {"body": "mmh due rendering works want prevent select rendered therefore get updated value selected put component problem select element wo nt fire event mouse button released element replaced mouse pressed wo nt work fix would prevent replacing select element middle template possible", "d": "9/2018"}, {"body": "understand point replacing solving problem nt vmodel supposed sugar syntax", "d": "9/2018"}, {"body": "components reason working binding selected value select issue appear", "d": "9/2018"}, {"body": "seems odd whole template redrawn rather affected parts presumably good reason", "d": "9/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2018"}, {"body": "would happily help implementation", "d": "9/2018"}, {"body": "even though vue used event bus one require flexible implementation bus use many packages even create", "d": "9/2018"}, {"body": "hi may try make improvement first contribution already situations duplicated keys warning would helped", "d": "9/2018"}, {"body": "course nobody working", "d": "9/2018"}, {"body": "said discord really bug related vue reusing dom elements rerendering state changes particular case select first two options reused reason ok might small bug remain bound initial values two ways fix bind values second select use distinct key explicitly tell vue reuse", "d": "9/2018"}, {"body": "use key attr perfect solution thank", "d": "9/2018"}, {"body": "components include script tags even vue errorwarning talking something else could please provide small repro", "d": "9/2018"}, {"body": "using vue ssr without intention hidrate surely use scripts styles templates see condition error appear repro", "d": "9/2018"}, {"body": "mmh true added", "d": "9/2018"}, {"body": "thanks", "d": "9/2018"}, {"body": "turns even disable escaping entirely still escapes quotes script", "d": "9/2018"}, {"body": "html var x var something rendered like html var x amp quot amp quot var amp quot something amp quot", "d": "9/2018"}, {"body": "guys thank help really appreciate pls note little next knowledge programming coding anyways sw code something cut paste share thanks nbaules get outlook ios slee woo notifications githubcom sent tuesday september pm vuejsvue cc ngerikl baules manual subject vuejsvue ssr escape raw nodes var x var something rendered like var x amp quot amp quot var amp quot something amp quot receiving subscribed thread reply email directly view github mute thread", "d": "9/2018"}, {"body": "time replacing disable escaping render valid script", "d": "9/2018"}, {"body": "unfortunately features added full rewrite would require huge changes vue could even lead breaking changes something considered next major version thought", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "see deep selectors", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "thank read linter trouble producing result need understand vfor happening first vifvelse happens per iteration wanted share scenario vforvif combination yielded particularly unexpected behavior vfor would applied velse element", "d": "9/2018"}, {"body": "working expected consistent vif applied vfor", "d": "9/2018"}, {"body": "clear bug reporting nt vfor happening vif vfor applied code outside iteration happening expected behavior", "d": "9/2018"}, {"body": "style guide explains avoided actual render function example", "d": "9/2018"}, {"body": "looks actual behaviour expected thanks behaviour answer issue expected order checks render render order starts iterating says checks render render pair happens times even confusing behaviour would introduced referencing last one iterated outside iteration imagine something yeah writing gives headache someone wrote style guide must experienced", "d": "9/2018"}, {"body": "vif first would nt able use current item vfor", "d": "9/2018"}, {"body": "confused disputing happen fine vif velse even confusing behaviour would introduced velse referencing last one iterated vif outside iteration imagine vif something actually think would less confusing since nt syntactically referencing element probably require syntax like supported admit confusing perhaps confusion resolved mutual exclusivity enforced vue", "d": "9/2018"}, {"body": "think workaround available moment set bundle renderer manually insert template proper order reading client manifest assume even using would result ordering issues", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "code isnot useful", "d": "9/2018"}, {"body": "dom api nothing vue method allowed called windows opened script using windowopen method", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "windowopener null windowopen self windowclose", "d": "9/2018"}, {"body": "anything", "d": "9/2018"}, {"body": "defining things prototype dangerous thing pretty much everything object js means every single object data computed collision comes nt add things prototype object really avoided cost js project", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "vworld hook functions using function syntax object function first one behavior correct called directive bound element also every time component updated explained docs", "d": "9/2018"}, {"body": "thank answer problem vhello vword instructions update data elements bound respective elements triggering update hook function vhello vword instructions think called template bound element updated", "d": "9/2018"}, {"body": "chenrenxing provide reproduction issue afraid nt quite understand problem", "d": "9/2018"}, {"body": "sqal first thank click change event trigger nt think hook function alert update vworld vhello instructions triggered", "d": "9/2018"}, {"body": "chenrenxing triggered click button change property value changed trigger update component template let see documenttion says directive update hook update called containing component vnode updated possibly children updated see code works expected notice click button second time hooks called nt changed therefore vue nt need rerender component", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "modify value coming slotscope parent could property object nt either read property remember using somewhere js generated statement similar would nt work scopedslot creating kind local variables exactly like", "d": "9/2018"}, {"body": "native dom works", "d": "9/2018"}, {"body": "except read route instance store instance respectively copy data one instance put new vue instance trying clear ask go forum discord server ask questions first need come back elaborated feature request regarding usecase right clear", "d": "9/2018"}, {"body": "posva sorry stupid issue noticed next time", "d": "9/2018"}, {"body": "stupid issue missing information feature request", "d": "9/2018"}, {"body": "reproduction link computed property two dependencies modified link computed property one dependency always changed component updated workaround use instead function expressions", "d": "9/2018"}, {"body": "inline function one recreated every time template renders therefore prop changes computed property needs evaluated every component hcysunyang suggested method would make work similar thing happens plain objects since function created inside function template compiled hoist prevent", "d": "9/2018"}, {"body": "makes sense solution works thanks", "d": "9/2018"}, {"body": "already fixed vuejsvue land master part vue", "d": "9/2018"}, {"body": "ok thanks", "d": "9/2018"}, {"body": "use", "d": "9/2018"}, {"body": "typo reproduction link", "d": "9/2018"}, {"body": "related whether component asynchronous nonasynchronous components also problem vue htmlparser process following entity content", "d": "9/2018"}, {"body": "added map update right also eacute example nt work manually entities correctly converted fixed", "d": "9/2018"}, {"body": "would better use something like package", "d": "9/2018"}, {"body": "actually vue already using nodejs compiletime ssr leveraging dom api browser side perform entity decoding seems attribute values decoded using mentioned sure intentional miss", "d": "9/2018"}, {"body": "change api read documentation understand means", "d": "9/2018"}, {"body": "svg casesensitive need use", "d": "9/2018"}, {"body": "kaelwd said use instead fix problem", "d": "9/2018"}, {"body": "works", "d": "9/2018"}, {"body": "result behaviour slightly different one indeed setting element property modify text check", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "could", "d": "9/2018"}, {"body": "meant", "d": "9/2018"}, {"body": "nt think change lot things could like properties etc would painful check everywhere enabled course think maybe implement somehow", "d": "9/2018"}, {"body": "yes would painful kill outcome type safe code tbh nullcheck painful use typescript check missing update issue pr thanks letting know", "d": "9/2018"}, {"body": "discussion pr would leave closed see version bring", "d": "9/2018"}, {"body": "declared prop component", "d": "9/2018"}, {"body": "duplicate", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "looks like nt know make sure date tools node npm create project vuecli run work fine problem vuecli go fix codepen empty", "d": "9/2018"}, {"body": "please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "9/2018"}, {"body": "using vbindsync literal object vbindsync title doctitle work many edge cases consider parsing complex expression like", "d": "9/2018"}, {"body": "simple data object like vbindsync mail test gmaicom would also falling criteria guess case get prop reactive best practice would reassign data object within created method reactive data object like thanks", "d": "9/2018"}, {"body": "pass object reactive pass", "d": "9/2018"}, {"body": "makes sense however passing data laravel blade template vue js logic compiled external js files loaded client side passing data directly data like wo nt work case need go longer route via passing data attribute html component reactive another option instead reassigning data created method would assign data within blade template window object reassign data like blade template js file however feel like clean approach", "d": "9/2018"}, {"body": "need put data", "d": "9/2018"}, {"body": "mrjingles case suggest using regular events instead another way event", "d": "9/2018"}, {"body": "javoski thanks input try till thought sync syntactic sugar update event", "d": "9/2018"}, {"body": "till thought sync syntactic sugar update event exactly something like", "d": "9/2018"}, {"body": "hmm ok seems choice choose one suggested approaches either reassign data object within created method assign globally window object within blade template reassign vue component thanks input", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "computed properties may made multiple attributes example person name consists first name last name bound vmodel split new value first name last name input value changes", "d": "9/2018"}, {"body": "option initialized option could nt access computed properties inside option", "d": "9/2018"}, {"body": "explain first group using vmodel computed work well", "d": "9/2018"}, {"body": "jsvoski try made formconfig computed still working", "d": "9/2018"}, {"body": "anyway fixed issue please see code change way use origin setter getter computer missing", "d": "9/2018"}, {"body": "think explicit rather undefined makes sense also look like invalid key", "d": "9/2018"}, {"body": "sounds good looking way conditionally prevent caching", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "implemented userland little effort wo nt add api encourage ask help forum stack overflow discord chat happy help", "d": "9/2018"}, {"body": "reproduction link malformed html needs inside root element", "d": "9/2018"}, {"body": "oh sorry fixed problem still exists", "d": "9/2018"}, {"body": "putting outside root element vue app", "d": "9/2018"}, {"body": "mhldtna nt look like link updated case still works html toggle message", "d": "9/2018"}, {"body": "javascript objects works object key contain hyphenspace unless inside quotes paste chrome console get syntaxerror", "d": "9/2018"}, {"body": "happening however happening trying transition property property works expected", "d": "9/2018"}, {"body": "strange nt matter transitioning important thing move class transition", "d": "9/2018"}, {"body": "unclear css transition nt triggering however transition seems using leave using enter try changing durations", "d": "9/2018"}, {"body": "thanks pointing issue posva apologies finding right transitioncb concern fluke discovered unused arg points cue provided solution suspected relevance stepping code noticed trick defined transition util file utilised transition module nests call remove transition class wondered timing issue since happens asynchronously user defined callback leads alternative appropriate solution thiswidth px enter el windowrequestanimationframe gt windowrequestanimationframe gt elstylemarginleft null leave el elstylemarginleft code brittle since arguably reliant happening internally suggest user defined hooks actually run within cb else dom change hook appears actually paint hence transition never occurs area code relevance", "d": "9/2018"}, {"body": "components depend sure right approach pretty sure saw documented maybe using dynamic import one components cc chrisvfritz", "d": "9/2018"}, {"body": "register component correctly first argument must string", "d": "9/2018"}, {"body": "go", "d": "9/2018"}, {"body": "posva thanks lot kaelwd first argument vuecomponent must string make example nt use vuecomponent use modules webpack", "d": "9/2018"}, {"body": "yeah kinda glossed bit lol still error repro though codesandbox usually better multicomponent examples like especially something caused webpack", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "pretty trivial mixins edit updated minmax single value", "d": "9/2018"}, {"body": "would achievable userland helper functions passed validator also see", "d": "9/2018"}, {"body": "vue seems work fine also use plain passing values component want cherrypick properties vue", "d": "9/2018"}, {"body": "thanks sirlancelot said already supported object", "d": "9/2018"}, {"body": "well embarrassing either totally missed docs completely forgot thanks", "d": "9/2018"}, {"body": "\u8bf7\u63d0\u4f9b\u53ef\u4ee5\u8fd0\u884c\u7684 demo", "d": "9/2018"}, {"body": "\u53d1\u73b0\u662f\u6211\u672c\u5730\u8c03\u8bd5\u9519\u4e86", "d": "9/2018"}, {"body": "expected vue reuse components case use attribute least one force vue reuse", "d": "9/2018"}, {"body": "see also implement components putting logic mixins importing different components based environment variable mycomponent folder mycomponentmobilevue mycomponentwebvue indexjs takes right component adds common logic export", "d": "9/2018"}, {"body": "share code try use ca nt helloworldindexts repo show", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "error says place script tag inside vue template probably want update app parts search ask forum discord server help", "d": "9/2018"}, {"body": "template interpolation vue twoway binding", "d": "9/2018"}, {"body": "\u5e0c\u671b\u5c24\u5927\u80fd\u770b\u5230\u7ed9\u70b9\u610f\u89c1", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "documentation", "d": "9/2018"}, {"body": "nt think circular references components self referenceed js proname import vue vue import component vueclasscomponent component name tree must defined props pro object export default class tree extends vue", "d": "9/2018"}, {"body": "two component circular reference turely one component use self", "d": "9/2018"}, {"body": "link points recursive components circular references components", "d": "9/2018"}, {"body": "get thank patience", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "maybe link piece component name section would helpful open issue documentation repo", "d": "9/2018"}, {"body": "hey time please use forum discord server stackoverflow questions guess could include vue something similar", "d": "9/2018"}, {"body": "time sorry found questions topic suggest", "d": "9/2018"}, {"body": "expected see properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "9/2018"}, {"body": "found remove available found lines guile think nt rule conflict", "d": "9/2018"}, {"body": "conflict style guide still able use prefixed reactive property via", "d": "9/2018"}, {"body": "would componentid affix yield allowing every attribute behave class style would indeed expensive", "d": "9/2018"}, {"body": "think users would implement logic application layer anyway repeating vue done may need feature attributes accept spaceseparated tokens requires vue maintain list attributes think tradeoff worth considering still one problem users asks nt work claim special treatment passed attributes logic might accurate anymore", "d": "9/2018"}, {"body": "justineo definitely worth considering little bit frustrated confused applying class style difference props attributes little bit fuzzy well posva situation would yield something like passed string prop ideally would array might instead write componentid affix similar really think best way describing ideal api like class style work wonder calling providing utility functions something nt really seem fall within vuey realm things", "d": "9/2018"}, {"body": "expose stringifyclass somehow", "d": "9/2018"}, {"body": "kaelwd going ask code considering writing filter since understand hugely likely request would get priority buyin another approach might component level allow option set something like avoid unnecessary overhead", "d": "9/2018"}, {"body": "directive simple enough write syntax could similar suggested example vs similar could handle nonaria attrs well probably make longer", "d": "9/2018"}, {"body": "chinese doc", "d": "9/2018"}, {"body": "settimeout performance timeline shows massive calls caused array access vmodel familiar code perhaps pr would fix quick workaround maybe correct way case use object since using hash map direct access key rather array see", "d": "9/2018"}, {"body": "working thank", "d": "9/2018"}, {"body": "another solution worked oneway binding click event handler", "d": "9/2018"}, {"body": "please check documentation intended makes things easier opt option", "d": "9/2018"}, {"body": "thanks reply think better way default want use inheritance set think explicit means rather current representation", "d": "9/2018"}, {"body": "imo cases need developing reusable component certainly nt want enumerate possible html attributes manually eg etc cases want transparently output attributes root element defaults large chance would set loop properties output root element component btw also use dynamic object based value", "d": "9/2018"}, {"body": "justineo large chance would set true seems correct component related native tag almost form like inputbuttonvideoaudioselectformtable need feature components created libraries iview elementui internal teams need set developing components scenarios components developing applicationsapps default behavior little bad probably need set components use btw also use dynamic vbind object based value workaround seems correct needs us add judgement like need use problem solve another problem", "d": "9/2018"}, {"body": "seems correct component related native tag almost form like inputbuttonvideoaudioselectformtable need feature actually lot html global attributes may need example making accessible web app global attributes essential needs handcrafted differently scenario impossible encapsulate annotation inside component libraries workaround seems correct needs us add judgement like vbind foo prop need use problem solve another problem pass component options object filter object checking specific prop declared rendered component see sandbox", "d": "9/2018"}, {"body": "ok fine trade though seems codesandbox fussy use imo", "d": "9/2018"}, {"body": "intended prefer explicit things also allows vue setup reactivity system", "d": "9/2018"}, {"body": "maybe provide warning modifier nt exist except numbers", "d": "9/2018"}, {"body": "would help would useful consistent behaviour across browsers aka nothing unknownnonexisting modifiers although clear entirely within vue control", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "pick api nt exist nt even know function available js", "d": "9/2018"}, {"body": "posva hi get api source code inherits constructor api", "d": "9/2018"}, {"body": "var vuecomponent testa data return null methods saybye consolelog bye saytest consolelog hello test mixins created function thisa b function thissaytest mounted function consolelog thisab function consolelog aaa template var vm new vue el app", "d": "9/2018"}, {"body": "tbh fan feature css property accept multiple value types even unitless today nt mean stay unitless forever vice versa language evolves maybe someday unitless property take length units accept length units take unitless values property use accept unitless values later changed accept would never know true semantics behind number supported appending default", "d": "9/2018"}, {"body": "hi justineo see point think little bit exaggerating concern know css implementation relation units values css properties nt changed much versions take width height example ever since birth css nt changed much nt go unitless also certain properties would nt go unitless particularly properties involved like example far css maturity concerned pretty much sure wo nt seeing something like future anyway implemented reactjs much problem vue since definitely improve productivity", "d": "9/2018"}, {"body": "fan either means keep another list unitless properties keep date added runtime property name could dynamic", "d": "9/2018"}, {"body": "hi posva think necessarily need list unitless nonunitless properties could list commonly used properties real world scenarios like cases assign properties via javascript", "d": "9/2018"}, {"body": "unfortunately would nt consistent confusing users", "d": "9/2018"}, {"body": "hi posva yes right", "d": "9/2018"}, {"body": "actually slot scoped slot name case rendering slotsscoped slots template vue looks scoped slot specified name first slot providing anonymous slot scoped slot slot chance render see renderslotjs caveat seems missing docs think add cc chrisvfritz", "d": "9/2018"}, {"body": "emmmmm right render fine", "d": "9/2018"}, {"body": "use render functions actually picking exact slot render working", "d": "9/2018"}, {"body": "usecase behind", "d": "9/2018"}, {"body": "permit optimisation builds larger parameter object given event event actually received component emitted", "d": "9/2018"}, {"body": "explained parentchild events already think posva interested understanding use case requires emit listen event within component instead example calling method set component local data something ever come across far reason asking use case adding new api purpose fringe use case nt really anything would consider right understand prevalence severity use case new apifeature add", "d": "9/2018"}, {"body": "linusborg listening event component simply listening event programmatically call instead directly template event nt show events provided template something using ditojsadmin vuejs based framework build admin ui simple pojo schemas since much connecting happening code processing schema listen vents template since one exposed wondering nt", "d": "9/2018"}, {"body": "oh use case clear nt want component nt listening event building payload event expensive", "d": "9/2018"}, {"body": "since one exposed wondering nt nt exist vue something added lot people asked useful example pass listeners like pass props happens lot functional components hocs otoh one asked asked far nt think adding need api nobody wanted far since much connecting happening code processing schema listen vents template quick search nt bring use codebase github code search ignoring special chars helping care link one", "d": "9/2018"}, {"body": "mostly used outside schema events get installed framework uses internally current workaround", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "9/2018"}, {"body": "version reproduction link steps reproduce hello world hello worldssshello scoperow", "d": "9/2018"}, {"body": "note needed put source code sandbox component", "d": "9/2018"}, {"body": "never mutate props silencing error message definitely something want allow parent component renders lose modification may look like works right break soon parent component renders suppress warnings", "d": "9/2018"}, {"body": "yes know avoid said component sandbox case needs access update props nt care parent rerendering append developer livetesting component since parent loaded important thank answer", "d": "9/2018"}, {"body": "maybe better idea render sandbox left editable fields must update visible child component values child test component right needs updated editing sandbox fields fields generated sandbox parsing child component props", "d": "9/2018"}, {"body": "mutating props antipattern going add warning silence ignore works specific scenario though want ask questions please use forum discord server stackoverflow", "d": "9/2018"}, {"body": "ok find way thank time cheers beer", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "duplicate fyi shipped enhancement caused regression included", "d": "9/2018"}, {"body": "clearly stated doc find trying compose templates using vhtml try rethink solution using components instead plus breaking change considered moment", "d": "9/2018"}, {"body": "object constructor function", "d": "9/2018"}, {"body": "thanks reply javoski replace simple object inside component empty object received prop still well filled take look screenshot please", "d": "9/2018"}, {"body": "hook called prop changed use computed property", "d": "9/2018"}, {"body": "thank help javoski used watcher prop value changes value update", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "think make issue vuecli sorry", "d": "9/2018"}, {"body": "erwinwahyura looks like project configured know check webpack config real dependencies correctly installed", "d": "9/2018"}, {"body": "please open corresponding repo vuejsorg repo", "d": "9/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "9/2018"}, {"body": "hard type", "d": "9/2018"}, {"body": "custom components support bindings need define prop event handler missing reproduction ie following suggestions doc", "d": "9/2018"}, {"body": "hi justineo added event handler sandbox nt work check sandbox", "d": "9/2018"}, {"body": "also need declare prop custom component", "d": "9/2018"}, {"body": "nt work either", "d": "9/2018"}, {"body": "working", "d": "9/2018"}, {"body": "option selected using google chrome btw", "d": "9/2018"}, {"body": "chrome", "d": "9/2018"}, {"body": "open private tab works thank", "d": "9/2018"}, {"body": "pr submitted", "d": "9/2018"}, {"body": "hi linusborg see added labels issue anything else need kick review process referenced pull request thanks", "d": "9/2018"}, {"body": "plz take look", "d": "9/2018"}, {"body": "made pr add documentation", "d": "9/2018"}, {"body": "vue typescript way access methods function", "d": "9/2018"}, {"body": "posva fnlctrl still concrete answer event bubbling vue components nt act line html event bubbling expanding implicit problems leads", "d": "9/2018"}, {"body": "deal", "d": "9/2018"}, {"body": "please make happen", "d": "9/2018"}, {"body": "another benefit always using scopedslots insteadof slots lazy evaluation slot content imagine component following template loading comp wouldnt display slot content item becomes truthy normal slots rendered eagerly causing errors despite slot content displayed", "d": "9/2018"}, {"body": "reverted original intention change avoid unnecessary rerenders computed property dependencies changed computed value remains unchanged however requires computed properties dependencies become eager reevaluate synchronously whenever one dependencies change leads issue described chained computed properties pretty common likely common case originally tried prevent computed property deps changed value remains importantly original behavior lead duplicated computation even worst case scenario nowreverted behavior could lead potentially much wasted cpu cycles reverting change", "d": "9/2018"}, {"body": "importantly original behavior lead duplicated computation even worst case scenario nowreverted behavior could lead potentially much wasted cpu cycles reverting change probably true statistically still unfortunate situations computed property heavy calulation previous computed property often updates always returns value guess situations user must manual caching computed property use memoized method instead", "d": "9/2018"}, {"body": "still unfortunate situations computed property heavy calulation previous computed property often updates always returns value yes exactly situation reported seeing duplicate trying use computed props elegant way cache intermediate results actual behavior surprising may others constructing computed props intermediate caches expectation better performance getting due incorrect belief recompute behaviors guess situations user must manual caching computed property use memoized method instead yes need instead would love eventually memoization behavior built computed props", "d": "9/2018"}, {"body": "fyi usecase prevent certain calculations happening rapid events example", "d": "9/2018"}, {"body": "find docs taken hour searching data property nt work would better support dollar prefixed properties", "d": "9/2018"}, {"body": "vitorluizc", "d": "9/2018"}, {"body": "make easier create high order component pr accepted use", "d": "9/2018"}, {"body": "guess would issue fixed causes sure would exclude version testing reason form field processed button enter tapped whereas processing content soon changed", "d": "9/2018"}, {"body": "trick typescript need define interface component implements blessing curse statically types languages take instance example nav component vue typescript navnavbar role navigation arialabel main navigation navbarbrand anavbaritem href img src alt bulma modern css framework based flexbox width height anavbarburger role button arialabel menu ariaexpanded false span ariahidden true span ariahidden true span ariahidden true div vbind class navbarmenuclass import component prop vue vuepropertydecorator const navbarmenubaseclass navbarmenu interface inav menuisactive boolean component export default class nav extends vue implements inav menuisactive boolean false computed return navbarmenuclass navbarmenubaseclass thismenuisactive isactive added interface definition getting type errors thismenuisactive", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "dbflower \u4e86", "d": "9/2018"}, {"body": "falstack \u4f60\u662f\u4e0d\u662f\u7528\u4e86ssr \u6211\u7528ssr \u5728 created", "d": "9/2018"}, {"body": "dbflower \u6211\u5728 appvue \u91cc\u8bbe\u7f6e\u4e86 store", "d": "9/2018"}, {"body": "falstack \u51c6\u786e\u6765\u8bf4\u6211\u662fhtml\u91cc\u9762\u7528\u4e86store\u91cc\u7684\u6570\u636e store html \u91cc created \u94a9\u5b50\u91cc \u52a0\u4e0assr", "d": "9/2018"}, {"body": "think logical set value anyway slot vif away twisted case still nt work first component accepts scoped slot component passes subcomponent check user provided one current logic subcomponent either receive user scoped slot either undefined scope still set value subcomponent subcomponent wants pass optional scoped slot subsubcomponent mechanic subcomponent check scoped slot exists always true fallback wo nt happen user gave scoped slot beginning would nt happen empty instead providing undefined function let know makes sense way passing scoped slots wrong thanks", "d": "9/2018"}, {"body": "ran today find strange regular slots scoped slots behave differently vif would expect scopedslots work like op proposed regular slots work", "d": "9/2018"}, {"body": "\u5148\u770b\u4e0b\u9762\u4e00\u4e2a\u4f8b\u5b50 leave el elstylemaxheight afterleave el elstylemaxheight enter run result beforeenter elstylemaxheight enter elstylemaxheight afterenter elstylemaxheight leave run result \u521d\u59cb\u503celstylemaxheight beforeleave elstylemaxheight leave elstylemaxheight afterleave afterleave elstylemaxheight elstylemaxheight gt gt gt afterenter \u4ece\u53d8\u4e3a jackysee", "d": "9/2018"}, {"body": "warp component function import example load component click e fired load compnent const helloworld gt import componentshelloworldvue export default name home data return toggler false components helloworld", "d": "9/2018"}, {"body": "creativspeed thank question simply async components already exist problem need function already registered component loaded modifications pr exactly register load component called template", "d": "9/2018"}, {"body": "commentary still run problem every day edit seems problem actually fixed libraries nt updated return problem really confusing though", "d": "9/2018"}, {"body": "version still getting issue damn ie", "d": "9/2018"}, {"body": "anyone still experiencing issue symmetriq tip spot reverting solves assume also correct regex adjustment", "d": "9/2018"}, {"body": "really hurting app keeps track scroll position renders based ie using settimeout causes scroll events always cut line settimeout resulting view never updating stop scrolling right resorting circumventing vue rendering updating scroll position since shippable like updates status discussion regarding nexttick debacle seems radio silence please labeled well cc justineo posva", "d": "9/2018"}, {"body": "changing use instead fix issue open different worms", "d": "9/2018"}, {"body": "note using vuejs may see error trying use going solution either update vuejs use scope instead slotscope hope helps anyone else finding google like ps using vuejs remember need use element ca nt put slot scope boundary miscellaneous element little realworld example", "d": "9/2018"}, {"body": "want use function first argument code looks like going cause infinite loop working", "d": "9/2018"}, {"body": "closing due inactivity week please open new issue reference one follow information", "d": "9/2018"}, {"body": "seems confusing conflicts directly existing vue interpretation field", "d": "9/2018"}, {"body": "nt think common enough problem merit solution core easily create helper js const onlyvalues values gt str gt valuesindexof str const props position type string validator onlyvalues top left bottom right also validators nt run production anyway development helper", "d": "9/2018"}, {"body": "dkushner conflict field currently allow primitives constructors", "d": "9/2018"}, {"body": "conflict field add field", "d": "9/2018"}, {"body": "tracked bit seems come vue treats custom components differently regular element like regular inputs vue looks value finds browser emitting regular inputevent object custom components like ioninput seems vue expecting value emitted directly subclass event vue looks value rather behaviour documented probably done make coding custom components simpler developer would nt need instantiate new event emit simple fix uneducated guess part would get rid special case custom components check ed actually event object wrap event nt", "d": "9/2018"}, {"body": "encountered error solved changing line component", "d": "9/2018"}, {"body": "confirming issue store strict mode using nuxt", "d": "9/2018"}, {"body": "update lack correctconsistent nexttick really causing problems trying ensure vue nonvue parts ui updated frame", "d": "9/2018"}, {"body": "hi expanded doeke mixin simulate propagation errorcaptured hooks may also async sure works spec may help someone temporarily issue resolved javascript import vue vue mixin fixes following issue errorhandler work async component methods async function propagateerrorcaptured component error vm let continuepropagation true const ec component optionserrorcaptured ec instanceof array let lt eclength continuepropagation ec apply component error vm typeof continuepropagation object amp amp typeof continuepropagationthen function wait promise continuepropagation await continuepropagation continuepropagation break component parent amp amp continuepropagation return await propagateerrorcaptured component parent error vm else return continuepropagation export default beforecreate const methods optionsmethods objectentries methods foreach key method gt const wrappedmethod function args const result methodapply args const resultispromise result amp amp typeof resultthen function resultispromise return result return new promise async resolve reject gt try resolve await result catch error const continuepropagation await propagateerrorcaptured error continuepropagation vueconfigerrorhandler vueconfigerrorhandler error else reject error methods key wrappedmethod", "d": "9/2018"}, {"body": "thank suggestion making similar control spent morning trying figure could nt await async event handler refactoring gets desired behavior", "d": "9/2018"}, {"body": "way", "d": "9/2018"}, {"body": "nt default behaviour rationale vue sharing global state across vuecomponents read", "d": "9/2018"}, {"body": "reference make updatable time work ui", "d": "9/2018"}, {"body": "seems allowing async support lifecycle methods encourage bad ux practices default async functions used requests completed immediately eg longrunning network requests forcing vue delay creation mounting lifecycle methods wait network request longrunning asynchronous process impact user noticeable ways imagine user coming site wait seconds blank screen component waits user spotty cell connection finish network request negatively impact user also sacrificing control situation nothing developer make users perceived load time quicker show determinate indeterminate progress indicators building ability vue nt making web better place enabling bad practices much better plan design asynchronous case getgo kick asynchronous process wherever make component skeleton structure worst spinner wait api return user permissions much better ux nt sacrifice control vue nt add code deal asynchronous lifecycle functions keeping bundle smaller win win", "d": "9/2018"}, {"body": "seanfisher raise valid point architecturally speaking designing around asynchronous set events handled developer way portray message correctly disclaimer following written idea page generation mind definitely valid usecases argument invalid however dictating design patterns developer left framework using argument waiting phase complete different phases created mounted stage everything basically happening completely ignoring created stage okay literally time ever since early vue hooked created inject something vue needed rely nothing setup layout page however wait short async tasks run would much better page got rendered hooking firebase authentication methods create waiting complete mounted would reduce need hacky workarounds completley remember argument vue nt tell im developing wrong provide desired functionality", "d": "9/2018"}, {"body": "however dictating design patterns developer left framework using um frameworks built specifically limit guide frame developer certain design patterns practices main purpose good framework offer smart api precisely offers clear obvious way work framework yet also constraining yes paradoxical framework offers certain abilities yet also constrains developer time certain design practices exactly opinionation within frameworks either help hurt hard find right balance think vue rather evan vue dev team done great job making judgement calls scott", "d": "9/2018"}, {"body": "never argue well designed framework extended design pattern argument framework ca nt dictate correct saying matter good framework end developer still open whatever wanted nt touched actual argument making created mounted events asyncs added opinion nt wrong opinion generally leads huge derail", "d": "9/2018"}, {"body": "never argue well designed framework extended design pattern argument framework ca nt dictate sorry makes sense please show one framework nt dictate extended thought saying evan co making good judgement calls would show opinion clear mounted created lifecycle hooks nt need work asynchronously rather fact work synchronously helps reasoning application logic waiting needs accounted ui anyway asynchronous code still ran hook argue necessary beforemount mount hooks might thing two might need mounted instance ca nt yet access created like compiled render function scott", "d": "9/2018"}, {"body": "vue opinion one way async lifecycle hooks nt matter speculation need speculate standards apis guides best practices vue adopts provides recommends available read evan original reply async lifecycle hooks standard api necessarily bad idea benefits substantial enough justify cost implementation opinion bad practice make user wait async lifecycle hook without indicator something happening argument made vue supported async hooks maybe provides something could called phase templates would also solve problem could easy implement", "d": "9/2018"}, {"body": "opinion bad practice make user wait async created lifecycle hook without indicator something happening really even problem scott", "d": "9/2018"}, {"body": "issue maybe someone suggest appears problematic vue application rather large uses vuex extensively quite vue components create lifecycle set via storedispatch items store obviously however come attention storedispatch always returns promise even underlying logic function async put async created await storedispatch fooaction noted actually fails also using typescript complains rather bitterly nt await storedispatch calls floating promises best way use vuex storedispatch lifecycle ca nt async cheers", "d": "9/2018"}, {"body": "discussion vue specific opinions whether frameworks impose opinions aside could beneficial document behavior clearly", "d": "9/2018"}, {"body": "made proposal feedback welcome proposal json format editor behavior part nt know library building current helper json files vetur hope get feedback alexsasharegan rstoenescu asialmatagawa jtommy qingweili nekosaur also would interested collaborating build json new format library add documentation library source code amp work tool extract metadata json work probably would need help library authors still open questions amp author data leopiccionia point components attribute feels messy descriptions scattered vue files", "d": "9/2018"}, {"body": "see thread mentioned continuing proposal discussion want comment encourage issues raised proposal repo", "d": "9/2018"}, {"body": "things write typing data source code store amp distribute data data look like amp editor based data continue discussion open issues", "d": "9/2018"}, {"body": "regarding write typing data favor first way proposal illustrates put typing data put npm module publishing add key vuetypes points path file benefit json always right version effect following existing behavior things like familiarity good nt seen sideeffects approach packagejson approach also means library authors use buildtime scripting generate uptodate set component definitions permissions manage publishing apart required publishing library general second option listed publish verilytyped automatically publish vuetypes nt know worth hassle benefit separate repository mutually exclusive packagejson distribution allows community members produce component defs libraries nt available definitely valuable far less pressing relationship two distribution methods exactly see already typescript community embedded library definitions communitycontributed definitions definitelytyped think good balance embedded publishing primary concern community registry secondary one", "d": "9/2018"}, {"body": "alexsasharegan topic made explicit topic write data source code jsdocs fields default export custom block etc", "d": "9/2018"}, {"body": "ah bad move comment proposal repo nt mind", "d": "9/2018"}, {"body": "like jsdoc ts reason use jsdoc nt break code dev long time use props seem easy think nt good design vue", "d": "9/2018"}, {"body": "two solutions existed quite time use vue functional component see second comment issue use vuefragments thirdparty extension posva get thread locked future readers see solutions", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "guys extend types projects risk", "d": "9/2018"}, {"body": "lizijins", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "plans fix", "d": "9/2018"}, {"body": "posva currently problem child get scroll try stop event propagation parent work talk plain js solution", "d": "9/2018"}, {"body": "jkzing", "d": "9/2018"}, {"body": "\u6211\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86 \u5728router\u5165\u53e3\u52a0\u4e0a meta keepalive true \u9700\u8981\u88ab\u7f13\u5b58 \u70b9\u51fb\u5173\u95ed\u7684\u65f6\u5019\u8bbe\u7f6e\u4e3afalse \u63a5\u7740\u7528\u76d1\u542c\u5668 \u6539\u4e3atrue \u5177\u4f53\u770b \u73b0\u5728\u6d4b\u8bd5\u8fd8\u6ca1\u95ee\u9898 \u4e0d\u77e5\u9053 \u540e\u9762\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898", "d": "9/2018"}, {"body": "tab\u5207\u6362\u7684\u65f6\u5019\u7f13\u5b58 \u5173\u95ed\u7f13\u5b58\u8981\u9500\u6bc1\u53ca\u4e0b\u6b21\u6253\u5f00\u91cd\u65b0\u52a0\u8f7d \u591a\u91cd\u5d4c\u5957\u5b50\u8def\u7531\u9875\u9762\u4e5f\u662f", "d": "9/2018"}, {"body": "vshow", "d": "9/2018"}, {"body": "vuemixin beforerouteleave function next amp amp frommetarank amp amp tometarank amp amp frommetarank gt tometarank vnode amp amp vnodedatakeepalive vnodeparent amp amp vnodeparentcomponentinstance amp amp vnodeparentcomponentinstancecache vnodecomponentoptions var key vnodekey null vnodecomponentoptionsctorcid vnodecomponentoptionstag vnodekey var cache vnodeparentcomponentinstancecache var keys vnodeparentcomponentinstancekeys cache key keyslength var index keysindexof key index gt keyssplice index delete cache key destroy next", "d": "9/2018"}, {"body": "liudapeng \u5f00\u542f \u4e0d\u4f7f\u7528 keepalive \u7684cache", "d": "9/2018"}, {"body": "would love see solution well", "d": "9/2018"}, {"body": "good news seems like resolved vue compilergenerated slots functions invoked child component render call ensures dependencies slots collected dependencies child instead parent means slot content changes child rerenders parent rerenders child slot content change", "d": "9/2018"}, {"body": "braunson work fine using vue build spa vuex vuerouter version command line one problem default would remove fix", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "definitely sqal discovered best solution perhaps documented using completely defeats purpose using filter might well create method still want use filter documentation mention bind innerhtml dom property", "d": "9/2018"}, {"body": "doubly confusing vue seems remove ref attribute rendering", "d": "9/2018"}, {"body": "however callback moment scenarios like recalculating scrollbar eg final callback would really handy", "d": "9/2018"}, {"body": "\u7167\u4f60\u8fd9\u4e48\u5199\u8fd8\u662f\u6ca1\u7528\u554a", "d": "9/2018"}, {"body": "also agree component context filters point providing percomponent filters opposed global filters point able access component component filter able access component global filter", "d": "9/2018"}, {"body": "also agree component context filters point providing percomponent filters opposed global filters actually different thirdparty components may use different filters name need isolation prevent collisions", "d": "9/2018"}, {"body": "absolutely convinced filters must way access context question core team going sorry opinion changed filters access context need context use method", "d": "9/2018"}, {"body": "window functionname thisfunctionname \u6b63\u89e3", "d": "9/2018"}, {"body": "issue consistently issues documentation verbatim vuejs nt work typescript page typescript blog information like feeding hungry elephant peanut stuck endless search trying piece together instructions looking solution sometimes taken days sometimes minutes hours every time delays development programming years take listeners example vue js website instruction typescript core environment use immediately loader comes back following idea even begin search answer add myriad features nt work using vuejs typescript core huge mistake often find frustrated spending time searchinf trying piece together tos order resolve issues continue come vue js typescript appeal never two together net nto require loader bundler force issue use vue js way cdn visual studio basic bundling use vuejs library documented wait whenever decide important enough something error vueloaderlibtemplatecompiler id vueloaderlibselectorjs typetemplate amp clientappcomponentsresourceresourcevuehtml emitted value instead instance error error compiling template lines html code invalid expression unexpected token raw expression von click onclick hello event clientappcomponentsresourceresourcevuehtml clientappbootts multi eventsourcepolyfill webpackhotmiddlewareclient pathwebpackhmr amp dynamicpublicpathtrue clientappbootts", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "lanpangzhi work able use example show posva fiddle figure got working something like following export default name mainapp components data function return excludenames new set methods includenames return routeroptionsroutesmap r gt rcomponentsdefaultname filter name gt name amp amp thisexcludenameshas name includenames based router setup", "d": "9/2018"}, {"body": "nt matter", "d": "9/2018"}, {"body": "caused issues well use case migrating legacy app vue trying incrementally fairly nontrivial project trying keep html markup rendered vue component close humanly possible migration app stores state dom legacy components access jquery presence comments means hard assumptions html violated whereas code like used return given state app returns html content changed particular state switched serverrendered html vue component including posting expectation rewrite vue based badly factored legacy jquery feedback user struggled empty comment actually affecting behaviour app also suggestions workaround vue side would gratefully received", "d": "9/2018"}, {"body": "still issue current version default", "d": "9/2018"}, {"body": "issue fixed facing similar issue anyone help fix", "d": "9/2018"}, {"body": "memory leak dose work ie computer memory may raise", "d": "9/2018"}, {"body": "go implementing nexttick facing similar problem passing prop vue router using keepalive routerview", "d": "9/2018"}, {"body": "whatever updating wrap nexttick callback arg eg", "d": "9/2018"}, {"body": "edit apologize spamming prematurely probably issue end please disregard sure issue related get jsx insert single space anywhere gets stripped examples expected behavior based browsers deal html believe also spec single space always preserved clearly calling collapse strip away whitespace tested templates use clarify case child vnode string whitespace", "d": "9/2018"}, {"body": "saw reports weird spacing inconsistencies users safe wanted normalize save couple bytes added sed step build command postprocess js files partial fix replaces single space probably adjust space indentation ensure regex nt match source code things break directory files process seems working sure test output project", "d": "9/2018"}, {"body": "see problem reactive refs solve also think good reason reactive says docs refs meant escape hatch direct child manipulation avoid accessing refs within templates computed properties know important pattern components kept isolated communicate props events interface refs exist edge cases pattern insufficient refs reactive allow antipattern refs used instead events result components coupled agree messy making forms vue inputs separate components doubt reactive refs would convenient think easy abused better solution considered", "d": "9/2018"}, {"body": "needs better documentation vmodel everywhere look says shorthand input emit input eventtargetvalue issue proves otherwise bug lack documentation nt use examples broken solution use eventtargetchecked eventtargetvalue", "d": "9/2018"}, {"body": "agree line number source file speedup debugging lot", "d": "9/2018"}, {"body": "anything new issue closed since issue still", "d": "9/2018"}, {"body": "would love fixed debugging complicated right need file name line number easier debugging please fix", "d": "9/2018"}, {"body": "custom modifiers plenty usecases could accomplished feature application different inputs format currencies always store cents amount model display nicely formatted dollars amounts inputs model shown usecase sanitizing unescaping html fields order prevent xss atacks model stores input shows", "d": "9/2018"}, {"body": "met problem migrating jquery yeah sroberson pointed attaching handlers vuejs created shadow dom works whether putting script tags code run synchronous attaching handlers mounted funny face use case migrating kinda vue somethinig fact vue vue jquery top use case vue legacy code side bundled minified access source vue code several viewmodels managed vue page nonvue parts dom still issue comes life want add new listener within dom managed legacy vue code listener gets erased vue fix use workaround assign nonvue event listener timeout assuming vue finished repacing part dom time timeout ended way listener landed onto dom already rendered vue done js module loaded vue code loaded like last tag vuecontaining bundles loaded know coarse especially could coarse slower devices networks timeout value tested real device implementing production far nothing better comes mind use case", "d": "9/2018"}, {"body": "aymanalkom thanks nt work use code says vue defined absolutely weird use following code worked vue app component make work component defined globally thanks", "d": "9/2018"}, {"body": "added yet", "d": "9/2018"}, {"body": "issues created custom drop lists bootstrap toggle switch create list check boxes list one selected affects three filter options created using getter within getters underlying arrays restricted automatically affects selected check boxes getters use arrays filter options times works debugging code resolve bugs often fallen trap permanently loops seems controlled venderjs file calls getters reason sure happen turn method filters selects underlying arrays action one still causes getters run", "d": "9/2018"}, {"body": "tell vue watch defineproperty depth data idea easier structure data using vue external graphic lib normally multilevel nested large objects specify properties reactive", "d": "9/2018"}, {"body": "azamatsharapov correction made passing right number parameters variable called declared", "d": "9/2018"}, {"body": "sad team adds might use alternate data structures", "d": "9/2018"}, {"body": "please consider add option make working external graphic lib much easier", "d": "9/2018"}, {"body": "ediamin vue still takes string solved problem bind usercount", "d": "9/2018"}, {"body": "assigned value null evaluate string null parameters net mvc expect null value null solution thanks", "d": "9/2018"}, {"body": "simple workaround would use adding space elements directly possible move parent results expected outcome could also replace space nonbreaking space", "d": "9/2018"}, {"body": "", "d": "9/2018"}, {"body": "pratikshaparsewar look answer earlier covers browsers implementation last pass certain inject values input think would better luck sending message last pass team implementation rather thread based browsers saved password approach", "d": "9/2018"}, {"body": "try integrate codeearlier fixing issue removed vmodel replaced thisemail eventtargetvalue thispassword eventtargetvalue within method fri sep pm jon leibham notifications githubcom wrote found workaround autofill page load mounted settimeout function documentqueryselector forminput blur settimeout might necessary notice inconsistencies without receiving mentioned reply email directly view github mute thread pratiksha parsewar image", "d": "9/2018"}, {"body": "rather needing hidden input element pass data vue directly set data object directly vue declared variable available global context example html directly set value vmyourdata whatever data may placing hidden input", "d": "9/2018"}, {"body": "problem solved putting images public folder put images public folder template sure use vbind src template data flowers name sunflower melody cost qty null img", "d": "9/2018"}, {"body": "resetting initial property values running lifecycle hooks", "d": "9/2018"}, {"body": "anyone solved lodash solved problem helps template something like tested chrome firefox", "d": "9/2018"}, {"body": "mqliutie must something wrong check fiddle recommend upgrading fiddle url working maybe vue version issue", "d": "9/2018"}]