[{"title": "remove implicit errorloading routes list routes linkto assertion", "body": "would need changed way nt honestly know best way tackle looking names alone would nt guarantee someone nt explicitly write route particularly named prefixed ones maybe fine purpose error message filter eg", "num": "4275", "d": "1/2014"}, {"title": "table row duplicated dropping sorted array saving model via emberdata", "body": "difficult summarise best demonstrated fiddle ember emberdata instructions results latest builds time submission ember emberdata rendering bunch records emberdata fixtures table table sortable different fields using embercomputedsort certain circumstances described fiddle editing saving first record table changing sort field causes edited record duplicated stuck top table seems dropped array click events ignored", "num": "4273", "d": "1/2014"}, {"title": "emberobjectcreate nt remove listeners added via funcon property overwritten", "body": "ember nt remove listeners property requested overwritten example javascript var person emberobjectextend name emberon init function throw new error must provide name var dude personcreate name bilbo baggins uncaught typeerror object bilbo baggins method call probably asking hell would anyone well definitely edge casesbut thought document nonetheless", "num": "4268", "d": "1/2014"}, {"title": "rsvppromisecatch breaks", "body": "method promise objects breaks since reserved word unfortunately jsfiddle jsbin support anymore jsbin code javascript appindexview emberviewextend didinsertelement function var controller thisget controller note jsbin even flags reserved word propose moving back nonbreaking method also something familiar jquery users", "num": "4266", "d": "1/2014"}, {"title": "array sorting always working", "body": "hi guys im trying understand cases sortby working short demo bug building facebook style timeline app push payload store controllers content array sorting properly thank help", "num": "4264", "d": "1/2014"}, {"title": "hashchange event firefox nt use hashlocation geturl method", "body": "firefox latest version see hashchange event handler accesses locationhash directly causes hash url decoded url segments containing encoded slashes break routing fix need use var path selfgeturl instead var path locationhashsubstr hashlocationjs", "num": "4262", "d": "1/2014"}, {"title": "route serialization unmaterialized model", "body": "try create fiddle later late wanted brain dump go bed parentchild model relationship parent template linktoing child child materialized yet function called child route via argument actually promise actual record causing problem overriding child slug function case action clicking link still works app still redirects proper route hover link intended url instead", "num": "4260", "d": "1/2014"}, {"title": "convenient way observe url changes", "body": "currently sitting use case requires run code url changes current solution problem would look application controllers currentpath property however two issues approach currentpath nt return current path returns current route ie somethingsomething somethingsomething currentpath returns current route return value two paths identical articleemberjsisaawesomeframework articleicanhazmoreemberjs searched internet thin struggling find convenient way get current path observable way understand ca nt change names ca nt help feel properties application controller something like property value currentpath articleicanhazmoreemberjs currentroute articleshow feature request could currentpathname property application controller thoughts", "num": "4253", "d": "1/2014"}, {"title": "super must called outlet observer", "body": "custom view outlet observer break second render unless thissuper called inside observer jsbin example sure whether bug however seems counterintuitive also expected behavior definitely needs documented somewhere", "num": "4250", "d": "1/2014"}, {"title": "route viewname high precedence calling render name parameter route", "body": "demonstrated routes rendered view since extending route explicitly rendering using name parameter sources controller view template derived render method able gleam tests code following options hash view foo controller bar name parameter either template view name explicitly defined route properties etc route defaults resolved using demonstrated fiddle respect order higher precedence name parameter", "num": "4248", "d": "1/2014"}, {"title": "queryparamsnew refresh true utilized nonnoop transitions", "body": "following routes query param defined listcontroller transition listitem sortbydate list sortbyname queryparamsdidchange triggered attach failing test", "num": "4245", "d": "1/2014"}, {"title": "queryparamsnew feature breaks", "body": "hey discussed feature breaks run example useless fails simplest form query params sure helps stacktrace build method let know need extra details assistance thanks", "num": "4239", "d": "1/2014"}, {"title": "adding templatename document emberroute", "body": "used project time yet property emberroute found thing source code property useful route needs different controller ember source glad see defined properties well documented still use another thing already used see emberroute source useful route need different template view example router file define route case route display form page create template obviously default controller template route configure route like coffeescript apptaskeditroute emrouteextend controllername taskform rendertemplate gt render taskform see need override use custom template tried ember notify ca nt find view course nt defined tried use works like think defining non coc template common requirement controller view suggest add property also document let devleopers know actually already used source code", "num": "4234", "d": "1/2014"}, {"title": "linkto tagname div respond mobile safari", "body": "used ember phonegap create ios app one problem found using linkto set nonlink tag like div link redirected browsers like android browser desktop chrome safari issue nt happen jsbin example", "num": "4232", "d": "1/2014"}, {"title": "iterdeps emberjs canary calls propertydidchange attributes used embercomputedsort", "body": "seeing errors eventually index range push update emberdata model use conjunction embercomputedsort appparty dsmodelextend members dshasmany user inverse partymemberships sortedmembers embercomputedsort members membersorting membersorting name appuser dsmodelextend name dsattr string partymemberships dshasmany party inverse members send update data id partymemberships array storeupdate appuser data name attribute sorting makes metadeps data function iterdeps finally iterdeps calls propertydidchange name user instance seemingly problem partymembershipsarray grows update shrinks say parties eventuallly see index range error partymembershiparray observers notified flashchanges called selectively filter call everything runs smoothly obviously going work hard time setting jsfiddle might left critical details description offer screensharing session see stacktraces could even record brief screencast helps", "num": "4231", "d": "1/2014"}, {"title": "router bug aborting transition beforemodel", "body": "click posts jsbin click post comments update think comments update scenario ie commentsroute model hook called parent route model changed think happening transition aborted halfway router thinks comments model still valid invalidated machty bug stupid cc briangates", "num": "4230", "d": "1/2014"}, {"title": "ember jquery tests nt pass jquery update", "body": "", "num": "4228", "d": "1/2014"}, {"title": "emberarray documentation link emberarrayproxy", "body": "spent whole lot time searching add objects array observable manner emberarray documentation link emberarrayproxy words goes emberobject emberobjectproxy etc well", "num": "4225", "d": "1/2014"}, {"title": "fails attempting remove timer window object", "body": "related relevant line fails attempting remove timers ie console spits object nt support property method using objectprototypetostringcall probably used support", "num": "4222", "d": "1/2014"}, {"title": "nt assert render called matching controller inline template", "body": "recent commits make helper throw error view template looked name container however nt account case controller matches given name template provided inline handy way separate units logic nt make sense main controller nt common template makes components unusable", "num": "4221", "d": "1/2014"}, {"title": "proposition conventionalize resource index route model hook", "body": "like defining show routes ember conventionalized would nice conventionalize index route well instance following pattern conventionalized remove hook js approutermap function thisresource posts thisresource post path post postid apppostroute emberrouteextend model function params return thisstorefind post paramspostid however still needs define hook could understand conventionalizing finding records removing hook would strong opinion potentially makes sense create function must passed argument would currently look like proposing conventionalize pattern would need hook proposition actually proposing two things could submit initial pull request always create indexroute subroute defining resource nt pass empty function would create default hook prospectively related conventionalize indexroute hook function like routes id dynamic segments introducing common hook behavior current routes like thus removing hook route looks like course allows us omit definition altogether", "num": "4218", "d": "1/2014"}, {"title": "render model working", "body": "hi followed guide render helper nt render model data cloth handlebar html test name name index handlebar html render cloth cloth js javascript windowapp emberapplicationcreate console get undefined printed getting html controller working expecting html controller working", "num": "4216", "d": "1/2014"}, {"title": "binding scope issue within handlebars template", "body": "rendering bound property page binding value control always work expected per jsbin even stranger wrap tags problem longer occurs", "num": "4215", "d": "1/2014"}, {"title": "filter object regression", "body": "get following error message loading app filter null object emberjs line character application works fine using ember also use jquery latest beta emberdata", "num": "4211", "d": "1/2014"}, {"title": "textsupport coupled targetactionsupport", "body": "mixed inherits mixes provides works fine means wo nt work either inherit least declare documentation required provided latter mixin", "num": "4206", "d": "1/2014"}, {"title": "firefox decodes url path", "body": "related fix queryparams path section query param url encoded firefox decode cause path get converted break routing firefox behavior correct encoded route entered ember immediately transitions decoded path cause error shows difference firefox chrome others", "num": "4205", "d": "1/2014"}, {"title": "breaking change router since", "body": "hi since upgraded app seems broken getting following error error visit list routes following routestructure js approutermap function thisresource login everything works excepted except since visit either lobbylist playerlist get error happens pageload via linkto routes nothing special besides modelhook like remove modelhook nt get error anymore obviously neither get models template anyone idea suddenly happening suspect routingstructure might ember intended routerjs actually checking routes make sense though structure served well since early days pods thing since years routes wrong time unintended breaking change", "num": "4201", "d": "1/2014"}, {"title": "regression actively generated controllers needs query params", "body": "ember version seems like recently something changed likely queryparams related given url autogenerated specified needs results also solution nt really end world simply create rather expecting auto generated downside file basically provides value kicker pre materializing controllers downside creating controllers generated user designed much soon means going created without model cause unneeded unexpected change events effected initial app boot unfortunate working remove extra churn", "num": "4200", "d": "1/2014"}, {"title": "required hit default route visit another", "body": "redirect sends people default route come root integration test route well dom rendered reflects default template would serve said test app requires hit another route dom rendered still default like default redirect testing still possible visit route first either test dual visit first seems hacky best wanted throw possible bug anyone aware yet test setup helper", "num": "4199", "d": "1/2014"}, {"title": "emberreducecomputed fire observers cases", "body": "seems embercomputedmin array smallest element array gets removed observers fired tested ember correctly fired however new element array appears smaller previous min value following snippet var oemberobjectextend b embercomputedmin var oocreate emberarrayproxycreate content consolelog oget b oget c oget pushobject consolelog oget b oget c oget removeat consolelog oget b oget c print console instead prints ie removeat b changed c dependent b invalidated surprisingly arriving b c condition", "num": "4197", "d": "1/2014"}, {"title": "legacy loadingroute documentation wrong implementing code causes deprecation warning", "body": "quite simple issue really follow legacy loadingroute documentation get following error found solution seems work correct probably update documentation thanks", "num": "4195", "d": "1/2014"}, {"title": "hidden input fields one way binded", "body": "hallo currently working form needed hidden field due custom select form would code problem change value hidden field subject property changed however change subject field ways say text field value hidden field change tested beta", "num": "4194", "d": "1/2014"}, {"title": "multiple inheritance multiple method implementation conflict", "body": "use case javascript var routemixina emmixincreate setupcontroller function controller context consolelog routemixina setupcontroller var routemixinb emmixincreate setupcontroller function controller context consolelog routemixinb setupcontroller var myroute emrouteextend routemixina routemixinb essentially multiple mixins designed plugged routes order easily give different capabilities recurring throughout application reusable manner obviously mixins need interact framework hooks events ember puts disposal far events concerned much issue comes multiple inheritance example expect work javascript var routemixina emmixincreate initthings function consolelog routemixina initthings init var routemixinb emmixincreate initstuff function consolelog routemixinb initstuff init displays routemixina initthings routemixinb initstuff emrouteextend routemixina routemixinb create take opportunity report extremely unfortunate ember expose events eg etc alone think dozen events eg etc currently exist simple rigid hooks big issue however comes merging multiple mixins implement methods initial example running nt necessarily expect two implementations run sequentially although would make lot sense lot cases could think something similar done least expect framework tell conflicts lead ambiguity code take look handled well established environments supporting multiple inheritance eg c see customary warn user conflicts enable modularity amp code isolation suggest two things stretch list supported events core objects emroute emcontroller etc find way let user combine mixins implementoverride methods", "num": "4193", "d": "1/2014"}, {"title": "globstar route single slash matching star nt working", "body": "routes couple corresponding route classes problem arises try type url dir directly browser address bar expect taken route instead nothing seems happen even hook nt called strangely enough globbing anything except single slash works fine eg navigating work reiterate problem navigating via browser address bar clicking links using works fine since issue fixed anyway case use v patched manually issue bugfix ie diff unfortunately ca nt provide working jsbin example since directly typing urls nt seem possible", "num": "4190", "d": "1/2014"}, {"title": "incrementproperty parseint actual incrementing", "body": "situation value changed incrementdecrement buttons input incrementproperty method become useless nt actual value type conversion concatenate increment value", "num": "4187", "d": "1/2014"}, {"title": "boolean subexpressions rendering content", "body": "returning boolean value subexpression nt seem render content raised first handlebars repo said stemmed ember example helper looks json configuration file called code configjs import config appconfig emberhandlebarsregisterhelper config function value options emberassert must pass string value ex config socialfacebook optionstypes string optionsfn return configget value optionsfn optionsinverse return configget value appconfigjs var config emberobjectextend truevalue true config configcreate export default config doesntworkhbs doesworkhbs missing something helper jsfiddle running", "num": "4174", "d": "1/2014"}, {"title": "updating computed property nt refresh handlebars bindings", "body": "think updating computed property via helper nt refresh handlebars bindings component see stepbystep reproduction expectedactual output", "num": "4173", "d": "1/2014"}, {"title": "oops", "body": "", "num": "4169", "d": "1/2014"}, {"title": "issue emberset upgrade", "body": "getting following error upgrade component nt show stack trace information point right direction", "num": "4168", "d": "1/2014"}, {"title": "issue upgrading", "body": "upgraded ember getting following error thought would nt get failures going surprised error message nt point great direction something", "num": "4167", "d": "1/2014"}, {"title": "precompiling template component context properties", "body": "proper way getting context rendering linkto layout emberhandlebarscompile render reference context properties", "num": "4165", "d": "1/2014"}, {"title": "restore user window position upon using back button", "body": "upon pressing back button invoking ember restore user window position particularly long pages links could useful browsers natively operate think replicating feature would beneficial someone point right direction happy create pr however nt know whereif ember detects user pressing back button", "num": "4164", "d": "1/2014"}, {"title": "observer computed property nt fire get calling set", "body": "javascript usestrict windowapp emberapplicationcreate fullnamechanged function never called unless change code think ember recognize get function getting called anywhere", "num": "4163", "d": "1/2014"}, {"title": "parentcontroller eachview render", "body": "parentcontroller setting properly itemcontroller instances created helper use inside render template itemcontroller target correct", "num": "4162", "d": "1/2014"}, {"title": "model nested object", "body": "hello tried almost anything get work think missing something somewhere using ember json looks somehow like define seller model javascript appnote dsmodelextend name dsattr string seller dsbelongsto appseller embedded always appseller dsmodelextend name dsattr string nt work", "num": "4161", "d": "1/2014"}, {"title": "error delete persist record", "body": "hi tried delete persist record got error error attempted handle event willcommit state rootdeletedsaved code var tempmodel thisstoregetbyid project tempid tempmodel tempmodeldeleterecord tempmodelsave tempmodeldestroyrecord use lasted canary version", "num": "4160", "d": "1/2014"}, {"title": "queryparamsnew error paramsfor", "body": "hi get error paramsfor line sometimes params emberobject get assertion failed must use emberset access property object object happened transition level ie router resource", "num": "4155", "d": "1/2014"}, {"title": "linkto nt support nested routing", "body": "using resource multiple routes linkto function correctly javascript thisresource players path players function thisroute show path playerid thisresource nodes path nodes function thisroute show path nodeid thisresource players path withplayers function thisroute show path playerid thisresource garage path garage function thisresource nodes path withnodes function thisroute show path nodeid garage route viewing node thus clicking linkto nodes results transition garagewithnodes route believe linkto garagenodesindex go route nodes nodesindex current circumvent reordering routes putting least specific routes bottom thus last defining nodes garagewithnodes illustrated javascript thisresource garage path garage function thisresource nodes path withnodes function thisroute show path nodeid thisresource nodes path nodes function thisroute show path nodeid thisresource players path withplayers function thisroute show path playerid thisresource players path players function thisroute show path playerid", "num": "4154", "d": "1/2014"}, {"title": "unicode routes", "body": "using simple application appears unicode routes supported using history api routing mostly ask curiosity working jashkenasbackbone nt actually use case wanted get opinions developers since likely ember come future html home ascii app emberapplicationcreate approuterreopen location history approutermap function thisresource home path thisresource ascii path ascii thisresource unicode path", "num": "4152", "d": "1/2014"}, {"title": "container method nt normalize", "body": "project use uses custom resolver one templates render another template using helper renders template throws error assertion fails next line successfully finds template think due fact method nt normalize argument", "num": "4151", "d": "1/2014"}, {"title": "emberselect loses selection updating content array objects", "body": "content array strings one update content repeatedly things work fine content array objects first update breaks selection still reports correct value rendered correctly fiddle written realize may duplicate", "num": "4150", "d": "1/2014"}, {"title": "emberselect triggering observer value change value still undefined", "body": "emberselect observer gets triggered value actually fetched gives error similar example code exposes error seems happening block contains select box think makes take bit longer hence undefined nature value fixed locally changing line following happy submit pull request fix nt know whether test needed nt lot time create failing test moment", "num": "4147", "d": "1/2014"}, {"title": "embersource gem includes ember", "body": "could confirm version", "num": "4146", "d": "1/2014"}, {"title": "emberbind optionally take target object nt global namespace", "body": "instance emberobject one use addobserver without target object global namespace emberbind seems work differently requiring target string references object global namespace seems like setting manual bindings via emberbind possible without using target object global namespace example emberbind sourceobject sourceproperty targetobject targetproperty emberbindingoneway sourceobject sourceproperty targetobject targetproperty", "num": "4145", "d": "1/2014"}, {"title": "add emberrunsetinterval", "body": "see", "num": "4143", "d": "1/2014"}, {"title": "expose", "body": "", "num": "4142", "d": "1/2014"}, {"title": "remove ruby dependency", "body": "sure would fun leave ruby behind dependency", "num": "4141", "d": "1/2014"}, {"title": "arrayany always returns false array contains undefined value", "body": "current return false thisnotset undefined works course", "num": "4139", "d": "1/2014"}, {"title": "queryparamsnew global params persist raw url changes", "body": "url changes without regular anchor tag query parameters still persist eg url user clicks url incorrectly becomes cc machty", "num": "4138", "d": "1/2014"}, {"title": "collectionview work itemcontroller", "body": "provided oscarvgg see kill hacks refactor collection view try remove need eachview", "num": "4137", "d": "1/2014"}, {"title": "renderbuffer nt reset", "body": "uses private variable handle classes current element gets reset upon tag pushed classes become additive subsequent tags getting classes previous tags", "num": "4135", "d": "1/2014"}, {"title": "embercomputedinstance", "body": "like discuss start implementing initialize new instance inside class without using init example could achieved way think", "num": "4134", "d": "1/2014"}, {"title": "support overly specific linktotransitionto args", "body": "fiddle basically given try link route linkto trunk uncaught error route named trunkindex linkto trunkbranchleaf uncaught error route named trunkbranchleafindex", "num": "4132", "d": "1/2014"}, {"title": "lookup table error texts", "body": "complexity mounting would nt make sense move alle inline error texts seperate error lookup table also easier ever want internationalization core", "num": "4131", "d": "1/2014"}, {"title": "requiresjs fails ember", "body": "requirejs used work find ember fails ember changed would cause failure thanks", "num": "4119", "d": "1/2014"}, {"title": "feature queryparamsnew linkto helper determine active state correctly page refresh", "body": "checking new query params feature noticed bug reproduce go click page number say page note page highlighted refresh page note page highlighted although results correct visiting resulting url step directly yields result", "num": "4118", "d": "1/2014"}, {"title": "faulty guide documentation emberjs website", "body": "make quick new ember really excited learn incredibly frustrating trying follow guide video work current versions supplied starter kit lot problems figuring get emberdata emberstates play along please please please fix want propagate framework must consistent uptodate documentation guides", "num": "4116", "d": "1/2014"}, {"title": "actionhandler missing documentation send method", "body": "documentation send function missing site confused trying learn ember", "num": "4115", "d": "1/2014"}, {"title": "reducedcomputed sorted array controllers nt work well together removing item", "body": "small fiddle reproducing bug hjdivad seems like alley", "num": "4113", "d": "1/2014"}, {"title": "promise resolved", "body": "ember emberdata handlebars jquery got something like following code coffeescript works browsers funny thing debug put breakpoint findbyid creates promise findbyid called storefind works seems like data race sort anyone experienced", "num": "4111", "d": "1/2014"}, {"title": "unable load handlebarsruntime library", "body": "hey using along build everything grunt gruntneuter files everything works well soon want upgrade version even get following error message caused lines code use everything fine works nt need full library project prefer stay microlib still possible also raised issue project told raise issue hope someone able help", "num": "4110", "d": "1/2014"}, {"title": "bad error message without ember data", "body": "navigating generated route without ember data error message appears rather poor merely store found rather confusing", "num": "4109", "d": "1/2014"}, {"title": "nested controllers target parentcontroller set parents", "body": "scenario controllerscompanyindexjs controllerscompanyjs routescompanyindexjs routescompanyjs templatescompanyhbs templatescompanyindexhbs action triggered within within companies outlet actions likely bubble", "num": "4108", "d": "1/2014"}, {"title": "consider nested controllers target parentcontroller set parents", "body": "scenario controllerscompanyindexjs controllerscompanyjs routescompanyindexjs routescompanyjs templatescompanyhbs templatescompanyindexhbs action triggered within within companies outlet actions likely bubble", "num": "4107", "d": "1/2014"}, {"title": "elementid binding issue", "body": "dynamically binding using working working see works fine try sourcing ember instead js optionally delete starts working working working latest beta working latest canary realize perhaps ways maybe set init something like would assume work expected", "num": "4106", "d": "1/2014"}, {"title": "model shared parent route unavailable aborting transition", "body": "hard summarize title created jsbin illustrate problem various versions ember latest problem create route called p parent nest sibling routes b route p model b use route b depends state route sets route b beforemodel hook check work done needs done transition route route checks route p model beforemodel hook expected route p model available route beforemodel hook actual route p model route beforemodel hook works regression first noticed recent beta please let know provide info clarify anything help debug", "num": "4105", "d": "1/2014"}, {"title": "embercomponent use data property going sad", "body": "given component without template collide internal usage likely several collisions like", "num": "4102", "d": "1/2014"}, {"title": "optiongrouppath breaks emberselect", "body": "jsfiddle demonstrates problem", "num": "4099", "d": "1/2014"}, {"title": "history location needs support url hashfragment", "body": "history location router app gets immediately stripped prevents native browser scrolltoanchor behavior obviously ca nt support via hash location definitely support history cc mmun", "num": "4098", "d": "1/2014"}, {"title": "form submit working within component", "body": "hi run weird scenario components forms ca nt seem get form submit properly attach action submit form works add action save submit form element well action save submit button well jsbin showing relevant code without action submit button show nt working action form reason issue expect action form handle submissions require action button well additionally attaching action submit button nt completely handle ux scenario means pressing enter filling field nt work following originally expected work", "num": "4084", "d": "1/2014"}, {"title": "route disconnectoutlet able accept string sensible defaults", "body": "right pass hardtoremember options hash able pass string normalize desired options hash passed string interpreted name outlet want clear wrapping feature flag seems like overkill seems like brainer", "num": "4083", "d": "1/2014"}, {"title": "emcomputedfilterby broken", "body": "emcomputedfilterby updating array correctly updating array length actual content array remains unchanged", "num": "4076", "d": "1/2014"}, {"title": "animation support status", "body": "know topic discussed length past sure current status animation support thought inquire wrote library using works really well want make changes essentially change js function animateout return oldviewbeforeanimateout oldviewanimateout oldviewafteranimateout oldviewremovefromdom function animatein return newviewaddtodom newviewbeforeanimatein newviewanimatein newviewafteranimatein animateoutthen animatein niceties could added top would baseline could built upon official support animations would really awesome think much needed personally huge fan emberanimatedoutlet use different methods nt support back button huge deal breaker actually wanted submit pr ember though however go work putting together pull request wanted know guys currently ideas animations would pull request even seriously considered", "num": "4071", "d": "1/2014"}, {"title": "minified emberjs behaving differently nonminified", "body": "trying debug hours ready ask help tl dr development amp production versions including minified version buildsemberjscom emberjs working perfectly minified via uglifier using emberrails experiencing js exceptions expect initial exception causing one first one trace insightprodjs code seems causing view class computed coffee insightmetriccomponentview emberviewextend classnamebindings templateclassname templatename gt get contentinfotype typeof get contentinfotype object metricschart else metrics get contentinfotype else metricsloading property contentinfotype templateclassname gt get templatename replace property templatename templatechanged gt rerender observes templatename even weirder thing view works perfectly fine unless template loaded access way help would appreciated issue actually emberrails move thanks", "num": "4070", "d": "1/2014"}, {"title": "feature request allow nested components inherit scope selectively parent components even using yield", "body": "background ember group stackoverflow", "num": "4056", "d": "1/2014"}, {"title": "queryparams input valuefoo queryparams foo strange", "body": "needs treat string coerce true", "num": "4054", "d": "1/2014"}, {"title": "features pending go decision", "body": "issue limited new features master enabled default current beta cycle feature checked enabled default next beta cycle immediately canary icebox cc machty lt rewritten pending go x enabled canary x x x comments purged periodically date updated", "num": "4052", "d": "1/2014"}, {"title": "emberrunproxy emberrunbind", "body": "", "num": "4051", "d": "1/2014"}, {"title": "controller needs parentcontroller set", "body": "", "num": "4050", "d": "1/2014"}, {"title": "canary build queryparamsnew broken vs old queryparams", "body": "hi queryparams feature working great recent canary build seems feature replaced following error happening", "num": "4048", "d": "1/2014"}, {"title": "proper way expose run loop status", "body": "using cucumber test ember apps one things noticed cucumbercapybara sometimes get ahead ember things run loop finishes especially poltergeistphantomjs much less often selenium worked around tagging cucumber steps step calls cucumber helper method ultimately waits run loop complete relevant ember stuff last evaluatescript ruby def waitforemberrunlooptocomplete patiently waitforpagetoload end patiently waitforhtmlelementonpage end patiently return unless pagehascss emberapplication end means seconds return pageevaluatescript undefined return pageevaluatescript body hasclass ajaxquiet amp amp body hasclass applicationready amp amp typeof ember object amp amp emberrunhasscheduledtimers amp amp emberruncurrentrunloop sleep end end discovered using little uncomfortable dig around deep ember check something public friendlier would nice determine ember finished asked would nice exposed world happy put together pr wanted post get feedback good idea right way start working", "num": "4047", "d": "1/2014"}, {"title": "number field extended text field nt react size changes", "body": "found example nt seem work change field type generated dom text works like charm", "num": "4046", "d": "1/2014"}, {"title": "appending view iframe element nt trigger didinsertelement", "body": "basically append view iframe view never transitions state thus never triggering hook use case print different document different styles current application loop checking root document eventually goes document variable inner iframe null exits loop nt know tackle though thing document executing append nt document view appended code used append view actually ends correctly rendered correct state", "num": "4043", "d": "1/2014"}, {"title": "transitions retryable", "body": "split see discussion", "num": "4042", "d": "1/2014"}, {"title": "query params needs support", "body": "new implementation presently ignores query params active logic", "num": "4041", "d": "1/2014"}, {"title": "nested component binding working properly", "body": "similar issue tried issue still resolved especially similiar kaspertidemann typeahead component amp also writing typeaheadeditor component finegrained amp containing typeahead component inside code inner component typeahead time code runs ca nt reference context anymore however typeahead outside typeaheadeditor runs fine also selfget somevalue outside render hash amp inside emberrun block would run anything fix missing common knowledge", "num": "4039", "d": "1/2014"}, {"title": "authentication lifecycle support", "body": "hey since applications need authentication support nt make sense make users find path handle find repeating code handling client side authn highlights thinking provide authn token based support managing authn flow freedom see expect promise login action server implemented user raise event error code default occur let user choose codes suite custom needs generic easy way redirect login form route needs take care authentication store credentials localstorage let user overrides easily custom needs cookie based maybe support even case user reauthenticate good reason totally support anything related authn feel free close issue comments welcome understand whether possible generalize enough support user needs still provide value box thanks", "num": "4035", "d": "1/2014"}, {"title": "support emberdefineproperties", "body": "emberdefineproperties supported corollary emberdefineproperty see noticed lack defineproperties starting work issue", "num": "4032", "d": "1/2014"}, {"body": "think regex approach probably fine since anyone explicitly declaring error loading routes substates would nt opting explicit routes treated findable substates case slowrejecting promises", "d": "1/2014"}, {"body": "think agree expecting app code use seems overkill", "d": "1/2014"}, {"body": "still work deprecation warning using possible via instead", "d": "1/2014"}, {"body": "today tomorrow ember tooling safe transpile feel adventurous add aliases keeping implementation parity spec see", "d": "1/2014"}, {"body": "pierreb couple issues jsbin firstly use use custom sorting function add computed property models secondly affect used sort contents array controller leaving untouched different function called array generate new array sorted", "d": "1/2014"}, {"body": "mmun thx reply never heard arrangedcontent finally using fixed problem think talking arrangedcontent ember guide really useful", "d": "1/2014"}, {"body": "problem anchor link actually visited state never set problem styling links", "d": "1/2014"}, {"body": "suspect might problem solved resource promise defer completed promise continue rendering", "d": "1/2014"}, {"body": "martinelvar ember typical pattern url change would invoke model hook route passing along dynamic segments params argument reason approach nt work use case try reserve github bugs prs questions stack overflow feature requestsproposals discussemberjscom going close feel free post crosslink somewhere continue discussion", "d": "1/2014"}, {"body": "martinelvar appears undocumented answer historical purposes use didtransition hook router", "d": "1/2014"}, {"body": "much appreciated thank", "d": "1/2014"}, {"body": "heart thank", "d": "1/2014"}, {"body": "hi zaius overwriting private method think perfectly acceptable things break overwrite private methods", "d": "1/2014"}, {"body": "whoops yep completely right already currentviewdidchange defined outletview nt even think choice private method name might identical someone else since ca nt real private methods javascript maybe worth logging warning overriding method starting underscore overkill", "d": "1/2014"}, {"body": "gets fired noop transition test nt op since lging seems like bug changing qp nt causing model hook refire try take look tonight machty thoughts", "d": "1/2014"}, {"body": "waiting hear whether going final api opting transition bug might nonissue put configuration elsewhere", "d": "1/2014"}, {"body": "nt already exist", "d": "1/2014"}, {"body": "yes mean adding documentation like controllername line viewname line think many developers still nt know", "d": "1/2014"}, {"body": "official document sure use stable although use source", "d": "1/2014"}, {"body": "fairly certain documented mind submitting documentation pr", "d": "1/2014"}, {"body": "glad", "d": "1/2014"}, {"body": "english main language sure documentation well please check glad hear suggestions", "d": "1/2014"}, {"body": "unfortunately touch devices things like divs nt receive synthesized clicks interestingly neither anchor tag one solutions one use often since synthesized click problem unsure ember core normalize least mobile touch guide calls might help", "d": "1/2014"}, {"body": "fwoeck seeing canary", "d": "1/2014"}, {"body": "sounds like sort thing may resolved", "d": "1/2014"}, {"body": "hjdivad right happens current canary builds", "d": "1/2014"}, {"body": "simpler example", "d": "1/2014"}, {"body": "look today wanted find browser using", "d": "1/2014"}, {"body": "using chrome tested firefox imo browser issue assertion test checks jquery one given versions assertion failed ember views require jquery", "d": "1/2014"}, {"body": "fixed jquery allowed", "d": "1/2014"}, {"body": "fix merged three branches published cut", "d": "1/2014"}, {"body": "sweet thanks", "d": "1/2014"}, {"body": "landongn good catch thanks reporting fixing also meantime able use builds listed travis catches gets published", "d": "1/2014"}, {"body": "submitted fix deprecation using sorts things since landed think deprecated nt thought form", "d": "1/2014"}, {"body": "interesting know could specify attribute helper think like approach since apparent really going thanks", "d": "1/2014"}, {"body": "slindberg new feature enabled series see details implementation", "d": "1/2014"}, {"body": "may wrong really wonder hook really often looks like think tend think commonly used getting parent route model directly without query eg agree", "d": "1/2014"}, {"body": "lcoq probably right pattern surfaced within course nt much data go seen present app ember docs demostutorials feeling would strong convention might work accessible", "d": "1/2014"}, {"body": "possible provide jsbin jsfiddle", "d": "1/2014"}, {"body": "cloth controller may want array controller nt believe bug stackoverflow better venue asking help provide fiddle jsbin demonstrating bug gladly reopen", "d": "1/2014"}, {"body": "hi fiddle", "d": "1/2014"}, {"body": "render connects template view controller want model added automatically likely using route otherwise context template needs property corresponds model would like use", "d": "1/2014"}, {"body": "basically breaking version would result html like following html false false believe since html invalid ca nt text inside like metamorph tags included properly generated output removed browser educated guess though", "d": "1/2014"}, {"body": "rjackson yes right definitely problem invalid html wagenet would nice close issue", "d": "1/2014"}, {"body": "provide example jsbin showing issue", "d": "1/2014"}, {"body": "tell happens loading emberjs code nt run enough include emberjs html file watch blow", "d": "1/2014"}, {"body": "skinney thank reporting resolved next beta include fix use beta build", "d": "1/2014"}, {"body": "rereading think wrote bug incorrectly nt expects expects sendaction instance method nt define thing really sorry jumped straight conclusion fully describing problem", "d": "1/2014"}, {"body": "jamesarosen sent resolve imho actually part api two things closely linked essentially sugar top anyways moving means include like initial example things work", "d": "1/2014"}, {"body": "linkto look like", "d": "1/2014"}, {"body": "looks pretty normal using hack get working bootstrap highly doubt source error like said thing happens pageload doubt something linkto", "d": "1/2014"}, {"body": "might related updates way container normalizes lookups simply guess point dimitrisuls could setup example project could take look apologize inconvenience doubt able guess solution without digging good example", "d": "1/2014"}, {"body": "pretty sure already fixed reopen open demonstrate breaking jsbin", "d": "1/2014"}, {"body": "rjackson machty still broken latest emberjs create jsbin soon", "d": "1/2014"}, {"body": "dimitrisuls afraid nt much go track could replicate stand alone project test", "d": "1/2014"}, {"body": "rjackson yes trying create simple jsbin nt seem able break let try longer", "d": "1/2014"}, {"body": "dimitrisuls awesome thank sorry hassle unsure able track otherwise", "d": "1/2014"}, {"body": "rjackson machty ok tracked source error jsbin shows basically always using shorthand lobby player etc routename instead appending index always used work past since noderoutes nt dynamic segments seems error since perhaps intended", "d": "1/2014"}, {"body": "dimitrisuls thank much tracking seem like bug easy track", "d": "1/2014"}, {"body": "warning added part query params rewrite dimitrisuls actually two different routes one see screenshot ember inspector listing routes jsbin note references accept parameters machty believe likely reopen investigation", "d": "1/2014"}, {"body": "rjackson yes understand different routes lobbyroute nt take parameter indeed wrong looong time sort still used work past breaking change keep way least documented release notes orso", "d": "1/2014"}, {"body": "specifying lobby work seems like regression", "d": "1/2014"}, {"body": "ahh", "d": "1/2014"}, {"body": "machty ok good luck squashing bug mr router", "d": "1/2014"}, {"body": "routedriven controller nt think queryparams related", "d": "1/2014"}, {"body": "machty correct believe believe something else changed funky end believe concern early materialization still accurate maybe nt example though bisect turned painful app using several bugs introduced later corrected work try create reduced example tonight", "d": "1/2014"}, {"body": "ran exact issue attempting use query params first time get error simply adding feature flag without adding additional code work creating jsbin example helps setup stefanpenner described one bit context nested routedriven controller autogenerated controller farther route hierarchy template route base hierarchy links nested route without query param sub expression navigating base route hierarchy generates error gets thrown within helper trying look queryparams controllers route chain", "d": "1/2014"}, {"body": "confirm queryparams related due linkto post thoughts shortly", "d": "1/2014"}, {"body": "closed slindberg able use query params heard reports beta wan na make sure actually case nt make sense", "d": "1/2014"}, {"body": "believe closed believe reason people seeing publishing beta ember bower botched left feature flags reopen someone finds betastable", "d": "1/2014"}, {"body": "machty thanks breaux", "d": "1/2014"}, {"body": "rjackson believe feature flagged feature summary feature landed start routing tests first visit called would allow app begin routing location first visit specifies inline happens user url navigates reloads page", "d": "1/2014"}, {"body": "stefanpenner feature enabled default thus flag removed call first time router booted url specified directly note never call application instance deferred state nt boot also ember version using", "d": "1/2014"}, {"body": "actually love lazy routing feature big reason upgraded trying figure testing bug feature something w redirect", "d": "1/2014"}, {"body": "toranb took time replicate jsbin something definitely seems amiss delve bit deeper tonight meantime could confirm basically described", "d": "1/2014"}, {"body": "found today thanks grinding right away", "d": "1/2014"}, {"body": "tracked bug implementation feature basically upon first triggering twice root url triggered normal application boot process second time direct us desired url details fixing pr", "d": "1/2014"}, {"body": "wow glad turned legit bug thanks getting pr quick guys proof community best around", "d": "1/2014"}, {"body": "toranb thanks finding", "d": "1/2014"}, {"body": "toranb test like additional confirmationsanity check prior shipping", "d": "1/2014"}, {"body": "see tests passing jsfiddle reason still required actually get third route default route teardown appreset like difference routes added emberrunnext testing purposes required also note nt route defined specifically", "d": "1/2014"}, {"body": "think need redirect hook nt cause failure call essentially wait pending run loops replicated example jsbin seems working properly update tweak force failure", "d": "1/2014"}, {"body": "rjackson thanks looking emberrunnext causing bug app specifically seems still fixed valid bug though correct shipit", "d": "1/2014"}, {"body": "definitely bug routing started calling second time correct url fixed tldr previously impossible route directly url without first hitting toranb thanks reporting issue", "d": "1/2014"}, {"body": "thanks blazing fast fix recheckwithme", "d": "1/2014"}, {"body": "hjdivad take look", "d": "1/2014"}, {"body": "wagenet late mmun already come rescue", "d": "1/2014"}, {"body": "howwhy trying change subject changing input field nt really work way", "d": "1/2014"}, {"body": "want custom styling select form however currently possible one work around make custom javascript markup still want save value inside input field whole bunch reason example selection", "d": "1/2014"}, {"body": "ah want take approach use jquery plugin writes value input hidden field nt going work ember world nt really bug nt want integrate jquery plugin find right hook plugin value changes call subject property going automatically picked make dom change input element way property wo nt get updated went modify text node got output", "d": "1/2014"}, {"body": "herriau mixins become part inheritance hierarchy mixins base classes call would able combine multiple mixins provide functionality method get fragile though would recommend sparingly suggestion triggering events routes think interesting existing overridable methods methods events must implementation support lifecycle routes b could create ambiguous behavior multiple functions ran occurred specific use cases things would like accomplish current routes nt support suggestions api would like see let start discussion discussemberjscom generally keep github issues proposals feature suggestions tackled forum", "d": "1/2014"}, {"body": "lukemelia could elaborate exactly solves issue let rephrase problem slightly different example use package provides routemixina use package b different distributor provides routemixinb issue following line throw warning regarding implementation conflict end developer idea implementation details notified class system ember combining two mixins led conflict waste considerable amount time quest solve inevitable bugs stemming silent conflict realize two implementations overridden methods simply methods conflicting names please reopen issue", "d": "1/2014"}, {"body": "ember supports single inheritance adding mixins creates linear hierarchy super chain needed unfortunately without concept super unclear mixin subclass merely augmenting inherited functionality replacing entirely hope provided clarity please let us know still missing point otherwise seems like issue remain closed", "d": "1/2014"}, {"body": "oohh okay aware would call implementation previous mixin makes sense thank stefanpenner javascript foomixin embermixincreate init function thissuper call emobject init super chain consolelog foomixin init barmixin embermixincreate init function thissuper call foomixin init super chain consolelog barmixin init displays foomixin init barmixin init emobjectextend foomixin barmixin create maybe made little bit explicit documentation maybe missed mechanism explained", "d": "1/2014"}, {"body": "herriau totally agree maybe submit doc fix phrased way make sense iterate", "d": "1/2014"}, {"body": "likely actually bug likely also open issues", "d": "1/2014"}, {"body": "machty thoughts", "d": "1/2014"}, {"body": "imagine failing really need support ashakurov use case think reason weirdness actually handle stuff like slashes really refer important delimiter urls end star routes maximally greedy maybe making sense either way nt want support means making easier support arbitrarily ugly urls curious ran bug course building app", "d": "1/2014"}, {"body": "nt know star routes maximally greedy feature documented always used globbing everything end url star routes way unescaped slashes dynamic segments let describe use case working interface data storage system stores information chunks organized filesystemlike structure hence slashseparated paths strongly dislike idea escaped slashes cluttering urls way readable make things worse data storage system allows directories empty names therefore adjacent slashes must collapsed one unlike unix file paths words refers root refers directory named empty string root messy know work chance odd design changed time soon", "d": "1/2014"}, {"body": "closing favor pr", "d": "1/2014"}, {"body": "subexpressions going neutered htmlbars ready good news checked support bound subexpressions last weekend little lands master make sure whole world knows use new power responsibly", "d": "1/2014"}, {"body": "bindings seem working properly example expect updated differently", "d": "1/2014"}, {"body": "rjackson exactly try screen recording happens nt see bound component could ever get value since bound computed property matter set never becomes know binding would overwrite text input field also nt know nt happen either", "d": "1/2014"}, {"body": "msch browser also scenario rjackson video", "d": "1/2014"}, {"body": "stefanpenner chrome firefox safari exhibit mean scenario rjackson get behaviour video actual output jsfiddle video right correct behaviour expected output jsfiddle", "d": "1/2014"}, {"body": "confirm bug property becomes reference gets updated used directly template referenced one", "d": "1/2014"}, {"body": "msch think misunderstanding things work change value input sets input value property case propagates set input formatted total case set consider job done nt check see mutated property expectation whatever pass cp setter thing would returned getter case expectation true unfortunately checking mutation changes way would add huge level complexity nt want deal case make custom formatted input field actually checks field value reformats even sets property questions ask stack overflow", "d": "1/2014"}, {"body": "likely observing something meant observed way share code maybe quick google hangout something", "d": "1/2014"}, {"body": "hi stefanpenner sorry eating dinner let try see paste", "d": "1/2014"}, {"body": "stefanpenner problemo pasting whole thing extending scatter plot chart embercharts please excuse ugliness code bad hobbyist developer learning go coffeescript appportfolioscatterplotcomponent emberchartsscattercomponentextend properties haslegend false chosenportfolioid null bound template regextosearchbyportfolioid embercomputed new regexp portfolio id get chosenportfolioid property chosenportfolioid regextogetportfolioidfromstring portfolio id xvaluedisplayname expected risk yvaluedisplayname expected return selectedseedcolor appgraphcoloursget selectedcolour events click e get tooltip element parse box portfolio id emberchartstooltip ember chartfloattooltip grouplabelinfo emberchartstooltipchildren spantiplabel didinsertelement super one emberchartsupdated event gt graph rendered grab scatter point associated chosen portfolio one highlight css tied html id unless emberisempty get chosenportfolioid data get legenditems pointobject datafind obj gt get regextosearchbyportfolioid test objgroup pointselector pointobjectselector dotelement pointselector children pathdot functions jqueryelementishidden jqueryelement nonetest jqueryelementcss display getportfolioidfromtooltipbox portfolioidlabel portfolioidstring portfolioidlabel innerhtml portfolioid get regextogetportfolioidfromstring exec portfolioidstring clearexistinghighlights ember selectedportfoliographpoint attr id highlightelement element elementattr id selectedportfoliographpoint", "d": "1/2014"}, {"body": "suspect wan na try beta build let us know otherwise likely need info ca nt see anything obvious snippet maybe someone else", "d": "1/2014"}, {"body": "give shot tomorrow unfortunately go real job today", "d": "1/2014"}, {"body": "hi stefanpenner upgraded ember error disappeared really want upgrade changes guys made obviously ca nt app working using superbasic ember functionality nothing funky anywhere generally safe going beta going straight gets released proper", "d": "1/2014"}, {"body": "brandonparsons safe beta clearly safe release take extra care ensuring stable would suggest careful using feature flagged features beyond safe obvious somewhat unique situation run projects canary upgrade weekly rjackson nt plan cut new release address view options bug believe one one", "d": "1/2014"}, {"body": "really appreciate help stefanpenner", "d": "1/2014"}, {"body": "stefanpenner yes intend put release got little backed due security releases process yall would like monday along", "d": "1/2014"}, {"body": "rjackson lets aim monday release help ya", "d": "1/2014"}, {"body": "error message suggests need instantiate promises previously could create promise via directly error thrown code another library emberdata embereasyform etc recently updated documentation rsvp", "d": "1/2014"}, {"body": "looking something like supposed use", "d": "1/2014"}, {"body": "use new keyword like", "d": "1/2014"}, {"body": "actually constructor takes single callback function accepts parameter looked like passing directly constructor instead params callback function", "d": "1/2014"}, {"body": "naw using coffeescript adding fix", "d": "1/2014"}, {"body": "machty derp ca nt believe nt see end", "d": "1/2014"}, {"body": "thanks try something wrong general expected breakage true", "d": "1/2014"}, {"body": "brandonparsons general breakage agree case ambiguous rsvp prior versions could chosen use must use brings rsvp closer line promise spec", "d": "1/2014"}, {"body": "stefanpenner think maybe merits emberside stubbing emberrsvppromise support old way deprecation warning", "d": "1/2014"}, {"body": "posterity sake wanted note fix worked still thinking may need deprecation warning rather straight failure avoid surprises", "d": "1/2014"}, {"body": "actually also getting another error upgrade maybe warrants separate issue quite sure track one", "d": "1/2014"}, {"body": "brandonparsons please open separate issue second error see reproduce jsbin", "d": "1/2014"}, {"body": "machty quite sure yet reproduce component nt even show stacktrace", "d": "1/2014"}, {"body": "promise constructor working without new bug public api ember continued work rsvp constructor documented part ember", "d": "1/2014"}, {"body": "documented considered semver safe ember", "d": "1/2014"}, {"body": "alexmays perhaps missing point look via normal handlebars invocations working version jsbin", "d": "1/2014"}, {"body": "rjackson see example", "d": "1/2014"}, {"body": "working example", "d": "1/2014"}, {"body": "rjackson awesome thought tried jsbin thank much", "d": "1/2014"}, {"body": "alexmays problem", "d": "1/2014"}, {"body": "would hashlocation historylocation going close issue please file new pr ready questions implementation discuss irc emberdev forums", "d": "1/2014"}, {"body": "another example javascript usestrict windowapp emberapplicationcreate", "d": "1/2014"}, {"body": "design observers setup init default see explanation force setup init fix example think would need something like", "d": "1/2014"}, {"body": "closing seems desired behavior reopen suggested changes resolve", "d": "1/2014"}, {"body": "know desired behavior adding observers object check second comment issue get full code javascript appjohnaddobserver fullname function object alert objectget fullname appjohn firstname aladeen nt add following line addobserver observer nt work", "d": "1/2014"}, {"body": "u use function observes init get kick also u give properties kick init method", "d": "1/2014"}, {"body": "strange quick pass arraycontroller code lead believe work another thorough pass work", "d": "1/2014"}, {"body": "hit appears issue code fiddle differences templates template omits itemcontroller within differences controllers name properties controller specifies itemcontroller explicitly results itemcontroller specified template objectcontroller parent set would expect arraycontroller itemcontroller specified arraycontroller objectcontroller parent set application perhaps using arraycontroller parent expect set arraycontroller example also seems specify itemcontroller affects whether arraycontroller underlying array model controller see tt property arraycontrollers least say violates principle least surprise specify itemcontroller surely nt radically change considered parent objectcontroller arraycontroller considers array", "d": "1/2014"}, {"body": "think bug itemcontroller specified arraycontroller helper used itemcontroller set arraycontroller instance", "d": "1/2014"}, {"body": "hmm tried adding test exercise use case tests already passes andrewfan avaragado would mind taking look added make suggestion test missing", "d": "1/2014"}, {"body": "lukemelia got error tried use inside created another take look fiddle please", "d": "1/2014"}, {"body": "lukemelia agree andrewfan think extra level introduced render helper significant arraycontrollerjs changes new line might relevant parentcontroller set differently two scenarios reasoning controller template rendered via render helper fiddle arraycontroller already parentcontroller property therefore controller subcontroller presumably itemcontroller inherits parent rather using arraycontroller confess paragraph documentation code change made spit tea itemcontroller instances property set either property instance nt help consumer api like tell without inspecting ember source code whether case parentcontroller set one fundamentally even difference surely parent itemcontroller instances always arraycontroller instance", "d": "1/2014"}, {"body": "andrewfan avaragado thanks clarification took crack fix position try app would awesome also stefanpenner andor kselden would welcome input internal api naming pr", "d": "1/2014"}, {"body": "seems like good question example looks emberdata related may want reopen issue project", "d": "1/2014"}, {"body": "would suggest cross linking others searching find way new issue", "d": "1/2014"}, {"body": "seems like expected behavior non delete delete record ca nt save deleted record deleted need create new record", "d": "1/2014"}, {"body": "hey seems like emberdata related thing mind reopening", "d": "1/2014"}, {"body": "turn ember core problem please provide working example track issue time gladly reopen", "d": "1/2014"}, {"body": "jasonpgignac read guide", "d": "1/2014"}, {"body": "stefanpenner ok would go ask", "d": "1/2014"}, {"body": "know talking problem queryparamsnew feature partially activated unless flag set ember loads issue inside paramsfor method might come elsewhere", "d": "1/2014"}, {"body": "quick fix changing works", "d": "1/2014"}, {"body": "florentblanvillain could create jsbin showing issue", "d": "1/2014"}, {"body": "yes", "d": "1/2014"}, {"body": "dealing w really slow internet connection ca nt really dig moment gut tells using nt necessary queryparams object comes routerjs routerecognizer ember agnostic libraries therefore objects nt try look tonight cc machty", "d": "1/2014"}, {"body": "ember nt currently support nested resources name end called current approach use dot notation name nested routes separate routes javascript thisresource players path players function thisroute show path playerid thisresource nodes path nodes function thisroute show path nodeid thisresource nodesplayers path withplayers function thisroute show path playerid", "d": "1/2014"}, {"body": "leaves strange controller names according ember extension chrome playernodesshowindexcontroller instead playernodesshowindexcontroller notice dot first one also makes difficult reuse controller template playersshow without parent players inside nodesplayersshow route supported second piece code actually work seems like mapping overwritten", "d": "1/2014"}, {"body": "javascript thisresource players path players function thisroute show path playerid thisresource nodes path nodes function thisroute show path nodeid thisroute players path withplayer playerid appplayersshowroute emberrouteextend model function params return thisstorefind player paramsplayerid rendertemplate function thisrender playersshow application outlet overlay appnodesplayerroute appplayersshowrouteextend leaves correctly rendered parent nodesroute rendered nodesplayerroute errors shown notice changed route nodeswithplayer", "d": "1/2014"}, {"body": "apparently solution add following instead last extend", "d": "1/2014"}, {"body": "closing bug though open proposals forums improve cc machty", "d": "1/2014"}, {"body": "kselden discussion something similar thoughts cc machty", "d": "1/2014"}, {"body": "version ember", "d": "1/2014"}, {"body": "believe addressed latest beta reopen nt fix problem", "d": "1/2014"}, {"body": "use latest stable ember thanks answer", "d": "1/2014"}, {"body": "confirm latest beta fixes issue", "d": "1/2014"}, {"body": "yes works fine thanks", "d": "1/2014"}, {"body": "wagenet make sure keep single issue open tracking various issues", "d": "1/2014"}, {"body": "stefanpenner maybe make rewrite emberselect issue point everyone", "d": "1/2014"}, {"body": "ya think good idea track checklist known issues within description provide great context whoever time give emberselect much needed tlc", "d": "1/2014"}, {"body": "wagenet stefanpenner think fix needed lot people problem maybe polish pr merge current implementation wanted write scratch make sense", "d": "1/2014"}, {"body": "seeweer idea current many issues planning completely deprecate introduce newer simpler faster less buggy version", "d": "1/2014"}, {"body": "wagenet specification idea works help rewrite want", "d": "1/2014"}, {"body": "yes working", "d": "1/2014"}, {"body": "thank", "d": "1/2014"}, {"body": "tricknotes great catch thank verifying pushed rubygems fixing issue", "d": "1/2014"}, {"body": "confirmed fixed version embersource thanks much rjackson smile", "d": "1/2014"}, {"body": "plan time permits basic build tooling ported node fivetanley already started emberdata", "d": "1/2014"}, {"body": "could help way think iam good give direction", "d": "1/2014"}, {"body": "fivetanley may like hand moving ember modules tedious endeavor maybe port existing approach first transition modules later joliss know ventured path likely share thoughts", "d": "1/2014"}, {"body": "know actually feel like bug contributing already tough enough contributing without working ruby installation pretty painful lowering bar devtool requirements seems netpositive reopening", "d": "1/2014"}, {"body": "stefanpenner changes plan think switching node actually lowers bar entry like people necessarily working node install either", "d": "1/2014"}, {"body": "ya absolutely node binary download works easily across windows osx linux joyent node team done great job cross platform support ruby really really nt even close simple admit currently npm phase might brittle hope improve", "d": "1/2014"}, {"body": "personally steered away projects due using ruby dependency especially project willy nilly throw compas css preprocessor presto bazillion dependencies huge ruby installation makes migrating servers pain", "d": "1/2014"}, {"body": "klh ya plan time permits course make transition", "d": "1/2014"}, {"body": "interesting uses hood first entry considered found return true checks return undefined turns find returns entry case undefined quick fix chance try hand pr", "d": "1/2014"}, {"body": "pr sure please allow time days become comfortable devteststructure", "d": "1/2014"}, {"body": "sounds good feel free reach issues", "d": "1/2014"}, {"body": "closing since pr", "d": "1/2014"}, {"body": "mutewinter use case using hashes instead", "d": "1/2014"}, {"body": "performance seen boost rendering speed switching large list items", "d": "1/2014"}, {"body": "seems like odds imo desirable defaultbuiltin behavior urls selfnormalizing reflect defaultcurrent values controller qp properties entirely sure recommend whether api restricting given bit hack would nt really carry history location two behaviors play refreshing page loading url normalize url end transition reflect values controller qp properties nt explicitly set url eg nt specifically set properties going route changing qp prop leaving route reentering route without specifying qp values normalize url previously set sticky property value behaviors incorrect think could possibly intercept clicks look url maybe based presence query params unset target controller qp prop values continue bubble click dom event rest transition mechanics continue work generally happy qp api bit problematic ambiguity bw specifying via url emptyfalse prop value vs omitting prop value reusing actually make could set might fix", "d": "1/2014"}, {"body": "refreshing page loading url normalize url end transition reflect values controller qp properties nt explicitly set url eg nt specifically set properties refreshing meaning actual going route changing qp prop leaving route reentering route without specifying qp values normalize url previously set sticky property value could try redirecting route feels like hack behaviors incorrect think could possibly intercept href clicks look url maybe based presence query params unset target controller qp prop values continue bubble click dom event rest transition mechanics continue work handling click events tags may work try approach also hoping causing actual events restore slugs using url currently tags includes slug eg slug disappears transition completes route generally happy qp api bit problematic ambiguity bw specifying via url emptyfalse prop value vs omitting prop value reusing issue may better solved able specify naked query params arbitrary route eg rather", "d": "1/2014"}, {"body": "definitely machty saying nt really using place rather try see improve performance instead supporting nonidiomatic use cases", "d": "1/2014"}, {"body": "issue may better solved able specify naked query params arbitrary route eg search termmusic rather search search term music mutewinter unscoped query params landed master wan na get try", "d": "1/2014"}, {"body": "machty oh hell yes give try let know", "d": "1/2014"}, {"body": "nt think really bug think work optimizing seem like optimization gotchas bugs seem workarounds", "d": "1/2014"}, {"body": "actually got work jsbin assigning controller init method itemview exactly wanted problem working app using emberappkit get error uncaught typeerror call method lookup null getting weirder", "d": "1/2014"}, {"body": "oscarvgg creating adhoc things without using container really use ember build helpers creating things", "d": "1/2014"}, {"body": "additionally need set controller manually bug collectionview needs tlc begun", "d": "1/2014"}, {"body": "great eager updates", "d": "1/2014"}, {"body": "merged ember master", "d": "1/2014"}, {"body": "confirm behavior confusing debug fixed", "d": "1/2014"}, {"body": "hells yeah", "d": "1/2014"}, {"body": "neutral one feel free open discuss post cross link try keep issues issues", "d": "1/2014"}, {"body": "gh really needs feature request tab something", "d": "1/2014"}, {"body": "", "d": "1/2014"}, {"body": "index routes nt get generated create another route level empty path hence nt exist took empty path think confusing enough people fix pretty sure dup", "d": "1/2014"}, {"body": "linked impacted whether index definitely looks like could related", "d": "1/2014"}, {"body": "nt need namespaceresetting", "d": "1/2014"}, {"body": "see interesting default route head see mean surprising hm closing thanks wisdom machty", "d": "1/2014"}, {"body": "kinda wan na leave open actually nt think reason support fact opting something slightly harder refactor prefer things work case rather wasting brain cycles trying figure nt work expected way", "d": "1/2014"}, {"body": "agh sorry know going sit around indefinitely really bug reopen hear someone else", "d": "1/2014"}, {"body": "ideas still infancy regarding completely agree addressed", "d": "1/2014"}, {"body": "klh rjackson could start discussion reopen followup pr things solidify", "d": "1/2014"}, {"body": "issue lacks context myresearchstyle provide running example problem least explain failure manifests", "d": "1/2014"}, {"body": "ember requirejs mainjs file looked like js requirejsconfig baseurl js shim ember deps handlebars jquery exports ember data deps ember exports ds slideshow deps jquery transit rotator deps jquery transit transit deps jquery paths ember libemberember data libemberemberdata handlebars jquery text libpluginstext typewriter libpluginstypewriterbundlemin views appviews routes approutes templates apptemplates controllers appcontrollers models appmodels app app slideshow libpluginsjqueryslideshow rotator libpluginsjqueryrotator transit libpluginsjquerytransitmin requirejs jsstartjs function ember ds would require ember path every time would create module ember variable ember inside new module undefined", "d": "1/2014"}, {"body": "strange fivetanley moments investigate", "d": "1/2014"}, {"body": "ember still exposes global debugging info looks like config correct", "d": "1/2014"}, {"body": "thank guys mistake seem corrupt copy latest emberjs ca nt figure wrong redownloaded ember site works expected sorry bothering thank help", "d": "1/2014"}, {"body": "future dev tooling checksum things", "d": "1/2014"}, {"body": "sorry hear issues working hard improve aspects ember unfortunately guides abit sync obviously causing issues try get back line asap", "d": "1/2014"}, {"body": "leave open back sync", "d": "1/2014"}, {"body": "thanks mean time possible publish list build versions work versions handlebars jquery", "d": "1/2014"}, {"body": "easiest way right grab starter kit includes dependencies provides good starting place reference guarenteed work combination extracted starter kit totally need keep things inline reduce entry pains", "d": "1/2014"}, {"body": "totally feel pain gave ember another go watching pause video every minutes check code emberdata transitionmd ember documention stackoverflow ember forums bright side kudos ember core team contributors constantly improving ember love api docs full examples documentation guides also way better remember summer first tried emberjs stefanpenner know chance going part emberjs hits final release", "d": "1/2014"}, {"body": "sahat emberdata officially supported package may provide build includes file absolutely also allow shipped separately", "d": "1/2014"}, {"body": "sahat nt make breaking changes without serious consideration feel choices best hopefully peepcode video get update", "d": "1/2014"}, {"body": "feel like bit ass gone video getting started section realized issues either handlebars misspelling route controller new handlebars bit pain realize commented code still processed breaks things handlebars yeah apologize also word street core team working cli ember would similar rails would fantastic would really solve lot headache awesomely magical creation controllers templates etc", "d": "1/2014"}, {"body": "feel free checkout essentially ghetto spike cli may feel like", "d": "1/2014"}, {"body": "sahat actionable item still close understanding continue improve areas", "d": "1/2014"}, {"body": "wagenet immediate action needed taken moment ongoing effort keep documentation web date latest ember releases", "d": "1/2014"}, {"body": "sahat sounds good closing issue find specific issues let know", "d": "1/2014"}, {"body": "", "d": "1/2014"}, {"body": "would someone interested sending pr fix", "d": "1/2014"}, {"body": "hey could get update issue blocker project", "d": "1/2014"}, {"body": "move sorted array controller functionality backed new arraycomputed stuff likely solve many problems one", "d": "1/2014"}, {"body": "provide working demo via jsbin jsfiddle seem strange appears work console open could another thing note safe shipping lower likely stick planned tooling transpiled code later", "d": "1/2014"}, {"body": "hmm look trying recreate issue tomorrow also fails console open set breakpoint return promise something inside storefindbyid function work storefindbyid returns promise resolved put breakpoint right promise created reason guess gives something time enough complete nice note luckily need support good post emberdata issue tracker", "d": "1/2014"}, {"body": "correction using ember initializers setup could issue initializers messing state", "d": "1/2014"}, {"body": "without example tricky know", "d": "1/2014"}, {"body": "actually promises ember came around ember rsvp upgrade curious working browser see", "d": "1/2014"}, {"body": "sorry upgrading back forth ember today see bugfix later versions reads fail instead catch try create small project recreate issue tomorrow", "d": "1/2014"}, {"body": "bug promise spec names catch catch future version likely safe using keep posted example likely able help", "d": "1/2014"}, {"body": "seems work wrap emberrunlater", "d": "1/2014"}, {"body": "skinney something seems strange believe underlying issue misunderstanding would love provide context possible fix issue help education users correctly find another strategy mitigate need", "d": "1/2014"}, {"body": "stefanpenner finally chance look seems problem related buggy jquery plugin possibly related fact applicationinitializers run order thus possibly also either case bug gone without emberrunlater", "d": "1/2014"}, {"body": "skinney run order sounds familiar provide example open ember issue run order even order specified default order different", "d": "1/2014"}, {"body": "defined like five appinitialiser modern browsers initializers run order defined possibly initializers run reverse order bottom initializer runs first specefying initializer solved issue forcing initalizers run correct order", "d": "1/2014"}, {"body": "skinney correct way use order deps exist initializers reorder based dependencies additionally enumerating things object properties older browsers nt stable", "d": "1/2014"}, {"body": "herom ember definitely works runtime setup handlebars debugstandard build ember require full handlebars build use production builds ember needwant attempt require handlebars production builds strip code pasted coming get production builds download file labeled tagged release want", "d": "1/2014"}, {"body": "debugstandard build support using anymore production build still rjackson", "d": "1/2014"}, {"body": "rjackson tried soon use library get error use latest library everything works like charm using assemble", "d": "1/2014"}, {"body": "herom likely related building project definitely known work general could provide barebones sample project", "d": "1/2014"}, {"body": "rjackson sorry delay barebones sample project running github repository would cool could check", "d": "1/2014"}, {"body": "herom looks like problem nt expose change line works neuter wraps everything iife visible outside quick fix would patch", "d": "1/2014"}, {"body": "thanks lot answer pangratz guess besides option hack got another two options open issuepull request handlebars project make compatible use another grunt task nt wrap files basically like rjackson stated comment likely related building project", "d": "1/2014"}, {"body": "great think close issue", "d": "1/2014"}, {"body": "sure submitted twice", "d": "1/2014"}, {"body": "reflection think current behavior preferable route controller template function isolated pod refactorings like moving routes consistent stable current behavior proposing", "d": "1/2014"}, {"body": "ya agree", "d": "1/2014"}, {"body": "designed change post creation binding bit precarious believe variation scenario work notice lack quotes last one surprised also nt work must timing issue", "d": "1/2014"}, {"body": "prescribed working usage actually property example", "d": "1/2014"}, {"body": "kselden want look potential timing issue", "d": "1/2014"}, {"body": "stefanpenner hmm yea works ok thanks either way still strange timing issue original jsbin", "d": "1/2014"}, {"body": "believe problem encountered app fixed", "d": "1/2014"}, {"body": "yup fixed beta beers", "d": "1/2014"}, {"body": "stefanpenner suggestion fix would something similar stuff prefix internals underscore thinking something else", "d": "1/2014"}, {"body": "fix issue internal bug writing tests", "d": "1/2014"}, {"body": "mightybyte remove", "d": "1/2014"}, {"body": "machty something planning think others", "d": "1/2014"}, {"body": "think mmun taking stab mmun", "d": "1/2014"}, {"body": "changing bug feature even history nt strip fragment native browser scrolltoel stuff would nt worked anyway think js framework html generated js", "d": "1/2014"}, {"body": "machty sounds good", "d": "1/2014"}, {"body": "machty yeah working could use help anyone interested goals support without route similar query params eg historyhash location support add hook route make default implementation scrolltoel render sure whether call hash fragment something else", "d": "1/2014"}, {"body": "machty mmun could nt also support hashlocation although strange looking nt see reason ca nt used easily parsed autolocation made handle well", "d": "1/2014"}, {"body": "jayphelps think seems work even tests concerns illegal character fragment according specs apparently", "d": "1/2014"}, {"body": "looks like exception specifically url spec add number sign character characters allowed production source", "d": "1/2014"}, {"body": "mmun nice find", "d": "1/2014"}, {"body": "machty mmun working going attack one step time easier pr merging first step going adding support hashes nt part route simply ignored eg foo historylocation foo hashlocation autolocation stripping freaking either flagging borders bug vs feature since new user would probably expect behavior imo thoughts", "d": "1/2014"}, {"body": "odd used actions form appears something else affecting things", "d": "1/2014"}, {"body": "remove overlay everything works expected investigating whether bug intended behavior believe nesting recommended", "d": "1/2014"}, {"body": "cleaned code think better way handle want feedback best practices recommend asking stack overflow irc", "d": "1/2014"}, {"body": "could used resolve reference", "d": "1/2014"}, {"body": "machty give go", "d": "1/2014"}, {"body": "looks like associated pr merged", "d": "1/2014"}, {"body": "cc hjdivad", "d": "1/2014"}, {"body": "note think failing test related actually fully describing issue even test passes issue jsfiddle may still present", "d": "1/2014"}, {"body": "ok array content updated correctly part handlebars fail part however seems issue originally experiencing caused failing", "d": "1/2014"}, {"body": "filterby works fine empty notempty broken", "d": "1/2014"}, {"body": "guess gon na get response", "d": "1/2014"}, {"body": "gigafied sorry letting one linger animation still high priority speak official support land say land hope provide great solution", "d": "1/2014"}, {"body": "narrowed change emberdata emberjs upon minification minified beta production version emberdata causes problem nonminified beta production version works perfectly", "d": "1/2014"}, {"body": "agrobbin could create simple example possible try help track", "d": "1/2014"}, {"body": "might suspect defines arity cp advanced compiler likely strip second argument making arity", "d": "1/2014"}, {"body": "solution likely us write linter warn us", "d": "1/2014"}, {"body": "could also ignorance right way accomplish rendering particular partialviewcomponent based model value putting together example", "d": "1/2014"}, {"body": "stefanpenner confirm absolutely problem found corresponding minified version block code indeed look like compiler stripped argument original minified also looks like happens", "d": "1/2014"}, {"body": "wan na open emberdata issues cc", "d": "1/2014"}, {"body": "maybe annotate params", "d": "1/2014"}, {"body": "done emberjsdata", "d": "1/2014"}, {"body": "confirm nt bug rather feature request", "d": "1/2014"}, {"body": "feature request update title make clear", "d": "1/2014"}, {"body": "translation ruby lambda blocklike support passing params yielded content without otherwise futzing scope cc kselden ebryn", "d": "1/2014"}, {"body": "ya seems aligned current project", "d": "1/2014"}, {"body": "hey alex totally agree exposing transclusion simple use cases makes lot sense cause unnecessary confusion read shadow dom spec though insertion points shadow insertion points appear make use transclusion spec spec high level introduction spec editor description description since standards going available chrome seems useful expose advanced users way preferably hidden beginners much possible angular trying extent changing documentation put advanced directive authoring separate document basic directive authoring basic advanced love hear ruby lambda blocklike support passing params yielded content without otherwise futzing scope would work sounds really promising nt understand handlebars scopes yield implemented much like recommend docs either given initial design thought along lines pass parameter property child component called inheritscopefromparent b parent scope contains inheritscopefromparent attribute copy data bound properties parent scope child scope preserving bindings templates involved think would work possible thanks taking look", "d": "1/2014"}, {"body": "davidjnelson try respond thoroughly later real quick support transclusion via helper long time think pretty closely approximate lot web components mostly saying avoid unnecessary mess pandora box scopetransclusion combo component authors conventions embrace via something like rubyish yield blocks yieldable params whereby components ember component ecosystem whatever writing app nt crazy stuff redefining rules scope yielded template block think one areas angular get learning curve angular starts make feel really good bad things ultraconfigurable scopetransclusion simpler powerful conventions exist one ability component overwrite scope block pass kind solution hard test hard reason compared familiar scoping rules ruby blocks solutions ab definitely seem coming angularspecific mindset mine risk somewhat angularaverse willing consider ruby block approach prove powerful enough either way keep dialogue going", "d": "1/2014"}, {"body": "machty updates nt going resolved soon maybe move forums", "d": "1/2014"}, {"body": "seems good close experimental work block params nothing ready bring core quite yet still discussion continue take place forums", "d": "1/2014"}, {"body": "looks like happening routerecognizer seems like changed treat qp value empty string would make using qp boolean flags elegant sure common got around bug using cp convert empty could go way get boolean value qp always resolved string", "d": "1/2014"}, {"body": "raytiley might something another issue overfiring replaceurl hash location investigate route recognizer shows form fixed", "d": "1/2014"}, {"body": "machty fix works route transitioned without queryparam url still get weird results link directly route", "d": "1/2014"}, {"body": "closed forrealz demo thanks raytiley", "d": "1/2014"}, {"body": "problem case anyone following along working demo fix one machty listed using history location nt seem work jsbin", "d": "1/2014"}, {"body": "ahh saved tinkering onward", "d": "1/2014"}, {"body": "added funkiness try serialize array url turns true also", "d": "1/2014"}, {"body": "intentionally omitted though might make cut next weeks canary churn", "d": "1/2014"}, {"body": "personally seems like supporting anything strings queryparams gets really messy ultimately application deciding going use value thats qp probably responsible converting qp provided string whatever type application needs array object etc pretty trivial cp conversion maintain data binding since url hackable user would need place insert custom error handling case user modified url directly cp seems like good way", "d": "1/2014"}, {"body": "indeed messy sure right approach yet would prefer people battle test trying come api", "d": "1/2014"}, {"body": "messy serializing array url html foo bar go serializes stuff foo amp stuff bar", "d": "1/2014"}, {"body": "haha go click go takes checkers game", "d": "1/2014"}, {"body": "probably give time", "d": "1/2014"}, {"body": "indeed messy sure right approach yet probably give time perhaps implementing ember messy servers deserializing strings long time nt come new semantics old useful part web", "d": "1/2014"}, {"body": "controllers serialize deserialize hook lot like routes", "d": "1/2014"}, {"body": "rpflorence convinced take crack ca nt promise anything though", "d": "1/2014"}, {"body": "likely api likely terse version eg seems generally accepted way go wan na prefer way defining serializedeserialize controller since predict awkwardness funneling qp changes single function nt wan na pollute controller namespace already raytiley particularly high risk code ultimately accepted think previous implementation sat canary months gutted happy take risk good learning experience enough offset risk go forth want everyone rational expectations around particularly tricky api get right", "d": "1/2014"}, {"body": "also happy iterating many many times response feedback go forth definitely happy active contributors router realm lonely", "d": "1/2014"}, {"body": "totally expecing many iterations seen first pr embermodel b code completely rejected getting experience finally area ember feel dig little bit thanks", "d": "1/2014"}, {"body": "machty implemented basic array support routerecognizer definitely like ideas additional serialization hooks queryparms need abnormal coercing data rpflorence points server side support qp arrays pretty standard maybe basic array support nt require implementing custom hooks", "d": "1/2014"}, {"body": "agree defaults array serialization straightforward enough us provide", "d": "1/2014"}, {"body": "stuff de serialization problem space mega tricky fit use cases particularly promises error handling involved knock obvious low hanging fruit like answer question keep good work", "d": "1/2014"}, {"body": "nt think solution emberroutingnamedsubstates finished going modular", "d": "1/2014"}, {"body": "cc bcardarella", "d": "1/2014"}, {"body": "someone working knock pr later tonight", "d": "1/2014"}, {"body": "lukemelia bcardarella working ran across issue recent format change fixing issue works fix", "d": "1/2014"}, {"body": "fix ready waiting rjackson get merged make pr", "d": "1/2014"}, {"body": "schweet guys rock", "d": "1/2014"}, {"body": "billxinli queryparams implementation completely rewritten feature flag referencing rewritten version please review pr added details works", "d": "1/2014"}, {"body": "last canary build prior version query params feel free use likely need update new implementation receive updatesfixes", "d": "1/2014"}, {"body": "thanks pointers rjackson go ahead update latest version query param wondering new version queryparamsnew stay", "d": "1/2014"}, {"body": "billxinli yes believe probably pretty close final api likely enabled coreteam decide default ship around hopeful ship enabled default start beta around released around fyi going go ahead close issue since nt think bug perse breaking change canary", "d": "1/2014"}, {"body": "thanks updates much appreciated", "d": "1/2014"}, {"body": "might worth looking hour embertesting solves", "d": "1/2014"}, {"body": "aha thanks stefanpenner exactly sort thing want expose within ember instead within embertesting since nt using embertesting opinion make sense move subset helper ember modify embertesting use method ember", "d": "1/2014"}, {"body": "method likely needs tlc would nt want expose official public api yet", "d": "1/2014"}, {"body": "interestingly wonder better approach selenium invoke appropriate embertesting helpers like selenium driver embertesting", "d": "1/2014"}, {"body": "able execute proper helpers selenium example something like might work", "d": "1/2014"}, {"body": "appears work reopen explain missed may want provide browser versions specifically saw expected see", "d": "1/2014"}, {"body": "ok seems work thanks taking time", "d": "1/2014"}, {"body": "hmm would guess supporting ember views across iframe boundary scope ember core lot complexity issue described eg handling events like click etc working iframes robust way success though may overkill use case", "d": "1/2014"}, {"body": "definitely overkill interesting libraries think workaround use case thanks", "d": "1/2014"}, {"body": "might consider wrapping jquery plugin like", "d": "1/2014"}, {"body": "thank much indeed trying accomplish thanks", "d": "1/2014"}, {"body": "hey asaf think working", "d": "1/2014"}, {"body": "closed", "d": "1/2014"}, {"body": "unrelated invoked anonymous function means nothing function created new time context function used uniqueness", "d": "1/2014"}, {"body": "nt really understand comment stefanpenner mean nothing stated works completely fine component outside parent component used named functions avoid bug common closure problem thanks", "d": "1/2014"}, {"body": "sorry nothing meant guarantee wo nt true make sense context", "d": "1/2014"}, {"body": "ok thanks taking time answering questions understand supposed q amp discussion hate burden would really appreciate would answer one last question according post recommended use run loop guarantee jquery picks view rendered would recommend case need conceptually ok nest custom components", "d": "1/2014"}, {"body": "", "d": "1/2014"}, {"body": "ok thanks tried code still behaving instead calling forced declare variables beforehand assumed bug happens nested inside another component think normal behavior close issue", "d": "1/2014"}, {"body": "jsfiddle jsbin please", "d": "1/2014"}, {"body": "small demo looks like component nested irrelevant jsbin maybe missing common closure understanding ember bug per se", "d": "1/2014"}, {"body": "explored", "d": "1/2014"}, {"body": "ebryn libs casts etc clean integrated approach within ember auth fundamental problem sure fully generalized without making user hook every stage", "d": "1/2014"}, {"body": "going close issue recommend solicit feedback instead try keep gh issues strictly bugs immediately actionable things", "d": "1/2014"}, {"body": "ebryn agreed maybe open future come something immediate thanks", "d": "1/2014"}, {"body": "featureflagged pr would accepted", "d": "1/2014"}, {"body": "closing favor failing test", "d": "1/2014"}, {"body": "closing reopen bug still present master better description provided", "d": "1/2014"}, {"body": "caused problems answer use embercompare indexof would become indexof function object startat var idx len get length one thing find confusing takes argument never used eg objectatcontent method called like way things stand itemcontroller always returned controllerat itemcontroller defined issues states use embercompare mean embercomparable comparing two objects like default var id name bob var b id name harry emberassert equal embercompare b fails started putting together pr issue best idea mix embercomparable objectcontroller also worth noting embercompare used methods mentioned", "d": "1/2014"}, {"body": "sounds like right track define custom comparator treats proxied content equal check aside parameter exists subclasses default implementation nt use names parameter make obvious available overriding method", "d": "1/2014"}, {"body": "hjdivad one thing confused comparable used thought used primarily comparing b sort operation", "d": "1/2014"}, {"body": "believe meant signify type provides custom comparison think like implementing java class abstraction broader sorting used internally much", "d": "1/2014"}, {"body": "hjdivad c", "d": "1/2014"}, {"body": "hjdivad stefanpenner guess seems strange true falsey javascript", "d": "1/2014"}, {"body": "strange comparators typically work", "d": "1/2014"}, {"body": "sort operation yes sure simply comparing two objects answer usually true false", "d": "1/2014"}, {"body": "pretty sure return comparison typically return equality", "d": "1/2014"}, {"body": "yes would equality check indexof rather comparison", "d": "1/2014"}, {"body": "mechanism custom equality mechanism custom comparison broader anyway", "d": "1/2014"}, {"body": "thanks clearing guess wait overloading operators javascript", "d": "1/2014"}, {"body": "find strange approach java comparable interface looks like ember would something like goes lots sorting logic example var mapping var mapping lt return gt return type logic gives ember object higher precedence hash causes early return really want something like", "d": "1/2014"}, {"body": "example surprising wrong semantics using instead directly calling", "d": "1/2014"}, {"body": "think different hashes equal right jsbin", "d": "1/2014"}, {"body": "looks like nt support type probably cases mixed defaulting seems odd well would thought falling back identity would make sense inequality gives unspecified ordering stefanpenner thoughts problematic cases plain javascript object right", "d": "1/2014"}, {"body": "hjdivad yeah good plain hashes", "d": "1/2014"}, {"body": "ebryn yes shortly featureflagged feature", "d": "1/2014"}, {"body": "romanior friendly reminder", "d": "1/2014"}, {"body": "fixed", "d": "1/2014"}, {"body": "machty status", "d": "1/2014"}, {"body": "notveryhigh priority work needs done likely somewhat involved since requires making route recognizer expose information presently hard get", "d": "1/2014"}, {"body": "stefanpenner think something going something close", "d": "1/2014"}, {"body": "wagenet likely question better asked ebryn kselden reworking templating view layer", "d": "1/2014"}, {"body": "pr closed wondering needs done differently another pr merged cc stefanpenner", "d": "1/2014"}, {"body": "likely move approach least give try proxies compare proxy would fix whole host problems", "d": "1/2014"}, {"body": "closing track", "d": "1/2014"}, {"body": "nt bug although work reduce boiler plate necessary likely good idea", "d": "1/2014"}, {"body": "emberdefineproperty coreobjectprototypemixin", "d": "1/2014"}, {"body": "aaronshaf able pr", "d": "1/2014"}, {"body": "ebryn apologize delayed response submit pr regarding inconsistence", "d": "1/2014"}, {"body": "closed", "d": "1/2014"}, {"body": "news ca nt seem call test suite using visit helper trying route action happening app calling appreset somewhere normally running application throws errors related destroying already destroyed things ember nt problem", "d": "1/2014"}, {"body": "theworkerant possible provide jsbin jsiddle demonstrating make easier figure whats going", "d": "1/2014"}, {"body": "yea work fiddle templates found builds broken guess make one scratch", "d": "1/2014"}, {"body": "false alarm intensive stack trace analysis revealed error ebryn suggested keeping track solves problem guess bug feel pretty hard predict kinds things come error different ways one tchak seems like maybe logic fix least much helpful error message happen", "d": "1/2014"}, {"body": "theworkerant likely also want use emberrun within proxy use emberrunbind", "d": "1/2014"}, {"body": "nt think bug fixed broken example adding default unnamed outlet application template reason fixes things loading routes siblings routes emit slowloading promise case slow promise emitter sibling render outlet correctly gets torn reason overridden behavior impact rendering behavior either add default outlet like also override method also render named outlet like", "d": "1/2014"}, {"body": "closing unless shown actually buggy behavior", "d": "1/2014"}, {"body": "stefanpenner maybe right approach somehow make clear ember inspector given path treated global", "d": "1/2014"}, {"body": "use reopen reopenclass extend textfield", "d": "1/2014"}, {"body": "zimble correct way currently", "d": "1/2014"}, {"body": "also interested taken another shot getting attributes working box", "d": "1/2014"}, {"body": "running dmo mentioned related way using variable template block probably worth noting nt appear limited blocks issue happening block wasted like hour go", "d": "1/2014"}, {"body": "closing favor pr", "d": "1/2014"}, {"body": "using mapstraction development branch seems also affected", "d": "1/2014"}, {"body": "bug must preserved matter changing variable declaration setmapoptions provider array hash jan riklaunim notifications githubcom wrote using mapstraction development branch seems also affected reply email directly view github", "d": "1/2014"}, {"body": "download js files autoload check hope one line", "d": "1/2014"}, {"body": "dev build variable var myoptions changing seems solve problem", "d": "1/2014"}, {"body": "closed active class support nt added new api tracked", "d": "1/2014"}, {"body": "wagenet status would like help possible", "d": "1/2014"}, {"body": "aware status changes still think done cc rjackson", "d": "1/2014"}, {"body": "fixed", "d": "1/2014"}, {"body": "thumbsup", "d": "1/2014"}, {"body": "sure related code working pre nt", "d": "1/2014"}, {"body": "specifying layoutname fixes jsbin", "d": "1/2014"}, {"body": "doh thank", "d": "1/2014"}, {"body": "also use technique using write layout automatically normal handlebars invocations via sample jsbin", "d": "1/2014"}, {"body": "nice less code result love thanks", "d": "1/2014"}, {"body": "less code indeed love thanks guys", "d": "1/2014"}, {"body": "wagenet stefanpenner consensus core intend fix let make decision intend close issue", "d": "1/2014"}, {"body": "try remember bring meeting tomorrow", "d": "1/2014"}, {"body": "thanks wagenet", "d": "1/2014"}, {"body": "hjdivad meeting got postponed monday since google hangouts", "d": "1/2014"}, {"body": "moving away supporting binding globals deprecating cases wo nt adding support anywhere new", "d": "1/2014"}, {"body": "awesome thanks", "d": "1/2014"}, {"body": "ran one property observed", "d": "1/2014"}, {"body": "seeing well despite specified triggers event press enter ember", "d": "1/2014"}, {"body": "nice simple solution", "d": "1/2014"}, {"body": "really closed either api supports feature nt supported fixed otherwise removed", "d": "1/2014"}, {"body": "problem jschilli mentioned still valid application poll new notifications every seconds acceptance test wait indefinitely always returns true thus helper embertesting waits msecs time solution proposed teddyzeenny seems good one", "d": "1/2014"}, {"body": "seems useful dk inherited actually called nt seem uncommon might code path overriding cp nt call think might messybrittle bring ember definitely nt think dk inherited default maybe best leave", "d": "1/2014"}, {"body": "agree clean solution problem nt selfevident probably leave since big deal unless someone come robust implementation", "d": "1/2014"}, {"body": "robust implementation would mean kind regexy reflection whether super exists function implementation nt route think wan na go closing", "d": "1/2014"}, {"body": "effect keyrepeat trigger submit per repeated character", "d": "1/2014"}, {"body": "assertion exists", "d": "1/2014"}, {"body": "small update looks like htmlbars related view level refactoring plan address", "d": "1/2014"}, {"body": "stefanpenner think close since addressed", "d": "1/2014"}, {"body": "lets close addressed", "d": "1/2014"}, {"body": "ready us test htmlbars discourse let us know really looking forward open deploying discourse asap sun jan pm stefan penner notifications githubcomwrote lets close addressed reply email directly view github", "d": "1/2014"}, {"body": "issue stacktrace right deep", "d": "1/2014"}, {"body": "unfortunately examples issue longer seem available jsfiddle also unsure still issue im closing someone replicate reproduce gladly reopen", "d": "1/2014"}, {"body": "stefanpenner information make example working provided ember jsfidlle op seems say property true application started definitely think controller set via setproperties observer fired anyway think legit closed since using aliased porperty clearly better works well nightire agree", "d": "1/2014"}, {"body": "ya using observers directly seem strange using binding cp preferred way currently would suggested course action said subtle inefficiency causing occur setting controller view already created causing unexpected change notification intern causing observer fire earlier expected would love see situation improved internally start passing around view factories would able instantiate view finally needed think going farreaching refactor good idea going reopen issue", "d": "1/2014"}, {"body": "experiencing issue erundook currently retry resolves properly transition works except url says undefined parameter", "d": "1/2014"}, {"body": "jandet version ember", "d": "1/2014"}, {"body": "machty currently nt tried yet", "d": "1/2014"}, {"body": "jandet try canary real quick massive router refactor bw canary would surprised symptoms fixed", "d": "1/2014"}, {"body": "machty deliberately depending canary builds upgrade report back perhaps may workaround seems", "d": "1/2014"}, {"body": "ok still happening try canary bit see fix incoming later version", "d": "1/2014"}, {"body": "looks like related like stefanpenner mentioned", "d": "1/2014"}, {"body": "somewhat related working chrome firefox vendors get native devtools support stack stitchingtagging allow runloop tasks useful stacks stacks work devtools stack explorer firefox hopes feature year encouraging team follow suite individuals spoken google team seem optimistic lets hope get soon", "d": "1/2014"}, {"body": "nt tried erik give go thanks heads dec erik bryn notifications githubcom wrote mjallday tried setting emrunbackburnerdebug true capture stack trace items enqueued run loop navigate call stack see reply email directly view github", "d": "1/2014"}, {"body": "backburner supports basic stack stitching via ebryn mentioned addition working closely firefox chrome devtools teams appears likely improved devtools experience scenario see", "d": "1/2014"}, {"body": "theoretically possible us improve stack stitching likely marginally better exists today likely best bet chrome firefox devtools future providing improve stack stitching may also nice error reports nonsupporting browsers think ball devtools providers courts issue closed", "d": "1/2014"}, {"body": "seems working", "d": "1/2014"}, {"body": "properties changed filterby computed properties", "d": "1/2014"}, {"body": "components nt associated controllers seem play different role lastobelus mentions bindings ember secret sauce spent couple hours questioning sanity wondering earth bindings nt resolving seeing bindings work everywhere else work extremely confusing", "d": "1/2014"}, {"body": "think trusting client call callback end animation perfectly acceptable framework design ember docs say pulls inspiration cocoa many examples method contracts declaring user must call follow method super choose override said method embers docs instances super must called strange behavior expected method contract user must call callback point method called perfectly acceptable thing personally think right approach animating destruction elements", "d": "1/2014"}, {"body": "atomkirk considering animations promise based alleviate lukemelia concerns way could view lifecycle still complete regardless async event errors said believe core animations mind future probably better place handle", "d": "1/2014"}, {"body": "true good point link discussion core team animations seems absolutely support destroy animations time would think necessity web app concern ux meantime anyone found thread come quite hack animate away generic view posted answer stack overflow", "d": "1/2014"}, {"body": "seen animations mentioned passing times irc nothing beyond meant pretty sure roadmap somewhere oversight", "d": "1/2014"}, {"body": "mean wagenet access via local server think nodewebkit allows use protocol", "d": "1/2014"}, {"body": "tomasdev wanted know page worked via able run separate mini server point right directory", "d": "1/2014"}, {"body": "wagenet work localhost nt file might beyond emberjs usage wanting use app", "d": "1/2014"}, {"body": "router property specifies root url nt correct wo nt default using file routing wo nt work correctly", "d": "1/2014"}, {"body": "handle problem link helper", "d": "1/2014"}, {"body": "thanks darthdeus works well", "d": "1/2014"}, {"body": "agree ebryn nt bug since one taking action anything going close pr warning would gladly accepted", "d": "1/2014"}, {"body": "hi using collectionview arraycontroller want controller item tryed jbrown solution get error call method lookup null also tried setting itemcontroller property arraycontroller name controller items still geting item views controller hope help", "d": "1/2014"}, {"body": "oscarvgg provide jsbin jsfiddle", "d": "1/2014"}, {"body": "wagenet stefanpenner collectionview could allow itemviewcontroller", "d": "1/2014"}, {"body": "pattern", "d": "1/2014"}, {"body": "stefanpenner mean name itemviewcontroller itemcontroller could use arraycontroller itemcontroller", "d": "1/2014"}, {"body": "jbrown speaking creating controllers views manually pay attention binding chain example source changes controller updated better way appitemcontroller emberobjectcontrollerextend content embercomputedalias viewcontent appitemview emberviewextend init function var content thisget content controller appitemcontrollercreate view", "d": "1/2014"}, {"body": "simple example trying less note buttons calling action controller items", "d": "1/2014"}, {"body": "itemcontroller work see problem deciding fix", "d": "1/2014"}, {"body": "open separate issue track", "d": "1/2014"}]