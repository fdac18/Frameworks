[{"title": "add support silent model destroy", "body": "sometimes necessary model ability recover collection call destroy stay deleting model always called var destroy function modeltrigger destroy model modelcollection options model always removed collection suggestion transmitted options parameter silent true nt made event call say", "num": "3591", "d": "4/2015"}, {"title": "could backbone provide", "body": "sometimes satisfy case could backbone provide like following javascript function class options var thatoptions extend options thatinitializeapply arguments subclass think sometimes helpful", "num": "3587", "d": "4/2015"}, {"title": "removed require jquery", "body": "required", "num": "3581", "d": "4/2015"}, {"title": "\u9519\u522b\u5b57", "body": "onobjecton event callback context \u522b\u540d bind \u5728 object \u547d\u540d\u7a7a\u95f4 \u4fd7\u6210\u5730\u4f7f\u7528\u5192\u53f7\u6765\u547d\u540d \u65f6\u95f4\u5e94\u8be5\u662f\u4e8b\u4ef6", "num": "3578", "d": "4/2015"}, {"title": "backbone view copies references objects", "body": "var carview backboneviewextend data rego var cara new carview rego year var carb new carview rego year consolelog caradataregoyear gt consolelog carbdataregoyear gt nt", "num": "3575", "d": "4/2015"}, {"title": "difficulties calling header file", "body": "calling back header file created sure nothing wrong program header file compiler cygwin keeps giving error message libcmaino function winmain relocation truncated fit undefined symbol winmain error ld returned exit status please someone help idea", "num": "3574", "d": "4/2015"}, {"title": "site typo backbone section", "body": "surely mistake", "num": "3573", "d": "4/2015"}, {"title": "backbonejsorg sidebar scrolling issues", "body": "issues safari regarding fingerscrolling left sidebar backbonejsorg website wo nt work times makes really kinda hard read docs nt found solution right say works fine safari uses frameset two iframes anybody else", "num": "3572", "d": "4/2015"}, {"title": "uncaught router crashes decodeuricomponent", "body": "router crashes urierror uri malformed users copypasted input like often found search routes", "num": "3569", "d": "4/2015"}, {"title": "swift create view shape cropped", "body": "hello trying achieve result shown image using swift xcode basically want create view shape cut able see view make tutorial app know create circular shape nt know cut view thanks advance", "num": "3567", "d": "4/2015"}, {"title": "use function return get global", "body": "backbone currently breaks mode trying access properties global object global object set using pattern however case remains hence issue using pattern instead alleviates issue though arguably ugly thoughts steps reproduce import backbone test harness uses strict mode", "num": "3566", "d": "4/2015"}, {"title": "cors issue yet", "body": "apologies newbie question inside backbone view able make regular ajax http calls fine calling cors enabled server however use backbone save create methods ca nt access api one enable cors support backbone", "num": "3565", "d": "4/2015"}, {"title": "routing case sensitivity", "body": "option set routs case sensitive somthing like", "num": "3564", "d": "4/2015"}, {"title": "route parameter passing order problem", "body": "html links dont know issue see optional paramter passed arguments correct also second parameter null expect expect see code example logs routerconfig log sfo null null null correct sfo null null wrong second parameter must null sfo null null expect sfo mfb null null correct sfo mfb null correct hope help", "num": "3561", "d": "4/2015"}, {"title": "backbone classes", "body": "final changes class spec details longer possible use classes backbone without making significant compromises terms syntax written full description situation make sure click comments bottom additional mitigating option essentially way add properties instance subclass prior subclasses parents constructor run javascript class documentrow extends backboneview longer valid final spec instead effectively appealing options want try make work attach properties functions backbone allows feels dumb write something like javascript class documentrow extends backboneview compared current extends syntax run constructor twice nt view real option due issues would cause running initialize second time different cids etc pass properties default options superclass constructor suggested commenter blog probably practical current option looks something like javascript class myview extends backboneview constructor options defaults options options assigned instance backbone tagname li classname documentrow events click icon open click buttonedit openeditdialog click buttondelete destroy option assign instance foo bar since current options involve clear compromises relative current backbone extends syntax would wonderful better solution could developed totally sure look like one idea came mind writeup blog addition properties function would output hash properties constructor could run function add instance prior processing done constructor", "num": "3560", "d": "4/2015"}, {"title": "backbone sync safari fails send option headers", "body": "see full explanation issue stack overflow question however tracked far currently click tab ui safari loads next route fails attach authorization token request made sync populate collection without authorization header api return makes backbone app continue log user system problem starts click tab triggers route guestlist ticketlist offending routes routesactions etc system failing safari sync method setting header user logged system shows happening output logging thoughts might happening solely safari confirmed server side apache log debugging authorization header sent chromefirefox safari many details found stack overflow question", "num": "3559", "d": "4/2015"}, {"title": "release new version", "body": "backbone commonjssupported jquery would great npm", "num": "3558", "d": "4/2015"}, {"title": "routerexecute nt return anything", "body": "route callback returns false route event supposed fired ie however execute nt actually return callback functions return value nt design missing something", "num": "3557", "d": "4/2015"}, {"title": "makefile qt", "body": "write makefile qt without using qmake thanks advance", "num": "3556", "d": "4/2015"}, {"title": "stoplistening unbind listeners object", "body": "currently track event name callback hash tracks object would expect behavior remove event names associated callbacks one object listened another happens callbacks removed objects example coffeescript host model host new backbonemodel remote model object listens host model new backbonemodel host setup somecallback remove model object also listens host model new backbonemodel host setup adifferentcallback done far remote models listening host model listening event different callbacks let see happens stops listening host model specifically even event namespace thing happens listeners removed including listeners match event namespace case omitted remove listeners course could manually track events callbacks defeats purpose begin methods automatically track event relationships separate object makes sense internally additionally track event namespace callbacks therefore occurs remove associated event listeners objects stands remove everything matches host object andor event name obliterates listeners objects example would expect listeners removed listeners remain intact wanted remove listeners model would simply write", "num": "3555", "d": "4/2015"}, {"title": "empty collection fetch add false breaks", "body": "attempting fetch empty collection option add false causes backbone break line modelmap modelid true typeerror read property id undefined extendset attempting take collection set array id idhere sync list server returns longer list items nt want sometimes clientside array empty", "num": "3554", "d": "4/2015"}, {"title": "unpredictable ordering model added collection", "body": "sort comparator function always returning order models collection becomes unpredictable model added expected result order models order added bug found backbone jsfiddle examples based backbone underscore bug example jsfiddle behaves correctly using sortby comparator function see jsfiddle update tests made chrome version mac os", "num": "3552", "d": "4/2015"}, {"body": "use validate", "d": "4/2015"}, {"body": "better example think events ca nt fire error change listener problem", "d": "4/2015"}, {"body": "would change event handler throw error errors js pretty bad almost universally reserved exceptional unexpected behavior anything know ahead time throw error change handler wrap trycatch", "d": "4/2015"}, {"body": "saying errors trivial error prevent library code functioning correctly seems like problem", "d": "4/2015"}, {"body": "hi seen huge amount bugs due silencing events nt think go route also need model collection probably nt destroy use separate technique", "d": "4/2015"}, {"body": "see", "d": "4/2015"}, {"body": "iirc", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "sorry solution backbone marionette try npm install backbonemarionette note case backbone dep installed automatically lookup use ich used var marionette require back mario backbone undefined factory call backbone js exports case different requirejs global mistake backbonejs backbonemarionette", "d": "4/2015"}, {"body": "latest backbone nt fixed master next release", "d": "4/2015"}, {"body": "top", "d": "4/2015"}, {"body": "would like make code copy comment surprised currently changed thanks", "d": "4/2015"}, {"body": "try bower install correct version times users npm frontend libs cause error use git repo directly packagejson new", "d": "4/2015"}, {"body": "nt know backbone chinese document", "d": "4/2015"}, {"body": "question bug mind translating english afraid chinese nt great", "d": "4/2015"}, {"body": "sorry mistake didt mean project someone translate backbone chinese write github thank great project btw fyi", "d": "4/2015"}, {"body": "closed issue", "d": "4/2015"}, {"body": "yes way prototypes work javascript use function set instance property constructor need", "d": "4/2015"}, {"body": "yep thanks good catch", "d": "4/2015"}, {"body": "aware going fix", "d": "4/2015"}, {"body": "hi qiv thanks issue pull smiley understand correctly parameter malformed contains invalid percent encoding like get back right", "d": "4/2015"}, {"body": "actually guess want decode valid encodings leave invalid ones alone", "d": "4/2015"}, {"body": "yes would like decode url close possible", "d": "4/2015"}, {"body": "another way catch error router instance graceful", "d": "4/2015"}, {"body": "think handled", "d": "4/2015"}, {"body": "think handled nah one separate handles double decoding via first invalid percent encoding user input", "d": "4/2015"}, {"body": "case could mix", "d": "4/2015"}, {"body": "like idea regular expression nt cover bases instance fails url presented qiv restrictive test", "d": "4/2015"}, {"body": "damn thought issue trailing need implement regex", "d": "4/2015"}, {"body": "well fun forked mathiasbynensregenerate made take single hex code points yada yada", "d": "4/2015"}, {"body": "really kind change live userland needed props braddunbar foresight expose decodefragment jridgewell nice oneliner someone use drop regenerate right backbonehistory", "d": "4/2015"}, {"body": "without rewriting throw easy fix used regenerate syntax already making hex regexs nt really feasible give devs actually forking rewrite percent decoding able reimplement using give devs override javascript var router backbonerouterextend decodefragment require decodeuri", "d": "4/2015"}, {"body": "issue affects underscore well relevant issue jashkenasunderscore", "d": "4/2015"}, {"body": "think problem backbone enable cors support post put call api probably execute get call check calling api using ajax http postman call create method backbone execute post call api endpoint please check server permit type call kind server use", "d": "4/2015"}, {"body": "see python app running behind gunicorn making post put api using httpie postman getting expected headers example connection close date sun apr gmt server accesscontrolallowheaders contenttype accesscontrolalloworigin contentlength contenttype applicationjson also running simple ajax call within app get expected response ajax type post url data hi newpersonname success function data consolelog data error function data consolelog datastatus consolelog datastatustext consolelog dataresponsetext troubles true cors issue ajax calls would restricted however backbone ajax call one restricted", "d": "4/2015"}, {"body": "using backbone underscore jquery server expressjs app configured cors fine thing try override backbonesync set cross domain response call save method create", "d": "4/2015"}, {"body": "response keep getting xmlhttprequest load accesscontrolalloworigin header present requested resource make sure server issue even calling instagram api within backbone get cors postman nt get cors used method provided still error", "d": "4/2015"}, {"body": "sabzo post working jsfiddle minimum code needed reproduce", "d": "4/2015"}, {"body": "jridgewell cc nicknaso thanks bearing people nt used jsfiddle tried duplicate simple backbonemodelsave sample server containing api threw demo thanks", "d": "4/2015"}, {"body": "hi sabzo think understand problem edited client code reported javascript var mymodel backbonemodelextend urlroot defaults title legend actors directors region california cuba language english spanish mood adventure category action description src trailer img get error reported image error happen make cors request browser execute preflight request similar options server respond request setting header reported accesscontrolalloworigin accesscontrolallowmethods get put post delete accesscontrolallowheaders contenttype authorization send status response find technical documentetion node example hope help", "d": "4/2015"}, {"body": "nicknaso grazie mille sure server issue able observe preflight testing firefox chrome could nt see preflight headers firefox saw options method sent server nt responding appropriately thanks bunch", "d": "4/2015"}, {"body": "use regex route flag case insensitive es regexi", "d": "4/2015"}, {"body": "manually add caseinsensitive regex routes inside", "d": "4/2015"}, {"body": "hi serkansipahi thanks letting us know unfortunately expected result something route string discern regular expression used match optional parameter nt know difference city date assume second parameter matches first optional path segment enough perspective two options use regular expression route nt elegant allow direct control optional segment matches use query string parameters looks like really modifiers route would nice semantically also wo nt worry matching since let query string parser hard work hope helps", "d": "4/2015"}, {"body": "braddunbar regular expression want use query string parameters something different idea someone make search sfo sfo build string like case issue etc choice optional parameters must always specified case thank", "d": "4/2015"}, {"body": "yeah definitely bummer thanks legwork guess moral story nt use classes backbone least static property support lands fallback options proposed preferred solution defining strings objects return values key part backbone api design prototypeshared strings objects would dirty api require devs assign property instance constructor mention memory wasteful aside consistency reason use class keyword backbone", "d": "4/2015"}, {"body": "great blog post wonder backbone classes would play together solutions attach properties functions super opposed clean setting object directly prototype seen ton code trip mutating prototype objects way immune think chose include class properties pass properties default options nt something classical language feel like even less clean solution run constructor twice ick guess moral story nt use classes backbone least static property support lands even class properties come call disappointed", "d": "4/2015"}, {"body": "aside consistency reason use class keyword backbone extend addressed blog post practically theory would allow backbone long term reduce code additional concepts realistically going least years classes widely supported relevant browsers without transpiling code reduction would next nothing nt underrate consistency aspect becomes way object oriented programming javascript seems likely given standardization emberangularreacttypescriptaurelia etc backbone using added learning curve library relative options especially junior developers sure necessarily merits change pedantic hobgoblin small minds consistency", "d": "4/2015"}, {"body": "agree jridgewell attach properties functions approach probably best proposed options fwiw remember originally learning backbone relative js newcomer bit confused static properties used", "d": "4/2015"}, {"body": "correct class properties guess", "d": "4/2015"}, {"body": "proposal early community driven proposal clear actually ever part official spec current implementations cause properties added instance constructor runs nt help backbone see jridgewell link try babel", "d": "4/2015"}, {"body": "jridgewell referring part benmccormick post react developers noted issues property initializers backbone users encounter part version react supporting special property initialization syntax classes may eventually standardized info esdiscuss thread standard still worked experimental support version available babel unfortunately version defines class properties instantiated superclass constructor run nt solve backbone issues see example wycats jsdecorators strawman original superseded harmony classes proposal might suggest use getters class properties absolute last resort could check instance static props helper la", "d": "4/2015"}, {"body": "yup unfortunately version defines class properties instantiated superclass constructor run nt solve backbone issues javascript class view extends backboneview tagname li constructor anything nt touch super anything touches function view anything nt touch backboneviewapply arguments add class properties thistagname li anything touches viewprototype create backboneviewprototype constructor view element would still constructed got change set instance variable see example wycats jsdecorators strawman explain decorators would apply might suggest use getters class properties see boat attach properties functions clean currently perfectly acceptable mutation proof absolute last resort could check instance static props helper la result could interesting", "d": "4/2015"}, {"body": "backbone nt mess headers try opening issue jquery", "d": "4/2015"}, {"body": "really thanks taking time read question backbonesync options headers passing options native backbonesync method headers getting sent done safari", "d": "4/2015"}, {"body": "posted enormous repro stackoverflow dense read even already familiar issue create small jsfiddle showing problem test", "d": "4/2015"}, {"body": "see lack willingness help outlined debugging steps taken stack overflow telling much come nothing safari backbonesync working provide info take time look posted see happening posted enough information show happening", "d": "4/2015"}, {"body": "funny want jsfiddle entire application write another application show issue", "d": "4/2015"}, {"body": "yelling collaborators nt way solve posting question stackoverflow nt sufficient case provided far much anyone understand issue provide jsfiddle minimum running code shows issue might able solve fact works chrome firefox already telling us nt issue core backbone headers provided get passed providing jsfilddle likely lead issue already mentioned", "d": "4/2015"}, {"body": "trying help telling backbonesync nt anything headers right code goal opening bug help contributors track problem facing respectful time wade appspecific code find bug often misconfiguration editing problem create small proof concept bug happy help mailing list", "d": "4/2015"}, {"body": "already determined dualstorage removed application still pass optionsheaders request issue backbonesync giving benefit jquery setting options way work one browser another means clientside code problem jquery fine least could look rather pushing people first seconds issue posted", "d": "4/2015"}, {"body": "jridgewell first yelling collaborator explaining come without info would pushed told tias many times go days debugging come roadblock backbonesync told provided way much information really take look last code statements question see talking", "d": "4/2015"}, {"body": "see lack willingness help hostile meant yelling go days debugging come roadblock backbonesync told provided way much information really yes much easier us find issue provide running jsfiddle without cruft application specific code nt anything call", "d": "4/2015"}, {"body": "problem jquery fine least could look rather pushing people first seconds issue posted wrote response minutes posted read issue thoroughly based fact working backbone years developing js even longer tried point right direction debug sure absolutely right issue safari simple test determine options get passed overriding boundary backbone responsibilities end jquery begins difference arguments chrome safari report back reopen", "d": "4/2015"}, {"body": "tried get fiddle going unfortunately ajax stuff hitting xdomain policy stuff wo nt allow go override backboneajax consolelog arguments let know soon", "d": "4/2015"}, {"body": "log user authenticated backbonesyncjs line log options parse true headers authorization token backbonesyncjs line log ajax type get datatype json url emulatehttp false emulatejson false backbonesyncjs line error failed load resource server responded status unauthorized guestlist line log isauthenticated false defaultjs line log cookie undefined defaultjs line log hasaccess false defaultjs line log hasaccess false going login page defaultjs line log going route login defaultjs line according authorization header passed jquery getting lost bit confusing apologize seemed hostile dealing debugging days feel like gotten nowhere seems like every time try irc get support get ignored questions trivial stated someone feel like get response felt pushed apologize jquery issue need figure word nt get hit type response", "d": "4/2015"}, {"body": "type get datatype json url emulatehttp false emulatejson false backbonesyncjs line piece info need know backbone try posting mailing list problem persists otherwise open issue jquery also nt need hit server test sending right headers send something jsfiddle echo resource", "d": "4/2015"}, {"body": "ah become familiar jsfiddle certainly", "d": "4/2015"}, {"body": "jridgewell finally solved issue assistance backbone contractor staff issue backbone issue issue collection url tickets collection trailing sent safari would send preflight request get found would send actual request uri without trailing without authorization header removed trailing slash issue seemed go away sure actually bug backbone jquery whichever one nt seem like trailing slashes collection url", "d": "4/2015"}, {"body": "interesting good know server sensitive trailing slashes might cause still weird works chrome safari chrome also sending preflight request thanks writing hopefully someone googling future find", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "issue clear version jquery user want use anyway would nt hard would easy user maintain package packagejson indexjs feel free publish package share", "d": "4/2015"}, {"body": "think paul referring problem solution see", "d": "4/2015"}, {"body": "npm package depends backbone loaded bulk build tool code nt help change master would help though", "d": "4/2015"}, {"body": "nope place folks override apps act like method see nt want route handler return value affect transition", "d": "4/2015"}, {"body": "thanks makes sense nt read comments closely enough", "d": "4/2015"}, {"body": "seeing behavior either master provide jsfiddle", "d": "4/2015"}, {"body": "okay nevermind takes argument fact unbind objects listeners see method object overridden take argument account thus display behavior seeing", "d": "4/2015"}, {"body": "define comparator function argument count backbone proxies arrayprototypesort hood according mdn comparefunction b returns leave b unchanged respect sorted respect different elements note ecmascript standard guarantee behaviour thus browsers eg mozilla versions dating back least respect furthermore unstable returning told js engine objects value order returned irrelevant js b c e f g h j k l sort function return g c e f b h j k l sort function b return", "d": "4/2015"}, {"body": "side note onto something length arrays magical chrome node least insertion sort stable used arrays elements quick sort unstable used others", "d": "4/2015"}, {"body": "thanks revealing magics since required stable possible add option specify another sort function instead create new issue instead", "d": "4/2015"}, {"body": "posted topic google group continue discussion post link approved thanks deep insight", "d": "4/2015"}, {"body": "thanks much appreciated using mailing list happy follow", "d": "4/2015"}, {"body": "great link topic", "d": "4/2015"}, {"body": "agreed nt inside loop asking trouble", "d": "4/2015"}, {"body": "moving discussion", "d": "4/2015"}, {"body": "object observe really interesting update js platform seems simple clean way responding events minimal fuss code place hope able share soon mean time hoping gather feedback might feelreact say backbone remove ability silence events ie instead triggering event every single change assuming reaction negative would react manually disable events instead passing inline example might look like thanks", "d": "4/2015"}, {"body": "still use setters work advantage objectobserve", "d": "4/2015"}, {"body": "key word must fine grained control event dispatching oo might right choice hence question dose project like backbone fine grained event transmission control", "d": "4/2015"}, {"body": "would nt lose sleep able pass silent true always felt like dirty option wed apr pm moshe brevda notifications githubcom wrote key word must fine grained control event dispatching oo might right choice hence question dose project like backbone fine grained event transmission control reply email directly view github", "d": "4/2015"}, {"body": "dirty pretty damn important", "d": "4/2015"}, {"body": "filipmares able silence event would results hell lot events fired see source constructaddfetch name dgbeck expound would bad thing", "d": "4/2015"}, {"body": "seems advantage oo rather going setters intermediary object otherwise point love convinced adding objectobserve backbone answer either great deal redundancy innards backbone oo nt think actually need reconcile fine live separate approaches similar problems regardless experience people seem moving away observer pattern backbone angular oo promote favor immutability virtual dom model react days much bookkeeping", "d": "4/2015"}, {"body": "hard nail exact circumstance necessary confident unfortunate contour reality requires available might convincing argument related circular reactions events remember discussion elimination past subsequent agreement need left nt think something brushed table", "d": "4/2015"}, {"body": "dgbeck silent option really leads interesting challenges even pure js paste console challenges overcome silent option might important nt mean absence catastrophic top head offer runonce methods partial solution sure ways first glance correct oo offers truth thats oo fact directly settinggetting properties achieved lines code internal plumbing changes backbone using new proxy object proxy objectwide property agnostic gettersetter used getssets proxied object case way see oo mostly raw speed check naive test responding events backbone vs oo tried adding polyfill firefox got weird results focus chrome iterations oo faster finally dealing performance especially dom performance believe elephant room virtualdomreactjs expand another comment one point correct wrong nt react state changes need triggered somehow also reactjs nt seem much place far data handlingmanipulation leaves desire backboneesque library act transient data storemanipulationpersistence layer triggering events data changes reactjs whatever update said events tl dr reactjs view still need deal actual data", "d": "4/2015"}, {"body": "rereading comment realized code example nt clear wasnt suggesting setters needed trying illustrate backbone might look like silent could passed one wanted disable events another way", "d": "4/2015"}, {"body": "mbrevda thanks clarifying interesting discussion seem getting topic bit fault mind move gitter mailing list edit followed", "d": "4/2015"}, {"body": "reset parameter would useful us", "d": "4/2015"}, {"body": "come across issue even desired behavior query string nt part sent router callback", "d": "4/2015"}, {"body": "found querystring useful thing router callbacks", "d": "4/2015"}, {"body": "expecting optional parameter", "d": "4/2015"}, {"body": "example routes matching query parametres using route dealsoffers statusrejected passed listoffers", "d": "4/2015"}, {"body": "ah yes try instead get two arguments every time instead variable number", "d": "4/2015"}, {"body": "surly default functionality nt desired would want query string passed expecting id", "d": "4/2015"}, {"body": "well router certainly nt know expecting smiley gave function call two routes different number parameters also remove query string entirely overwriting", "d": "4/2015"}]