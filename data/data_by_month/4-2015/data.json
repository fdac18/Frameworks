[{"title": "uncaught error unable find element updating innerhtml option element", "body": "coworker caught offguard behaviour yesterday wanted see possible react bug misunderstanding part basically seems one part innerhtml option element trying update one throw error worked around combining parts single variable using jsfiddle demonstrating error done workaround something wrong something possible react", "num": "3792", "d": "4/2015"}, {"title": "use responder system react", "body": "hi see reactnative gesture responder system also use responder system react notice implemented use thx", "num": "3791", "d": "4/2015"}, {"title": "bad interaction react click event handler native click event handler", "body": "repro created buttons one rendered time one button click handler hooked react synthetic click event hooked native click event even though one button rendered time single click triggering click events bug hit apps mix react components nonreact controls eg jquery ui repro steps reproed chrome react go click button labeled one expected button rendered labeled two actual rendered button still label one open console see gototwo gotoone indicates one button click handler ran two button click handler ran even though never saw button two", "num": "3790", "d": "4/2015"}, {"title": "testutilsrenderintodocument nt function expected browsers", "body": "hi program jsfiddle jsx var input reactcreateclass render function return var testutils reactaddonstestutils var inputinstance testutilsrenderintodocument var inputdomnode reactfinddomnode inputinstance inputdomnodefocus place cursor end inputdomnodesetselectionrange log twice consolelog inputdomnodeselectionstart consolelog inputdomnodeselectionend problem logged twice chrome firefox expected logged twice see safari interesting part use instead program works expected using chrome firefox safari", "num": "3789", "d": "4/2015"}, {"title": "warn using reactunmountcomponentatnode different react instance tree", "body": "able look see child datareactid attribute nt rendered copy react consequently warn see", "num": "3787", "d": "4/2015"}, {"title": "support prepostevent notification", "body": "find needing notification synthetic event eg onclickonchange react component helps implement fluxlike framework strict constraints store change events propagate system ideally need access entry points application async server events timer events browser events latter would like hook react event system thing possible andor feasible implement", "num": "3782", "d": "4/2015"}, {"title": "expose reactaddons reactaddons npm deprecate reactaddons", "body": "current system packaging reactaddons nt great need pull addons even want use one instead let make similar simple adding files buildnpmreact require private internal modules", "num": "3780", "d": "4/2015"}, {"title": "remove v mvc text website", "body": "lots people use react v mvc sure thought put phrase website think breeds idea dump inside though recommended application architecture experience people end problems react incomprehensible webs events cascading updates etc perhaps something like react concerned rendering ui since makes assumptions rest technology stack easy try small feature existing project top new one", "num": "3776", "d": "4/2015"}, {"title": "error stacks general", "body": "hi well like project using gripe errors refactoring large amounts code find call get unhelpful error ways errorout react well also seem produce unhelpful errors stack traces nt escape react time making near impossible debug possible better stack trace tell line perhaps would tell actually went wrong trying create element undefined", "num": "3775", "d": "4/2015"}, {"title": "npm update broke something relating reacttools", "body": "ran npm update reactnative broke project got error find package main file package usersblainedevnativeevueiosnodemodulesreactnativenodemodulesreacttoolssrc could something related thought post", "num": "3774", "d": "4/2015"}, {"title": "bc break", "body": "hi code javascript var hello reactcreateclass render function return hello gt thispropsname reactrender documentgetelementbyid container works fails following message javascript uncaught error parse error line unexpected token gt return hello gt thispropsname fiddle fiddle idea problem could", "num": "3773", "d": "4/2015"}, {"title": "large speed loss hidden element using inline styles", "body": "came across speed test using react removed hidden element table load see impacted speed remove hidden element speed gets better element simple td element inline styles hide surprised speed difference wanted know happening inline styles hidden element test hidden element test hidden element", "num": "3771", "d": "4/2015"}, {"title": "componentwillreceiveprops called many times apparently identical props", "body": "unless missing something nt happen eg printout app make sure nt happen thanks", "num": "3770", "d": "4/2015"}, {"title": "numeric character reference props possible due escaping", "body": "html numeric character reference named character reference work propvalues common use case eg icons fonts work raw strings fashion breaks scenarios yielding workaround found far using dangerouslysetinnerhtml bit unfortunate forces introduce another wrapper using basic html feature jsfiddle sample", "num": "3769", "d": "4/2015"}, {"title": "updating state fails componentdidmount client side using server side rendering", "body": "trying render react component server side html serve rerender client side included cut example whereby time x displayed x updated per second given simple class javascript reactcreateclass server side html generated correctly suitable datareactid attribute client side first line componentdidmount causes error displayed first second updated expected per second error message logged console error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags like using nonsvg elements parent try inspecting child nodes element react id documentation componentdidmount states invoked client server immediately initial rendering occurs implies perfectly safe update state diverge state encoded initial server side html representation replace thissetnow settimeout thissetnow fixes things seems like nasty hack", "num": "3768", "d": "4/2015"}, {"title": "reactid bug", "body": "code datareactid dom element looks like bug", "num": "3766", "d": "4/2015"}, {"title": "recognize dom changes", "body": "hey im using react render treeview since nt found good replacement native javascript drag n drop sorting script sticked react renders everything fine dom looks like datareactid gt since using reordering elements dom manipulated directly looks like datareactid gt got mixed realized really fast anything good example remove reordered list item ref nt work onclick events working render displaying data another element figure way force react completely rerender complete component already tried forceupdate method within component nt seem recognize changes dom someone know better way tackle problem edit see example remove node rendered list update itemarray react nt recognize datareactid three removed dom", "num": "3764", "d": "4/2015"}, {"title": "react renders children", "body": "rendering react children dumping code using insertingreplacing nodes back unfortunately svg tag get back code like works fine actually using code like actually generating useless tags via see three broad solutions coded ugly solution keep track whether node child append markup tag instead adds couple checks html children flow something happy nt work safari browsers box nt innerhtmlinnersvg polyfill cleanest solution would change actually parse markup use html svg nodes feel like nt done performance reasons vs innerhtml right simply detect tag deal used createnodesfrommarkup hackish nt break everything sounds quite painless happy work pr fix familiar philosophy project would direction want thanks", "num": "3763", "d": "4/2015"}, {"title": "react render tbody components returns uncaught error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated", "body": "problem fiddle attempting dynamically update existing html table ajax data components tbody component renders collection datarows representing collection elements renders collection cells representing elements row understand html table without tbody element browsers insert one cause problems happening html table tbody wish replace get following error run code code succeeds simply change render table top table element course running firefox linux chrome reactjs extension linux help would appreciated thanks dave", "num": "3762", "d": "4/2015"}, {"title": "make reactshallowrendererrender act similar react", "body": "opinion return component instance calling second time unmount previously mounted component type key different make sense", "num": "3760", "d": "4/2015"}, {"title": "claim reactjsorg", "body": "learned objections claiming submit pr ghpages branch add cname file", "num": "3754", "d": "4/2015"}, {"title": "react blur may relatedtarget ie supported", "body": "reactbrowsereventemitter handling see react first check trap capturing event using ca nt browser supports use however problem pattern internet explorer implements implement ie ie supports addeventlistener trapping capturing events means ie react handlers ie null react handlers even though ie would support used", "num": "3751", "d": "4/2015"}, {"title": "differences jquery cdn url tutorialmd", "body": "getting started defined adding markdown defined unify", "num": "3750", "d": "4/2015"}, {"title": "implement syntax highlighting code snippets written markdown website", "body": "code snippets code snippets across homepage syntax highlighting features great also something similar resulting markdown output displayed given input great syntax highlighting like github markdown results code snippet present react webpage eg", "num": "3748", "d": "4/2015"}, {"title": "npm install fails linux without g installed", "body": "fresh installation ubuntu installed compiled version nodejs failed step error make g command found solves problem make sense put g dependency readmemd prerequisites section", "num": "3744", "d": "4/2015"}, {"title": "kill reacttools current form", "body": "shipped jstransform cli api reacttools intention deprecate reacttools entirely less thing support lets us ship transform updates outside react release cycle sure wo nt ship reacttools basically reship jstransform hawk watching repo wondering means options switch jstranform wrote migration guide switch babel supports many things jstransform nothing nt really suggest option wo nt unship reacttools npm long used versions correctly able keep chugging along x remove transforms x make sure build still works x make reacttools still works like one x make sure jsxtransformer still works make new one jstranform", "num": "3743", "d": "4/2015"}, {"title": "would nice reactcomponent could render undefined", "body": "idea would nice reactcomponent could render undefined opted property like isloading true find following quite bit something like follow might clean bit unaware possible already", "num": "3738", "d": "4/2015"}, {"title": "typescript support", "body": "rt", "num": "3736", "d": "4/2015"}, {"title": "update jsfiddles use ssl", "body": "couple jsfiddles site nt using ssl link ssl pages nt work fix official docs blogs posts published us work", "num": "3735", "d": "4/2015"}, {"title": "warnings tell tree component culprit", "body": "upgrading relatively large codebase react hit variety warnings latest warning use keyed object wrapped reactaddonscreatefragment object passed child exploring stack starts give hints culprit case element one many anything react make warnings debuggable", "num": "3733", "d": "4/2015"}, {"title": "react onclick event overridden android browser", "body": "maybe galaxy tried chrome standard browser clicking email address triggers native email intent js bin test case note mailto even anchor tag noticed used email address text button div click event started investigating seems like browser click event listener email container android opens email intent every part element safe click except email address try clicking email addresses test case using browser android device see galaxy problem widespread", "num": "3732", "d": "4/2015"}, {"title": "ca nt make checkbox work modal", "body": "info modal hidden beginning control state changing class previous code click checkbox inside modal makes changes state changed rendering modal visibility visible opacity modalhide visibility none opacity previous code checkbox nt work getinitialstate items checked true checked true checked true onchange id let items thisstateitems itemsevery item index gt itemid id itemchecked itemchecked return false return true thissetstate items items render checkboxlist thisstateitemsmap item index gt return current code funny works keep others render return thisstateshowmodal amp amp checkboxlist get works nt know reason", "num": "3731", "d": "4/2015"}, {"title": "error handling server side rendering", "body": "hi running reactrendertostring nodejs server get error messages error instead everything stops browser get response added proptypes give errors key inside object nt error message big problem trying learn react developers callback anything detect errors reactrendertostring thanks", "num": "3730", "d": "4/2015"}, {"title": "event handler triggered element container prevent bubbling", "body": "using react map library use react render elements container provided map library problem container prevent event bubbling checkout reactjs source code found event emitter listen html document depend event bubbling dispatch event make onclick handler work currently addeventlistener manually nt think elegant way wondering could react provide option bind event listener html elements instead entire document", "num": "3729", "d": "4/2015"}, {"title": "requiring polymer reactmount test breaks manual test several browsers", "body": "looking found requiring polymer actually webcomponentsjs breaks tests messages like commenting make tests green seems like polymer chrome override original dom constructors therefore errors occur chrome latest safari firefox tests gets failed due", "num": "3728", "d": "4/2015"}, {"title": "warn rendering htmlunknownelement", "body": "usually means user mixed lowercaseuppercase naming convention see could add message like warning tag unrecognized browser meant render react component start name uppercase letter check per tag development mode", "num": "3726", "d": "4/2015"}, {"title": "default props class syntax", "body": "support announcement says idiomatic way specify class state use simple instance property likewise getdefaultprops proptypes really properties constructor makes lot sense noticed small inconsistencies may worth rethinking using original syntax value returned seems used points component lifecycle constructor example inspect gets sent see default props applied nt seem case using class syntax means duplicate code example mean js class control extends reactcomponent constructor props propsvalue propsvalue super props componentwillreceiveprops props propsvalue propsvalue something props see duplicating expression one default obviously lot duplication using method could return method would work make sense restore method avoid unnecessary duplication another reactlike approach aware", "num": "3725", "d": "4/2015"}, {"title": "shallow rendering support context", "body": "shallow renderer render method currently accepts second undocumented argument values pass nt actually make pass component receives context object related", "num": "3721", "d": "4/2015"}, {"title": "smulateclick trigger browser default action", "body": "simple terms cause hash change intentional", "num": "3720", "d": "4/2015"}, {"title": "disable reactperf", "body": "working integrating react serverside rendering framework maintain sailsjs ironically causing serious slowdowns project point skewing perception certain things making development generally annoying report findings via chrome debugger separately anyone interested like disable docs state perf object documented exposed reactaddonsperf using reactwithaddonsjs build development mode using reactaddons using react npm module however see option disable thoughts", "num": "3715", "d": "4/2015"}, {"title": "componentwillunmount called server side", "body": "using rendertostring rendertostaticmarkup componentwillmount called corresponding componentwillunmount never called leads memory leaks server using mixin code cleanup whenever component unmounts", "num": "3714", "d": "4/2015"}, {"title": "component rendering null always triggers dom update", "body": "see behavior fiddle basically thing tag always updated dom check elements view chrome inspector see elements updated nt happen component explicitly returns instead", "num": "3713", "d": "4/2015"}, {"title": "documentation classes", "body": "lifecycle methods define modern react component classic component spec checked docs ca nt find much yet classes missing something", "num": "3710", "d": "4/2015"}, {"title": "spurious context warning getchildcontext nt pure", "body": "sahrens found case component creating new object time getchildcontext called nt optimal performance getchildcontext called render looks like actually calling twice render warning two results nt code var parent reactcreateclass childcontexttypes x reactproptypesnumber getchildcontext function return x mathrandom render function return var child reactcreateclass contexttypes x reactproptypesnumber render function return x thiscontextx reactrender documentbody produces warnings like", "num": "3709", "d": "4/2015"}, {"title": "long tap submitting form", "body": "hi observed mobile browsers specifically chrome firefox safari try submit form holding submit input button half second longer onsubmit events form get triggered comparison quick tap triggers onsubmit callbacks issue", "num": "3708", "d": "4/2015"}, {"title": "reactmultichildunmountchildren throws error thisrenderedchildren undefined", "body": "leaning question solid bug report solid repro started occurring application recently could well due bad implementation application question supposed able happen ie renderedchildren able undefined causing loop unmountchildren throw error might wrong occurring application code referring", "num": "3702", "d": "4/2015"}, {"title": "replace invariant better prod", "body": "idea pretty sure saw elsewhere reactnative maybe transform calls conditional wrapping call check condition anyway would reduce noop function calls otherwords becomes hell could replace get rid function call entirely though really nt matter much since going throw plus duplicate default string might end meaningless", "num": "3701", "d": "4/2015"}, {"title": "csstransitiongroup remove elements dom", "body": "check fiddle component limit log entries old entries removed dom", "num": "3700", "d": "4/2015"}, {"title": "prepend generated code comment transformed file", "body": "would beneficial prepend sort code automatically generated modify hand comment files built binary likely reduce developer confusion also simplify code reviews time wasted reviewing jsx source js output plus tools phabricator autodetect string changed files display appropriate message review suggest default behavior since nt think major downsides alternate options would include sort managed macro flag", "num": "3699", "d": "4/2015"}, {"title": "add method enabling full invariant warnings production", "body": "hi using react build views atom editor atom app running production mode react wo nt give us proper invariant errors looking code hundreds checks see code running production environment nt look trivial add pull request search replace production development started get errors wanted know special case come system use react plugin surrounding app production mode look seeing make atom run production mode feels like something react support rather atom support running production app development mode thanks time francois", "num": "3698", "d": "4/2015"}, {"title": "shallow renderer fails component", "body": "trying render component using preliminary shadow renderer support testutils simple reproducible test case issue var foo reactcreateclass contexttypes foo reactproptypesobject run jest test get looks like error thrown whenever component rendered thought perhaps context required although nt problems omitting actual app even using get exception", "num": "3696", "d": "4/2015"}, {"title": "iteration conditional tags jsx", "body": "point view react newbie one things stand xmllike syntax jsx respect templating language lack conditional iteration tags reason jsx anything like obvious compilation us write today would syntax valid xmllike example since would compiled specific javascript code anyways example shorter still point nt mean start holy war react absolutely great feels bit wrong basic iteration conditional instructions xmllike part whatever specific syntax would make templating parts jsx structured would make easier html css people tweak markup add without risk damaging control structures", "num": "3695", "d": "4/2015"}, {"title": "proptypesoneof proptypesshape", "body": "component expects one type object another tried variations cproptypes foo proptypesoneof proptypesshape x proptypesstring isrequired isrequired warning warning failed proptype invalid prop value supplied expected one null null bug limitation wrong jsbin", "num": "3692", "d": "4/2015"}, {"title": "detect component invalid props", "body": "way check existing component valid props instantiated addition existing console warning would great check could run later ie prior rendering component receiving new props", "num": "3686", "d": "4/2015"}, {"title": "react incorrectly reports isomorphic rendering differences", "body": "react unable reuse markup reason stated warning message seems react determines failed checksum actually tries determine part code different takes account things actually cause different checksum calculated easy way find real discrepancy think better way deal warning list places markup might discrepancy instead listing first place since likely actual problem", "num": "3685", "d": "4/2015"}, {"title": "erraccessorsnotsupported using", "body": "using shim sham v react always throws error erraccessorsnotsupported line also using reactrouter set env production fails raised separate issue also env production env production call stack", "num": "3682", "d": "4/2015"}, {"title": "member variables react class shared reference", "body": "create several instances react class using reactcreateelement class member variables shared instances arrays objects shared strings booleans etc feels horrible scary wrong bug another way want please look second realworld example", "num": "3681", "d": "4/2015"}, {"title": "upgrading makes app slow", "body": "hi trying upgrade react rendering app using much longer time rendering takes around ms takes ms performance impossible upgrade kind reason slow rendering thanks", "num": "3680", "d": "4/2015"}, {"title": "nested node lists gain extra tag top containing tag list item", "body": "already tried stackoverflow und might want check description also jsfiddle comments trying create nested navigation tree unordered lists list items containing tags sublevel lists gain unintentional tag link without description discovered html source also styled via css substitute tag eg behaviour disappears let nodetree reactcreateclass render function return thispropstreemap function node return nodetreeitem reactcreateclass render function return nodetreecontent reactcreateclass render function return null renders root item", "num": "3679", "d": "4/2015"}, {"title": "components extending reactcomponent break findallinrenderedtree", "body": "honest sure really bug ca nt tell components nt extend actually supported cursory look tests type checks seem indicate areshould run issues using way except trying test", "num": "3677", "d": "4/2015"}, {"title": "csstransitiongroup animate child calls getboundingclientrect componentdidmount", "body": "possibly react bug nt able reproduce vanilla jshtmlcss far demo encountered tried fade component contains reactswipe uses plain js library hood seems like call makes getboundingclientrect magically neutralizes transition causing effect one workaround seems deferring getboundingclientrect call using settimeout thanks greenjello reactjs", "num": "3672", "d": "4/2015"}, {"title": "html jsx compiler example page broken", "body": "get error referenceerror htmltojsx defined", "num": "3671", "d": "4/2015"}, {"title": "jsxtransformer changes source map return type", "body": "seems api change react covered documentation using option source map returned plain javascript object previously would return instance need call get actual source map intentional change got overlooked writing documentation", "num": "3670", "d": "4/2015"}, {"title": "key prop dom nodes actually called code", "body": "trying fix warning searching ended found finally managed get rid warning using instead fixed probably least docswarning", "num": "3669", "d": "4/2015"}, {"title": "onchange event propagated materialize css used class browserdefault", "body": "use materialize css framework react issue onchange event propagation way event fired called add class works pretty well sure react issue maybe also created issue materialize repo", "num": "3667", "d": "4/2015"}, {"title": "access css class name renderintodocument", "body": "jest tests like verify class names rendered elements best get react element dom access css class", "num": "3666", "d": "4/2015"}, {"title": "dynamically changing rowspan", "body": "problem trying update table initial table looks like rowspan works fine row table cell looks like looking length ordinates array axis number rows want row cell cover user clicks new ordinate pushed table rerenders end result reason although rowspan changes see inspecting elements reason table cell spans across rows bug made fiddle see problem", "num": "3661", "d": "4/2015"}, {"title": "reacttools installation fails", "body": "npmdebuglog info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli install verbose cli g verbose cli reacttools info using npm info using node verbose node symlink c program filesnodejsnodeexe silly cache add args reacttools null verbose cache add spec reacttools silly cache add parsed spec raw reacttools silly cache add scope null silly cache add name reacttools silly cache add rawspec silly cache add spec silly cache add type range verbose addnamed reacttools silly addnamed semvervalid null silly addnamed semvervalidrange silly addnamerange name reacttools range hasdata false silly maptoregistry name reacttools silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry uri verbose addnamerange registry flight fetching verbose request uri verbose request auth needed info attempt registry request try verbose request id http request get info retry retry error last attempt error connect eacces info attempt registry request try http request get info retry retry error last attempt error connect eacces info attempt registry request try http request get verbose stack error connect eacces verbose stack exportserrnoexception verbose stack tcpconnectwrapafterconnect oncomplete verbose cwd c error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install g reacttools error node error npm error code eacces error errno eacces error syscall connect error error connect eacces error exportserrnoexception error tcpconnectwrapafterconnect oncomplete error error connect eacces code eacces errno eacces syscall connect error please try running command rootadministrator verbose exit true tks", "num": "3660", "d": "4/2015"}, {"title": "change event fired input typedate", "body": "hello seems like change event fired input typedate mobile firefox android please try following jsfiddle code example may something wrong code works well chrome safari desktop firefox mobile firefox tested firefox android case vanilla javascript works well case thank advance andrei", "num": "3659", "d": "4/2015"}, {"title": "document events pooled", "body": "ran issue event handler called passing function accessing inside function seems reacts synthetic events garbage collected event handler finished executing gave error tried access since properties removed event object fine easy fix destructuring event argument instead probably documented", "num": "3657", "d": "4/2015"}, {"title": "chrome synthetic drag drop events use domstringlist eventdatatransfertypes", "body": "broken chrome", "num": "3656", "d": "4/2015"}, {"title": "getdefaultprops working", "body": "working simple component default props react component class navigation extends reactcomponent getdefaultprops return user render consolelog thisprops thispropsuser user logged return else user logged return navigationproptypes user reactproptypesobject return navigation simply render without props got empty object console output using react chrome osx idea going wrong", "num": "3655", "d": "4/2015"}, {"title": "use statefy", "body": "hey folks implementing set react components explain section created statefy problem sure good practice afraid using large number components find would way better another way could please give feedback project would much appreciated thanks", "num": "3653", "d": "4/2015"}, {"title": "passing react class prop longer works", "body": "hi trying run following code using latest version react jsx var mycomponent reactcreateclass render function return var app reactcreateclass render function return reactrender documentbody however error thrown code ran code functions expected react someone figured due change way react classes autobinds methods therefore changing method fixes issue jsx render function var tmpl reactcreateclass render function return thispropsdata", "num": "3652", "d": "4/2015"}, {"title": "react failing script tags", "body": "react liking js render function return workaround", "num": "3649", "d": "4/2015"}, {"title": "exposing max tree depth", "body": "working treelike visualization child nodes nested inside parent node expand tree hit depth limit set reactinstancehandlesjs getting following error message wondering guys plans make depth limit configurable way bypass limitation", "num": "3648", "d": "4/2015"}, {"title": "update tutorial doc", "body": "plans update reworking internal documentation based tutorials use happy contribute back want us update code examples existing tutorial would best keep existing examples add underneath create new tutorial page eg", "num": "3647", "d": "4/2015"}, {"title": "onchange dropped input fields generated within iterator", "body": "using underscore mapping array generate list components example code upon rendering onchange dropped", "num": "3643", "d": "4/2015"}, {"title": "jsx watch error watch enospc", "body": "sometimes dont know reacttools aka try compile js command result well working done flag option try add result confused environment", "num": "3637", "d": "4/2015"}, {"title": "rename react element", "body": "want rename react like react work rename", "num": "3633", "d": "4/2015"}, {"title": "async lifecycle methods animation", "body": "trying integrate animations react project becoming quite struggle example error message component fade like fade old message fade new one animations javascript main problem ca nt fade previous error sync think would make sense lifecycle methods name async callbacks like", "num": "3631", "d": "4/2015"}, {"title": "ship", "body": "handful things ship patch release missing anything", "num": "3629", "d": "4/2015"}, {"title": "unable horizontally align elements", "body": "trying horizontally space divs demonstrated example works fine css paste example code html file try react like var react require react var page reactcreateclass displayname test render function return reactrender documentbody nt work correctly known issues react might missing wrong way", "num": "3626", "d": "4/2015"}, {"title": "reactproptransferer merge react native styles", "body": "existing merge strategy merges objects different merge strategy necessary react native uses ints instead objects also supports arrays believe backwardscompatible web react", "num": "3624", "d": "4/2015"}, {"title": "reactcsstransitiongroup warns removed transition progress", "body": "noeventtimeout timer cleared child unmounted transition progress causes false positive warning", "num": "3623", "d": "4/2015"}, {"title": "document defined server", "body": "saw bug year ago facebookreact fixed encountering running react server generate html one parent components variable whose value determined reaches child component need implement way child component pass back data parent read implemented parent component passes callback function prop child component child component calls callback componentwillmount function also tested calling callback getinitialstate callback calls setstate update state variable parent work serverside exception thrown document defined", "num": "3620", "d": "4/2015"}, {"title": "feature request show component name warnings", "body": "upgrading found really hard locate problems caused duplicated using may help component names warnings", "num": "3619", "d": "4/2015"}, {"title": "clarification patents grants termination clauses", "body": "firstly sincerely apologise wrong place asking question nt seen answered places think definitely relates usage reactjs consternation confusion facebook patent grant declared project including one specifically license granted hereunder terminate automatically without notice anyone makes claim including filing lawsuit assertion action alleging b right patent claim facebook invalid unenforceable lawyer interpret mean use react publicly voice concern quality validity patent owned facebook access reactrelated patents terminated automatically open sued patent infringement may little paranoid also wonder simply discussing issue grounds patent grant termination clause makes perfect sense terms protecting facebook unnecessary patent litigation desired purpose spirit actual purpose letter b clause confusing concerning please point discussion answer already taken place would terrific yet official word facebook issue please point arena going take place likely appropriate", "num": "3617", "d": "4/2015"}, {"title": "performance components", "body": "trying proof react faster angular problem code need generate list lines use input change value specific field inside angular fast binding however react ca nt code angular html code react html somebody help proof react faster angular", "num": "3616", "d": "4/2015"}, {"title": "binding classes onchange", "body": "using classes autobinding nt happen hopefully know expect inside function class undefined fact happens however inside function input component constructor obviously bind functions time problem resolved since thissetstate exists constructor calling thissetstate inside handlechange function getting error nothing happening confusing track admittedly immediately sure thought make issue open discussion", "num": "3613", "d": "4/2015"}, {"title": "record perf mesures every single render", "body": "app framework similar om always render top component flux store components listening single flux store event single global json state managed outside react ask question followup issue noticed reactrender takes callback former perf code looked like javascript render reactaddonsperfstart reactrender documentbody reactaddonsperfstop reactaddonsperfprintwasted render reactaddonsperfstart reactrender documentbody reactaddonsperfstop reactaddonsperfprintwasted next renders render takes callback seems make sens use instead considering reactrender synchronous javascript render reactaddonsperfstart reactrender documentbody function reactaddonsperfstop reactaddonsperfprintwasted render reactaddonsperfstart reactrender documentbody function reactaddonsperfstop reactaddonsperfprintwasted next renders question directly comes mind would behavior rendering triggered rendering callback called ideal world would seem could also could lead bad duplicated mesures even worse failure perf allow started twice example think usecase pretty common using react really pure way would nice explain document achieved without expecting weird side effects", "num": "3611", "d": "4/2015"}, {"title": "documentation componentwillreceiveprops confusing", "body": "read doc says invoked component receiving new props however clear still invoked component explicitly receive props example looks like default called every time updating phase developer control", "num": "3610", "d": "4/2015"}, {"title": "erro webkit qt", "body": "one know would reactjs work wkhtmltopdf curious exactly feature api react uses supported qt web view js libraries use work fine related", "num": "3609", "d": "4/2015"}, {"title": "jsx compiler issue html element", "body": "started making new ui components react faced following issue defined component state use state input tag inside render function gives following error reactifyerror usrlocalsrcstagileappappjs parse error line unexpected token parsing file usrlocalsrcstagileappappjs index linenumber column description unexpected token name reactifyerror filename usrlocalsrcstagileappappjs filename usrlocalsrcstagileappappjs stream seems jsx supports typevalue properties property like checked without value", "num": "3608", "d": "4/2015"}, {"title": "testutils shorthands", "body": "right two methods jest api shorthands yet methods ridiculously long like makes slow reading typing shorthands two methods testutils heart", "num": "3607", "d": "4/2015"}, {"title": "setting attribute style null breaks attribute", "body": "assign null style attribute reset works following changes value nothing fiddle demonstrating try push button several times seems like strange behaviour would nt surprised first attempt set stylenull failed nt silently breaks style attribute", "num": "3606", "d": "4/2015"}, {"title": "idea let touchable support press radius instead press rect", "body": "press rect defines rectangle around touchable component touch stays active thinking radius pair radii form oval around touchable component makes sense rectangle ways", "num": "3602", "d": "4/2015"}, {"title": "animation lifecycle order", "body": "bit confused using following render two different pages every lifecycle animation callback get tried simple transition fading element home fading element search weird going home search see logs search component rendered top home component homecomponentwillleave called would expect oder like way animations seems make sense following code would read home component leaves fade header search component enters fade header coffee home componentwillleave done gt consolelog home componentwillleave header velocity opacity duration complete done search componentdidenter gt consolelog search componentdidenter header velocity opacity duration", "num": "3601", "d": "4/2015"}, {"title": "thisprops available component constuctor", "body": "versions node react babel tested playing new syntax figured weird behaviour code snippet print fact another weird stuff print object property", "num": "3599", "d": "4/2015"}, {"title": "tests fail run manually firefox chrome", "body": "hi trying run jasmine tests firefox fail run tests chrome succeed know tests run phantom js headless chrome nt tests supposed run browsers apart assertion failed able spot seems thing changed order data attributes first tag tests dependent", "num": "3598", "d": "4/2015"}, {"title": "get regex props match error", "body": "sorry poor english gt lt show code var regextextfield reactcreateclass handlechange function e var patt thispropsregex get regex obj var val etargetvalue consolelog consolelog patt patt value val consolelog result patttest val render function return reactrender set regex obj documentgetelementbyid regextextfield match error patt dg value result true patt dg value match error result false patt dg value result true patt dg value result false match error use regexp var regextextfield reactcreateclass handlechange function e var patt regexp thispropsregex g use regexp var val etargetvalue consolelog consolelog patt patt value val consolelog result patttest val render function return reactrender use string documentgetelementbyid regextextfield match ok patt g value result false patt g value result true patt g value result true patt g value result true", "num": "3597", "d": "4/2015"}, {"title": "warn rendered dom node htmlunknownelement", "body": "bit react jsx uses upper vs lower case convention distinguish local component classes html tags afterthought remembered something lowercaseuppercase jsx tags good react citizen searched react site found documented new react took around minutes trace generally follow convention developed simple component mostly static site simply clones children adds thought simple utility therefore lowercased understand might change worth least adding warning uncommon html tag names better yet lowercase jsx tags also local variables", "num": "3596", "d": "4/2015"}, {"title": "rendering server", "body": "issue element rendered server client example recreates issue jsx const react require react const selecteddebug reactcreateclass displayname selecteddebug render return b c moduleexports selecteddebug attribute rendered server works fine browser also tried setting prop element nt seem make difference renders expected using however course throws warning console telling use either prop note code running node using babel transpiling tested using react amp missing something bug", "num": "3594", "d": "4/2015"}, {"title": "issue using reactaddons related error reported many others uncaught typeerror read property reactautobindmap null", "body": "managed isolate issue simplest component var react require reactaddons var test reactcreateclass render function return hello world moduleexports test using gives infamous replace everything works fine errors warnings incompatibility addons part missing anything", "num": "3593", "d": "4/2015"}, {"title": "uncaught typeerror read property reactautobindmap undefined", "body": "iv getting aforementioned quite often recently bundling modules browserify stack trace pin points exact point origin error generated avoid", "num": "3592", "d": "4/2015"}, {"title": "uncaught typeerror read property context null", "body": "uncaught typeerror read property context requestonreadystatechange mean", "num": "3585", "d": "4/2015"}, {"title": "suggestion major version switchover jsx cli always assume jsx js needing x", "body": "since jsx code advocated needing jsx extension would make sense major version release breaks backward compat switching always assume code jsx unless otherwise specified using x flag major semver bump would ensure existing projects affected realignment current advocacy practice", "num": "3582", "d": "4/2015"}, {"title": "reactaddonstestutilsrenderintodocument document wrong", "body": "argument rather", "num": "3581", "d": "4/2015"}, {"title": "consistently rendering new components body defeat purpose dom diffing", "body": "example something like repeatedly mean diffing nt taken advantage real dom rerendered every time something place prevent real dom rerendered every time", "num": "3577", "d": "4/2015"}, {"title": "use linkedstatemixin links radio buttons radiolink", "body": "react two types linked states valuelink checkedlink neither work well radio buttons mutable value attribute somewhat degenerate parameter additional work done understand radio button actually selected would great could add something akin valuelink text inputs would set state variable defined value like say first radio button clicked change state would variable named value probably achieved adding lines linkedvalueutilsjs arguable whether linked value could also serve group name even radio type implicitly set radiolink attribute believe syntax kept close link types plus typename verbosity gives context code usecase warrant feature", "num": "3573", "d": "4/2015"}, {"title": "document reactaddonsbatchedupdates", "body": "nt realise addons bundle would good get added docs would good also include example using something similar", "num": "3570", "d": "4/2015"}, {"title": "expose reactmount", "body": "sorry already exists form misunderstanding everything works certain libraries eg reacthotapi depend use wo nt work script available react bundle eg projects added single line essentially expose work would nice available default however apologies available default form", "num": "3568", "d": "4/2015"}, {"title": "improve error createelement undefined", "body": "", "num": "3565", "d": "4/2015"}, {"title": "strange contains method mounted dom input", "body": "got component renders following mount root component different props previously rendered node receive error render remove inputs form error goes away important note using contexts component lives inside root even though error everything works expected", "num": "3561", "d": "4/2015"}, {"title": "onchange propagation", "body": "one tricky thing experienced recently onchange input propagates nt set stoppropagate means input somewhere deep change propagate dom tree since using onchange generic components triggering also took find understand whats going question intentional maybe would make sense warning want handle input onchange propagate event curious would consider better practice avoid use onchange prop nonform components use stoppropagation thanks thoughts", "num": "3559", "d": "4/2015"}, {"title": "confuse two children key", "body": "using react mounting two components page already ensure key unique click button one alright click button two one crop two make confuse console show click one button click two button change work properly", "num": "3558", "d": "4/2015"}, {"title": "teardown testutils method", "body": "unittesting module used isomorphic app process writeup mocha consume individually run pretty good far however starting use testutils starts failing account apparently line kicked react clientmode bad need way kick react clientmode add teardown method aka", "num": "3557", "d": "4/2015"}, {"body": "something want requires thought around components rendered currently solution always renders something synchronously example wait returning result anyway tracking", "d": "4/2015"}, {"body": "great see rendering component serverside nodejsexpress using sync method feel right blocking thanks", "d": "4/2015"}, {"body": "reactrendertostring nt io would nt gain anything async current form", "d": "4/2015"}, {"body": "might benefit much async streaming markup generation follow along", "d": "4/2015"}, {"body": "thanks following", "d": "4/2015"}, {"body": "posted irc explained likely happening react renders multiple text parts wrapped span tags browser recognizes invalid html strips confusing react goes rerender guess nt wrap text span single piece guess makes intended behaviour surprising nevertheless perhaps error message updated give hint towards specific cause already mentions browser adding tbody first come across error", "d": "4/2015"}, {"body": "would say clearly bug anything passes initial render pass update render thanks flagging us", "d": "4/2015"}, {"body": "bug issue", "d": "4/2015"}, {"body": "closing favor also get explicit warning master", "d": "4/2015"}, {"body": "currently supported available without custom react build sorry", "d": "4/2015"}, {"body": "experimented came another repro one click button native click handler causes button go away input field rendered results exception repros seems something strange going calling within native click handler", "d": "4/2015"}, {"body": "works add event handler", "d": "4/2015"}, {"body": "thanks workaround behavior without design looks like bad behavior caused rerender happening synchronously within native click handler", "d": "4/2015"}, {"body": "get nt seem work element nt page rendering works expected suppose fluke program ran correctly safari though requirement nt documented anywhere appending document commented commit guess bigger issue method misnomer nt actually render document certainly fooled", "d": "4/2015"}, {"body": "cc gaearon iamdustan came twitter discussion possible way start migrating requiring single addon condoned way without reaching directly nt screw packaging", "d": "4/2015"}, {"body": "would greatly appreciated", "d": "4/2015"}, {"body": "sounds like good plan", "d": "4/2015"}, {"body": "zpao spicyj update docs change well", "d": "4/2015"}, {"body": "please", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "cc petehunt also wants gone", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "know entirely anecdotal story long ever considered joining react team friend recommend react framework check particular friend recommends check half dozen different librarieslanguages week nt particularly strong endorsement enough get open web page level duediligence one recommendations generally read homepage toollibrarylanguage maybe poke around example code see would look like insert mental index know exists ifwhen need call upon terminology foreign virtual dom jsx reactive data flow elements vs components file away nt really understand trying accomplish category things try solve problems experiencing saw sentence lots people use react v mvc suddenly clicked knew mvc understood react meant ui meant could define models controllers using tools could use react render view application critical point decided click download button needless say huge fan react anyway fully understand react understand sentence arguably bit misleading also see succinctly communicates react actually terms familiar", "d": "4/2015"}, {"body": "think would prudent add ditch mc althoughter instead implies react used also view frameworks succinct", "d": "4/2015"}, {"body": "something like since react makes assumptions rest technology stack easy try small feature existing project lots people start using react v mvc later realize might need c anymore", "d": "4/2015"}, {"body": "oh wait ryanflorence already said better missed initial comment", "d": "4/2015"}, {"body": "jimfb really succinctly said found really helpful line terse clear used analogy already understood well sure technically misleading already understand react found really helpful newcomer point tag line people nt know react likely know views mvc", "d": "4/2015"}, {"body": "kind ambivalent like phrased way keeps original ui meaning also suggests react better without mc baggage", "d": "4/2015"}, {"body": "thanks report keeps coming know sebmarkbage reluctant probably add hard error createelement", "d": "4/2015"}, {"body": "danschumann seen console warning though", "d": "4/2015"}, {"body": "would agree debugging error day error message read like issue ended forgot forward slash element still looking classes try debug issue see example", "d": "4/2015"}, {"body": "agnosticdev thanks looks like babel gives better error reassuring probably going end improving reacttools parser start recommend babel hopefully help transformrelated errors", "d": "4/2015"}, {"body": "spicyj thank recommendation", "d": "4/2015"}, {"body": "thanks bug report think probably looking react native repository located post issue repository think better able handle bug report repository actually tracking reactcore webversion react since issue probably nt related reactcore think makes sense close issue repository encourage post reactnative cc zpao spicyj case something jumps related reacttools npm bundling", "d": "4/2015"}, {"body": "bad delete", "d": "4/2015"}, {"body": "made change jsx parsing fix somewhat ambiguous cases around documented changelog also link npm package distributed find update places would issue case probably use full arrow really want keep ascii arrows", "d": "4/2015"}, {"body": "fast version seems creates contain text numbers nothing slow version additionally elements visible still dom logic functioning complicated surprised speed fun thing try speed test real world app would use", "d": "4/2015"}, {"body": "speed test looked test beat react unnecessary hidden inputs weird test agree would nt real project curious react got much slower inputs still little curious hidden element larger impact jsblocks", "d": "4/2015"}, {"body": "inputs somewhat complicated logic handle user interactions making sure state changes handled correctly unfortunately means probably code running using jsblocks probably could bit optimization inputs nt much setup user handling would interesting though sure valuable would actually typical cases handful inputs hidden inputs pretty contrived use case", "d": "4/2015"}, {"body": "really nt think necessary time could see applicable really large table needs inline editing even think could easily even render inputs render click pretty easily thanks info though cleared things", "d": "4/2015"}, {"body": "expected see", "d": "4/2015"}, {"body": "already documented along reasoning several alternatives say use unicode version quite simple already using hexadecimal version html character references may pad code leading zeros necessary course", "d": "4/2015"}, {"body": "string reason jsx compiler parses html entities react nt use unicode character instead", "d": "4/2015"}, {"body": "implies perfectly safe update state diverge state encoded initial server side html representation replace thissetnow settimeout thissetnow fixes things seems like nasty hack yeah code seems fine react able reuse markup work react emit warning still work suboptimally works defer update seem indicate react something wrong would say might related sure prcommit relevant though cc spicyj", "d": "4/2015"}, {"body": "example works fine mikecardwell chance get repro jsbin", "d": "4/2015"}, {"body": "probably mentioned earlier actually building entire document using react part body made difficult get example jsbin using external js file however put couple examples hosting realise nt convenient hope still useful html urls identical difference browserjs referenced inside working use settimeout thisupdatenow instead thisupdatenow", "d": "4/2015"}, {"body": "thanks example looks like happens fullpage rendering try rerun reactrender tag body nt parsed yet react ca nt find goes update think best us support pattern recommend call reactrender script tag end body dom ready maybe give warning", "d": "4/2015"}, {"body": "ahhh thanks sure missed", "d": "4/2015"}, {"body": "ran example react datareactid looks like browser version react using create jsfiddle demonstrates issue", "d": "4/2015"}, {"body": "means somewhere code everything goes stringified primitives edit least ps also definitely right code snippet looking id", "d": "4/2015"}, {"body": "syranide right thanks", "d": "4/2015"}, {"body": "react wo nt work manipulating dom works simple cases like adding something react leaf nodes moderately complex case like described work design instead change drag drop code manipulate data dom use react rerender dom wrote drag drop library might want check", "d": "4/2015"}, {"body": "gaearon said react never reads dom mutating reactrendered dom outside react nt supported", "d": "4/2015"}, {"body": "chieforz would recommend exploring flexbox property might work well since nt physically move nodes", "d": "4/2015"}, {"body": "getmarkupwrap already meant handle cases unfortunately looks like nt list since nt want add one time need alternative way deal", "d": "4/2015"}, {"body": "sounds great adapted solution use think could solution problem passing future root node check root node element instance way nt hardcode svg tags ca nt share test case using working nodes throwing think something like could prworthy solution react", "d": "4/2015"}, {"body": "mutexjp started empty table added already one added browser mutexjp browser add one immediately", "d": "4/2015"}, {"body": "case like mentioned irc starting existing table empty tbody like col", "d": "4/2015"}, {"body": "render replace replace children rendering end", "d": "4/2015"}, {"body": "reactrender documentation states contents container node case gets replaced note reactrender replaces contents container node pass future may possible insert component existing dom node without overwriting existing children somehow case element", "d": "4/2015"}, {"body": "docs correct container node case html react remove changes contents contents case another end", "d": "4/2015"}, {"body": "yeah unfortunately way manage tbody react reasons already mentioned", "d": "4/2015"}, {"body": "two tbodies actually completely valid point troll anything though true", "d": "4/2015"}, {"body": "stonecypher true nt help", "d": "4/2015"}, {"body": "cody spicyj thank much responses guess part problem misinterpretation docs indeed thought container node would replaced either way know manage tbody react take different approach thanks", "d": "4/2015"}, {"body": "currently rendering two different components different types test mess", "d": "4/2015"}, {"body": "cc graue", "d": "4/2015"}, {"body": "looks like could use bail reconciling reset", "d": "4/2015"}, {"body": "record works better js var shouldupdatereactcomponent require shouldupdatereactcomponent reactshallowrendererprototyperender function element context var transaction reactupdatesreactreconciletransactiongetpooled thisrender element transaction context reactupdatesreactreconciletransactionrelease transaction return thisinstancegetpublicinstance reactshallowrendererprototypeunmount function thisinstance thisinstanceunmountcomponent thisinstance null reactshallowrendererprototyperender function element transaction context var prevelement thiselement thisinstance amp amp shouldupdatereactcomponent prevelement element thisunmount thisinstance var rootid reactinstancehandlescreatereactrootid var instance new shallowcomponentwrapper elementtype instanceconstruct element else thisinstancereceivecomponent element transaction context thiselement element prepare pr agree changes", "d": "4/2015"}, {"body": "gaearon said already supposed supported thinking behavior test maybe support suggested way well approach testing updates help", "d": "4/2015"}, {"body": "oh see nt understand example first guess could use approach still prefer consistency react method also going really need logic related thing going test", "d": "4/2015"}, {"body": "would cause reactjsorg canonical site react may want since nt control domain", "d": "4/2015"}, {"body": "nt look like automatically redirect facebookgithubioreact ex fine", "d": "4/2015"}, {"body": "nt want canonical link still plans eventually make reactjscom thing content nt work ghpages redirect would fine could update get guess need different ghpage project", "d": "4/2015"}, {"body": "checked bunch org pages nt cause github version redirect would purely additive", "d": "4/2015"}, {"body": "cc syranide resident event expert days", "d": "4/2015"}, {"body": "jsfb haha familiar events actually anyway kind related value meant go available elsewhere event would obviously easy normalize doubt makes unlikely canwant fragile etc etc generally speaking though never need access react curious need", "d": "4/2015"}, {"body": "related separate since done browser failed implement relatedtarget react exposing relatedtarget implemented browser fix bug probably simple change using focusin wherever supported instead using addeventlistener nt supported ie flip order make use relatedtarget gone extra effort make navigation respond keyboard based waiaria recommendations keyboard function relatedtarget relevant form close blur functionality navigating keyboard menu items given focus one time focus leaves menu user tabbed clicked somewhere else taken action moved focus menu menu closes form delegated blur event required trying tell focus left region rather single form field longer focused fires every single blur event within region relatedtarget necessary tell difference user moving one menu item another focus leaving menu bonus focus menu container user normally opened menu click get free way automatically close menu user clicks somewhere else type menu closing actually lot less hack methods like trapping clicks body covering page transparent overlay etc", "d": "4/2015"}, {"body": "nice find use version interested creating pr update", "d": "4/2015"}, {"body": "zpao yes looking think attempt unify would like create pr soon", "d": "4/2015"}, {"body": "suggesting make syntax highlighting output markdown example", "d": "4/2015"}, {"body": "zpao yeah since already implemented page snippets great output results markdown example syntax highlighting", "d": "4/2015"}, {"body": "going simple markdown example mechanism highlighting docs vastly different", "d": "4/2015"}, {"body": "kind annoying yea might need something like compilers dependency binary npm module one dependencies depends even contextify nt call need g install node npm via install well seems like since requirement many modules", "d": "4/2015"}, {"body": "used recommended approach debian ubuntu based distributions part installation see point contextify setup windows even complicated", "d": "4/2015"}, {"body": "return instead work", "d": "4/2015"}, {"body": "nt realize option wonderful thanks always", "d": "4/2015"}, {"body": "thought talked guess maybe release notes briefly docs work support pattern", "d": "4/2015"}, {"body": "help maintain unofficial type definitions might find useful usage examples test files", "d": "4/2015"}, {"body": "nt plan maintain ts definitions use ones vsiao linked things typescriptcompatible let us know already able use typescript classes react components like class", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "issue typescript repo might interested", "d": "4/2015"}, {"body": "list reactjs ones see checktrack x x x x x note zpao deduped made links", "d": "4/2015"}, {"body": "nonreactjs fiddles locations x fiddle wrong owned reactjs might worth forking reactjs account", "d": "4/2015"}, {"body": "copy updated ones already updated thinking react docs page broken anyway one http docs works update edit already docs loading version fiddle also broken anyway might fiddle integration script works might better link http nt might best link instead embedding", "d": "4/2015"}, {"body": "super easily unfortunately break warning debugger able see objects involved perhaps even problematic render function looking stack", "d": "4/2015"}, {"body": "best include context always easy", "d": "4/2015"}, {"body": "look owner one", "d": "4/2015"}, {"body": "thread owner flattenchildren nt easiest already warn element creation time though cases", "d": "4/2015"}, {"body": "think feature android browsers unrelated react see", "d": "4/2015"}, {"body": "ended using try catch like", "d": "4/2015"}, {"body": "glad figured nt reactspecific error throw component bubbles rendertostaticmarkup however handle errors app", "d": "4/2015"}, {"body": "use work handling event capture phase things may slightly different nt add event listeners directly element article good read browsers improved years still generally good idea especially library used build large applications", "d": "4/2015"}, {"body": "onclickcapture work either guess way propagation cancelled ok looks like bind event manually solution", "d": "4/2015"}, {"body": "jsfb take look past context changes", "d": "4/2015"}, {"body": "probably add logic validatedangeroustag inside reactdomcomponentjs already runs per tag note runs dev prod mode safety new check probably wrapped", "d": "4/2015"}, {"body": "default props already merged componentwillreceiveprops called", "d": "4/2015"}, {"body": "default props already merged componentwillreceiveprops called far tell never called using class syntax", "d": "4/2015"}, {"body": "correct instead write js class control extends reactcomponent componentwillreceiveprops props something props controldefaultprops value work", "d": "4/2015"}, {"body": "ahh sorry see documentation thanks", "d": "4/2015"}, {"body": "yes simulate click event dispatch ie run react handler wo nt actually perform default behavior", "d": "4/2015"}, {"body": "flag set wo nt run see", "d": "4/2015"}, {"body": "probably want make sure environment variable set disables lot debugging slow react including reactperf stuff setting noop return function passed", "d": "4/2015"}, {"body": "probably want make sure environment variable nodeenv set production yea thing production sort sledgehammer case since also turn debug settings bunch libraries using well reactperf flag thanks tip check global object", "d": "4/2015"}, {"body": "tip use webpack use importsloader inject var specific module", "d": "4/2015"}, {"body": "setting seems effect still thing rendering large number elements sucking overall processing power required render", "d": "4/2015"}, {"body": "intent using react development mode recommendation would fork version react using modify functions reactperfjs always noops use fork performance testing aware many checks react slow performance development mode may skew results going close issue nt look like anything concrete react differently feel free continue discussing", "d": "4/2015"}, {"body": "tjwebb depending build react using gets compiled global replace setting would effect need enabledisable dev part build process compiling react", "d": "4/2015"}, {"body": "also unlikely reactperf causing perf problems disabled measurement disabled calls wrapped function directly barely overhead seeing hot spot may artifact profiling tools", "d": "4/2015"}, {"body": "component nt actually mount server use instead hook things way mixins acting lifecycle called server", "d": "4/2015"}, {"body": "nt work need initialize things client server example reactbacon initializes event streams need work client server cleanup also needs happen server", "d": "4/2015"}, {"body": "decision call componentwillunmount server side intentional ca nt call componentwillunmount server side indicates time component cleanup shutdown calling would mean components get cleanedup ever get sent client obviously wrong moment components attempt detect runtime environment presence lack thereof particular features thereby differentiating serverbrowser environments work feature detection fragile prone breaking eventually may provide way users build isomorphic components severside clientside environment allowing components aware local environment features available environment still early discussionidea phase issues tracking ideas area including ideally components get renderable data directly parent instead sideloading data eliminates vast majority cases would otherwise inclined open resources server side following simpledatafromparent model also makes code much easier reason since current solutions runtime detection reorganize app get renderable data parent since issues tracking request going close issue feel free continue conversation", "d": "4/2015"}, {"body": "jsfb thanks reply problem considering singular component existing sever client ca nt call componentwillunmount server side indicates time component cleanup shutdown calling would mean components get cleanedup ever get sent client obviously wrong component actually move server client would need provide clean serialization mechanism would allow serveronly resources cleaned something would satisfactorily solve issue otherwise attempting abstract component server amp client way leaky abstraction cause writing issue regarding implies root node orchestrating entire state application ideal nontrivial systems hard make case coupling seems offer little expressive power flexibility additional step component lifecycle example nt address cleanup provide clean abstraction details callback based promise based stream based asynchronous programming see comments bring thread sounds promising could make many things simpler us using react rfp dataflow controlflow models might something coming line possibly forked react might interested going route nt address problem directly runs counter key notions symmetry isomorphism", "d": "4/2015"}, {"body": "think thing affects performance", "d": "4/2015"}, {"body": "nice find chenglou added support perhaps wants look", "d": "4/2015"}, {"body": "looking little bit perhaps nt know talking issue seems case gets prevelement empty element nextelement null sent returns false elements null thus making element unmount mount sure yet normalization emptyelement happen though anyway saying really basic stuff always fun dig react internals learning works", "d": "4/2015"}, {"body": "dupe think", "d": "4/2015"}, {"body": "bit information classes bottom reusable components", "d": "4/2015"}, {"body": "thanks agnosticdev still need fullblown example methods use think", "d": "4/2015"}, {"body": "yeah would really helpful", "d": "4/2015"}, {"body": "ah added notes component api section eg note replacestate nt work lifecycle methods", "d": "4/2015"}, {"body": "fixed removes warning entirely part switch parent context", "d": "4/2015"}, {"body": "going leave open case want patch release", "d": "4/2015"}, {"body": "wo nt take would need something different", "d": "4/2015"}, {"body": "getchildcontext supposed idempotent recalled render phase referential equality might screw warning even though idempotent assuming value semantics", "d": "4/2015"}, {"body": "yes sorry unclear random call demonstrate original case instantiated valuelike object time arguments", "d": "4/2015"}, {"body": "issue one context comes owner hierarchy one comes parent hierarchy value semantics two distinct objects could represent value auxiliary data nt contribute user interpretation value eg one values object might logger something could add hacks attempt smarter definition equality ultimately going futile effort catch everything could also add hack find component provided variable bail component also potential issues might lead warning popping even subtle situations terms prioritization non fatal warning occurs rare cases thus nt seen nt really great solution fix would useful point release code removed entirely intuition unless surprising number users hitting might let people know going teach making code idempotent either way update gist people know going sebmarkbage seem sufficient patch point release", "d": "4/2015"}, {"body": "gist updated", "d": "4/2015"}, {"body": "spargonaut form getting submitted event bubbling demo replicating issue help troubleshooting", "d": "4/2015"}, {"body": "pretty sure never undefined point nt really touched code perhaps spicyj sebmarkbage say certainty", "d": "4/2015"}, {"body": "could something else throwing therefore causing undefined point nt good error recovery one error likely subsequent ones like one work error boundaries help could also strange vm bug sometimes found similar errors logs android phones using chrome anything say source errors", "d": "4/2015"}, {"body": "might end meaningless believe done intentionally hand hotspots would seem guess one could argue might make sense simply always use inline style drop argument rather adding another transform", "d": "4/2015"}, {"body": "guess one could argue might make sense simply always use inline style drop argument rather adding another transform tough sentence parse saying always write optimized form would say first way easier read human", "d": "4/2015"}, {"body": "consider something like decorator since jsx transformed anyways invariant feels like contract codes could readable separate warning real implementation thoughts", "d": "4/2015"}, {"body": "complex invariants nt strictly arguments might option cases nt cover us", "d": "4/2015"}, {"body": "could related", "d": "4/2015"}, {"body": "yeah issue works correctly master long keep tab focused background tab run though", "d": "4/2015"}, {"body": "would use webpack bannerplugin build tools likely similar plugins advantage full control text message", "d": "4/2015"}, {"body": "bad idea however probably going add features reacttools point would suggest giving babel look", "d": "4/2015"}, {"body": "clear building views plugin nt control runtime development mode", "d": "4/2015"}, {"body": "cc bolinfest guys done anything work around sounds like something possible force atom francoislaberge really sure would work especially since prod build actually strips friendly messages entirely npm package basically atom using already build step makes possible get dev prod build switching think actually may misunderstood might way make installing react using one ships atom still", "d": "4/2015"}, {"body": "zpao installing react one access within react get access", "d": "4/2015"}, {"body": "give precompiled dev build one ship cdns prebuilt files well using anything make sure always use otherwise hit problems multiple reacts using party components wo nt interact well reason multiple reacts", "d": "4/2015"}, {"body": "zpao hmmm yeah going get messy quickly reusing thirdparty components much thanks info though", "d": "4/2015"}, {"body": "think known issue shallow rendering cc jsfb graue", "d": "4/2015"}, {"body": "matthewgertner thanks report context nt meant supported shallow rendering ie nt tested looks like may able work around problem passing object second argument jsfb looks like additional argument added shallow rendering api thinking default empty object", "d": "4/2015"}, {"body": "thanks graue workaround works great see posted fix well looking forward", "d": "4/2015"}, {"body": "agree zpao answer", "d": "4/2015"}, {"body": "yea stand response crux argument language already supports constructs use language jsx supposed simple really nt want people learn new language use reactjsx answer loop jsx way loop js", "d": "4/2015"}, {"body": "think want basically enum", "d": "4/2015"}, {"body": "oh darn thanks", "d": "4/2015"}, {"body": "problem first one willing bet wo nt last", "d": "4/2015"}, {"body": "proptypes functions call manually verify props could always iterate props manually call proptype function verify type", "d": "4/2015"}, {"body": "much true really super useful joshfrench believe get warning receiving new props actually running validations creating new element use update instance prior rendering props immutable warn mutations get talked bit launched precisely validation important lots places happen nt updated yet would encourage otherwise nt think going expose anything check proptypes given point", "d": "4/2015"}, {"body": "makes sense needed nudge obvious direction question less props mutated fact implementing stricter validation warning eg rendering know ahead time component passed invalid props upstream data source thanks", "d": "4/2015"}, {"body": "discussion already", "d": "4/2015"}, {"body": "hmm trycatch expectation throwing sham environment catch simply nt frozen props nt production sure exactly hitting", "d": "4/2015"}, {"body": "yeah see sorry hard get handle app working spent day stripping starting absolute nothing see happening run nt envproduction ie reports exception thrown caught hangs stupid popup message box screen unless fully disable debugging error reporting browser completely really fault know really sucks libraries like reactrouter also die actually even manage route app see absolutely nothing browser environment fault router setting properties calling define properties directly check environment seems fall shim could befit knowing env production shim maybe passing better value rather throwing react something really deal cheers", "d": "4/2015"}, {"body": "codeuniquely sounds like saying development sucks nt much correct action item end close one think still react bug", "d": "4/2015"}, {"body": "much close apr jim notifications githubcom wrote codeuniquely sounds like saying development sucks nt much correct action item end close one reply email directly view github email scanned netintelligence", "d": "4/2015"}, {"body": "seems work assigned object prototype class really surprising values probably part component state instead", "d": "4/2015"}, {"body": "js works objects effectively always passed reference would see thing use typical js protoypes explicitly nt clone everything object pass us becomes pretty unscalable solution autobind functions create new functions instance due binding felix said probably use state since returning new object function nt reference issue", "d": "4/2015"}, {"body": "make sure unintentionally running debug mode performance regression debug version react", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "looked fiddle problem comes inside another allowed", "d": "4/2015"}, {"body": "ah crap absolutely correct feel officially stupid close", "d": "4/2015"}, {"body": "warning", "d": "4/2015"}, {"body": "supposed checking setstate sure best fix sebmarkbage seems like could look see internal instance instance reactcompositecomponent", "d": "4/2015"}, {"body": "fixed seems like docs rebuild since", "d": "4/2015"}, {"body": "updated nobody put right labels pr make sure got cherrypicked done though might take minutes caches clear page work properly", "d": "4/2015"}, {"body": "oversight aligned jsxtransformer use code reacttools opposed duplicating efforts slight variation originally changed reacttools last year made jsxtransformer use reacttools nt notice bit postprocessing reacttools add bit changelog", "d": "4/2015"}, {"body": "make sense suspect copy react modified probably search replace mistake", "d": "4/2015"}, {"body": "yeah nt react sure got code search key config see built copy well", "d": "4/2015"}, {"body": "repro would great materialize perhaps modifying dom kind sounds like big nono may update styles props react managed nodes without errors clonedreplacedmoved invariant error waiting happen", "d": "4/2015"}, {"body": "think guilty materialize creates fake select see demo", "d": "4/2015"}, {"body": "lot dom mutation happening use materialize custom component guess face similar problems components maybe materialui suitable requirements", "d": "4/2015"}, {"body": "thank guys bloodyowl right forgotten could issue charca yes know materialui tried materialize felt mature features nt real issue", "d": "4/2015"}, {"body": "actual react bug closing fact materialize modifying dom means probably going tricky time things probably want build wrapper components make things work better good luck", "d": "4/2015"}, {"body": "yes actually answers helped thanks", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "yaycmyk said work", "d": "4/2015"}, {"body": "ah works thanks wish example documented somewhere along jest testutils", "d": "4/2015"}, {"body": "put work ie zpao yet another reason drop optimistic traversal ask perhaps something like", "d": "4/2015"}, {"body": "syranide master warning least", "d": "4/2015"}, {"body": "spicyj fantastic", "d": "4/2015"}, {"body": "thanks help easy fix would probably never found think warning sort including table maybe somewhere documentation nt noticed", "d": "4/2015"}, {"body": "rudmanmario meant comment sorry unclear next release warn explicitly suggest adding tbody tag", "d": "4/2015"}, {"body": "logged administrator privileges", "d": "4/2015"}, {"body": "looks like permissions error nt run anything install nt think anything anything else sounds like issue take npm", "d": "4/2015"}, {"body": "successfully installed using administrator use windows accounts failure ths guys", "d": "4/2015"}, {"body": "cc syranide salier need special case amp listen different event", "d": "4/2015"}, {"body": "cc spicyj think", "d": "4/2015"}, {"body": "event objects pooled use preserve object agree documented though", "d": "4/2015"}, {"body": "ah interesting nt know", "d": "4/2015"}, {"body": "surprised plus curious motivation", "d": "4/2015"}, {"body": "think motivation performance expensive create lots short lived objects puts lots pressure javascript garbage collector onclick would nt big deal mousemove event could fire often said issue keeps coming surprisingconfusing part framework lots people spend lots time debugging issue realize problem might make sense consider changing cc zpao spicyj yes document going keep behavior", "d": "4/2015"}, {"body": "jsfb", "d": "4/2015"}, {"body": "drag drop events normalized react moment", "d": "4/2015"}, {"body": "react seems inconsistently unintentionally normalizing dnd events certain browsers", "d": "4/2015"}, {"body": "entire implementation extends syntheticmouseevent normalized though currently normalized", "d": "4/2015"}, {"body": "classes need defaultprops static property navigationdefaultprops", "d": "4/2015"}, {"body": "thanks maybe update documentation iamdustan happy send pr", "d": "4/2015"}, {"body": "commentary docs agree like see better docs class syntax guy happened see issue really quickly", "d": "4/2015"}, {"body": "reference might good also put documentation make bit easier find going close since invalid love see pr docs", "d": "4/2015"}, {"body": "think also seen runtime warning", "d": "4/2015"}, {"body": "spicyj really though", "d": "4/2015"}, {"body": "tjwudi thanks looks like oversight fix", "d": "4/2015"}, {"body": "seems like bad practice exposing internals general advance afaik create stateless components provide stateful wrapper components may preferable even interested stateful components separates logic presentation", "d": "4/2015"}, {"body": "actual issue closing feel free discuss ideally mailing list", "d": "4/2015"}, {"body": "andrerpena yeah agree syranide sounds like bad practice design use react code mutable autocompletestate object created amp held controllercomponent pass autocomplete component autocomplete component free manipulate state object api state object expose state autocomplete desires expose way state still held controllercomponent internal state also opaque controller single variable instead whole mess internal variables controller nt knowcare personally note nt opinion react teamcommunity large extremist view think components either purely statelogic user interface behave like controller purely render functions stateless view data always pull component internal state mutable object keep controller component single internalstate variable subcomponent avoid long chains callbacks variablesidontcareabout model syranide mentioned turns particularly good examples like one highlighted means controller easily read value text component public api component state variable rather responding callbacks set variable controller remembers value parent never needs reference child component never needs respond nightmarish hell callback chains also gives parent easy way resetting child component throw away internalstate object create new one something easily achievable children state course still plenty use cases warrant callbacks individual props use goodengineeringdiscretion nt go crazy singlevariable idea generally anything parent likely controledit separate anything internal component state", "d": "4/2015"}, {"body": "jsfb quick sidequestion guys good component naming convention pattern", "d": "4/2015"}, {"body": "usually try pick name makes sense component building biggest recommendation give given component eg give class defines components state name combines component name word eg generally use word container describe controller holds ui components common community mostly word internally facebook", "d": "4/2015"}, {"body": "help", "d": "4/2015"}, {"body": "nt seem intentional also ca nt repro master track fixed might worth backporting cc sebmarkbage spicyj", "d": "4/2015"}, {"body": "might something binding used effectively call bound function however switched calling bound function however calling native bind construct operation invoked call function problem still work production build polyfill overrides", "d": "4/2015"}, {"body": "actually particular issue probably related might secondary issues pattern", "d": "4/2015"}, {"body": "posterity never ever js render function var tmpl reactcreateclass render function return thispropsdata creating new class every render slow nt reconcile", "d": "4/2015"}, {"body": "clear instead js var template reactcreateclass render function return thispropsdata var app reactcreateclass render function return", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "specific expect happen happened instead", "d": "4/2015"}, {"body": "probably want even script probably wo nt execute browsers wo nt execute scripts innerhtmled", "d": "4/2015"}, {"body": "sweet would work etc browser nt supposed read anyways grab later componentdidmount compile shaders ironically ended using template strings outside jsx ends syntax highlight vim even better", "d": "4/2015"}, {"body": "nt objection bumping limit number millions could probably get rid check", "d": "4/2015"}, {"body": "think new way things probably update existing examples feel free submit pull request cc sebmarkbage zpao", "d": "4/2015"}, {"body": "ready recommend classes newcomers see details", "d": "4/2015"}, {"body": "spicyj right clarify blockers want switch imo property initializers reaches stable polyfill recommend observe pattern released primary recommendation flux stores mixins publish article describing alternatives mixins popular libraries might want use moves away mixins", "d": "4/2015"}, {"body": "agree ready newcomers updating tutorial examples let stick plan thanks guys", "d": "4/2015"}, {"body": "going close likely forget ever update even update docs wo nt forget come back actually making change ready though", "d": "4/2015"}, {"body": "seems unlikely post repro case", "d": "4/2015"}, {"body": "oops never mind inside iterator function nt component passing third argument using arrow function instead solve problem", "d": "4/2015"}, {"body": "spicyj oh man sorry noise total noob mistake think got result normally get undefined function error similar resulted attribute missing think stopped looking code altogether focused see scope resulted hardly different binding wonder though react could anything produce better error case example let consider object perhaps simple validation whereby onchange attributes attributesonchange warning could produced least thanks", "d": "4/2015"}, {"body": "yeah talked unfortunate nt think going change anything sort thing static type system like flow able catch though", "d": "4/2015"}, {"body": "ah see case made enabledisable thanks", "d": "4/2015"}, {"body": "based threads around internet seems thing presumably found things along reload sysctlconf nt know much else except maybe gracefully handle error really problem commoner since jsx command really wrapper amp applying transform would mind filing posterity", "d": "4/2015"}, {"body": "thanks feedback zpao research error means disk space available clearing work back normally", "d": "4/2015"}, {"body": "need assuming use jsx createelement", "d": "4/2015"}, {"body": "get", "d": "4/2015"}, {"body": "shipit", "d": "4/2015"}, {"body": "zpao missing would lovely fixed", "d": "4/2015"}, {"body": "like see fix", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "perhaps mixed works", "d": "4/2015"}, {"body": "spicyj modified css make container class css selector sorry leaving furthermore demo posted nt work resize window divs right next", "d": "4/2015"}, {"body": "see subtle difference html whitespace adjacent elements jsx whitespace removed two tags different lines usually want add back explicitly writing", "d": "4/2015"}, {"body": "spicyj ah thanks tip", "d": "4/2015"}, {"body": "think things actually using reactproptransferer iirc avoided possible already noted deprecated favor spread props cloneelement respectively something trying ca nt use use", "d": "4/2015"}, {"body": "cc vjeux hopefully thought encountered", "d": "4/2015"}, {"body": "zpao take look using familiarity seeing react native core code use", "d": "4/2015"}, {"body": "cloneelement takes magic might require little bit work trying get away magic see bit", "d": "4/2015"}, {"body": "kassens could help reproduce bug prepared example click item list start animation seconds additionally output debug info console clearly shows also warning takes place seconds timeout violated triggered function executes seems child unmounted transition progress design please correct wrong", "d": "4/2015"}, {"body": "dom ssr add kind abstraction test dom present", "d": "4/2015"}, {"body": "way pass data parent component serverside state variable parent component needs set order page generated properly hence reason need happen serverside client", "d": "4/2015"}, {"body": "parents children still communicate normal way callbacks need right places lifecycle methods including wo nt called server side fact relying child information seems imply need know something child layoutsizeetc blocking issue going relying browser figure component layoutsize information wo nt available server side nt browser exception thrown within react thrown within react sounds like might bug provide piece example code crashes", "d": "4/2015"}, {"body": "well use case creating breadcrumbs using reactrouter layout component rendering breadcrumbs dont know breadcrumbs page components child component layout component created", "d": "4/2015"}, {"body": "already deleted code implemented workaround code originally looked something like reactrouter layout page components home etc call breadcrumbcallback something wrong", "d": "4/2015"}, {"body": "think use figure breadcrumbs parent container reactrouter breadcrumbs", "d": "4/2015"}, {"body": "yeah thats actually workaround using right correct wrong still bug react", "d": "4/2015"}, {"body": "single render pass server abstractly pattern nt really make sense server parent already rendered effectively trying kick render call function sets state parent seem like nt throw bad way though bet blame sebmarkbage changes made state queue", "d": "4/2015"}, {"body": "bishtawi convinced bug react ssr think bunch reasons want enforce singlepass rendering nothing else keeps open possibility streaming output client ca nt think good reason child pass kind information back parent use case sounds like antipattern maybe bug error message nt best behavior probably correct going close issue feel free continue discussion", "d": "4/2015"}, {"body": "determined callbacks parents life cycle methods typically antipattern actually opens lot strange timing issues example ref resolution order changed refs parent resolved child componentdidmount called jsfb ca nt proclaim antipattern without providing alternative solution also fix error message nt want support", "d": "4/2015"}, {"body": "sebmarkbage thought tmbtech provide alternate solution start handling layout internally instead deferring browser intuition nt want support fixing error message makes sense maybe newdifferent issue", "d": "4/2015"}, {"body": "alternative solution presented makes use something specific reactrouter", "d": "4/2015"}, {"body": "well general solution parent whatever calculation child possibly calling shared library outside layout parent information child since child presumably got parent reactrouter case shared codedata solution general solution", "d": "4/2015"}, {"body": "one neat way static method child call rendering forward call deeper needs neither solutions solve case parent child vastly detached passing info intermediate abstractions prohibitive exact problem layout prerender suppose solve", "d": "4/2015"}, {"body": "case think factory already component class name add breakpoint warning line look stack see exact code path caused", "d": "4/2015"}, {"body": "spicyj actually tried nt figure access property side objects", "d": "4/2015"}, {"body": "look stack trace one frames application code accessing", "d": "4/2015"}, {"body": "spicyj mean component called alright strange thx anyway", "d": "4/2015"}, {"body": "related", "d": "4/2015"}, {"body": "thanks syranide sure escaped notice", "d": "4/2015"}, {"body": "advocate software patent reform affects validity facebook patents activate termination clause patent grant potential likely legal consequences activating termination clause patent grant", "d": "4/2015"}, {"body": "jokeyrhyme part team offer", "d": "4/2015"}, {"body": "let keep discussion issue somebody authority comment able", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "something like", "d": "4/2015"}, {"body": "compare angular need performance react convince coworkers change technology", "d": "4/2015"}, {"body": "henricavalcante neither absolutely fastest nt work like meaningful metric construct cases react win hands cases angular wins hands react large tend much manageable applications scale performance usually predictable hotspots mostly easily addressed anecdotally case angular friends tend degrade applications scale becomes hard something regardless first running debug version react significantly slower specific example worstcase react nt see would ever want update items per keypress like", "d": "4/2015"}, {"body": "unfortunately thanks help", "d": "4/2015"}, {"body": "sounds like perhaps explicitly calling controlled component implementations", "d": "4/2015"}, {"body": "yup agreed", "d": "4/2015"}, {"body": "reactdominput wherever else may appear seen wanted make sure guys know code backwards forwards onchange nt called reason", "d": "4/2015"}, {"body": "yeah reactdominput reactdomselect reactdomtextarea maybe linkedvalueutils top head", "d": "4/2015"}, {"body": "cool work thanks", "d": "4/2015"}, {"body": "thought going crazy error checked value watching remove attributes", "d": "4/2015"}, {"body": "cc spicyj sebmarkbage", "d": "4/2015"}, {"body": "idea sebmarkbage", "d": "4/2015"}, {"body": "receiving call every time render called perfectly within guarantees api promise props different previous time function called guaranteed props guarantee function called props change nt need control called component nt work new props return", "d": "4/2015"}, {"body": "guarantee function called props change share example called", "d": "4/2015"}, {"body": "call setstate component componentwillreceiveprops called eg application example componentwillreceiveprops recalled react nt make attempt diff props userdefined components nt know whether changed case props object empty pretty clear oftentimes prop complex object function hard impossible diff call always rerender always parent component rerenders note also behavior may change slightly jsx object nt depend parent props hoisted outside reactcreateclass definition smart compiler write would always rerender though even always hard determine statically", "d": "4/2015"}, {"body": "call always rerender always parent component rerenders think would useful addition docs appreciate explanation spicyj", "d": "4/2015"}, {"body": "agree docs confusing nt use props data stores spicyj explanation makes wonder pattern break future", "d": "4/2015"}, {"body": "cody please rely always called api promise always call function though practice currently getting called may optimize calls function call intelligently less often without notice guarantee called props change", "d": "4/2015"}, {"body": "could outdated javascript environment like phantomjs tried recommended polyfills", "d": "4/2015"}, {"body": "also issue try polyfill pedroteixeira solved problem", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "yea sounds like polyfill issue would explain react undefined laster reopen case", "d": "4/2015"}, {"body": "jsx expression semicolon nt make sense also need prop name checked accessibility probably want change onclick onchange checkbox idhtmlfor linking label please ask questions reactjs ircfreenodenet stackoverflow", "d": "4/2015"}, {"body": "thanks moved stackexchange", "d": "4/2015"}, {"body": "planning add existing helpers test utils right always make helpers util library use", "d": "4/2015"}, {"body": "thanks firlaj able reproduce", "d": "4/2015"}, {"body": "wrong repo", "d": "4/2015"}, {"body": "try passing props super call chrome print live object console react assigns constructed instance right construction addition passing constructor", "d": "4/2015"}, {"body": "sounds like happy take prs fix though surprised fail thought passed one point past", "d": "4/2015"}, {"body": "pretty strange checksum gets added html string manually would nt imagine differs browsers", "d": "4/2015"}, {"body": "take look create pr find makes tests fail", "d": "4/2015"}, {"body": "also caught attention yesterday research around found related issue managed fix failing tests firefox small changes note remaining failing tests also failing safari mac send pr", "d": "4/2015"}, {"body": "oh badso sorry", "d": "4/2015"}, {"body": "problem regexp instance reused works event handler creates new regexp instance oh badso sorry smilecat", "d": "4/2015"}, {"body": "cody thx feel kind stupid", "d": "4/2015"}, {"body": "generally treat warnings nonfatal errors meaning try warn things fixed upon time enumerated known html attributes backpedaling mistake ever since allow lowercase tag ca nt distinguish valid html tag using new tag never heard nt error regards warning variable scope common say would variable scope lowercase name tag clearly nt generate warnings maybe anyway think way handle problem separating tags components interested hearing thoughts", "d": "4/2015"}, {"body": "adding warnings local vars hold reference classes extend reactcomponent cc spicyj jsx var div content usage div makes div react element following jsx var centered class extends reactcomponent content makes usage reactcomponent subclass clear separation two", "d": "4/2015"}, {"body": "yeah could get behind idea curious spicyj says", "d": "4/2015"}, {"body": "could bit expensive though would probably want check unrecognized html tags ie whitelist probably want avoid check production logic would warn starts get little messy", "d": "4/2015"}, {"body": "nothing production part jsx transform step even something ended jsxtransformer fine production anyway definitely interesting might really quite difficult would need track every variable might scope nt think possible transformers really need something like flow understand everything used imagine passing function around renders nt scope module call another module even want capture local scope perfect slow would never defining class actual local scope function could capture couple cases passing component class via props much else imagine customelement called actually wanted render local variable developer came along precalculation assigned something called made sense realizing would affect render nt actually know intended since much state intention outside transform ca nt capture nt think realistic actually", "d": "4/2015"}, {"body": "transforming js done sake keeping short let assume transformed proposing new api show point transform performed sure transformer knows lowercase uppercase lowercase could transform development check first argument react element react component true could show warning seems straightforward wondering missing something obvious way need track variables scope indeed would dirty", "d": "4/2015"}, {"body": "thinking could warn rendered element htmlunknownelement", "d": "4/2015"}, {"body": "spicyj would solve problems beyond warning suppressed noise user actually intended", "d": "4/2015"}, {"body": "looking source code looks attribute added node mounted snippet like reason", "d": "4/2015"}, {"body": "known problem right though nt looked back lately see discussion", "d": "4/2015"}, {"body": "ah see thanks responding", "d": "4/2015"}, {"body": "nt know would related addons sounds like using old jsx transformer check case", "d": "4/2015"}, {"body": "thanks reply using reactify seems recent one else check also mentioned everything seem work ok long stick react without addons maybe also related unable use reactrouter", "d": "4/2015"}, {"body": "look built file similarly", "d": "4/2015"}, {"body": "sorry newbie question sure find processed file using rails browserify reactify idea puts result js files point right place thanks", "d": "4/2015"}, {"body": "look script tag generated html see loaded", "d": "4/2015"}, {"body": "problem indexhtml testjs javascript var commentbox reactcreateclass render function return hello world commentbox reactrender documentgetelementbyid app var commentbox reactcreateclass render function return reactcreateelement div null hello world commentbox reactrender commentbox documentgetelementbyid app gives uncomment upper part js comment lower part works tried taking jsxtransformerjs without addons many configurations without luck", "d": "4/2015"}, {"body": "make sure indeed using correct version react case different strange issues found using wrong version react dependency aware try npm list react make sure one react", "d": "4/2015"}, {"body": "using version test", "d": "4/2015"}, {"body": "yes also sure using version eventually found case dependency one modules using", "d": "4/2015"}, {"body": "using npm plain html javascript file unpacked files react works react", "d": "4/2015"}, {"body": "ivanflorentin shaimo closing sounds like found issue", "d": "4/2015"}, {"body": "ivanflorentin seen warning console pointing", "d": "4/2015"}, {"body": "thanks spicyj changing sugestion gives", "d": "4/2015"}, {"body": "ivanflorentin code works fine make repro case jsbin look happy investigate", "d": "4/2015"}, {"body": "spicyj yes works like fails", "d": "4/2015"}, {"body": "yes need pass element either reactrender", "d": "4/2015"}, {"body": "spicyj thank much works large piece code written works fine guess adjust code thanks fast response", "d": "4/2015"}, {"body": "yes deprecation introduced completely removed see details received console warnings running", "d": "4/2015"}, {"body": "seem happen using reactaddons see issue posted", "d": "4/2015"}, {"body": "possibly trying make element like instead using old jsx transformer either possible", "d": "4/2015"}, {"body": "come irc old reactify version updating reactify fixed issue check deps different reactify version sh npm ls reactify good reactify bad reactsomething reactify reactify", "d": "4/2015"}, {"body": "mine looks good still getting issue use reactaddons instead react", "d": "4/2015"}, {"body": "shaimo looking line", "d": "4/2015"}, {"body": "main js file require jsx files build browserify changed approach resolves issue", "d": "4/2015"}, {"body": "spicyj looks clean", "d": "4/2015"}, {"body": "either post example project shows issue", "d": "4/2015"}, {"body": "spicyj sure making ajax call fetch data db display make searchable var react require react var bootstrap require reactbootstrap var xhr require superagent var listgroup bootstraplistgroup var listgroupitem bootstraplistgroupitem var input bootstrapinput var panel bootstrappanel var polls var view reactcreateclass getinitialstate function return selectedpoll query componentdidmount function var self xhrget polls end function err res err consolelog err else consolelog res polls resbody selfismounted consolelog resbody uuid selfsetstate selectedpoll resbody query onchange function value var result polls map function val valuuidtolowercase indexof value valquestiontexttolowercase indexof value resultpush val thissetstate query value selectedpoll result render function return var searchbar reactcreateclass dosearch function e thispropschange etargetvaluetolowercase render function return var polllist reactcreateclass select function consolelog selected render function var arr var self thispropsdata thispropsdatamap function value var head valueuuid var body valuequestiontext arrpush head body arrpush return arr arr var pollview reactcreateclass render function return yo moduleexports view mainjs file used source browserify build var react require react var view reactcreatefactory require appjsx reactrender view documentgetelementbyid bodycontainer", "d": "4/2015"}, {"body": "oh yes createfactory required case since using jsx instead custom components start capital letter would work", "d": "4/2015"}, {"body": "get error", "d": "4/2015"}, {"body": "really hard say sure without info one thing jumps ajax calling result possible component unmounted though would throw error think warning returning clearing requests suggested way handling error suggesting using though could reduce something reproducible sharable would helpful", "d": "4/2015"}, {"body": "think point likely current plan sunset reacttools make jstransform standalone way transform code babel whatever tool want supports jsx see given jstransform jsx transform nt really make sense default files fwiw never really advocated using files use open source projects follow convention people actually may match think transpiling js becomes commonplace makes sense use", "d": "4/2015"}, {"body": "jsx source code calling files js nt make lot sense transpiled javascript storing result files ending js certainly makes sense saving jsx js extension makes much sense saving coffeescript java source code js transpile javascript rather actually javascript neither cli utility getting sunsetted issue closed soon irrelevant", "d": "4/2015"}, {"body": "basically think potential experimental extensions javascript new language flowtype another one experimental syntax extension nt need whole new language support could argue annotated extension nt make sense combine long list file extensions every new experimental version language designed coexist extensions existing language compatible way fact might maybe one day part call javascript fact differentiates java coffeescript none features new language unlike typescript subsetsuperset javascript really new language", "d": "4/2015"}, {"body": "annotation would indeed quite silly point seems weird acknowledge jsx fact new language mostly javascript processing mostly java important part things js ca nt ever spec published even draft even intends add xml syntax rich object notation making sure people understand file going runnable js engine without conversion step seeing extension indicate content type seems pretty much common sense", "d": "4/2015"}, {"body": "making sure people understand file going runnable js engine without conversion step argument currently applies many features early adopter code might even work future engines flow types another example syntax extension nt active proposal talks potentially standardized form jsx actively pursued right definitely see form jsx standardized future since solves real use case template literals nt perhaps current form form also code used extension years js becoming source target language necessarily future js always expected majority code future compiledtranspiled executed engine moving target", "d": "4/2015"}, {"body": "yeah much draft knowledge even predraft working group subspec jsx relies additional base js though let know love read possibly contribute", "d": "4/2015"}, {"body": "trigger diff fast recommended way rerender toplevel component", "d": "4/2015"}, {"body": "spicyj thanks super quick reply react keeps track element gets react component rendered happens target element gets removed", "d": "4/2015"}, {"body": "yes call reactunmountcomponentatnode removing container dom order prevent leaks", "d": "4/2015"}, {"body": "spicyj aah thanks valuable", "d": "4/2015"}, {"body": "raf batching nt supported wo nt go docs batchedupdates", "d": "4/2015"}, {"body": "raf batching discouraged suitable shipping core would reasonable link uptodate npm project batchedupdates page", "d": "4/2015"}, {"body": "nt use facebook clear solves real problems nt want maintain fix bugs related reactaddonsbatchedupdates give enough control batching", "d": "4/2015"}, {"body": "also known issues raf batching mostly around controlled components", "d": "4/2015"}, {"body": "deprecate eventually remove raf batching", "d": "4/2015"}, {"body": "never supported fashion", "d": "4/2015"}, {"body": "ie already deprecated", "d": "4/2015"}, {"body": "nt file deleted case", "d": "4/2015"}, {"body": "exposed public api builds sure delete pr incoming", "d": "4/2015"}, {"body": "btw available register dev hook iirc one dev hook really want react better toolingintrospection story", "d": "4/2015"}, {"body": "saw exposed within used chrome extension right referring", "d": "4/2015"}, {"body": "yes hook defined react give internals problem devtools already defines nt want librarytool conflict devtools", "d": "4/2015"}, {"body": "correct react dev tools reaches internal private api nt expose hook public api subject change without notice nt want people relying extent possible said timbur exposing reactmount way pretty reasonable solution really need access internals aware unsupported territory per gaearon comment yes grow might make sense better resources dev tooling would interesting start understanding tooling needsusecases see could better addressed devtools whatwhy people need whatever nt yet available timbur little curious details use case", "d": "4/2015"}, {"body": "cc syranide remember talked", "d": "4/2015"}, {"body": "jsfb putting together development toolkit includes optional dev tools extension use webkitsfirefox native sources paneleditor update scripts modules hot reloading also realtime replication devs option work app time reason someone cantwo nt install extension option update modules within browser via codemirror available makes sense include hot reload logic within usual window rather dev tools extension passes changed code onto inspected window reloads module seems like cleaner solution relying way another", "d": "4/2015"}, {"body": "really want keep public api minimal nt think going expose directly may way obviously unsupported also devtools mind way actually need note even private within module figure", "d": "4/2015"}, {"body": "honestly think way used hot reloading pretty hacky guessing necessary due methods designed specifically deeply traversing react elements matching class simple methods would probably ideal dev tools", "d": "4/2015"}, {"body": "guessing necessary due methods designed specifically deeply traversing react elements matching class class nt even matter need access root real react component instances page please nt merge solved way", "d": "4/2015"}, {"body": "would work maybe cache real root component instances expose way real question might would potential dev tools need well whatever arbitrary things devs might want changebind", "d": "4/2015"}, {"body": "love see firstclass officially supported react introspection api would usable devtools libraries much support give us internal instance tree way force updates maybe things keeps happening aside somebody writing", "d": "4/2015"}, {"body": "clarify understand minimal api surface area ca nt see making introspection api slightly official would hurt nobody expects stable even changing every release would still improvement adhoc solutions use", "d": "4/2015"}, {"body": "indeed necessity lack thereof probably thing delaying things seem working well enough despite slightly hacky stuff said glad take stab sure time plus would nt want waste time perhaps someone could outline specs would sure merged implemented", "d": "4/2015"}, {"body": "using inside causing problem bad", "d": "4/2015"}, {"body": "get console warning", "d": "4/2015"}, {"body": "also hit issue point time far remember brought dom behaves nt really think react intends change fairly easy build wrapper component around stop propagation ideally react tries change dom stuff works provide nice functional declarative abstraction top", "d": "4/2015"}, {"body": "thanks feedback think avoiding prop way go get mixed dom events", "d": "4/2015"}, {"body": "would use appropriate", "d": "4/2015"}, {"body": "called cached components without explicit prop passed share array reference state", "d": "4/2015"}, {"body": "vsiao oh thanks see", "d": "4/2015"}, {"body": "mention using already wired mocha", "d": "4/2015"}, {"body": "opensource point directly code", "d": "4/2015"}, {"body": "agree supporting various linting options would exercise futility brought one appears bug nt add trailing white space instance could find", "d": "4/2015"}, {"body": "yeah transpiler produce trailing whitespace probably nt intentional highpriority bug primarily since generated code thus intended human consumption like said likely accept pull request like fix", "d": "4/2015"}, {"body": "nontrivial fix generator left asis", "d": "4/2015"}, {"body": "syntax proposed thing somewhere seems solve bunch issues like conditionals arrays elements nt think seen mention timeline place could look info", "d": "4/2015"}, {"body": "place tracking frags", "d": "4/2015"}, {"body": "uh yea sounds fine behavior definitely nonstandard markdown example big deal probably tutorial cdnjs pretty easy", "d": "4/2015"}, {"body": "going use marked instead already familiar option sanitize input", "d": "4/2015"}, {"body": "issues put workaround deal zpao roadmap", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "valid render function literally requirement demonstrated zpao really simple example checks ca nt really rely anything use open github issues track bugs react since nt technically bug going close issue basically takes development radar feel free continue discussion continue discussion mailing list stackoverflow", "d": "4/2015"}, {"body": "syranide see point might right usability performance issues might deal breakers especially solutions less invasive still trying wrap head around line drawn various data types makes string safe wrapped makes object safe safe concerned still easy wrong thing even explicit syntax difference something like subtle js thispropsuser js thispropsuser legit use cases would actively test code branches notice something wrong expected string everyone kind edge case code branches go production without ever properly tested would false sense security well ultimately nt think validating data structures something react needs necessarily concern type systems reason think need address particular issue cost xss high think fine mistake causes site break even think would ok something allows ui redressing scenario plenty ways get point however ok simple mistake like causes full crosssite script execution high costprobability ratio risk high even probability low think argument sourceid solution specifically addresses tag creation scenario causes high risk scenarios still issues solved simple data types alone", "d": "4/2015"}, {"body": "available high chance people blindly allow since found stackoverflow read article written guy would mitigate protection brought result people idea make vulnerable people security mind would continue writing protected code using complex tool requires attention question product reactjs community gained", "d": "4/2015"}, {"body": "nt know react allowed seem like simple fixes done href bad common style bad unexpected gt expected safe escaping error innerhtmlrendertostring case someone really needs set manually user html doubt real react code would broken", "d": "4/2015"}, {"body": "still trying wrap head around line drawn various data types makes string safe wrapped makes object safe safe sebmarkbage think kind comes currently element primitive instead imagine something like whatever put inside becomes opaque tostringed safe render supplying primitive value would throw example would argue sensibly accept primitive values would internally call whatever value pass safe render would instead accept elements passing nonelement would throw concerned still easy wrong thing even explicit syntax difference something like subtle yeah regardless syntax really throw helpfully throw warn tostring something harmless yes still mess run looks correct correct rendered value longer turn arbitrary elements given malicious data previously could ultimately nt think validating data structures something react needs necessarily concern type systems static type checking would catch mistake without running code implicit wrapping prevents far see usability performance issues might deal breakers especially solutions less invasive suspect performance wo nt issue end static values trivially reused pooling make dynamic values virtually free yes obstacles usability valid point frontend nt style inheritance would nt understand would unaffected string would nt renderable render text explicitly render frontends style inheritance like html richtext components would affected introduction nt laid head yet implicit behavior fragiledangerous seen implicit wrapping workarounds reduce problem fix think matter realizing implicit model flawed way take explicit model somehow make almost friendly implicit frontends suspect answer yes ps realize really separate discussion really solving xss issue immediate sense whether implicit model flawed less invasive solutions far realistic point", "d": "4/2015"}, {"body": "brigand already evaluated decided protecting invalid styles simple fix last evaluated found prohibitively expensive automatically given value whitelist safe patterns would massively huge actively want move away whitelists react fallback underlying dom blacklist could come would likely incomplete anyway ie css expressions another one various url paint expressions semicolons concern also various complex parsing rules agree bad relies implementation detail react html serialization instead hopefully one day slowest browsers fast enough use technique instead href perhaps protected also arguable would react overreaching agree cost accidentally high added additional protection end day ca nt protect everything crazy dom target interop environment put higher demands new abstractions react native also highly recommended build set high level components instead targeting html directly facebook semantic html enough", "d": "4/2015"}, {"body": "syranide think valuable conversation thread since generic catchall issue necessarily related one issue alone see title nt really think anything special primitive values string one kind data structure want support many different ones higher level components might objects represent kind values even strings could reimplemented different data structure something like immutablejs may also json serializable key issue union type set accepts one multiple types want make sure user explicitly decides one put think ultimately become prohibitively verbose union types overloads matter fwiw lot components fb accept strings rich text need convenient way pass rich text system also possible build one place componentize use another since rich text elements could include animation etc might make sense allow stateful scenario would want underlying component rendering label accept subset components rendering type system except proptypes devonly system nt protect kind attack", "d": "4/2015"}, {"body": "sebmarkbage perhaps nt entirely clear think seems everything richtext model html flawed great documents immensely fragile user interfaces documents rendered within user interface nt render user interface within document nt make sense using document model html fundamental design language nt current render target would argue mature react user interface best avoid html style inheritancedocument model ie click click click click simpler traditional setup would write want generic button implementation whatever children label longer universal understanding render string components inherently isolated reusable style perspective primitives rendered xss issue goes window even whitespace rules become irrelevant inherent technical beauty unambigious gets whatever worth could formal nonsense syntax would hard argue could even marketed new general purpose primitive type limited user interfaces ahem basically talking xml subset starting point opinion thing stands richtext components usually finds useful user interfaces definitely forgotten nt necessarily mean richtext dedicated syntax perhaps current syntax react currently targeting html makes daunting aspect html provides conveniences would targeted anything else quite sure reactjsx would nt walked path without significant consideration sure solution html sets squarely apart user interface targets nt really prove exceptionally competent think sane question whether html really ideal role model reactjsx user interfaces", "d": "4/2015"}, {"body": "react native almost works like though strings text elements children text components nt accept text children like", "d": "4/2015"}, {"body": "syranide midlong term think right kind architecture react users moving towards however easy shift immediately nt see trusted source solution needs block important features would gotten shifting newer architecture seems like safe short term solution also nt block anything planning anyway", "d": "4/2015"}, {"body": "sebmarkbage agree agree", "d": "4/2015"}, {"body": "thinking priorities see three threats xss dangerouslysetinnerhtml script tags etc b clickjacking similar c types ui redressing scenarios nt involve interactivity agree react secondary layer already broken issue real solution always fix json passthrough hole follows react responsible providing permanent solution react responsible mitigating impact hole occurs full xss threat clearly high cost bug even fix quickly harm already done getting embarrassing redressing message phishing attempt static message threat c might bad even happen guarantee significant harm done fixed addressing passthrough hole real harm done agree need protect possibly b lot possibilities limit scope problem sensitive attributes another thing would like start thinking ran react worker allowed crossorigin script communicate worker render arbitrary could targeting higher level abstractions real dom nodes kind things would need protect point scenario explicitly allow arbitrary ui elements subtree page probably means explicitly allowing threat c probably even b", "d": "4/2015"}, {"body": "sebmarkbage far concerned related html react except particular issue addressed without implementing much safer abstraction html seems wo nt nt seem worthwhile sure would still many tricks reactdom might simply able guard think publicly documenting explaining known pitfalls would go long long way seems biggest issue right general lack awareness mistakes eg dangers user supplied href one applies protocols including urls without protocoldomain part always block everything say also beware links point current domain could possibly perform operations behalf user react simply guard needs documented possibly made available readymade helpers also important document also exploitable allows injection arbitrary css wo nt stop problem publicly documented big step seeing unlikely ever outright prevent targeting html", "d": "4/2015"}, {"body": "going close since immediate issue solved figure interop later", "d": "4/2015"}, {"body": "currently whitelist supported attributes want remove whitelist allow attributes point tricky components pass attributes children edit actually changed mind leave one open track addition time fixed added goodfirstbug might add whitelist", "d": "4/2015"}, {"body": "webkitdirectory added", "d": "4/2015"}, {"body": "still need", "d": "4/2015"}, {"body": "flux indeed one way solving problem created pr mention", "d": "4/2015"}, {"body": "gaearon thanks others reference", "d": "4/2015"}, {"body": "gaearon one step might nice throw quick ifyouunderstandalittleaboutflux example", "d": "4/2015"}, {"body": "got surprised today upgrading bug ie nt accepted bug anyway use suggested glenjamin wanted point seemed work", "d": "4/2015"}, {"body": "came across gh issue running similar problem attempting understand parentbased contexts work trying figure bug hidden code using test found running react javascript var obj val testcontext function ownercontext comp return compreactinternalinstancecurrentelementcontexttest function parentcontext comp return compreactinternalinstancecontexttest var app componenta componentb app reactcreatefactory reactcreateclass displayname app childcontexttypes test reactproptypesobject getchildcontext function return test obj getinitialstate function return value false componentdidmount function settimeout function consolelog changing value thissetstate value true bind render function return thisrenderchild return reactdomdiv thisrenderchild renderchild function thisstatevalue return componenta else return componentb componenta reactcreatefactory reactcreateclass displayname componenta componentwillmount function consolelog componenta willmount ownercontext parentcontext contexttypes test reactproptypesobject render function consolelog componenta render ownercontext parentcontext return reactdomdiv componentb reactcreatefactory reactcreateclass displayname componentb componentwillmount function consolelog componentb willmount ownercontext parentcontext contexttypes test reactproptypesobject render function consolelog componentb render ownercontext parentcontext return reactdomdiv reactrender app documentgetelementbyid container renders one second switches provides context key child components declare appropriate value child components log ownerbased parentbased contexts written running app shows following console gets context key changing method wrap child component simple changes console output show based explanation davidagraf original issue two things nt understand example wrapped given expected parentbased context rerendering ignoring question correct nondivwrapped example receiving right context really parent described wrapping plain suddenly provide correct parentbased context understand deriving context parent providing context since given logic parent thus passing one child", "d": "4/2015"}, {"body": "wonder might fixed verify still case", "d": "4/2015"}, {"body": "gaearon good call looks like fixed master", "d": "4/2015"}, {"body": "sorry make sure get another minor release", "d": "4/2015"}, {"body": "wondering use outerhtml comparing client markup could nt solution", "d": "4/2015"}, {"body": "wondering use outerhtml comparing client markup could nt solution nt think work copypasting comments sure would good way fix reescaping comparing calling would likely escape unrelated characters well unescaping comparing would produce exact diff unless keep track unescapes performed comparing revert producing diff string sounds like going trouble might needed", "d": "4/2015"}, {"body": "experimenting similar idea rewriting see readme notable difference introduce explicit observableprocess identity reconcile processes similar react prop stateful components named process changes react async stops old process instance starts new one api looks like import react react import async reactasync function definefetchprocess url return id url start return fetch url function mycomponentprocesses props return user definefetchprocess async mycomponentprocesses class mycomponent extends reactcomponent render let user thisprops process api follows promises api syntactically namewise semantically expected called per process live made accommodate popular use case fetching data via promises honest think need change prevent confusion", "d": "4/2015"}, {"body": "maybe mistaken think thing prevents implementing proposed issue api userland lack lifecycle hook executes render like new already installed instance", "d": "4/2015"}, {"body": "one thing nt yet discussed handling callback observable produces error information available component somehow react handles actual call need standardized method inject callback object provide flexibility application developers see two approaches first errors placed toplevel attribute similar seems incredibly heavy handed eats component namespace second would allow developers define callback lifecycleish function wanted custom error handling observables could add something like similar done upcoming iteration parsereact created error handling produce api wanted errors added private name gt error map components toplevel public method returns clone map empty otherwise allowing simple course defining new reserved methods also tricky business wo nt pretend nt need way implicitly explicitly make errors available component rendering", "d": "4/2015"}, {"body": "andrewimm idea feed generic error propagation system bubbles error hierarchy handled error boundary also handle errors methods throwing recover gracefully like method throws significantly work take time implement properly idea unify error handling way", "d": "4/2015"}, {"body": "would argue left outside react proper key integration points coordinated projects like reactasync reactnexus cleanly done top react proper", "d": "4/2015"}, {"body": "agree seems like suggested way better baking framework tue apr pm rodolfo hansen notifications githubcom wrote would argue left outside react proper key integration points coordinated projects like reactasync reactnexus cleanly done top react proper reply email directly view github", "d": "4/2015"}, {"body": "weekend built yet another flux implementation called flexy check code store exposes method conforms observable api even though really observables reactive framework used would say api easy enough create actual observables said nt judge code harshly done weekend fun understanding using jscsp using observe api sidenote system like flux actually makes serverside rendering less painful using similar system reactnexus initialize stores pass react app monitor stores dispatcher keep rerendering till actions fired required data already stores", "d": "4/2015"}, {"body": "would argue smallest integration point get new semantics stateless data subscriptions integration points would suggest including async rendering much complex issue deserves thread hook could used async rendering regardless everything else already possible implement top react percomponent basis note going global injections plugins since breaks component reuse across environment frameworks built top react contextual individual components hooks missing", "d": "4/2015"}, {"body": "hey honest new hooks would made implementation easier certainly achieve sideways data loading without demonstrated anything exposing supporting maintaining react components instances lifecycle outside mounted react hierarchy would help use internal call etc consider approach brittle relies internal invariants change next version react stateless approach seems async data fetching stateful thus storing pendingcompletedfailed status components state relevant use realworld apps higherorder components perform data fetching inject fetching state children components props inner component thus stateless desirable outer component stateful also desirable eg display loading spinner placeholder", "d": "4/2015"}, {"body": "integration points would suggest seems andreypopp asked right question nt thing need implement userland lifecycle hook render seems like smallest minimal api change needed rest setting triggering forceupdate appropriately change based whatever input streamemitterobservable unless missing something else special entirely possible", "d": "4/2015"}, {"body": "getting drawn larger discussion answer sebmarkbage think one important hook would like something needed using real observables hook provide functions deal values pushed observable set data real observables would situation little open think hooks replace observablespecific behaviour custom hooks way could use eventemitters csp channels instead", "d": "4/2015"}, {"body": "seems like last comments saying smallest extension point actually connect disconnect lifecycle hooks make easy attach async data component manage subscriptions observables could fairly trivially built upon outside core exposing lifecyle points broader appeal reasonable summary", "d": "4/2015"}, {"body": "also yet convinced needs solved react much inclined think react provide necessary hooks build functionality top react moment let say going thoughts potential sources new data seems excessive idea separate application state component state might clarify separate issues around state feel like cost introducing new input may outweigh gains want focused solely component state let fields add instead name generic props data state data local variable data name adds meaning muddles existing meanings would much prefer name would actually mean something matthewwithanm comment might better name example would clearly associate method let execute server need kind hook clean memory leaks might cause unmounting never happen call every time change must optimized performance ideally ca nt made expensive accidentally becomes part hot path like react nexus next bindings diffed previous bindings removed bindings unsubscribed added bindings subscribed", "d": "4/2015"}, {"body": "come believe state complicates components trying use less components lift instead addition concerns fisherwebdev raised agree convinced letting depend good idea state depends props observed depends state props nt complicated rather", "d": "4/2015"}, {"body": "also coming realize observe dependent mostly nt need gaearon points easy enough hoist state one level feels cleaner separating concerns potentially depend logic around handling updates within component grows significantly complex depends forkless handlers less code critical path translates simpler rendering cycle also reduces number unintended updates retrigger subscriptions", "d": "4/2015"}, {"body": "observe props less deal state better imo", "d": "4/2015"}, {"body": "opinion library react try flexible possible agree good idea observe depend state yes complicated yes best practice depend state choice users react allowed make would recommend leaving current api unchanged possible hooks add flexibility make work observables example proving documentation explains using state observe method recommended", "d": "4/2015"}, {"body": "believe everyone wants right thing want pointed right direction observe accepting state makes easier user accidentally find something like antipattern docs", "d": "4/2015"}, {"body": "saw issue playing fixeddatatable problem indeed mixing versions webpack injected dependencies react elements created without gets added", "d": "4/2015"}, {"body": "closing leiserfg still trouble let know", "d": "4/2015"}, {"body": "true rebuild lib works fine", "d": "4/2015"}, {"body": "nt want yet", "d": "4/2015"}, {"body": "documented somewhere want examples yet", "d": "4/2015"}, {"body": "still powerful classes enabled limitations know think might actually want redo presentation examples show createclass classes side side", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "method like forcing complete render", "d": "4/2015"}, {"body": "another potential solution", "d": "4/2015"}, {"body": "favor inline styles possible gets complex use something like bem recommended spicyj also like suitcss pairs well react experience", "d": "4/2015"}, {"body": "seems like core incongruence using stateful mixins control component state using stateful mixins means giving control mixins practice using replacestate alongside immutablejs came caveat could nt use stateful mixins see ways mixins barred access setstate stateful possibly unfortunate limitation mixins state distinct component mixed makes even special already bit special bunch methods mixed class prototype would encourage data isolation different mixins mixins components maintains control adds weight react abstraction also unfortunate add ducktype interface state allow overriding state merge strategy rough example could look like would allow initial state kind object supports interface could keep using existing setstate api actually leaning favor option thinking perhaps stateful mixins would better wrapping components component composition could provide functionality stateful mixins used today leaning favor option three actually simplifies rather adds complexity react case go option would propose also adding api parallel setstate perhaps called updatestate always takes function function always returns entirely new state object kind api would put amount control back hands developers using react would allow turn code looks like js class clickcounter extends reactcomponent getinitialstate return data immutablemap count updatecount thissetstate prev gt data prevdataupdate count gt render return code looks like one layer indirection removed state access js class clickcounter extends reactcomponent getinitialstate return immutablemap count updatecount thisupdatestate prev gt prevupdate count gt render return", "d": "4/2015"}, {"body": "concern two different update functions hoping go direction state always updated returning values sure direction still considered current thinking though proposal also seems halfway using immutablejs way seems like really want omlike cursor like call update twice feel like case pluggability leads worse results everyone opinionated solution preferable", "d": "4/2015"}, {"body": "differences going immutability really relevant update helper attached object map vs record contains map could imagine mutable map instead record concern exists longer seems issue convenience using updater top level object immutablerecord automerged could", "d": "4/2015"}, {"body": "also implement without changing need read wo nt trigger another render writing props state within proposed function call shooting foot case every method lifecycle", "d": "4/2015"}, {"body": "want able respond new props event returns case ca nt use", "d": "4/2015"}, {"body": "seeing similar issue many places error shown write amd since company uses esri javascript api heavily relies dojo one module creates component returns result reactcreateclass somewhere else app call reactrender somenode throws multiple instances error get around returning something like also seeing occasionally jasminenode calling testutilsrenderintodocument note noticed started upgrading react", "d": "4/2015"}, {"body": "noticed nodejs calling rendertostaticmarkup one package react components another package", "d": "4/2015"}, {"body": "merging", "d": "4/2015"}, {"body": "another one thinking parentbased refs actually using similar pattern next version react dnd attaching nodes higherorder component binds drag drop events js class box extends component static proptypes dragpreviewref proptypesfuncisrequired dragsourceref proptypesfuncisrequired render const dragsourceref dragpreviewref thisprops export default configuredragdrop box configure register gt registerdragsource itemtypesbox boxsource collect connect monitor dragsourceid gt come really like api provides flexibility compose refs js function joinrefs refa refb return function instance refa instance refb instance class card render const caption dragsourceref droptargetref thisprops also always manually tricky use cases specifying custom drag preview js class box extends component componentdidmount const dragpreview new image dragpreviewonload gt thispropsdragpreviewref dragpreview dragpreviewsrc render const dragsourceref thisprops", "d": "4/2015"}, {"body": "merging", "d": "4/2015"}, {"body": "sebmarkbage zpao considered done since rebased awaiting merge", "d": "4/2015"}, {"body": "screwed somehow thing resubmitted", "d": "4/2015"}, {"body": "bit error today jsdom tests fixing behavior", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "use syranide proposal rendertostream method javascript function rendertostream component production processenvnodeenv invariant reactdescriptorisvaliddescriptor component rendercomponenttostaticmarkup must pass valid reactcomponent invariant reactdescriptorisvaliddescriptor component var transaction readable require stream readable stream new readable processedfragments batchsize try var id reactinstancehandlescreatereactrootid transaction reactserverrenderingtransactiongetpooled true finally reactserverrenderingtransactionrelease transaction idea concat string chunks soon stream need avoid event loop blocked even massive string elaborate strategy take consideration buffer size requested stream jussikalliokoski strategy match experiments", "d": "4/2015"}, {"body": "syranide wrote may wrong think generally problematic unless reactchildrenfilter would replace filtered children null undefined rather compact array canshould map filter way dynamic children nt keyed reconciliation suffer badly maybe missing something nt see problem exactly could elaborate fyi want implement tabs component thought would nice idea define individual tabs using nested tab components besides tabs tabs header also contain buttons get structure like tabs component would like know children tabs buttons great could", "d": "4/2015"}, {"body": "arendjr call bad practice unrelated provided separate props mixed soup children", "d": "4/2015"}, {"body": "syranide sure agree bad practice seems perfectly reasonable parent component might want arbitrary behaviors based children particular components want preserve absolute ordering child components nt really way tabs come beforeafter tab buttons alternate otherwise mixed agree nt appear preserving order think completely valid use case could imagine someone implementing smart div fancy layout things treats components differently others obviously natural mixed bag children given simplicity ofersadgat implementation convinced makes sense pollute api space providing filter function syranide agree reconciliation would suffer maybe would warn children keys almost reason provide function add warn hook probably separate issue gaearon suggested seems like natural way get children potentially empty array might nice solution issue cc spicyj", "d": "4/2015"}, {"body": "sure agree bad practice seems perfectly reasonable parent component might want arbitrary behaviors based children jsfb broad subject seems processing children inherently bad think depends trying accomplish children need separated likely separate props begin api redesigned somehow could imagine someone implementing smart div fancy layout things treats components differently others obviously natural mixed bag children sure imagine quite sure actually makes practical sense nt better solutions problem inventing nonstandard behaviors percomponent basis seems like last resort used concluded established practices nt good fit nt allornothing children used looks pretty nt mean solution could imaginably longer opaque structure special behavior likely apparent user well saying ask tool used intended purpose children purpose think mistake expand definition unless sure makes sense", "d": "4/2015"}, {"body": "agree depends trying accomplish likely separated going try filter anyway someone desires heterogeneous list components usually due ordering concerns think perfectly valid use case children may natural place defined providing reasonable support use case facebook common branch based type child popularity facebook nt necessarily imply best practice common use case support nt know percentage use cases operation imagine large percentage presumably reason use heterogeneous list maintain order said still entirely convinced feature makes sense justifies api creep real advantage see gives us opportunity warn unkey children", "d": "4/2015"}, {"body": "true facebook existing components branch based type position child usually better idea pass separate components explicitly instead explicit addition easier implement going back original issue considering implementing sort clones children rekeys appropriately example would return something like less react flattens children internally point could manipulate array whatever way convenient", "d": "4/2015"}, {"body": "sounds good", "d": "4/2015"}, {"body": "super delayed response regardless whether bug spec whatever decision avoid arrow function desugaring purely optimization could easily considered heuristic given use case problem look xjsidentifier arrow function transform accidentally unnecessary bind edge case occurs nt actually mean", "d": "4/2015"}, {"body": "hack together bugfix jstransform btw", "d": "4/2015"}, {"body": "fixed jstransform", "d": "4/2015"}, {"body": "closing due response though might also", "d": "4/2015"}, {"body": "matter measure always largest contributor latencyperformance issues running applications sidebyside benchmarkjs node stock react vs react commented see performance gains opssec rendering app commented migrating components helps custom components builtin components use seems like two ways mitigate issue migrate internal components use remove classes created behave similarly classes far binding", "d": "4/2015"}, {"body": "migrating possible seems better hard justify optimizing feature future increase priority migrating builtin components really going get perf boost ssr", "d": "4/2015"}, {"body": "jsfb hard justify everyone uses nt know make autobinding faster", "d": "4/2015"}, {"body": "seeing improvement nodejs using script running test using react npm applied patch make contexts work multiple react process", "d": "4/2015"}, {"body": "yea really hard justify still talking serverside right perhaps something nt actually create bound functions upfront maybe placeholder functions lookup real function use", "d": "4/2015"}, {"body": "mridgway try requiring reactdistreactminjs instead main react module currently compare", "d": "4/2015"}, {"body": "wondering", "d": "4/2015"}, {"body": "nt think related since tests hitting see get test working minjs although patching kind difficult since add context changes well", "d": "4/2015"}, {"body": "build one call bindautobindmethods removed", "d": "4/2015"}, {"body": "ran test files still seeing difference changes made benchmark ran times confirm smallest margin difference found", "d": "4/2015"}, {"body": "okay trouble getting running locally complains ca nt find fluxiblerouter nt figured right incantation installlinketc make work", "d": "4/2015"}, {"body": "sorry let pull simplify", "d": "4/2015"}, {"body": "ok better luck repo note minified builds seem break nt use nodeenvproduction reason", "d": "4/2015"}, {"body": "still failing require fluxiblerouter", "d": "4/2015"}, {"body": "ugh sorry happens globally link something pushed changes removes dependency", "d": "4/2015"}, {"body": "got seeing definitely difference like nodeenvproduction", "d": "4/2015"}, {"body": "think important note even drop end taking hit manually calling instead may end less nt think ever reasonably get rid entire cost way js currently binding serverside safe", "d": "4/2015"}, {"body": "typical use case needing autobinding event handlers usually get fired client would optimal bind methods case", "d": "4/2015"}, {"body": "looks like started autobinding getdomnode nt previously almost certainly unintentional part", "d": "4/2015"}, {"body": "whoa noticed benchmarks well thought outlier tried chrome high resolution timers sometimes frequently called functions get unfair share blame", "d": "4/2015"}, {"body": "jordwalke nt profiler normal react autobinding commented", "d": "4/2015"}, {"body": "currently trying update elements inside svg tag went problem works well following browsers nt update mobile safari console logs render method chrome firefox", "d": "4/2015"}, {"body": "rect supported tag using dangerouslysetinnerhtml", "d": "4/2015"}, {"body": "asaayers using elements attributes well nt supported moment", "d": "4/2015"}, {"body": "updating key manually forced react rerender svg fixed problem safari", "d": "4/2015"}, {"body": "interesting ran exact problem friday works style though", "d": "4/2015"}, {"body": "good workaround clippath attribute got stuck element well nt supported svg element found post stackoverflow came accross solution", "d": "4/2015"}, {"body": "never mind started working next version react hot loader monkeypatching convenient", "d": "4/2015"}, {"body": "monkey patching internals break soon start precompiling react using closure compiler need officially supported hooks like devtools reactperf etc also need apr dan abramov notifications githubcom wrote never mind started working next version react hot loader monkeypatching convenient reply email directly view github", "d": "4/2015"}, {"body": "talking monkeypatching react internals monkeypatching user components pass transform anyway addition method forwarding hijack componentwillmount componentwillunmount track instances proves enough case also going enabled development suspect case getting source react precompiled one anyway", "d": "4/2015"}, {"body": "gaearon earlier morning put together believe sebmarkbage talking chaining particular usecase using automatically hot reload reactclasses development environment monkeypatches concerned minification issues since dev environment either later today tomorrow make sure works classes anything extra use personal note really nt like make work since powers seem opposed exposing see sure gaearon remembers pretty ugly monkeypatching yay must applied react ever imported seems work without suppose might solution source problem agree future probably need something elegant like described original post", "d": "4/2015"}, {"body": "timbur looked reacthotify yet succinct api reacthotapi require pass ugliness currently support style classes ones hard port think", "d": "4/2015"}, {"body": "timbur solve problem percomponent work separate versions need kept component example class class b needs get class reloads original class patched similarly class b reloads patches original class b gist looks like reload would overwrite classes application made explicit reacthotify api keeps internal map hotifying functions per component class required pass string uniquely identifying component usually works fairly well filename plus component name", "d": "4/2015"}, {"body": "gaearon thanks heads class needing updated gist fix checked reacthotify liking looks pretty straightforward makes sense reacthotapi decorators grown lot past months use almost everything glad see becoming widely adopted soon standardized upon first glance looks like would pretty easy make reacthotify work babelpluginreacthotify looks perfect usecase throw gist get chance see incorporating reacthotify working thanks filename plus component name semiunrelated regarding anyone know sure expected part standard saw short dicussion back looks like yet solidified", "d": "4/2015"}, {"body": "timbur updated gist fix think still slightly wrong functions need reused different versions component way patching works function handle original version component updated versions get reevaluated module code hot updates knows refer class code sets patching case need somehow store map functions based unique class identifier derive identifier depends build system tools disposal upon first glance looks like would pretty easy make reacthotify work createclass implement ask pr reacthotify ideally like team effort got plenty tests give idea test api would sensible add test case using test file wo nt work right away autobinding new methods hot reload need autobound possible port function reacthotapi etc ps maybe could open issue reacthotify nt spam people", "d": "4/2015"}, {"body": "see discussion mixins effectively legacy feature going merge breaking change behavior even though agree makes sense way closing wontfix cases use higherorder components get behavior want", "d": "4/2015"}, {"body": "sounds like dupe merging", "d": "4/2015"}, {"body": "probably another consequence", "d": "4/2015"}, {"body": "syranide exactly issue ca nt implement solution code try exec following code require reactaddons changes also tried directly change nodemodulesreactaddonsjs file make look like works fine final question solution change react attribute name inside code many thanks", "d": "4/2015"}, {"body": "fberthelot using webpack hot loader could brake things basically take magic first file order apply patch", "d": "4/2015"}, {"body": "thanks azproduction unfortunatly nt use webpack hot loader way nt know tool seem fun try day personnaly awful quick fix jenkins build time change require reactaddons custom implementation react still find ugly less ugly still ugly", "d": "4/2015"}, {"body": "close enough close one track", "d": "4/2015"}, {"body": "think fixed code explicit error", "d": "4/2015"}, {"body": "jsfb take explicitly blocked threw render lost check carried", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "using bem usually end get classes nt elegant", "d": "4/2015"}, {"body": "fixed using reactchildrenforeach reactdomoption flatten children passing raw html component strings numbers get concatted together elements skipped log warning invalid children", "d": "4/2015"}, {"body": "chance go", "d": "4/2015"}, {"body": "design nice api implement include way determine children listening context keys actually changed actually updated instead everything unlikely full time core team alone time apr pm dan abramov notifications githubcom wrote chance go reply email directly view github", "d": "4/2015"}, {"body": "sure take look", "d": "4/2015"}, {"body": "sorry folks still ca nt find time start working pending react dnd release busy preparing conf unlikely able work anytime soon", "d": "4/2015"}, {"body": "thumbsup", "d": "4/2015"}, {"body": "equally tough break free latest revision reacttestutilsjs challenge breaking free really boils fact way mocking libraries would stubspy render method uses different syntax example would use stub javascript mockcomponent function module mocktagname mocktagname mocktagname modulemocktagname div almost feels method belong something jest specific like sebmarkbage", "d": "4/2015"}, {"body": "legacy needed jest anymore really", "d": "4/2015"}, {"body": "closing super actionable added appear phase", "d": "4/2015"}, {"body": "worries forgot stopped caring js styling become supported thanks spicyj", "d": "4/2015"}, {"body": "going issues today", "d": "4/2015"}, {"body": "trying clean issues close take pr clarify", "d": "4/2015"}, {"body": "fix implemented soon react really like far major bummer unfortunately", "d": "4/2015"}, {"body": "would nt expect change anytime soon maybe eventually", "d": "4/2015"}, {"body": "mfunkie issue using reactmodal changed one reactbootstrap", "d": "4/2015"}, {"body": "also using reactbootstrap ran issue using react reactbootstrap mfunkie workaround fixed thanks", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "guess cases nesting elements different versions inside spicyj using browserify happen requiring two different versions react way handles deduplication requires path code two versions end getting deduped modules coderequire path changed versions get deduplicated others nt encountered reactdomselect react evaluated mixes reactbrowsercomponentmixin part spec reactinjectionclassinjectmixin reactbrowsercomponentmixin evaluated adds reactbrowsercomponentmixin classes subsequently created reactclasscreateclass shared react nt change two versions react reactdomselect react evaluated tries mix reactbrowsercomponentmixin twice reactdomselect spec global injected mixin list long modules stateful approach deduplication seems horrifically unsafe file issue browserify nt yet verified webpack would issue either way think would make sense handle specifically react given trip newcomers", "d": "4/2015"}, {"body": "reverting sort problems", "d": "4/2015"}, {"body": "thank discussion battling invariant violation bug half day yesterday came across ticket morning setup using browserifyshimmed version react reactrouter loaded cdn reading discussion opted use npm versions libs error went away first react project debugging problem pretty big headache thanks discussion lead figure problem move forward", "d": "4/2015"}, {"body": "reason nt support implemented yet hoping something like js var shallowrenderer reacttestutilscreaterenderer var instance shallowrendererrender var result shallowrenderergetrenderoutput expect resulttype tobe div instancehandleclick call setstate inside result shallowrenderergetrenderoutput expect resulttype tobe span imagine returns different state", "d": "4/2015"}, {"body": "gaearon supposed work post minimal repro", "d": "4/2015"}, {"body": "graue render return instance", "d": "4/2015"}, {"body": "works use think could return also shim react expects defined reason", "d": "4/2015"}, {"body": "think could possibly solved new method trying work migrating use super noob react source going slow going help react team get would much appreciated", "d": "4/2015"}, {"body": "duro unfortunately wo nt work case reacttransitiongroup needs ref element ca nt keep old one syranide suggestion creating wrapper work though", "d": "4/2015"}, {"body": "spicyj something needs happen right reacttransitiongroup practically unusable used combination something like reactrouter passing props parent component children tearing hair trying get work days", "d": "4/2015"}, {"body": "anyone cares take look project problem specific file implemented", "d": "4/2015"}, {"body": "new callback refs introduced react clone element conserve ref example implementation props considered functions jsx function clonewithref element ref return reactcloneelement element ref function component ref component elementref component var child reactcreateclass componentdidmount function consolelog child thisc render function var child reactchildrenonly thispropschildren return clonewithref child c gt thisc c var wrapper reactcreateclass componentdidmount function consolelog wrapper thisc render function return jsfiddle pattern considered okay might go implementing", "d": "4/2015"}, {"body": "love get hands implementation", "d": "4/2015"}, {"body": "sebmarkbage could give example best deal multiple form inputs without linkstate", "d": "4/2015"}, {"body": "saulshanabrook two following equivalent sugar really", "d": "4/2015"}, {"body": "enough trouble convincing fix correct nt think want take ever support raf batching core perhaps want fix curious though problems raf batching solve reactaddonsbatchedupdates fix problems", "d": "4/2015"}, {"body": "enough trouble convincing fix correct elaborate bit could learn line thought real reason remove node going removed dom anyway better remove dom wrong using raf batching tight spots app need update opacity user scrolls lags terribly without raf batching used complicated userland code raf raf batching able use case wo nt help happens often scroll want keep code simple still update opacity needed faster frames make sense", "d": "4/2015"}, {"body": "idea sounds good code still tricky especially reentry case makes sense looked throttling scroll events instead typical way deal could something like still want raf boundaries function throttleaf fn var interval null function onframe interval null fn return function throttled interval null interval requestanimationframe onframe thisthrottledscroll throttleaf thishandlescroll onscroll thisthrottledscroll basically raf batching introduces complexity makes things harder reason like necessitating fix far tried avoid using", "d": "4/2015"}, {"body": "see perhaps right first wrote code nt trustring use raf properly think better idea use might well throttle scrolling thanks", "d": "4/2015"}, {"body": "problem let know goes", "d": "4/2015"}, {"body": "yeah csstransitiongroup turns default see expect work use instead sorry slow response", "d": "4/2015"}, {"body": "react could really great platform svg hard use svg full effect without xlink href friends", "d": "4/2015"}, {"body": "got bit issue please update uglify", "d": "4/2015"}, {"body": "afaik reason upgrade syranide want send pr branch forget update shrinkwrap files properly", "d": "4/2015"}, {"body": "send master pull things cheers paul apr pm ben alpert notifications githubcom wrote afaik reason upgrade syranide want send pr branch forget update shrinkwrap files properly reply email directly view github", "d": "4/2015"}, {"body": "confirmed correct minified build ship week fix", "d": "4/2015"}, {"body": "get rebuild", "d": "4/2015"}, {"body": "ledowong nt generally point releases except newest minor release except case security vulnerability patch change locally make build unable upgrade", "d": "4/2015"}, {"body": "closing favor sound pretty similar", "d": "4/2015"}, {"body": "dupe less", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "sounds like", "d": "4/2015"}, {"body": "case useful prinzhorn suggestion using html comments map fragment components dom approach knockout uses knockout calls virtual elements knockout docs", "d": "4/2015"}, {"body": "also another use case extra wrapping elements problematic using flexbox", "d": "4/2015"}, {"body": "aldendaniels absolutely agree ran flexbox issues already", "d": "4/2015"}, {"body": "ran flexbox dependent dropdowns would render manage first dropdown followed b c depending value dropdown would render appropriate number dropdowns eg b c stateless changed case nt much matter parent multiple children rendered deal css things differently nt need reused another component needs b c alternative maybe way unravel parent nt specific ideas look", "d": "4/2015"}, {"body": "hit scenario today think good use case feature component renders multiple elements could rendering element page wrapper element would bad scenario wanting component responsible rendering tag runtime code needed page well another tag carries localized strings used runtime code example case like code authored", "d": "4/2015"}, {"body": "also ran flexbox issues nothing ca nt solved css one beauties flexbox need less wrapper elements everywhere make layout work still end wrapper elements everywhere using react since always wrap whatever return divdiv similar unless makes sense container", "d": "4/2015"}, {"body": "sounds like", "d": "4/2015"}, {"body": "chance land", "d": "4/2015"}, {"body": "plan", "d": "4/2015"}, {"body": "going make refs dom nodes node soon", "d": "4/2015"}, {"body": "facts guesses bug incorrect issue probably nt going get fixed everyone looking wrong thing fix primarily suggestion onfocusout fix firstly people correct firefox lacks bug wish would fixed years ago see bug actually prerequisites spec defines blur focus events however chrome implements ie instead implements events next event bubble fire exact element registered loses focus lost node even node descendant like focused div focus lost button inside fire descendant loses focus nt matter descendant loses focus another descendant something outside element registered fire either case jquery mimics registering capturing used register delegated event see test button loses focus fired container around fired button fired container including firefox jquery fakes delegated fired brings react react delegates events means use react register capturing document supported otherwise use causes separate bug reported result react work alright elements like etc focusable children care lose focus focus goes worthless use containers behave handler container would event would fire child loses focus instead fires every time element within container loses focus required tell focus left container available chrome ie firefox ie", "d": "4/2015"}, {"body": "neonstalwart aware probably nt want use testing equivalent focus lost due click wrong target tab used change focus", "d": "4/2015"}, {"body": "mentioned advanced performance section docs think would nice sample project utilizes immutablejs highlight pros cons use case", "d": "4/2015"}, {"body": "nt heard zpao please reopen", "d": "4/2015"}, {"body": "solution", "d": "4/2015"}, {"body": "syranide restated clearly defined transition server rendering client render made available jsfb means since components statefull want well defined handoff component state evidenced leaving server serverside events serialization coming client clientside events deserialization think environment feature detection identified diagnosed context necessary handling server client transitions affect components needs somehow surfaced something like componentwillserialize server side rendering either stop calling componentwillmount server side add corresponding componentwilldeserialze initial called prerendered components client rendering", "d": "4/2015"}, {"body": "kryptt yeah think really boils able determine clientserver somehow update transition happens ie assume value context would sufficient", "d": "4/2015"}, {"body": "want support would probably react configurable way sort like", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "guess", "d": "4/2015"}, {"body": "suppose batch update print callback fixed fiddles unfortunately still incorrect", "d": "4/2015"}, {"body": "thanks try also linked related question take look", "d": "4/2015"}, {"body": "need believe add myappinit similar external script tags queue correctly", "d": "4/2015"}, {"body": "nt plan class support make classes however like", "d": "4/2015"}, {"body": "yeah petehunt change", "d": "4/2015"}, {"body": "others uses format get prop value choice pass index prop name think correct way pass prop value explicitly think might hack make work nicely though forgot pete pr looked like", "d": "4/2015"}, {"body": "chenglou way could index name huge deal help narrow search space working inconsistent apis", "d": "4/2015"}, {"body": "brigand possible might require api change sure whether worth point", "d": "4/2015"}, {"body": "leave commentits worth", "d": "4/2015"}, {"body": "chenglou probably nevermind", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "nt heard much desire going close sounds like likely antipattern component sometimes receives context parent sometimes nt", "d": "4/2015"}, {"body": "update still happening", "d": "4/2015"}, {"body": "resolved marked merged may issue closed", "d": "4/2015"}, {"body": "yes thanks", "d": "4/2015"}, {"body": "also wary exposing api long term use flow systems probably move proptypes core eventually", "d": "4/2015"}, {"body": "merging sounds like timeouttransitiongroup working people", "d": "4/2015"}, {"body": "nt plans right", "d": "4/2015"}, {"body": "nt think going anything", "d": "4/2015"}, {"body": "fixed chrome also added better warning particular problem", "d": "4/2015"}, {"body": "foreignobject", "d": "4/2015"}, {"body": "work possibly attributes", "d": "4/2015"}, {"body": "status supporting svg addons ran today", "d": "4/2015"}, {"body": "cc xymostech michelletodd", "d": "4/2015"}, {"body": "namespaced attributes", "d": "4/2015"}, {"body": "full svg support addons", "d": "4/2015"}, {"body": "svg attribute support", "d": "4/2015"}, {"body": "supporting attributes", "d": "4/2015"}, {"body": "request adding attribute fillrule maybe fillrule", "d": "4/2015"}, {"body": "would also like see svg addon", "d": "4/2015"}, {"body": "react core team behindthescenes movement discussion", "d": "4/2015"}, {"body": "specifically svg things worked also related attributes change", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "fixedit", "d": "4/2015"}, {"body": "planning add utils like testutils always implement locally project helper want planning move towards shallow testing ie testutils createrenderer future", "d": "4/2015"}, {"body": "nt heard complaints close would consider pr though", "d": "4/2015"}, {"body": "handful flux projects examples several work server probably going add anything react website", "d": "4/2015"}, {"body": "plugging mine smiley", "d": "4/2015"}, {"body": "nothing planned close", "d": "4/2015"}, {"body": "want chime nt really understand input field change value event like state changed elsewhere update nt see makes sense personally element gets props makes difference problem faced right writing refs element needs updated form state change wrapping method like using jquery personally feel aspect form handling react bit clunky", "d": "4/2015"}, {"body": "running issue ended something like componentdidmount function var thisget function data thatsetstate data data loaded true render function thisstateloaded loading", "d": "4/2015"}, {"body": "nt know related issue misconception part using reactcsstransitiongroup transitionleave false cause strange behaviour code running navigating another tab case code reproduce run example everything works fine open another tab wait sec return example spans nt disappear strange behaviour occurs idea happening", "d": "4/2015"}, {"body": "geoffreymm probably take look discussionpossible solutions", "d": "4/2015"}, {"body": "partially fixed rest sounds like", "d": "4/2015"}, {"body": "came today raise exact issue", "d": "4/2015"}, {"body": "super actionable close maybe rethink api add async rendering support changes batching", "d": "4/2015"}, {"body": "brigand andreypopp description decorators includes api desugaring already implemented babel typescript", "d": "4/2015"}, {"body": "yeah unfortunate something nt great solution khan academy timeouttransitiongroup worked several people linked issue", "d": "4/2015"}, {"body": "yes mention docs would great", "d": "4/2015"}, {"body": "update", "d": "4/2015"}, {"body": "able get tests pass using simulatenative codez jsx andorcomponentjsx render function var props classname chain andor onmouseleave thishandlemouseleave onclick thistoggleediting handlemouseleave function thissetstate editing false andorcomponentjsxtest sets state editing false mouse leaves function var andor reacttestutilsrenderintodocument var node andorgetdomnode test results", "d": "4/2015"}, {"body": "brianblocker tried using instead still trigger event", "d": "4/2015"}, {"body": "ryanzec helps difference worked calling pass amp fail states listed along full test case passed failed itonly onmouseover item sets class focused function let listitems testutilsscryrenderedcomponentswithtype thiscomponent listgroupitem let chosenlistitem listitems update seems also work", "d": "4/2015"}, {"body": "update issue running similar problem", "d": "4/2015"}, {"body": "also ran issue recently wrap child fix bug", "d": "4/2015"}, {"body": "got done", "d": "4/2015"}, {"body": "cc", "d": "4/2015"}, {"body": "visionscaper tip press subscribe right column", "d": "4/2015"}, {"body": "updates suggested best practices one autofill event polyfill seems like sledgehammer solution", "d": "4/2015"}, {"body": "manually call setstate change input value maybe want onchange function e thissetstate value etargetvalue manaulchange function val var input thisrefstestinputgetdomnode inputvalue val thissetstate value val", "d": "4/2015"}, {"body": "syranide spicyj us nt irc resolution", "d": "4/2015"}, {"body": "laser iirc simply better ways approach problem nt rely internals faint memory simply generating unique id component mount using instead could way", "d": "4/2015"}, {"body": "syranide ah okay thanks clarifying team trying come approach including viewspecific token actions errors say failing serverside validation linked back originating views wout introducing granular viewspecific stores approach suggested jingc love able rely unique id set react instead generate something possible take care erin", "d": "4/2015"}, {"body": "laser yeah need unique id component make counter increment new component try avoid adding functionality react easily replicated component code", "d": "4/2015"}, {"body": "spicyj cool makes sense without thinking hard could imagine something like", "d": "4/2015"}, {"body": "syranide unfortunately seems react sometimes goes little bit overboard helpful warnings one cases", "d": "4/2015"}, {"body": "warning often helpful beginners know really nt want handler nt use custom component react composition components maybe example custom component added forms docs", "d": "4/2015"}, {"body": "wontfixing", "d": "4/2015"}, {"body": "want support async server rendering going close issue original docs asked done think issues open track async server rendering", "d": "4/2015"}, {"body": "nt super actionable going close thanks thoughts though css transitions seem surprisingly tricky", "d": "4/2015"}, {"body": "nt think going anything specifically server rendering bundling builds like zpao mentioned might change npm package eventually prebuilt using closure similar", "d": "4/2015"}, {"body": "related", "d": "4/2015"}, {"body": "simenbrekken workaround best know", "d": "4/2015"}, {"body": "convoluted solution anyone else ever wants hack something together handlechange function itempropkey event function assign obj keypath value lastkeyindex var lt lastkeyindex key keypath key obj obj key obj obj key obj keypath lastkeyindex value assumes state object something like", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "anyone interested using different approach case click outside component interacting another objectsignaljs javascript componentdidmount function objectsignalcomponentclickedadd thiscomponentclicked componentwillmount function objectsignalcomponentclickedremove thiscomponentclicked componentclicked function id consolelog componentclicked id check dropdown opened etc cheers", "d": "4/2015"}, {"body": "nt like idea stopping event propagation scale unfortunately react makes hard handle events consistently mix libraries expect events work normal fashion circumventing react together javascript componentdidmount function documentaddeventlistener click thisondocumentclick", "d": "4/2015"}, {"body": "johnarnfield literally reactonclickoutside mixin", "d": "4/2015"}, {"body": "reopened since looks like changes reverted getting similar issue whether jsx used obviously real world example case complex component multitude options charting module need able pass config objects definitely seeing crosstalk props different instances workaround anyone recommend edit actually see problem probably using state", "d": "4/2015"}, {"body": "spicyj still open bug home page examples visible without cloning issue still valid specify specifically examples concerned", "d": "4/2015"}, {"body": "examples", "d": "4/2015"}, {"body": "would probably part site redesign nt feel strongly keeping open though like close", "d": "4/2015"}, {"body": "desire close agree nice framework authors make easy run examples think perfectly valid request nt sure examples talking andor modern homepage satisfied issue sounds like nt", "d": "4/2015"}, {"body": "homepage nt changed two years", "d": "4/2015"}, {"body": "think pretty good idea kind messy normally connect windowdocument level events flux pass app tree would nice could pass option reactrender define app entry point delegate events kind topic could related work making react handle mounted documentbody function sensibly safer mount react document body could delegate body events default", "d": "4/2015"}, {"body": "nelix events propagate bubble proposal", "d": "4/2015"}, {"body": "provide minimum api hook react event system let third party libs build see fit", "d": "4/2015"}, {"body": "could nt agree poster", "d": "4/2015"}, {"body": "brigand suggestion", "d": "4/2015"}, {"body": "would possible introduce concept config support customization like seems like could expanded solve svg attributes issues well making svg attributes config match strings javascript reactconfig htmldompropertyconfig iscustomattribute regexpprototypetestbind dataarialazo az azd properties someotherprop null would trigger reactinjectiondompropertyinjectdompropertyconfig htmldompropertyconfig", "d": "4/2015"}, {"body": "jstrimpel want avoid adding configs make things complicated users api surface area things could go wrong introduce component incompatibilities make difficult us permutations conditions need tested know want get rid attributes whitelist anyway makes sense introduce config take away subsequent release", "d": "4/2015"}, {"body": "oops nt mean close", "d": "4/2015"}, {"body": "jsfb thanks removing whitelist eta", "d": "4/2015"}, {"body": "awesome removing whitelist fix use case perfectly interested see svg wizardry cooking tehnomaag amp dandelany nt considered using react svg could pretty cool", "d": "4/2015"}, {"body": "removing whitelist", "d": "4/2015"}, {"body": "appreciate removal tag name whitelist allowed us support many custom elements however allowed us support custom elements extend native elements require attribute described previous comment resolution would superduperappreciated", "d": "4/2015"}, {"body": "aaronius something want happy take pr adding", "d": "4/2015"}, {"body": "spicyj would totally pr something small like adding nt think would solve entire custom element problem attribute example use attribute extend element extension uses custom attribute named would removed custom element may fail behave properly get around using nfroidure method make really sad info priority remove whitelist would rad", "d": "4/2015"}, {"body": "jhicken currently skip whitelisting check component name contains dash enable component inheritance would need also skip whitelist check component contained attribute would allow arbitrary properties custom element", "d": "4/2015"}, {"body": "jsfb know talked code looks like", "d": "4/2015"}, {"body": "threw commit together jsfb suggested peak let know thoughts", "d": "4/2015"}, {"title": "indirect global event listeners nt work", "body": "global event listeners nt work eg direct string comparison", "num": "1619", "d": "4/2015"}, {"title": "add option view opt view reuse", "body": "tl dr components use imperative templates web components may able want cleanly implement dehydration rehydration components likely rare used way opt view reuse problem imagine component youtube player web component inside user middle watching video close component come back reuse player element explicit rehydration logic may show middle playing old video proposal", "num": "1618", "d": "4/2015"}, {"title": "directive breaks code edits pub serve", "body": "using directive component works first start pub serve make code changes start getting following error using like", "num": "1617", "d": "4/2015"}, {"title": "mobile navigation broken angulariodocsjslatest", "body": "nexus chrome click site menu docs menu flickers nt remain open immediately disappear", "num": "1616", "d": "4/2015"}, {"title": "locationsearch nt take initial query parameters account without", "body": "visit run without enabled get would expect get visit get expected result feel like angular carrying parameters original url case agreed happy pursue pull request thanks", "num": "1613", "d": "4/2015"}, {"title": "using global events eg component throws arraymap error", "body": "nt time full report right let know need information", "num": "1611", "d": "4/2015"}, {"title": "able load templateurls unit tests", "body": "need something analogous allows components using load template unit testing", "num": "1610", "d": "4/2015"}, {"title": "unit test setup available bundled angular", "body": "easy consumers angular set unit testing basic setup shown scenarios outlined version angular including testbed available use unit testing components solution solving loading karma available", "num": "1609", "d": "4/2015"}, {"title": "dynamic updates hierarchical structures throwing exception", "body": "use case ability create update hierarchical structures data fetched server code plunk click click element see following stack trace", "num": "1607", "d": "4/2015"}, {"title": "use hostsetters", "body": "alpha used annotations set css class work around due something like js component selector component lifecycle onchange properties active active class cmp constructor propertysetter classactive activeclasssetter thisactiveclasssetter activeclasssetter onchange set class based property thisactiveclasssetter thisactive super hacky worked however since alpha work using eventemitters ported code something like js component selector component lifecycle onchange properties active active hostsetters activeclasssetter classactive class cmp constructor thisactiveclasssetter new eventemitter onchange thisactiveclasssetternext thisactive unfortunately nt work class set rather think using wrong anybody give pointers", "num": "1606", "d": "4/2015"}, {"title": "revert onlyelementselector restraint component selectors", "body": "use case actually two components differentiated using element selector nt work", "num": "1602", "d": "4/2015"}, {"title": "router expose toplevel configs", "body": "tracking issue need get router dev guide unblocked", "num": "1600", "d": "4/2015"}, {"title": "best practice prefix component directive selectors properties components", "body": "problem assume following html snippet looks like using browser looks like properties surprise imagine actual implementation javascript component selector button properties title view class button title string directives selector tooltip properties tooltip class tooltip tooltip string seeing implementation developer realizes native component separate unrelated directive decorates creates level surprise developer effects readability html proposal best practice enforced recommend components prefixed properties directives prefixed implication let rewrite example rules immediately clear custom component property separate directive given different prefixes unlikely communication channel comes yet separate library unlikely somehow communicate prefix well remember short hand nt prefix would look like property case", "num": "1598", "d": "4/2015"}, {"title": "bug injectables dynamiccomponent nt recognized", "body": "works component injectable broken dynamiccomponent injectable", "num": "1596", "d": "4/2015"}, {"title": "redo bootstrapping logic", "body": "javascript ng platform cookies createapp bind exceptionhandler toclass myexceptionhandler loadcomponent mycomponet bind myserivice toclass myservice class platform dispose class application componentref componentref dispose whenready class componentref dispose bootstrap type cmpbind appbind pltformbind application var platform platformcreate pltformbind var app platformcreateapp appbind var componentref apploadcomponent componentref return app bootstrap myapp whenready rootcomponent rootcomponentinit", "num": "1594", "d": "4/2015"}, {"title": "xhr ajax amp rest support like restangular", "body": "hi nice update docs released yesterday great work guys looking xhr module looked throught source code tests ca nt find anything also nothing docs perhaps nothing yet nt another question plan make rest support like restangular much powerful ngresource regards", "num": "1591", "d": "4/2015"}, {"title": "ngselect showing functions length ngoptions inherited array", "body": "hi please take look fiddle open extended array dropdown select see sorts things like functions length etc happening angular working fine ideas thanks san", "num": "1588", "d": "4/2015"}, {"title": "automatically loadinject commonly used directives templates", "body": "directives like foreach etc often used many templates simplify process spirit writing less code sake maintainability might good idea api project pass common directives startup templates preinjected common directives example import preloader foreach preloader directives foreach template url templatesmainhtml directives myowndirective approach directives passed template would foreach amp myowndirective catch executed anything else function also used configs directives", "num": "1586", "d": "4/2015"}, {"title": "add properties view", "body": "forking larger issue", "num": "1582", "d": "4/2015"}, {"title": "querylist dart needs package observeobservablelist", "body": "", "num": "1580", "d": "4/2015"}, {"title": "timeout gets invoked repeatedly", "body": "using angular version", "num": "1576", "d": "4/2015"}, {"title": "min quickstart error", "body": "hi min quickstart contains javascript import component template bootstrap annotation section component selector myapp view template hello name component controller class myappcomponent constructor thisname alice bootstrap myappcomponent working eg view annotation nt included import section code throws error although change view annotation template like javascript import component template bootstrap annotation section component selector myapp template inline hello name component controller class myappcomponent constructor thisname alice bootstrap myappcomponent provides everything works fine feature bug", "num": "1575", "d": "4/2015"}, {"title": "confused file router issues", "body": "bit confused repo file issues regarding router brians want pull wip copy play", "num": "1571", "d": "4/2015"}, {"title": "build running filehandles running tests", "body": "sporadically getting error node emfile many open files suspect could attributed leaking filehandles new broccoli build since creates large number temporary tree directories lots files igorminar", "num": "1570", "d": "4/2015"}, {"title": "switch directives working", "body": "nt know known issue working work dartium expected chrome console throws invalid argument error example app dart import package imports go away soon import package show reflector import package show reflectioncapabilities void main temporarily needed reflectorreflectioncapabilities new reflectioncapabilities bootstrap app component selector app view template test directives const class app bool show true produces following error tested alpha", "num": "1569", "d": "4/2015"}, {"title": "dynamiccomponents respect injectables property", "body": "dynamiccomponent annotation injectables property gets parsed separately component annotations information later gets dropped directivemetadatareader component checked", "num": "1566", "d": "4/2015"}, {"title": "support async bindings directives injectables", "body": "want able create binding injected dynamically loaded component instance nt available dynamically loaded component already constructed would look something like along probably actually going use api like one thought worth filing issue top track feature regardless", "num": "1563", "d": "4/2015"}, {"title": "directiveproperties typed", "body": "right final dynamic properties afaict must map", "num": "1561", "d": "4/2015"}, {"title": "chrome app complains require defined", "body": "tried building chrome app around demo code getting error uncaught referenceerror require defined line included stack overflow question posted code manifest question details", "num": "1559", "d": "4/2015"}, {"title": "error loading module another dir", "body": "get found window anonymous function anonymous function object definepropertyvalue object definepropertyvalue globalupgradesystemloaderefetch system globalupgradesystemloaderefetch system globalupgradesystemloaderefetch system anonymous function error loading articlerest error loading articlerest scriptscart found articlerest buildscriptsarticlerestjs nt seem find files found html looks like script systemimport scriptscart buildscriptsarticlerest script cart", "num": "1556", "d": "4/2015"}, {"title": "support dart enums templates", "body": "", "num": "1552", "d": "4/2015"}, {"title": "onetime property binding possible", "body": "following scenario html object passed component component fires event change happening given value event handler writes new value back problem whenever changes event fired results infinite loop best way deal way setup property binding evaluated", "num": "1551", "d": "4/2015"}, {"title": "hostlisteners work component used bootstrap", "body": "hi guys following example noticed seem work component used bootstrap angularjs within example trigger within eventtestdecorator eventtestcomponent app component used bootstrap expected behavior javascript import decorator component view bootstrap decorator selector eventtestdecorator hostlisteners window resize onresize event class eventtestdecorator onresize event consolelog eventtestdecorator event component selector eventtestcomponent hostlisteners window resize onresize event view template class eventtestcomponent onresize event consolelog eventtestcomponent event component selector app hostlisteners window resize onresize event view template directives eventtestdecorator eventtestcomponent class app onresize event consolelog app event bootstrap app cheers gion", "num": "1548", "d": "4/2015"}, {"title": "question use typescript today", "body": "trying get prototype rest client thingy work writing typescript problem nt know import typescript heard writtenrewritten typescript moment use files wanted know repo ts dts files use typescript started typescript excuse understood something wrong", "num": "1546", "d": "4/2015"}, {"title": "angularjs custom filter orderby sortpredicate working", "body": "problem array recipe objects recipe object comments want sort array angularjs controller using filter service provided angular scoperecipes filter orderby scopedata function recipe return recipecommentslength giving required results however able achieve desired results using js array sort functionality like scopedatasort function b acommentslength lt bcommentslength return bcommentslength lt acommentslength return return plunkr scenario thanks advance please help", "num": "1545", "d": "4/2015"}, {"title": "call angular directives", "body": "possible use angular directives uigrid within angular components yes please point info", "num": "1543", "d": "4/2015"}, {"title": "local vars read lhs", "body": "see issue fiddle two nested display list parents list children problem children property called parent apparently conflicts var parent instatiated directive nt know known problem sorry try fix", "num": "1542", "d": "4/2015"}, {"title": "change dynamiccomponentloaderloadintonewlocation use abstraction native dom", "body": "currently needs element selector load component webworker separation rendering another platform needs abstraction abstraction must still allow somehow creation new element component loaded requirement overlays overlaid component loaded document body", "num": "1541", "d": "4/2015"}, {"title": "weird behavior animatecss ngif quick toggling elements", "body": "angular version wrote custom javascript animation applied simple behavior correct toggle item slides click middle animation slides back position click yet slide ngif creates new dom content weirdly enough old dom content starts animating along new content expected behavior know workaround", "num": "1540", "d": "4/2015"}, {"title": "hostproperties binding work dynamically loaded components", "body": "using nothing", "num": "1539", "d": "4/2015"}, {"title": "remove concept viewport directives", "body": "every directive ask kill directives decorator directives background every directive ask insert next element directives happen element normalization dropped enforcement elements ca nt contains directives could job directives proposal remove make direct injectable would ask would work non elements delete directives allow directives everywhere", "num": "1536", "d": "4/2015"}, {"title": "precompute light dom insertion points emulated shadow dom", "body": "currently emulated shadowdom runs distribution turns selectors simple selectors identical selectors use directives means know selectors ahead time looking component template precompute nodes need distributed nt need execute", "num": "1535", "d": "4/2015"}, {"title": "upload form field", "body": "plan implement sort input file field somehow improve featureds native input file field input file field unsupported library ngmodel validation really nice component integrates new form component allowing make file uploads sure possible wanting know plan something like regards", "num": "1533", "d": "4/2015"}, {"title": "modulerun equivalent angular", "body": "wonder something like angular angular nt anymore good think still cases want execute code everything inside component compiled something initially executed currently playing instance get la js bootstrap mycomponent ref gt let app refinstance apprun whereas method needs executed everything inside compiled also tried using seems executed several times per second", "num": "1530", "d": "4/2015"}, {"title": "google chrome", "body": "error display browser google chrome", "num": "1523", "d": "4/2015"}, {"title": "fails firefox", "body": "tried use violate strict mode ff nt run error syntaxerror strict mode code functions may declared top level immediately within another function", "num": "1522", "d": "4/2015"}, {"title": "update value using uppercase chars local variant", "body": "assuming input field local vairant follow element shows local variant local variant lowercase works nt work contains uppercase chars example plunker rename variant works", "num": "1521", "d": "4/2015"}, {"title": "circular dependencies work", "body": "using alpha application code import component view bootstrap parent ancestor import optional component selector view template export class children array parent constructor parent parentmenu thisparent parentmenu thisparentregisterchild thischildren registerchild child childrenpush child component selector view template export class parent children array constructor optional parent optional parent thisparent thisparentregisterchild thischildren registerchild child childrenpush child component selector view template export class children array parent constructor thischildren registerchild child childrenpush child component selector myapp view template aabb directives class myapp constructor bootstrap myapp html file code test deps", "num": "1519", "d": "4/2015"}, {"title": "slight errors template silent failures", "body": "wrote accident looking dom console indication done something illegal caused event wire one example nothing correct term error", "num": "1516", "d": "4/2015"}, {"title": "di bind type equivalent specifying type", "body": "example work little nonintuitive work either error improved implement interface", "num": "1515", "d": "4/2015"}, {"title": "click events nt handled icon fonts", "body": "version tested chrome os x plunker clicking lightbulb test text pop alert alert appears clicking test bug also seems present", "num": "1513", "d": "4/2015"}, {"title": "reexport shadowdomstrategy nativeshadowdomstrategy others", "body": "following plunker work", "num": "1510", "d": "4/2015"}, {"title": "querylist fails look directives prebuiltobjets injected", "body": "reproduce issue modify last sample injecting prebuilt object constructor decorator example result running unit tests raises following error said insertion must come hydration element injector trees attached consequence injector prebuilt objects yet created hence error", "num": "1507", "d": "4/2015"}, {"title": "registering custom pipes", "body": "far see way registering custom pipes currently recall properly used attribute level ca nt see vsavkin plans custom pipes especially directive bindings pipes going disappear regardless registering custom pipes issue triggered attempt fix", "num": "1506", "d": "4/2015"}, {"title": "controlupdatevalue working", "body": "seems form controls amp local variables set changed within class controller basic use case would resetting text box empty string plnkr example line imagined would provide way change feature simply undercooked another solution", "num": "1505", "d": "4/2015"}, {"title": "elementload issue safari", "body": "app use image crop tool image cropping one trouble safari crop stop work event load fired browsers ok use broadcasttechnic ok architecture bad ugly code controller event fired image selected directive attach crop image sometimes nt work safari ok browsers directive works wrong safari load event fired always", "num": "1501", "d": "4/2015"}, {"title": "bootstrap remove unused light dom entry component", "body": "let say bootstrapping app text appears component bootstrapped ready expose shadow dom since component shadow dom instead light dom get displayed disappears however soon put actual dom nodes light dom like light dom replace shadow dom component simply stays seems like bug", "num": "1499", "d": "4/2015"}, {"title": "question general information property binding", "body": "hello first preferred terminology call property binding html wondering could give clues code could look behind magic binding resolution example completely understand bindings works without magic html regular chained property accessor would something like hood possible using generic approach accessing setting properties dom element however nt understand magic starts done let say classlist dom element following great html dom api providing property elements name class neither classlist array like list supports set named keys truthy falsy wonder transform apply classlist browsing code could nt find spot concerned cheers gion", "num": "1497", "d": "4/2015"}, {"title": "question property binding strict equality", "body": "hi wondering code works using strict equality expression nt strict equality yet supported expression parser whats plan expression fails error parser error unexpected token null column namevalue angular null", "num": "1496", "d": "4/2015"}, {"title": "renderviewcontainerclear return view viewpool", "body": "esentially disables view pool render side", "num": "1494", "d": "4/2015"}, {"title": "allow transplanting protoviews viewcontainers", "body": "goal ability declare templates one location rendered another implementation created declaration location local context injection etc also implies inserted declaration location destination receive set local vars destination insert render location ionic example html action place javascript component selector toolbar class toolbar viewcontainer viewcontainer constructor viewcontainer viewcontainer thisviewcontainer viewcontainer addview view view viewsetlocal index thisviewcontainerlength thisviewcontaineradd view viewport selector toolbarpart class constructor viewfactory viewfactor toolbar toolbar var view viewref viewfactorycreate toolbaraddview view issues template expressions need executed context template declared created dom inserted different location insert location able insert values inserted provided template declares variable table example svg charts example issues context injecting getting hold", "num": "1492", "d": "4/2015"}, {"title": "failure declare directives used component result compile time error", "body": "version directive silently fails div tname corresponding component declare directive shown lack compile time runtime error alert developer results developers spending lot time looking wrong place reason component nt rendering expected", "num": "1491", "d": "4/2015"}, {"title": "expressions event handlers fail complain undefined parameters", "body": "version given would expect cause either compile time error least run time exception instead simply passed function exception logged thrown", "num": "1490", "d": "4/2015"}, {"title": "exceptions swallowed zonejs", "body": "using angular dev build tried register windowonerror listener intercept errors noticed several errors making handler particular scenario typo code threw code transpiled module loader module loader correctly rethrows error zone catches consolelogs stack trace without forwarding error error handlers behavior surprising ideally zone code augment current exception attach long stack trace rethrow behavior documented configurable", "num": "1489", "d": "4/2015"}, {"title": "basic usage example", "body": "hey saw today couple bundled js link really want try angular happy see bundles simply ca nt get working could someone make real easy example please uses singlefile bundle simple component think would really helpful many us thanks", "num": "1488", "d": "4/2015"}, {"title": "access component children components inside shadow dom", "body": "annotations allow us query children components light dom component get projected shadow dom wonder way access children components component shadow dom example app component like click class app run foo bar something foo bar let say want execute button clicked also initial load child components done could use lifecyle like see nt really solve problem since still way access children components way think solve right introduce another wrapper component basically get children lightdom projects shadow dom using access accordingly also need move method component js class runner constructor query foo query foo run foo bar way go", "num": "1486", "d": "4/2015"}, {"title": "library need finals", "body": "tokens defaultpipes srcchangedetectionchangedetectiondart relates tweaks another tool great love keep open resolved though", "num": "1485", "d": "4/2015"}, {"title": "angular error ngif", "body": "strange error showing reproducably within app yet able reproduce stand alone example hesitant report reproduce outside app gist problem dialog ngif root element html content done button clicked invokes within method following error thrown testing narrowed particular issue works fine also seems happen inside safari tested inside firefox chrome problem", "num": "1484", "d": "4/2015"}, {"title": "dart bind normal string fields", "body": "based example shown next seems bind input normal text fields instead create field type syntax nt look bad although intuitive angulardart mostly use classes fields component bind internal values setting data page extremely easy sending back server big problem non data structures fields type serialization issues fromto json fromto mongodb way solve without creating special classesmethods convert fromto control structures", "num": "1483", "d": "4/2015"}, {"title": "dart propagate change input", "body": "propagate change due click back example html hello namevalue cristian dart library testcomp import package component selector myapp view templateurl componentstesthtml directives const const xxx workaround formdirectives const controlgroupdirective controldirective checkboxcontrolvalueaccessor defaultvalueaccessor class appcomponent control name new control world", "num": "1482", "d": "4/2015"}, {"title": "imperative view shadow dom integration", "body": "goals create imperative views use tag project light dom provide light dom bootstrapped child components", "num": "1481", "d": "4/2015"}, {"title": "render layer cleanup", "body": "open todos discuss use move stay although mostly internal service improve performance see missing smaller refactorings remove methods move logic x align usual use least integration tests use render layer directive well wait directiveref land get bound element index x pass see missing unit tests corecompilerprotoviewfactory corecompilerviewmanagerutil corecompilerviewcontainerref renderdomdomrenderer docs inline docs mark public entries via", "num": "1480", "d": "4/2015"}, {"title": "benchmark cost decorators", "body": "intend use decorators location markers tooltips scale tables thousands cells cost decorator must negligible", "num": "1479", "d": "4/2015"}, {"title": "add appviewref appviewcontainerref appviewmanager low level public api", "body": "current classes contain lot internal state part public api also central api advanced users want work directly views propose following add following methods javascript class appviewmanager createinplacehostview parentcomponentlocation elementref hostelementselector hostprotoview appprotoview injector injector appviewref destroyinplacehostview parentcomponentlocation elementref hostviewref appviewref createdynamiccomponentview location elementref componentprotoview appprotoview component directivemetadata injector injector createviewinviewcontainer viewcontainer elementref atindex number protoview appprotoview injector injector null appviewref detachviewinviewcontainer viewcontainer elementref atindex number appviewref insertviewinviewcontainer viewcontainer elementref atindex number view appviewref destroyviewinviewcontainer viewcontainer elementref atindex number clearviewcontainer viewcontainer elementref class would reference also allows make reference invalid eg finally wo nt give directives api current viewcontainer remove api current allows us remove fields current eg needed current viewcontainer part di note renderer side already structure place using renderer view manager see internal refactorings going along adding done also renderer side move recursion views eg create single view recurse eg hydrate single view recurse benefit unit tests become lot simpler", "num": "1477", "d": "4/2015"}, {"title": "dart browseradapter take node", "body": "right leads type error dartium checked mode triggered shadow dom emulation uses method also remove text nodes see", "num": "1473", "d": "4/2015"}, {"title": "cssclass decorator directive executes static class attributes", "body": "native button uses decorator directive set class conditionally executing code get following error pointers get pipes need", "num": "1472", "d": "4/2015"}, {"title": "singlefile bundles available npm", "body": "checked latest singlefile bundles ex available npm push people depending apps obliged bundle files", "num": "1471", "d": "4/2015"}, {"title": "procons using query vs parent ancestor", "body": "let say build tabs component two components js class tabs class tab later used like order make component work component needs charge internal collection two ways inject order get hold parent component use methods extend internal collection pretty much angular way need ask parent directive controller order communicate downside constructor nt access children use annotation query children like seems much straight forward also component nt know anything still wonder right way go downsides nt seen yet thing think component maybe require type case option would better since code would error case somebody uses without wrapping", "num": "1470", "d": "4/2015"}, {"title": "proper way access querylist results", "body": "accessing child components annotation like js constructor query type query type gives us object comes methods etc results query located since underscore name thought might rather considered private could nt find method alike okayish access better way get hold", "num": "1469", "d": "4/2015"}, {"title": "add support pure dart modules build system", "body": "problem dart code core angular modules edited analyzed simultaneously code needs transpiled pubspec templates need filled analyze code goes pointless edit code obvious reasons therefore today possible use dart ides dart code meaningful way currently dart transformers analyzer plugin dartonly coding experience suffers solution tl dr introduce new type module build system dartonly module opened edited tested ide analyzable ide compiler warnings could caught much earlier without needing transpilation build gulp would need copy dart files dist rewrite pubspecs match dist file structure details add new folder contains plain dart packages conforming pub folder convention plain pubspec template blank blank points distdart add new gulp task copies everything excluding folders pubspecyaml pubspeclock rewrite files", "num": "1467", "d": "4/2015"}, {"title": "component reference type ngelement native element", "body": "considering code html reference end passed whereas native elements bug know whole thing changed reasoning behind", "num": "1465", "d": "4/2015"}, {"title": "local template variables vs viewport execution context", "body": "following scenario throws error makes sense translated viewport directive shorthand syntax canonical version see looks actually quite okay shorthand syntax translates code wo nt work way trying evaluate expression available current execution context document scenario make clear nt work wan na find way make somehow work order keep convenient", "num": "1464", "d": "4/2015"}, {"title": "running benchmarks fails faviconico", "body": "running benchmark google chrome failing faviconico dart sdk detected using gulpfile tmprunnesangularresourcesangulargulpfilejs starting finished ms server started port connect deprecated resheadersent use standard resheaderssent testing dartium starting selenium standalone server launcher running instances webdriver selenium standalone server started started benchmark description appsize forcegc false iterationcount lang dart regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ouside script ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ouside script ms scripttime script execution time ms including gc render failed load resource server responded status found fbenchmark description appsize forcegc false iterationcount lang dart regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ouside script ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ouside script ms scripttime script execution time ms including gc render failed load resource server responded status found fbenchmark description appsize forcegc false iterationcount lang dart regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ouside script ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ouside script ms scripttime script execution time ms including gc render failed load resource server responded status found fbenchmark description appsize forcegc false iterationcount lang dart regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ouside script ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ouside script ms scripttime script execution time ms including gc render failed load resource server responded status found fbenchmark description appsize forcegc false iterationcount lang dart regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ouside script ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ouside script ms scripttime script execution time ms including gc render failed load resource server responded status found fbenchmark description appsize forcegc false iterationcount lang dart regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ouside script ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ouside script ms scripttime script execution time ms including gc render failed load resource server responded status found f", "num": "1463", "d": "4/2015"}, {"title": "query support differentiating direct descendant children", "body": "tests show direct children tests show happens direct child also nondirect child us case x add tests show inject nondirect child descendants using x create new annotation extends x add tests", "num": "1462", "d": "4/2015"}, {"title": "bad error message", "body": "user got stuck asked help caitp mentions slack one particular thrown surprised type assertion stuff nt catching inline cache gets", "num": "1460", "d": "4/2015"}, {"title": "directive naming conventions need clearer", "body": "nt found specific documentations stating explicitly boldly directives must named camelcase spent long time trying figure particular directive working nice see mentioned clearly start documentation controllers reading angular ca nt name directive testdirective named testdirective work please let know error", "num": "1456", "d": "4/2015"}, {"title": "transformdirectiveprocessorrewriter assumes scope might", "body": "turn package warnings benchmark projects see warnings like dart library angularcorefacademathngdepsdart import mathdart import dart core show double num import dart math math bool visited false void initreflector reflector visited return visited true code assumes always available core imported name wo nt", "num": "1455", "d": "4/2015"}, {"title": "need", "body": "old angulardart served two purposes map attribute name setter name specify type binding etc exist pipes gone one last usecase list serves sort documentation setters bound seems weak core api simply allow developers bind public setter component class logging start discussion cc vsavkin mhevery", "num": "1454", "d": "4/2015"}, {"title": "integrating convention configuration angular", "body": "consideration given integrating default conventions angular may something already nt seen something already planned wanted explore mean default conventions typical component looks like javascript import bootstrap component view component selector mycomponent view templateurl mycomponenthtml class mycomponent constructor thisname component adding smart default conventions could look like javascript import bootstrap component view component class mycomponent constructor thisname component default conventions would buy us component selector defaults mycomponent much like directives today angular view defaults url mycomponenthtml default view location would determined need add view situation cases templateurl different inline template view added realize nt cover component injectables view directives still fan define properties may needed may way add convention well sure several cases conventions could potentially used adding smart default conventions boilerplate code could eliminated still allowing people override defaults supplying proper annotations needed would great people moving framework code would appear much less intimidating first glance since many nt used annotations also great devs since less code would written cases might even simplified convention importing default modules used case example standard component needs bootstrap component view might wrapped like javascript import componentdefault component class mycomponent constructor thisname component convention suggestions already planned let know personally feels like way much boilerplate code something relatively simple default conventions would clean", "num": "1451", "d": "4/2015"}, {"title": "add sugar accessing values input types", "body": "example add every reference typing like quite lot angular wondering could sensible defaults maybe element types could pass instead angular likely thing want", "num": "1448", "d": "4/2015"}, {"title": "template local variables dash work", "body": "works actually supposed work warn users", "num": "1447", "d": "4/2015"}, {"title": "api doc missing dynamicchangedetection class function export missing", "body": "dynamicchangedetection class jitchangedetection class previously private functions made public doc comments functions nothing shows api docs previously issues duplication list exported public docs seems like still quite fixed", "num": "1446", "d": "4/2015"}, {"title": "tag importnode used incorrectly breaks custom element upgrading", "body": "nodes inside template need imported main document order upgraded see example importing content instead imports element content since custom element registry contents inert content nodes upgraded remain unupgraded appended document clones template access content clone content first iterate clone later", "num": "1442", "d": "4/2015"}, {"title": "docs link cleanup removed links doc found", "body": "mhevery doublecheck x appview x dynamicchangedetection left function public ca nt link directly class private x jitchangedetection left function public ca nt link directly class private x elementinjector x viewport x zone", "num": "1437", "d": "4/2015"}, {"title": "provide doc type pick references", "body": "search dibindingjs make links doc exists", "num": "1433", "d": "4/2015"}, {"title": "dgeni output provide way link members within classes", "body": "sort inpage anchor would nice", "num": "1432", "d": "4/2015"}, {"title": "add public doc lifecycleevent", "body": "also make sure find ref doc annotationsannotationsjs", "num": "1431", "d": "4/2015"}, {"title": "dgeni process files well", "body": "see", "num": "1429", "d": "4/2015"}, {"title": "question property binding components", "body": "seems confusing thing know writes element property however component annotation actively declare actually makes sense want value written component dom element reflected directive property however turns declared property component annotations ever written component dom element whatsoever long standard html element property means dom element properties actually never touched explicitly declare could imagine turns element actually directive reason write directive dom element property directive works directive property need declare like make work allow different naming like sure required make work already write elementdirective properties syntax", "num": "1425", "d": "4/2015"}, {"title": "api docs di related copyedit issues", "body": "x module description needed x module description needed x module description needed x module description needed x module description needed x module description needed x creates synchronous eager dependency eager dependency either typo mean arceager link good ref needs bit text changed please check x injects found injecting angular assume annotation changed please check x available rewrote available operators correct x many documentation entries nt public annotations nt appear api docs think probably error added annotation please make sure nt make much public vs private x reads done retrive looks like rest sentence missing changed retrieved make grammatical think probably quite right x changed resolution process flattening multiple nested lists converting individual bindings list resolvedbinding list resolvedbinding objects objects correct noun x seems doc missing member could nt figure parameter shown binding doc output coming x lot doc marked public annotations really internal please check x subsequent doc entries begin used retrieve grammatically inconsistent doc retrieves correct please fix left asis x put lot nouns please check x start exported doc comment appear generated docs doc incomplete x text module included module must import forms module explicitly appears module modules also note", "num": "1419", "d": "4/2015"}, {"title": "nt use example docs", "body": "couple places binding property used example actually great idea spec say elements attribute displayed however goes suggest browsers implement via css means mechanism though element actually hidden problem rule high specificity low fact single css class rule overcome html box display block box still visible tested chrome firefox mobile safari mainly filing issue document nt used future reference", "num": "1417", "d": "4/2015"}, {"title": "shadow dom emulation directive nt play well content projection", "body": "scenario parent component template html tabname child component template html app template result look like instead seems upon condition changing previous content always correctly removed see code action pull branch visit", "num": "1416", "d": "4/2015"}, {"title": "fails windows", "body": "low priority running implicitly via windows complains fails would nice handled gracefully", "num": "1415", "d": "4/2015"}, {"title": "import primitive removed", "body": "javascript import int var int breaks dart implied import dart analyzer complains needed remove primitive imports", "num": "1414", "d": "4/2015"}, {"title": "use query annotation building treelike structure", "body": "suppose following ideally component utilizing could optionally receive directives directly beneath instead deeper use case already covered planned jelbourn vsavkin", "num": "1412", "d": "4/2015"}, {"title": "try catch generated dart code frequently swallows stack traces", "body": "librarywide problem following used stack trace loses context caused original exception makes debugging lot difficult yjbanov mhevery", "num": "1410", "d": "4/2015"}, {"title": "need way capture stack traces transpiled dart code", "body": "transpile x detect replace add x detect rethrow replace", "num": "1407", "d": "4/2015"}, {"title": "rename providererror bindingerror", "body": "di concept provider present anywhere else di instead concept bindings therefore addition never thrown subclass throw therefore x gt x gt x store originalexpection key properties currently serializes string destroys original exception capture stack trace see", "num": "1406", "d": "4/2015"}, {"title": "track output size time", "body": "maybe travis", "num": "1404", "d": "4/2015"}, {"title": "builtin authentication module", "body": "coming django side nice fall back default authentication module included gets updates patches core contributors new router would great option pull default authentication setup route amp customize handle login logout csrf authorization dict sort route requires auth gets redirected login page", "num": "1403", "d": "4/2015"}, {"title": "create hostattributes support", "body": "goal able statically describe attributes host element example needs declared proper behavior imperatively would unnecessarily slow changing template effective api", "num": "1402", "d": "4/2015"}, {"title": "improve errors reporting", "body": "currently angular throws exception template expressions syntax error ideal behavior static analysis need show syntax errors user good show one one exceptions nt include exact locations machine form locations message would fragile parse", "num": "1401", "d": "4/2015"}, {"title": "upgrade node newer", "body": "currently ca nt upgrade benchpress tests failing see need investigate happening likely due webdriver issue sort specific node", "num": "1396", "d": "4/2015"}, {"title": "many analyzer warnings", "body": "make change get", "num": "1395", "d": "4/2015"}, {"title": "benchpress causing webdriver commands queue unexpectedly", "body": "normally seleniumwebdriver node module wait webdriver command complete scheduling new one example benchpress running somehow gets around causes multiple commands queue symptom stale element errors upgrading node bad ordering occurs node", "num": "1394", "d": "4/2015"}, {"title": "fix dart analyzer errorswarningshints web directories", "body": "dartanalyzer script missing number things cleanup", "num": "1392", "d": "4/2015"}, {"title": "unsubscribe event emitters dehydration", "body": "create directivea event emitter store reference directivea global variable dehydrate host view directivea rehydrate call directivea fire event event emitter expected result view receive event actual result view receive event", "num": "1391", "d": "4/2015"}, {"title": "api docs add doc zone", "body": "link zone nt actually doc yet", "num": "1388", "d": "4/2015"}, {"title": "api docs private class member cd shows changedetectorref docs", "body": "see class member docs even though underscore private", "num": "1386", "d": "4/2015"}, {"title": "api docs add doc optional annotation", "body": "", "num": "1385", "d": "4/2015"}, {"title": "docs gen docs nt show publicdocs output dgeni", "body": "generate see build", "num": "1384", "d": "4/2015"}, {"title": "try compiling angular together apps using", "body": "see much might benefit form globally optimizing compiler eg closure compiler possibility tree shaking advanced optimizations save lot code size make app faster eg inlining mhevery fyi", "num": "1383", "d": "4/2015"}, {"title": "try using uglify angular", "body": "see much benefit get igorminar fyi", "num": "1382", "d": "4/2015"}, {"title": "provide nicer api usage", "body": "make sure use angular reasonable dslstyle syntax eg making things mhevery fyi", "num": "1381", "d": "4/2015"}, {"title": "build tooling determine source maps code contributes binary size", "body": "eg figuring many bytes finally concatenated minified angular deliverable change detection igorminar fyi", "num": "1380", "d": "4/2015"}, {"title": "get reliable numbers minifiedcompiled angular size", "body": "currently nt really good overview rkirov tbosch maybe something one tbosch could track statistic time", "num": "1379", "d": "4/2015"}, {"title": "warn user using wrong binding syntax", "body": "look giving warnings user uses wrong binding syntax eg would nt completely comprehensive since way knowing means web component might reasonable something standard elements angular directives", "num": "1378", "d": "4/2015"}, {"title": "change viewcontainer use move instead insertdetach", "body": "right methods user create view detach keep around insert later however user could also forget destroy prevent kinds errors probably want operation replaces operations viewcontainer regarding implementation implementation directive injector feature needs changed use move instead detachinsert would nice change detection would report changes collections form previous index new index rather form operations perform original collection get new collection eg splices see arrayobserve", "num": "1377", "d": "4/2015"}, {"title": "add dgeni support squarebracket links let know syntax using", "body": "petebacondarwin currently bunch refs docs like directive replaced link docs page currently passed plaintext generate links", "num": "1371", "d": "4/2015"}, {"title": "common querylist javascript dart", "body": "currently implemented twice javascript dart means duplication code documentation since thing different iterate method proposed fix javascript import basequerylist basequerylist class querylist extends basequerylist common methods go basequerylistdart", "num": "1368", "d": "4/2015"}, {"title": "make lifecycleregisterwith private", "body": "", "num": "1366", "d": "4/2015"}, {"title": "event binding switching", "body": "alpha event binding nt work example works fine alpha plunk demonstrates keyup behavior type something input field", "num": "1359", "d": "4/2015"}, {"title": "output version number", "body": "hi angularjs output following want adopt also angular feature utility development example thanks", "num": "1357", "d": "4/2015"}, {"title": "dynamic usecases ngclass", "body": "possible use ngclass dynamically generate relationship csssass file could invokeinstantiate animations build better finite state machine instead bool expressions seen ngstyle color identitycolor ngclass red matryoshkanodecolor red blue matryoshkanodecolor blue green matryoshkanodecolor green purple matryoshkanodecolor purple orange matryoshkanodecolor orange possible use ngclass dynamically generate directive annotation html element instead bunch ngif type directive", "num": "1355", "d": "4/2015"}, {"title": "refactor dynamiccomponentloadercompilerrenderer support user views make consistent", "body": "realization bootstrap inserting ng component user render view start code plain dom element want add ng component really separate compilation instantiation protoviews load dynamic components instantiation happen sync wrong protoview used multiple times instead creating render views inserting time eg used used used used compilecompilewithhost type works nt create renderviews hydrate app side renderer eg clone use element given location protoview still reusable nice side benefit soon render views hydrated guaranteed know parent views use case add new view viewcontainer use case dynamic components use case overlay components assuming dynamic viewcontainer discussed provide service bindings already compile call protoview used later viewcontainer ie add overlay components see use case ng components user views bootstrap", "num": "1351", "d": "4/2015"}, {"title": "throw directiveresolver directives type", "body": "descriptive message exactly one directive annotation allowed per type found multiple directive annotations class type", "num": "1350", "d": "4/2015"}, {"title": "measure dynamic vs static component instantiation speed", "body": "dynamic component instantiation must fast static component instantiation major usecase large table dynamic cell content issue implementing two new benchmarks list cell components created statically list cell components created dynamically benchmark parameters iterations number cells static benchmark minimal component drops single bindings dynamic benchmark loads using api success metric numbers two benchmarks within", "num": "1345", "d": "4/2015"}, {"title": "possible override exceptionhandler", "body": "issue exceptionhandler injected compiler primordial injector override things root component injector assigning mhevery come spec", "num": "1344", "d": "4/2015"}, {"title": "merge binding resolutionflatteningindexing", "body": "per comment could reduce number intermediate data structures resolved flattened indexed bindings single pass note low priority code currently performancecritical", "num": "1341", "d": "4/2015"}, {"title": "clean gulp testunitcjs", "body": "", "num": "1340", "d": "4/2015"}, {"title": "disable url decoding resource", "body": "anyway disable url decoding instantiating resource searching older solution works involves hacking core nt happily look contributing pr nt security issues", "num": "1339", "d": "4/2015"}, {"title": "files contain double sourcemaps mappings", "body": "install repository npm folder created files sourcemap files files two sourcemaps mappings end instead one example js export srccoreannotationsvisibility export srccorecompilerinterfaces export srccoreannotationstemplate export srccoreapplication export srccoreannotationsdi export srccorecompilercompiler export srccorecompilertemplateloader export srccorecompilerview export srccorecompilerviewcontainer export srccoredomelement sourcemappingurlcorejsmap sourcemappingurlcoremap folder contains file coremap second mapping correct one problem first mapping loaded second one ignored case webpack sourcemaps loader", "num": "1338", "d": "4/2015"}, {"title": "deregister handlers destroy", "body": "event handler registered like angular add handler array internally deregister scope destroyed", "num": "1335", "d": "4/2015"}, {"title": "value service empty function returns null object", "body": "use service access testvar variable anymore comment return works myappservice test function thisvar local return", "num": "1328", "d": "4/2015"}, {"title": "maximum call stack size exceeded compiling component view template templateurl", "body": "given javascript component selector app view class appcomponent bootstrap appcomponent angular fails existing throw intended handle views without never gets hit property gets set regardless", "num": "1326", "d": "4/2015"}, {"title": "easy way components publish injector", "body": "currently easy way component publish hierarchy proposal add new list property called supplied create child app injector publishes component child components inside view ie live shadow dom example dart import package abstract class container component view directives const parent template class myapp component publishas const parent container lt implement view template directives child class parent implements container component view class child child container container ca nt get hold container", "num": "1319", "d": "4/2015"}, {"title": "fix performance regression due render layer", "body": "tree benchmark purescripttime viewpool master befor render layerquery without viewpool master render layerquery reference baseline render time", "num": "1316", "d": "4/2015"}, {"title": "gulp testunitcjs broken second run", "body": "repro run wait tests pass notice quit change file adding empty space notice tests fail even thought nothing really changed", "num": "1311", "d": "4/2015"}, {"title": "buildanalyzedart task missing contents libweb directory", "body": "see delta lot analyzer warnings hints missed cc kegluneq", "num": "1308", "d": "4/2015"}, {"title": "usage list listwrapper etc", "body": "things use code example using seems useful import sake type annotations annoying see globalsts include project npm distribution", "num": "1304", "d": "4/2015"}, {"title": "provide idiomatic replacement ngmodel", "body": "", "num": "1303", "d": "4/2015"}, {"title": "documentation provide examples highlighting benefit splitting component view", "body": "something novel design like understand best capitalize split", "num": "1301", "d": "4/2015"}, {"title": "verify whether abstractcontrol class really exported", "body": "vsavkin check please", "num": "1299", "d": "4/2015"}, {"title": "create view message bus", "body": "render api class rendermessageref class renderer sendmessage view viewref type string data stringmap rendermessageref setmessagedispatcher view viewref dispatcher messagedispatcher class messagedispatcher dispatchmessage type string data stringmap inreplyto rendermessageref app side class appview sendrendermessage type string data stringmap rendermessageref waitfor list promise render side srcrenderdom class messagemanager handlers list class messagehandler supports type string boolean handle view view type string data stringmap messageref rendermessageref class view sendappmessage type string data stringmap inreplyto rendermessageref", "num": "1297", "d": "4/2015"}, {"title": "compiler request setters viewport bindings", "body": "came originally requesting setter template defined app file flagging yjbanov since context", "num": "1295", "d": "4/2015"}, {"title": "listing directives view verbose especially common easy cases", "body": "today one needs enumerate directives used given verbose repetitive process especially simpler cases components one uses standard builtin directives assuming building simple components consumes builtin directives need write javascript import component template bootstrap import component view inline directives class simple nutshell means every directive need import reference understand benefits approach well technical limitations still repetitive practice especially often applicationwide directives builtins directives used pages etc ideas make easier people allow omit assume builtin directives available allow omit assume directives specified app developer available urgent critical piece would make things significantly easier people", "num": "1293", "d": "4/2015"}, {"title": "dynamic ngoptions population http", "body": "probably already discussed came across following issue list items fetched via list populates ngoptions works fine everywhere except anything angular", "num": "1289", "d": "4/2015"}, {"title": "formdirectives const dart", "body": "using forms able say formdirectives nt const need workaround like", "num": "1283", "d": "4/2015"}, {"title": "view nt actually implement changedetector", "body": "supports leads us error message dartanalyze sure part code wrong could either view changedetector suspect view vsavkin comments change detector", "num": "1270", "d": "4/2015"}, {"title": "removing traceur requirements", "body": "anyway remove traceurruntime requirement angular mainly compatible version given precompile code babeljs need live building runtime bit weird", "num": "1265", "d": "4/2015"}, {"title": "angularcopy", "body": "plan add function facadelang anywhere project", "num": "1264", "d": "4/2015"}, {"title": "add positioning api ruler", "body": "add api would allow setting position component low level api first constraint based api", "num": "1262", "d": "4/2015"}, {"title": "introduce render layer", "body": "separate dom access injectorchange detection layer", "num": "1260", "d": "4/2015"}, {"title": "dgeni output need way provide description module level", "body": "currently text toplevel module autogenerated want way specify comment block use text example", "num": "1258", "d": "4/2015"}, {"title": "dgeni output anglebrackets constructor declaration escaped doc output", "body": "shows constructor syntax docs output however truncated full constructor declaration actually", "num": "1257", "d": "4/2015"}, {"title": "list attribute setters component annotation", "body": "allow directives write properties current element currently handled move style easier test abilityconsistency currently proposed javascript component selector mycomponent setters hidden classmyclass classmyclass class mycomponent myclass emitter hidden emitter constructor myclass new emitter hidden new emitter attrfoo set values directivescomponents replaced", "num": "1256", "d": "4/2015"}, {"title": "bug eventemitter emitted events nt bubble dom properly", "body": "see tried several different syntaxes even timeout get app component catch events child component nothing worked events nt bubbling", "num": "1254", "d": "4/2015"}, {"title": "support bindings svg element subelement attributes", "body": "please see plunk description shown plunk model string field named path bound path element attribute field set constructor changed timeout neither initial changed model value reflected view path element expected results bound attribute updated like html element attribute actual results attribute never seems update thus view never updated reflect model changed value additional testing calling method get model value instead accessing field directly yields results though console logging getter reveals getter method indeed called expected", "num": "1252", "d": "4/2015"}, {"title": "create actions concept view amp host", "body": "actions way decouple invoking methods host element component controller tasks x create componenthostactions list createcomponentviewactions map update understand qualifier syntax support update understand syntax create glue code maybe route actions controller element goals different templates may different ways invoking behavior example tag mobile may method desktop template may method invoking commands marshal events across uiwebworker boundries assume subexpressions start must avaluated ui thread everything else evaluated webworker thread api commands listed declaration see class play emitter visible emitter constructor thisplay new emitter thisvisible new emitter playvideo thisplayemit thisvisibleemit qualifiers dropping favor default emitter take argument fire optimally emitter method may take optional qualifier argument case conman identical qualifier fire complex example javascript copmonent selector mycomponent actions focus play select view platform mobile implementd yet template mycomponentmobilehtml template platform desktop implemented yet url mycomponentdesktophtml class mycomponent items array strength string focus emitter play emitter select emitter constructor view view items name name b dosomething focusemit username use qualifier playemit qualifier selectemit items qualifier used directive selectemit select itemname itemname action syntax action syntax considered", "num": "1251", "d": "4/2015"}, {"title": "create emitter replacement eventemitter", "body": "current fallowing issues pollutes constructor makes difficult unit test code requires lot mock code replacement use inline class reverses dependency code would look like component selector mycomponent events open close view class mycomponent open emitter close emitter constructor thisopen new emitter thisclose new emitter previous code component selector mycomponent events listed view class mycomponent open function close function constructor eventemitter open open function eventemitter close close function thisopen open thisclose close rx streams angular able consume also prefer much light weight synchronous", "num": "1250", "d": "4/2015"}, {"title": "dgeni output missing members template class", "body": "template class members nt show publicdocs docset directives formatters inline locale source url show raw overviewdump doc petebacondarwin could investigate", "num": "1249", "d": "4/2015"}, {"title": "dgeni output members blank nonbindable class", "body": "nonbindable members still get members heading nothing dgeni output", "num": "1248", "d": "4/2015"}, {"title": "import reflectioncapabilitiesngdepsdart", "body": "file generate files prior removing import generated file transitively imports might able avoid moving transform phase removing import earlier process otherwise need specialcase less ideal", "num": "1246", "d": "4/2015"}, {"title": "major rename", "body": "goal javascript component public api selector selector properties events view viewactions hostelement hostsetters hostlisteners hostactions hostattributes existing classes x gt x gt internal api gt x punting annotation gt x gt x punting gt template free extend gt note prefix render app class property renames x gt see x gt change map list x create implement later replacement create implement later x gt map x concept gt map declare implement later concept gt map declare implement later concept gt map declare implement later class gt property renames x gt x gt introduce implement later introduce implement later emitter angular autodetect emitter type could example javascript component annotation component public bindings selector prompt properties question events answer view private commands focus listen click ask view annotation view template stylesheets directives component controller class prompt public bindings question string answer emitter view private show bool focus emitter constructor thisfocus new emitter thissuccess new emitter ask thisshow true thisfocuscall onanswer value thisanswercall value thisshow false", "num": "1244", "d": "4/2015"}, {"title": "implement missing features view", "body": "note please add use cases anything yet covered considered features currently missing one component move css annotation needed inlining build step often times html may different css styling selectors css vs ios android desktop screen size", "num": "1239", "d": "4/2015"}, {"title": "pass custom data eventemitter functions", "body": "building component emits events use annotation add functionality eg component fires could used like inside component constructor use annotations like js class zippy constructor eventemitter open openhandler function eventemitter close closehandler function thisopenhandler openhandler thisclosehandler closehandler functionthatcallseventemitters thisclosehandler question pass data eventemitter call outside world use want something like inside component js class tab constructor eventemitter select selecthandler function thisselecthandler selecthandler selecttab tab logic select tab application", "num": "1237", "d": "4/2015"}, {"title": "dynamiccomponent annotation support one way binding dynamically loaded components", "body": "seems problem investigated sekibomazic gitter plunker color components data supposed passed component displayed seem support optional option binding properties dynamic component selectors dynamically loaded components prevents dynamically loaded components ever getting updates", "num": "1236", "d": "4/2015"}, {"title": "dart transformers phase pass unittests", "body": "phase project productionize dart transformers project include optimizations featurecompleteness optimizations planned separately phase goals phase want make sure addition able transform unittest code unittests pass transformed unittests run travis ci", "num": "1234", "d": "4/2015"}, {"title": "dart transformers phase pass tests example apps benchmarks", "body": "phase project productionize dart transformers project include optimizations featurecompleteness optimizations planned separately phase goals phase want make sure transformer featurecomplete enough addition generated code passes tests examples benchmarks runs tests travis ci nongoals required transformer transform unittest code", "num": "1233", "d": "4/2015"}, {"title": "dart transformers phase dryrun transformer example apps benchmarks", "body": "phase project productionize dart transformers project include optimizations featurecompleteness optimizations planned separately phase goals phase want make sure transformer featurecomplete enough process angular apps angularangularmodules examples benchmarks crash produce dart code analyzer warnings run dryrun part travis ci build nongoals required transfomergenerated code passes tests required transformer transform unittest code", "num": "1232", "d": "4/2015"}, {"title": "uses wrong log level exceptions", "body": "filed angulardart noticed issue exceptionhandlerjs uses print log exception log entry generated print browser console log level info appropriate exception error therefore makes hard detect exception see issue linked details", "num": "1231", "d": "4/2015"}, {"title": "bindings must consts", "body": "syntax creating binding currently produce constant value dart wherefore usable annotation value js statically analyzable tool culprit class become const class fields constructor one need stop eagerly computing constructing dependency list example export class binding final token final factory function final dependencies list types dependencies final providedaspromise boolean const constructor token factory function dependencies list providedaspromise boolean thistoken token thisfactory factory thisdependencies dependencies thisprovidedaspromise providedaspromise rest code needs adjusted accordingly", "num": "1229", "d": "4/2015"}, {"title": "dragndrop", "body": "iswill painfree way dragndrop items lists without dom modifications think important well overlay service would nice clear api allows customize draghelper include animations receive events use engine mousetouch events dragndrop proposal need investigation", "num": "1225", "d": "4/2015"}, {"title": "microtaskqueue", "body": "goal able execute promises current vm turn x design x replace native polyfill uses polyfill must use resolving x native api uses native instance monkepatch native convert native pol x captures drains vm turn end change drain every time transition child component sub child current shadow dom ie class microtaskqueue static current microtaskqueue runasync unitofwork function drain polyfill need promise whoes method enques work enqued function resloves synchronously defined use normal system resolution ie default macro task need zone implementation create new current duration drain end restore value previous state need able process quickly drained begining entering new component nt drain current component sub views forof loops means parent component give promise child way around consistent data propagated cause surprises given children parents", "num": "1224", "d": "4/2015"}, {"title": "dgeni output changedetection vars creates unclickable link", "body": "var links changedetection module produce blank page vars elsewhere docs work think something wrong changedetection doc", "num": "1222", "d": "4/2015"}, {"title": "ngdisable delay", "body": "function flips boolean removes ngdisaled ie js scoperemovedisabled function scopedisabledboolean false angularelement myinput focus html click function also puts input focus problem run input go focus wrap function timeout even delay timeout conclusion disabled removed quick enough input allowed put focus documentation sort issue solution feels hacky figured someone smarter solved already also perhaps javascript question angular one apologize advance nt posting", "num": "1221", "d": "4/2015"}, {"title": "dart analyzer plugin angular mvp", "body": "plugin would perform static checks angular templates feed dart analyzer dartaware ide linters etc let put new folder", "num": "1220", "d": "4/2015"}, {"title": "equivalent attachaware dart", "body": "angular used notified first stabilization happened setters called least nonnulls values ready eg dart component map const model gt model class mycomponent implements attachaware model model override void attach assert model null dosomethingwithmodel model migration path would semicomplex setter logic dart component bind const class mycomponent var var void set value value null amp amp null dosomethingrequiringbothfields void set value value null amp amp null dosomethingrequiringbothfields yjbanov", "num": "1217", "d": "4/2015"}, {"title": "ancestor nt work correctly", "body": "wrong right example component c reach ancestor actual usecase needs inject ancestor check nav stack length greater show back button back clicked pop nav stack", "num": "1216", "d": "4/2015"}, {"title": "set uninitialized", "body": "apologies already happening elsewhere nt", "num": "1215", "d": "4/2015"}, {"title": "improve template directives ability handle attributevalue", "body": "type template directive without attribute value error give proper error might ask andrew forget provide attribute value well forgot leading quote", "num": "1213", "d": "4/2015"}, {"title": "bootstrapping child components inside imperativetemplates", "body": "", "num": "1208", "d": "4/2015"}, {"title": "webworker imperative views", "body": "issue discusses changes needed order make webworkers compatible sticking point example injects reference dom solution split responsibility two app component part render component part allow injecting render component part communication channel app component app side component selector linechart bind data data view renderer linechartrenderer class linechart constructor bus messagebus buslisten data something get message rendere webworker side redererregistryregister linechartrenderer linechartrenderer class linechartrenderer fixed injection constructor dom rendercomponentdom bus messagebus buslisten data data init domrootinnerhtml var div domrootfirstchild var content domcreatecontent must use api create contentappend div project works expected buspost done", "num": "1207", "d": "4/2015"}, {"title": "dom stable event", "body": "may may belong recurrent pain point client side view rendering initial view rendered use cases include testability eg angular gettestability used protractor syntheticreal user monitoring eg ga page speed stats telling whole story serverside rendering ideally developer love domstable event similar domcontentloaded amp load events monitor amp improve domstable time whether devtools online service like webpagetest standardization event would allow test frameworks creators protractor robot syntheticreal user monitoring providers google analytics webpagetest new relic provide better support client side applications amp encourage developers care improve performances apps perfmatters google would say reason realized may may belong web componentsbased scenario native ember polymer angular components single framework knowledge dom stable state least entire dom thoughts", "num": "1205", "d": "4/2015"}, {"title": "bug rehydrating dynamiccomponent component component causes errors bindings", "body": "complicated bug demo bottom array push pop class array loop array create dynamiccomponent item array use dynamiccomponent instantiate instance matching item array mycomponent child binding error happens following js let loop instantiate dynamiccomponent instantiates mycomponent instantiates childcomponent stackpush mycomponent let loop remove component stackpop errors something binding childcomponent rehydration problem stackpush mycomponent demo open console press push pop push throws error second push", "num": "1201", "d": "4/2015"}, {"title": "privatecomponentloader amp privatecomponentlocation exported", "body": "undefined", "num": "1198", "d": "4/2015"}, {"title": "chore display source details unused imports", "body": "would really help display source line dartanalyzer error messages would help fixing code travis reports error dartanalyzer task", "num": "1192", "d": "4/2015"}, {"title": "babeljs annotations types", "body": "checking babeljs impressed coarse followed discussions types annotations babel main maintainer adding stuff babeljs still much oneman show sebmck suspect might appreciate help implementing perhaps developers experience matters lend hand", "num": "1188", "d": "4/2015"}, {"title": "register eventplugins template", "body": "currently plugins event handling registered applicationjs instead register component template eventhandlers new myeventhandler class mycomponent class myeventhandler implements eventmanagerplugin eventhandlerzoneaddeventlistenerzoneviewzoneeventmanagerplugineventhandlermanagereventhandler instantiated compilation singletons question dom hammer default implied", "num": "1187", "d": "4/2015"}, {"body": "right repo", "d": "4/2015"}, {"body": "monokrome wrong repo check think analysis incorrect observed behaviour correct getting output hasbang mode urls like", "d": "4/2015"}, {"body": "pascalprecht nt", "d": "4/2015"}, {"body": "part big rename issue task talks understood really direct mappings nt set explicitly nt call anything whereas basically allow exactly could", "d": "4/2015"}, {"body": "pascalprecht yeh closer look think named least code says tends uptodate gh issues", "d": "4/2015"}, {"body": "use mapping like get nt seem allowed", "d": "4/2015"}, {"body": "map collection works maybe would easier plunk", "d": "4/2015"}, {"body": "also see", "d": "4/2015"}, {"body": "pkozlowskiopensource thanks pointers works perfectly fine nt know could use css prefix syntax map", "d": "4/2015"}, {"body": "blocking gt today double checked might future", "d": "4/2015"}, {"body": "prefixing tagname must would painful overwrite behavior native element something important remember selector need element tag name selector example currently built written done standard button behaviors work without extra work proposed scheme still seem right mind personally much like prefixing angularprovided directives w hard tell much comes familiarity", "d": "4/2015"}, {"body": "prefixing tag names would resonate web component rule custom components must contain dash rule created exactly prevent conflicts native elements agree important jelbourn think selector matching attribute properties prefixed well otherwise risk conflicts future new native attributes special tags like", "d": "4/2015"}, {"body": "think best practice components selectors element names otherwise jelbourn example looks like directive would expect think since reusing native component", "d": "4/2015"}, {"body": "mhevery without different api say actually render element using native button element necessary make behave like regular button", "d": "4/2015"}, {"body": "could best practice way one confused component", "d": "4/2015"}, {"body": "like idea enforcing namespace since least surprised developer consider microsyntax namespace recommended directivesmodule yet many people actually went directivesmodules largely due angularmodule everything inside angular world influencers docs suggesting namespace people follow make sure every exampletoy app made demonstrates convention lol went xmllike", "d": "4/2015"}, {"body": "also wonder convention decorator directives extra properties eg property mdbutton jqtooltip none good practice making clear getting verbose", "d": "4/2015"}, {"body": "say yes namespacing component names best practice reasons mzgol mentioned nt think need prefix viewport directives since also prefixed quite clear decorator directives imo also namespaced rules apply element names nt want conflict future element attributes may introduced regarding jelbourn extending existing elements usecase also vote since also streamlines custom elements spec extend existing elements problem see afaik world native web components works native elements whereas angular directives always worked elementdirectivecomponent means sudden could also work nonnative elements angular app regarding propertyattribute names really nt know name space everything forces us type lot cases end constructs like html hand prefixing everything would inconsistent", "d": "4/2015"}, {"body": "proposal recommend prefix anything prefix components prefix properties prefix directives main argument new templating syntax angular aims providing developer clear understanding happening looking markup without dig code introducing ambiguities shorter syntax would work goal best practices ideally recommend prefix everything pros prevent unexpected behavior mhevery examples prevent collisions components use properties template designers familiar angular need style pages better judge styling better line web components standard components standard enforces dash component names maybe even tools like ide take advantage making pieces markup clickable open source component script future proof case new attributes elements introduced html cons output becomes verbose download size template would larger best practice best practice enforced case developer really wants target existing html elements attributes angular strict mode wat angular could offer kind strict mode everything without prefix processed suppose application relies third party library new version library comes new version library targets nonprefixed element update library suddenly weird things start happening parts application could really hard debug especially edge cases may visible instantly ideally developer check beforehand realistically large application hard check code third party libraries update avoid surprises enabling mode could assure would never possible", "d": "4/2015"}, {"body": "think jvandemo proposal good baseline comments additions strict mode nt like idea strict mode get right first time everyone following best practices beginning amount possibilities angular blessing curse feel like almost room angular good parts book prefixes think prefixing right way go directive properties nt think prefixing directive selector properties sufficient let look example clear directive totally ambiguous property another directive restricts directive author way ca nt put directive name myproperty namespace without running issues propose syntax properties directive prefixed fully qualified directive name course someone could declare directive well could avoid communicating notation shown best practice handle strictly could even get rid array infer properties name additional idea entering experimental well thought territory allowing user rename directive annotation proposed syntax javascript import import directivewithunwantedname wherever view template directives yaybetter directivewithunwantedname using short notation rename directive could even lead tools rename directives save bytes html code havent thought css implications yet eg someannoyinglongdirectivename could renamed xaldn", "d": "4/2015"}, {"body": "requiring prefix directives element decorator would allow us closer web components better job error detection sure got opinion prefixing properties", "d": "4/2015"}, {"body": "timjacobi crazy idea renaming mean overriding selector right agree needed sure directly related discussion hand would suggest opening separate issue might even one already", "d": "4/2015"}, {"body": "oh actually opinion prefixing properties nt think explicit unambiguous would require lots typing would make html harder read thus voiding benefits", "d": "4/2015"}, {"body": "prefixing directive properties directive name fixes cases like however nt think component properties prefixed already clear unprefixed properties belongs component verbose also find extremely hard read eyes gets lost repeatedness would prefer prefix components nt prefix component properties prefix directives prefix directive properties directive name would also make clear another directive property", "d": "4/2015"}, {"body": "dup", "d": "4/2015"}, {"body": "yes", "d": "4/2015"}, {"body": "ok closing duplicate", "d": "4/2015"}, {"body": "please add thoughts edit requirements see fit tbosch rkirov", "d": "4/2015"}, {"body": "think contain people might call weird state still ok application destroyed root component instead might expose component instance", "d": "4/2015"}, {"body": "instead returning something like returning great idea hopefully people wo nt come smart things js var ok ko var p new promise rs rj gt ok rs ko rj bootstrap whenready ok whenerror ko pthen gt root zone", "d": "4/2015"}, {"body": "dataaccess layer cooking separate repo associated design doc previewready implementation yet hence docs got questions directions try core team members commenting types questions", "d": "4/2015"}, {"body": "thanks pkozlowskiopensource exactly looking", "d": "4/2015"}, {"body": "hey thanks reporting unfortunately think wrong repository angular repo appropriate link report anything related angular", "d": "4/2015"}, {"body": "yeh erwinmombay right superasn could please move", "d": "4/2015"}, {"body": "right already discussing problematic potential solutions duplicate pr close merged addresses painpoints let centralize discussion", "d": "4/2015"}, {"body": "roger", "d": "4/2015"}, {"body": "please reopen repo", "d": "4/2015"}, {"body": "bug docs actually leftover renaming since quick start based using instead naomiblack planning update quick start latest alpha concerned file", "d": "4/2015"}, {"body": "router temporarily moved repo suggest opening issues pr standalone repo", "d": "4/2015"}, {"body": "pascalprecht correct build system becomes modular enough use angularrouter going move whole thing", "d": "4/2015"}, {"body": "nt chance try reproduce yet stack trace look like result transformed code may duplicate traveling next couple days take closer look", "d": "4/2015"}, {"body": "seems like would also need added elementinjectorjs better yet fix todo extract abstractcomponent", "d": "4/2015"}, {"body": "pkozlowskiopensource feel taking look one", "d": "4/2015"}, {"body": "looks like going away going wait till merged retest scenario", "d": "4/2015"}, {"body": "believe already work specific error get", "d": "4/2015"}, {"body": "talked vsavkin earlier today said async binding works di used independently angular got error also tried different syntax variants nothing accomplished expected outcome", "d": "4/2015"}, {"body": "per discussion jelbourn work since constructor injects error confusing error work since everything resolved synchronously fail error", "d": "4/2015"}, {"body": "issue build angular related assume mean", "d": "4/2015"}, {"body": "seems like configuration issue side angular issue closing", "d": "4/2015"}, {"body": "maybe", "d": "4/2015"}, {"body": "pascal could take strategy dom input field uses content set programmatically case content changed via change detection nt fire event fire event value changes via user via data input component mon apr pascal precht notifications githubcom wrote following scenario data object value passed component component fires change event change happening given value event handler writes new value back datavalue problem whenever datavalue changes change event fired results infinite loop best way deal way setup property binding evaluated reply email directly view github", "d": "4/2015"}, {"body": "tbosch right could set internal flag knows wether event needs fired even think set initial value programatically already enough need figure", "d": "4/2015"}, {"body": "think events fired due events due value changes make best practice think angular right thing even sure could detect kinds loops", "d": "4/2015"}, {"body": "mhevery particular case component wraps ace editor fires events basically happens js component selector aceeditor lifecycle onchange class aceeditor constructor el ngelement thiseditor aceedit eldomelement thischange new eventemitter onchange let content thiseditorsetvalue content triggers maybe use wrong would love hear opinions", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "till work progress demos next couple weeks", "d": "4/2015"}, {"body": "wrong repo please move issue angularjs repo repo", "d": "4/2015"}, {"body": "today ca nt call angular directive angular code well technically would way one would recommended coexistence migration strategy coexistence migration story still work progress described ready", "d": "4/2015"}, {"body": "looks like bug kind name collision see", "d": "4/2015"}, {"body": "seems like problem returns variables parent scope exists next days try submit pull request test case", "d": "4/2015"}, {"body": "local variables checked lhs example lhs", "d": "4/2015"}, {"body": "removed pkozlowskiopensource since fix", "d": "4/2015"}, {"body": "wrong repo one angular try", "d": "4/2015"}, {"body": "apologies", "d": "4/2015"}, {"body": "also working dynamically loaded components including bootstrapped components", "d": "4/2015"}, {"body": "nt work either", "d": "4/2015"}, {"body": "method creates new element without bindings work", "d": "4/2015"}, {"body": "tbosch looks like issue compiler call root view help fix monday", "d": "4/2015"}, {"body": "vsavkin example use work case", "d": "4/2015"}, {"body": "sekibomazic current thinking dynamic component delegate setters dynamicallyloaded component", "d": "4/2015"}, {"body": "vsavkin yes monday good sat apr victor savkin notifications githubcom wrote sekibomazic current thinking dynamic component delegate setters dynamicallyloaded component reply email directly view github", "d": "4/2015"}, {"body": "vsavkin think delegation right behavior delegated work automatically work without delegation", "d": "4/2015"}, {"body": "mixed via", "d": "4/2015"}, {"body": "mental model produces ie nested compiled view used directive like might also used component looks light dom configuration eg table configurable headerfooter template", "d": "4/2015"}, {"body": "nt think simple short lives anchor controller live wrong element also injecting sufficient also need able inject currently think wrong due think discuss white board", "d": "4/2015"}, {"body": "expansion element via attribute directive need special type introducing side effect injectable", "d": "4/2015"}, {"body": "per discussion tbosch vsavkin agreed remove way know template directive inject contain also help", "d": "4/2015"}, {"body": "vsavkin tbosch comment", "d": "4/2015"}, {"body": "nt queryselectorall use see compile single component template isolation need mark content light dom depending selectors content elements shadow dom also integrating imperative views could troublesome fri apr pm mi\u0161ko hevery notifications githubcom wrote vsavkin tbosch comment reply email directly view github", "d": "4/2015"}, {"body": "value expect see model choosing file string", "d": "4/2015"}, {"body": "sure want know whether possible better integrated file input perhaps possible perhaps angular team idea want share want know maybe found something new", "d": "4/2015"}, {"body": "markevich string seems like useful approach", "d": "4/2015"}, {"body": "wondering one biggest issues current implementation nighimpossible wait async stuff run end mess resolve wait sort thing complete api gets added would good could return promise", "d": "4/2015"}, {"body": "use right approach javascript bootstrap mycomponent ref gt let app refinstance apprun specifically working", "d": "4/2015"}, {"body": "mhevery waiting resolve works perfectly fine wanted make sure way go closing since question answered", "d": "4/2015"}, {"body": "ca nt reproduce end version chrome browser matter looks like case angular booting maybe nt get downloaded due network settings installed chrome extensions case looks like sth linked local environment", "d": "4/2015"}, {"body": "btw wrong repo angularjs hosted repo angular", "d": "4/2015"}, {"body": "err thrown rxjs end day combination rxjs zonejs makes problem appear concatenating zonejs adds strict mode entire file upsets rxjs imo fix zonejs moving strict mode declaration selfexecuting function", "d": "4/2015"}, {"body": "html case insensitive variable turn handled browsers use dashcase define upper case variable see answers issue information", "d": "4/2015"}, {"body": "thnx alexpods helping issues answer spot", "d": "4/2015"}, {"body": "thanks alexpods clarification", "d": "4/2015"}, {"body": "dylanb sure talking circular deps looks like requiring nonoptional parent html got parent fully clear trying really could put concrete example plunker", "d": "4/2015"}, {"body": "apologies reproduce problem closing", "d": "4/2015"}, {"body": "oh right think checks syntax well valid event names lowercase letters", "d": "4/2015"}, {"body": "hmm funny one since browser parse following attribute name gt value pairs gt gt nt think go logic detecting invalid attribute sure would valid heuristic could eventually throw encountering expect least one alphanumeric char attribute name matanlurey thoughts one think would ideal error", "d": "4/2015"}, {"body": "oh maybe assume attribute starts", "d": "4/2015"}, {"body": "already throwing situation sent pr improve error message", "d": "4/2015"}, {"body": "jkap event bubble click lightbulb click handler since event nt get bubbled click handler never gets invoked put everything fine", "d": "4/2015"}, {"body": "use catch bubbled events", "d": "4/2015"}, {"body": "ended using handle nested elements going internal benchmark determine whether one multiple performant large page something would useful main repo open pr", "d": "4/2015"}, {"body": "issue opened jelbourn argues favor catching bubling events default also seems default behavior ng", "d": "4/2015"}, {"body": "since already open closing one", "d": "4/2015"}, {"body": "rkirov", "d": "4/2015"}, {"body": "mlaval blocked fix moving less urgent unless blocking", "d": "4/2015"}, {"body": "blocked urgent", "d": "4/2015"}, {"body": "chat vsavkin yesterday going close one since pipes going away property bindings see clear pipes used templates formatters templatelocal applocal something done area noting actionable moment closing", "d": "4/2015"}, {"body": "repo please reopen", "d": "4/2015"}, {"body": "noticed bug", "d": "4/2015"}, {"body": "noticed well", "d": "4/2015"}, {"body": "bug blocking", "d": "4/2015"}, {"body": "seems fixed alpha exactly one child dom element following nt work", "d": "4/2015"}, {"body": "see", "d": "4/2015"}, {"body": "great thanks", "d": "4/2015"}, {"body": "yeh seems like nt well parsed recognized nothing binding classes minimal reproduce scenario", "d": "4/2015"}, {"body": "guess legacy expressions semantics jsdart expressions match langugage semantics would make sense support js identical dart", "d": "4/2015"}, {"body": "vicb yep conclusion take one excuse dive parser code", "d": "4/2015"}, {"body": "pkozlowskiopensource happy coding", "d": "4/2015"}, {"body": "already solved sorry committed yesterday", "d": "4/2015"}, {"body": "cc ajoslin adamdbradley blesh", "d": "4/2015"}, {"body": "final api nfgraph looks like pseudocode one tricky thing bit axis components essentially generate range values pass named value inner templates nt know syntax html output would look something like following pseudocode html note biproduct reusing template", "d": "4/2015"}, {"body": "tbosch think working status", "d": "4/2015"}, {"body": "prototype locally need add tests land together changes viewref elementref protoviewref tue apr pm naomi black notifications githubcom wrote tbosch think working status reply email directly view github", "d": "4/2015"}, {"body": "related", "d": "4/2015"}, {"body": "instead idonotexist simply passed tallywin function undefined expressions use host langage ie js dart semantics however something could probably caught linters ides", "d": "4/2015"}, {"body": "yes error", "d": "4/2015"}, {"body": "see", "d": "4/2015"}, {"body": "hey really singlefile bundle least simple way start also nice open source boilerplate project pkozlowskiopensource might want check hope helps", "d": "4/2015"}, {"body": "actually got singlebundle file available ex file used plunk still work needed making even easier people documenting things etc", "d": "4/2015"}, {"body": "ok think given pointers least ones got formal documentation work progress available docs high priority worked nt think reason keep issue open", "d": "4/2015"}, {"body": "somehow get feeling parent component rather directive ask components already shadow dom", "d": "4/2015"}, {"body": "pascalprecht think know action concept create action directives emit action handle case", "d": "4/2015"}, {"body": "alexpods need reread action thing tried nt work error ca nt remember also turned executed several times per second infinitely want call", "d": "4/2015"}, {"body": "yes sounds dup", "d": "4/2015"}, {"body": "closing since dup", "d": "4/2015"}, {"body": "repo post issues", "d": "4/2015"}, {"body": "k move", "d": "4/2015"}, {"body": "tbosch update status remains tbd", "d": "4/2015"}, {"body": "started work however nt think gt needs talked ferhat", "d": "4/2015"}, {"body": "tbosch update bug current status", "d": "4/2015"}, {"body": "working ramping unit tests", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "component also show tooltip element without additional decorator tue apr matan lurey notifications githubcom wrote reply email directly view github", "d": "4/2015"}, {"body": "tbosch explain case tooltip implemented external service eg", "d": "4/2015"}, {"body": "remaining work done refactor render side well", "d": "4/2015"}, {"body": "workaround nt use checked mode", "d": "4/2015"}, {"body": "pascalprecht seems working fine", "d": "4/2015"}, {"body": "seems like selector nt work correctly see executed even static classes", "d": "4/2015"}, {"body": "oh right see thnx narrowing", "d": "4/2015"}, {"body": "pkozlowskiopensource give pointers try fix", "d": "4/2015"}, {"body": "pascalprecht believe hard fix properly right due get back required elements fix place", "d": "4/2015"}, {"body": "pascalprecht chatting vsavkin yesterday refactorings pending change property bindings transformed directives much point solving things let wait till mentioned refactoring done", "d": "4/2015"}, {"body": "alright thank keeping loop", "d": "4/2015"}, {"body": "nt want feel one major barriers entry people wanting give try building file people drop page definitely published npm option people use", "d": "4/2015"}, {"body": "swirlycheetah dropping link script tag use files published yeh need npm well", "d": "4/2015"}, {"body": "great good know thanks pkozlowskiopensource", "d": "4/2015"}, {"body": "good handful projects use form approach subtle differences please someone correct wrong go shadowdom lightdom selecting elements lightdom preferred method automatically updating observable list wo nt manually registerderegister child components", "d": "4/2015"}, {"body": "also way component get hold children inside shadow dom", "d": "4/2015"}, {"body": "also query always gives right order even changes tue apr pm pascal precht notifications githubcom wrote also way component get hold children inside shadow dom reply email directly view github", "d": "4/2015"}, {"body": "matanlurey go shadow dom ca nt thought could read following comment", "d": "4/2015"}, {"body": "sekibomazic think matanlurey wanted say work shadow dom hence able cross shadow boundaries comment linked explains parent dependencies injected across shadow boundaries dependency injection system", "d": "4/2015"}, {"body": "pascalprecht still problems understand shadow dom boundaries emerge movin gitter get answers", "d": "4/2015"}, {"body": "sekibomazic component like component template template going part component shadow dom ever happens inside shadow dom implementation details therefore encapsulated template inside shadow dom eg able communicate elements shadow boundary shadow root also mean component directive uses get hold dependencies access components shadow boundary make things clear", "d": "4/2015"}, {"body": "pascalprecht thanks", "d": "4/2015"}, {"body": "since things clarified close one", "d": "4/2015"}, {"body": "nt meant entirely accessible list interface exposes interface eg could iterate receive updates changed", "d": "4/2015"}, {"body": "matanlurey get since seems way go access component children lightdom question remains", "d": "4/2015"}, {"body": "private correct way iterate using construct", "d": "4/2015"}, {"body": "mhevery something like want get hold components inside following way go js class tabs constructor query tab query tab think case better provide method child component add parent component like js class tabs constructor thistabs addtab tab thistabspush tab", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "return sounds like says going away", "d": "4/2015"}, {"body": "work definition false bind needs documented", "d": "4/2015"}, {"body": "tbosch said seen", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "would interested", "d": "4/2015"}, {"body": "repo question apply please reopen", "d": "4/2015"}, {"body": "ah thank reopen", "d": "4/2015"}, {"body": "sure willing explicitly add import case maybe issue warning think see hidden", "d": "4/2015"}, {"body": "kegluneq figure imports put file could dart import dart core dartcore dartcorebool visited false similar", "d": "4/2015"}, {"body": "copy imports file file based could add import hesitant every generated file objection going code size since deployed apps use anyway maybe nt applicable", "d": "4/2015"}, {"body": "extra import wo nt cause problems output size getting rid noise important help us find real bugs later", "d": "4/2015"}, {"body": "turns proposed solution wo nt work spec imports dart core library dart core implicitly imported every dart library via import clause form import dart core unless importing library explicitly imports dart core import dart core even restricted via show hide preempts automatic import adding means uses dart core file would need prefixed well think back failing transform someone hiding", "d": "4/2015"}, {"body": "reason use", "d": "4/2015"}, {"body": "kegluneq nope smile", "d": "4/2015"}, {"body": "think would break static analysis since would possible know ahead time setters need generated also js private fields annotation makes public list explicit vote public api fully described annotation consistency tools", "d": "4/2015"}, {"body": "wo nt generate setters bindings use generated change detectors right use dynamic change detectors generated change detector code derived call site agree need dart ts redundant though", "d": "4/2015"}, {"body": "nt think redundant dart either may situation property used directives inject used databinding three levels public databinidng public directives used imperatively private", "d": "4/2015"}, {"body": "closing reopen feel", "d": "4/2015"}, {"body": "danwahlin must reading mind since propose set similar boilerplate busters specifically already talking rkirov mhevery inferring selector class name none explicitly provided also sold listing directives view annotation issue opened yjbanov seem even radical proposal view annotation see yeh fully agree need sensible defaults cut amount code typical common usecases", "d": "4/2015"}, {"body": "thanks info related issues pkozlowskiopensource sounds like track hopefully cleaned reduce boilerplate code", "d": "4/2015"}, {"body": "pkozlowskiopensource one issues almost always stumble upon declare something foreget pretty often possible write want express think", "d": "4/2015"}, {"body": "completely agree nt like injectables way constructor happen like define fields top class think immediately constructor constructor params like show like something like since keeps constructor params clean also makes obvious injected constructor", "d": "4/2015"}, {"body": "yes even better maybe easier implement annotations replaced decorators", "d": "4/2015"}, {"body": "streamlining things want point getting mental explicit model right creating shortcuts two separate concerns always convention later need get configuration right first", "d": "4/2015"}, {"body": "mhevery right believe got mix sugar already established noncontroversial config conceptual issues well sugar inferring selector class name inferring template url class name conceptual issues listing directives pipes etc view listing injectables although think mostly misunderstanding agree get concepts right adding sugar", "d": "4/2015"}, {"body": "mhevery completely agree get right first always good keep mind potential convention wins working configuration part listing things consider", "d": "4/2015"}, {"body": "least", "d": "4/2015"}, {"body": "brad fixed ie needing domelement see sat apr pm sekib omazic notifications githubcom wrote least todovalue reply email directly view github", "d": "4/2015"}, {"body": "believe behaves currently designed dashcase nt work since conversion compiler converts dashcased variable names camelcased one one would access using conversion happens since html nt casesensitive browsers lowercase attribute names without convention would impossible declare variables mixed case camelcase nt work since html nt casesensitive browsers lowercase attribute names get parsing dom reading attributes seeing instead make work one needs write ca nt really make work since browsers lowercase plunker showing make cases functional explains going nt change fact things get confusing mhevery think things better apart clear docs subject", "d": "4/2015"}, {"body": "yep understand reasons nt support find way warn users apr pawel kozlowski notifications githubcom wrote believe behaves currently designed dashcase newtodo nt work since conversion compiler converts dashcased variable names camelcased one one would access using newtododomelementvalue conversion happens since html nt casesensitive browsers lowercase attribute names without convention would impossible declare variables mixed case camelcase newtodo nt work since html isnt casesensitive browsers lowercase attribute names get parsing dom reading attributes seeing newtodo instead newtodo make work one needs write ca nt really make newtodo work since browsers lowercase plunker showing make cases functional explains going nt change fact things get confusing mhevery think things better apart clear docs subject reply email directly view github", "d": "4/2015"}, {"body": "ideas rkirov tackle implementing would mean need parse templates string giving browser totally doable would add code processing done dev mode dealing harder since valid name ca nt think good solution atm", "d": "4/2015"}, {"body": "think work ie fixed pkozlowskiopensource send pr", "d": "4/2015"}, {"body": "sure could work browser convert got chance anything mhevery suggesting caseinsensitive lookup local variables", "d": "4/2015"}, {"body": "pkozlowskiopensource sorry typo fixed example yes accessed", "d": "4/2015"}, {"body": "mhevery works already mean conversion locals", "d": "4/2015"}, {"body": "ohh nothing throw useful error user", "d": "4/2015"}, {"body": "mhevery right problem nt really know throw error user writes see compiler ca nt catch error user writes legit well throwing user writes would parsing templates strings browser parses rkirov proposed available discuss details needed", "d": "4/2015"}, {"body": "see really good way let punt", "d": "4/2015"}, {"body": "could detected expression parser way valid variable name", "d": "4/2015"}, {"body": "pr links fixed", "d": "4/2015"}, {"body": "cc naomiblack", "d": "4/2015"}, {"body": "part component annotation deals attributes host element component part component template thus ca nt dealt via bindings imperatively set properties host element using currently inject one per property like however api may changing long look examples directory particular material design components", "d": "4/2015"}, {"body": "jelbourn thank quick answer properties part component annotation deals attributes host element component part component template clear thus ca nt dealt via bindings nt whole idea behind syntax write dom element properties component example would web component would write custom element dom property expect code would directive writes either directive property underlying dom element property latter case make sense explicitly declare please bind dom element property directive property turned value written dom element property question remains need declare really problems getting point", "d": "4/2015"}, {"body": "say component called looks like html great custom radio button put one page like problem though element needs screen readers know radio button could super lame manually put radio every time component able set element though nt component host component come give component way set things host element enduser nt cases ca nt ariachecked general bindings used set properties component instances underlying dom element host element component needs set manually", "d": "4/2015"}, {"body": "wait mean writes way around", "d": "4/2015"}, {"body": "dom component updated whenever binding changes however inside component write property dom element wo nt updated would use due unidirectional topdown nature change detection angular related note soon going change map array like component class property always element attribute", "d": "4/2015"}, {"body": "dom checked component ischecked updated whenever binding changes also expected could nt see property dom element way works really understood fact stuff nt show dom element different issue", "d": "4/2015"}, {"body": "see might bug plenty able use plunker demonstrate bugs though version angular might slightly stale times", "d": "4/2015"}, {"body": "thank fast replies jeremy know understood thing actually right finally move", "d": "4/2015"}, {"body": "thanks write nt think actually problem since intercept purposes animation fix specificity", "d": "4/2015"}, {"body": "jelbourn access windows machine docs build clang including", "d": "4/2015"}, {"body": "far know type type relies rtts asserts js go away switching typescript typescript allows trickery probably stick number thu apr pm mi\u0161ko hevery notifications githubcom wrote import int var int breaks dart int implied import dart analyzer complains needed remove primitive imports reply email directly view github", "d": "4/2015"}, {"body": "able specify want direct children descendants", "d": "4/2015"}, {"body": "ack keep open tracking assign", "d": "4/2015"}, {"body": "closing dup", "d": "4/2015"}, {"body": "looks like duplicate closed", "d": "4/2015"}, {"body": "propose fixing places like afaik way rethrow stack", "d": "4/2015"}, {"body": "matanlurey updated bug", "d": "4/2015"}, {"body": "heart", "d": "4/2015"}, {"body": "couple corrections think title issue need way capture stack traces transpiled dart code field js error object background dart two ways capture stack traces dart syntactic throw catch object every object stack getter dart special syntax error error class getter javascript throw anything error lose stack trace error field js try throw strings stacks catch e stack print nope try throw new error catch e print estack options two options could consider addition proposal allow throwing error enforce thrown exceptions angular code extend error way keep classic syntax lose stack traces believe exceptions stem already many errors already extend error eg rangeerror argumenterror stateerror covered need facade like dart js wrap expressions error think dart behind scenes could angular typescript code trick transpile", "d": "4/2015"}, {"body": "yegor nt know semantics dart js pretty similar except fieldname error class would vote errorwrapper changing js semantics transpile nt anywhere else yet thu apr pm yegor notifications githubcom wrote couple corrections think title issue need way capture stack traces transpiled dart code field js error object stack stacktrace background dart two ways capture stack traces dart syntactic throw catch object every object stack getter dart special syntax try throw strings stacks catch e stack print yes stack error error class stacktrace getter try throw new error catch e print estacktrace javascript throw anything error lose stack trace error field stack try throw strings stacks catch e stack print nope try throw new error catch e print estack options two options could consider addition proposal allow throwing error enforce thrown exceptions angular code extend error way keep classic syntax lose stack traces believe exceptions stem baseexception already many dart core errors already extend error eg rangeerror argumenterror stateerror covered need facade like dart class errorwrapper static stacktrace stacktrace error err gt errstacktrace js export class errorwrapper static stacktrace err error dunno stack type return errstack wrap throw expressions error think dart behind scenes could angular typescript code trick transpile throw strings stacks throw new error strings stacks reply email directly view github", "d": "4/2015"}, {"body": "currently working pick later", "d": "4/2015"}, {"body": "tbosch one pretends syntax exist yes semantics", "d": "4/2015"}, {"body": "mhevery renames working based discussion", "d": "4/2015"}, {"body": "minimally angular core team take auth form sample app would fantastic", "d": "4/2015"}, {"body": "think tbosch might better person work requires changing compiler", "d": "4/2015"}, {"body": "pkozlowskiopensource feel taking one", "d": "4/2015"}, {"body": "naomiblack would keen taking funny thing discussing part internally today", "d": "4/2015"}, {"body": "mhevery jelbourn crazy idea alternative syntax toying today got following properties component annotation feels like part component template nt appropriate element could stick host element part component template creating element ex sure implementable corner cases covered probably wanted bounce ideas discussing", "d": "4/2015"}, {"body": "actually gone mind ways really like idea able declaratively bind stuff host element however problem somewhat muddies important distinction host element view shadow content large part understanding angular understanding views hierarchy arranged kind hostproxy element cool convenient worried would mess understanding also add code catch people one element template content outside element template element root template", "d": "4/2015"}, {"body": "yeh right probably part annotation mixed regular template ideal especially want multiple views one component still feels strange use different syntax even js vs html express concepts regular elements vs host elements", "d": "4/2015"}, {"body": "ionic want decide angular bootstrap whether platform iosandroidetc set attribute matching platform component css create custom annotation gets define bootstrap sets", "d": "4/2015"}, {"body": "pkozlowskiopensource open syntaxes think would mistake host part since jelbourn points exact opposite suggestion involve", "d": "4/2015"}, {"body": "also think dynamiccomponents view might want control host properties well wed apr pm mi\u0161ko hevery notifications githubcom wrote pkozlowskiopensource open syntaxes think would mistake host part view since jelbourn points exact opposite view suggestion involve view reply email directly view github", "d": "4/2015"}, {"body": "mhevery jelbourn putting new syntax discussion aside sec wondering really want introduce new concept knowing usecase already covered like see imo nt introduce new concept already handles syntax got templates works dynamic attributes etc wdyt", "d": "4/2015"}, {"body": "ajoslin nt quite get last comment afraid anyway could please check described would work usecase", "d": "4/2015"}, {"body": "cc mhevery tbosch", "d": "4/2015"}, {"body": "cc yjbanov", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "julie benchpress using different promise implementation selenium webdriver however selenium webdriver provides compatible implementation promises could use protractor already using new seleniumwebdriver version dont remember exact numbers could create new protractor version wed apr pm julie ralph notifications githubcom wrote normally seleniumwebdriver node module wait webdriver command complete scheduling new one example info executing get blank info done get blank info executing get data texthtml info done get data texthtml info executing execute script return windowlocationhref info done execute script return windowlocationhref benchpress running somehow gets around causes multiple commands queue info executing get info executing find elements bycssselector instantiatedirectives info done get info done find elements bycssselector instantiatedirectives symptom stale element errors upgrading node bad ordering occurs node reply email directly view github", "d": "4/2015"}, {"body": "protractor using seleniumwebdriver uses compatible promises", "d": "4/2015"}, {"body": "oh sweet thanks fix issue benchpress overwrite global function implementation based seleniumwebdriver promises override happen thu apr julie ralph notifications githubcom wrote protractor using seleniumwebdriver uses compatible promises reply email directly view github", "d": "4/2015"}, {"body": "yup issue precisely custom method scheduled child navigation command instead sibling nt actually overwrite global everywhere could explicitly wait navigation done letting sampler complete see", "d": "4/2015"}, {"body": "committed closed", "d": "4/2015"}, {"body": "see lines", "d": "4/2015"}, {"body": "done", "d": "4/2015"}, {"body": "took look source code think stop using code links appreciate dartdoc style much harder identify links actual square bracket usage docs even style templating instead would suggest go using inline annotations docs declares links form put together pr update current docs", "d": "4/2015"}, {"body": "time make pr thursday morning pt would awesome start using objection change", "d": "4/2015"}, {"body": "putting pr together issues number currently linked items nt match existing exports sort link parameters nt docs also another issue reexport class say linking immediately creates ambiguity moment solved giving module", "d": "4/2015"}, {"body": "ah got think fine likely going manual edit pass case first release fix ones missed happen list ones nt link exports would helpful essential would make sense support kind anchor parameters link", "d": "4/2015"}, {"body": "sorry missed thursday please merge publish pr friday going offline otherwise redo work since must correct output either automated manually friday internal user milestone", "d": "4/2015"}, {"body": "ideally querylist dart would package observeobservablelist still planned edit also assume get reference actual directive eg annotation eg", "d": "4/2015"}, {"body": "creating fallow issue observables", "d": "4/2015"}, {"body": "mlaval complete one next day need api docs", "d": "4/2015"}, {"body": "nt seem possible make private without creating public propertiesmethods without big refactoring work around petebacondarwin created doc annotation applied", "d": "4/2015"}, {"body": "strictly annotation already available updated dgeni templates ignore members marked annotation", "d": "4/2015"}, {"body": "petebacondarwin seems still showing docs even annotation see", "d": "4/2015"}, {"body": "need update jade templates processor along lines commit", "d": "4/2015"}, {"body": "looks like ngelement gets exposed local scope", "d": "4/2015"}, {"body": "add domelement", "d": "4/2015"}, {"body": "kosssi yes pkozlowskiopensource found plunk see workaround", "d": "4/2015"}, {"body": "sekibomazic juste would like add information", "d": "4/2015"}, {"body": "fixed master", "d": "4/2015"}, {"body": "mcferren wrong repo guess looking please nt open github issues general support questions like one instead use dedicated support channel thnx", "d": "4/2015"}, {"body": "something user render view understands default css selector bootstrap element", "d": "4/2015"}, {"body": "per discussion javascript decorator selector tooltip properties tooltip class tooltipdecorotar tooltip string constructor elementref elementref injector injector compiler compiler var viewcontainer elementrefviewcontainer compilercompilewithhost tooltipcomponent protoview var view viewcontainercreate protoview injector var tooltipcomponent tooltipcomponent viewcomponent tooltipcomponenttitle thistooltip viewcontainerremove view constructor elementref elementref injector injector overlay overlay overlay open elementref tooltipcomponent injector ref componentref gt var tooltipcomponent tooltipcomponent refinstance tooltipcomponenttitle thistooltip refdispose", "d": "4/2015"}, {"body": "landed master", "d": "4/2015"}, {"body": "similar benchmark internally forms dynamic cells", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "chrisjlee repo still alpha please file issue repo", "d": "4/2015"}, {"body": "yup todo fix original sourcemap written traceur rather append second one sourcemaps even broken fact issue cosmetic time sourcemap nt even work", "d": "4/2015"}, {"body": "wrong repo", "d": "4/2015"}, {"body": "ok filed new issue angularangularjs", "d": "4/2015"}, {"body": "snowsky mean put angular repo repo angular currently alpha preview anyway far tell nothing unintended angular part going constructor function service example going return object opposed implicitly returning", "d": "4/2015"}, {"body": "see pr think provides quick fix issue personally though think bit odd two slightly different uses store url template one store url component otherwise stylesheet loading use loading resources eg stylesheets seems clearer", "d": "4/2015"}, {"body": "thanks catching pr looks good sun apr matthew hill notifications githubcom wrote see pr think provides quick fix issue personally though think bit odd absurl two slightly different uses store url template one store url component otherwise stylesheet loading absurl use loading resources eg stylesheets templateurl viewdefinition reply email directly view github", "d": "4/2015"}, {"body": "yjbanov high priority matanlurey status", "d": "4/2015"}, {"body": "status nt started yet", "d": "4/2015"}, {"body": "naomiblack matanlurey wants work next starting", "d": "4/2015"}, {"body": "accidentally closed commit actually fixed different problem", "d": "4/2015"}, {"body": "bug week ago performance slowed viewpool work correctly already fixed moving issue therefore", "d": "4/2015"}, {"body": "create pr", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "matthewjh facades used repo since code base transpiled dart nt need use unless creating app platforms js dart npm nt updated typescript goodies yet still work progress need wait bit afraid closing typescript bits worked atm", "d": "4/2015"}, {"body": "highly anticipated material design users needs part overall plan forms", "d": "4/2015"}, {"body": "similar", "d": "4/2015"}, {"body": "tbosch interface proposing imo also way referencing individual elements example class directive decorator directive allows toggling classes particular element within view questions proposed api would allow specify particular element shell add similar api decorator directive could get reference enclosing view injectable sorry messed head implementing services would like understand would fit play together reallife use case class directive", "d": "4/2015"}, {"body": "pawel reference elements within regular angular view via bound element index get app side via elementref however imperative views way locating elements eg css selector general interface messagebus notion location assuming location part data map wed apr pawel kozlowski notifications githubcom wrote tbosch appview interface proposing sendrendermessage type string data stringmap rendermessageref imo also way referencing individual elements example class directive decorator directive allows toggling classes particular element within view questions proposed api would allow specify particular element shell add elementref similar api decorator directive could get reference enclosing view injectable sorry messed head implementing services would like understand would fit play together reallife use case class directive reply email directly view github", "d": "4/2015"}, {"body": "ok see thnx", "d": "4/2015"}, {"body": "precise compiler aware fact code setter synthetic element used placeholder therefore never makes sense look setter lhs expression", "d": "4/2015"}, {"body": "assigning misko think big picture solution property dart problem", "d": "4/2015"}, {"body": "directives list contain nested lists angular could provide default list directives referenced still get benefits concrete project project export list directives reference list everywhere overhead would one module import one line annotation fri apr pawel kozlowski notifications githubcom wrote today one needs enumerate directives used given template verbose repetitive process especially simpler cases components one uses standard builtin directives assuming building simple components consumes builtin directives need write import component template bootstrap import component template inline directives class simple nutshell means every directive need import reference directives understand benefits approach well technical limitations still repetitive practice especially often applicationwide directives builtins directives used pages etc ideas make easier people allow omit directives assume builtin directives available allow omit directives assume directives specified app developer available urgent critical piece would make things significantly easier people reply email directly view github", "d": "4/2015"}, {"body": "tbosch yes definitively something could provide file list directives still nt change fact ones needs import reference list know different forces boilerplate imo need find way removing simpler cases", "d": "4/2015"}, {"body": "like idea exporting list project maybe would need allow multiple exports groups directives could included wanted also could make optional directives inherited parent could put custom list root app could available anywhere tree maybe special directives attr template read children", "d": "4/2015"}, {"body": "another thought maybe could change export classes killing two birds one stone could something like angular would extra list groups exports anyone could reference directives services subset whatever wanted individual classes", "d": "4/2015"}, {"body": "performance impact referencing directive negligible vote builtin directives available everywhere", "d": "4/2015"}, {"body": "note renamed one way get rid boilerplate extend annotation preloads standard directives eg use instead components said want standard directives exception apps need standard directives perhaps could preload anything would bring standard directives automatically", "d": "4/2015"}, {"body": "thnx yjbanov updated said want standard directives exception apps need standard directives like sound perhaps could rawview preload anything view would bring standard directives automatically definitively possibility", "d": "4/2015"}, {"body": "believe ability pre load commonly used directive might preferred core directives imagine project introduces foo directive heavily used would nice load use many times", "d": "4/2015"}, {"body": "totally agree trying first step deal builtin directives next step kind registry users could register commonly used directives items sort make possible deal duplicates collisions tooling support etc yeh plan", "d": "4/2015"}, {"body": "olegakbarov please ask general support questions like one using dedicated support channel see nt forget provide clear minimal live reproduce scenario people actually help imo impossible help question current form enough context", "d": "4/2015"}, {"body": "mprobst fixed", "d": "4/2015"}, {"body": "currently package contains pure sources transpiled atscript transpile using babeljs traceur runtime nowhere picture top process migrating code base typescript picture changing near future closing one traceur runtime requirement today wo nt future", "d": "4/2015"}, {"body": "nope currently plan adding similar helpers problem helpers initially needed framework internals grew beyond initial intention consequently way big needed framework still enough generalpurpose utils sure internal helpers intended public many excellent libraries provide great utils much value angular providing maintaining duplicate", "d": "4/2015"}, {"body": "ok sounds good thanks wed apr pawel kozlowski notifications githubcom wrote closed reply email directly view github josh kurz wwwjoshkurznet", "d": "4/2015"}, {"body": "nice currently host properties ok workaround", "d": "4/2015"}, {"body": "merged major changes via need cleanup prs add unit tests one blocked", "d": "4/2015"}, {"body": "open todos discuss use move stay although mostly internal service performance measure perf impact change fix perf bugs eg tune missing smaller refactorings remove methods move logic align usual use least integration tests use render layer directive well wait directiveref land get bound element index pass provide optional context select also change missing unit tests renderview corecompilerprotoviewfactory corecompilerviewfactory corecompilerview protoview view corecompilerviewcontainer docs inline docs mark public entries via", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "checked styling clipping actually missing content", "d": "4/2015"}, {"body": "ah content source angle brackets constructor declaration nt escaped output docs browser thinks html changing title reflect actual issue", "d": "4/2015"}, {"body": "merged via", "d": "4/2015"}, {"body": "use addeventlistener customevent", "d": "4/2015"}, {"body": "design tell would like", "d": "4/2015"}, {"body": "ping", "d": "4/2015"}, {"body": "cstad default binds element properties attributes looking svgpathelement docs property attribute want bind element attribute need prefix name ex working plunk closing works expected", "d": "4/2015"}, {"body": "rtfm sorry wasting timie", "d": "4/2015"}, {"body": "cstad nt think manual yet worries", "d": "4/2015"}, {"body": "emitters declared sync issue used two different things", "d": "4/2015"}, {"body": "ah saw", "d": "4/2015"}, {"body": "considering commands might also good idea think chaining piping result first command second command awaiting asynchronous results continuing syntax could something along lines adding actions commands views would great well", "d": "4/2015"}, {"body": "mhevery relation ship emitter emitter name set code know belongs annotation proposed code js component selector mycomponent events open close view class mycomponent open emitter close emitter constructor thisopen new emitter thisclose new emitter event emitter direct relation would name name mapping", "d": "4/2015"}, {"body": "could propertysetter eg decorator setters value class mydecirator constructor thisvalue new propertysetter setting properties via propertysetter emitting events similar tue apr pascal precht notifications githubcom wrote mhevery relation ship emitter emitter name set code constructor eventemitter open open function eventemitter close close function thisopen open thisclose close know open function belongs eventemitter open annotation proposed code component selector mycomponent events open close view class mycomponent open emitter close emitter constructor thisopen new emitter thisclose new emitter event thisopen thisclose emitter theres direct relation would name name mapping reply email directly view github", "d": "4/2015"}, {"body": "tbosch mhevery must say puzzled pascalprecht questions nt change mess testing nt like hardcoding dependency constructor given eventemiter propertysetter knows event emit property set", "d": "4/2015"}, {"body": "pkozlowskiopensource make testing easier since nt inject anything default implementations allow easy listening tests ignored needed class mycomponent play emitter new emitter dosomething playemit test gt var c new mycomponent cplaylistener createspy cdosomething expect cplaylistener tobecalledwith", "d": "4/2015"}, {"body": "tbosch like idea update issue", "d": "4/2015"}, {"body": "mhevery default implementation something framework would provide still sure relation set", "d": "4/2015"}, {"body": "pascalprecht yes framework would provide", "d": "4/2015"}, {"body": "closed via", "d": "4/2015"}, {"body": "also due class constructor parameter signature escaped correctly", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "mhevery woudl annotations load stylesheets files embedded annotation property inline styles", "d": "4/2015"}, {"body": "mhevery example seems inconsistent propose rename property example use", "d": "4/2015"}, {"body": "maybe better rename inlinetemplate template shorter", "d": "4/2015"}, {"body": "updated per comments", "d": "4/2015"}, {"body": "wondering whether following would make sense author component expect string angular warn throw string given would rewrite field something like properties question string", "d": "4/2015"}, {"body": "gjungb nt think angular business enforcing types think leave type validation typescript", "d": "4/2015"}, {"body": "mhevery ok makes sense btw really like switch object array list never got clue one would different names attributes properties vs local scope variables", "d": "4/2015"}, {"body": "noticed plural going able define array style sheets apply component think great idea wanted able define array templates single component use templates conditionally construct template various smaller template chunks array template chunks sure people would think waste make multiple components compose components nt want create entire component use piece dom either way thank stars nt use jsx lol", "d": "4/2015"}, {"body": "ladyborg think use case covered allowing multiples per compenent speced yet", "d": "4/2015"}, {"body": "mhevery ahhhh like better actually could allow better encapsulation better testing", "d": "4/2015"}, {"body": "mhevery references prefixed already commands prefixed markup typo", "d": "4/2015"}, {"body": "sekibomazic fixed typo", "d": "4/2015"}, {"body": "seems abiguous component directives views templates also template directives views hence templates seems confusing", "d": "4/2015"}, {"body": "jelbourn file issues outstanding issues put appropriate close", "d": "4/2015"}, {"body": "tracking remaining work via stylesheets stylesheeturls actions viewport decorator", "d": "4/2015"}, {"body": "want support latter sure screen size selector happen switch portrait landscape template instantiated", "d": "4/2015"}, {"body": "know flipfloping think fine right template selected changed due landscapeportrait fixed queries", "d": "4/2015"}, {"body": "know flipfloping think fine support unless downside supporting", "d": "4/2015"}, {"body": "vicb general prefer things one way much complexity add support well", "d": "4/2015"}, {"body": "actually think need support even cssurls imported stylesheets need transform whole css emulated strategy used code complex already exists", "d": "4/2015"}, {"body": "vicb ok sounds good", "d": "4/2015"}, {"body": "vs let remember plan also make angular statically analyzable tools even add much complexity angular code avoid passing buck onto think pick one way two one thing think decoupling template css file ie option tool analyzes perhaps replaces urls needs know parse annotations need also know parse templates might better option two", "d": "4/2015"}, {"body": "nt already decided allow feel like close issue stronger usecases", "d": "4/2015"}, {"body": "pascalprecht pass whatever payload want function injected exposed even handler see", "d": "4/2015"}, {"body": "pascalprecht guess better move types questions gitter people see help wdyt", "d": "4/2015"}, {"body": "pkozlowskiopensource thanks answering sure post questions thought might useful flag issues clear questions faq used later", "d": "4/2015"}, {"body": "plunk updated", "d": "4/2015"}, {"body": "current thinking dynamic component delegate bindings private component angular anything magically tell us solution work", "d": "4/2015"}, {"body": "mhevery also expect dynamic component delegate bindings component loads nt work look example plunk comment constructor component lines break dynamic component delegated binding would seen", "d": "4/2015"}, {"body": "updated plunk slightly far tell works expected bindings work across dynamically loaded components need passed explicitly design also saw head sure meant noop removed issue closed", "d": "4/2015"}, {"body": "mhevery thanks lot bindings work across dynamically loaded components need passed explicitly design missing part suggest add docs comment source code issue closed", "d": "4/2015"}, {"body": "marking affects ability run internal benchmarks rado investigate", "d": "4/2015"}, {"body": "goderbauer exception rethrown end also corresponding error log", "d": "4/2015"}, {"body": "ok cool case nt show issue something similar added angulardart definitely getting error problems right", "d": "4/2015"}, {"body": "add example const api would look like might need keep shorthand jsland const dart api verbose", "d": "4/2015"}, {"body": "propose becomes dart becomes js note necessary static analysis dart js loose lot toolability without personally willing pay little verbosity makes syntax toolable", "d": "4/2015"}, {"body": "vote keep current js use const dart javascript dart", "d": "4/2015"}, {"body": "mhevery tooling important intuitive human writable readable syntax even important imo", "d": "4/2015"}, {"body": "sure readable proposed syntax defer judgement jsside regardless api dart still needs fixed currently way define bindings dart annotations", "d": "4/2015"}, {"body": "yjbanov dart fix", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "good question recently implemented drag amp drop using api ngrepeats dom manipulation modify scope let angular rerender everything prevent flicker", "d": "4/2015"}, {"body": "really like third party promise libraries bluebird hood uses settimeoutsetimmediatemutationobserver task scheduling likely mutationobserver used actual application already supported modern browsers possible use promise library microtask support", "d": "4/2015"}, {"body": "discussed misko phases add support promise microtasks drain microtask change detection comfortable support microtasks needs builtin zonejs promise monkey patch polyfill tied zone implementation alexpods context angular microtask queue draining initiated zonejs need schedule tasks settimeoutsetimmediatemutationobserver goal party lib could used top promise monkey patch polyfill long overwrite mkppolyfill", "d": "4/2015"}, {"body": "mhevery look see something obvious code", "d": "4/2015"}, {"body": "variables displayed correctly defined directly inside public module contain description tag example variable get documentation working adding appropriate comment", "d": "4/2015"}, {"body": "probably make nt need add tag export already inside public module", "d": "4/2015"}, {"body": "also generated content nt look right need look", "d": "4/2015"}, {"body": "petebacondarwin look part milestone ie internal release", "d": "4/2015"}, {"body": "repo looking", "d": "4/2015"}, {"body": "replacement method guarantees bindings passed called new values passed component happens per browser event due singleflush cycle restriction dart component bind const model model class mycomponent model model void onchange assert model null dosomethingwithmodel model note currently convention interface implement future introduce interface soundness", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "reopening happen one time right", "d": "4/2015"}, {"body": "correct per browser event anything new passed", "d": "4/2015"}, {"body": "think bug happens ancestor works within shadow root much idea willing discuss reasoning work outside shadow root detail desired", "d": "4/2015"}, {"body": "observed issue", "d": "4/2015"}, {"body": "definitely injected across shadow root boundaries something might changed since agree restricted directives shadow root", "d": "4/2015"}, {"body": "mhevery look effort part user pain point", "d": "4/2015"}, {"body": "ajoslin think wrong plunker use case makes sense cross shadow dom boundaries either understand asking something captured", "d": "4/2015"}, {"body": "mhevery plunk overridden copy original demonstrates issue", "d": "4/2015"}, {"body": "fallowing works inject ancestor plunker different use case point inject ancestor trying cross shadow dom boundary design since implementation detail isolated encapsulated way intend solve issue component injector pass boundaries class dependency component selector parent services dependency template inline class parent constructor dep dependency component selector child template class child constructor dep dependency dependency pass many shadow dom layers example configured available children make easier insert int thoughts", "d": "4/2015"}, {"body": "mean inserting works today get easier insert self imo", "d": "4/2015"}, {"body": "wat surprised works example insert new instance want example time evaluation fact resolves instance blowing mind yes something like", "d": "4/2015"}, {"body": "waaat looks like annotation service evaluates runtime inside viewhydrate componentdirectiveannotationservices defined contains ancestor creating new instances ancestor like example still want maybe need add check inside hydrate ancestor one services creating child injector", "d": "4/2015"}, {"body": "double check running following issue dom like get circular dependency error even though assume prevent", "d": "4/2015"}, {"body": "think code right need inject want inject need something like parent component need override binding", "d": "4/2015"}, {"body": "thanks misko parent injection makes total sense easy way parents declare injectables children rock", "d": "4/2015"}, {"body": "going close issue replace please comment think missed something", "d": "4/2015"}, {"body": "nvm working intended", "d": "4/2015"}, {"body": "fyi currently working testability see", "d": "4/2015"}, {"body": "already see", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "pkozlowskiopensource mhevery pulling back due user pain feel effort address look part", "d": "4/2015"}, {"body": "naomiblack familiar part code hard estimate effort anyone familiar dynamic components could pair like minutes would speed things sure", "d": "4/2015"}, {"body": "rkirov tbosch able help tue apr pawel kozlowski notifications githubcom wrote naomiblack familiar part code hard estimate effort anyone familiar dynamic components could pair like minutes would speed things sure reply email directly view github", "d": "4/2015"}, {"body": "andy plunker updated latest issue still brief look something nt get dehydrated properly change detector stale info pointing nonexisting directives", "d": "4/2015"}, {"body": "going list view growing time invoke setter mydynamic triggers new compilation component since going loader caching view instances growing list time invoke point sure incorrect usage dynamic component feature sth missing compiler nutshell situation boils cache view instances dynamically grow given view nothing would cleanup growing list sure pb growing list unnecessary cleaning properly", "d": "4/2015"}, {"body": "think childcomponentviews already contains entry every bound element ie grow set values indices destroy maybe existing instance place", "d": "4/2015"}, {"body": "tbosch hmm think need elaborate think childcomponentviews already contains entry every bound element nt think case dynamically created subviews andy plunk empty initially grows time load afraid need guidance", "d": "4/2015"}, {"body": "looks like pending pr changes code question quite substantially going wait merged seems like close landing retest scenario probably require changes initial plunk", "d": "4/2015"}, {"body": "pkozlowskiopensource analysis bug correct somehow need mark dynamically added components clean dehydrate note app view render view fixes need applied please ping slack would like discuss", "d": "4/2015"}, {"body": "thanks tobias amp pawel let know questions use case need testing", "d": "4/2015"}, {"body": "ajoslin think usecase clear valid looking code changes landed got new service dynamically load components even new service believe bug still trying put together new reproduce scanario", "d": "4/2015"}, {"body": "smaller reproduce scenario plunker updated latest code master bug still root cause vsavkin tbosch could chat one point best way fixing one vsavkin see left comments case", "d": "4/2015"}, {"body": "pkozlowskiopensource sure talk fix today good idea fix app side familiar render layer though tbosch help us", "d": "4/2015"}, {"body": "talked pkozlowskiopensource make array sparse array ie entry every bound element another array says every index whether static dynamic component true false null change viewsetcomponentview durgin viewdehydrate clear dynamic views dehydrate well gt one modified view directly via methods", "d": "4/2015"}, {"body": "might slow things need single array objects combines already existing arrays anyway would make performance penalty", "d": "4/2015"}, {"body": "another array says every index whether static dynamic component true false null tbosch sure need array derive info list element injectors", "d": "4/2015"}, {"body": "vsavkin already would need another flag", "d": "4/2015"}, {"body": "render side probably need array nt elementinjectors thinking probably want store information instead wo nt change", "d": "4/2015"}, {"body": "opening pr", "d": "4/2015"}, {"body": "closing", "d": "4/2015"}, {"body": "hate adding gh comments", "d": "4/2015"}, {"body": "kevmoo help", "d": "4/2015"}, {"body": "sanderelias afaik collaboration going topic already closing real issue", "d": "4/2015"}, {"body": "pkozlowskiopensource know real issue hoped speed things bit suspect babel might ready sooner ts kind impatient", "d": "4/2015"}, {"body": "sanderelias everyone impatient", "d": "4/2015"}, {"body": "want happen think typescript team would happily support community folks new userland modules babel ca nt know anyone start work", "d": "4/2015"}, {"body": "babel experimental support decorators already coming next days", "d": "4/2015"}, {"body": "eisenbergeffect wow quick must running systems actual cloud platform", "d": "4/2015"}, {"body": "saw yes", "d": "4/2015"}, {"body": "yes", "d": "4/2015"}, {"body": "mmh work render layer eventplugins depend dom tue mar pm mi\u0161ko hevery notifications githubcom wrote currently plugins event handling registered applicationjs instead register template component template eventhandlers new myeventhandler class mycomponent class myeventhandler implements eventmanagerplugin eventhandler deal zone instead calls addeventlistener done outside zone way need cross zone boundary per view creation callback function reenter zone part dispatch rename eventmanagerplugin eventhandler also remove manager supper type needed get hold zone eventhandler instantiated compilation singletons question dom hammer default implied reply email directly view github", "d": "4/2015"}, {"body": "let punt", "d": "4/2015"}, {"body": "kegluneq want keep references forks commit messages slightly confusing", "d": "4/2015"}, {"body": "nope planning removing msg prior committing master avoid references future still learning good git neighbor", "d": "4/2015"}, {"body": "end day communicating important bits someone reading commit history distant future guess relevant issue id fixes pr closes nt open issue main repo guess would enough", "d": "4/2015"}, {"body": "also usecases di nonsuperconstructors example used asides items sliders etc slideabledelegate handles transforming changing state depending upon slide velocity transitionend events etc like class able inject set various classes happen sliding changing state would love something like js class slideabledelegate constructor propertysetter classisslideactive setslideactive function propertysetter classistransitionactive settransitionactive function component class item constructor injector componentinjector thisslideabledelegate injectorrun slideabledelegate comonent class aside constructor injector componentinjector thisslideabledelegate injectorrun slideabledelegate", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "blocked", "d": "4/2015"}, {"body": "depending optimism ok pushing may possible continue using dynamiccomponentloader instead dynamic viewtemplate let know thoughts", "d": "4/2015"}, {"body": "matanlurey unblocked give update", "d": "4/2015"}, {"body": "work", "d": "4/2015"}, {"body": "still sold needs discussion make decision", "d": "4/2015"}, {"body": "mhevery discussed vsavkin yet could document concerns", "d": "4/2015"}, {"body": "current state remove pipes annotation align component controller api public api element believe alignment", "d": "4/2015"}, {"body": "yjbanov think need discuss think done api rather annotation going move later milestone", "d": "4/2015"}, {"body": "mhevery would benefits using imperative api annotations", "d": "4/2015"}, {"body": "annotations static imperative apis easily extended conditionally applied etc tests even middle test", "d": "4/2015"}, {"body": "otoh imperative api shuts door potential code generated approaches di static analysis done could give concrete examples annotations would support", "d": "4/2015"}, {"body": "sure code generation high priority tests", "d": "4/2015"}, {"body": "high priority paranoid like users like run tests environment close production possible code reflectionbased di compilation change detection different codegenbased ones trust two behave identically rarely case source hardtodebug bugs", "d": "4/2015"}, {"body": "yjbanov naomiblack could sketch done issue important gt overlapping work moment", "d": "4/2015"}, {"body": "think already covered sure pressing issue solved gt milestone", "d": "4/2015"}, {"body": "yjbanov works per pkazlowskiopensource comment see going close please reopen think resolved", "d": "4/2015"}, {"body": "dragging feet something early next week", "d": "4/2015"}, {"body": "naomiblack yjbanov please priority issue starting write lot templates using format template file changing format please soon avoid rework", "d": "4/2015"}, {"body": "jbdeboer plan support amp need support imported stylesheets anyway ref", "d": "4/2015"}, {"body": "offline discussion seemed agree premise behind issue longer relevant intend support neither multiple annotations multiple stylesheets closing issue let discuss vs", "d": "4/2015"}, {"body": "verified fixed thanks", "d": "4/2015"}, {"body": "related", "d": "4/2015"}, {"body": "agree vicb error cases order instantiation make difference injector behavior", "d": "4/2015"}, {"body": "totally agree throw error", "d": "4/2015"}, {"body": "closed", "d": "4/2015"}, {"body": "jelbourn looks like new browsers give height width info call get info free properties need maybe separate methods ruler addition proposal let get first version method expand api usecases surface sound", "d": "4/2015"}, {"body": "pkozlowskiopensource depends mean free call api may cause browser relayout relatively slow layout call api return positional information essentially free", "d": "4/2015"}, {"body": "mhevery meant got bunch properties call soon decide call return us course querying dom never free", "d": "4/2015"}, {"body": "everyone update bug description please take look", "d": "4/2015"}, {"body": "mhevery moved back blocking cubicle table migration", "d": "4/2015"}, {"body": "implemented basic feature update dom via load angular components imperative view via see note internal name component imperative view native component", "d": "4/2015"}, {"body": "missing provide access light dom shadow dom emulation", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "vsavkin close one move", "d": "4/2015"}, {"body": "yjbanov directive ref object still required contain directive meta information wo nt", "d": "4/2015"}, {"body": "nt know criteria use move issues planning nt know", "d": "4/2015"}, {"body": "want overlays router component testbed access native dom done fix nasty bugs anything blocks considered highest priority rest bumped", "d": "4/2015"}, {"body": "think independent progress update directiveref introduced jelbourn working unifying", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "debugging bit deeper discovered socketio calling settimeout duplicate working chat example wittled client side bare minimum causes problem notes systemjs required repro including prevents second unrelated console error replace bundle zonejs longstacktracezonejs problem goes away", "d": "4/2015"}, {"body": "closing dup", "d": "4/2015"}, {"body": "bug till master adjusted code import bootstrap dynamiccomponent component decorator view ngelement dynamiccomponentloader directiveref component selector helloapp view template directives dyn stat class hellocmp dynamiccomponent selector dyn class dyn done constructor loader dynamiccomponentloader self directiveref thisdone loaderloadintoexistinglocation stat self component selector stat view template static component class stat export function main bootstrap hellocmp looking", "d": "4/2015"}, {"body": "latest bundling strategy got zonesjs included concatenated ca nt reference zones import explained rkirov closed", "d": "4/2015"}, {"body": "mhevery still happening render layer changes tbosch best person take look", "d": "4/2015"}, {"body": "tbosch still person busy maybe yjbanov help even vsavkin", "d": "4/2015"}, {"body": "tbosch tried current master issue still present", "d": "4/2015"}, {"body": "matanlurey ping", "d": "4/2015"}, {"body": "tbosch cool shall label issue feature request", "d": "4/2015"}, {"body": "pensierinmusica could leave issue closed nt intend put updates already committed serverside rendering via public available design doc", "d": "4/2015"}, {"body": "tbosch yep makes sense still feel feature request bit accurate label issues rather generic question internal evaluation make guess", "d": "4/2015"}, {"body": "bumping one well reproduce scenario related issue zonejs side", "d": "4/2015"}, {"body": "glad see one", "d": "4/2015"}, {"body": "related", "d": "4/2015"}, {"body": "since prod moving later milestone", "d": "4/2015"}, {"body": "highly recommend looking form component lot time effort put similar new form api slides seen subject", "d": "4/2015"}, {"body": "seems looking see implementation tests", "d": "4/2015"}, {"body": "already supported closing", "d": "4/2015"}, {"body": "awesome", "d": "4/2015"}, {"body": "updated body issue design also fallow doc", "d": "4/2015"}, {"body": "tracked via", "d": "4/2015"}, {"body": "deboer already seen summarize component mocking part angular injects lots stuff including components lets mock everything components encourages mocking testing design eg search many mock classes provides requires form component mocking isolate component testing seems like inability mock components design oversight master stroke", "d": "4/2015"}, {"body": "public doc thursday april trinarytree notifications githubcom wrote deboer already seen summarize component mocking part angular injects lots stuff including components lets mock everything components encourages mocking testing design eg search many mock classes provides requires form component mocking isolate component testing seems like inability mock components design oversight master stroke reply email directly view github", "d": "4/2015"}, {"body": "future another issue iirc already experience angular apps singlescreen url references annotations relative entry point location fairly certain way right incorrect least time", "d": "4/2015"}, {"body": "kegluneq yes area needs work urls relative components reusable nt think working yet", "d": "4/2015"}, {"body": "issue since start glad hear addressed relativeness templateurls", "d": "4/2015"}, {"body": "would love see way dynamically hidedisable fields based value fields like angular autofields example ngshow set one select based value another", "d": "4/2015"}, {"body": "way angulardart select one optionname sufficient", "d": "4/2015"}, {"body": "think sufficient close issue open lot demand ngoptions", "d": "4/2015"}, {"body": "also needs better description us heathens erm mean us windows users environment variable references paths look different us brew os x understand trouble protractor looked installing protractor either something like referenced told installing protractor nt install uptodate webdriver must run", "d": "4/2015"}, {"body": "downloaded quick start tutorial learned brad greens twitter post today using safari got errors error referenceerror ca nt find variable system global code indexhtml line error syntaxerror use initialiser syntax strict mode enumeration anonymous function line hope helps", "d": "4/2015"}, {"body": "see", "d": "4/2015"}, {"body": "vsavkin still relevant could close", "d": "4/2015"}, {"body": "closing longer relevant", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "even though closed add love even proposed using injectables term common name lazyloading services might ill conceived much clearer ngwat services kind service etc", "d": "4/2015"}, {"body": "longer use traceur closing obsolete", "d": "4/2015"}, {"body": "closing resolved", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "mlynch think needs satisfied system allows us move components different part dom eg template ends dom inside modal container end page modal", "d": "4/2015"}, {"body": "flexibility biggest worry nt seem match use cases likely know content need toastpopupmoleyourfavoriteuipattern need reexpress physical location", "d": "4/2015"}, {"body": "split overlayservice dynamiccomponentloader already cover use case build top make cleaner", "d": "4/2015"}, {"body": "account scrolling say grid open autocomplete scroll grid", "d": "4/2015"}, {"body": "gautelo nt relative css position sufficient could describe issue detail", "d": "4/2015"}, {"body": "mhevery relative positioning place popout correctly underneath grid cell yes however popout taller available horizontal space bottom grids viewport popout partially hidden like rest grid content want popout pop grids viewport achieve trickery provided element grids viewport grid cell relativeabsolute positioning always case see uigrid case uigrid able modify could use trick normal grid cells unable hack filter row broke real hard tried get rid relativeabsolute positioning elements meant could nt place popouts filtercells workaround course pop parent grid calculate position totally hate however cause feel dom popout inside grid cell semantically belongs rather placed outside realize much general html amp css layout issue angular issue wondering considered sort scenario designing overlay service", "d": "4/2015"}, {"body": "trick leads scrolling breaking problem case uigrid cells editors closed whenever start scrolling anyway fortunate thing something would help general case", "d": "4/2015"}, {"body": "jelbourn comment think may supported eventually right focusing getting basic primitives right able register scroll event reposition overlay using ruler", "d": "4/2015"}, {"body": "unaware ruler useful fact little miffed nt think would leave choice keeping popout dom inside cell using position fixed ruler positioning using overlay suspect attached body ruler nice unless missunderstood", "d": "4/2015"}, {"body": "current status primitives implemented next step build overlay service moving gt unblocked", "d": "4/2015"}, {"body": "trying build modal dialog service test whether primitives way run issues workarounds direct dom stuff quite ideal ca nt use dynamically loaded dialog component manually construct element raw dom access dynamically load order dynamically load component onto document body need actions concept wrap focus within dialog without dom access likely progress", "d": "4/2015"}, {"body": "prototype dialog implementation using existing primitives much remains done give idea would look", "d": "4/2015"}, {"body": "basic hooks place building overlay service matanlurey jelbourn meet come scenariosuse cases please close issue create new concrete task complete", "d": "4/2015"}, {"body": "obsolete", "d": "4/2015"}, {"body": "action angular repo closing", "d": "4/2015"}, {"body": "supported closing", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "woohoo", "d": "4/2015"}, {"body": "syntax valid html blocker valid point view nt think directions would like take framework closing implemented", "d": "4/2015"}, {"body": "think issue obsolete properties host element set via data binding closing reopen something still needs done", "d": "4/2015"}, {"body": "kegluneq closed", "d": "4/2015"}, {"body": "tl dr yes issue broader fix addressed duplicates file attempting remove duplicates throughout app think goal removing duplicates counter plan resolve world addition duplicates exist accessing named field different classes generate change detector classes longer look like duplicates think safe call closed", "d": "4/2015"}, {"body": "think resolved implemented full dom access custom renders closing", "d": "4/2015"}, {"body": "reproduce", "d": "4/2015"}, {"body": "switched broccoli build lot cleanup dart analyzer error messages closing", "d": "4/2015"}, {"body": "verified errors still exist steps reproduce simulate broken dart environment follow instructions expected error sane output actual", "d": "4/2015"}, {"body": "going close measurable line sand rather continues process hard work api docs well dev guide places tracking doc progress naomiblack updating bug general", "d": "4/2015"}, {"body": "concern angular cli separate project", "d": "4/2015"}, {"body": "anything closed", "d": "4/2015"}, {"body": "use clangformat ts files angular codebase means asi wo nt allowed semis required nt think suggesting restrictions either us angular users", "d": "4/2015"}, {"body": "implemented ago", "d": "4/2015"}, {"body": "update latest thinking explicit null suppression operator", "d": "4/2015"}, {"body": "mhevery latest thinking documented anywhere different proposed operator", "d": "4/2015"}, {"body": "closing done log separate issues remainder work necessary nothing major seems block us running compiler build step", "d": "4/2015"}, {"body": "resolved", "d": "4/2015"}, {"body": "yes", "d": "4/2015"}, {"body": "traceur", "d": "4/2015"}, {"body": "cached dart contains symlinks actual pub cache see info tl dr default pub cache directory could overridden via pubcache env variable", "d": "4/2015"}, {"body": "need ionic usecase almost exactly mhevery posted pkozlowskiopensource could try best implement point right direction", "d": "4/2015"}, {"body": "ajoslin unfortunately looking comments might blocked dart transpilation issue rkirov nt issue generated instead ajoslin let confirm transpilation issue look one today tomorrow", "d": "4/2015"}, {"body": "pkozlowskiopensource bindings must made entirely constants dart ie", "d": "4/2015"}, {"body": "minimal reproduce scenario make sure understand usecase correctly", "d": "4/2015"}, {"body": "pkozlowskiopensource look right track sure changed closer exact usecase generic viewstack normal container content pane tabs view subclass viewstack example pane able inject viewstack ancestor whether ancestor tabs view stack well", "d": "4/2015"}, {"body": "ajoslin right talk case reduction diving elementinjector", "d": "4/2015"}, {"body": "need change binding api tackling issue existing nt producing constants mhevery could update description accurate requirements think implementation twostep process refactor binding api expresses bindings via constants implement templatedirectives nt make sense tackle second problem binding api functional", "d": "4/2015"}, {"body": "logged prerequisite", "d": "4/2015"}, {"body": "note current compiler refactorings path way already internally compiler already uses directivebindings fri apr pm yegor notifications githubcom wrote logged prerequisite reply email directly view github", "d": "4/2015"}, {"body": "closer implementableimplemented tbosch", "d": "4/2015"}, {"body": "also would participate", "d": "4/2015"}, {"body": "matanlurey work little change compilerjs", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "close issue done", "d": "4/2015"}, {"body": "yjbanov original issue reported mhevery solved nt think enough cases brought component authors see ajoslin usecase issue concerns expressed short would need someone input ajoslin usecase guys think valid approach valid separate issue nt mind", "d": "4/2015"}, {"body": "pkozlowskiopensource may clearly understood code nt think quite covers use case need child able inject without knowledge implemented looks like right user writes manually componentconsumer nt framework end js component class navigationstack pushpopanimate views component class tab extends navigationstack pushpopanimate views tabthings user component component class mycomponent constructor navstack navigationstack nt need know navstack", "d": "4/2015"}, {"body": "ajoslin thought would propose open new issue latest plunk discussion touches upon several points might loosing focus going close one could open new issue latest plunk minimal usecase thnx", "d": "4/2015"}, {"body": "yes", "d": "4/2015"}, {"body": "think obsolete closing reopen still issue", "d": "4/2015"}, {"body": "still issue closed", "d": "4/2015"}, {"body": "also feeling solution looking problem feel lot pain current setup style preference couple folks", "d": "4/2015"}, {"body": "seems like obsolete closed", "d": "4/2015"}, {"body": "yes working", "d": "4/2015"}, {"body": "yes supported", "d": "4/2015"}, {"body": "btford status", "d": "4/2015"}, {"body": "works", "d": "4/2015"}, {"body": "closed via", "d": "4/2015"}, {"body": "dup", "d": "4/2015"}, {"body": "closing generate docs", "d": "4/2015"}, {"body": "data part core angular separate project closing", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "hi try get new format timeline data performance log already got old format data able display older chrome devtools followed instructions webpage listed luck enable tracing log even capabilities perfloggingprefs tracingcategories disabledbydefaultdevtoolstimeline writing python wonder clues thank beforehand", "d": "4/2015"}, {"body": "hi verify used right capabilities full example see", "d": "4/2015"}, {"body": "hiya thank much quick response problem solved using latest version chromedriver", "d": "4/2015"}, {"body": "sounds great tue mar pm hank duan notifications githubcom wrote findings far captured also see sample code reply email directly view github", "d": "4/2015"}, {"body": "noted doc running tests via webdriver server prevents access chrome authority file sdk used file io future directions investigations firefox driver protractor direct connect firefox marionette", "d": "4/2015"}, {"title": "replacing component data parent", "body": "coding super urgent thing quick late night hoping could replace component parent failed get thing working code nt look ideal nt know nt work thinking parent context maybe wrong", "num": "815", "d": "4/2015"}, {"title": "index vrepeat orderby", "body": "using understand use inside loop get array index current object use say list item means top first second etc use filter absolutely guarantee first pointing index original array reordered array like inside compare currently processed object previously processed object ie html title date works great original array already ordered date let sake argument assume nt becomes mess first orders array date loops array new order inside loop refers position unordered array worked angular illustrate could handled html objecttitle objectdate new temporary array created correct order index points index ordered array instead original one way achieve vue", "num": "814", "d": "4/2015"}, {"title": "tries trigger setters string expressions resulting", "body": "fiddle chrome warning given safari ie get causes apps break browsers seem fine ignoring", "num": "813", "d": "4/2015"}, {"title": "make vmodel synced jquery ui changing values", "body": "hi sorry posted question discussion repeatedly thought maybe one see form date input bind vmodel build jquery ui datepicker far get value pass model please see example however prefer way directly pass value see vue supporting jquery event could someone better way handle", "num": "812", "d": "4/2015"}, {"title": "tparentnode null component template content", "body": "ran strange bug took awhile isolate fiddle demonstrating bug issue components inside triple curly braces normally instantiated however component inside template content reference tag get instantiated incorrectly try remove incorrectly instantiated component vuejs crashes error least error message firefox ideally component instantiation would allowed triple curly braces feasible treated everywhere case template much higher hierarchy application ran problem clear template higher changed semantics components underneath", "num": "811", "d": "4/2015"}, {"title": "suggestion new vcomponent option replace", "body": "used use sometimes want keep related elements inside component template using broken object component always empty regardless many times used remember supposed used begin could add warnings case asking kind replacement add new option using result completely replaced component template elements instead getting inside toplevel element inside component template one toplevel element lets throw warning mean something like new vue el body components name template compiled", "num": "810", "d": "4/2015"}, {"title": "\u8fd8\u662f component", "body": "\u7136\u540e\u6700\u5916\u5c42\u7684 mgpage", "num": "809", "d": "4/2015"}, {"title": "vuejs cdnjs", "body": "page broken link cdnjs would great version cdnjs", "num": "807", "d": "4/2015"}, {"title": "issue dynamic component vwith assigning data", "body": "updated dynamically cases seems uses vwith directive assigning new value vm data see jsfiddle", "num": "806", "d": "4/2015"}, {"title": "vue \u5b50\u7ec4\u4ef6\u4e2d\u7b2c\u4e00\u4e2acomponent\u4e0d\u4f1a\u7f16\u8bd1bug", "body": "\u6211\u7528 vuecomponent \u65b9\u6cd5\u751f\u6210\u4e86\u4e00\u4e2a mgheader vue lt mgheader mount component \u6c38\u8fdc\u4e0d\u4f1a\u88ab\u7f16\u8bd1", "num": "805", "d": "4/2015"}, {"title": "dynamic contents vif component template nt persistent", "body": "markup content dynamic long content changes make hides shows content back previous demo find actual problem check source vuejs find snapshots content binding also find implements snapshot snapshot occur problems eg fire detach event situations", "num": "804", "d": "4/2015"}, {"title": "todomvc broken", "body": "go vuejs todomvc todomvccom vuejsorg add several items switch active tab check items notice issue ui thing happens completed tab issue originally reported farzher gitter chatroom", "num": "803", "d": "4/2015"}, {"title": "vwith updating objects set via set breaking change", "body": "hi nt problem isolated fiddle yet heads use case watching objects seems broken noticed developer team got new computer using code us app nt working noticed difference vue versions downgraded back everything good component alpha watches property foo passed via parent component beta template sure matters component alpha also vrepeat beta sets hook via child component alpha fiddle incoming either lunch work", "num": "802", "d": "4/2015"}, {"title": "detached events trigger", "body": "followed situations expected detached event fire structure make false dynamic adding components detached event wo nt fired added components demo structure reduce repeat items destroy redundant components however seems clears detached events firing redundant components worth noting problems deeper components demo test version", "num": "801", "d": "4/2015"}, {"title": "", "body": "gulpwebpack", "num": "800", "d": "4/2015"}, {"title": "sorting table gets stuck infinite loop", "body": "table sorting using orderby filter clicking column header thus reversing sort order vue gets stuck infinite loop blockop function happens switch back everything works usual jsfiddle stick infinite loop clicking table header twice", "num": "799", "d": "4/2015"}, {"title": "", "body": "lt gt", "num": "798", "d": "4/2015"}, {"title": "", "body": "", "num": "797", "d": "4/2015"}, {"title": "virtual dom support", "body": "two way binding useful small usecases decoupling dom management layer enable pluggable dom management backends difficult support add vdom support", "num": "796", "d": "4/2015"}, {"title": "event bus", "body": "components communicate understanding components define events namespace function components emit namespace event everything kept global namespace string matching triggers event looking documentation could find", "num": "795", "d": "4/2015"}, {"title": "jquery plugins support", "body": "wrap jquery plugins within vue component support jquery life cycle component useful", "num": "794", "d": "4/2015"}, {"title": "list components", "body": "repeat \u53bb\u751f\u6210\u65f6\u95f4\u7ebf", "num": "793", "d": "4/2015"}, {"title": "changing array item", "body": "following fiddle demonstrates issue", "num": "792", "d": "4/2015"}, {"title": "found bug", "body": "hi \u5c24\u5c0f\u53f3 created big project using vuejs thanks work may found bug compiling component containerunlinkfn used unbind derectives create inherited child child inherits containerunlinkfn method destroy child called container unlink fn unbind directives belongs component tried add line code el transclude el options thisinitelement el thiscontainerunlinkfn undefined inserted line works thanks", "num": "791", "d": "4/2015"}, {"title": "event propagate despite calling stoppropagation", "body": "see following snippet intended action click restrained element bubbled parent element html text javascript var demo new vue el demo data message methods clickonchild function e e amp amp epreventdefault amp amp estoppropagation", "num": "790", "d": "4/2015"}, {"title": "watch callback also return changed property name", "body": "wish use generic way get problem nt know property changed callback triggered get old new value right solved like solution optimal anonymous function always created get parameter callback changed property name similar solution already presented applies watching", "num": "789", "d": "4/2015"}, {"title": "mixin data", "body": "wish create mixin adds extra methods parent need store data right solution creating data properties parent something else", "num": "788", "d": "4/2015"}, {"title": "select select children", "body": "nested components using multiple insertion points select work properly first level component select selects elements inside nested component according select select elements immediate children host node work", "num": "786", "d": "4/2015"}, {"title": "von nt work component", "body": "hello create new dom vuecomponents template following input vmodel val von input oninput found vmodel works von nt wonder fix problem thanks", "num": "785", "d": "4/2015"}, {"title": "date comparisons nt work vifvshow", "body": "html asdfgasdfgasdfg qwertqwertqwert seems like converting trying look properties list current scope", "num": "784", "d": "4/2015"}, {"title": "nested trackby breaks replacing whole object", "body": "nt know something wrong breaks click button couple times common error others remove vrepeat subitems remove outer trackby directive works", "num": "782", "d": "4/2015"}, {"title": "get throwing error path exist data", "body": "use validator extension getting exception vmodel expression one level ie formname line exception occurred vm get validator model base documentation get method return undefined instead throwing error check exports get method exception handling logic either get method throwing error case", "num": "781", "d": "4/2015"}, {"title": "parsing text mustache bidirectional filter attribute", "body": "parsing text plus mustache bindings bidirectional filter fails attributes", "num": "779", "d": "4/2015"}, {"title": "integrate masonry", "body": "using vuejs using masonryjs create waterfall page generate first page waterfall however want infinite items loading nt know put masonryappended finished items loading vuejs auto update item list data changed", "num": "778", "d": "4/2015"}, {"title": "vue rendering even dom ready", "body": "windowonload function vuecomponent home template hometemplate new vue el main template lt div class content gt says something lt div gt dom page loaded errors wrong", "num": "777", "d": "4/2015"}, {"title": "add setter array expression values vwith breaks ie amp safari", "body": "html break ie invalid lefthand side assignment", "num": "776", "d": "4/2015"}, {"title": "different behavior set vueconfigdebug truefalse", "body": "using latest vue found strange behavior debug set true false please see following link jsfiddle manually edit line run shows two different results solve", "num": "775", "d": "4/2015"}, {"title": "modularization extracting things separate repos", "body": "hey fact like vue features view angularlike stuff directives filters however nt want extra stuff event system watching dom functionality etc would possible future extract functionality separate repos people install npmbower example mercury thank cc", "num": "774", "d": "4/2015"}, {"title": "", "body": "code template load page get warning error wrong", "num": "773", "d": "4/2015"}, {"title": "dirty checking vrepeat", "body": "hi seem added new dirty checking vrepeat directive case seem work happening nested lists nested vrepeats works force dirty check via empty vtransition maybe could add attribute like inlinetemplate ensure complete rerendering tried show jsfiddle vue edge version seem dev version", "num": "771", "d": "4/2015"}, {"title": "detect incompatible browsers", "body": "created large single page app using vuejs would like detect browsers incompatible vuejs display helpful error message user could grab one many existing browser detection tools make good guesses browsers work would rather use feature detection recommend way go recommendations detect browsers able run vuejs would sufficient check", "num": "770", "d": "4/2015"}, {"title": "\u5173\u4e8e\u6253\u5370select\u5bf9\u8c61\u65f6\u7684\u4e0d\u4fbf", "body": "\u6700\u8fd1\u521a\u4eceangular\u8f6c\u7528\u4e00\u4e0bvuejs \u53d1\u73b0\u4e00\u4e2a\u6253\u5370form\u7684select\u5bf9\u8c61\u65f6\u6709\u4e9b\u4e0d\u65b9\u4fbf \u5982\u6211\u6709\u4e00\u4e2aselect\u5bf9\u8c61\u8981\u663e\u793a\u6210\u8fd9\u5982\u4e0b \u4e0b\u9762\u7684span\u6211\u60f3\u663e\u793a \u9009\u4e2d select\u7684text\u5b57\u6bb5 \u6211\u8fd8\u9700\u53bb\u521b\u5efa\u4e00\u4e2a computed\u65b9\u6cd5\u53bb\u5faa\u73af\u627e\u5230\u9009\u4e2d\u7684\u5bf9\u8c61 \u60a8\u9009\u62e9\u4e86 selecteditemtext \u4f46\u4ee5\u5f80\u5728\u7528angular\u7684\u65f6\u5019\u5982\u4e0b\u7b80\u5355\u4ee3\u7801\u5373\u53ef \u60a8\u9009\u62e9\u4e86 selecteditemtext \u5982\u679c\u6211\u4f7f\u7528\u4e0a\u8fd8\u6709\u672a\u7406\u89e3\u5168\u7684\u5730\u65b9\u6216\u6709\u4ec0\u4e48\u597d\u7684\u529e\u6cd5 \u70e6\u8bf7\u544a\u77e5 \u8c22\u8c22", "num": "769", "d": "4/2015"}, {"title": "project still alive", "body": "great framework sorry ask last comment saw dating back last year plans update framework going abandoned project plans support objectobserve create kind adapter like rivetsjs thanks advanced", "num": "765", "d": "4/2015"}, {"title": "passing method component changes", "body": "passing component options object contains callback invoked component emit event currently method invoked point original view hence method view view component data function return binddeviceoptions bindmodifiedcallback function devices dispatch modifystep longer dispatches event component somewhere script methods oncomplete function thisoptionsbindmodifiedcallback", "num": "763", "d": "4/2015"}, {"title": "issue binding vmodel", "body": "code html key value alert foo new vue template tpl el test data obj foo test methods ontest function consolelog thisobjfoo nothing changed jsbin", "num": "761", "d": "4/2015"}, {"body": "instead call former correct context", "d": "4/2015"}, {"body": "define filter", "d": "4/2015"}, {"body": "wonder issue edit yup bug namniak team feel free close move", "d": "4/2015"}, {"body": "fixed branch", "d": "4/2015"}, {"body": "example wrapping inside custom directive", "d": "4/2015"}, {"body": "evan thank much wish vue examples people could see beauty simplicity", "d": "4/2015"}, {"body": "btw error exists least back", "d": "4/2015"}, {"body": "yeah triple curly braces static everywhere look issue general good idea avoid using directives inside though", "d": "4/2015"}, {"body": "using vcomponent broken object component always empty regardless many times vref used working misunderstand", "d": "4/2015"}, {"body": "azamatsharapov aye right looks like case simple maybe inside need check carefully", "d": "4/2015"}, {"body": "nt use option", "d": "4/2015"}, {"body": "oooops looks like missing something reeeeaaaly important daaaamn long thanks man going cry need eye examination something", "d": "4/2015"}, {"body": "simply need change glasses another one like evan", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "\u8fd8\u662f\u5f97\u770b\u4ee3\u7801\u91cd\u73b0 \u9876\u5c42\u7684\u5143\u7d20\u4e0d\u80fd\u662f\u7ec4\u4ef6\u7684\u54e6", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "issue \u7684\u4e00\u4e2a\u826f\u597d\u4e60\u60ef\u662f\u81ea\u5df1\u63d0\u4f9b\u4e00\u4e2a\u6700\u7b80\u6d01\u7684 bug", "d": "4/2015"}, {"body": "localhost user", "d": "4/2015"}, {"body": "\u539f\u56e0\u662f\u4f60\u7684\u7ec4\u4ef6\u5728 loadview \u91cc\u9762\u90fd\u88ab\u8bbe\u7f6e\u6210\u4e86 \u5c31\u53d8\u6210\u4e86 user user mgpage user \u7ec4\u4ef6\u548c\u5176\u4ed6\u9875\u9762\u7ec4\u4ef6\u5b9a\u4e49\u4e3a \u628a mgpage \u4f5c\u4e3a\u4e00\u4e2a mgpage \u4e0d\u8981\u7528", "d": "4/2015"}, {"body": "\u5199\u9053 \u539f\u56e0\u662f\u4f60\u7684\u7ec4\u4ef6\u5728 loadview \u91cc\u9762\u90fd\u88ab\u8bbe\u7f6e\u6210\u4e86 replace \u5c31\u53d8\u6210\u4e86 user user mgpage user \u7ec4\u4ef6\u548c\u5176\u4ed6\u9875\u9762\u7ec4\u4ef6\u5b9a\u4e49\u4e3a mgpageextend \u628a mgpage \u4f5c\u4e3a\u4e00\u4e2a mixin \u4e0d\u8981\u7528 replace reply email directly view github", "d": "4/2015"}, {"body": "hmm usually auto track latest release npm within hours opened issue", "d": "4/2015"}, {"body": "thanks hopefully get fixed soon", "d": "4/2015"}, {"body": "fixed branch", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "zip \u89e3\u538b\u5373\u53ef gulp webpack mgheader", "d": "4/2015"}, {"body": "\u786e\u8ba4\u662f", "d": "4/2015"}, {"body": "fixed dev branch \u5728\u65b0\u7248\u672c\u53d1\u5e03\u524d\u4f60\u53ef\u80fd\u9700\u8981\u624b\u52a8 build \u4e00\u4e0b dev \u7248\u672c\u7684", "d": "4/2015"}, {"body": "thanks isolating issue indeed due transcluded content snapshotted across recompiles looking better strategy transcluded content properly recompiled part block", "d": "4/2015"}, {"body": "find directive placeholder comments static example html something content partial something compiling transcluded template mycomp directive comments like contains start comment end comment figure parts dynamic experimental code js checkcontent function el el el thisel var stack var lt elchildnodeslength var node elchildnodes iscontent flag set instancecompile raw content compiled parent nodeiscontent nodenodetype nodeisend amp amp stack thisplaceholdernodes thisplaceholdernodeslength node thisplaceholderpositions thisplaceholderpositionslength else nodeisstart stack thisplaceholdernodes thisplaceholdernodes push node thisplaceholderpositions thisplaceholderpositions push stack else stack thiscontentnodes thiscontentnodes push node thiscontentpositions thiscontentpositions push keep track transcluded components contained within conditional block need call attachdetach hooks thistranscpnts thisvmtranscpnts amp amp thisvmtranscpntsfilter function c return elcontains c el update function value thisinvalid return value avoid duplicate compiles since update called different truthy values thisunlink var frag templateparserclone thistemplate persist content nodes parent thistransclude frag thiscompile frag else thisteardown transclude function frag var el fragchildnodes thiscontentnodes var l thiscontentnodeslength lt l var node thiscontentnodes var j thiscontentpositions elreplacechild node elchildnodes j thisplaceholdernodes var offset var l thisplaceholdernodeslength lt l var startnode thisplaceholdernodes var endnode thisplaceholdernodes var start thisplaceholderpositions offset var end thisplaceholderpositions offset var len end start var node startnodenextsibling var j node endnode j lt len elreplacechild node elchildnodes start j else elinsertbefore node elchildnodes end j safe skip compiling node children nodesetattribute vpre node startnodenextsibling j lt len offset len j j lt len elremovechild elchildnodes j else offset j len elreplacechild startnode elchildnodes start elreplacechild endnode elchildnodes end using strategy dynamic", "d": "4/2015"}, {"body": "find strategy works", "d": "4/2015"}, {"body": "created new branch major refactoring transclusion logic works correctly jsfiddle demo includes test case", "d": "4/2015"}, {"body": "thank strategy used branch also solved another problems", "d": "4/2015"}, {"body": "thanks looks like new inplace update algorithm still needs tweaking decided remove current codebase ensure stability probably revisit later release", "d": "4/2015"}, {"body": "fixed release see submitted pr updated vue todomvc would like well", "d": "4/2015"}, {"body": "sure couple minutes", "d": "4/2015"}, {"body": "fast oo", "d": "4/2015"}, {"body": "submitted thanks quick responses evan", "d": "4/2015"}, {"body": "problem one developers ran morning app removing vwith allowed us get app running luckily couple weeks development lot breaks changing", "d": "4/2015"}, {"body": "pushed fix branch please try see fixes issue let know breaks upgrade thanks reporting issues", "d": "4/2015"}, {"body": "sorry failing google google failing npm install dev branch", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "nt seem trick version git dev put together fiddle get home", "d": "4/2015"}, {"body": "unfortunately still seems broken work fiddle", "d": "4/2015"}, {"body": "working broken editupdate stubbing undefined data property seems make things work say would nt big deal although perhaps consider either warning using set property nt stubbed therefore would update anything previousy tried bind warning trying pass something bound property exist", "d": "4/2015"}, {"body": "turns small optimization attempt nt carefully thought fixed real branch", "d": "4/2015"}, {"body": "case fixed branch case bit different option works instance still active set instances destroyed event listeners also also means recommended use event system listen internal lifecycle hooks", "d": "4/2015"}, {"body": "oh think also means component may cleared invoking internal detached event worth documenting guide", "d": "4/2015"}, {"body": "\u4f60\u662f\u7528\u7684 vueloader", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "questions open new issues", "d": "4/2015"}, {"body": "ah found issue usage supported work fix", "d": "4/2015"}, {"body": "data \u53e6\u5916\u8fd9\u7c7b\u95ee\u9898\u4ee5\u540e\u8bf7\u53d1\u5230 vue \u5b9e\u73b0\u6216\u662f bug \u7684", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "vrepeat computed property", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "questions open new issues", "d": "4/2015"}, {"body": "vue uses dombased templating vue directives allow direct access dom nodes gives user flexibility work dom also couples implementation real dom using vdom would break almost existing code direction interested going least project", "d": "4/2015"}, {"body": "fwiw react even stable always breaking api nt feel yet like natural way developing webapps like vuejs believe ember vdom implementation much better still time tell way go", "d": "4/2015"}, {"body": "add declare global event receiver component logs events useful debugging", "d": "4/2015"}, {"body": "events travel components tree depending method use intercept events globally simply monkeypatch", "d": "4/2015"}, {"body": "questions please open new threads", "d": "4/2015"}, {"body": "idiomatic way wrap inside custom directive", "d": "4/2015"}, {"body": "\u4f60\u8fd9\u4e2a\u95ee\u5f97\u6709\u70b9\u7b3c\u7edf\u5427 \u80fd\u4e0d\u80fd\u5177\u4f53\u4e00\u70b9", "d": "4/2015"}, {"body": "\u5047\u8bbe\u6211\u6709\u4e00\u4e2a\u8bc4\u8bba\u7ec4\u4ef6", "d": "4/2015"}, {"body": "\u628a\u5b83\u5d4c\u5957\u5728\u5361\u7247\u7ec4\u4ef6\u91cc\u5457", "d": "4/2015"}, {"body": "item datacommentlist \u6ca1\u6709\u89e6\u53d1\u66f4\u65b0", "d": "4/2015"}, {"body": "avoid directly setting elements databound array indices changes picked vuejs instead use augmented set method objectobserve one blame", "d": "4/2015"}, {"body": "oh use case thanks simplesmiler", "d": "4/2015"}, {"body": "wow good catch", "d": "4/2015"}, {"body": "hi found add line code make works certainly temporary solution think solve better way thisinitelement el optionslinkfn el thiscontainerunlinkfn undefined", "d": "4/2015"}, {"body": "already made fix", "d": "4/2015"}, {"body": "turns need", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "need data reactive attach vm instance prefix everything mixin name", "d": "4/2015"}, {"body": "yes prefixing would kinda elegant solution", "d": "4/2015"}, {"body": "maybe something like privatemethods privatedata privatecomputed sections options object would better ideally behavior nonprivate counterparts exposed vm instance time usually add sections nonreactive members refer optionsprivatexxxyyy far best solution", "d": "4/2015"}, {"body": "one thing note currently works bug fixed wo nt work unless use replace", "d": "4/2015"}, {"body": "maybe better use watch", "d": "4/2015"}, {"body": "work event type dom type even click nt work tried dom created template doesnt work von vmodel others work seems like jquery cant use selector dom created js list rendered vrepeat dont know watch list item val using watch method confused tot", "d": "4/2015"}, {"body": "made fiddle could play maybe find solutions", "d": "4/2015"}, {"body": "hi back lol thanks helping", "d": "4/2015"}, {"body": "edited link fiddle calling parent method component wo nt work right way use vue events something like also mistake parent template changed", "d": "4/2015"}, {"body": "many thanks u help lot", "d": "4/2015"}, {"body": "reproducible errors without random first item subitems gets second time click button first item subitem gets second time click button", "d": "4/2015"}, {"body": "ok figured true false reason inherits reused parent vm also using trackby", "d": "4/2015"}, {"body": "thanks digging fixing", "d": "4/2015"}, {"body": "jsfiddle", "d": "4/2015"}, {"body": "throw warning basically root vm nt need component", "d": "4/2015"}, {"body": "try ondeomready use like jquery small", "d": "4/2015"}, {"body": "ca nt reproduce make jsfiddle", "d": "4/2015"}, {"body": "\u6c42\u89e3", "d": "4/2015"}, {"body": "true vue forced synchronous mode debug stack traces debug mode watcher fires immediately change child component hook fires normal mode watcher deferred fires hook agree somewhat confusing behavior think improve think try avoid relying order hookswatchers fired specifically example watcher needed", "d": "4/2015"}, {"body": "thanks explanation tried example version found different behavior suggested changed code order avoid relying", "d": "4/2015"}, {"body": "questions open new issues", "d": "4/2015"}, {"body": "think overmodularizing without real benefits vue api already simple enough nt need eventswatchingdom pretend nt exist going get way difference probably save like eventual file size worth nontrivial effort modularize everything nt think", "d": "4/2015"}, {"body": "need define component initiate main instance", "d": "4/2015"}, {"body": "make fiddle anyway fine long code reproduces issue locally", "d": "4/2015"}, {"body": "unfortunately ca nt easily isolate issue reopen issue find thanks", "d": "4/2015"}, {"body": "perhaps would make sense", "d": "4/2015"}, {"body": "yes think checking presence sufficient", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "vue", "d": "4/2015"}, {"body": "\u8fd9\u4e2a\u529e\u6cd5\u4e0d\u9519 \u8c22\u4e86 \u4f60\u8bf4\u8fd9\u4e2a\u529e\u6cd5 \u9700\u8981\u628a\u6570\u636e\u9884\u5148\u8f6c\u6362\u6210\u4f60\u9700\u8981\u7684 text value \u683c\u5f0f \u8fd9\u6837\u8fd8\u662f\u9700\u8981\u591a\u505a\u4e9b\u8f6c\u6362\u5de5\u4f5c", "d": "4/2015"}, {"body": "\u5c5e\u6027\u652f\u6301 filter \u6bd4\u5982\u53eb \u5c31\u53ef\u4ee5", "d": "4/2015"}, {"body": "hmm check pulse tab nt know got impression last comment last year", "d": "4/2015"}, {"body": "sorry made mistake meant commit right last year february exactly meant still plans continue developing personal project mentioned last official release last year f wrong thanks", "d": "4/2015"}, {"body": "last commit dev branch hours ago", "d": "4/2015"}, {"body": "ohh see great know still kicking awesome projet", "d": "4/2015"}, {"body": "nt think define method data property vue component seems done", "d": "4/2015"}, {"body": "nadirabid pass method component", "d": "4/2015"}, {"body": "btw currently going around problem creating closure capture value save another variable", "d": "4/2015"}, {"body": "could following javascript var popupcomponent vueextend methods open function method definition instantiate popupcomponent additional methods javascript var popup new popupcomponent methods close function method definition", "d": "4/2015"}, {"body": "good job", "d": "4/2015"}, {"body": "liuyanghejerry great work gathering information thanks way using everything works fine wonder", "d": "4/2015"}, {"body": "fullfs right guess workaround", "d": "4/2015"}, {"body": "questions please open issue", "d": "4/2015"}, {"body": "hey guess kinda hard comment error without fiddle finally time create stripped version look error tell working intended", "d": "4/2015"}, {"body": "hmm class interpolation sets class attribute evaluated string overwrites classes added think maybe worth make support taking object make computed property", "d": "4/2015"}, {"body": "angular chooses depending type received maybe good way go also welcome possibility using array", "d": "4/2015"}, {"body": "dom event active class \u53ef\u4ee5\u7528 vclass", "d": "4/2015"}, {"body": "fixed merging", "d": "4/2015"}, {"body": "thanks feature addition use case string replacement large svgs eg replace occurrences something else nt want add svg string data knew nt going change worried might incur unnecessary overhead might totally offparanoid open suggestions better implementations", "d": "4/2015"}, {"body": "addressed original case work warning time", "d": "4/2015"}, {"body": "awesome thank", "d": "4/2015"}, {"body": "actually design transition supposed run element attacheddetached state changed initial render element already dom state change also imagine items transitions page probably nt want everything animate initial render workaround explicitly trigger state change initial render basically ayamflow said", "d": "4/2015"}, {"body": "makes sense trigger every transition page load though would convenient able set flag component transition happens immediatly maybe kind directive hide thing might belong userland", "d": "4/2015"}, {"body": "yeah flag attribute would probably help something like", "d": "4/2015"}, {"body": "actually transition triggered via directive belongs parent context transition functions points parent instance move child works expected maybe less confusing always call transition functions instance bound element animated one pretty simple change thoughts ayamflow", "d": "4/2015"}, {"body": "transition function context set element closest vm instance means element root node instance instance used context regardless whether transition triggered parent directive", "d": "4/2015"}, {"body": "yes thought transitions methods set current vm guess expected behavior target transition thanks change", "d": "4/2015"}, {"body": "major improvement idea included future release", "d": "4/2015"}, {"body": "possible make optionally oneway new oneway directive alternative maybe missing way parse string literal within", "d": "4/2015"}, {"body": "shoshi try using mentioned starting post oneway still mistaken also could describe usecase", "d": "4/2015"}, {"body": "yes work quick oversimplified gist use case basically main vue makes get index request api among many things sets type modal load modal sets template subcomponent makes another get show request load modal data hoping another directive might accomplish guess semantic argument since vue tags start makes sense attrs normally present html would prefixed like attrs like make perfect sense custom attrs nice option prefix way making look obviously different normal html attrs", "d": "4/2015"}, {"body": "nevermind issue still present need pass parent vue component needs mustaches mustaches data becomes twoway bound see line coffeescript close change component changes data parent vue", "d": "4/2015"}, {"body": "strangely enough issue camel case attrs issue dashed attrs however using dashes prompts error vue warn seem using camelcase paramattribute html nt differentiate upper lower case use hyphendelimited attribute names info see seems like actual bug", "d": "4/2015"}, {"body": "syntactic sugar twoway nt really understand want change child close nt want child view change affect parent simply make local copy compiled hook", "d": "4/2015"}, {"body": "using oversimplification see seems bit odd really contents modal contain button clicking button makes ajax call call succeeds modalview changes success state another subcomponent child view subcomponents conditions thus nt want update parent every time child changes based new data could set extra var nt change like suggested nice overcomplicate adding stuff need pass value also browser nt need spend extra resources waiting changes never occur though sure much matters vue know makes difference angular angular directives multiple options scope really useful sure goal keep vue light think great chose vue angular project possible oneway binding could make future version would fit within vision vue still architectural option missing thanks hard work creating maintaining updating vue truly fantastic", "d": "4/2015"}, {"body": "resolved fix", "d": "4/2015"}, {"body": "sorry late reply turns attr would completely solve problem say markup html test since allowed inside browser throw away end empty nothing trancluded html test since supposed nested directly browser try smart render html test whole transcluded component template obviously ideal general hard make transcluding table elements work properly nt really see benefits cases probably want pass data let component handle rendering", "d": "4/2015"}, {"body": "bit late revisit method actually", "d": "4/2015"}, {"body": "suggest dom operation attached lifecycle vue using vrepeat classical question stackoverflow however angularjs think similar", "d": "4/2015"}, {"body": "hi also need filterby feature could count filtered objects nt get code snip thisgamesfilter filter comes", "d": "4/2015"}, {"body": "danielchou native array method javascript assumed refers array computed retuns array", "d": "4/2015"}, {"body": "nirazul thank native filter method powerful", "d": "4/2015"}, {"body": "bug component nested repeat class name gets lost compilation", "d": "4/2015"}, {"body": "interesting class name actually shows myclass beforecompile changes ready seems chrome issue since works properly safari devtools", "d": "4/2015"}, {"body": "isolated issue indeed chrome bug", "d": "4/2015"}, {"body": "tried track code stupid", "d": "4/2015"}, {"body": "racking brain thinking would best way achieve prerendering comment winner particular bit using hashes found nt work building single page app engine curious combining lib routing engine like ideal opinion", "d": "4/2015"}, {"body": "robertleeplummerjr vue pair pretty much routing lib really depends routing lib like best", "d": "4/2015"}, {"body": "high fives nt want brag javascript rules", "d": "4/2015"}, {"title": "catching errors thrown change event callbacks leaves true wo nt trigger change events", "body": "javascript var themodel new backbonemodel themodelon change name function model val val jesus throw new error name taken themodelon change function model val consolelog change arguments themodelset name default name triggers change event try themodelset name jesus catch e consoleerror e themodelset name new name wo nt trigger event event problem experiencing requires manually set otherwise event triggered", "num": "3592", "d": "4/2015"}, {"title": "add support silent model destroy", "body": "sometimes necessary model ability recover collection call destroy stay deleting model always called var destroy function modeltrigger destroy model modelcollection options model always removed collection suggestion transmitted options parameter silent true nt made event call say", "num": "3591", "d": "4/2015"}, {"title": "could backbone provide", "body": "sometimes satisfy case could backbone provide like following javascript function class options var thatoptions extend options thatinitializeapply arguments subclass think sometimes helpful", "num": "3587", "d": "4/2015"}, {"title": "removed require jquery", "body": "required", "num": "3581", "d": "4/2015"}, {"title": "\u9519\u522b\u5b57", "body": "onobjecton event callback context \u522b\u540d bind \u5728 object \u547d\u540d\u7a7a\u95f4 \u4fd7\u6210\u5730\u4f7f\u7528\u5192\u53f7\u6765\u547d\u540d \u65f6\u95f4\u5e94\u8be5\u662f\u4e8b\u4ef6", "num": "3578", "d": "4/2015"}, {"title": "backbone view copies references objects", "body": "var carview backboneviewextend data rego var cara new carview rego year var carb new carview rego year consolelog caradataregoyear gt consolelog carbdataregoyear gt nt", "num": "3575", "d": "4/2015"}, {"title": "difficulties calling header file", "body": "calling back header file created sure nothing wrong program header file compiler cygwin keeps giving error message libcmaino function winmain relocation truncated fit undefined symbol winmain error ld returned exit status please someone help idea", "num": "3574", "d": "4/2015"}, {"title": "site typo backbone section", "body": "surely mistake", "num": "3573", "d": "4/2015"}, {"title": "backbonejsorg sidebar scrolling issues", "body": "issues safari regarding fingerscrolling left sidebar backbonejsorg website wo nt work times makes really kinda hard read docs nt found solution right say works fine safari uses frameset two iframes anybody else", "num": "3572", "d": "4/2015"}, {"title": "uncaught router crashes decodeuricomponent", "body": "router crashes urierror uri malformed users copypasted input like often found search routes", "num": "3569", "d": "4/2015"}, {"title": "swift create view shape cropped", "body": "hello trying achieve result shown image using swift xcode basically want create view shape cut able see view make tutorial app know create circular shape nt know cut view thanks advance", "num": "3567", "d": "4/2015"}, {"title": "use function return get global", "body": "backbone currently breaks mode trying access properties global object global object set using pattern however case remains hence issue using pattern instead alleviates issue though arguably ugly thoughts steps reproduce import backbone test harness uses strict mode", "num": "3566", "d": "4/2015"}, {"title": "cors issue yet", "body": "apologies newbie question inside backbone view able make regular ajax http calls fine calling cors enabled server however use backbone save create methods ca nt access api one enable cors support backbone", "num": "3565", "d": "4/2015"}, {"title": "routing case sensitivity", "body": "option set routs case sensitive somthing like", "num": "3564", "d": "4/2015"}, {"title": "route parameter passing order problem", "body": "html links dont know issue see optional paramter passed arguments correct also second parameter null expect expect see code example logs routerconfig log sfo null null null correct sfo null null wrong second parameter must null sfo null null expect sfo mfb null null correct sfo mfb null correct hope help", "num": "3561", "d": "4/2015"}, {"title": "backbone classes", "body": "final changes class spec details longer possible use classes backbone without making significant compromises terms syntax written full description situation make sure click comments bottom additional mitigating option essentially way add properties instance subclass prior subclasses parents constructor run javascript class documentrow extends backboneview longer valid final spec instead effectively appealing options want try make work attach properties functions backbone allows feels dumb write something like javascript class documentrow extends backboneview compared current extends syntax run constructor twice nt view real option due issues would cause running initialize second time different cids etc pass properties default options superclass constructor suggested commenter blog probably practical current option looks something like javascript class myview extends backboneview constructor options defaults options options assigned instance backbone tagname li classname documentrow events click icon open click buttonedit openeditdialog click buttondelete destroy option assign instance foo bar since current options involve clear compromises relative current backbone extends syntax would wonderful better solution could developed totally sure look like one idea came mind writeup blog addition properties function would output hash properties constructor could run function add instance prior processing done constructor", "num": "3560", "d": "4/2015"}, {"title": "backbone sync safari fails send option headers", "body": "see full explanation issue stack overflow question however tracked far currently click tab ui safari loads next route fails attach authorization token request made sync populate collection without authorization header api return makes backbone app continue log user system problem starts click tab triggers route guestlist ticketlist offending routes routesactions etc system failing safari sync method setting header user logged system shows happening output logging thoughts might happening solely safari confirmed server side apache log debugging authorization header sent chromefirefox safari many details found stack overflow question", "num": "3559", "d": "4/2015"}, {"title": "release new version", "body": "backbone commonjssupported jquery would great npm", "num": "3558", "d": "4/2015"}, {"title": "routerexecute nt return anything", "body": "route callback returns false route event supposed fired ie however execute nt actually return callback functions return value nt design missing something", "num": "3557", "d": "4/2015"}, {"title": "makefile qt", "body": "write makefile qt without using qmake thanks advance", "num": "3556", "d": "4/2015"}, {"title": "stoplistening unbind listeners object", "body": "currently track event name callback hash tracks object would expect behavior remove event names associated callbacks one object listened another happens callbacks removed objects example coffeescript host model host new backbonemodel remote model object listens host model new backbonemodel host setup somecallback remove model object also listens host model new backbonemodel host setup adifferentcallback done far remote models listening host model listening event different callbacks let see happens stops listening host model specifically even event namespace thing happens listeners removed including listeners match event namespace case omitted remove listeners course could manually track events callbacks defeats purpose begin methods automatically track event relationships separate object makes sense internally additionally track event namespace callbacks therefore occurs remove associated event listeners objects stands remove everything matches host object andor event name obliterates listeners objects example would expect listeners removed listeners remain intact wanted remove listeners model would simply write", "num": "3555", "d": "4/2015"}, {"title": "empty collection fetch add false breaks", "body": "attempting fetch empty collection option add false causes backbone break line modelmap modelid true typeerror read property id undefined extendset attempting take collection set array id idhere sync list server returns longer list items nt want sometimes clientside array empty", "num": "3554", "d": "4/2015"}, {"title": "unpredictable ordering model added collection", "body": "sort comparator function always returning order models collection becomes unpredictable model added expected result order models order added bug found backbone jsfiddle examples based backbone underscore bug example jsfiddle behaves correctly using sortby comparator function see jsfiddle update tests made chrome version mac os", "num": "3552", "d": "4/2015"}, {"body": "use validate", "d": "4/2015"}, {"body": "better example think events ca nt fire error change listener problem", "d": "4/2015"}, {"body": "would change event handler throw error errors js pretty bad almost universally reserved exceptional unexpected behavior anything know ahead time throw error change handler wrap trycatch", "d": "4/2015"}, {"body": "saying errors trivial error prevent library code functioning correctly seems like problem", "d": "4/2015"}, {"body": "hi seen huge amount bugs due silencing events nt think go route also need model collection probably nt destroy use separate technique", "d": "4/2015"}, {"body": "see", "d": "4/2015"}, {"body": "iirc", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "sorry solution backbone marionette try npm install backbonemarionette note case backbone dep installed automatically lookup use ich used var marionette require back mario backbone undefined factory call backbone js exports case different requirejs global mistake backbonejs backbonemarionette", "d": "4/2015"}, {"body": "latest backbone nt fixed master next release", "d": "4/2015"}, {"body": "top", "d": "4/2015"}, {"body": "would like make code copy comment surprised currently changed thanks", "d": "4/2015"}, {"body": "try bower install correct version times users npm frontend libs cause error use git repo directly packagejson new", "d": "4/2015"}, {"body": "nt know backbone chinese document", "d": "4/2015"}, {"body": "question bug mind translating english afraid chinese nt great", "d": "4/2015"}, {"body": "sorry mistake didt mean project someone translate backbone chinese write github thank great project btw fyi", "d": "4/2015"}, {"body": "closed issue", "d": "4/2015"}, {"body": "yes way prototypes work javascript use function set instance property constructor need", "d": "4/2015"}, {"body": "yep thanks good catch", "d": "4/2015"}, {"body": "aware going fix", "d": "4/2015"}, {"body": "hi qiv thanks issue pull smiley understand correctly parameter malformed contains invalid percent encoding like get back right", "d": "4/2015"}, {"body": "actually guess want decode valid encodings leave invalid ones alone", "d": "4/2015"}, {"body": "yes would like decode url close possible", "d": "4/2015"}, {"body": "another way catch error router instance graceful", "d": "4/2015"}, {"body": "think handled", "d": "4/2015"}, {"body": "think handled nah one separate handles double decoding via first invalid percent encoding user input", "d": "4/2015"}, {"body": "case could mix", "d": "4/2015"}, {"body": "like idea regular expression nt cover bases instance fails url presented qiv restrictive test", "d": "4/2015"}, {"body": "damn thought issue trailing need implement regex", "d": "4/2015"}, {"body": "well fun forked mathiasbynensregenerate made take single hex code points yada yada", "d": "4/2015"}, {"body": "really kind change live userland needed props braddunbar foresight expose decodefragment jridgewell nice oneliner someone use drop regenerate right backbonehistory", "d": "4/2015"}, {"body": "without rewriting throw easy fix used regenerate syntax already making hex regexs nt really feasible give devs actually forking rewrite percent decoding able reimplement using give devs override javascript var router backbonerouterextend decodefragment require decodeuri", "d": "4/2015"}, {"body": "issue affects underscore well relevant issue jashkenasunderscore", "d": "4/2015"}, {"body": "think problem backbone enable cors support post put call api probably execute get call check calling api using ajax http postman call create method backbone execute post call api endpoint please check server permit type call kind server use", "d": "4/2015"}, {"body": "see python app running behind gunicorn making post put api using httpie postman getting expected headers example connection close date sun apr gmt server accesscontrolallowheaders contenttype accesscontrolalloworigin contentlength contenttype applicationjson also running simple ajax call within app get expected response ajax type post url data hi newpersonname success function data consolelog data error function data consolelog datastatus consolelog datastatustext consolelog dataresponsetext troubles true cors issue ajax calls would restricted however backbone ajax call one restricted", "d": "4/2015"}, {"body": "using backbone underscore jquery server expressjs app configured cors fine thing try override backbonesync set cross domain response call save method create", "d": "4/2015"}, {"body": "response keep getting xmlhttprequest load accesscontrolalloworigin header present requested resource make sure server issue even calling instagram api within backbone get cors postman nt get cors used method provided still error", "d": "4/2015"}, {"body": "sabzo post working jsfiddle minimum code needed reproduce", "d": "4/2015"}, {"body": "jridgewell cc nicknaso thanks bearing people nt used jsfiddle tried duplicate simple backbonemodelsave sample server containing api threw demo thanks", "d": "4/2015"}, {"body": "hi sabzo think understand problem edited client code reported javascript var mymodel backbonemodelextend urlroot defaults title legend actors directors region california cuba language english spanish mood adventure category action description src trailer img get error reported image error happen make cors request browser execute preflight request similar options server respond request setting header reported accesscontrolalloworigin accesscontrolallowmethods get put post delete accesscontrolallowheaders contenttype authorization send status response find technical documentetion node example hope help", "d": "4/2015"}, {"body": "nicknaso grazie mille sure server issue able observe preflight testing firefox chrome could nt see preflight headers firefox saw options method sent server nt responding appropriately thanks bunch", "d": "4/2015"}, {"body": "use regex route flag case insensitive es regexi", "d": "4/2015"}, {"body": "manually add caseinsensitive regex routes inside", "d": "4/2015"}, {"body": "hi serkansipahi thanks letting us know unfortunately expected result something route string discern regular expression used match optional parameter nt know difference city date assume second parameter matches first optional path segment enough perspective two options use regular expression route nt elegant allow direct control optional segment matches use query string parameters looks like really modifiers route would nice semantically also wo nt worry matching since let query string parser hard work hope helps", "d": "4/2015"}, {"body": "braddunbar regular expression want use query string parameters something different idea someone make search sfo sfo build string like case issue etc choice optional parameters must always specified case thank", "d": "4/2015"}, {"body": "yeah definitely bummer thanks legwork guess moral story nt use classes backbone least static property support lands fallback options proposed preferred solution defining strings objects return values key part backbone api design prototypeshared strings objects would dirty api require devs assign property instance constructor mention memory wasteful aside consistency reason use class keyword backbone", "d": "4/2015"}, {"body": "great blog post wonder backbone classes would play together solutions attach properties functions super opposed clean setting object directly prototype seen ton code trip mutating prototype objects way immune think chose include class properties pass properties default options nt something classical language feel like even less clean solution run constructor twice ick guess moral story nt use classes backbone least static property support lands even class properties come call disappointed", "d": "4/2015"}, {"body": "aside consistency reason use class keyword backbone extend addressed blog post practically theory would allow backbone long term reduce code additional concepts realistically going least years classes widely supported relevant browsers without transpiling code reduction would next nothing nt underrate consistency aspect becomes way object oriented programming javascript seems likely given standardization emberangularreacttypescriptaurelia etc backbone using added learning curve library relative options especially junior developers sure necessarily merits change pedantic hobgoblin small minds consistency", "d": "4/2015"}, {"body": "agree jridgewell attach properties functions approach probably best proposed options fwiw remember originally learning backbone relative js newcomer bit confused static properties used", "d": "4/2015"}, {"body": "correct class properties guess", "d": "4/2015"}, {"body": "proposal early community driven proposal clear actually ever part official spec current implementations cause properties added instance constructor runs nt help backbone see jridgewell link try babel", "d": "4/2015"}, {"body": "jridgewell referring part benmccormick post react developers noted issues property initializers backbone users encounter part version react supporting special property initialization syntax classes may eventually standardized info esdiscuss thread standard still worked experimental support version available babel unfortunately version defines class properties instantiated superclass constructor run nt solve backbone issues see example wycats jsdecorators strawman original superseded harmony classes proposal might suggest use getters class properties absolute last resort could check instance static props helper la", "d": "4/2015"}, {"body": "yup unfortunately version defines class properties instantiated superclass constructor run nt solve backbone issues javascript class view extends backboneview tagname li constructor anything nt touch super anything touches function view anything nt touch backboneviewapply arguments add class properties thistagname li anything touches viewprototype create backboneviewprototype constructor view element would still constructed got change set instance variable see example wycats jsdecorators strawman explain decorators would apply might suggest use getters class properties see boat attach properties functions clean currently perfectly acceptable mutation proof absolute last resort could check instance static props helper la result could interesting", "d": "4/2015"}, {"body": "backbone nt mess headers try opening issue jquery", "d": "4/2015"}, {"body": "really thanks taking time read question backbonesync options headers passing options native backbonesync method headers getting sent done safari", "d": "4/2015"}, {"body": "posted enormous repro stackoverflow dense read even already familiar issue create small jsfiddle showing problem test", "d": "4/2015"}, {"body": "see lack willingness help outlined debugging steps taken stack overflow telling much come nothing safari backbonesync working provide info take time look posted see happening posted enough information show happening", "d": "4/2015"}, {"body": "funny want jsfiddle entire application write another application show issue", "d": "4/2015"}, {"body": "yelling collaborators nt way solve posting question stackoverflow nt sufficient case provided far much anyone understand issue provide jsfiddle minimum running code shows issue might able solve fact works chrome firefox already telling us nt issue core backbone headers provided get passed providing jsfilddle likely lead issue already mentioned", "d": "4/2015"}, {"body": "trying help telling backbonesync nt anything headers right code goal opening bug help contributors track problem facing respectful time wade appspecific code find bug often misconfiguration editing problem create small proof concept bug happy help mailing list", "d": "4/2015"}, {"body": "already determined dualstorage removed application still pass optionsheaders request issue backbonesync giving benefit jquery setting options way work one browser another means clientside code problem jquery fine least could look rather pushing people first seconds issue posted", "d": "4/2015"}, {"body": "jridgewell first yelling collaborator explaining come without info would pushed told tias many times go days debugging come roadblock backbonesync told provided way much information really take look last code statements question see talking", "d": "4/2015"}, {"body": "see lack willingness help hostile meant yelling go days debugging come roadblock backbonesync told provided way much information really yes much easier us find issue provide running jsfiddle without cruft application specific code nt anything call", "d": "4/2015"}, {"body": "problem jquery fine least could look rather pushing people first seconds issue posted wrote response minutes posted read issue thoroughly based fact working backbone years developing js even longer tried point right direction debug sure absolutely right issue safari simple test determine options get passed overriding boundary backbone responsibilities end jquery begins difference arguments chrome safari report back reopen", "d": "4/2015"}, {"body": "tried get fiddle going unfortunately ajax stuff hitting xdomain policy stuff wo nt allow go override backboneajax consolelog arguments let know soon", "d": "4/2015"}, {"body": "log user authenticated backbonesyncjs line log options parse true headers authorization token backbonesyncjs line log ajax type get datatype json url emulatehttp false emulatejson false backbonesyncjs line error failed load resource server responded status unauthorized guestlist line log isauthenticated false defaultjs line log cookie undefined defaultjs line log hasaccess false defaultjs line log hasaccess false going login page defaultjs line log going route login defaultjs line according authorization header passed jquery getting lost bit confusing apologize seemed hostile dealing debugging days feel like gotten nowhere seems like every time try irc get support get ignored questions trivial stated someone feel like get response felt pushed apologize jquery issue need figure word nt get hit type response", "d": "4/2015"}, {"body": "type get datatype json url emulatehttp false emulatejson false backbonesyncjs line piece info need know backbone try posting mailing list problem persists otherwise open issue jquery also nt need hit server test sending right headers send something jsfiddle echo resource", "d": "4/2015"}, {"body": "ah become familiar jsfiddle certainly", "d": "4/2015"}, {"body": "jridgewell finally solved issue assistance backbone contractor staff issue backbone issue issue collection url tickets collection trailing sent safari would send preflight request get found would send actual request uri without trailing without authorization header removed trailing slash issue seemed go away sure actually bug backbone jquery whichever one nt seem like trailing slashes collection url", "d": "4/2015"}, {"body": "interesting good know server sensitive trailing slashes might cause still weird works chrome safari chrome also sending preflight request thanks writing hopefully someone googling future find", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "issue clear version jquery user want use anyway would nt hard would easy user maintain package packagejson indexjs feel free publish package share", "d": "4/2015"}, {"body": "think paul referring problem solution see", "d": "4/2015"}, {"body": "npm package depends backbone loaded bulk build tool code nt help change master would help though", "d": "4/2015"}, {"body": "nope place folks override apps act like method see nt want route handler return value affect transition", "d": "4/2015"}, {"body": "thanks makes sense nt read comments closely enough", "d": "4/2015"}, {"body": "seeing behavior either master provide jsfiddle", "d": "4/2015"}, {"body": "okay nevermind takes argument fact unbind objects listeners see method object overridden take argument account thus display behavior seeing", "d": "4/2015"}, {"body": "define comparator function argument count backbone proxies arrayprototypesort hood according mdn comparefunction b returns leave b unchanged respect sorted respect different elements note ecmascript standard guarantee behaviour thus browsers eg mozilla versions dating back least respect furthermore unstable returning told js engine objects value order returned irrelevant js b c e f g h j k l sort function return g c e f b h j k l sort function b return", "d": "4/2015"}, {"body": "side note onto something length arrays magical chrome node least insertion sort stable used arrays elements quick sort unstable used others", "d": "4/2015"}, {"body": "thanks revealing magics since required stable possible add option specify another sort function instead create new issue instead", "d": "4/2015"}, {"body": "posted topic google group continue discussion post link approved thanks deep insight", "d": "4/2015"}, {"body": "thanks much appreciated using mailing list happy follow", "d": "4/2015"}, {"body": "great link topic", "d": "4/2015"}, {"body": "agreed nt inside loop asking trouble", "d": "4/2015"}, {"body": "moving discussion", "d": "4/2015"}, {"body": "object observe really interesting update js platform seems simple clean way responding events minimal fuss code place hope able share soon mean time hoping gather feedback might feelreact say backbone remove ability silence events ie instead triggering event every single change assuming reaction negative would react manually disable events instead passing inline example might look like thanks", "d": "4/2015"}, {"body": "still use setters work advantage objectobserve", "d": "4/2015"}, {"body": "key word must fine grained control event dispatching oo might right choice hence question dose project like backbone fine grained event transmission control", "d": "4/2015"}, {"body": "would nt lose sleep able pass silent true always felt like dirty option wed apr pm moshe brevda notifications githubcom wrote key word must fine grained control event dispatching oo might right choice hence question dose project like backbone fine grained event transmission control reply email directly view github", "d": "4/2015"}, {"body": "dirty pretty damn important", "d": "4/2015"}, {"body": "filipmares able silence event would results hell lot events fired see source constructaddfetch name dgbeck expound would bad thing", "d": "4/2015"}, {"body": "seems advantage oo rather going setters intermediary object otherwise point love convinced adding objectobserve backbone answer either great deal redundancy innards backbone oo nt think actually need reconcile fine live separate approaches similar problems regardless experience people seem moving away observer pattern backbone angular oo promote favor immutability virtual dom model react days much bookkeeping", "d": "4/2015"}, {"body": "hard nail exact circumstance necessary confident unfortunate contour reality requires available might convincing argument related circular reactions events remember discussion elimination past subsequent agreement need left nt think something brushed table", "d": "4/2015"}, {"body": "dgbeck silent option really leads interesting challenges even pure js paste console challenges overcome silent option might important nt mean absence catastrophic top head offer runonce methods partial solution sure ways first glance correct oo offers truth thats oo fact directly settinggetting properties achieved lines code internal plumbing changes backbone using new proxy object proxy objectwide property agnostic gettersetter used getssets proxied object case way see oo mostly raw speed check naive test responding events backbone vs oo tried adding polyfill firefox got weird results focus chrome iterations oo faster finally dealing performance especially dom performance believe elephant room virtualdomreactjs expand another comment one point correct wrong nt react state changes need triggered somehow also reactjs nt seem much place far data handlingmanipulation leaves desire backboneesque library act transient data storemanipulationpersistence layer triggering events data changes reactjs whatever update said events tl dr reactjs view still need deal actual data", "d": "4/2015"}, {"body": "rereading comment realized code example nt clear wasnt suggesting setters needed trying illustrate backbone might look like silent could passed one wanted disable events another way", "d": "4/2015"}, {"body": "mbrevda thanks clarifying interesting discussion seem getting topic bit fault mind move gitter mailing list edit followed", "d": "4/2015"}, {"body": "reset parameter would useful us", "d": "4/2015"}, {"body": "come across issue even desired behavior query string nt part sent router callback", "d": "4/2015"}, {"body": "found querystring useful thing router callbacks", "d": "4/2015"}, {"body": "expecting optional parameter", "d": "4/2015"}, {"body": "example routes matching query parametres using route dealsoffers statusrejected passed listoffers", "d": "4/2015"}, {"body": "ah yes try instead get two arguments every time instead variable number", "d": "4/2015"}, {"body": "surly default functionality nt desired would want query string passed expecting id", "d": "4/2015"}, {"body": "well router certainly nt know expecting smiley gave function call two routes different number parameters also remove query string entirely overwriting", "d": "4/2015"}, {"title": "store unloadall deactivate event break application", "body": "hello route deactivate event inside event calls thisstoreunloadall model try move new route fetch unloaded models server break error stack trace edit strange fix open ember inspect click data try move routes problem gone edit bug happens every time", "num": "10996", "d": "4/2015"}, {"title": "turning setupcontroller hook async breaks", "body": "wanted use async ember model hook like async setupcontroller controller model async works really well model ends null regardless super", "num": "10995", "d": "4/2015"}, {"title": "difference syntax api blog", "body": "helper api documentation says use follows see however blog post release ember says use following syntax see imagine semantically equivalent however policy documenting new syntax api documentation understand would happen one syntaxes becomes deprecated order avoid confusion case otherwise happy update documentation reflect new syntax case helper", "num": "10994", "d": "4/2015"}, {"title": "setting boolean attributes observers causes checkbox view get sync", "body": "see bin goal automatically set person friendly funny person able unfriendly funny time steps produce bug select unfunny set person friendly select friendly bug still display friendly even though box unchecked select funny select unfunny person set friendly checkbox checked checkbox remains unchecked", "num": "10992", "d": "4/2015"}, {"title": "css class applied incorrectly passing id instead whole model linkto helper", "body": "nt really sure related existing issue posting new issue want use css class display spinner next link loading entity detail route pass model id helper css class applied incorrectly links link supposed applied moreover removed transition finished reason passing model id instead whole model need force execution route hook list endpoint api use emberdata rest adapter returns short version record attributes missing whereas detail endpoint returns record including missing attributes able reproduce error newly generated application related commit mareksuscakemberbugs", "num": "10989", "d": "4/2015"}, {"title": "google authentication ember discuss longer works", "body": "apologize filing wrong spot could nt find repository specific discussemberjscom try log using google account authentication given following page states authentication schema using longer supported", "num": "10987", "d": "4/2015"}, {"title": "emberview observes triggers multiple times", "body": "observers triggered times switch page get error ember canary create jsbin problem look console change triggering ofter switching page click info click index change triggered thats fine click info click index change triggered two times switch pages called often possible use observers within views note problem emberdate instead using embera", "num": "10985", "d": "4/2015"}, {"title": "emberselect autoselects last default firefox browser", "body": "title suggests noticed ember version emberselect little unexpected behavior firefox browser following jsbin using ember version shows emberselect alongside native html see default firefox browser autoselecting last select list opposed first option like native select hard tell ember fix firefox interpreting emberselect strange way direct way fix browsers seem fine notice issue previous releases", "num": "10984", "d": "4/2015"}, {"title": "embertextarea set property list getter", "body": "js bin raises following error passed attribute via custom uncaught typeerror set property list getter issue seems occur chrome dev chrome android tested chrome windows", "num": "10981", "d": "4/2015"}, {"title": "adding routes runtime longer works", "body": "issue allowed new routes added runtime appears longer function beta", "num": "10979", "d": "4/2015"}, {"title": "within triggers action ignores", "body": "particular use case links elsewhere ie nt clicking triggers action instead navigating browser", "num": "10978", "d": "4/2015"}, {"title": "custom tagname components nt work boolean html attributes", "body": "html attributes custom element ember component custom nt work expected trying bind disabled state custom element attribute set correctly according boolean value example work expected wo nt work produces presence attribute means disabled even though set false following ember component output expected jsbin example illustrate issue behaviour seems changed ember jsbin shows behaviour ember disabled attribute never gets set true sure used work app upgrade bit confused chatted bit mmun likely ember uses custom elements check dom property", "num": "10976", "d": "4/2015"}, {"title": "transitionsequence reset tests", "body": "route explicitly block direct access lots ways enter route ca nt always rely certain properties set model would prefer set flag case check boot user back sane place works swimmingly irl trouble testing transition sequence reset subsequent acceptance tests run one test things pass run alongside get unexpected behavior match happens normal runtime application first visit created jsbin show problem see two tests exactly one passes one fails opinion two tests pass destroying app test understand ember mucking router allow testing think reset test", "num": "10975", "d": "4/2015"}, {"title": "model hook push data store", "body": "debug ember debug ember data code works fine changed rest request made record pushed data store", "num": "10974", "d": "4/2015"}, {"title": "transition retry dynamic segments throws error", "body": "retrying transition dynamic segments error thrown nt provide enough stringnumeric parameters satisfy dynamic segments route scenario user goes songs authorivan authorivan reloads entire page reloading applicationroute sees user logged saves current transition authorivan redirects another route log user similar login success transition authorivan retried error thrown user first step reloads page everything works fine", "num": "10972", "d": "4/2015"}, {"title": "run loop buggy behaviour", "body": "hello found non blocking bug run loop guess fact blocked ut found work around fix describe way made happen build model containing boolean javascript var mymodel dsmodelextend embervalidationsmixin switcher dsattr boolean mymodelreopen validations switcher inclusion true false user value radio button radio button ca nt boolean values validation uses strings works type changes boolean string need validation works fine rest part java gets boolean value problem submit page error eveything fine forward another page list mymodels seconds error consol following error happens part generated code use one radio button one making error true false one work around fix use define property string boolean everything works fine nt error anymore folks", "num": "10971", "d": "4/2015"}, {"title": "bug unexpected behavior embercomputedoneway promises select view", "body": "given following router controller template three simplified js router emberrouterextend setupcontroller function controller model thissuper controller model found change selectedusers modelusers also changes behavior expected undesired well could particular environment cases similar one behavior intentional fixed problem following code js controller emberobjectcontrollerextend setselectedusers function var self didinsertelement custom mechanism nt work box think would rather prefer use trick course", "num": "10970", "d": "4/2015"}, {"title": "", "body": "wondering emberinjectroute ever thing times routes another route would nice syntax thanks", "num": "10967", "d": "4/2015"}, {"title": "embersource rubygems", "body": "following ember security announcement seems though embersource available download however rubygems currently list version available rubygems", "num": "10962", "d": "4/2015"}, {"title": "helper nt work value lost context", "body": "demo also reproduce beta builds", "num": "10961", "d": "4/2015"}, {"title": "input helper action behave action helper", "body": "seems bit nonstandard unable pass arguments input actions standard helper works calling function may arguments unable way similarly less powerful traditional helper would like see resoning something strange see certainly brings trouble someone learning work ember", "num": "10959", "d": "4/2015"}, {"title": "error processing route form controllerupdatecacheparams function", "body": "upgraded getting consistent error previously functioning code error error processing route form controllerupdatecacheparams function typeerror controllerupdatecacheparams function emberobjectdefaultextendsetup callhook handlerenteredorupdated setupcontexts finalizetransition trycatch invokecallback publish jsbin", "num": "10956", "d": "4/2015"}, {"title": "elementidviewname nt work", "body": "used work trying currently hbs input typetext valuetitle viewnametitleinput none work title even change value nothing logs", "num": "10954", "d": "4/2015"}, {"title": "routerefresh work properly error routes", "body": "hello everyone discovered weird behavior related error routes ember routerefresh method since example worth thousand words created simple jsbin quite clearly demonstrates problem output sources open jsbin output press fire refresh button observe url basically call refresh error route ended rejected model promise reason serialize reason parameter promise reject call url change route name unuseddummyerrorpathroute yourlocation also cause lose model error route example displaying rest error response error route lose refresh call case use refresh call application route level able switch languages web application dynamically without transitions works like charm everywhere except error routes ideas solve circumvent welcome thanks ps replicated internally running issue", "num": "10952", "d": "4/2015"}, {"title": "emberdata working correctly get functions async models", "body": "hi prepared jsfiddle sample get emberdata model registeredfighter want access model registeredfighter property get object emberdata properties id data id fighter fightrule weightclass fightclass example thisget item works fine thisget item get fighter returns unknown thisget item get fighter get name returns unknown handlebar template access birthday fighter easily per script problem side emberdata accessing per thisitemstorefind fighter function data alert dataget name works fine per script please help kind regards markus", "num": "10951", "d": "4/2015"}, {"title": "embersource gem actual", "body": "embersource differences actual especially disappointed diff expect gem bundled sources tagged released versions could someone republish new version", "num": "10949", "d": "4/2015"}, {"title": "attrnodes containerview dont get destroyed moving removing containerview", "body": "isolated problem spending weeks debugging issue renderer decides whether destroy simply remove child objects depending view ie object attached renderer marks children destroyed children removed without destroyed regular object removed children including attrnodes marked denote destroyed problem occurs removed renderer attrnodes nt get marked added back renderer renderer creates new attrnodes bound attributes adds array along old ones correct behaviour rendering view attrnode function simply skips true order skip old attrnodes render newly created ones case false renderer tries render two versions attrnode crashes older one believe simplest solution modify check array exists view loop objects array mark edit testing pr caused fixed code", "num": "10948", "d": "4/2015"}, {"title": "router queryparams causes unexpected transition sequence", "body": "please bare kind hard issue explain jsbin help demonstrate discovered issue user refreshes page queryparams configured involved scenario someone deeplinking app queryparams first redirected login page turns logging calling resourcesroutes dynamic segments hooks called model values instead calling hook params internal transition log router shows entirely different transition paths best way demonstrate issue clicking jsbin link see first redirects login page timer simulates login second triggers causes hook called undefined model repeat process without queryparam works fine queryparam without queryparam debugging discovered set back false nt redirect login works expected bug bit obscure hopefully clear explanation edit link issue canary quick update testing", "num": "10945", "d": "4/2015"}, {"title": "router rooturl nt working beta", "body": "problem router attempting upgrade none routes recognized believe pr looks like router longer accommodating rooturl router defined like step router code see rooturl still attached goes code trying find handler unsurprisingly ca nt find", "num": "10943", "d": "4/2015"}, {"title": "docs toggling inherited methods tab gives inconsistent results", "body": "noticed discrepancy dsactivemodeladapter page arrival method list looks like unchecking inherited rechecking inherited note addition methods including", "num": "10942", "d": "4/2015"}, {"title": "much slower", "body": "using ember one template simple entry template rendering slowly investigated takes render way replace html escaped without changing anything else takes render times measured ember inspector google chrome html modelnote something like nt nonescaped string faster rather much slower", "num": "10941", "d": "4/2015"}, {"title": "value binding using handlebars ember data", "body": "hi using ember data rest adapters currently screen url view myappview update myappview id display list items user data updatedelete button user click udpate button show update form values selected update form show user information list also user changes data udpate form changes also reflecting list items need avoid like unbound helper also able observe property changes anyone suggestion", "num": "10940", "d": "4/2015"}, {"title": "feature emberruntime array macros computed properties", "body": "reason nt computed properties macros available ember", "num": "10939", "d": "4/2015"}, {"title": "bug queryparams issue using dynamic controller assignment", "body": "case need load different template controller depending various attributes model currently something like export default emberrouteextend aftermodel function model var controller modelgetcontrollername works great however ran issue one ad hoc controllers queryparam route nt properly setup queryparam raises following exception try change queryparam jsbin interesting controller matches route name nt defined everything works expected short term solution define queryparam controller matches route name everything works great looks like either approach nt supported bug", "num": "10938", "d": "4/2015"}, {"title": "double slashes urls cause issues", "body": "visit url double slashes two separate different issues however putting mostly question double slash url base go get following error along application blank page caused reproducible firefox chrome others tested double slash middle url certain introduced recently however valid url browsed match router route caused time git bisect commit caused issue however happened recently suspect knowing nasty cause prodding tomdale commit question could solved always removing double slashes routed would solve issues however could quite easily desired dynamic variables ember might want blank route might want match url personally nt like could solved form keyword catalyst permits however frameworks nt thanks", "num": "10937", "d": "4/2015"}, {"title": "error defining embercomputedalias emberobjectreopen", "body": "get error want set property run hook hook method reveals following code around line existingdesc altkey roomarea isdescriptor true proto object correctedarea computedproperty area correction function correctedcalculatorarea var project get parent var outerwallarea get project calculators filterby elementtype wallouter reduce function prev curr return prev get curr elementuseddimension get curr width approach total bullsht", "num": "10936", "d": "4/2015"}, {"title": "mandatorysetterfunction assertion causes errors component teardown htmlbars", "body": "currently consistantly running issue ember setting apparently line htmlbars causes assertion error unhandled breaking app screenshot", "num": "10935", "d": "4/2015"}, {"title": "inject store using emberinject", "body": "emberinjectservice emberinjectcontroller really useful ca nt seem find way store way yet", "num": "10934", "d": "4/2015"}, {"title": "template support binding multiple classes one conditional", "body": "prevent without make computed property suggestion newer ember versions syntax fairly intuitive multiple classes except first class nt period open alternative syntax suggestions", "num": "10933", "d": "4/2015"}, {"title": "emberstring wrong pluralization namespaced irregular model name", "body": "wrong result namespaced model name embercli ember javascript emberstringpluralize partiesperson gt partiespersons expected partiespeople emberstringpluralize person gt people expected", "num": "10932", "d": "4/2015"}, {"title": "url get updated going back forth linkto backbutton location history", "body": "hey minor issue still annoying one attached example code since jsbin wo nt display url updates issue follows go colorsroute colorroute linkto go back backbutton link linkto url get updated run python simplehttpserver something", "num": "10931", "d": "4/2015"}, {"title": "every ember js bin example internet broken", "body": "link latest ember build broken nt seen working ember js bin example internet week possible fix ember builds link", "num": "10930", "d": "4/2015"}, {"title": "implement embercopyable w ember", "body": "hi ember using pattern like coffeescript renamed indicates private api use implement proper way ember", "num": "10927", "d": "4/2015"}, {"title": "bug silent failure router transitioning wo providing model", "body": "example w canary scenario making mistake attempting transition route dynamic segment without providing record id second argument bug reporting errors logged promises rejected etc clear feedback developer failure happened instructions reproduce succeeding path go click fruit url click new item find url click good cancel find back list items correct url instructions reproduce failing path go click fruit url click new item find url click bad cancel find still new item page url ember inspector also indicate multiple leaflevel current routes difference two actions one fails pass required model id populate destination route path dynamic segment", "num": "10926", "d": "4/2015"}, {"title": "ember render properly svg tags routes index", "body": "hello weird issue using ember built embercli pie chart pie chart displayed properly ember routes works index route indexhbs generated html code routes templates indexhbs used viewcomponent indexhbs routes fix issue go inspect element remove entire tag removing content line line fix weird installed sample ember application address index see chart menu routes chart rendered view rendered indexhbs displayed properly works bit hover area html code generated pie chart view pages copy code paste empty static html page chart rendered correctly issue reproduced using firefoxchrome safari seems work view renders chart entire application code build found", "num": "10923", "d": "4/2015"}, {"title": "could outlet made work block params", "body": "today outlet hbs helper blow push non string value w block params would handy pass index dynamic outlet namesetc assume nt supported reason incorrect would team open pr allows block param index values outlet", "num": "10922", "d": "4/2015"}, {"title": "visit route helper", "body": "adding visitroute test helper take arguments linkto implementation far import ember ember var testhelpers function embertestregisterasynchelper visitroute function var args arrayprototypeslicecall arguments var app argsshift var router appcontainerlookup router main export default testhelpers see uses rather unsightly hack initialize router cleaner way", "num": "10918", "d": "4/2015"}, {"title": "route transition always updates url lazily", "body": "noticed transitioning new route url lazily update ie route completely done transitioning create issues slow failed transitions refreshing page put back old route digging found ember switched eager lazy time also noticed docs currently outofdate urls always update immediately unless transition aborted redirected within run loop like idea route rendering eager lazy based whether loading route provided anyway extended url updating basically would nice way configure whether transition update url eagerly lazily currently forcing eager updates replicating bit code transitions update url eagerly javascript var transition thistransitiontoroute newroute queryparams queryparams var newurl transitionroutergenerate newroute queryparams transitionqueryparams transitionurlmethod update transitionrouterupdateurl newurl else transitionurlmethod replace transitionrouterreplaceurl newurl transitionmethod null prevent later update url refire", "num": "10917", "d": "4/2015"}, {"title": "regression rendering wrong outlet hijacking using", "body": "one pooled recent issues around rendering hijacking routes manually rendering outlets named outlets nested children involved nested child route resources rendering main outlet rather respective parent outlets kind weird issue describe description probably nt justice check jsbins side side working broken cc", "num": "10916", "d": "4/2015"}, {"title": "application resolver nt properly singularize pluralize types", "body": "following folder structure app case strategies strategies directory leads believe somewhere resolver ember adding taking away instead properly using emberstringsingularize great resolver could handle cases users directories names like elves calves oxen etc", "num": "10914", "d": "4/2015"}, {"title": "missing public api detecting whether class extends mixin", "body": "currently hack around ember ember data checking like example", "num": "10911", "d": "4/2015"}, {"title": "fastboot memory leaks fastboot mode", "body": "preliminaries simply stated use case small ember application running nashorn script engine jvm nashorn optimizing jit javascript compiler similar test case mediumcomplexity page consisting update stream similar news feed sites like linkedin facebook figure shows example rendering test page rendered stream raw output page continues updates update consists profile picture headline brief description comments become important later like action data page fetched static json files test methodology simple use ember visit function render exact page many times serial loop record results iteration roughly approximates conditions app experience running server figures show results test run first thing note runaway heap usage figure shows dramatic increase live heap allocations time goes reaching nearly iteration rendering page entirely independent previous render significant growth memory consumption time clearly leak kind figure shows long takes render test page iteration test everything renders slowly first since script engine still figuring compile optimize code iteration average performance pretty good note frequent large vertical blips however caused garbage collection pauses leak actionhelper item stream corresponding template defines layout view one component layout stream item like button figure shows part update template containing like action template rendered action helper signals like handle interactions button eventually wind ember actionhelper function actionhelper function receives relevant information potential interaction including view might happen places view actionoptions object passes object registeraction function registeraction function event handler object built placed global action registry object actionmanagerregisteredactions actionmanager really exposed global always reachable global variable registry object never collected since handler function action closes options object turn contains view object views model objects templates etc also never collected temporarily worked around leak manually clearing registeredactions object render something like following note ca nt simply set registeredactions aliased places would wipe one reference object note part followup investigation nathanhammond found actually code ember meant clean registeredactions object seems code path triggers event never executed fastboot mode however leak application creation node unit tests ember suggest proper usage create new application object run however usage leads another leak figure shows application class extends namespace class initial part namespace definition shown figure whenever application object created init function called pushes created application onto global namespaces array create new application object render array grows constantly time along objects reachable application worked around one creating single application instance reusing render seems work fine clear intended usage note try use fails following error seems never set visit flow conclusion leaks patched graphs look much better figure shows comparison heap usage memory leaks removed amount leakage remains nt yet identified otherwise dramatically improved figure shows impact render times gc noise eliminated overall render times slightly lower update test app create isolated test app demonstrates leak node find clone repo select ember canary given option third step running last command note accumulation action handlers watch memory usage profiler", "num": "10910", "d": "4/2015"}, {"title": "set get methods undefined", "body": "trying change property ember object found findby api object get set api undefined still browser dev tool shows availability please refer attached images", "num": "10909", "d": "4/2015"}, {"title": "input helper removes list mylist attribute rendered html", "body": "jsbin demonstrating issue input helper accepts attributes static strings variables instance ember render ember render like try write failing test however fairly new still working things thanks taking look", "num": "10908", "d": "4/2015"}, {"title": "ember longer defers embercli resolver", "body": "since decoupling registry container broke api deferring embercli resolver specifically longer called emberresolver broke embervalidations relying upon resolving outside application namespace feature supported emberresolve since oct believe treated bug patched rather backporting emberresolver support registry cc dgeb stefanpenner rwjblue", "num": "10907", "d": "4/2015"}, {"title": "trying get location route hook gives previous location", "body": "try get url object ember route hook actually get previous location dug around works aftermodel function model emberrunschedule afterrender gt consolelog thisget routerurl sometimes may race condition case sometimes updates time sometimes nt schedule aftermodel hook works consistently far didtransition event particular accurate full url least either way problem obvious documentation anywhere doable hour drain get url something browser gives readily every developer knows second unless framework obscures route hooks sync browser", "num": "10906", "d": "4/2015"}, {"title": "regression non singleton controllers nt appear thing ember", "body": "simple app returns model child route controller singleton default ember today works fine child routes model hook invoked model bound controllerviewtemplate expect trick flip singleton bit initializer controller suddenly nt exist ember inspector goes showing controllers today initializer looks like import wat kanbancontrollerstodostodo export function initialize container application applicationregister controller todostodo wat singleton true making false breaks world little hacking found add function listens init controller see indeed get invoked twice stack shows controllerfor part mix first time around controller see would happen nt jsbin throw together branch embercli example app need context non singleton controller still supported ember wrong assuming nt find real bug apologies feels like stackoverflow question instead actually started deeper dive feel like could true bug unsupported feature", "num": "10904", "d": "4/2015"}, {"title": "maintain itemcontroller subset", "body": "ran interesting issue using array controller showing subset given items itemcontroller set itemcontroller nt seem work intended would expect able still use computed properties items controller even working subset items array may little confusing apologize however made js bin help illustrate point realize may able solve route nt seem right instance user altered state given route show list products posted given time frame would nt want reload whole route filtering also note worked ember lt feel may side effect new block params better way accomplish something wrong please let know thanks work ember lyfe yo", "num": "10902", "d": "4/2015"}, {"title": "emberfeatures merged", "body": "otherwise using custom development build ember app feature flags enabled entirely overwrite provided ember example flag lost custom build canary entirely unusable merge likely happen rwjblue mentioned string replace build process changes also needed", "num": "10901", "d": "4/2015"}, {"title": "blocks working custom builds", "body": "", "num": "10900", "d": "4/2015"}, {"title": "could import markdownit ember cli", "body": "installed markdownit via bower npm trying import ember app could import trying use markdownit ember helper first installed bower tried import helper showing error tried use emberbrowserify install via npm tried import helper import markdownit npm markdownit export default emberhandlebarsmakeboundhelper function input var result markdownitrender input return new emberhandlebarssafestring result showing error also tried using nothing working", "num": "10898", "d": "4/2015"}, {"title": "index issue bit ios", "body": "seen issue one apps outputs index first time round seen issue iphone ipad iphone iphone works fine makes suspect another issue ios repro embercli app minimal could make commit contains everything interestingly commit seems make things work", "num": "10897", "d": "4/2015"}, {"title": "difference behaviour inlineif vs bindattr", "body": "screenshot shows applied classname span inlineif behave created demo ember cli app contains minimum required code reproduce issue", "num": "10895", "d": "4/2015"}, {"title": "readonly attribute able bound valid element button", "body": "think comes fact form attribute property readonly use things properly updated code path htmlbars takes setpropertystrict seems reproducible hopefully screenshot enough notice attribute even though list value thought might related unsure though much context fairly reduced testcase property setting vs setattribute note ends attribute seem case intended able updated since spec explicitly outlines handle updates make matters worse appears chrome dev chrome canary chromium throw error line found nt report bug one using beta browsers think error might correct screenshot error message uncaught typeerror set property form getter mostly paste googleability people hit helpful think might need whitelist readonly attributes ones", "num": "10894", "d": "4/2015"}, {"title": "nesting templates render working", "body": "following code applicationhbs render topbar outlet topbarhbs render search searchhbs search bar results following error emberdebugjs uncaught typeerror undefined function js bin ember version", "num": "10892", "d": "4/2015"}, {"title": "app crashes tab devtools open initial load", "body": "really sure debug submitted issue tried logs nothing obvious also happens", "num": "10889", "d": "4/2015"}, {"title": "objectcontroller deprecation warning arraycontroller content array", "body": "got logic inside arraycontroller hide elements using foreach loop content array throwing objectcontroller deprecation warning think may error code question javascript import ember ember export default emberarraycontrollerextend actions hidemarkersexcept function markertokeep thisget content foreach function marker markerid markertokeepid return couple bits context variable item model actions called views sent mouseenter mouseleave warning getting saying since set deprecated switch however since calling set model element wo nt work undefined context deprecation warning case correct behavior", "num": "10887", "d": "4/2015"}, {"title": "published embersource gem", "body": "see version apps using embersource gem get error trying update", "num": "10885", "d": "4/2015"}, {"title": "ember breaks rendering application route", "body": "jsbin minimal example problem note application route immediately renders loading template later replaced index route template model resolves used artificial delay make obvious note also using ember replace script tags app throws error undefined searching error led helpful suggestion nt use outside rendertemplate action handlers clear could achieve result otherwise new substate seems broken least ca nt get work embercli rate suggestion accurate would seem major breaking change nothing mentioned changelog general expectation minor releases backwards compatible", "num": "10884", "d": "4/2015"}, {"title": "regression replacein nt replace", "body": "according documentation replace content given element seems work looking confirmation bug would happy investigate open pr edit narrowed ember bug introduced probably commit", "num": "10881", "d": "4/2015"}, {"title": "", "body": "app relying way ember renderingusing run loop testing trying templates render loading state promise returning array items resolved test following passes ember fails ember returning arrayproxy gets populated promise check template whether arrayproxy isloaded setting isloaded property arrayproxy promise resolves app works perfectly running stubbed request response time seconds get loading state template array populates promise finally resolves data shown", "num": "10880", "d": "4/2015"}, {"title": "ignore get snapshot model using public api", "body": "hi saw already discussed afaik nt really cover use case hence new issue imho warranted use case follows ember data retrieving data using online store using restadapter saving data offline store using code basically something like coffeescript copytoofflinestore orderdraft resolve reject fixme using private api never nice orderdraft orderdraftcreatesnapshot works data correctly stored localforage indexeddb case calling private apis course never advisable would correct approach tried first serialization manually wiring phony object method working ember data beta problems caused update ember data beta using moment seems like phony object would pass needs methods etc feels complex suggestionspointers issue copy model instance one store another please tell means saying best even correct approach trying get something works first ember unfortunately backport solution older ember data well huge thanks advance", "num": "10879", "d": "4/2015"}, {"title": "proposal get helper", "body": "love addon jmurphyau see reason core", "num": "10878", "d": "4/2015"}, {"title": "document queryparamsdidchange", "body": "right action triggered query params change useful needing override usual queryparamchanging behavior however method ember docs find mention discussion online", "num": "10877", "d": "4/2015"}, {"title": "reason public api convert emberobject back native js object", "body": "find needing lot wondering rationale behind nt added framework would think use cases would plentiful obvious emberobject adds lot metadata extra properties plain object ever want operate object generic function iterates object properties properties really get way", "num": "10875", "d": "4/2015"}, {"title": "using embercomputedalias computed property", "body": "adding computed property return value computed property component shall contain settings configure child components fails firefox much recursion error something supported ember work case willing write test case component contains following code property value used create child component edit object properties editorcomponents function let topicobj thisget topicobj property topicobj", "num": "10872", "d": "4/2015"}, {"title": "warning binding style attributes may introduce crosssite scripting vulnerabilities", "body": "ember version warning go away binding style attribute safe string indicated", "num": "10870", "d": "4/2015"}, {"title": "emberview removing observers destroy", "body": "noticed different behaviour migration observing controller property inside emberview like change route state willdestroyelement method called ember removing observer open view stepchanged method called two times thing stepchanged method called three times need add removeobserver inside willdestroyelement work properly", "num": "10869", "d": "4/2015"}, {"title": "appreset broken", "body": "noticed app upgraded ember amp emberdata reset app sign also created new embercli app served ran cases", "num": "10867", "d": "4/2015"}, {"title": "documentation async test helpers available unit tests", "body": "documentation ember testing page explicit async test helpers like click andthen find available default acceptance tests unit tests think would useful mention explicitly people nt get two confused thanks", "num": "10866", "d": "4/2015"}, {"title": "make calling set destroyed object error descriptive helpful debugging", "body": "wish request emberjs developers consider changing error raised set called destroyed include information would help developers isolate faulty part application thus debug easily yet biten error app already experienced plenty daylong debugging sessions tests suite exploded error left dark origins problem basic solution issue would include name property attempted set destroyed object change alone would great improvement towards current situation however would like take step thus make dev builds emberjs also new value property well object failed", "num": "10865", "d": "4/2015"}, {"title": "linkto active class applied nested routes", "body": "expect one route path matched applying class link therefore cancel button goes back expect class example output links visible would expect actually get jsbin example code reproducing nt see anyone else gh issue representing bug sorry duplication", "num": "10863", "d": "4/2015"}, {"title": "infinite loop component helper controller component name", "body": "prepare ember transition try create name component controller order migrate routable component later however using component helper seem cause indefinite loop example code demo", "num": "10862", "d": "4/2015"}, {"title": "input helper type email breaks", "body": "throws invalid argument input helpers ember", "num": "10860", "d": "4/2015"}, {"title": "emberhtmlbars class attribute tests failing using wrong assertion", "body": "many tests file failing assertions instead assertions changed becomes clear additional spaces added class names last test particular either broken reveals something wrong way htmlbars handling classes", "num": "10858", "d": "4/2015"}, {"title": "new class bindings discard classes update", "body": "starting ember binding class element later add class element direct dom manipulation using jquery case class discarded bound value changes prior classes left alone jsbin illustrating happening click lower button add border class text using jquery click top button add red class text using ember bindings border class erased understand ideally want use ember tools ember app sometimes need use third party libraries requirements make impossible since fix pretty simple believe preserve alien classes update ember classes", "num": "10856", "d": "4/2015"}, {"title": "embersortablemixin failing cli", "body": "noticed add controller ember inspector immediately falls alltoocommon uncaught typeerror undefined function taking mixin immediately restores embergoodness albeit wo sortable functionality might emberinspector defect nt sure categorize stacktrace", "num": "10855", "d": "4/2015"}, {"title": "error processing route coursesindex read property match undefined typeerror read property match undefined", "body": "got error try get records env router js approuterjs import ember ember import config configenvironment var router emberrouterextend location configlocationtype routermap function thisroute login thisresource courses function thisroute show path courseid export default router adapter js appadaptersapplicationjs import ds emberdata import env configenvironment var conf namespace api envonline confhost envapihost export default dsrestadapterextend conf mdoels js appmodelscoursejs import ds emberdata export default dsmodelextend title dsattr string desc dsattr string imageurl dsattr string rating dsattr number price dsattr number learnedcount dsattr number purchased dsattr boolean teacher dsbelongsto teacher js appmodelsteacherjs import ds emberdata export default dsmodelextend profile dsattr string user dsbelongsto user js appmodelsuserjs import ds emberdata export default dsmodelextend avatarurl dsattr string birthday dsattr date education dsattr string gender dsattr string industry dsattr string isteacher dsattr boolean job dsattr string nickname dsattr string workexperience dsattr string ajax request successful repsonse data like restful overwrite method js appserializerscoursesindexjs import ds emberdata export default dsrestserializerextend transformation courses id title teacher id title teacher teachers id name user id name user users id nickname id nickname extractarray function store type payload consoleinfo extract array nt know wrong please help", "num": "10854", "d": "4/2015"}, {"title": "recommend changing emberenv correct way access environment embercli guide", "body": "using emberenv directly seems always default configuration setup server boots creates issue test environments code configured directly global workaround use config object environment work tests test env development env import model marketplacebasedatamodelimport config configenvironment modelreopenclass host configemberenvmarketapihost issues using emberenv way thank robotarmy", "num": "10852", "d": "4/2015"}, {"title": "containerhas deprecation seems strange", "body": "whats rationale", "num": "10851", "d": "4/2015"}, {"title": "currenturl fails ember calls visit", "body": "tldr calling acceptance tests calls worked ember throws error ember acceptance test interacts modallike search interface accessible routes application wrote helper methods reduce repetition tests look something like var searchfor function query showsearch fillin searchpane input query var showsearch function andthen function currenturl indexof path access search visit path access search show search already showing andthen function find searchpane input length click search div way care whether right path whether search interface currently showing ember longer check see whether need navigate somewhere searching throws line specifically call desired change maybe makes sense require call checking url unexpected change work around call required maybe could error message effect demonstrative js bins adapted current currenturl issue working ember broken ember still broken hopefully right script tags also copied issue", "num": "10850", "d": "4/2015"}, {"title": "docs need info accepted ember pattern new edit routes", "body": "suppose dsmodel comment common resourceful pattern commentsroute commentroute commetsnewroute commenteditroute case edit new route needs something like coffee commentsnewroute emberrouteextend model gt storecreaterecord comment teardown emberon deactivate gt model get controllermodel modeldeleterecord modelget isdirty coffee commentsnewroute emberrouteextend model gt storecreaterecord comment actions willtransition gt model get controllermodel modeldeleterecord modelget isdirty need clean new rollback edit common requirement feel documentation ember website really puts foot recommend ember canon way considering deactivate rolled assume first one would recommended anyway please let know guys think pr documentation", "num": "10849", "d": "4/2015"}, {"title": "deprecated emberstringfmt", "body": "", "num": "10848", "d": "4/2015"}, {"title": "linkto support map areatag href attribute", "body": "following also supported map area coordinates", "num": "10847", "d": "4/2015"}, {"title": "component tagname width height attribute regression", "body": "since ember regression related assign percentage unit convert percentage units see link problem edit also nt work canary build", "num": "10846", "d": "4/2015"}, {"title": "iterate object helper", "body": "handlebars could iterate object keyvalue pairs htmlbars get error design bug", "num": "10845", "d": "4/2015"}, {"title": "api documentation promises needs fixed", "body": "looked changing content sending pull request could find file located source code sample code rsvppromise class shows examples return new promise one embercli instead", "num": "10844", "d": "4/2015"}, {"title": "fragment identifier longer part url", "body": "passing test visit someid andthen function assertequal currentpath index current path assertequal currenturl someid current url switched canary fails returns empty string", "num": "10842", "d": "4/2015"}, {"title": "viewrendering outlet views template fails qunittests", "body": "see fiddle way used work also found recommended however since get error example error disappears one removes nt tests looks like regression", "num": "10840", "d": "4/2015"}, {"title": "error template must function ember", "body": "hi getting upgraded ember ideas idea start", "num": "10839", "d": "4/2015"}, {"title": "embercontrollercalculatecachekey failure routes nested", "body": "example catch failure causes incorrect storerestore query parameter see links example see words value route sets routes however value correctly works described section leads failure set breakpoint line condition debugger stops execute line debugger stops result set try get contains simplest example returns", "num": "10838", "d": "4/2015"}, {"title": "unescaped triplestash expressions render fastboot", "body": "simple unescaped expressions render anything node eg simple example app", "num": "10837", "d": "4/2015"}, {"title": "embercomputedand possible regression", "body": "ember code ember computedand true ember computedand introduced", "num": "10834", "d": "4/2015"}, {"title": "range slider update value position max changes", "body": "demonstrates issue range slider input helper click button max doubles slider reposition tried code workarounds following comments neither worked even setting resetting value must ember optimization magic tips implementing alternative workaround would appreciated", "num": "10833", "d": "4/2015"}, {"title": "ca nt call thisrender inactive routes anymore", "body": "flash dialog stopped working flow looked like javascript import ember ember import recoverpassword actionsrecoverpassword const later emberrunlater const get emberget export default emberrouteextend actions sendpasswordresetlink function controller let form get controller model success function message hash var controller embercontrollerextend type inline isnotice true messages message hash lookup flashsuccess new date gettime less documentation issue rather formal bug report wanted make sure got reported", "num": "10832", "d": "4/2015"}, {"title": "issue replacewith used nt keep browser state", "body": "hello found bug use method replacewith best thing explain example let say page called page link click link transitioned route register happen multiple steps page nt know anything decided route redirect user first step flow using user access route without problem user press browser back button instead going back page page coming user goes back page came checked browser state seems like page replaced page nt appear anymore history believe browser keep state page user coming even though call transition thanks", "num": "10831", "d": "4/2015"}, {"title": "template reading html codes properly emtextfield", "body": "value html code suppose amp lt amp value displayed emberhandlebars prevent browser default work seems", "num": "10830", "d": "4/2015"}, {"title": "subsequent history erased transition page queryparams", "body": "hello team repo quickly reproduce weird behavior queryparams history location type exact line erase history totally legit according documentation method invoked pushstate method remove entries browsing context session history current entry current entry last entry session history entries removed steps reproduce enter letters contact name input field eg ja click contact name click back browser toolbar return previous page history outcome history entry contact page erased impossible click forward get back onto expected outcome history entry contact page erased fix change location type history hash notice possible safely navigate without side effect queryparams applied empty input field click contact click back forward link preserved", "num": "10828", "d": "4/2015"}, {"title": "regression nested render helpers result uncaught typeerror", "body": "using nested render helpers results seems began changes made jsbin reproduces simple example carried", "num": "10827", "d": "4/2015"}, {"title": "observers undefined upgrading", "body": "hi upgraded observers undefined resulting error package bower", "num": "10825", "d": "4/2015"}, {"title": "aliases enumerated", "body": "docs indicate return value friends enumerated call eg yield one cp demonstration", "num": "10823", "d": "4/2015"}, {"title": "observers services", "body": "trying something reducible jsbin observer injected service value nt get called value changes add set pair like actually gets called twice presumably seems like service values observable maybe quite right bug", "num": "10821", "d": "4/2015"}, {"title": "errors occurring superwrapper swallowed higher stack undefined function", "body": "related transition event calls code generate undefined function error reproduction error patch log error demonstrate crux problem nt embercli specific noticed upgrade ember essentially problem given programmer error calling function dose nt exist class definition invoking class definition runtime operation cause transition result swallowed exception generic albeit correct javascript error ie programmer error import ds emberdata export default dsmodelextend name dsattr string hose dscake string using programmer error import ember ember import item ecnewmodelsitem export default emberrouteextend model function return itemcreate result expected ember swallow stack traces otherwise mangle error stream error particular actually happening superwrapper wrapping error reraising would ugly much workable current overly sanitized message try length ret funccall else length ret funccall arguments else length ret funccall arguments arguments else var args new array length var lt length args arguments ret apply func args catch e consolelog e throw e stack preserved intended suggested fix expect ember team better idea without mangling error stack", "num": "10814", "d": "4/2015"}, {"title": "handlebars helpers regressions", "body": "use handlebars helpers determine users see certain parts ui unfortunately creating custom ifelse style block helpers gotten challenging ember release since seeing significant breaking changes documentation updating handlebars helpers work newer ember releases jsbins illustrate helpers breaking ember works expected ember breaking change inverse ember white screen doom ember block helpers disabled tried find documentation regarding evolution handlebarshtmlbars understand adapter code make handlebars htmlbars play together context helpers run changed case see breaking change least opportunity someone document adjust registered helpers operate expected newer ember versions thanks", "num": "10812", "d": "4/2015"}, {"title": "descriptors monkeypatched arrays interferes ace editor possibly code", "body": "earlier metal think descriptor constructor changed descriptor constructor called used work fine big deal calling correctly inside code also monkeypatch bunch properties using onto javascript builtin objects eg arrays code interacts code like deepcopy function ace editor javascript exportsdeepcopy function obj typeof obj object obj return obj var cons objconstructor cons regexp return obj line crashes tries create descriptor properties monkeypatched arrays ace editor authors bit careless since ones decided mess global builtins figured bug report belongs page suggested fix", "num": "10810", "d": "4/2015"}, {"title": "font api documentation", "body": "honestly font used navigation bar windows looks ugly opinion nt want insult anybody example link emberextensionsupport x bigger e bigger mess imo", "num": "10808", "d": "4/2015"}, {"title": "changes break approuter initializers", "body": "changes breaks following using embercli router used initializer destroyedreplaced loaded change fixed issue probably documentation people hitting problem", "num": "10807", "d": "4/2015"}, {"title": "guide suggestion improve links installing ember page", "body": "first would helpful installing ember page guides link important site documentation nt available elsewhere mention right top talking installing embercli could put little figuring embercli help text alone pretty cryptic second section link tied npm points back paragraph contains link little strange confusing click day long nothing seems happen unless trying play tricks people might want either actually link page nom remove link", "num": "10804", "d": "4/2015"}, {"title": "ember regression url updated visiting route twice using historylocation", "body": "demo click index click browser back button click index url remain example demo working ember demo wild go click article click browser back button click article url culprit javascript seturl function path var state thishistorystate path thisformaturl path regression appears added commit", "num": "10801", "d": "4/2015"}, {"title": "scheduling method throw", "body": "undefined ember probably throw method scheduled think assert warranted probably note even scheduled method called error warning", "num": "10800", "d": "4/2015"}, {"title": "embercomputedalias deprecated", "body": "hi get lot warnings deprecation using function getter setter deprecated see details use embercomputedalias nothing else computed function embercomputedalias also deprecated change getter setter edit oh maybe warnings comes emberdata regards sebastian", "num": "10799", "d": "4/2015"}, {"title": "ember copy nt copy nested hashes", "body": "", "num": "10798", "d": "4/2015"}, {"title": "arraycontroller expects implement emberarray mixin error using itemcontroller", "body": "ember regression javascript appindexroute emberrouteextend model function return emberobjectcreate appitemcontroller embercontrollerextend seems trying iterate falsy property null undefined using option throw following error uncaught error assertion failed arraycontroller expects implement emberarray mixin often fixed wrapping model working jsbin make example work add empty array model remove part revert", "num": "10796", "d": "4/2015"}, {"title": "ca nt avoid xss vulnerability warning", "body": "making content safe string nt avoid xss vulnerability warning javascript backgroundcolorstyle emcomputed function return backgroundcolor fmt thisget color htmlsafe property color html", "num": "10794", "d": "4/2015"}, {"title": "using ember spring right way", "body": "hi looking good way use ember spring without removing avoiding framework properties good way guy got working formating json", "num": "10793", "d": "4/2015"}, {"title": "collectionviewattributebindings broken", "body": "using attributebindings collectionview generates following error jsbin illustrating problem case occurs item added initially renders processing inside assume might related issue", "num": "10792", "d": "4/2015"}, {"title": "old link web site points old docs", "body": "documentation link bottom community tab ember website points old version guides instead", "num": "10791", "d": "4/2015"}, {"body": "dont think bug improper use trigger router completely leaves route validation phase new route old route still active new route succeeds fails actually unloading records new route model hook fetches server might recommend unloadall willtransition method", "d": "4/2015"}, {"body": "road ember said two special forms deprecated refactor templates use new block parameters", "d": "4/2015"}, {"body": "ok point whether documented api goto documentation ember users", "d": "4/2015"}, {"body": "reached eviltrout samsaffron twitter hope get back soon think discourse hosting instance us", "d": "4/2015"}, {"body": "looks like tomdale wycats wifelette anyone else admin access discourse instance", "d": "4/2015"}, {"body": "dcherman fault sorry everything working let know still trouble", "d": "4/2015"}, {"body": "see workaround manually remove observer destroy hook", "d": "4/2015"}, {"body": "oh didnt see already open issue thx info hack works duplicate close issue", "d": "4/2015"}, {"body": "phone right digging link difficult known regression appears webkit bug makes first item selected browsers correct oddly enough pushing glimmer unable find time fix look tildeiohtmlbars krisseldonmorphrange repos details", "d": "4/2015"}, {"body": "mixonic thanks reply see contribute solution meantime make sure rely much default selection workings realize known issue", "d": "4/2015"}, {"body": "came shortly released nt time find solution yet grapho sorry causing pain", "d": "4/2015"}, {"body": "rwjblue haha worries get app behave way want mixonic based comment expected default selection supposed according html spec first last clear anyway though know find definition select view maybe spend little time looking looking code initial observation prompt property defined either value selection bound null value bound selectview relies set object index returned confirmed returns either browsers last index browsers dont see clean way around except explicitly setting selection property first object array perhaps part method letting rest code operate normal play around see get something work", "d": "4/2015"}, {"body": "mixonic rwjblue sorry pain opinion issue emberselect view issue ember rendering way confusing browsers properties think indeed emberselect possible pr ready", "d": "4/2015"}, {"body": "believe issue ultimately htmlbars combined usage emberselect mixonic likely understands underlying problem better might able correct issue work around ember selecting first option default selection setup", "d": "4/2015"}, {"body": "rwjblue pr currently fork would emberselect method since issue prompt default selection value binding nul single style select yes workaround perhaps lessthancommon situation hold pr mixonic feels deeper fix issue", "d": "4/2015"}, {"body": "grapho please feel free pr would likely easier mixonic review time", "d": "4/2015"}, {"body": "k", "d": "4/2015"}, {"body": "provide reproduction tests added pull request passing sure failing without repro", "d": "4/2015"}, {"body": "jsbin running ember wait two seconds click foo link bar link jsbin running clicking link never shows bar link route seemingly never registered", "d": "4/2015"}, {"body": "expected behavior cc rwjblue stefanpenner", "d": "4/2015"}, {"body": "marking regression behaviour custom elements never specified", "d": "4/2015"}, {"body": "mentioning looks related rwjblue suggested using attributes added wa nt context custom tag name", "d": "4/2015"}, {"body": "nt valid javascript notation nt typo instead read", "d": "4/2015"}, {"body": "thanks typo question updated", "d": "4/2015"}, {"body": "ember data repo", "d": "4/2015"}, {"body": "think related issue bet param temporarily remove config retry work", "d": "4/2015"}, {"body": "yes setting author queryparams refreshmodel false workarounds issue thank workmanw", "d": "4/2015"}, {"body": "emberradiobutton problem moved", "d": "4/2015"}, {"body": "epadronu resolving models model hook since wait till everything resolved js export default emberrouteextend model return emberrsvphash model thisstorefind mymodel users thisstorefind user setupcontroller controller resolved thissuper controller resolvedmodel controllerset users resolvedusers ps would avoid using since deprecated", "d": "4/2015"}, {"body": "thanks advice knownasilya forgot mention modelusers model property type dshasmany async equal true undesired behavior getting involve said modelusers model property users controller property way implement pattern described model property nature mentioned seeing something obvious ps apology english skills getting better though xd", "d": "4/2015"}, {"body": "epadronu use template", "d": "4/2015"}, {"body": "thank soon try select view let know turned ilya radchenko notifications githubcom epadronu use modelusersisfulfilled modeluserslength template reply email directly view github", "d": "4/2015"}, {"body": "times needs routes another route recall correctly works controllers sure mean provide example snippetjsbin", "d": "4/2015"}, {"body": "correct works controllers williamsbdev wants able access route route since routes singletons sure helpful may perhaps actions", "d": "4/2015"}, {"body": "rwjblue btecu thank correcting code work app route thought required", "d": "4/2015"}, {"body": "mhmm sure nt even appear changelog anymore", "d": "4/2015"}, {"body": "published thanks raising", "d": "4/2015"}, {"body": "problem happy help", "d": "4/2015"}, {"body": "ember render cases confirm", "d": "4/2015"}, {"body": "hey guys sure right approach looking guidance make better least seems solve issue cc stefanpenner wycats", "d": "4/2015"}, {"body": "problem null undefined imho work", "d": "4/2015"}, {"body": "tried multiple names routecontrollerform clear potential form reserved name affect outcome", "d": "4/2015"}, {"body": "found error intending refactoring objectcontroller controller removed controller left object course controller windowapptimcontroller emberobjectextend facts foo bar", "d": "4/2015"}, {"body": "fivetanley", "d": "4/2015"}, {"body": "glimmer pr existing attrnodes code completely rewritten focused trying ship landing master next week longterm fix pr function returning attrnodes views remove code looking branch", "d": "4/2015"}, {"body": "mixonic using beta builds page pr applied right function indeed return attrnodes views problem described original post view removing object attached attrnodes placed destroyed removed inserted back recreates attrnodes causes two identical addrnodes rendered old one object crashes renderer fixed issue placing additional check manaully places attrnodes ensure destroyed", "d": "4/2015"}, {"body": "adapted one rwjblue jsbins demonstrate unrecognizedurlerror", "d": "4/2015"}, {"body": "although investigation needed theory escaped version faster htmlbars case content nt manually escaped rather right dom api used ultimately leaves content inert browser nt attempt treat anything textcontent said difference somewhat suspicious sure ember app nt extra strange", "d": "4/2015"}, {"body": "try create minimal test case", "d": "4/2015"}, {"body": "sets value directly text dom node must convert string dom correct context trtd tags append dom nt surprising latter slower seems mildly suspicious please report back", "d": "4/2015"}, {"body": "seems mildly suspicious please report back ya curious something funky insert many inserts", "d": "4/2015"}, {"body": "per insert block created minimal example unable reproduce issue maybe related rather complicated css svg rendered could browser thing htmlbars innocent", "d": "4/2015"}, {"body": "per insert block worth noting times really useful relative magnitude absolute times existing enabled instrumentation quite slow totally possible instrumentation glitch share example would love see action", "d": "4/2015"}, {"body": "unfortunately closed source software ca nt show anything yet least", "d": "4/2015"}, {"body": "unfortunately closed source software ca nt show anything yet least share outputed html snippet", "d": "4/2015"}, {"body": "removed wrapping view mind mapping tool nodes connections", "d": "4/2015"}, {"body": "additional try see another error stating function resolves function trying invoke pojo error particular case line points following code", "d": "4/2015"}, {"body": "see calling code could create jsbin showing issue", "d": "4/2015"}, {"body": "thanks reaching jmurphyau acutally instance working jsbin sample could nt extract code well enough", "d": "4/2015"}, {"body": "instance emberobject class case issue designed reopen class add new functionsproperties instances class designed used instance want redefine properties instance look defineproperty", "d": "4/2015"}, {"body": "oh boy thanks jmurphyau nt know thinking look example given docs clear cryingcatface thanks sometimes would make sense another pair eyes looking code one produces smile", "d": "4/2015"}, {"body": "specifically happening somewhere within embernfgraph nfgraphcontent component started upgraded ember", "d": "4/2015"}, {"body": "observable property observing would cause error", "d": "4/2015"}, {"body": "quick scan repo see instance observing could either consuming application something like inspector inspector open cause properties object selected observed", "d": "4/2015"}, {"body": "thing think accessing dom element via something like another component fwiw looked version history found used use set area", "d": "4/2015"}, {"body": "access via would nt cause right seems like something set property component default getter assertion sure set", "d": "4/2015"}, {"body": "use another views template somewhere else nt even know would work template usage would setup observer cause error", "d": "4/2015"}, {"body": "suppose depends use element", "d": "4/2015"}, {"body": "probably happening get element sets events think", "d": "4/2015"}, {"body": "bingo culprit wager thanks rwjblue", "d": "4/2015"}, {"body": "fwiw ember consistent seems like wat ember everything else ember delightfully uniform least gives clean errorsassertions abuse thing author assumed ember ember would allow observe depend get damn near anything", "d": "4/2015"}, {"body": "store would registered service means seems ed already registers service", "d": "4/2015"}, {"body": "ah using emberorbit take look ed", "d": "4/2015"}, {"body": "latest ember inline hth", "d": "4/2015"}, {"body": "ariroseonline think rlivsey right idea micro syntaxes like great experienced devs also troll new users trying get speed really rich api think ember try move away rather try make handle cases encourage explore idea addon grabs interest think could great htmlbars helpers could come classes", "d": "4/2015"}, {"body": "inflector issue open right place closing one favor one", "d": "4/2015"}, {"body": "tested latest versions firefox chrome", "d": "4/2015"}, {"body": "nt seen working ember js bin example internet week seems working recommend people pin examples specific version ensures stable future may interesting provide semver stable links drift patchminor releases etc possible fix ember builds link yup fivetanley rwjblue twokul three likely familiar part build care take look", "d": "4/2015"}, {"body": "duplicate updated quite long time updated jsbinjsfiddles would still broken would need added", "d": "4/2015"}, {"body": "tl dr pin exact version deal breakages time blog article contains broken due maybe list collectively try work authors fix", "d": "4/2015"}, {"body": "think solved would right way get list keys days right close issue thanks", "d": "4/2015"}, {"body": "emberkeys part public api expect stick around least ember", "d": "4/2015"}, {"body": "emberdata question ember question believe constructorattributes embermap public api enumeration", "d": "4/2015"}, {"body": "cc machty", "d": "4/2015"}, {"body": "likely basehref set poor embercli default likely causing grief cc mixonic", "d": "4/2015"}, {"body": "related fills pie slices pattern seems unrelated ember see response github given relatively new ember may inaccurate regarding reasoning workaround however works fine", "d": "4/2015"}, {"body": "thank littlejon fix worked changed locationtype hash configenvironmentjs however would nice fixes using push state feature enabled", "d": "4/2015"}, {"body": "actually think made work fine assertion using nonquoted argument due historical cleanup used treat outlet name outlet name equivalent assertion get people stop think everybody time move quoted strings would safe offer bound argument form", "d": "4/2015"}, {"body": "glimmer feature would probably line change", "d": "4/2015"}, {"body": "understood seems like need forkmaintain special outlet would conflict w dep warnings place", "d": "4/2015"}, {"body": "tips avoid forking currently trying see invoke original outlet stringify index blows currently mostly looking let know headed right direction", "d": "4/2015"}, {"body": "nt think fork add custom helper something like nt give bound name outlet name parameter changes wo nt rerender work case want use array indices remain stable life outlet", "d": "4/2015"}, {"body": "wycats pointed feature actually implemented glimmer already need decide remove legacy assertion", "d": "4/2015"}, {"body": "nt need make custom htmlbars helper register using ember emberhtmlbarsregisterhelper customoutlet myoutlethelper", "d": "4/2015"}, {"body": "yes would register function showed something like", "d": "4/2015"}, {"body": "confusing part land w embercli typically export fn helpers directory inside ember source see emberhtmlbarsregisterhelper things like outlet register showed expose templates app", "d": "4/2015"}, {"body": "would call", "d": "4/2015"}, {"body": "currently seems work", "d": "4/2015"}, {"body": "quick update anyone might follow able access custom hbs helper using export default emberhtmlbarsmakeboundhelper syntax nt providing stream like vanilla outlet helper instead suggested appjs file works one exception use registerhelper instead registerhelper odd reason js var wat function params hash options env var view envdataview var property main paramslength gt property params var viewclass viewcontainerlookupfactory view outlet hashoutletname property optionshelpername optionshelpername outlet return envhelpersviewhelperfunctioncall viewclass hash options env emberhtmlbarsregisterhelper customoutlet wat", "d": "4/2015"}, {"body": "actually interesting suggestion teddyzeenny thoughts", "d": "4/2015"}, {"body": "opsb nt think currently possible build url without initial visit need routerjs instance build url routerjs initialization initial visit happen method call think would need change works stefanpenner think good idea helper core feature want support core think would make sense add existing helper would consistent works detect url path act accordingly concern would break existing visit calls without since would detected path instead url", "d": "4/2015"}, {"body": "stefanpenner think good idea helper core feature unsure one hand make less brittle tests urls change meant acceptance tests public url part public api humans use interact app circumventing tests seems like anti pattern", "d": "4/2015"}, {"body": "stefanpenner totally agree saying feeling existing helpers", "d": "4/2015"}, {"body": "ya", "d": "4/2015"}, {"body": "urls generating dependent ids objects used populate datastore would nt able use fixed url ids change run", "d": "4/2015"}, {"body": "perhaps suggesting value wiring url hand eg", "d": "4/2015"}, {"body": "perhaps better pattern would allow something like", "d": "4/2015"}, {"body": "information", "d": "4/2015"}, {"body": "foxnewsnetwork assuming talking ember cli app done emberresolver ability custom pluralization added add something like following javascript import resolver emberresolver export default resolverextend pluralizedtypes strategy strategies", "d": "4/2015"}, {"body": "api added likely", "d": "4/2015"}, {"body": "hey joshvfleming patch mentioned issue write", "d": "4/2015"}, {"body": "chadhietala yes temporary workaround patch internal wrapper api yet confident enough offer ember patch", "d": "4/2015"}, {"body": "yet confident enough offer ember patch suspect dgeb tomdale work split registrycontainerresolver separate application application instance come play forget mention version ember report could share", "d": "4/2015"}, {"body": "quick skim yields latest work separate app appinstances cause multiple namespaces leak app created multiple appinstances created appdestroy note try use emberrun application destroy fails suspect fixing would allow actually call destroy likely address specific leak may also address second leak", "d": "4/2015"}, {"body": "actions stuff interestingly global nt even really needed fastboot mode dom events actions nt thing ssr said pretty surprised teardown nt happening automatically may result destroying would relate back namespace leak demo repo share example", "d": "4/2015"}, {"body": "stefanpenner sorry mentioned using latest canary build ember sharing repo see put together public version one using meantime happen sample app template action kind call visit route repeatedly edit also reproduce thing adding one tests", "d": "4/2015"}, {"body": "edit also reproduce emberrun application destroy thing adding one tests look", "d": "4/2015"}, {"body": "joshvfleming realized nothing purges app instances visits even destroy likely continue leak destroy actually uncommon ssr mode cleanup making destroy work believe work suspect may actually fix leak way want nothing automatically prunes app instances moments today look pairing dig back pairing", "d": "4/2015"}, {"body": "thanks stefanpenner still working sample app demonstrates leak outside environment ready tomorrow", "d": "4/2015"}, {"body": "stefanpenner managed get test app repo run see number action handlers accumulating also steady increase memory usage", "d": "4/2015"}, {"body": "awesome thanks leg work day bit busy try carve time", "d": "4/2015"}, {"body": "questions better suited stackoverflowcom give code", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "pojo therefore method want use pojo use ember namespace like happens use like", "d": "4/2015"}, {"body": "herom works fine thank still wondering browser developer tools show object functions", "d": "4/2015"}, {"body": "change value set set property seem recreate exception console though definitely raising app code confirmed chrome ff", "d": "4/2015"}, {"body": "definitely readonly attribute unsure property would writable simplest shortterm fix whitelist attribute elements", "d": "4/2015"}, {"body": "false alarm building container properly test suite", "d": "4/2015"}, {"body": "huge jsbin helps show issue think following hooks events access new url enter activate setupcontroller rendertemplate didtransition needing call within right hook get new url janky intended behavior also well documented history tracking analytics needs need access new url common use cases app get around issue var router emberrouterextend location configlocationtype urlhistory provide ability retrieve urls history adding new urls urlhistory route changes updateurlhistory function emberrunschedule afterrender function var location thisget location thisget location url locationlastseturl thisget url thisget urlhistory pushobject url url observes location url location completely understand transition still bail nt make sense new url present yet though especially intent delay updating url onscreen content hasis rendering would suggest providing explicit documented means accessing new url within hooks didtransition event", "d": "4/2015"}, {"body": "alright figured decent work around updated jsbin accordingly anyone else running issue sorry confusion", "d": "4/2015"}, {"body": "take care", "d": "4/2015"}, {"body": "lt", "d": "4/2015"}, {"body": "hi changeweb sounds like great question stackoverflow emberjs community active get answer much faster venue post link question asked", "d": "4/2015"}, {"body": "trek know right place put question instead issues actually posted stackoverflow ember discuss got response badly need work project", "d": "4/2015"}, {"body": "badly need work project totally understandable please nt repost issues questions nobody responded hours overnight friday nightsaturday morning half planet volunteer effort even work week unusual question take days someone answer", "d": "4/2015"}, {"body": "reply", "d": "4/2015"}, {"body": "reproduced canary well", "d": "4/2015"}, {"body": "damnit sounds like safari bug take look likely missed inline site", "d": "4/2015"}, {"body": "reference upstream bug report got ta take care things circle back look", "d": "4/2015"}, {"body": "actually seems unrelated issue think although seems surprising", "d": "4/2015"}, {"body": "duplicate fixed included", "d": "4/2015"}, {"body": "issue", "d": "4/2015"}, {"body": "fivetanley says restricted mode says nohighlight chrome version operating system mac osx url applicable crash occurred reproduce crash steps reproduce crash reproducible crash open devtools visit wait crash using emberjs app similar apps behave way change line", "d": "4/2015"}, {"body": "hum works canary version chrome", "d": "4/2015"}, {"body": "extension dance", "d": "4/2015"}, {"body": "extension left gotomeeting google calendar company enabled ca nt disable test", "d": "4/2015"}, {"body": "ok extensions ruled least enabled since nt uninstall", "d": "4/2015"}, {"body": "happens time time time various apps including google gmail dunno debugger opened gmail though btw link app posted work", "d": "4/2015"}, {"body": "clearly chrome bug related issue open crbug", "d": "4/2015"}, {"body": "working", "d": "4/2015"}, {"body": "rwjblue thanks friend sorry fire drill", "d": "4/2015"}, {"body": "nt", "d": "4/2015"}, {"body": "getting back swing rails app ember client apps asset pipeline managing template precompilation think barber gem handles basically without security patch available gem security patch available apps build pipeline without gem apps get security update another way compiling templates app driven asset pipeline", "d": "4/2015"}, {"body": "word progress one regression fixes keeping bumping", "d": "4/2015"}, {"body": "cc wagenet", "d": "4/2015"}, {"body": "published", "d": "4/2015"}, {"body": "workaround work nt think supposed able enter state test verify", "d": "4/2015"}, {"body": "oops nt named template named something different actual app forgot route autogeneration thing fact route want eager transition behavior loading state might better example basically app certain routes models take long time load since using loading substates firstload see nothing blank white page many seconds model resolves ideally firstload process would loading indicator course would nt work hardcoded route transitions example need work arbitrary routes", "d": "4/2015"}, {"body": "nt able use states model memory first load state wo nt triggered", "d": "4/2015"}, {"body": "understanding toplevel state would eagerly transitionedinto start every route transition least every transition needs fetch data client want behavior want contents previous route remain visible interactable destination route resolves already handling flag application controller set cleared actions application route loading indicator application template displays flag true nt work initial app load application template rendered yet", "d": "4/2015"}, {"body": "something like", "d": "4/2015"}, {"body": "looks promising try real app get chance thought action purely informational nt realize could modify default behavior original issue position comment regression workarounds aside minor releases usually nt break things along lines case never worked docs hint used entry phase routing via hook later response user interaction rather vague nt say method used circumstances fact prior ember could used elsewhere plus evidently assertions check", "d": "4/2015"}, {"body": "yeah sure whether usage supported assume never used outside hook case looks like may broken internals changed", "d": "4/2015"}, {"body": "thanks xtian suggestion worked real app still would like able get mythical substate working embercli separate issue close one regarding cryptic error got initially think worth adding assert code handle case better explain limitations method", "d": "4/2015"}, {"body": "pr coming soon", "d": "4/2015"}, {"body": "closed favor pr", "d": "4/2015"}, {"body": "full embercli app show action tests link show previously could run loop see content loading promise resolved basic template exercised test still looking context around worketc", "d": "4/2015"}, {"body": "bug async helpers triggered synchronously relying accidental behavior tests one possible solution replace custom synchronous helper instead javascript embertestregisterhelper syncvisit function app url code visit route goes return apptesthelperswait long term solution use asyncawait make test helpers sync resolve async helpers issue see", "d": "4/2015"}, {"body": "good news bad news good news nt regression joy bad news kinda screwed disappointed seriously though lowdown working lower first async helper always executed synchronously case generally bad based principal given api async always async otherwise becomes nightmare reason case executed route transitioned initial model hook fired since runs synchronously could check loading state results bug causing first helper ran synchronously fixed really bug async helpers always async unfortunately means way know moment test loading statestemplates without visiting directly", "d": "4/2015"}, {"body": "teddyzeenny thanks explaining way forward", "d": "4/2015"}, {"body": "rwjblue correct wrong looks like syncvisit helper teddyzeenny showed would provide ability inspect template loading stateetc", "d": "4/2015"}, {"body": "toranb yep works nt really consider good solution long term great asyncawait stuff ready primetime ember app developer generally nt forced copy maintain changes code builtin test helpers mostly saying need better teddyzeenny stefanpenner paving way better long term solution via asyncawait stuff", "d": "4/2015"}, {"body": "thank great explanation", "d": "4/2015"}, {"body": "williamsbdev close issue something work around regression originally thought teddyzeenny one question implement sync based visit helper looking visit source appears wait using looking emberdebugjs bower js function visit app url var router appcontainerlookup router main routerlocationseturl url originally took comment mean implement visit wait unsure helper looks like would different visit also even added test helper using syntax listed get syncvisit defined tests run additional step required officially register helper use easily visit", "d": "4/2015"}, {"body": "toranb would exactly original helper except registered using instead returned implicit wait async helpers starts executing function pasted add get syncvisit defined tests run want register calling", "d": "4/2015"}, {"body": "first adding visitsync jshintrc tests eliminated visitsync found issue mentioned sorry newb like panic nt mention jshint breakdown next hacking around ember source added line suggested solved problem simple emberrun beta", "d": "4/2015"}, {"body": "teddyzeenny last question trying register startapp need something works today nt working register correctly assume visit nt thing beforeeach like inside qunit test block best way register startapp way tap visit reduce pure duplication option", "d": "4/2015"}, {"body": "toranb unfortunately redefine function probably call rwjblue mentioned nt good solution since function contains private api need keep sync core one better long term solution present note nt need call starting tests example file next function definition call", "d": "4/2015"}, {"body": "teddyzeenny help solve night next weeks hourly bill rate tried different approaches get around jshint error saying redefinition visitsync ca nt seem find complete fresh npm install bower install blew away tmpdistetc free consulting work ping offline toranb gmail tried startapp helper luck far js var visitsync function app url var router appcontainerlookup router main routerlocationseturl url embertestregisterhelper visitsync visitsync", "d": "4/2015"}, {"body": "toranb correctly configured global jshintrc error go away defining variable js embertestregisterhelper visitsync function app url var router appcontainerlookup router main routerlocationseturl url solve issue", "d": "4/2015"}, {"body": "emberrun function promise resolved template rendered ember template rendered ember assertequal find loadingdetails visible true assertequal find loadingdetails text loading point", "d": "4/2015"}, {"body": "solve issue considered shortterm solution please update tests rely sync pretty dubious thing rely", "d": "4/2015"}, {"body": "teddyzeenny haha trick mail check help today stefanpenner example app emberrun allowed verify conditional hbs templates loading stateempty stateloaded state without visit sync helper automated testing around preloaded state unless prove wrong", "d": "4/2015"}, {"body": "run nt appear wrapping run loop code appears like opt missing something", "d": "4/2015"}, {"body": "closing issue real bug believe way need thank everyone teddyzeenny rwjblue stefanpenner toranb", "d": "4/2015"}, {"body": "gha committed wrong repo moving sorry", "d": "4/2015"}, {"body": "use cases dynamic paths nt pattern want promote judging number downloads popular enough merit inclusion core yet", "d": "4/2015"}, {"body": "fair enough think still deserves publicity maybe popular time", "d": "4/2015"}, {"body": "could write blog post", "d": "4/2015"}, {"body": "cool addon maybe something consider post", "d": "4/2015"}, {"body": "search find source turned issue see", "d": "4/2015"}, {"body": "guess depends using framework personally never found need time imagine wanting would object serialization use emberdata need relevant said problem would start using see far got example", "d": "4/2015"}, {"body": "generic function iterates object properties feel free use less js emberkeys emberobjectcreate foo foo", "d": "4/2015"}, {"body": "said problem would start using emberobjectproxy see far got example would likely recommend use directly", "d": "4/2015"}, {"body": "stefanpenner think really question op guess assuming class computed propertiesfunctionsobserversetc considered iterating thought would include stuff class swear way back day pleasantly surprised find nt curiosity would recommend using edit clarify solution far cleaner gets vote curious negative thoughts specifically around", "d": "4/2015"}, {"body": "strategies extract original hash structure used create ember object without modified values question mostly often general emberjs community needs method would really nice appreciate necessity extremely selective api additions sometimes makes sense add method makes extremely common operation convenient sometimes nt get feeling people run need often one concrete example curious using back create new form perhaps create form right list items use create blank model back form immediately adds new item list fills values fill form avoid might create back form get values one one pass one last reason lot create deep copy since implementing pain like design sane defaultgeneric implementation would really really nice", "d": "4/2015"}, {"body": "likely duplicate indeed appear work properly please tweakupdate demo show bug", "d": "4/2015"}, {"body": "rwjblue reproduces bug", "d": "4/2015"}, {"body": "rwjblue might duplicate closed unwrap quotes style bindings would consider ideal solution nt want models responsible adding style attribute value want applied one elegant terms separating presentational functional secondly sort antipattern terms keeping code following dry paradigm example wanted use attribute color several different inline style properties would write method unique combination properties want apply opposed something like hbs", "d": "4/2015"}, {"body": "rwjblue markmurphy got problem helper function creates random number used randomly determine top element html", "d": "4/2015"}, {"body": "worked able quench warnings instead apparently ember nt detect htmlsafe strings inside quotes attribute nt work either", "d": "4/2015"}, {"body": "anlumo know want see previous comment", "d": "4/2015"}, {"body": "cc wycats", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "seeing similar behavior app well also observing controller property tahaozket alias controller property property localized view observer gets destroyed properly javascript export default emberviewextend", "d": "4/2015"}, {"body": "also seeing app aliasing controller property fix calling hook fix", "d": "4/2015"}, {"body": "relateddupe", "d": "4/2015"}, {"body": "might also worth including inline assertion often available unit tests run acceptance tests resulting confusing failures", "d": "4/2015"}, {"body": "cc wycats", "d": "4/2015"}, {"body": "would great improve message seen error app occurs one clicks app quickly without waiting transitions complete fully case nt break anything error console still would great easily know part app causes", "d": "4/2015"}, {"body": "since route nested inside route child technically active really trying link route somewhat confusing nt think bug working example", "d": "4/2015"}, {"body": "ahh makes sense wondering might play thanks rwjblue", "d": "4/2015"}, {"body": "cancel button using instead", "d": "4/2015"}, {"body": "ignore demo link embergist seem nt upgraded emberjs yet", "d": "4/2015"}, {"body": "components must contain dash name", "d": "4/2015"}, {"body": "btecu using component helpers lift restriction component need dashized also problem reproduced matter component dash long controller template component template name appanynametemplatehbs componentsanynametemplatehbs", "d": "4/2015"}, {"body": "support see", "d": "4/2015"}, {"body": "yes nt believe broke threw error ember apr pm justin woo notifications githubcom wrote support inputtype email see reply email directly view github", "d": "4/2015"}, {"body": "true new input types previous versions degraded gracefully texttype input also true use however using helper causes fail", "d": "4/2015"}, {"body": "looks like fixed canary part pr", "d": "4/2015"}, {"body": "bad tests thought updated master looks like glimmer", "d": "4/2015"}, {"body": "ksnyde provide running example demonstrates problem", "d": "4/2015"}, {"body": "would possible proxy connection local installation would allow demonstrate without much work involved part know ideal pretty stretched moment looking shortcuts available", "d": "4/2015"}, {"body": "btw let make sure latest inspector running problem still exists know issues recently version pretty recent know commits since last updated", "d": "4/2015"}, {"body": "getting something similar attempt inspect component embersortablemixin", "d": "4/2015"}, {"body": "app builded ember found put wrong instead oh god please close issue way default restserializer check result format first abort", "d": "4/2015"}, {"body": "justqyx glad caught issue able close issue button next comment sure understand question though", "d": "4/2015"}, {"body": "xitian could custom serializer model route confused", "d": "4/2015"}, {"body": "split functionality moved one think crux problem removal clean path container associated registry accessible please see rfc think need go containers registries solve problem properly", "d": "4/2015"}, {"body": "believe concern removing container internals check container without sideaffects lookup etc ultimately think solved fix factoryinjections essentially implemented backwards currently inject instances onto factories actually time want exact opposite would also argue paradigm never put instance state factories opposite absolutely fine would remove need containerhas also likely remove usecases container exposed userland want hash would love hangout", "d": "4/2015"}, {"body": "believe concern removing container internals check container without sideaffects lookup etc proposal internals could still check registry via essentially implemented backwards currently inject instances onto factories actually time want exact opposite would also argue paradigm never put instance state factories opposite absolutely fine saying seems correct want hash would love hangout sounds great let review factory code based said let hangout next day two sure come something reasonable", "d": "4/2015"}, {"body": "sounds great let review factory code based said let hangout next day two sure come something reasonable sounds good need proposal internals could still check registry via containerregistryhas fine abit hard backwards compat tolate", "d": "4/2015"}, {"body": "details", "d": "4/2015"}, {"body": "string interpolation handles parse time concern nt believe framework offer fmt forward", "d": "4/2015"}, {"body": "stefanpenner loc", "d": "4/2015"}, {"body": "made test javascript qunittest aliased attributebindings function var view tagname img isview true attributebindings width datawidth datawidth width datawidth var el appendto view equal elgetattribute datawidth data attribute alias set equal elgetattribute width attribute alias set subject removeanddestroy view got result", "d": "4/2015"}, {"body": "sure whether valid regression spec changed allow integer values", "d": "4/2015"}, {"body": "ca nt say true know sure non component template everything work fine also added code work around regression javascript", "d": "4/2015"}, {"body": "interestingly looks weird oo javascript var documentcreateelement img isetattribute width consolelog iwidth chrome safari ie firefox consolelog igetattribute width", "d": "4/2015"}, {"body": "yeah think could result stricter stricter semantics htmlbars compared browsers implement see also missing closing tags etc", "d": "4/2015"}, {"body": "note keep component api extra code convert attribute", "d": "4/2015"}, {"body": "percentage unit deprecated tag nice throw least warn code like", "d": "4/2015"}, {"body": "nt ever possible ember handlebarshtmlbars design believe related ability observe properties properly could lying", "d": "4/2015"}, {"body": "section looping items optionally reference current loop index via additionally object iteration references current key name", "d": "4/2015"}, {"body": "yeah aware exists handlebars ember handlebars helper handlebars helper", "d": "4/2015"}, {"body": "via custom component see example correct supported default helper intentional", "d": "4/2015"}, {"body": "fairly trivial implement glimmer landed since relying diffing instead enumerable observation", "d": "4/2015"}, {"body": "dupe docs come rsvp nt know anything ember shortly become leaving docs somewhat accurate", "d": "4/2015"}, {"body": "duplicate", "d": "4/2015"}, {"body": "bug embertesthelpers please reopen need register similar like pull request definitely welcome smilecat", "d": "4/2015"}, {"body": "please double check running ember version via emberversion console seems mismatch somewhere version migrating tool using precompile templates addonslibraries embedded precompiled templates", "d": "4/2015"}, {"body": "ember version console using ember cli really confused precompiled templates sure precompiling happens ember cli automatically precompiles install precompiler way detect libraries precompiled templates might problem tried page without helper page rendered packagesjson bowerjson also get stack errors", "d": "4/2015"}, {"body": "nt think required anymore", "d": "4/2015"}, {"body": "remove handlebars still nt work also tried reverting back ember cli getting errors reverting try build project process stops nt say stops errors dist folder either", "d": "4/2015"}, {"body": "cc wycats", "d": "4/2015"}, {"body": "done mimic logical believe original behavior error", "d": "4/2015"}, {"body": "ok close rewrite code", "d": "4/2015"}, {"body": "accidental ever worked active routes supposed able render views conventional ways trying sketch service amp component would put component wherever want flash messages appear", "d": "4/2015"}, {"body": "yeah realize documenting something broken app p closed nt considered bug", "d": "4/2015"}, {"body": "encountered problem case found workaround using instead alexismangin routes version registerindex route appear history pressing back button renders login view might work well alexismangin", "d": "4/2015"}, {"body": "tested seems allowhandle without issue modify jsbin replicate issue", "d": "4/2015"}, {"body": "characters lt etc works display directly wo nt work amp lt used", "d": "4/2015"}, {"body": "unsure expect case see using plain displays helper", "d": "4/2015"}, {"body": "lt displayed lt fine amp lt also displayed lt code exact problem make name filter autosuggest autosuggest dropdown using displayvalue working fine moment select something dropdown value appears input box displays html code output check link input box also display tm amp", "d": "4/2015"}, {"body": "believe hit well", "d": "4/2015"}, {"body": "looking forward fix regression thanks", "d": "4/2015"}, {"body": "confirm regression well banging head little bit realized problem nested helpers", "d": "4/2015"}, {"body": "see problem render helper impersonates outlet well enough recursive child needs get method nt know able get right away somebody else wants take stab nt difficult update function set function works way outletview function name works", "d": "4/2015"}, {"body": "problems", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "example using pr build", "d": "4/2015"}, {"body": "hit thing", "d": "4/2015"}, {"body": "notice issue left open pr merged rwjblue anything left pending help", "d": "4/2015"}, {"body": "awaer need cherrypick fix stable branch left issue open pulled commits closing thanks reminder", "d": "4/2015"}, {"body": "rwjblue info release regression anything help", "d": "4/2015"}, {"body": "rwjblue getting bit bug solution somewhere unable locate thanks", "d": "4/2015"}, {"body": "chrishonniball update", "d": "4/2015"}, {"body": "update oh thank read post security bugfix releases ember stopped sorry deprecations fist", "d": "4/2015"}, {"body": "sorry noticed add", "d": "4/2015"}, {"body": "ember addons disable prototype extensions users addons use regardless extensions leave addons also people aware change ember cli ember found addons forced people extends prototype true wanted ensure addons default enforced something every could use", "d": "4/2015"}, {"body": "hello jskeate hit awkward point observers watched someone working jsbin documented pretty rough gotcha", "d": "4/2015"}, {"body": "documentation refers computed properties encountered guess nt make connection afaict computed property service injection somehow make computed properties probably documented somewhere matter docs topic general probably need updating page dependency injection amp service lookup nt mention anywhere", "d": "4/2015"}, {"body": "emberinjectservice controller apis eagerly validated lazily looked injectedonto factory looked instantiated asserted injected factory exists correct nt service factory actually instantiated cp called observed ember expect see fewer observers used fewer people bit unconsumed computed property observation gotcha di guide absolutely needs updating", "d": "4/2015"}, {"body": "believe chrome canary nicely names errors previous nt entirely issue raise would recommended trying chrome canary seeing whatsup", "d": "4/2015"}, {"body": "im going actually try example app sec", "d": "4/2015"}, {"body": "reproduction error patch log error demonstrate crux problem app nt appear obviously error describe one must see error", "d": "4/2015"}, {"body": "remember correctly ca nt directly create need create store javascript import ember ember export default emberrouteextend model function return thisstorecreaterecord item", "d": "4/2015"}, {"body": "stefanpenner generally undefined method console describe error part deduced superwrapper source exception later captured stripped stack updated project reprosteps reproduce error transition handling need start ember server visit route creates transition console see two kinds errors undefined function one generated patch superwrapper see stack property clues actual file generated issue second errors ember default strip stack clobber actual error details", "d": "4/2015"}, {"body": "jbrown thank consideration directly create ember object create actually developing emberdata right activity would done store mechanism issue less ember data creating generic object happens function name typo correct function name accidentally called wrong module create simply trigger execution internal code purposefully generates error purpose writing incorrect code generates error point transition handling code eventually calls superwrapper rewriting error without stack simply put itemcreate appjs loader captures error correctly without dropping stack case transitions gotcha gets best regards", "d": "4/2015"}, {"body": "ladies gentlemen apologies forgot push code repo", "d": "4/2015"}, {"body": "ladies gentlemen apologies forgot push code repo trollface", "d": "4/2015"}, {"body": "js function foo syntaxerror try foo catch e sometimes got ta like promises userland task queues throw e stuff sucks chrome stable pretty output kinda expected chrome canary loses stack entirely chrome canary output better error message original stack lost would categorize dev tool bug must rethrow due async rejects promises work chrome dev tools team absolutely fix provided concise example expected output actual output screen shots actual stack lost original stack lost expected someone report chrome doit tonight noone", "d": "4/2015"}, {"body": "hey yall caught stefanpenner came agreement big regression nt provide stack anymore rethrow want us fix fingers crossed accidental regression necessary compromise work stack original error script location right location rethrow stefanpenner would love help filing crbug attach clarify goood", "d": "4/2015"}, {"body": "crbug reported", "d": "4/2015"}, {"body": "stefanpenner paulirish thank attention admit nt know details promiseasyncerror conditions working would really helpful need catch throw error kind logged evidence stack trace really appreciate attention detail true chrome nt provide help safari incorrect stack trace well correctly printing evaluation line caused issue firefoxnightly somewhere possible would interesting try hold alter way thrown error constructed including exceptions wrapped thank care attention making ember easier work development", "d": "4/2015"}, {"body": "possible would interesting try hold alter way thrown error constructed including exceptions wrapped try minimize unfortunately various things like promises force us also language nt support guards wiki recommends although wish would js catch e instanceof embererror", "d": "4/2015"}, {"body": "open webkit issue x open ff issue", "d": "4/2015"}, {"body": "stefanpenner thank attention seems like manually logging stack working browser vendors great move appreciate efforts fyi robotarmy", "d": "4/2015"}, {"body": "seems like manually logging stack working browser vendors great move ya lets fix issue source", "d": "4/2015"}, {"body": "curtislinden usericon fantastic", "d": "4/2015"}, {"body": "stefanpenner hahahah thank usericon drawn living buddhist temple reflection koan moving towards unknown", "d": "4/2015"}, {"body": "breaks one app worked really nt want stuck ember", "d": "4/2015"}, {"body": "fixed working jsbins", "d": "4/2015"}, {"body": "wish someone raised issue timeframe point likely get fixes hopefully release day nt see easy path getting fixes already branched stable", "d": "4/2015"}, {"body": "rwjblue thanks fix super fast", "d": "4/2015"}, {"body": "realityendshere thanks reporting compat stuff pretty important us sorry fell cracks long disappointed", "d": "4/2015"}, {"body": "conflicts due global extensions would recommend turning disable global monkey patching setting loading ember demo jsbin", "d": "4/2015"}, {"body": "fair enough already bunch code using patch local acejs carry next project though probably go firm global extensions kind rule", "d": "4/2015"}, {"body": "cc wycats", "d": "4/2015"}, {"body": "oops posted ttps githubcomemberjswebsite", "d": "4/2015"}, {"body": "alexblakemore absolutely agree current frontpage nt work thus would like come idea reflect whole great emberjs ecosystem see design mockup three snippets emberjs cli data emberjs data snippet reflect latest versions activity ember cli snippet looking attractive suggest newcomers start suppose main part ember website may dramatically increase users attraction give clearer explanation start ember ecosystem", "d": "4/2015"}, {"body": "probably better move issue", "d": "4/2015"}, {"body": "good suggestion created issue website tracker", "d": "4/2015"}, {"body": "created mockup discussion", "d": "4/2015"}, {"body": "mutewinter thanks looking", "d": "4/2015"}, {"body": "think take took look runloop looks like lot work handled backburner check happening", "d": "4/2015"}, {"body": "took look runloop looks like lot work handled backburner check happening ya handled microlib", "d": "4/2015"}, {"body": "deprecated likely coming ember data landed update avoid deprecation", "d": "4/2015"}, {"body": "confirm found far always evaluates since always simple js string even property returns", "d": "4/2015"}, {"body": "duplicate using quoted value results pass helper method makes final value following works without deprecation html demo", "d": "4/2015"}, {"body": "excellent question stackoverflow post come back share link post", "d": "4/2015"}, {"body": "good idea trek", "d": "4/2015"}, {"body": "also ran similar issues listview dubious attrnodes living likely issue simple work around mixonic think worked likely provide context intent push attrnode instance onto containercollection view attributes updated accordingly attrnodes need handled differently attrnodes need filtered need take different branch", "d": "4/2015"}, {"body": "except thrown undefined call stack", "d": "4/2015"}, {"body": "mixonic move change renderer concat childviews hook ensure rerender sees children nothing else", "d": "4/2015"}, {"body": "krisselden rwjblue added per suggestion", "d": "4/2015"}, {"body": "krisselden ah may enough make clean easy revisit", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "fixed thanks", "d": "4/2015"}, {"body": "done research far tell setup using right single quotation mark template breaking internet explorer change apostrophe page longer issues rendering tried replicating jsbins template compilation different something else different setup want specifics setup package versions give otherwise close nt want look", "d": "4/2015"}, {"body": "could related", "d": "4/2015"}, {"body": "sure fixed beta jsbin", "d": "4/2015"}, {"body": "thanks showing construct test environment jsbin rwjblue likely useful future", "d": "4/2015"}, {"body": "seeing strange behavior however still see even test use emberclimocha let know provide additional info", "d": "4/2015"}, {"body": "issue canary using qunit", "d": "4/2015"}, {"body": "published sorry disappointed", "d": "4/2015"}, {"body": "look observes means get updated array changes example changes imo right update", "d": "4/2015"}, {"body": "looks like mixins still documented appearing anywhere eg impossible understand property without looking sources playing instances runtime", "d": "4/2015"}, {"body": "docs updated site updated", "d": "4/2015"}, {"body": "see givanse often site getting updated", "d": "4/2015"}, {"body": "mistaken say reloaddata option refresh model", "d": "4/2015"}, {"body": "correct used right one jsbin sorry nt written reproduction yet swear context changing refreshmodel query param reloads whole view", "d": "4/2015"}, {"body": "cause file root embercli folder", "d": "4/2015"}, {"body": "expand little bit convention embercli assigns template applicationwide loading route template route whose model loading automatically displays template instead normal one even reloading query parameter might say query params nt trigger fullon route state allow loading blocks template sure argument would garner support", "d": "4/2015"}, {"body": "current status", "d": "4/2015"}, {"body": "slipped fell flat face", "d": "4/2015"}, {"body": "also waiting due", "d": "4/2015"}, {"body": "also waiting", "d": "4/2015"}, {"body": "published apologies delay", "d": "4/2015"}, {"body": "thanks greenheart works", "d": "4/2015"}, {"body": "anyone workaround apps using pod structure", "d": "4/2015"}, {"body": "sorry delay fix", "d": "4/2015"}, {"body": "closing favor let us know nt resolve issue", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "rwjblue still seeing error nested addressed part fix seems problem described undefined still happening see error triggered example", "d": "4/2015"}, {"body": "awaer please open another issue track definitely seems like regression upon initial perusal jsbin provided", "d": "4/2015"}, {"body": "hi sorry late reply think valueof object returns object unless implemented case need sort number moment objects valueof implemented embersortablemixin fails cause case case switch need reimplement compare method since valueof case would like possible create abstract sorting component javascript import ember ember import layout templatescomponentssortrecords export default embercomponentextend embersortablemixin sortproperties createdat desc layout layout sortedposts embercomputedsort content sortproperties sortproperties work content one types would like embersortablemixin work object correctly implements valueof case since type object embersortablemixin get valueof object createdat valueof something like", "d": "4/2015"}, {"body": "hey update understand issue think issue", "d": "4/2015"}, {"body": "ran also nt play nice wo nt generate nt seem docs yet loading error substates page would likely good location docs", "d": "4/2015"}, {"body": "lukemelia afaik feature broken resolver function nt propagate property correctly see", "d": "4/2015"}, {"body": "ran problem well defining route path error state way could get work definitely seems like working intended otherwise extra documentation needed", "d": "4/2015"}, {"body": "able get work creates thought suppose look looked inspector looking stated get feature work add", "d": "4/2015"}, {"body": "confirm happens process helper rendering component defined value store store gets destroyed propagates newly value helper point component tries recreate fails nt valid also explains trentmwillis notices failure using ember data otherwise property nt coming container way possible solutions catch invalid name fail gracefully instead throwing enforce ordering container destroy tear stream subscriptions first pass destroying others", "d": "4/2015"}, {"body": "lukemelia stefanpenner preference way solve blocking things like go ahead get pr", "d": "4/2015"}, {"body": "nathanhammond thanks looking worth think enforcing ordering destroy makes sense mainly errors thrown case undefined may still useful situations", "d": "4/2015"}, {"body": "trentmwillis caveat things handlebars render nothing passed falsey value implying might render nothing case helper well currently helper throws error reported directly passed sure approach solution least surprise", "d": "4/2015"}, {"body": "lukemelia nathanhammond trentmwillis couple things whole point destroy async mark everything container isdestroying running teardown something must checking isdestroying point view observers execute appdestroy updates view layer go tree order appdestroy case still nt solution general problem current view layer template update checked example glimmer branch lands fix issue always walks tree updates solution create queue viewregisterobserver sort level", "d": "4/2015"}, {"body": "information notes willdestroy called stream subscribed yet set", "d": "4/2015"}, {"body": "thought since isdestroying set stream would possible check container feel like would simple solution glimmer lands", "d": "4/2015"}, {"body": "encountered something similar set back got error work around created blank component template set", "d": "4/2015"}, {"body": "samselikoff feel dirty seems like probably make component helper attempt render component falsey values also hard failures missed lookups often seen blocks data nt actually control seems like foot shotgun trentmwillis might take swing safer component helper today paging lukemelia thoughts", "d": "4/2015"}, {"body": "nathanhammond seems like reasonable first step solution krisselden suggested holistically correct also much involved", "d": "4/2015"}, {"body": "fixed", "d": "4/2015"}, {"body": "error means unbalanced call removeobserver symptom problem happened earlier code expects removing observer present", "d": "4/2015"}, {"body": "interesting encountered upgrading eak app ember also migrated ember cli amp ember thought issue went away see still happens went modified unchain function research comment means applies app see get root cause thx", "d": "4/2015"}, {"body": "problem us well ran beta reverted assuming would fixed main release security issue seems like pretty big blocker looking issue associated issues seems emberdata blame though could wrong error receiving versions ember ember data think post emberjs ticket well", "d": "4/2015"}, {"body": "closing favor", "d": "4/2015"}, {"body": "bug appears back", "d": "4/2015"}, {"body": "offending code looks like even following problem still crops work around use old syntax bind attribute", "d": "4/2015"}, {"body": "reopening review think following hack work interim", "d": "4/2015"}, {"body": "give try think general guide bound attributes may need tlc work around suitable open pull request documenting guides repo", "d": "4/2015"}, {"body": "issues well given deprecated version thanks solution pdud", "d": "4/2015"}, {"body": "sure helpful lack understanding test substates feel free ignore helpful indeed solution timevans makes named substates work reason ca nt fathom acceptance tests breaking looks like application correctly cleaned standard ember acceptance test code javascript module acceptance test beforeeach application startapp aftereach emberrun application destroy test perspective difference swapping resolver triggering loading state part visit", "d": "4/2015"}, {"body": "seeing similar issue ox x trying build repo info worked ends ok verbose cli verbose cli verbose cli run verbose cli build info using npm info using node verbose runscript prebuild build postbuild info prebuild ember info build ember verbose unsafeperm lifecycle true info ember failed exec build script error ember build error exit status error failed ember build script error likely problem ember package error npm error tell author fails system error ember build environment production error get info via error npm owner ls ember error likely additional logging output error system darwin error command run build error cwd userspmorseprojectsemberjs error node v error npm v error code elifecycle verbose exit true nb building trying bisect hunting change broke test app encountered problem several places repo history including head trying build node gives error", "d": "4/2015"}, {"body": "upgraded ember cli uses ember getting error easy reproduce ie live", "d": "4/2015"}, {"body": "tried upgrading seeing also application embedded need get current route handler object outside ember app using approuterrouter api", "d": "4/2015"}, {"body": "better way get things guaranteed forever singletons injections", "d": "4/2015"}, {"body": "machty aware one looks like nt labelled yet", "d": "4/2015"}, {"body": "reproduction back button change input value typed", "d": "4/2015"}, {"body": "nice idea talk supporting something like via emberprovided session service keep around reference nt think going fix soon", "d": "4/2015"}, {"body": "spent time looking without whole lot progress implemented rather ugly workaround setting default model hook behavior generated routes return promise also need aware model hooks override also need return promise", "d": "4/2015"}, {"body": "bug looks legit keep around probably disappear midst upcoming query params refactorings", "d": "4/2015"}, {"body": "wrong button", "d": "4/2015"}, {"body": "currently ember triggering deprecation warnings well difficulty encounter route deprecation warning assumes trying use proxy behavior want set attribute controller let template render simple solution add controller definition javascript import ember ember export default embercontrollerextend seems like bit bummer", "d": "4/2015"}, {"body": "oddly enough automatically generated nt trigger deprecation warning generating get warnings accessing setting properties generated controller generating objectcontroller", "d": "4/2015"}, {"body": "seems like bit bummer yep annoying semver sucks sometimes stuckouttonguewinkingeye add file would make ember generate object controllers", "d": "4/2015"}, {"body": "confirm well use poll api well animations components stop time visiting ember inspector also start start", "d": "4/2015"}, {"body": "cross platform specific browser repro easier debug otherwise someone needs audit back burners timers", "d": "4/2015"}, {"body": "stefanpenner well provided jsbins saw chromium linux oxidus reported several times issues firing osx usually chrome sure tested exactly eg safari anyway replacing settimeout always circumvented issue us", "d": "4/2015"}, {"body": "stefanpenner well provided jsbins oops nt notice added queue later week", "d": "4/2015"}, {"body": "ran", "d": "4/2015"}, {"body": "consistently reproduce friend app chance take look wednesday", "d": "4/2015"}, {"body": "jsbin consistently reproduce issue note nt fire", "d": "4/2015"}, {"body": "fallback good start nt allow us use polyfill special type chance could still insert unknown type input eg etc case polyfill", "d": "4/2015"}, {"body": "blimmer fall back text setting set original string suggest using component something appropriate browsers", "d": "4/2015"}, {"body": "noticed jsbins removed guides still relevant wagenet", "d": "4/2015"}, {"body": "encountering similar problem maybe approach wrong feature inside controller template wrap inside content get rendered use ember jsbin", "d": "4/2015"}, {"body": "probably worth fixing since objectcontroller deprecating query params shifting away controllers shortly happy reopen major disagreements", "d": "4/2015"}, {"body": "bit us ember array models using updating property many causes index range error worked around switching", "d": "4/2015"}, {"body": "encountered case using proxying allowed page load error still persisted though visibly affect functionality app noted particular model using thus models use able use aliasing technique", "d": "4/2015"}, {"body": "issue mutewinter fix works case anyone still looking", "d": "4/2015"}, {"body": "seeing emberrails app", "d": "4/2015"}, {"body": "seeing problem testing using mutewinter fix worked well banging head problem days glad tried fix", "d": "4/2015"}, {"body": "seeing mutewinter fix works seems annoying main barrier us transfer use since almost integration tests broken", "d": "4/2015"}, {"body": "appear current issue get resolved please tomdale", "d": "4/2015"}, {"body": "rwjblue would get love put current milestone instead already past one", "d": "4/2015"}, {"body": "good portion functional tests broken mutewinter fix totally works imagine presently blocking whole lot people moving expect patch release", "d": "4/2015"}, {"body": "totally screwed integration tests project migrated way back refactored code base utilize new features eg component helper wait patiently update", "d": "4/2015"}, {"body": "szalishchuk meantime fork fork took last commit version applied mutewinter fix top need builddeploy ember version end use simpler bit complex", "d": "4/2015"}, {"body": "balinterdi thank much nt submit fix pr", "d": "4/2015"}, {"body": "fix mine mutewinter see since intimate internals containerregistry sure fix real solution hack failing unit test provided highlights bug fix squashes would loss regarding write", "d": "4/2015"}, {"body": "fix mine mutewinter see since intimate internals containerregistry sure fix real solution hack failing unit test provided highlights bug fix squashes would loss regarding write yeah sure hack real fix either asked write test sure test looks like", "d": "4/2015"}, {"body": "nt want futz ember try apply mutewinter fix test code wherever refresh rebuild registry first made method called use instead raw calls generally works failed couple tests commented", "d": "4/2015"}, {"body": "throwing hat ring hacks nt require moving upstream use initializer yeah really really really horrible javascript import ember ember var originalbuildinstance export function initialize container application originalbuildinstance originalbuildinstance emberapplicationprototypebuildinstance emberapplicationprototypebuildinstance function thisregistry thisbuildregistry return originalbuildinstanceapply export default name horribleresethack initialize initialize", "d": "4/2015"}, {"body": "understand meant however breaks existing code feels manual like previous approach nt think much job rwjblue ideas transpose example", "d": "4/2015"}, {"body": "perlun barebones example hopefully illustrates main idea coffeescript ewformcomponent embercomponentextend validator null wiring gt adjust validator needed set validator ewvalidatorcreate init layout emberhandlebarscompile yield validator", "d": "4/2015"}, {"body": "thanks sandstrom thought problem get extremely awkward typical scenario like simplified illustrate point simply nt like adds extra manual step instances simple use case like would force developers remember imho stupid gotcha inevitably lead people forgetting times waste time debugging plus breaks basic dry principle appreciate helpfulness thanks simply put approach wo nt fit bill use handlebars helper accomplish", "d": "4/2015"}, {"body": "could likely nt tried use parentview access validator instead would opaque", "d": "4/2015"}, {"body": "rewritten large parts app towards ember philosophy components overall nice like direction ember taking however one view gotten quite bit slower basically long list components nested components within jesenko fork seems like good proxy case also understanding glimmer primarily affect updates initial rendering", "d": "4/2015"}, {"body": "answer make use resetcontroller hook presently api resetting defaults manually set controller qp default value within basically escape hatch nicer api comes along nt think accepting new documentation query params shifting api toward routedriven components shortly going close", "d": "4/2015"}, {"body": "ya want display index looped view use css counters instead programmatically ember supported way back ie excuse", "d": "4/2015"}, {"body": "kimroen got similar set serverside filteringsorting defined route controller manipulating controller updating today started seeing exactly issue query params url updated without reloading model route andrewbranch moving definition controller rewiring computed properties controller persist filtering criteria across searches got everything working expected also andrewbranch big thanks nt touch part code months already found clueless bunch tests failing edit definition route definition controller", "d": "4/2015"}, {"body": "hi stumbled upon thread issues slug based urls page loadsrefresh works links ideas pointing right direction", "d": "4/2015"}, {"body": "closing please feel free move rfcs repo mentioned", "d": "4/2015"}, {"body": "agree w knownasilya also worth mentioning may show via emberprovided session service", "d": "4/2015"}, {"body": "think docs fixed nt think mentioned docs anywhere private api internally used routerjs microlib closing bugs similar likely going fixed query params api shifts routedriven components", "d": "4/2015"}, {"body": "troubles case queryparam composed two controller properties jsbin cant use suggestions cases", "d": "4/2015"}, {"body": "machty serializing suggestion works perfect already plans use real computed properties queryparams would much cleaner using observer set static properties", "d": "4/2015"}, {"body": "alvinvogelzang particulars query params need reworked ember particularly wrt routeable components nt expect ember see real computed property support query params", "d": "4/2015"}, {"body": "machty fair enough thanks", "d": "4/2015"}, {"body": "seems like dup reopen", "d": "4/2015"}, {"body": "hitting bug right embernfgraph actually actually regression handlebars working long time currently seeing htmlbars", "d": "4/2015"}, {"body": "nt using jquery dealing svg elements nt support svg likely use dom apis directly", "d": "4/2015"}, {"body": "nt using jquery dealing svg elements nt support svg likely use dom apis directly obviously use jquery predates understanding issue though ember always used jquery setting classes addressed glimmer", "d": "4/2015"}, {"body": "discussed briefly marcysutton today good insights may justice summary spec say attribute specified element indicates element yet longer directly relevant page current state used declare content reused parts page opposed directly accessed user user agents render elements hidden attribute specified requirement may implemented indirectly style layer aria spec says attribute ndicates element descendants visible perceivable user implemented author marcysutton said experience using required things element marking links form elements lest user experience phantom elements perceivable show navigating page suggest think accessibility concerns carefully may end different properties want use conjunction", "d": "4/2015"}, {"body": "status one experiencing", "d": "4/2015"}, {"body": "someone create repo ember app install reproduce", "d": "4/2015"}, {"body": "seems easiest way reproduce adding indexhtml file app trying access url app", "d": "4/2015"}, {"body": "extending native prototypes always dangerous usually avoidable nt yet used ember main reason want apps gracefully upgrade well gracefully degrade seems reason prototypes extended inside ember syntactic sugar let honest fantastic goal worry following bad practice project suffer long term example let look sugar lets us allow treat function like property quoting docs ecma version defines radically different native prototype ember apps risk immediate permanent failure without crisismode maintenance instead attaching sugar defined follows appmodel emberobjectextend oneattr string anotherattr array someattr emberproperty function return thisanotherattrreverse concat thisoneattr reverse modelsomeattr string array solves least three problems one interfering native prototype two replacing sugar safety consistency three using ember yet problem remaining dusty example code stackoverflow random blogs codeschool like already behind broken since published please note suggesting emberproperty function implementation target pseudocode provided merely illustrate potential solution looking emberruntimelibextfunctionjs seems might fairly easily portable new property class ember namespace", "d": "4/2015"}, {"body": "totaltrek think suggest already see embercomputed var person emberobjectextend firstname betty lastname jones fullname embercomputed firstname lastname function key value return thisget firstname thisget lastname one easily avoid using prototype extensions projects emberwatson convert existing code wish also see", "d": "4/2015"}, {"body": "making effort lifespan mitigate performance issues caused totally disabling prototype extensions one main blockers several ergonomic things need improved well nothing hard laborious also thrown together first pass updating guides prefer nonprototype extension modes common ones future effort dig array extensions gnarly without current internals suffer performance issues mitigated", "d": "4/2015"}, {"body": "thank orkon nt yet gotten familiar enough ember track docs much obliged huge help stefanpenner thanks would made reading docs much exciting venture obvious methods nt extend native prototypes far arrays concerned surprised pushback removing array extensions however already historical example everybody already use need emberextended array crashandburn early versions prototypejs versus much smarter time least competitor lodash true forcing call makes us work harder thing currently generic array would nt make ember apps performant rely antipattern wrap arrays know going need extended methods generic array left asis suffer performance drags due extensions parts internals suffer performance issues array extensions removed", "d": "4/2015"}, {"body": "parts internals suffer performance issues array extensions removed ya nt entirely obvious let explain given following ember essentially yes liberal simplification instantiate collection view collection view subscribes array change notifications renders turns offender ember assumes prototype extended array ember array like array controllerproxy etc code something like forces usage ensure prototype extensions essentially noop false applies array extension methods array instance produces part extremely slow believe resolution issue simple although require grunt work ember internals rely rest observable related methods existing prototype rather take approach used mitigate need objects ember internals following rather pattern likely applied observable array methods well yes still leaves nice things polyfils reduces cost internal domain leakage observable methods arrays currently cause", "d": "4/2015"}, {"body": "also worth noting recently actually run prototype extensions disabled default dummy app harness ensure addons written compatible modes likely sensible default going forward unblock think motivated work weekend performance concerns mostly mitigated pave way future well behaved ember apps", "d": "4/2015"}, {"body": "started work", "d": "4/2015"}, {"body": "szines fix issue one impossible fix", "d": "4/2015"}, {"body": "hywan use storefilter instead storefind", "d": "4/2015"}, {"body": "data server query call particular adapter thanks", "d": "4/2015"}, {"body": "hywan unfortunately call route case content would flash website proper ember way manually hack update list controller think still quite big design problem framework sure gon na solution soon emberjs awesome", "d": "4/2015"}, {"body": "using body copypaste yup got trick", "d": "4/2015"}, {"body": "seeing app works fine logging error", "d": "4/2015"}, {"body": "seeing issue accounts nearly production error messages using track js created updated jsbin ember version workaround right hack onerror function log error transitionaborted error", "d": "4/2015"}, {"body": "see behaviour", "d": "4/2015"}, {"body": "pretty old closing tempted say reopen breaking jsbin provided think bugs going fixed upcoming qp facelift possibly api shifts toward routeable components", "d": "4/2015"}, {"body": "would love see behavior consistent", "d": "4/2015"}, {"body": "want comment rwjblue xcheckbox component need add array want able programmatically set checked value element also need pass", "d": "4/2015"}, {"body": "hi guys issue prepared quick example interested transitiontoroute undefined executing test work around move transitiontoroute call corresponding route allowed transition new route controller break test cheers", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "based stefanpenner response dont think issue fixed wagenet correct could close issue", "d": "4/2015"}, {"body": "rwjblue tried nt seem work component follows work one latest ember master supposed work", "d": "4/2015"}, {"body": "ah found git working follows reference component", "d": "4/2015"}, {"body": "ember release fixed seeing issues related w ember", "d": "4/2015"}, {"body": "ca nt really issue fixed seems entirely unrelated", "d": "4/2015"}, {"body": "must fat fingered ticket number according fix went", "d": "4/2015"}, {"body": "alright thanks words must make move asap smile maybe quickhack", "d": "4/2015"}, {"body": "sure wish", "d": "4/2015"}, {"body": "assume could rethrow error like would catch statement work", "d": "4/2015"}, {"body": "sure wish running development production", "d": "4/2015"}, {"body": "okay fucking idiot great js difficulty right totally works thank", "d": "4/2015"}, {"body": "still trolls new projects jayphelps even fixable dive adding app option bypass assert", "d": "4/2015"}, {"body": "long remember fixable unsupported waters bypass assertion location classes absolutely knowingly support eg extraneous history states least troll legitimately asking would intentionally want use different convention trailing slash real meaning means index", "d": "4/2015"}, {"body": "also see", "d": "4/2015"}, {"body": "jayphelps find writing server code every time redirect dashboard gt dashboard users entering former face blank page exception going look fix maybe come better userdeveloper experience outofthebox situation appreciate time spent investigating fielding questions topic", "d": "4/2015"}, {"body": "seems like fair thing write like might write redirect add www apr pm garth poitras notifications githubcom wrote jayphelps find writing server code every time redirect dashboard gt dashboard users entering former face blank page exception going look fix maybe come better userdeveloper experience outofthebox situation appreciate time spent investigating fielding questions topic reply email directly view github", "d": "4/2015"}, {"body": "stefanpenner noted ember component documentation fact initialize component properties special way due ember implementation details uses js prototype obvious glad least found issue spending time trying refine googlefu put problem relevant terms thanks", "d": "4/2015"}, {"body": "thanks link post seemed work nt complicated", "d": "4/2015"}, {"body": "stefanpenner supposed go call documentation multiple models sorely needed ca nt seem figure jump hoops make pr guides documentation improving documentation needs better documentation xp", "d": "4/2015"}, {"body": "verdict use case table component property array objects array columns want show table component nested row components row component cells property computed row property one elem table component array case cells listen change row name property works fine care property array dynamically set ex want use table model speed hp color properties let say want show two columns could component build table react change record javascript appmytablerowcomponent embercomponentextend tagname tr table embercomputedalias parentview cells embercomputed rowname function var row thisget row var res var self whole jsbin", "d": "4/2015"}, {"body": "anyone wondering also use case need define cp depends n lists objectid changes accomplish using method string expansion ability var cpstringforexpansion eachidfmt listone listtwo listthree join emberdefineproperty fullsource embercomputed function access thisget listone thisget listtwo etc return whatever property cpstringforexpansion equivalent defining cp like", "d": "4/2015"}, {"body": "wycats think solved arrays bit arbitrary objects feel like shared arrays much common behaviour lead hard debug issues pretty easily", "d": "4/2015"}, {"body": "would also mention ember docs object model section", "d": "4/2015"}, {"body": "hi expecting work nt understand reading binding oneway used meaning manually listen dom events purpose action updates controller reflect radio button selected effectively keeping track dom state template js investigation looks like attribute removed one radio buttons possibly screwing generated template value evaluates false hint set breakpoint attribute modifications dom elements see call jquery removes would someone please confirm bug familiar emberjs yet thanks", "d": "4/2015"}, {"title": "consolewarn hide perf gotchas", "body": "known performance issue amp friends jquery would like fix seen browsers leverage console warning used create positive change example firefox warns use got zepto drop think technique could used deliver gentle oneoff warning use underlying issue recommend upgrade path like flesh idea browser dev tools easier collaboration cc paulirish", "num": "2250", "d": "4/2015"}, {"title": "jquery allows strings objects event handlers gt error thrown", "body": "click button make browser throw error function code checked var whatever value condition matches null strings objects allowed function course fail question reason types checked callback discarded happy submit pr fix issue", "num": "2248", "d": "4/2015"}, {"title": "forever loop selector argumen jquery", "body": "hi try nothing happened cpu usage increase browser hang forever loop produced code", "num": "2247", "d": "4/2015"}, {"title": "jquery already loaded", "body": "beginning file script checks jquery running write console log jquery instantiated already trying load jquery wo nt fix older versions help developers future", "num": "2246", "d": "4/2015"}, {"title": "click work firefox ie checkboxes added documentbody", "body": "chrome works ie click event dispatched firefox event dispatched checked property properly updated please take look least behavior consistent different browsers probably click work like chrome jsfiddle reproduce output firefox jqueryclick detached checkbox nt work jqueryclick checkbox works mouseevent click detached checkbox works mouseevent click checkbox works chrome jqueryclick detached checkbox works jqueryclick checkbox works mouseevent click detached checkbox works mouseevent click checkbox works ie jqueryclick checkbox works", "num": "2245", "d": "4/2015"}, {"title": "npm distribution missing cdn files since", "body": "comparing reveals latter include folder distcdn anymore main problem file distjqueryminjs includes sourcemap comment include file build without getting errors int browser tries load sourcemap might related", "num": "2244", "d": "4/2015"}, {"title": "isarraylike empty obj error", "body": "received error trying call like seems returns error works fine want check passing moving forward thanks function isarraylike obj", "num": "2242", "d": "4/2015"}, {"title": "addclass nt work svg tags", "body": "let following dom typing nothing typing work expected happens jquery amp jquery chrome windows tp", "num": "2241", "d": "4/2015"}, {"title": "attr checked work anytime", "body": "check radio button external label tag object using motif attr checked true work first time click try removeattr using attr js code il work everytime documentgetelementbyid motif checkedtrue see demo probleme", "num": "2240", "d": "4/2015"}, {"title": "isarraylike", "body": "objnodetype amp amp length return true useful nodelist nodetype", "num": "2238", "d": "4/2015"}, {"title": "position function reports incorrect left offset chrome", "body": "test chrome browsers see offset reported method incorrect chrome value offset chrome gap real left offset horizontally centered problem relates horizontally centered fixed calculating manually value element computed style gap maybe due possible bug design choice chrome also discussion stackoverflow think jquery supposed deal difference browsers", "num": "2237", "d": "4/2015"}, {"title": "multiple javascript errors jqueryminjs jqueryjs", "body": "enabled debug output seamonkeyfirefox browser number jqueryrelated errors mix version sure current version grep jquery tmpseamonkeylog sort uniq sort document loaded successfully document loaded successfully error loading url nsbindingaborted javascript error line error syntax error unrecognized expression nameusername javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property aresult javascript strict warning line referenceerror reference undefined property h javascript strict warning line referenceerror reference undefined property dattributes c expando javascript strict warning line referenceerror reference undefined property idisabled javascript strict warning line referenceerror reference undefined property jdelegatetype javascript strict warning line referenceerror reference undefined property meventtriggered javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property vstatus javascript strict warning line referenceerror reference undefined property kheaders javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property e u javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property vcache e vexpando javascript strict warning line referenceerror reference undefined property veventtriggered javascript strict warning line referenceerror reference undefined property vvalhooks javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property dshivcss javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable x redeclares argument javascript strict warning line referenceerror reference undefined property anodetype javascript strict warning line referenceerror reference undefined property aselector javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property fexpando javascript strict warning line referenceerror reference undefined property feventtriggered javascript strict warning line referenceerror reference undefined property fvalhooks javascript strict warning line referenceerror reference undefined property f javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property areturnvalue javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property cresult javascript strict warning line referenceerror reference undefined property c javascript strict warning line referenceerror reference undefined property isizcache javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property acache javascript strict warning line referenceerror reference undefined property dqueue javascript strict warning line referenceerror reference undefined property dtraditional javascript strict warning line referenceerror reference undefined property equeue javascript strict warning line referenceerror reference undefined property fajaxsettingstraditional javascript strict warning line referenceerror reference undefined property h j javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property jquerycache id name javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property elemnodetype javascript strict warning line referenceerror reference undefined property p javascript strict warning line referenceerror reference undefined property ret javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property event expando javascript strict warning line referenceerror reference undefined property jquerycache id name javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property elemnodetype javascript strict warning line referenceerror reference undefined property p javascript strict warning line referenceerror reference undefined property ret javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property event expando javascript strict warning line referenceerror reference undefined property anodename javascript strict warning line referenceerror reference undefined property h javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property aresult javascript strict warning line referenceerror reference undefined property dattributes c expando javascript strict warning line referenceerror reference undefined property e javascript strict warning line referenceerror reference undefined property idisabled javascript strict warning line referenceerror reference undefined property jdelegatetype javascript strict warning line referenceerror reference undefined property meventtriggered javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property anodetype javascript strict warning line referenceerror reference undefined property c b javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property aresult javascript strict warning line referenceerror reference undefined property ldelegatetype javascript strict warning line referenceerror reference undefined property neventtriggered javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property ausername javascript strict warning line referenceerror reference undefined property vstatus javascript strict warning line referenceerror reference undefined property ktraditional javascript strict warning line referenceerror reference undefined property najaxsettingstraditional javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property euibackcompat javascript strict warning line referenceerror reference undefined property n u javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property thistimer javascript strict warning line referenceerror reference undefined property ejquery javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line typeerror variable redeclares argument javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable c redeclares argument javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property fexpando javascript strict warning line referenceerror reference undefined property j javascript strict warning line referenceerror reference undefined property fcache fexpando javascript strict warning line referenceerror reference undefined property fvalhooks javascript strict warning line referenceerror reference undefined property gtype javascript strict warning line referenceerror reference undefined property javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property areturnvalue javascript strict warning line referenceerror reference undefined property cresult javascript strict warning line referenceerror reference undefined property feventtriggered javascript strict warning line referenceerror reference undefined property nset javascript strict warning line referenceerror reference undefined property sdelegatetype javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property dcache javascript strict warning line referenceerror reference undefined property j k javascript strict warning line syntaxerror test equality mistyped assignment", "num": "2236", "d": "4/2015"}, {"title": "jqxhrthen returns string datatype json", "body": "according docs jqxhrthen equivalent jqxhrdone performing ajax get request datatype set json data arg done callback object data arg using always string", "num": "2235", "d": "4/2015"}, {"title": "pseudo selectors", "body": "using pseudo selector library jquery executes selector every element page even though given id element id inviewport causes inviewport executed every element page id inviewport obviously huge performance issue happen chrome likely browsers unfortunately expertise jquery determine exactly issue lies provide patch moment however would suspect would great performance optimization older browsers css selector given id first searches instead executing pseudo selector code tested windows also tested chrome gnulinux arch jquery version yes realize talking party add jquery think issue since method defined inviewport inviewport called different numbers times depending browser version gets called hundreds times elements one specified id chrome element specified id appears jquery handles id selectors use case site infinite stream items need something cards come viewport list ids cards iterate ids run inviewport pseudo selector list ids gets pared item entered view port ie performance abysmal running inviewport times nt terrible indeed nt unless", "num": "2231", "d": "4/2015"}, {"title": "selector class working parent element", "body": "", "num": "2230", "d": "4/2015"}, {"title": "add catch promise objects", "body": "suggested implementation", "num": "2229", "d": "4/2015"}, {"title": "deprecate jqueryunique", "body": "alias betternamed fact sorts surprised even team members deprecate favor need introduced", "num": "2228", "d": "4/2015"}, {"title": "visible hidden selectors unreliable", "body": "issue issue present version jquery happening inline elements wrapping block elements valid header image wrapped single anchor two issues arise different browsers report offsetwidthheight anchor differently example firefox would report one visible anchor example chrome report also highly depends css styles applied page issue discovered missing images displayed instead common missing image icon browser may report anchor invisible child elements still visible clickable inherit anchor properties example solution potential solutions come mind flaws loop child elements check visibility potentially harmful performance although selector already marked documentation check parent visibility probably enough report incorrectly anchor nt visible children", "num": "2227", "d": "4/2015"}, {"title": "explore possibility sorting results jquery find", "body": "deduping sorting", "num": "2226", "d": "4/2015"}, {"title": "expose jquerydommanip method", "body": "since get opportunity major version gon na label blocker", "num": "2225", "d": "4/2015"}, {"title": "expose jquerybuildfragment method", "body": "since get opportunity major version marking blocker", "num": "2224", "d": "4/2015"}, {"title": "anything wrong hasclass", "body": "value line always true works fine make mistakes", "num": "2222", "d": "4/2015"}, {"title": "selfclosing tag inconsistency", "body": "parses ok parses ok parses really ok", "num": "2221", "d": "4/2015"}, {"title": "removeattr resets selectedindex firefox", "body": "firefox fiddle shows selectedindex reset removeattr method called chrome safari ie remains shows nothing selected select box", "num": "2220", "d": "4/2015"}, {"title": "effects easingdefault", "body": "hi code execute methode argument move way access easing function nt set explicitly call nt work pr set default value keep consistent", "num": "2219", "d": "4/2015"}, {"title": "nested collapsible sets uicollapsiblecontent div created also creates blank lines", "body": "button brings popup containing nest collapsible set code works properly except appears blank line right beneath header list items code call log owner actions left word spoke person web inspector see blank lines right div created one uibodyinherit sure blank lines coming want make sure nt bug somewhere css looks like web inspector truly believe something wrong missing help would greatly appreciated", "num": "2216", "d": "4/2015"}, {"title": "problem animate scrolltop css overflowx hidden body amp html set width height", "body": "spent hours trying get bottom figured going trying implement animated scroll anchor links using animate scrolltop thing happened links broke completely found strange using previously functioning script older version jquery guess something broke recent update console shows errors tried many different versions animated scroll certain diagnosis think right area coffeescript something like works fine css either combined like also happened using party solutions see", "num": "2215", "d": "4/2015"}, {"title": "question behavior wrapping wrapped jquery object", "body": "big fan heavy user jquery got question searched stackoverflow found nothing helpful posted question jquery forum still got nothing noticed paragraph jquery api doc cloning jquery objects jquery object passed function clone object created new jquery object references dom elements initial one means already wrapped jquery object still unwrapandwrap element create new jquery object rather returns directly initially workmates supposed jquery needed requery selector keep modified dom tried codes found contained dom element proved nt requery thing finally confused return directly already jquery object purpose creating cloning new object", "num": "2214", "d": "4/2015"}, {"title": "depth selector", "body": "asking something similar found bug report feature request actually back times like reopen issue discussion really think would useful", "num": "2209", "d": "4/2015"}, {"title": "jquerymerge could shorter", "body": "works good might long use much variable cause much loop second big array maybe better var merge function first second var tmp firstlength stuff avoid arraylike puzzle still maintain first guys concern", "num": "2208", "d": "4/2015"}, {"title": "edge case selfclosing tag detection", "body": "automatically turns something like setting html broken found attribute eg turns jsfiddle", "num": "2205", "d": "4/2015"}, {"title": "stealthempty input replacewith leaves content place", "body": "eg noop", "num": "2204", "d": "4/2015"}, {"title": "feature methods submit get post page ajax", "body": "believe possible send get post data page let browser handle response normal form submit without preexisting tag feel like would useful addition core many people expect already available many questions internet wih jquery ie intuitively felt doable without plugins ajax jquery nt limit usefulness ajax applications believe makes sense pretty basic usecase methods might called whatever would sound sensible several ways implement one shown", "num": "2202", "d": "4/2015"}, {"title": "slower", "body": "hello made jsperf testing speed dom insertion operations results seemed strange times slower times slower innerhtml tried look code could find overhead come thoughts jsperf", "num": "2200", "d": "4/2015"}, {"title": "jquery class operations svg dom attributes", "body": "first jquery hugely helpful whole community thanks helpful fact spaces lacks end huge pain developers working jquery detecting svg hasclass addclass like groups path attributes huge pain growing community support svg plans jquery roadmap improve workflow thanks", "num": "2199", "d": "4/2015"}, {"title": "compatibility problem ajax supports well chrome browser", "body": "ie fit well chrome browser wellworking source code start ajax url data zipcode success function data weathertemp html data end", "num": "2198", "d": "4/2015"}, {"title": "jquery npm", "body": "would possible publish npm spits well", "num": "2197", "d": "4/2015"}, {"title": "wellformed soft error initial access xmldocument object firefox", "body": "jquery firefox initial find reference xmldocument object soft error wellformed firefox thrown captured released continuing execution soft error thrown jquery wellformed fiddlenet site wellformed open firefox monitor javascript errors javascript var xmlxmltxt temp alert parsexml xmlxmltxt find mytemp attr val", "num": "2196", "d": "4/2015"}, {"title": "val array assign values array different elements", "body": "using according docs last demo using array assign values array accordingly element returned selector however assigns instead see jsfiddle expect value instead value jquery actually workaround use slower", "num": "2195", "d": "4/2015"}, {"title": "slidedown slideup help", "body": "nt know place address issue anyone help whit question especially whit edit section trying use jquery slidedown slideup animate mine hidden div image fiddle sample linked thank", "num": "2194", "d": "4/2015"}, {"title": "break show hide toggle new module", "body": "lands cleave new module showhide could excluded needed", "num": "2193", "d": "4/2015"}, {"title": "toggleclass classname function", "body": "add new api first argument class name second function return boolean example surprised implemented yet almost methods accept second argument function", "num": "2192", "d": "4/2015"}, {"title": "element width opening page new tab chrome mac", "body": "originally thought chrome bug think could jquery related wanted post well need testing without jquery dependency sure using following code result inconsistent behavior opening page new tab using target blank example width timeout always correct output time chromium issue reference", "num": "2191", "d": "4/2015"}, {"title": "ajax calls wrong callback caused ajaxconvert false return", "body": "hi lately wrote code like found conole always outputs error even though request http status code nt calls success methord request ok", "num": "2190", "d": "4/2015"}, {"title": "incorrect object properties enumeration", "body": "affects objectprototype extended methods broken work try fix function replace lines", "num": "2189", "d": "4/2015"}, {"title": "ie", "body": "still working simplified sample ie iframe includes jquery library causes following unhandled exception throw javascript runtime error object nt support property method attachevent appears happen iframes ie may may tied edge mode may may tied external libraries underscore also included app repros issue lies line jquery source fix appears fairly simple changing check also check attachevent worked expected nt throw parent amp amp parentframeelement amp amp parentattachevent reopening old issue old bug system", "num": "2188", "d": "4/2015"}, {"title": "jquery ajax request headers", "body": "backbone application models sync server backbone app makes requests api needs add authorization token headers user logged system token allows api respond data present request respond debugging days backbone deemed jquery issue facing issue two routes application safari authorization header passed api server jquery backbone infact sending jquery output also tried changing ajaxsetup look like pass headers also give different result using safari get server however header place use safari safari seem happen using chrome firefox tue apr error pid client arrayn n host gt jcrawfordheytixcomn useragent gt macintosh intel mac os x khtml like gecko accept gt applicationjson textjavascript referer gt xrequestedwith gt xmlhttprequestn authorization gt token acceptlanguage gt enusn acceptencoding gt gzip deflaten cookie gt removed output connection gt keepaliven n referer tue apr error pid client arrayn n host gt jcrawfordheytixcomn useragent gt macintosh intel mac os x khtml like gecko accept gt applicationjson textjavascript referer gt acceptencoding gt gzip deflaten xrequestedwith gt xmlhttprequestn acceptlanguage gt enusn cookie gt removed output connection gt keepaliven n referer tue apr error pid client http get referer get chrome firefox tue apr error pid client arrayn host gt jcrawfordheytixcom connection gt keepalive cachecontrol gt accept gt applicationjson textjavascript xrequestedwith gt xmlhttprequest useragent gt macintosh intel mac os x khtml like gecko authorization gt token referer gt acceptencoding gt gzip deflate sdch acceptlanguage gt enus en cookie gt removed output referer tue apr error pid client arrayn n host gt jcrawfordheytixcomn connection gt keepaliven accept gt applicationjson textjavascript xrequestedwith gt xmlhttprequestn useragent gt macintosh intel mac os x khtml like gecko authorization gt token referer gt acceptencoding gt gzip deflate sdchn acceptlanguage gt enus en cookie gt removed output n referer see logging authorization token passed firefoxchrome safari second request", "num": "2187", "d": "4/2015"}, {"title": "paste events work correctly clipboarddata", "body": "html like content add paste event like using vanilla js alert paste text div however equivalent jquery version alerts paste text tested firefox safari working nonworking jsfiddle", "num": "2186", "d": "4/2015"}, {"body": "based previous experience console warnings people get really crazy get warning resolution fix coordinate work make resolution upgrade example jquery would make life better everyone sure practical would would really interesting explore", "d": "4/2015"}, {"body": "strongly valid uses warn", "d": "4/2015"}, {"body": "could see beneficial development build behind flag would upset jquery logging production build", "d": "4/2015"}, {"body": "deprecation warnings would okay feasible would request anything like present alternate build maybe chatty dev build could done active development notes", "d": "4/2015"}, {"body": "nt proposal jquery log browser detecting bad things perf perspective warning one jdalton gives regarding zepto good one", "d": "4/2015"}, {"body": "think explore nt want spam console method someone else called slow side note talk slow equal need prioritize user feels two hard parts detecting troublesome uses giving user realistic guidance action take thoughtful though serious thing drop warnings console yes basically feature request chromeffmicrosoft edgesafari devtools teams rather something jqueryjs implements", "d": "4/2015"}, {"body": "react kind expressive warnings amp errors really good learning curve upgrades love lots people spoken love think good habit really useful deprecation amp performance warnings educating users amp course occur production mode imo jquery completely failed educate developers far nonexplicit api amp missing occasions reducing api get close dom possible would time start insurance browser compat", "d": "4/2015"}, {"body": "imo jquery completely failed educate developers far sure means code nt education providing functionality via api docs provide guidance use apis jquery migrate plugin provides lot information practices apis nt recommended new code agree paulirish ca nt api bad feel bad message needs providing guidance fixing problems detected page runs", "d": "4/2015"}, {"body": "agree paulirish ca nt api bad feel bad message needs providing guidance fixing problems detected page runs yap agreed", "d": "4/2015"}, {"body": "mean polymorphic methods like instead amp makes difficult teach someone started frontend development jquery name amp code explicitly completely fuckedup value amp people introduced javascript jquery got easily confused conventions ecma standard methods amp jquery naming evolving convention like vs nt help people catchup spec instead adds confusion trying align dom spec naming amp returned values signature close possible educating people learn without jquery might dangerous hope ideally jquery longer necessary future offering people dom knowledge becomes necessity", "d": "4/2015"}, {"body": "nt want people use deprecate amp remove", "d": "4/2015"}, {"body": "kind info might also interesting devtools performance timeline tooling cc jsantell victorporof canuckistani", "d": "4/2015"}, {"body": "kind info might also interesting devtools performance timeline tooling cool thanks pinging may suitable depending complicated detection paulirish mentioned chrome may able measure time jank walk stack see jquery hidden checking", "d": "4/2015"}, {"body": "stucox general agree deprecatedremoved several apis years problem comes complex apis like behaviors edge cases cost us lot performance bytes andor confusing documentation want keep baby throw bathwater miketaylr definitely think devtools add value nt want spew console opinionated purityofcode reasons want give people better guidance something causing bad performance", "d": "4/2015"}, {"body": "thank opening issue passing first argument docs say handler function required passing object supported", "d": "4/2015"}, {"body": "timmywil yes know guard checks values strings objects seeing random errors js profiling tool caused whoknowswhatrandomexternalcode could avoided checks", "d": "4/2015"}, {"body": "talking", "d": "4/2015"}, {"body": "imho check would nt hurt performances events done right", "d": "4/2015"}, {"body": "case actually prefer error thrown make call going anything anyway general policy cases invalid input produce unexpected results thu apr albert casademont notifications githubcom wrote imho typeof string typeof object check would nt hurt performances events done right reply email directly view github", "d": "4/2015"}, {"body": "timmywil check falsy values perhaps remove check", "d": "4/2015"}, {"body": "agree tons party rubbish scripts browsers embed extensions virusestrojansmalware cause js profiling tools using errorception filled faux errors caused sorts external hacks afraid really ca nt control code example code guard check string value instead current code check would come handy", "d": "4/2015"}, {"body": "instead ps still sure separate case", "d": "4/2015"}, {"body": "acasademont function execute event triggered value false also allowed shorthand function simply return false couple usecases", "d": "4/2015"}, {"body": "point check presence function shorter nt really care guards sideeffect really supported either", "d": "4/2015"}, {"body": "nt see terrible thing lose bytes minified version mere bytes gzipped one polish edge cases already lots guard checks code choice thanks time", "d": "4/2015"}, {"body": "nt see terrible thing lose bytes minified version mere bytes gzipped one polish edge cases keep mind would multiply number fraction size public api never bytes already lots guard checks code guards invalid code rather support public apis parameter overloading", "d": "4/2015"}, {"body": "specific check api supports value shorthand check function part past perhaps illadvised retrospect attempts silently accept invalid combination arguments making enduser debugging difficult seeing random errors js profiling tool caused whoknowswhatrandomexternalcode could avoided checks random errors avoided way calls clearly made reason change would convert noops trying nt done lack error messages nt mean page working properly error messages may way diagnosing code trying", "d": "4/2015"}, {"body": "dmethvin thing error thrown event fired event binded makes hard debug tons events ca nt really know event bind caused bad param even code party script would fine exception thrown param function would ok instead silent fail", "d": "4/2015"}, {"body": "jquery ignore problem help debug wondering sets event element set conditional breakpoint looks non", "d": "4/2015"}, {"body": "dmethvin code happening ca nt using cool reporting tool catches js errors customers see one stack traces get clue stack bound event stack provides info calls led fire event hate error really ca nt much error time eventbinding would come handy", "d": "4/2015"}, {"body": "building custom jquery great add whatever want check bad values throw error also good monitoring errors best practices jquery discarding bad inputs ca nt throw error every misuse api takes many bytes", "d": "4/2015"}, {"body": "okay since question nt answered order clutter discussion open pull answer matter", "d": "4/2015"}, {"body": "precisely trying big fan custombuilt libs suggest changes upstream understand point end discussion thank markelog change consistent opinions posted noguardsifnotabsolutelynecessary policy bytes less minified version p", "d": "4/2015"}, {"body": "yeah goes infinity recursion execution since passed argument funarg jquery constructor feeling receive ticket like ca nt find though technically speaking function acceptable argument nt makes sense add guard sure timmywil", "d": "4/2015"}, {"body": "markelog already rejected", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "hmm sorry nt see issue try fun report", "d": "4/2015"}, {"body": "thank opening issue multiple versions jquery page recommended allowed like see logs versions jquery currently page think best done plugin something like", "d": "4/2015"}, {"body": "thank opening issue inconvenience regrettable two issues fact included mistake files meant npm bower sorry confusion fixed agree source map url however issue fixed wishing took source map url release missed regardless regret future releases include source map url", "d": "4/2015"}, {"body": "svenackermann note happens open devtools users affected developers inconvenience nothing serious", "d": "4/2015"}, {"body": "documentation jquerymap nt say method takes string passing one case method returns change pass correct type cases", "d": "4/2015"}, {"body": "change also breaks datatables following code", "d": "4/2015"}, {"body": "fixed plugin since never supported strings", "d": "4/2015"}, {"body": "nt disagree plugin fix incorrect usage minor point release jquery introduce backwardsincompatible change seeing breaks popular plugin countless codebases rely previous", "d": "4/2015"}, {"body": "drarok technically speaking semver describes relation public api versions talking undocumented behavior therefore semver nt apply unfortunately problems unavoidable people nt remember possible method signatures nt check docs every use leads sometimes relying undocumented behavior change make even patch releases may break invalid use cases always say semver hint test projects every library upgrade even upgrade newer patch release thus question broke plugin uses undocumented apis incorrectly guess almost always break something much impact breakage may eg popular plugin etc anyone reported issue patch pr likely update patch avoid issue done released amp rereleased make newest jquery amp datatables work two options work around jquery amp release new jquery versions amp fix datatables amp release new datatables version whatever happens need update one libraries anyway make work case rather datatables fixed incorrect use jquery api report issue public bug tracker could post link say work around amp release new patch update lot popular plugins relied behavior far know one imo fix side", "d": "4/2015"}, {"body": "well said mzgol would quite uproar us another patch release support undocumented behavior", "d": "4/2015"}, {"body": "posted problem forums see mostly paid product reinforces view fix", "d": "4/2015"}, {"body": "fix committed datatables nightly version date change passing string bug nt pick worked jquery nt notice completely concur change required jquery see mostly paid product reinforces view fix datatables mit licensed", "d": "4/2015"}, {"body": "datatables mit licensed sorry quick glance site enough apparently passing string bug nt pick worked jquery nt notice fully understand issues unavoidable unfortunately thanks quick reaction", "d": "4/2015"}, {"body": "hm add behaviour migrate", "d": "4/2015"}, {"body": "hm add behaviour migrate seems like good idea", "d": "4/2015"}, {"body": "would say care changes documented behavior", "d": "4/2015"}, {"body": "lot undocumented behaviour undocumented methods example", "d": "4/2015"}, {"body": "duplicate", "d": "4/2015"}, {"body": "changing attribute property dom element use info", "d": "4/2015"}, {"body": "thanks lot answer know difference attr prop helpfull", "d": "4/2015"}, {"body": "indeed removing lines nt break including ff tests added issue exist ff longer reproducible modern browsers would like sends us pr cc rwaldron", "d": "4/2015"}, {"body": "code still acts defense form aliasing either drop support add unit test", "d": "4/2015"}, {"body": "change fixing bug removing feature smilingimp variable aliased test case could nt use form element arraylike object iterate collection", "d": "4/2015"}, {"body": "variable aliased test case could nt use form element arraylike object iterate collection nuhuh check console", "d": "4/2015"}, {"body": "must missing something extra console logs", "d": "4/2015"}, {"body": "never supported usage fact always closed issues like see recent one", "d": "4/2015"}, {"body": "agree closing happy bug aliasing problem hard solve", "d": "4/2015"}, {"body": "fine removing", "d": "4/2015"}, {"body": "working around form aliasing hard especially general case possible length also matter fine nt merits wontfix mention analogous manipulation", "d": "4/2015"}, {"body": "position include margins kind reasonable margin part element ur example victim div locates left top left margin top margin border left top since asking position border victim", "d": "4/2015"}, {"body": "alburthoffman thank explanation though still concern different behaviors method different browser view using jquery shall exempt caring browser facing behavior method shows asymmetry mentioned api documentation case obtain correct result switching method method semantics act switching shows compatibility concern suggestion method reporting value browsers either subtracting margin value chrome follow chrome way cases", "d": "4/2015"}, {"body": "report value though need ignore margin body chrome really margin body chrome rationalize ignoring value set css", "d": "4/2015"}, {"body": "depends browsers tested chrome safari firefox left value different marginleft set require lots browser version checking function return value", "d": "4/2015"}, {"body": "seems like way pages would fix css reset normalize seems consistent firefox btw", "d": "4/2015"}, {"body": "alburthoffman think webkit based guess checking phrase webkit navigatoruseragent enough dmethvin honor official reply mentioned problem chromeonly margin ignored set chrome user comes side effect auto browsers like firefox interprets directly horizontally center div chrome calculating margin left drop auto give concrete left margin div firefox chrome reports left offset possible overload method example call ignore margin totally reports left offset left border see case left offset want know definitely gap left border div left boundary page excluding margin", "d": "4/2015"}, {"body": "suggesting set margin zero browsers works fine", "d": "4/2015"}, {"body": "dmethvin still see discrepancy result pane sufficiently wide even latest fiddle bug firefox marked cantfix side least twice", "d": "4/2015"}, {"body": "fixed firefox caused windowgetcomputedstyle ff function doesnot return caculated margins margins set auto one problem find way check margins set auto ff clues right", "d": "4/2015"}, {"body": "fixable another awesome hack style swap might big right instead may get even bigger almost certainly slower multiple reflows", "d": "4/2015"}, {"body": "awesome curious swap part need check margintop margintop auto right", "d": "4/2015"}, {"body": "yes course got carried away copypasta", "d": "4/2015"}, {"body": "guess favor aligning behavior swap unfortunate limit usage one case", "d": "4/2015"}, {"body": "also supportmarginauto calculated jquery starts nt need test every time position called", "d": "4/2015"}, {"body": "look like linter errors code tested via jshint warnings pasted restrictive jquery code base rules nothing wrong jquery applying custom restrictive linting rules may always report lots warnings project", "d": "4/2015"}, {"body": "hmm maybe comment could applied code", "d": "4/2015"}, {"body": "running jquery mode never force code strict mode nt tested jquery run strict mode firefox complaining prevents issues strictnonstrict mixing", "d": "4/2015"}, {"body": "nt know compiled seamonkey sources cflags cflags ddebug dndebug cxxflags cflags configure disableoptimize please could answer original bug report suggest mozilla developers drop habit", "d": "4/2015"}, {"body": "nt jquery bug even sure would report since nt test case jquery working properly browsers support custom compiled seamonkey nt working properly need debug report appropriate place", "d": "4/2015"}, {"body": "would suspect would great performance optimization older browsers css selector given id first searches instead executing pseudo selector code fact sizzle jquery selector engine unfortunately optimization disabled ie lt browsers broken methods return elements name attributes equal desired id still current behavior probably excessive opened sizzle issue address", "d": "4/2015"}, {"body": "bug selector inaccurate fixed version", "d": "4/2015"}, {"body": "fixed version mine", "d": "4/2015"}, {"body": "nope child selector without every cibled descends least edit indeed nt saved fiddle revamped apologies", "d": "4/2015"}, {"body": "thank selector gt works selector inaccurate wrote better selector probably divclick title click nt suppose direct descendants thank time", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "agreed", "d": "4/2015"}, {"body": "removed milestone since github issues nt distinguish closed fixed closed invalidduplicateetc need remove milestone invalid tickets incorrectly included changelog", "d": "4/2015"}, {"body": "personally usage side effect sorts collection usually end make clear people nt familiar side effect name change nice", "d": "4/2015"}, {"body": "sgtm", "d": "4/2015"}, {"body": "woot", "d": "4/2015"}, {"body": "thank opening issue correct behavior may unexpected selector working documented behavior differs firefox chrome chrome reports zero width zero height technically means visible according docs visible elements width height greater zero fact hidden elements visible content seem strange way chrome importantly cost working around would far greater willing deal nt think edge case selector behaves way unexpected would prefer keep selector simple possible let edge cases covered means", "d": "4/2015"}, {"body": "seems like chrome bug safari well", "d": "4/2015"}, {"body": "seems like chrome bug safari well yes", "d": "4/2015"}, {"body": "test case jsbincom browserstackcom moment", "d": "4/2015"}, {"body": "timmywil thank quick reply first like apologize file duplicate issue seems least one earlier issue reporting problem includes solution also nt seem strange visible elements bleed visible child elements edge case degree perhaps note documentation imo people use jquery get results different browsers matter may even realize selectors sometime behave differently", "d": "4/2015"}, {"body": "funny thought remembered issue like came play could nt find looking old tracker maybe crashing sites dunno selectors nt good idea make browser lot work determine answer layout changed many cases track information ways lot faster", "d": "4/2015"}, {"body": "dmethvin old shimonenator already found case comes mind soontobemerged uses getclientrects decide offset meaningful fact work particular leaves open redefinition", "d": "4/2015"}, {"body": "visible hidden selectors nt good idea make browser lot work determine answer layout changed many cases track information ways lot faster know love say much possible really helpful developers writing general purpose code performance problems irrelevant many use cases", "d": "4/2015"}, {"body": "fact work particular leaves open redefinition simple nt cost much let", "d": "4/2015"}, {"body": "scottgonzalez think meant following current implementation functional method would thus seems performant solution would fall onto either case always executed little complicated due old opera behavior", "d": "4/2015"}, {"body": "discovered another solution pr approved seems line current discussion performance additional consideration added", "d": "4/2015"}, {"body": "upon deeper analysis would behavior change makes strongly recommend git builds include defining essentially releases forward use logic like fix issue would refine released logic revert", "d": "4/2015"}, {"body": "less elements faster gets best perf increase big amount elements performance unnoticeable expansive call ie even without deduplication without sorting still sensitive difference worth please reopen objections", "d": "4/2015"}, {"body": "please post questions stack overflow jquery forums bug report", "d": "4/2015"}, {"body": "think native behaviour", "d": "4/2015"}, {"body": "elements closing tags", "d": "4/2015"}, {"body": "correct void elements therefore prohibited end tags", "d": "4/2015"}, {"body": "timmywil yeah like elements parses differently case incorrect html end result unpredictable", "d": "4/2015"}, {"body": "plaindom equivalent gives", "d": "4/2015"}, {"body": "weird caused preremoval boolean property setting rules around select elements boolean properties quite complex surprised see browser divergence maybe take special boolean treatment", "d": "4/2015"}, {"body": "yes already issue open", "d": "4/2015"}, {"body": "please ask help forums jquery irc channel", "d": "4/2015"}, {"body": "jsfiddle like way found bug ask fault plugin used realize fault jquery continue make issue google chrome directly try put nt works neither also work firefox bug occurs remove okay think", "d": "4/2015"}, {"body": "right submited issue chrome closing issue thanks", "d": "4/2015"}, {"body": "right submited issue chrome could post link issue people interested", "d": "4/2015"}, {"body": "wish could submitted browser help gt report issue menu nt give url issue tracking checked chromium bug list official build seems separate repo hear back update thread interested look stackoverflow thread infos google chrome bug tracking", "d": "4/2015"}, {"body": "wish could submitted browser help gt report issue menu nt give url issue tracking generally prefer submit bug reports manually builtin reporter mostly useful report bugs related purely official chrome build chromium webrelated issues generally concern whole chromium code base", "d": "4/2015"}, {"body": "btw found related question stackoverflow someone said call constructor simply expect get new object get reference one pass opinion sounds reasonable nt convince us consider constructor strict oo way object wrapper provide api entrance", "d": "4/2015"}, {"body": "set elements jquery object nt memory query produced success example would imply finally confused elem return elem directly already jquery object purpose creating cloning new object many things could done example explicitly say supported throw explicit error return original object return new set elements nt link original discussion last option chosen seems like perfectly cromulent choice really forum question since bug feature request", "d": "4/2015"}, {"body": "understanding always passing jquery instance special handling treated exactly array elements", "d": "4/2015"}, {"body": "recall discussion time whether passing jquery object valid talking api behavior choice implementation", "d": "4/2015"}, {"body": "dmethvin curious rationales behind choice especially zepto seems choose diff behavior", "d": "4/2015"}, {"body": "dmethvin thanks reply really forum question since bug feature request yes core development team answer question mentioned people jquery forum guess talking api behavior choice implementation problem current choice works fine wan na known reason choose current behavior", "d": "4/2015"}, {"body": "adding new custom selectors jquery performance better stay standard css selectors also see discussion original ticket positive votes idea however absolutely set using easily create plugin sizzle", "d": "4/2015"}, {"body": "thank opening issue think safely say get answers team best done plugin want add selector extensions sizzle part current future selector specs", "d": "4/2015"}, {"body": "dmethvin jinx", "d": "4/2015"}, {"body": "nice thought nt appear work arraylike reason merge function also avoiding implementation actually incurs twice", "d": "4/2015"}, {"body": "using quick test seems work chrome unless missing something course", "d": "4/2015"}, {"body": "may able rely vm trying using object quick untested thought", "d": "4/2015"}, {"body": "jaubourg code comment directly definition pushapply arraylike throws ancient webkit", "d": "4/2015"}, {"body": "question ancient", "d": "4/2015"}, {"body": "bad year ago still percent android", "d": "4/2015"}, {"body": "also phantomjs still trying kind support hopefully restrict jquery", "d": "4/2015"}, {"body": "sob", "d": "4/2015"}, {"body": "thanks lot see guys really appreciate answer", "d": "4/2015"}, {"body": "known issue addressable fixed meantime recommend escaping characters attribute values", "d": "4/2015"}, {"body": "real usecase since docs see may html string dom element array dom elements since would array dom elements bytesize perf hit", "d": "4/2015"}, {"body": "necessary intercepted html replaced empty string", "d": "4/2015"}, {"body": "ca nt use sure stackoverflow answer creating form element first place", "d": "4/2015"}, {"body": "well meant data stored javascript variables elements work nt think applied since elements serialize case challenge much getting string ready send actually send way handled ajax call real form submission ie response likely html page need rendered browser whichever url answer generates form order make native browser rather jqueryjavascript send data", "d": "4/2015"}, {"body": "would say scores seems much like plugin", "d": "4/2015"}, {"body": "see mean could certainly work plugin although would nt cause harm core either except admit hundred bytes probably around minimized insignificant know suppose main question generally useful let go points page require access jquery internals nt suppose jquery benefit unless course future functionality would use sort related dom operations actually acts way yield formdata control jquery back dom makes sense currently served official plugin although one could made change existing api nt go best practice afaik suppose reason came felt counterintuitive functionality cumbersome achieve creating form input elements faster cleaner way within jquery suppose plugin", "d": "4/2015"}, {"body": "inside plugin nobody sees cumbersome people need use plugin people nt need wo nt pay since nt build smilingimp", "d": "4/2015"}, {"body": "pretty bogus jsperf nt loops inside tests like jsperf looping get measurable test also lot code outside actual calls could taking time example work create string like know jsperf jquery performance post question forum stackoverfow", "d": "4/2015"}, {"body": "second request", "d": "4/2015"}, {"body": "thanks report svg support long listed wo nt fix document along links relevant discussions elaborate position", "d": "4/2015"}, {"body": "little disappointing position taken svg gaining widespread interest use though nt html dom svg attributes still accessible dom via vanilla js tickets shown years ago", "d": "4/2015"}, {"body": "years later might time reconsider jeresig thanks", "d": "4/2015"}, {"body": "exactly would like see added looked libraries like raphael designed support svg keep mind svg html despite fact look similar represented strings", "d": "4/2015"}, {"body": "detecting hasclass addingremoving classes would hugely helpful ux interaction boon yes know raphael snapsvg let say using different animation library add snap look classes add performant click events particularly already loading jquery feels painful redundant realize request might large scope yes svg nt html possibility jquery could add feature worth discussion everyday usage svg web fastgrowing adding kind support potential large payoff community", "d": "4/2015"}, {"body": "title request better svg support still super vague would pretty hard make pull request say large scope sounds like asking svg dom supported jquery methods asking class operations", "d": "4/2015"}, {"body": "better svg support overall would outstanding say might large scope anticipating could heavy jquery support yes thanks clarifying specifically asking add class operations svg attributes would huge ux boon change way could handle interaction svg moving forward", "d": "4/2015"}, {"body": "get board class manipulation fact recently updated sizzle guarantee shorthand class selection others said ecosystem different svg got added wontfix list", "d": "4/2015"}, {"body": "class manipulation svg elements", "d": "4/2015"}, {"body": "want class names draw line agree fewer concerns well two ways afaik one switch property attribute patchwelcome feature ticket approach idea switch docs use approach avoid forked code paths another support api would implemented parallel existing code since several currently supported browsers android still implement pr caitp declined land specifically concern svg scope creep someone asks svg support hey fixed support svg fix guilt trip gon na back us right smilecat eg much much", "d": "4/2015"}, {"body": "think valid concern performance classlist buggy implementations attribute approach lot simpler faster", "d": "4/2015"}, {"body": "ok sounds like best way switch classname class attribute cursory look tells references attributesclassesjs file would correct try let svg support snowball huge problem guys", "d": "4/2015"}, {"body": "dmethvin classlist supported svg nodes ie way make work use attribute full svg support might bloat jquery lot times hear people sth nt work jquery svgs classes attributes already sortof work right think nice support one thing planning patch nt found time yet", "d": "4/2015"}, {"body": "topic longer decline patches svg elements perhaps remove wo nt fix list otherwise say one thing opposite topic like case shadow dom support svg decrease performance increase size complicate code user operates svg elements js sooner later would need cssclasses use special libs appropriate way imho", "d": "4/2015"}, {"body": "topic like case shadow dom support svg decrease performance increase size complicate code markelog found actually case using idl attribute methods identical work vm fact property merely reflects attribute although reflection works differently svg noted nonnormatively html spec classname classlist idl attributes defined dom specification reflect class content attribute people might ask please use createelementns depending context something could incur performancecomplexity costs class api issue pretty easy fix series line changes swap classname getsetattribute adding svg cases class api tests", "d": "4/2015"}, {"body": "topic longer decline patches svg elements perhaps remove wo nt fix list otherwise say one thing opposite appears svg limited class support topic like case shadow dom support svg decrease performance increase size complicate code user operates svg elements js sooner later would need cssclasses use special libs appropriate way imho", "d": "4/2015"}, {"body": "please see caitp comment class operations large part ux interaction people need lot yes indeed using snap gsap enhancement seems within scope easy define boundaries", "d": "4/2015"}, {"body": "change simple enough probably wo nt hurt performance size simplicity wanted past concern users want svg supported across board going happen soon leave svg wontfix list jquery remain html dom library leave hard parts working svg elements libraries focus said ability work classes svg minor utility could provide disproportional benefits users nt need anything class manipulation would imagine happens pretty often", "d": "4/2015"}, {"body": "version jquery use seems basic example work everywhere need test case proceed", "d": "4/2015"}, {"body": "currently planned nt proper infrastructure place time first supported version npm versions thirdparty time took ownership npm package ca nt update instead nt encourage use outofdate versions migrating simple", "d": "4/2015"}, {"body": "tried ended getting stack overflows time july went using crashed worked fine", "d": "4/2015"}, {"body": "jquery supports experience issues please try create test case amp report bug us really need ca nt specify nt think want encourage using older versions library", "d": "4/2015"}, {"body": "proxy npm github links nogo try get small test case nt think able happened site lot happening keep source code vcs thanks response", "d": "4/2015"}, {"body": "guess could publish huge demand people fine upgrading great able find culprit timmywil think", "d": "4/2015"}, {"body": "agreed preferred route would fix issues", "d": "4/2015"}, {"body": "mzgol timmywil see reproduce error", "d": "4/2015"}, {"body": "duplicate jquerysizzle harmless already fixed upstream resolved next jquery release", "d": "4/2015"}, {"body": "invoked setter attempts apply argument element collection independently specifically affects checkboxes radio inputs select elements update boolean instead string based whether element value appears input workaround fact correct way pair array values elements collection created jqueryapijquerycom clarify documentation", "d": "4/2015"}, {"body": "see thanks clarifying nt quite clear docs although quite tired still reason implement behavior treat input types differently expect desired behavior would apply element array input rather inputs would cool also consistent edit sorry misunderstood reply current behavior different wanted bit convoluted docs could clearer said issue ca nt readily extended string inputs indeed tired", "d": "4/2015"}, {"body": "stackoverflow right place reporting jquery bugs clear repro case", "d": "4/2015"}, {"body": "understand position increase weight jquery much nt seen people complaining feature guess something many people wanted", "d": "4/2015"}, {"body": "function args every method nt really make code lot shorter easier understand use cases", "d": "4/2015"}, {"body": "dmethvin use everywhere need also think useful aurelioderosa think implement need lines code much", "d": "4/2015"}, {"body": "redexp nt think need wish nt requires code inside jquery worth also performance killer way defined example html function passed current html content may needed expensive retrieve", "d": "4/2015"}, {"body": "redexp rewrite jquery favor", "d": "4/2015"}, {"body": "know guys stuff without problems talking api consistency attr prop css", "d": "4/2015"}, {"body": "api consistency got mess something added api making operation easier api", "d": "4/2015"}, {"body": "well everybody think like close issue", "d": "4/2015"}, {"body": "defense redexp function core part nt normally function save lines everywhere many case user give function etc", "d": "4/2015"}, {"body": "yes complexity due mess support incredibly complex set input arguments runtime", "d": "4/2015"}, {"body": "bad thing concept pass function instead value one reasons love library", "d": "4/2015"}, {"body": "incorrect happens even without jquery test case sounds like bug chrome", "d": "4/2015"}, {"body": "unfortunately time try without using jquery document ready features place jquery could failing otherwise would chrome bug", "d": "4/2015"}, {"body": "works test case consistently reproduce becomes available revisit", "d": "4/2015"}, {"body": "timmywil test incomplete must open link new tab using target blank", "d": "4/2015"}, {"body": "link", "d": "4/2015"}, {"body": "jsfiddle poor site tests wraps everything iframe even lite mode jsbin better", "d": "4/2015"}, {"body": "think easy enough reproduce create simple html file locally fail thu apr pm micha\u0142 go\u0142\u0119biowski wrote jsfiddle poor site tests wraps everything iframe even lite mode jsbin better reply email directly view github regards mike", "d": "4/2015"}, {"body": "reproduce either jquery latest please make sure issue exists latest version jquery create test case jsfiddle jsbin", "d": "4/2015"}, {"body": "yes issue exists jquery sorry founding simulate ajax request list code click document ready function suggest click function alert hello ajax url apiechojson datatype json data dest hello success function data consolelog success error function data consolelog error apiechojson ajax request returns wright data even though wright json formate output error think confused jqueryajax document wrotes success type function anything data string textstatus jqxhr jqxhr function called request succeeds function gets passed three arguments data returned server formatted according datatype parameter datafilter callback function specified string describing status jqxhr jquery xml object jquery success setting accept array functions function called turn ajax event", "d": "4/2015"}, {"body": "request data must valid json request fail go error callback even http status could nt otherwise since jquery supposed deliver converted json success callback parameter example", "d": "4/2015"}, {"body": "ok tks dmethvin newer jquery read document function called request succeeds think success methord called request succeeds take http status code", "d": "4/2015"}, {"body": "nt add enumerable properties", "d": "4/2015"}, {"body": "thank", "d": "4/2015"}, {"body": "try jquery code nt exist good idea test latest version reporting bug chance might already fixed", "d": "4/2015"}, {"body": "happened backbone collection trailing url safari like issued found actual request made authorization code attached request headers removing trailing solved issue", "d": "4/2015"}, {"body": "jquery case looking normalized per docs use want original native event", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "closing lack input answer question reopen", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "reason ever supported api", "d": "4/2015"}, {"body": "lodash hit lodash managed avoid naturally without targeting issue specifically switched checks helper function islength perf hit actually spoke soon seems lodash users mistaken reporting issue resolved", "d": "4/2015"}, {"body": "digging looks like solution simple storing doable workaround seems avoid uglifyjs transformations see", "d": "4/2015"}, {"body": "discussion decided go tweak approach remove concerns minifiers equation using helper produces function like", "d": "4/2015"}, {"body": "fyi fixed ios", "d": "4/2015"}, {"body": "chrome getting following error need something avoid", "d": "4/2015"}, {"body": "bug datatables code please report issue also see previous report issue", "d": "4/2015"}, {"body": "mzgol report issue also research asking question next time thanks", "d": "4/2015"}, {"body": "fix committed datatables nightly version date change apologies error", "d": "4/2015"}, {"body": "johnrodney would work positions", "d": "4/2015"}, {"body": "well right equals left width bottom top height maybe implement animation like firefox top bottom passed animate top given height topbottom seems annoying real issue animating css values nt initialized allows undefined behavior leads inconsistent browser interpretation far tell", "d": "4/2015"}, {"body": "hmmm imho bug timmywil something incoherent want first set element size right try put inner border side try put element large start left termine right incoherent remove border see bug zoom replace see bug outline inner oh crap nt test firefox saw tiny visual bug actually google chrome thought bug", "d": "4/2015"}, {"body": "issue difference behavior ff removing border nt alter behavior test case confirmed works reason adding right bottom values animation", "d": "4/2015"}, {"body": "per today meeting agreed like try changes see goes let nail places like see change", "d": "4/2015"}, {"body": "ie seems support credentials url tested locally seems true nt work ie chrome ff currently using set headers method well mitigate problem changes method get options however yes option let jquery set headers would nice maybe even default true nt work ie otherwise madlittlemods commit seems work think however function could achieved much simpler according mdn source", "d": "4/2015"}, {"body": "mattdimu clear nt make changes commits please look names replies anshuxlr posted link code", "d": "4/2015"}, {"body": "yeah sorry meant anshuxlr ofc", "d": "4/2015"}, {"body": "yes already couple places stopped guarding browsers missing one go well", "d": "4/2015"}, {"body": "updated title accuracy suggested implementation", "d": "4/2015"}, {"body": "sounds like blocker", "d": "4/2015"}, {"body": "cburschka issue whenever call toggle hiding aspect works fine however toggling back show hidden content inline style left causes content appear originally cburschka worked around explicitly resetting element back inline animation done", "d": "4/2015"}, {"body": "may silly question keep simple", "d": "4/2015"}, {"body": "niutech overwriting display style kill cascade foo display inlineblock lorem ipsum worse yet preexisting inline styles blowing away well lorem ipsum use different attribute managing visibility element state stays independent styles", "d": "4/2015"}, {"body": "well released update autofix well", "d": "4/2015"}, {"body": "right", "d": "4/2015"}, {"body": "issue sitting bit julianshapiro happen hook velocity jquery tests", "d": "4/2015"}, {"body": "discussed meeting sorting guaranteedunique collection nt seem high enough value justify degrading performance without realworld use case", "d": "4/2015"}, {"body": "change landed", "d": "4/2015"}, {"body": "would like add since nt see mentioned anywhere css height css width also rounding values yes caused code going special hook instead works disconnected nodes see quite lot code btw original issue mentioned hidden elements well code also works around number box sizing ie bugs", "d": "4/2015"}, {"body": "currently nt ie environment test", "d": "4/2015"}, {"body": "jsfiddle broke jquery edge urls apparently jquery compat edge amp jquery edge swapped see better use jsbin edit jsfiddle fixed", "d": "4/2015"}]