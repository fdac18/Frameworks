[{"title": "dynamic route segments nt urlencoded", "body": "read associated pr looks like everybody involved agreed url encoding work nt look like things ultimately landed issues closed favor rolling fix part alexspeller query params work unfortunately appears url encoding handled query parameters dynamic route segments quick example things go wrong take look js bin example two models one id raw one id encoded click link encoded model refresh page see loads raw one instead appear behavior would expect always encode dynamic path segments avoid kind ambiguity", "num": "4794", "d": "4/2014"}, {"title": "autolocation breaking bugfix", "body": "using released possible set rooturl location end slash eg blows would consider breaking bugfix currently tagged bugfix compounding issue changing rooturl makes impossible access app thereby breaking links across app expected redirect urls need trailing slashes seems like nasty thing encounter especially going thanks yall cc rjackson jayphelps", "num": "4793", "d": "4/2014"}, {"title": "templateroutecontrolleretc lookups fail lookup name exists objectprototype", "body": "see twitter thread tl dr firefoxonly bug prevents naming route embertemplateswatch detected function tries render function another jsbin route named fails probably limit want support let discuss careful lookup logic cc nathanhammond", "num": "4792", "d": "4/2014"}, {"title": "reseting classnames extending parent component breaks events", "body": "see jsbin dragging test component say first works expected basically component js var compone embercomponentextend classnames compone attributebindings draggable draggable true dragstart function consolelog compone dragstart var comptwo componeextend classnames comptwo wont work since keeps parents classnames resetclassnames function thisset classnames comptwo init drag get drag get nothing alternate way reset", "num": "4791", "d": "4/2014"}, {"title": "uncaught error assertion failed metamorph tags metamorphxyzstart metamorphxyzend different parents", "body": "noticed error appear tables specified appears though ember adding tag adding closing metamorph new tag instead original placing", "num": "4789", "d": "4/2014"}, {"title": "nesting foo bar inside baz quux causes inner render", "body": "details jsbin jsbin illustrates bug scope aliasing composable example see two cases two helpers one using notation nested inside two helpers one using alias notation nested inside using alias notation would expect see results cases instead using doublealiased notation causes inner render theoretically could related kind doubt unfortunately solved", "num": "4787", "d": "4/2014"}, {"title": "collectionview destroying childviews multiple times", "body": "example collectionview triggering twice computed content property set example using works expected", "num": "4784", "d": "4/2014"}, {"title": "handlebars helper within collection outputs statement result", "body": "array controller collection view controller collection view class mycollectionview embercollectionviewextend tagname ul itemviewclass emberviewextend show gt true property controller template handlebars statements within collection helpers output result ifstatment instead ever handlebarshtml put ifif code would result unordered list true instead list true true behaviour occurs using unless using ember beta", "num": "4782", "d": "4/2014"}, {"title": "option push promisaryarray content", "body": "hai nt find option push promisaryarray object content like please let know already available consider feature request thanks advance regards lokesh", "num": "4781", "d": "4/2014"}, {"title": "error template loading", "body": "sure something wrong applicationroute something like javascript actions error function error transition var self metadata timeout action function error transition bootstrapdialogalert message request timeout forbidden action function error transition selftransitionto companies unauthorized action function error transition windowlocationreplace errorresponsejsonredirecturl bad gateway action function error transition throw new error error errorhbs templete expect fired bad gateway error template nt load specific way load default error template thanks", "num": "4780", "d": "4/2014"}, {"title": "render helper rendering variable", "body": "unable pass variable render helper dynamically render controller something able reasons nt possible right ember throws error canary apr uscentral simply nt render nt say anything", "num": "4777", "d": "4/2014"}, {"title": "feature request pass dk triggered change", "body": "tying make feature computed properties found saying wish would receive name dependency triggered change spoked hjdivad nt see reason also told krisselden would gatekeeper changes add feature pretty minimal apparently js function iterdeps method obj depkey seen meta var guid guidfor obj seen guid seen guid seen guid depkey return seen guid depkey true var deps metadeps deps deps amp amp deps depkey deps var key deps var desc metadescs key desc amp amp descsuspended obj continue method obj key gt method embermetallibpropertyeventsjs function propertydidchange obj keyname var obj metakey watching amp amp mwatching keyname gt keyname length proto amp amp mproto desc amp amp mdescs keyname proto obj return nt mean watching key desc amp amp descdidchange descdidchange obj keyname gt pass along dk name watching amp amp keyname length return dependentkeysdidchange obj keyname chainsdidchange obj keyname false notifyobservers obj keyname since already data context free pass along could generalpurpose addition might helpful extra argument name dependentkey triggered change would optional course updated well keep coherence ready make happen prefer ask make changes delicate parts", "num": "4776", "d": "4/2014"}, {"title": "linkto update href related object change", "body": "assuming model related user object want make link user page template may write something like work perfectly good long user object wont replaced one like happens link update text keep old invalid href example workaround attached example would force linkto synchronization giving direct path object helper like please verify consider bug happy work fix ps noticed possibly related behaviour causing linkto href object id difference may due usage ember data async relations thus dspromiseobject able replicate", "num": "4773", "d": "4/2014"}, {"title": "runbind always convey return value callback", "body": "docs say ca nt done invoked within existing run loop someone unaware hidden complexities run loop nt make sense nt occlude return value neither using name bind already expected behaviour developers may easily assume providing enhanced version native case intuitive use promise chains promises may resolved outside run loop yet promise chains often depend assimilation methods transform resolve value surprise developer feature request convey return value callback cases", "num": "4771", "d": "4/2014"}, {"title": "concurrency history mechanism implemented emberrouter", "body": "curious reason behind decision stated presume workaround missing features", "num": "4767", "d": "4/2014"}, {"title": "embera always return array emberarraydetect returns true", "body": "jsbin jsbin inner iframe check js console ember assertion error break getting error need reload guides api docs seem imply passing array return assume type array consumed recently encountered situation getting weird error upon checking assertion fails turned returning false javascript array trying use upon reading docs led seemed perfect fit however even passing array getting error debugging jnhuynh realized since array coming outside emberland due situation things organized company product ember app run iframe gets data outside missing ember prototype extensions verified following quick test javascript var innerwindow iframe contentwindow outerarray innerwindowemberarraydetect innerwindowembera outerarray false nt exactly supposed address able get around using one two techniques recreate array elementbyelement array created emberland directly change array results jshint error deprecation felt wrong interest ember right thing feel right wrong thing feel wrong feel might issue worth investigating", "num": "4765", "d": "4/2014"}, {"title": "use property name views", "body": "property view causes collisions ember internals fiddle unhelpful error pops took way long figure", "num": "4764", "d": "4/2014"}, {"title": "normal see rejected promises transitionto", "body": "normal see lot rejected promises using transitionto library version ember inspector ember ember data emberfire handlebars jquery", "num": "4762", "d": "4/2014"}, {"title": "ember source gem seems messed", "body": "left right looks like something borked gem building process gem probably yanked rubygems asap many people get installed", "num": "4759", "d": "4/2014"}, {"title": "entry routermap method api", "body": "trying find comprehensive usage description router map ca nt even find method api", "num": "4758", "d": "4/2014"}, {"title": "good way make optional dynamic segments strange errors return", "body": "tried add dynamic segment optional app first thing nt know optional param syntax started getting strange non descriptive error templates things took hour realize going matter much tried make param optional param param could huge problem please fix", "num": "4757", "d": "4/2014"}, {"title": "support omitting trailing slashes rooturl autolocation", "body": "autolocation asserts rooturl ends slash breaks apps eg fix plan submitting pr soon", "num": "4751", "d": "4/2014"}, {"title": "ember package converted module", "body": "emberqunit uses module import ember instance ember however ember modules import ember instance embermetalcore instead using emberjs release file use custom build process following current convention converts ember modules amd ember package converted export ember variable module available could make available build process wondering possible default behaviour currently implemented", "num": "4749", "d": "4/2014"}, {"title": "expected deprecations test output hidden", "body": "without possible know hitting deprecated code unintentionally", "num": "4748", "d": "4/2014"}, {"title": "using createchildview still throws deprecation using defaultcontainer warning", "body": "containerview autogens children container views views added render matter add view child container get deprecation using defaultcontainer longer supported defaultcontainer lookup see error even first using createchildview context child containerview jsbin even skipped view sending var v thisget quad createchildview emberview attr thisget quad pushobject v still giving depreciated error pushobject told irc channel might bug posting examples interwebs woefully date thanks", "num": "4746", "d": "4/2014"}, {"title": "emberrsvppromiseall failing firefox safari", "body": "mac os x experiencing strange case using code looks something like loadtopology function var url emberenvapihost emberenvapinamespace join var store thiscontainerlookup store main var promises emberrsvppromiseall storefind tenant storefind host storefind tunnelzone storefind bridge storefind mnrouter storefind chain function values return values function reason rejection consolelog reason buildtopology function values prefetchdependencies debugger var raw values var store thiscontainerlookup store main call methods application route point thistopologyloadtopology function values bind function error consolelog error chrome version opera version statement prints correctly array full resolved promisesvalues safari version firefox version prints known bugs regarding safari firefox help would appreciated thanks alex", "num": "4744", "d": "4/2014"}, {"title": "arraycomputed performance regression", "body": "effects ember discuss thread fix introduced performance regression trades correctness performance patch eagerly computes non array dk invalidated easily induce serious datadriven thrashing likely correct path forward push cp semantics arraycomputed computed consumption likely easier said done unsure another path forward thanks gordon kristan initially reporting providing access app could track exact regression", "num": "4740", "d": "4/2014"}, {"title": "query params driving crazy", "body": "users route params like problem go page go whole different route go back still shows page instead default page spent day tracking ca nt figure please help thanks", "num": "4737", "d": "4/2014"}, {"title": "query params new bug", "body": "query params support great however hit bug trying error loading route error assertion failed arrayproxy expects array emberarrayproxy passed object put together jsbin reproducing error issue seems passed object contextmodel expects", "num": "4735", "d": "4/2014"}, {"title": "container lookupfactory code path normalizes multiple times", "body": "wasteful code path solution mimic rest container functions normalize validate external interface handle internals without normalize", "num": "4734", "d": "4/2014"}, {"title": "inconsistency currentpath routercurrenthandlerinfos", "body": "hey routes defines hit returns handlers application foo foobar application controller set confusing expecting see handler nt see one please close bug possible please clarify handlers nt result index path thanks", "num": "4727", "d": "4/2014"}, {"title": "binding class names render incorrect classes", "body": "hi maybe using incorrectly reproduced jsbin see expect emberview foo bar classes rendered instead emberview rendered using comma emberview foo bar makes css fails bug using incorrectly thansk", "num": "4726", "d": "4/2014"}, {"title": "improvement hook handle reducecomputed complete invalidations", "body": "write feel lacks way handle total invalidations acording reducecomputed docs dependent keys whose values arrays treated regular dependencies change computed property completely recalculated sometimes useful dependent arrays similar semantics dependent keys end use one time semantics item added removed dependency computed property completely recomputed way total invalidations handled undesirable side effect one application building list money transactions ordered date built cp acted filter function shows transactions within time frame limits time frame must bound cp observing one others previous one ended chart problem changed whole array thrown away performance killer cp received waterfall managed create generic naive primitive embercmp build cp using nt feel really natural think solution another function options object reducecomputed handle complete invalidations example course defined default invalidation strategy like empty array start would backwards compatible since addiction current api feel adding looking internals reducecomputed might able submit initial implementation receive hjdivad blessing", "num": "4724", "d": "4/2014"}, {"title": "showing server side validation errors base object", "body": "let say object story two properties title body validation rules title body also validation rules object whole nt apply one property directly example okay story duplicate title long body different rails suggested base level validation errors placed onto base attribute assuming object nt base attribute already javascript errors returned look like ember model story add base property ember place base validation errors onto model object base errors displayed page object invalid jsbin without base enter information click create object invalid notice base error messages displayed form fill new title new body object changes invalid state uncommited state jsbin base property base added property ember model following behavior occurs enter information click create object invalid base error messages displayed fill new title new body object change invalid thus exception thrown ember try save desired behavior would way display base error message let object saved user corrects title body", "num": "4723", "d": "4/2014"}, {"title": "qps idea add route", "body": "name would default set would pass set values sure qps values would allow using params without checks values nulls maybe could default sure would useful feature example js controller queryparams isadmin hasnotifications page somewhere action thissetproperties isadmin null page route queryparams passnulls false model function params consolelog params page hasnotifications undefined return thisstorefind user params", "num": "4721", "d": "4/2014"}, {"title": "qps idea add route option", "body": "basically prevent writing annoying configuration every qp route route allow every qp refreshes model", "num": "4720", "d": "4/2014"}, {"title": "queryparams pass model hook", "body": "expect qps model hook null string since ca nt pass params directly query backend using", "num": "4719", "d": "4/2014"}, {"title": "unbound helper handlebar helper throws exception", "body": "unbound helper assuming helpers registered emberhandlebarhelpers line case using ember appkit helpers object instead resolved container lookup came two work arounds involves registering helpers app initialized appkit specific emberkeys requirejseakseen filter function key return apphelperstest key foreach function modulename try var module require modulename null null true", "num": "4713", "d": "4/2014"}, {"title": "computedsort slows hangs sortproperties change", "body": "seems slow crawl hang browsers changed often minimal demo using click table headers reorder times things get noticeably slow pasted reference action table headers modifies turn used update works time changes internals take time theory appears multiple calls line interacting badly filling runloop redundant work relevant part confirmed also issue latest canary used jsbin cc hjdivad ebryn followup ps workarounds use computed property create instead refactor use possible", "num": "4712", "d": "4/2014"}, {"title": "avoid suggesting usage native promise", "body": "hey long ember supports correct avoid suggesting usage native object supported currently documented thanks", "num": "4711", "d": "4/2014"}, {"title": "allows changes initial object", "body": "using create oneway copy object allows modify initial object change property computed object example change input values expected behavior", "num": "4709", "d": "4/2014"}, {"title": "feature include ember delegations core", "body": "sick writing tons created small library allow define ember delegations following ruby delegate module example code could like sure unique problem company using ember production months ago find pattern useful guys think including ember core thanks", "num": "4708", "d": "4/2014"}, {"title": "htmlbars", "body": "ebryn kselden mmun working", "num": "4707", "d": "4/2014"}, {"title": "easy stomp cps components due default cp setters", "body": "due default setter semantics computed properties surprisingly difficult work around issue binding computed properties inside components illustrate issue contrived jsbin slightly realistic example details examples nt important following discussion nt presume read let say define computed property component bind property surrounding context like bindings update computed property component overwritten value controller bound probably case completely wipes computed property component ca nt avoid using throw error undesired update instead swallowing ca nt avoid semantics regular computed property nt setter defined however define computed property two unused arguments avoid default setter cf love solution catch makes even worse uglifyjs likely minifiers notice extra arguments unused rewrite function remove result adding two arguments nt need also using perform kind noop optimization nt get rid jumping hoops like really feels like going grain overlooking easy way avoid problem loss solved sensible way perhaps could modified accept flag would make writes noops instead throwing thrilled solution either best able come anyone else better solutions suggest would interested hear cc ghedamat", "num": "4705", "d": "4/2014"}, {"title": "autolocation rooturl work nonhistory browsers", "body": "circumstances user may redirected ember url respect configured application example instead redirecting historysupported url hashsupported url user redirected problem ember combining router browsers support ie see example repository explanation minimal application reproduces issue", "num": "4704", "d": "4/2014"}, {"title": "url location bar browser nt change user clicked link href", "body": "ember version browser chrome version use use location api browser hbs template links routes url browser locationbar changes click one problems click link url clicking nt change url locationbar anymore although still renders correct templates quite confusing since url locationbar nt change jsfiddle although nt show issue since location bar jsfiddle never change created screen cap", "num": "4701", "d": "4/2014"}, {"title": "withhelper controller operator loses scope", "body": "use withhelper controller option operator scope lost output properties scoped object see jsbin demo", "num": "4699", "d": "4/2014"}, {"title": "doc routing guide incorrect", "body": "routing guide nested resources gives examples like dynamic route template jsbin showing false example show template", "num": "4695", "d": "4/2014"}, {"title": "redirect hook resource triggered intrernal route transitions", "body": "tranisting controller via trainstiontoroute redirct hook parent resource call redirects default location js app emberapplicationcreate approutermap function thisresource testsuper path function thisroute testinner thisroute testbrother applogtransitionsinternaltrue apptestsuperroute emrouteextend redirect function transitioning default route thistransitionto testsupertestinner beforemodel function apptestsupercontroller emcontrollerextend actions transitiontobrother function thistransitiontoroute testsupertestbrother transitiontoelder function thistransitiontoroute testsupertestinner hbs lt gt welcome emberjs lt gt linkto testsupertestinner goelder linkto button action transitiontobrother gt brother button action transitiontoelder gt elder outlet behaviour started working fine", "num": "4692", "d": "4/2014"}, {"title": "router logs non error object rejects poorly", "body": "people reject non error objects likely good idea provide message property error logging router logs stack see", "num": "4691", "d": "4/2014"}, {"title": "testing click link linkto helper", "body": "hello try implement tests app works well try element built helper error tried result miss", "num": "4690", "d": "4/2014"}, {"title": "currentwhen linkto disregarded", "body": "property given helper disregarded routename set currentwhen route given linkto resource works correctly broken working jsbin broken jsbin debugging tracks line introduced route given linkto resource last handler index route evaluates true currentwhen overwritten possible solution index route previous handler assigned ready open pr solution correct without change wo nt work cc machty raytiley", "num": "4688", "d": "4/2014"}, {"title": "loading substate applicationroute nt working", "body": "trying perform asynchronous initialization application route want use substate user nt see blank screen however nt seem work jsbin demonstrates issue looks like like ember trying find route named actual route name checked paused line bug create magic route simply renaming template doesnt trick", "num": "4687", "d": "4/2014"}, {"title": "emberarraycomputed consider compound dependent keys", "body": "attempting work around mmun suggestion ended something like expecting two invocations item one empty object setupdata called set however even seeing two invocations one set another property needed still set tried continued fire twice still undefined times", "num": "4684", "d": "4/2014"}, {"title": "pushpayload finishing arraycomputed called", "body": "two caveats preemptive apologies question surely specific isolated whatever behavior speaking almost certainly wellunderstood ground anyone understanding ember well jsbin two models chat amp message create chat record use add message chat response happens sideload chats get property passed id available properties obviously problematic given intended nature calling thing item anyone help triage whether bug otherwise explain things way thanks tonywok amp helping work bit", "num": "4681", "d": "4/2014"}, {"title": "emberkeys never use objectkeys anymore", "body": "release version emberkeys objectkeys whereas beta emberkeys always version overriden browsers nt support objectkeys seems like done transformation emberruntime cc rjackson", "num": "4675", "d": "4/2014"}, {"title": "ember behaves differently", "body": "hi updated ember application getting rendered application using super lot places make problem using requirejs well debug app found triggered indexroute nothing happen route structure route map approutermap function thisresource public path public function thisroute login thisroute logout emberrouterreopen transitionto function name param handling code thissuper name appbaseroute emberrouteextend setup function context var thatsuper thissuper require rp function handling code thatsupercall self context function error handling error rendertemplate function router context windowscrollto appindexroute appbaserouteextend redirect function thistransitionto publiclogin apppublicloginroute appbaserouteextend", "num": "4674", "d": "4/2014"}, {"title": "thiselement null within embercomponent", "body": "trying something like null set use get element point", "num": "4673", "d": "4/2014"}, {"title": "arraycontroller addobject check object content", "body": "current implementation arraycontroller inherited emberarray specify arraycontroller use passing model instance one wrapped item controller return false object always added even might exist array model wrapped model checking object existence js bin able add green able add", "num": "4672", "d": "4/2014"}, {"title": "nt call textarea using shiftenter", "body": "hey guys sure issue maybe improvement parameter textarea great usually shiftenter add new line nt call see facebook behavior example might try pull request find time thanks", "num": "4670", "d": "4/2014"}, {"title": "way customize linkto active class", "body": "generally good practice prefix state class would like modify active class instead even able something like currently possible emberjs", "num": "4668", "d": "4/2014"}, {"title": "autolocation breaking hash browser given hash path", "body": "giving hash browser ie actual hash url resulting canceling router setup blank page tracked line also trying determine autolocation code release quite different master see significant changes master version may issue resolved unable find proper history changes rjackson jayphelps", "num": "4667", "d": "4/2014"}, {"title": "resolver issues updating", "body": "way background app currently mixture ember nonember code set cases manually instantiate views controllers add dom realize nonstandard use case necessary decided rebuild existing large app ember stages certain cases necessary us access ember objects store nonember code ie ember issues using resolver way resolver seem find corresponding objects time run container fashion function executes returns undefined realize nonstandard use case nt relying variable underscores around name work indefinitely however variable clearly still exists one methods returning undefined obvious reason see errors app prior lookups occurring ca nt find anything changelog suggests change would occurred incidentally found similar issues return null however coding issue end able work around", "num": "4666", "d": "4/2014"}, {"title": "unable linkto models route glob", "body": "put together jsbin tried make obvious possible issue expected outcome possible completely misunderstood seems real documentation around using route globs would expect take array models necessary generate glob seems work specify array directly however array generated computed property nt work also whenever array multiple values also seems longer work", "num": "4665", "d": "4/2014"}, {"title": "qunit explodes integrating opalrb", "body": "qunit test adapter dies using opalparserjs lines seem source update test suite runs look ember source found change causes test failures lines javascript test asyncstart calls stop function var originalstop windowstop try windowstop function ok true stop called adapterasyncstart finally windowstop originalstop test asyncend calls start function var originalstart windowstart try windowstart function ok true start called adapterasyncend finally windowstart originalstart changing gets test passing nt cause failures test suite sure logic attaching qunit start stop window nt submitted pull request may intended behaviour", "num": "4664", "d": "4/2014"}, {"title": "queryparamsnew array parameter gets stringified using linkto", "body": "take look following jsbin see clicking link button rendered helper makes array query parameter string clicking stringifies string", "num": "4663", "d": "4/2014"}, {"title": "ember sortfunction results typeerror", "body": "using ember sortfunction variable results typeerror even within core ember code see sortablemixin code sortfunction compare returns typeerror using sortfunction calculate result", "num": "4661", "d": "4/2014"}, {"title": "ember bound action issues iterated context late binding", "body": "bind property assumed current context opposed possible iterated context working amp work around using item controller giving real context section unfortunately must force context meaning ca nt say search working", "num": "4659", "d": "4/2014"}, {"title": "bindattr class strange behaviour mixed static classes", "body": "example unintuitive behaviour least know mixing static classes binded ones good idea maybe better warn user somehow also another one using static classes problems limitations current binding system htmlbars fix waiting much htmlbars", "num": "4657", "d": "4/2014"}, {"title": "log defaultresolverresolve", "body": "working ember app recently hard time knowing call things ember opinion things often end guessing around dark trying figure magical string today backendordersshipmentsmanifestitemcontroller discovered hacked app resolver causes output console gives pretty good indication ember assuming something lacking information clearly shows right names things think setting similar would great benefit like getting started ember", "num": "4654", "d": "4/2014"}, {"title": "transpile task broken windows", "body": "currently modulename generation done using pathjoin however windows path separator rather causing two things modules nt basepath removed module names entirely incorrect module names also include incorrectly escaped characters missing normal separators example one generated module name", "num": "4651", "d": "4/2014"}, {"title": "error safari chrome initializing promise route", "body": "sure whether bug appreciate guidance towards solution trying wrap nonpromise functionality promise object use part model function route finding even declaring causing safari error typeerror attempting configurable attribute unconfigurable property chrome nt seem issue see behavior creating new embercli project simply rewriting following export default emberrouteextend model function var promise new promise function resolve reject success resolve value article seems related issue directly applicable actually changing return value function", "num": "4650", "d": "4/2014"}, {"title": "additional documentation regarding location history", "body": "one need understand using bootstrap page indexhtml server needs serve page url app routing mechanism take otherwise urls failed load found use case better explanation", "num": "4649", "d": "4/2014"}, {"title": "global variables get reset transition external site", "body": "global variables get reset initialized values transition external site back via browser back button use case follows login route upon successful login set event handler handling server send event messages setup shown called upon successful login var app emberapplicationcreate es test applogincontroller embercontrollerextend setup appes new eventsource sse appesonmessage function event consolelog sse message received everything works fine navigate routes application messages going back forth ember server receive sse messages server problems navigate external site via tag eg wwwgooglecom back via browser back button es gets reset test sse messages longer received behavior nt sound right since es keeps value even refresh", "num": "4648", "d": "4/2014"}, {"title": "setting controller property undefined works", "body": "setting controller property undefined seem change property jsbin showing problem bin works use case setting property undefined rather false workaround problem set property bound contenteditable attribute false fails syntax error", "num": "4644", "d": "4/2014"}, {"title": "issue auto location", "body": "using hashes way routes setup try access page domaincomcustomers without login first get redirected domaincomlogin soon try use auto location maybe history location well scenario returns get customers", "num": "4643", "d": "4/2014"}, {"title": "embermixin behaves differently", "body": "noticed behaves differently sorry short writeup heading wanted get reported soon rather later jsbin look console output notice causes mixin patterns work properly", "num": "4641", "d": "4/2014"}, {"title": "linkto helper loses view context statement occurs within context", "body": "jsbin example issue", "num": "4637", "d": "4/2014"}, {"body": "chrisvariety known issue see temporary workaround remove assert", "d": "4/2014"}, {"body": "chrisvariety known intentional limitation initial release discussed decided nt breaking bug fix shipped completely broken nonhistory browsers nt actually work one several issues due rooturl passed autolocation digging bug discovered trailing slash rooturls actually correctly supported location classes autohistoryhash said see need plans fix started several reasons correctly support nontrailing slash roots one example location classes treat two different history states app boots user clicks browser history state incorrectly made url change historyhash means back button take back previous index state intended nutshell use case simply never considered location classes written", "d": "4/2014"}, {"body": "jayphelps thanks much makes sense seem like complicated problem totally missed going go head close one defer yonder", "d": "4/2014"}, {"body": "worth noting imo urls much consistent looking use ends trailing slash vs historyhash vs historyhash opinion servers default forcing trailing slash others default removing either case always configurable", "d": "4/2014"}, {"body": "totally agreed never even tested nonhistory browsers guess care experience little", "d": "4/2014"}, {"body": "chrisvariety thank reporting though even issue known us knowing real users experiencing something helps us prioritize things decide whether assumptions correct", "d": "4/2014"}, {"body": "jayphelps course thank thinking stuff nt wink", "d": "4/2014"}, {"body": "fixes modern browsers move away embertemplates completely eakecli users wont effect us templates stored modules retrieved via loader", "d": "4/2014"}, {"body": "either check property exists valid template name worst different perbrowser basis", "d": "4/2014"}, {"body": "even catch error user wo nt know tested failing browser opinion since nt care prototype allow property names save add check add new assert templates named hasownproperty nt troll ability check", "d": "4/2014"}, {"body": "speaking subtle trolls blow matter unless null prototype edit noticed machty references first post smile", "d": "4/2014"}, {"body": "need make sure stuff like emberinspector nt iterate embertemplates expect hasownproperty exist", "d": "4/2014"}, {"body": "recent discussion creating dictionaries using plain objects short version trying come solution appears nt try appears ton subtle bugs perbrowser basis people opposed creating dictionary implementationadopting one know correct pros guaranteed correctness cons code slower likely dealbreakingly slow require tweaks lots places inside ember cc ebryn", "d": "4/2014"}, {"body": "considered using mixin instead inheritance eg edit quite right get idea would recommend using second variable instead overwriting variable dragging eg", "d": "4/2014"}, {"body": "chrisvariety guess decent workaround", "d": "4/2014"}, {"body": "ebenroux assertion thrown helper used inside tag without specifying assertion introduced mentioned release blog hence nt issue", "d": "4/2014"}, {"body": "ah see thanks", "d": "4/2014"}, {"body": "changed controller template added template mycollectionviewtemplate added templatename mycollectionviewtemplate itemviewclass setup solved issue could someone confirm whether first setup deprecated solution meant used different situations", "d": "4/2014"}, {"body": "promisearrays extend arrayproxy implements mutablearray use promisearray anywhere could use mutablearray long fulfilled", "d": "4/2014"}, {"body": "seems invalid", "d": "4/2014"}, {"body": "closed already resolved", "d": "4/2014"}, {"body": "yes thank", "d": "4/2014"}, {"body": "able work temporary solution sure side effects guess since bound value changed could break things", "d": "4/2014"}, {"body": "rendering bound path supported moment assertion still firing jsbin completely agree would wonderful bound properly many edge cases would need thought took stab ago want review", "d": "4/2014"}, {"body": "well fact already job without tests yet", "d": "4/2014"}, {"body": "interest usecase wanting", "d": "4/2014"}, {"body": "use case implementing hook reducecomputedarraycomputed properties handle changes nonarray dependencies changes array dependencies handled right happens cp completely invalidated recomputed scratch key triggered change available allows decide must trigger action think situations knowing helpful basically free performance terms since already data", "d": "4/2014"}, {"body": "definitely seems like bug believe issue reported bcardarella", "d": "4/2014"}, {"body": "yep behaviour described looks exactly one mentioned ps", "d": "4/2014"}, {"body": "closing favour", "d": "4/2014"}, {"body": "runbind needed promise chains legacy callback foreign libraries introduce async please note rsvp promise already provide runloop juice need", "d": "4/2014"}, {"body": "api nt seem mention whether promise chain execute within run loop resolve reject functions invoked outside look right controller function", "d": "4/2014"}, {"body": "docs explain somewhere gladly review pr doc additions clarify usage correct promises internally already put actions queue run loop present spawn autorun creates runloop us means actually impossible rsvppromise thencatchfinally handles invoke runloop want pedantic concerned autoruns following correct tl dr want wrap root fresh call stack runloop", "d": "4/2014"}, {"body": "x stefanpenner wish could help way technically deficient think want write something nt mind completely totally wrong lot working happily create pr thoughts would welcome", "d": "4/2014"}, {"body": "julianleviston gladly work submit pr cc gladly work", "d": "4/2014"}, {"body": "hiya curious use case needs two simultaneous router states also clear defining multiple states cases nt nested routing handle use cases part issue nt browser handle history mechanism pretty sure traverse history ember using brower history api good enough definitely trivially build url caching mechanism simply appending array willtransition something tho work within ember app might help bit", "d": "4/2014"}, {"body": "use new query params feature bind params application controller needs side panel controller rendered sidebar outlet", "d": "4/2014"}, {"body": "hi thank answer truth new ember also statecharts like idea statecharts read book ian horrocks constructing user interface statecharts try implement one example namely student database short table students data edit delete add new persist remote database saving see statechart diagram explanation application started summary screen entered student records fetched database displayed scrolling list student records database delete edit buttons disabled records database delete edit buttons enabled save button summary screen enabled disabled based whether user made changes student records application enter changes made student records state either delete button summary screen clicked ok button details screen clicked save button clicked changes made student records committed database application return changes made student records state user clicks cancel button details screen changes made student record details screen updated database application returns last summary screen state since two parts summary screen statechart history symbol appears twice sorry long post ps maybe could solve handling save button state setting flag changes made records feel like complex situation could easily led spaghetti code way want avoid statecharts first place nt mean storing states variables around", "d": "4/2014"}, {"body": "sounds lot looking computed properties compute state based upon constituent properties controller set individual boolean property time one described actions occurs use input computed property determines whether particular action allowed also make computed properties based upon number records receive well information found ember guides nonember code setting flag like would likely lead lot messy code computed properties ember really clean recommending closed bug please feel free reach personally glad work simple js bin still desire additional help smile wagenet rjackson nominate closing controllers provide enough state use case even nt got coming wink", "d": "4/2014"}, {"body": "nathanhammond agree however nt want marginalize heads write stack overflow andor message could continue discussion good fit source code issue tracker though particular issue referenced years old iirc fairly sure find clue community use cases bit higher ie high level use cases closer user core ember might find could find easy solution issue", "d": "4/2014"}, {"body": "julianleviston yep also encouraged get touch band always hated issues closed without comment smile", "d": "4/2014"}, {"body": "nathanhammond good form love things directed community much possible want catch use cases hopefully distill documentation least deal much known unknowns possible comes people getting stuck stumbling block people guides cookbooks", "d": "4/2014"}, {"body": "thank guys accept close ticket continue eg based asked days ago nobody answered maybe ember forum get bigger attention", "d": "4/2014"}, {"body": "created topic ember forum continue think nathanhammond think contact soon", "d": "4/2014"}, {"body": "replied question hopefully reasonably comprehensively", "d": "4/2014"}, {"body": "second workaround setting array still work forced use first workaround resolved", "d": "4/2014"}, {"body": "probably use variable name help reduce collisions trolling developers believe would twoline change ca nt vouch rest codebase expecting property exist alternatively somewhere", "d": "4/2014"}, {"body": "resolution today transition although may want deprecate one release release recall many checks peoples code cc krisselden", "d": "4/2014"}, {"body": "discussed core team meeting today definitely agree preventing usage change release cycle allow deprecation first", "d": "4/2014"}, {"body": "rjackson coordinate comments", "d": "4/2014"}, {"body": "gh sucks realtime", "d": "4/2014"}, {"body": "unfortunately yes think nt thoroughly thought suspect future iterations improve", "d": "4/2014"}, {"body": "ok thanks driving crazy thinking done something wrong suppose promise rejections nt thing error use sideeffects drive behavior agree would nice promise tree designed favor resolutions expected outcomes leave open marker possible improvement", "d": "4/2014"}, {"body": "promise rejections errors case router using incorrectly", "d": "4/2014"}, {"body": "yes leave open future improvement extra noise confuses debugging bug", "d": "4/2014"}, {"body": "definitely messed thank reporting yanked published please close confirmed", "d": "4/2014"}, {"body": "looks good thanks", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "source obviously reference api uses dsl think ie method property router canoncial reference router grant particularly comprehensive", "d": "4/2014"}, {"body": "thank look source looked guide could see way make optional dynamic segment see issue missing something", "d": "4/2014"}, {"body": "mean optional dynamic segment better open stack overflow question point sounds like usage problem rather issue source projects try clear descriptive possible using explicit examples stackoverflow question stefanpenner mentioned issue opened router microlibrary worth looking project see explains trying opening stack overflow try help link close issue", "d": "4/2014"}, {"body": "mean set param route someroute param somerouteparam nothing follows someroute get weird error upon trying build app breaks everything looking project seeing nothing far major problem posted stack overflow nobody responding yet old issue solution pretty awful hoping built optional param functionality every router", "d": "4/2014"}, {"body": "mgenev ember nt frameworks nt necessarily behave way expect need learn works assume works like something else seen think question reasonable answer also nt link stack overflow quesiton like asked close issue", "d": "4/2014"}, {"body": "sorry ember nt frameworks nt necessarily behave way expect sounds pretty cultish ember tool designed help wise knowing entity routers web development need params optional otherwise quite difficult things many scenarios stack overflow question", "d": "4/2014"}, {"body": "ya great absolutely must documented docs must readily available easy find would course hope api self describing cases possible", "d": "4/2014"}, {"body": "mgenev maybe someday make knowing entity far ai attempts nt successful", "d": "4/2014"}, {"body": "mgenev cultish piece software like software learn works", "d": "4/2014"}, {"body": "stefanpenner lt", "d": "4/2014"}, {"body": "julianleviston learning works appears missing key functionality makes write ton extra code go around hence filing issues", "d": "4/2014"}, {"body": "stefanpenner thanks understanding", "d": "4/2014"}, {"body": "mgenev apologies man feel pain actually trying help", "d": "4/2014"}, {"body": "julianleviston thanks appreciate attention", "d": "4/2014"}, {"body": "mgenev dude check well might help huge amount", "d": "4/2014"}, {"body": "sorry confusion part ember actually resides microlibrary likely better idea open issue repo", "d": "4/2014"}, {"body": "wasting hours still solution really really bad usage docs area fundamental thing", "d": "4/2014"}, {"body": "mgenev really sorry hear man please paste code jsbin put stack overflow simple example see help try modify docs help people issues reckon", "d": "4/2014"}, {"body": "made repo public linked stack overflow framework needs changing imo docs", "d": "4/2014"}, {"body": "thing takes express strange errors waste time routes directly data want", "d": "4/2014"}, {"body": "mgenev sorry overly familiar express nt understand http verb okay sec google node based server side framework gets server handling requests important keep mind ember clientside framework requests perse actions amp events responses actions amp events usually formed bindings andor functions mentioned issue created lot routing taken care fact ember uses data binding get massive wins take look todomvc example get feel much ordinarily multiple requestresponse flow nt ember bindings best example give probably routes normally responses view edit new actions three cases could handle template ember fact route differences slight provided conditionals handlebars templates example name field might presented like template isediting textarea name else name end thanks making repo public providing context really helps", "d": "4/2014"}, {"body": "small nodejs app test serving without trailing slash", "d": "4/2014"}, {"body": "example found assume ends trailing slash even though neither assert demonstrated navigating clicking index new browser history state created even though nt left needs addressed well unrelated", "d": "4/2014"}, {"body": "hosted example configured remove trailing slashes server side note assert added removed order get app boot", "d": "4/2014"}, {"body": "plan provide ember module first need ensure exposed module hierarchy want expose change also afterwards due semver", "d": "4/2014"}, {"body": "ppcano working converting build tooling use broccoli see progress part process converted ember package moved vendored files separate packages current internally used module names public api certainly fine use custom build process generate amd builds application please realize update module names application likely break intend rename modules use much saner amp consistent api", "d": "4/2014"}, {"body": "rjackson stefanpenner guys discussed import specific vendor packages git submodules example routerjs rsvpjs would find easier debug understand packages imported way", "d": "4/2014"}, {"body": "longer term plan import wip branch moved standalone packages starting point would like import via bower store ember repo bower nt wonderful story locking dependencies may resort submodules manually cloning needed eventually", "d": "4/2014"}, {"body": "nt see deprecation warnings provide steps reproduce", "d": "4/2014"}, {"body": "sorry open browsers console jsbin click redyellowblue list show depreciated defaultcontainer warning autogens view lines causing var v thisget quad createchildview view attr thisget quad pushobject v", "d": "4/2014"}, {"body": "version ember rsvp", "d": "4/2014"}, {"body": "known bugs releatively new versions ember could provide steps reproduce preferably jsbin data persistence library version tell us version ember amp rsvp using suspect unrelated", "d": "4/2014"}, {"body": "julianleviston sorry forgot put versions post ember ember data handlebars jquery stefanpenner try create scenario using jsbin report back thanks instant reaction", "d": "4/2014"}, {"body": "keep posted reproducible steps able figure would quickly", "d": "4/2014"}, {"body": "stefanpenner would kind provide private email would send project trustworthy ember core team member imo could test running common suspects etc able see working correctly chrome failing firefox safari write email alexdaquino gmail com reply file", "d": "4/2014"}, {"body": "intuitivepixel stefanpenner gmailcom fyi im currently epic internet issues home likely going relocate somewhere else bit likely investigate", "d": "4/2014"}, {"body": "stefanpenner forgot say user amp password use ever want", "d": "4/2014"}, {"body": "firefox safari get full stack error originates buildtopology failure appears pushing data store retrieval nt think ember rsvp problem", "d": "4/2014"}, {"body": "humm perform work reducecomputed invalidation different goal similar reasons see", "d": "4/2014"}, {"body": "mmun hjdivad planning chat hours rope ping gtalk stefanpenner gmailcom irc iamstef", "d": "4/2014"}, {"body": "well depending many hours could hard barcelona right fairly night owl much sweat ping tomorrow know decided", "d": "4/2014"}, {"body": "stefanpenner hjdivad yesterday meeting conclusion", "d": "4/2014"}, {"body": "per krisselden hjdivad mmun reverted fix performance regression still leaves original issue outstanding time simple way fix without performance hit mmun time pr revert master stable branches", "d": "4/2014"}, {"body": "rjackson note plan solve original problem take time act mmun hjdivad krisselden time permits could post discourse post something outline plans", "d": "4/2014"}, {"body": "stefanpenner mean reply existing post issue new topic general idea use primitive trackedarray layers arrayproxy collectionview details whole observing flushing consume later bit need working", "d": "4/2014"}, {"body": "issue tracker source code forum technical support use stack overflow issue tracker cases specific bug report reproduce explain detail also probably supply jsbin least source code routes example stack overflow question", "d": "4/2014"}, {"body": "thanks tip future googlers posted", "d": "4/2014"}, {"body": "nt query params bug need define catsindexroute returns array model", "d": "4/2014"}, {"body": "machty thought routes inherited parent works fine attribute commented perhaps misunderstanding happily corrected pr route inheritance", "d": "4/2014"}, {"body": "ah totally right strange investigate", "d": "4/2014"}, {"body": "looks like entering setupcontroller hook passed context query params object instead inherited model", "d": "4/2014"}, {"body": "machty tried narrow scope one finally find inconsistency model hook iterating object containing object function return object queryparams property consequence model hook nt look parent model later setupcontroller called queryparam property context nt know bug paramsfor model hook hope helps", "d": "4/2014"}, {"body": "machty friendly ping sly finding help", "d": "4/2014"}, {"body": "sandstrom yes check thanks", "d": "4/2014"}, {"body": "behaving correctly believe one behaves closely looking property application controller", "d": "4/2014"}, {"body": "ca nt see classnamebindings jsbin maybe posted incorrect version", "d": "4/2014"}, {"body": "also nt think bug likely stack overflow better place ask", "d": "4/2014"}, {"body": "oops linked wrong one sorry update post", "d": "4/2014"}, {"body": "think would nice actually worked correctly would love hear others thoughts", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "viable solution", "d": "4/2014"}, {"body": "actually right solution works stupid still think bug anyway thanks help", "d": "4/2014"}, {"body": "would love feature smarter filtering great use case stefanpenner exactly talking earlier", "d": "4/2014"}, {"body": "cibernox want discuss implementation feel free ping irc emberjsdev although feel comfortable internals happy look pr come", "d": "4/2014"}, {"body": "already looked internals reducecomputed yesterday try write initial implementation weekend ping irc need advice", "d": "4/2014"}, {"body": "closing favor", "d": "4/2014"}, {"body": "seems like emberdata thing", "d": "4/2014"}, {"body": "agree concept", "d": "4/2014"}, {"body": "fyi use emberobject accomplish", "d": "4/2014"}, {"body": "machty good know although sure simpler solution desired longrun", "d": "4/2014"}, {"body": "dunno pretty easy define config obj one place reuse many different routes reopen might preferable expanding api surface dunno shall see", "d": "4/2014"}, {"body": "closing given got workable solution using ember primitives", "d": "4/2014"}, {"body": "looks like dup", "d": "4/2014"}, {"body": "closing favor pr", "d": "4/2014"}, {"body": "closing duplicate", "d": "4/2014"}, {"body": "top file suggest", "d": "4/2014"}, {"body": "assume referring code examples examples written specifically rsvp standpoint trying infer native promise object agree perhaps clarification made examples", "d": "4/2014"}, {"body": "rjackson yea everyone clicking source code first example generated api doc uses thanks", "d": "4/2014"}, {"body": "asaf still referring rsvp promise agree confusing stefanpenner docs actually rsvp docs think reason nt namespaces context nt global thoughts", "d": "4/2014"}, {"body": "wagenet correct add rsvp rsvp though although plan iswas share docs mdn promise section hence leaving ideal solution ember specific blurb top think", "d": "4/2014"}, {"body": "stefanpenner suggest docs generated straight rsvp library", "d": "4/2014"}, {"body": "ya unsure could nt think good solution wrote docs imported", "d": "4/2014"}, {"body": "shallow oneway expected behavior", "d": "4/2014"}, {"body": "makepanic good point though probably document better clarify shallow willing submit doc pr cc stefanpenner", "d": "4/2014"}, {"body": "lots controllers proxies adding delegate reserves yet another word moved away api also nt see improvement existing computed macros alias readonly oneway", "d": "4/2014"}, {"body": "would likely fine party addon designed mixin", "d": "4/2014"}, {"body": "exactly improvement current api syntax sugar avoid repeating many ruby programmer quite used use delegation fact part rails ruby find familiar therefore like nt know deserves builtin core line blurry", "d": "4/2014"}, {"body": "javascript var alias embercomputedalias appdashboardcontroller emberobjectcontrollerextend needs application name alias controllersapplicationname version alias controllersapplicationversion currentpath alias controllersapplicationcurrentpath", "d": "4/2014"}, {"body": "rjackson indeed use", "d": "4/2014"}, {"body": "suggestion would mixin wont conflict proxied values inlcuded multiple times different delegations think inheriting delegates easily addon", "d": "4/2014"}, {"body": "stefanpenner like zzarcon think general consensus cool idea implemented mixin nt need use private internals live iterate faster addon folks use apps closing issue please link project", "d": "4/2014"}, {"body": "stefanpenner rjackson thanks fast feedback thought mixin approach ended internal think common thing continue thinking different way maybe like stefanpenner proposal however library forget put link issue description", "d": "4/2014"}, {"body": "zzarcon actually like much mixin nt clutter much nt mess ember class way extend existing class mixin would attribute maybe would work", "d": "4/2014"}, {"body": "note anyone else eventualbuddha know issue working resolve", "d": "4/2014"}, {"body": "eventualbuddha jayphelps progress like cut today would like include fix release", "d": "4/2014"}, {"body": "eventualbuddha l free today help cc rjackson", "d": "4/2014"}, {"body": "jayphelps rjackson made progress fix nt quite work main commit fix branch fix updated sample app illustrates bug vendor fixed ember version gets stuck redirect loop rootdir rootdir url built version ember vendored app cherrypicking commit onto tag running wedding go today unlikely able finish one want take far run happy pass baton", "d": "4/2014"}, {"body": "eventualbuddha jayphelps chatted issue irc minutes ago thinks way around issue update back things progress", "d": "4/2014"}, {"body": "rjackson ended happening", "d": "4/2014"}, {"body": "eventualbuddha rjackson minutes fix top ready", "d": "4/2014"}, {"body": "rjackson eventualbuddha tested seems good pushed changes morning make sure got latest needing manual merge conflicts", "d": "4/2014"}, {"body": "also created question bug please close accordingly ca nt really find anything related", "d": "4/2014"}, {"body": "machty ping", "d": "4/2014"}, {"body": "regression ie location stuff may address cc rjackson", "d": "4/2014"}, {"body": "aiampogi stefanpenner wagenet machty rjackson everyoneintheworld looked cause privy code path recently sorry long post indeed bug regression related autolocation ie bug stepping code see called click destroyer link contains happens notice published version ember back would update url state null created fix mixonic though appears fixing iframe reasons bug master stable yet code accidentally lost cherrypick conflict merge stable fixed adding missing changes stable brings indeed fixed waiting demos fixed", "d": "4/2014"}, {"body": "jayphelps lt thank tracking confirming fixed stablebetamaster", "d": "4/2014"}, {"body": "thanks jayphelps looking forward", "d": "4/2014"}, {"body": "believe fixed master rjackson think fixed confirm", "d": "4/2014"}, {"body": "canary still exhibits behaviour computed property available bare context ie computedvalue calls computedvalue itemcontroller obviously doenst output anything yeah stefanpenner canary build master", "d": "4/2014"}, {"body": "stefanpenner believe fix referring related still pending final kris guess issue though dig morning confirm", "d": "4/2014"}, {"body": "two cents think jsbin contains mistake last ncomputedvalue computedvalue next object understand correcly refer external controller index controller seems good use case access itemcontroller", "d": "4/2014"}, {"body": "expected controller proxied passed object like objectcontroller model route case computedvalue available ncomputedvalue", "d": "4/2014"}, {"body": "rjackson get dig", "d": "4/2014"}, {"body": "looks like merged jsbin still nt working guessing nt fix also confirm seen issue number times apps", "d": "4/2014"}, {"body": "leepfrog nt callback function resource add empty function create route automatically", "d": "4/2014"}, {"body": "comment nt need create postindexroute documentation presented incorrect updated", "d": "4/2014"}, {"body": "docs look fine specifically see issue screenshot would help", "d": "4/2014"}, {"body": "oh gah eyes see index appears children routes underneath correct", "d": "4/2014"}, {"body": "yes even nt children callback function get index route", "d": "4/2014"}, {"body": "ok clearly issue close thanks", "d": "4/2014"}, {"body": "machty ping", "d": "4/2014"}, {"body": "tusharmaini could please get code working jsbin demonstrates issue", "d": "4/2014"}, {"body": "machty requested jsbin demo check console log time tranistion brother route sister route parent route redirect hook triggered mentioned nt case ember lt", "d": "4/2014"}, {"body": "confirm think surprised people nt reported", "d": "4/2014"}, {"body": "candidate stack overflow bug ember please open issue stack overflow link close issue", "d": "4/2014"}, {"body": "futur users", "d": "4/2014"}, {"body": "cedriclombardot thanks", "d": "4/2014"}, {"body": "fyi found error put bad settimeout instead using emberrunlater", "d": "4/2014"}, {"body": "made work defining route explicitly setting use template javascript approutermap function thisroute applicationloading appapplicationloadingroute emberrouteextend rendertemplate function thisrender loading reason though would appreciate feedback author machty", "d": "4/2014"}, {"body": "ok bit confused thought routetemplate since mentioned docs see separate route application load useful", "d": "4/2014"}, {"body": "reading source think found workaround case though means ever update emberdata one pushing data", "d": "4/2014"}, {"body": "hjdivad ping", "d": "4/2014"}, {"body": "searls meant link something perhaps jsbin still exhibit failing behaviour getting following console", "d": "4/2014"}, {"body": "sorry totally lost bin apparently see approach dk property apparently processed last whole summary displays correctly compare one dk computed array updated", "d": "4/2014"}, {"body": "declared content never deserialized data object", "d": "4/2014"}, {"body": "ah believe issue persist afk wed apr pm martin mu\u00f1oz notifications githubcom wrote declared content never deserialized data object reply email directly view github", "d": "4/2014"}, {"body": "nevermind right reason app nt work jsbin reproduce issue thought closing get reproduce whatever happening app thank", "d": "4/2014"}, {"body": "well took quite bit complexity accurately model real application issue appears related handlebars binding aggressively updating arraycomputed payload pushed requires method called instance hydrated layman theory anyhow new jsbin cc jasonkarns", "d": "4/2014"}, {"body": "first glance looks like getting call called creates empty record calling actually load", "d": "4/2014"}, {"body": "right arraycomputed listen property changes object worked around using instead dependent key", "d": "4/2014"}, {"body": "hey mmun able get workaround mostly work case side effect calling twice item means store item instancemeta say actually pointing instead previous item considered kosher additem called twice item", "d": "4/2014"}, {"body": "searls yes additem called every time property changes case added undefined second time ember data calls setupdata reducecomputed concept updating changing property changes object removed readded ie fire removeditem addeditem hooks", "d": "4/2014"}, {"body": "hmm okay clear would case dk messages right original problem arraycomputed fired setupdata wed apr pm martin mu\u00f1oz notifications githubcom wrote searls yes additem called every time property changes case added undefined second time ember data calls setupdata reply email directly view github", "d": "4/2014"}, {"body": "searls right original problem new record added record array setupdata called seems like something could changed ember data may reasons current order", "d": "4/2014"}, {"body": "current behavior obviously desirable exact case cc ask intentionality emberdata wed apr pm martin mu\u00f1oz notifications githubcom wrote searls right original problem new record added record array setupdata called seems like something could changed ember data may reasons current order reply email directly view github", "d": "4/2014"}, {"body": "think behavior side effect implementation prepromisified version emberdata object eagercreated isloading state detected issue begins hint upon resolve record updated via pointed look implementation notice wearing two hats first glance seems like could remove upsert behavior turns methods relying like make go friday curious ifhow step branch anyone insight", "d": "4/2014"}, {"body": "nt problem stack overflow problem framework specifically point say illustration jsbin pastiebin maybe ember source code issue tracker nt appropriate place", "d": "4/2014"}, {"body": "thank yes created one issue ticket stack overflow well", "d": "4/2014"}, {"body": "closing favor post", "d": "4/2014"}, {"body": "think elementid set ember guid nt set trying think need say thisget element want get element computed property get element coffeescript", "d": "4/2014"}, {"body": "ah green showing thanks", "d": "4/2014"}, {"body": "pleasure glad", "d": "4/2014"}, {"body": "fact think check object existence content array nt see scenario would call addobject arraycontroller itemcontroller instance created arraycontroller", "d": "4/2014"}, {"body": "denisnazarov agree bitten past well would care take crack pr", "d": "4/2014"}, {"body": "rjackson sure time later week", "d": "4/2014"}, {"body": "denisnazarov thank pr would wonderful closing favor pr time", "d": "4/2014"}, {"body": "note problem", "d": "4/2014"}, {"body": "see", "d": "4/2014"}, {"body": "simple fix line emberjs change pull requesting ruby working well mac sure breaking something else changing still love ember though", "d": "4/2014"}, {"body": "think khis kind question better fit stackoverflow instead monkey patching embertextsupport simply reopen embertextarea class like maybe also ways want nt think issue anyway", "d": "4/2014"}, {"body": "thanks edit said think issue needed improvement", "d": "4/2014"}, {"body": "benjaminn unsure make change default internally definitely obvious get behavior could submit pr clearly document done", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "yea could something like", "d": "4/2014"}, {"body": "wow two great answers thanks helping mmun alexdiliberto", "d": "4/2014"}, {"body": "whoa", "d": "4/2014"}, {"body": "stuck meetings right ca nt confirm clicking links mobile leads believe bugfixes unit tests nt get cut maybe though obviously hash worked even borked dunno maybe partial merge", "d": "4/2014"}, {"body": "dig tonight jayphelps likely correct could related bad merge missed commit refactoring late series", "d": "4/2014"}, {"body": "jayphelps rjackson looks case looking release build nt see latest updates noticing nuances autolocation probably related could otherwise fine latest", "d": "4/2014"}, {"body": "irony true code missed contained unit tests catch", "d": "4/2014"}, {"body": "rjackson tl dr shit indeed broke need get release asap quickly write bugfix path nt remove hash method truly hope former considering test coverage fixes tell moar tell situation includes autolocationrelated prs original docs bugfix security bugfix missing pr heavily refactors things support full unit test coverage time fixing several bugs found writing tests merged master indirectly rjackson prolly hard track backwards pr onto issue described able reproduce well custom build using production claims really nt canary diff two able easily see causing issue whatever reason wrote started chopping hash nt equal expected value even though outcome example sort check obviously note doubled slash since cut previously missing pr fact fix issue test coverage path", "d": "4/2014"}, {"body": "jayphelps thanks taking look seems pretty critical think pulled rather patching found little things wrong cancelrouter stuff working correctly even history browsers", "d": "4/2014"}, {"body": "tried running autolocationrelated issues go away", "d": "4/2014"}, {"body": "btw anyone reading sorry pushing bad code weary", "d": "4/2014"}, {"body": "jayphelps still lt", "d": "4/2014"}, {"body": "agreed working pull release branch unsure make yet review rest core", "d": "4/2014"}, {"body": "rjackson cool might good idea someone audit make sure trading one bug others etc would shame release whatevs say hey fixed oh shit kidding", "d": "4/2014"}, {"body": "jayphelps looks good original issue actually issue far", "d": "4/2014"}, {"body": "found little things wrong cancelrouter stuff working correctly even history browsers ignore", "d": "4/2014"}, {"body": "jayphelps yea sorry fine observation", "d": "4/2014"}, {"body": "discussed core team meeting missing commit pulled stable branch releasing", "d": "4/2014"}, {"body": "rjackson", "d": "4/2014"}, {"body": "beers", "d": "4/2014"}, {"body": "awesome begone custom fork mine fri apr pm garth poitras notifications githubcom wrote beers reply email directly view github", "d": "4/2014"}, {"body": "rjackson wonder consider including fix related bug quite", "d": "4/2014"}, {"body": "eventualbuddha patch safe thoroughly tested happen otherwise wil need wait", "d": "4/2014"}, {"body": "eventualbuddha would definitely prefer fix long fix easy reason tested seems good chat irc closing issue since offending commit merged release channel cut next couple days", "d": "4/2014"}, {"body": "rjackson latest thinking cut", "d": "4/2014"}, {"body": "nothing comes mind provide reproducible steps please", "d": "4/2014"}, {"body": "aware changes caused breakage terencerocks need jsbin failing test demonstrating issue fully understand reporting", "d": "4/2014"}, {"body": "figured bug least anything directly related resolver close issue sorry confusion posterity using custom resolver tripped recent change called basically calling common helper function took applicable super function argument ember implementation seem allow us pass way simply use code inside method works", "d": "4/2014"}, {"body": "recently tried document wildcardglobbing route perhaps enough understand works globbing path one dynamic segment replace entire url tried work around jsbin excepting third case think works cc machty", "d": "4/2014"}, {"body": "thanks taking look working documentation immediate case happy enough passing string long term think way pass list models glob default method serializing url segment example route resolved reasonable default would would make consistent singular route segments", "d": "4/2014"}, {"body": "blayto believe already done via route serialize hook", "d": "4/2014"}, {"body": "closing think bug would definitely welcome documentation updates area", "d": "4/2014"}, {"body": "rjackson trying make argument default serialize hook behavior route globs sorry nt clear", "d": "4/2014"}, {"body": "blatyo worries nt understand point issue also pretty simple implement manually think common enough case merit embedding default route hook perhaps addon make simple including mixin would useful others help make case common enough include", "d": "4/2014"}, {"body": "mfeckie solution seems good would mind submitting pr would need prefix", "d": "4/2014"}, {"body": "pr solution looks good", "d": "4/2014"}, {"body": "thanks rjackson amp stefanpenner submit pr soon", "d": "4/2014"}, {"body": "ran issue ggohierroy come workaround seems like change default param instead fixes formatting handle server side kind hacky", "d": "4/2014"}, {"body": "provide jsbin demonstrating issue", "d": "4/2014"}, {"body": "try give minutes found one calls error originates within emberrun sequence could problem", "d": "4/2014"}, {"body": "seems work though clue current application code fails nextsuper problem nt pre releases", "d": "4/2014"}, {"body": "implementation changed unfortunately new implementation function expected async scenarios see following issues bit detail michaelvdheeren confirm issues", "d": "4/2014"}, {"body": "could cause first function mentioned pushpayload triggered async using sse please one related sortfunction within sortable mixin one within arrangeable mixin could easily adapt question remains solved", "d": "4/2014"}, {"body": "debugging seems like enter foreach loop within orderby function sortablemixin undefined hence code fails thisnextsuper", "d": "4/2014"}, {"body": "michaelvdheeren info reproduce jsbin", "d": "4/2014"}, {"body": "test written correct happened create new arrangeable mixin using arrayproxycreatemixin sortablemixin used arrangeable mixin arraycontroller", "d": "4/2014"}, {"body": "michaelvdheeren yeah first issue nt understand tests still pass definitely seems like broke somehow hum see app seems work refers window beta undefined maybe also broken something", "d": "4/2014"}, {"body": "rjackson ping", "d": "4/2014"}, {"body": "michaelvdheeren fixed", "d": "4/2014"}, {"body": "additionally sure appropriate switch assert false", "d": "4/2014"}, {"body": "addresses", "d": "4/2014"}, {"body": "closing favor", "d": "4/2014"}, {"body": "thinking something like optionsboundproperty actionname resolveparams optionsparameterscontext actionnameorpath types id data optionsparametersoptionsdata instead optionsboundproperty actionname handlebarsget target actionnameorpath optionsoptions need check additional use cases checked params without params bound seems fine far keep investigating", "d": "4/2014"}, {"body": "changed target current context merged master beta branch", "d": "4/2014"}, {"body": "rjackson works property exists current context aka would still break used would get context", "d": "4/2014"}, {"body": "great point thanks pr", "d": "4/2014"}, {"body": "nt mix instead htmlbars flexibility also warn sensible way handlebars nt enough awareness html", "d": "4/2014"}, {"body": "stefanpenner thanks explanation curious maybe better make change docs warning behavior could second example harmless could expectable first one wasted lot time thought something wrong controller property binding htmlbars around corner need bother", "d": "4/2014"}, {"body": "yeah needs big red show magic pretty button similar rails routes rake task better ie magically connected created objects rails needs tbh magic one things stops people jumping gap total beginner intermediate advanced", "d": "4/2014"}, {"body": "ya tried ember debugger browser plugin thu apr pm julianleviston notifications githubcomwrote image yeah needs big red show magic pretty button similar rails routes rake task better ie magically connected created objects rails needs tbh magic one things stops people jumping gap total beginner intermediate advanced reply email directly view github", "d": "4/2014"}, {"body": "ulisesrmzroche link chrome extension yes tried show assumed names controllers", "d": "4/2014"}, {"body": "see console controller last item list defined notice line generic objectcontroller associated hints controller name would ordershipmentscontroller", "d": "4/2014"}, {"body": "resolver names correctly though wonder bug chrome extension like defining routescontrollersviewsetc nt seen thu apr pm ryan bigg notifications githubcom wrote see console controller last item list defined notice line generic objectcontroller associated hints controller name would ordershipmentscontroller reply email directly view github", "d": "4/2014"}, {"body": "implemented", "d": "4/2014"}, {"body": "think emberinspector updated use resolvers function feasible agree definitely simpler find", "d": "4/2014"}, {"body": "yeah would nicer way open issue one done yet fri apr robert jackson notifications githubcomwrote think emberinspector updated use resolvers lookupdescription function feasible agree definitely simpler find reply email directly view github", "d": "4/2014"}, {"body": "thank much rjackson ulisesrmzroche", "d": "4/2014"}, {"body": "rjackson tackling", "d": "4/2014"}, {"body": "yep", "d": "4/2014"}, {"body": "found issue safari must referred fully closing ticket leaving future reference appreciate guidance difference browsers", "d": "4/2014"}, {"body": "tboyko browser using ember use emberrsvppromise promise works correctly ember runloop addition currently also much faster work correctly way back", "d": "4/2014"}, {"body": "gotcha thanks great talk emberconf btw", "d": "4/2014"}, {"body": "tboyko thanks", "d": "4/2014"}, {"body": "rlopes could link documentation referring referenced several places know none incredible job explaining require server serve ember app available routesbut particularly interested reading nt miss spot reference mdn nt seem mention eitherit difficult concept fully explain cause requires understanding sort hack http protocol uris explain person numerous times ultimately ended confusing people maybe provide common support examples like wildcard rewrite rule rails wildcard route etc would give people aha moment", "d": "4/2014"}, {"body": "thanks btw letting us know nt clear dancers", "d": "4/2014"}, {"body": "back case looked guide first looked router yes believe nt get straight first time besides lacking brain cells lack references even around time big plus ember cover details topic lacks details elsewhere thanks", "d": "4/2014"}, {"body": "would really helpful documentation common servers like apache iis etc", "d": "4/2014"}, {"body": "leave ember app navigating external site current state lost navigating back via browsers back button ember application starting scratch exactly initial load fundamental way browsers work bug ember", "d": "4/2014"}, {"body": "know case refresh button sure case back button tried following turn browser caching navigate parent route application see ember requesting data server side load hasmany records call expected navigate back forth parent route children routes without seeing ember request additional data navigate external site eg wwwgooglecom hit back button ember still able display everything correctly without going back server data based comment since browser nt caching data seeing request ember server data hit back button nt see request server side ember seems retained data somehow actually filed issue based observation", "d": "4/2014"}, {"body": "digging probz seems lie lines added commit cc stefanpenner", "d": "4/2014"}, {"body": "kategengler workaround try setting property explicitly controller updated jsbin", "d": "4/2014"}, {"body": "selvagsz thanks finding one add set test suite change conditional falsy", "d": "4/2014"}, {"body": "selvagsz thank looking finding workaround", "d": "4/2014"}, {"body": "closing issue favor seems like correct fix", "d": "4/2014"}, {"body": "rlopes understand problem correctly server must provide support handle possible url reloads direct navigation attempts", "d": "4/2014"}, {"body": "well moment running dev server provided grunt task nt understand difference behaviour capabilities hash location auto location still need test history location might limitation", "d": "4/2014"}, {"body": "idea behind location use location type client browser supports fall back location via browser sniffingdetection basically ensure server supports location setup application generally means wildcard route setup utilize use possible still support older browsers", "d": "4/2014"}, {"body": "yes get picture complete understanding could describe needed server side support history impression browser thing", "d": "4/2014"}, {"body": "using history first navigate wwwexamplecomlogin server try service request ember app chance get action need serve indexhtml whatever ember app bootstrapped every appropriate request served indexhtml ember router navigate login nt issue hash location since wwwexamplecom login handled server request indexhtml grunt task since grunt task using express app covers add wildcard handler serve indexhtml something like tasksexpressserverjs appget function req res resredirect distindexhtml think work april richard lopes notifications githubcom wrote yes get picture complete understanding could describe needed server side support history impression browser thing reply email directly view github", "d": "4/2014"}, {"body": "seems like documentation issue describe detail place nt already", "d": "4/2014"}, {"body": "finally get dumb thanks lot answers documentation love history option would welcome indeed however probably close issue time", "d": "4/2014"}, {"body": "rlopes want open new ticket improved documentation", "d": "4/2014"}, {"body": "may yes think benefit people getting started", "d": "4/2014"}, {"body": "digging real clear intended behavior actually used within ember docs vague usages could find wild looking code seems perhaps intention retroactively mixin things object eg swear though old docs mentioned using way instantiate mixins intention using wrong happy close otherwise leave open resolution", "d": "4/2014"}, {"body": "embermixin applies mixins embermixincreate way create mixin", "d": "4/2014"}, {"body": "yea swear old old old old docs website single page made mention using create mixins worked perhaps documentation actually would good idea", "d": "4/2014"}, {"body": "seems like helper somehow override view keyword think wrongly refers linkto view maybe linkto helper propagate correctly view keyword inside nested helpers workaround using ugly see debugging appears helper rendered emberhandlebarsboundview keywords cloned view keyword always overriden related concreteview linkview case see sure fix could maybe override view keyword already exists perhaps linkview beeing concrete view underlying issue cc stefanpenner", "d": "4/2014"}, {"body": "closing issue since looks like pr cover", "d": "4/2014"}, {"body": "ninjatronic excuse knowing already trying", "d": "4/2014"}, {"body": "want user able edit object since cope objects controller provides array keyvalue pairs used keyvaluepair added deleted array change detected computed property setter called however existing keyvalue pair edited example changing value header change detected computed property setter called trying detect change reflected object make sense", "d": "4/2014"}, {"body": "ninjatronic think sort question best asked stackoverflow thanks", "d": "4/2014"}, {"body": "think scenario keyword itemcontroller specified ever worked properly definitely right submitted resolve issue", "d": "4/2014"}, {"body": "aw crap probably breaking change lot people yes even though bug fix", "d": "4/2014"}, {"body": "ya may doit across releases warnsdeprecates thats possible", "d": "4/2014"}, {"body": "prior implementation meant context always changed content item controller even keyword case plain wrong honestly unsure often keyword used together need much possible ensure least impact folks think way deprecate number different code paths identifying exact scenario nontrivial", "d": "4/2014"}, {"body": "rjackson depends one looks one way looking specifying itemcontroller actually replaces outer controller another way looking itemcontroller behaves decorator outer controller documentation would really welcome discussion kind uncovers bit ember way actions events property req bubble template views controllers right route would possible multiple encapsulated controllers feels bit like sorts issues part makes things difficult grok beginning words clearly explained overall approach would solve problem obvious seems ember project nt described simple single overall approach yet similar nt kill matz pols principle least surprise really ie router controller views template unless itemcontrollers components partials multiple views render etc components really answer particular question though one wants replace context use component isolatespartitions context otherwise one interested maintaining context therefore decorator pattern good", "d": "4/2014"}, {"body": "think anyone could successfully argue current implementation correct scenario make sense completely clobber context using keywords originally felt specified itemcontroller would wrap outercontext context template essentially buffer two likely infer arguments earlier stefanpenner made clear context inside template untouched using keyword scenario", "d": "4/2014"}, {"body": "closing favor pr", "d": "4/2014"}, {"body": "seem problem function within arrangeable mixin created happens sortfunction called code sort function moment equal embercompare orderby function var result sortproperties get sortproperties sortascending get sortascending sortfunction get sortfunction", "d": "4/2014"}, {"body": "wycats maybe revert new super go back requirement use super mixin ensure mix super nt know state worse cc mixonic", "d": "4/2014"}, {"body": "krisselden inadvertently introduced regression say go back old behavior ship new evaluate semver", "d": "4/2014"}, {"body": "first let make clear agree reverting likely right choice said reverting complicated potentially error prone worried reverting change weeks point could potentially cause issues would nt benefit week cycle folks reviewing", "d": "4/2014"}, {"body": "rjackson agree wycats inclined revert mixin behavior super vexing hard debug lived longer ie think users depending calling super async people need apply mixin function sometimes overrides sometimes nt workaround need apply mixin provides base want apply mixin calling super", "d": "4/2014"}, {"body": "krisselden agree concern ensuring resulting point release likely stable without longer vetting process standard release cycle provides", "d": "4/2014"}, {"body": "reason inclined linked super approach trolled hard exception throwing old super reset code pointless since nt actually work use super unwrapped function", "d": "4/2014"}, {"body": "original bugfix", "d": "4/2014"}, {"body": "bit braindump plans firstly nt think number people bit asyncsuper broken large number worried think number somewhere around people reporting problem via github ticket plus krisselden ebryn whatever worth original issue single reporter seem like clear path behaves way might expect coming classbased oo languages current implementation suffers two faults state super next stored context object means bad things async usage function nt test worked yet raised exception inside function called via super could leave object state bad way future calls first item think stuck acceptable second may able improve would like keep current implementation broken async violation semver users dubious things inheritance chain look exception issue might improved ideas like explore document limitations current solution workarounds limitations docs code blog posts start discussing future super solution avoids mess time go might something could implement allow live alongside deprecated path krisselden ideas api probably simple discussion build step could maybe help consistency asyncsync usage simple understandable implementation unlittered stack traces would tradeoff less magical api feedback", "d": "4/2014"}, {"body": "question calling super mixin could mixed something method fixed prior infinite loop calling super function async seems incredibly hacky common also recovers better thrown exception old method issue called thissuper try catch around invoking another method changed thissuper workaround setting var super thissuper calling trycatch happens super state throw exception method calls super", "d": "4/2014"}, {"body": "would think best place put kind discussion would item controllers discussed maaaaaybe array proxies discussed tbh nt know array proxies discussed directly guides api docs", "d": "4/2014"}, {"body": "updated jsbin references ember bug still persists looks like indexing gone whack internal array", "d": "4/2014"}, {"body": "looking problem actually nothing stated earlier looking problem jsbin completing steps click companies check checkbox component first first item acme ltd click delete main view click box sidebar remaining item found handler invoked stepping code point executed checkbox clicked look see tracking array arrayoperation count items undefined type arrayoperation count items array type r leads called index wrong couple things appear wrong nt think tracked array deleted operation means called also wrong thoughts", "d": "4/2014"}, {"body": "hjdivad created failing test trying track code nt think code cleared correctly isdestroyed flag set true setuppropertyobservers function dependentkey itempropertykeys var dependentarray get thisinstancemetacontext dependentkey length get dependentarray length observercontexts new array length observer fires delete operation index deleted object change property object deleted stop using filterby real world project revert something else bug would great get cleared show stopper", "d": "4/2014"}, {"body": "simplified jsbin illustrates issue", "d": "4/2014"}, {"body": "confirm repro failing test case looks good take look see easy fix call hjdivad backup ca nt trace", "d": "4/2014"}, {"body": "nathanhammond look previous comment think tracked happening sure happening", "d": "4/2014"}, {"body": "yep ton useful information anything discover likely virtue fresh pair eyes", "d": "4/2014"}, {"body": "thanks nathanhammond mmun patience investigating problem meant avoid pointlessly walking retain n case however incorrectly considers delete retain nm case retain n bc first operation applied second operation become retain n fix pass operation index check first ie index operation writing test cover also wishing ember broccoli nom nom", "d": "4/2014"}, {"body": "hjdivad thank looking hopefully fixing also complete broccoli conversion tests passing ancillary build things still need done progress", "d": "4/2014"}, {"body": "hjdivad good stuff rjackson could get code think something broken surprised one else flagged", "d": "4/2014"}, {"body": "leave agenda core team meeting friday initial thought would pull stable branch generate new build unsure cut release", "d": "4/2014"}, {"body": "rjackson let know retag", "d": "4/2014"}, {"body": "hjdivad please even nt cut get stable branch imho", "d": "4/2014"}, {"body": "rjackson done", "d": "4/2014"}, {"body": "mmun nathanhammond others curious", "d": "4/2014"}, {"body": "nt need another expertsexchange hands", "d": "4/2014"}, {"body": "could someone point right direction within ember codebase making feature addition", "d": "4/2014"}, {"body": "good point think issue actual url change since canonical url globs", "d": "4/2014"}, {"body": "makes sense think trying change url route name could good enough actually behavior see use case handling unknown url", "d": "4/2014"}, {"body": "might work however think robust solution would somehow allow glob route canonical url might overcomplicating things love hear machty thinks also rjackson maybe discuss core team meeting", "d": "4/2014"}, {"body": "ah actually possible transition globbing route like target route dynamic segment need provide object param case string path want use globbed segment leaving open though code clearly going bizarro path rather giving useful error message nt provide error message actually makes think related presentday limitation handlebars fixed htmlbars ready described gon na spend little time see clean way detect scenario provide better message", "d": "4/2014"}, {"body": "yeah definitely going code path get error message providing enough context objects would alerted everyone thread passing path ca nt presentday handlebars put error check many unavoidable gotchas particularly pertaining linkto involving inner helpers firing even though parent helpers invalidated eg parent block turned false furthermore looks like zero docs created issue website", "d": "4/2014"}, {"body": "machty thanks lot investigation think dynamic segment thing write least starting point doc evening", "d": "4/2014"}, {"body": "closing definitely reopen details", "d": "4/2014"}, {"body": "closing favor pr", "d": "4/2014"}, {"body": "jefflage supports exactly deprecated original strategy longer valid taken bit longer ought tl dr rewritten use think depends supporting sort function property", "d": "4/2014"}, {"body": "jefflage please let know misunderstood actually solve needs", "d": "4/2014"}, {"body": "think understood using embertable adepar first glance seems may fairly tightly coupled sortable mixin actually tried decouple yet ill let know thanks jeffrey lage hart st beverly farms email jefflage mecom iphone apr david j hamilton notifications githubcom wrote jefflage please let know misunderstood emcomputedsort actually solve needs reply email directly view github", "d": "4/2014"}, {"body": "bug confirmed exist greatly simplified reduction appears issue unloading previous route cleanup ember loses track object might related believe krisselden right person look", "d": "4/2014"}, {"body": "nathanhammond likely machty question", "d": "4/2014"}, {"body": "closing discussion pr", "d": "4/2014"}, {"body": "orospakr try array", "d": "4/2014"}, {"body": "annoying sounds like obscure browser bug", "d": "4/2014"}, {"body": "wagenet agreed", "d": "4/2014"}, {"body": "aehrjames version ios tried exact version ios devices", "d": "4/2014"}, {"body": "sorry wrong issue exactly sure pretty sure latest update boss reported showed replicate probably big help huh", "d": "4/2014"}, {"body": "aehrjames additional information give us would definitely helpful", "d": "4/2014"}, {"body": "see fixed backburner included next ember release", "d": "4/2014"}, {"body": "believe labeled bugfix beta", "d": "4/2014"}, {"body": "thanks", "d": "4/2014"}, {"body": "upgraded ember app release experiencing exact behavior route returns promise loading route never shown breaking change app resulting route appears load promise resolves js bin demonstrates loading route showing edit better js bin", "d": "4/2014"}, {"body": "cc nathanhammond rjackson stefanpenner", "d": "4/2014"}, {"body": "mutewinter loading route name provided seems incorrect loading substates always going siblings parents route actually slowly loading need name loading lightly modified jsbin seems work correctly", "d": "4/2014"}, {"body": "must bug canary release app running tophat machty", "d": "4/2014"}, {"body": "additional semirelated information tripped nt know made ember yet", "d": "4/2014"}, {"body": "bitten case error redirect causes transitionaborted redirect happens even flashes screen briefly transition error route anyway", "d": "4/2014"}, {"body": "bisected bug introduced machty query params rewrite nt narrow much pretty big patch", "d": "4/2014"}, {"body": "jsbin example wonder seeing related issue basically query parameter default value first time model hook gets called application starts value parameter parameter value want use parameter query server means value query click nextpage button transition time change query parameter time query parameter string value kind weird case would still want value easily verifiy parameter value query finally click button transition time setting value query parameter whatever value value null use value construct query string query", "d": "4/2014"}, {"body": "raytiley wrote note", "d": "4/2014"}, {"body": "set qp explicitly cast string model hook nt seem right since represent value individual want null string create based value otherwise want pass qps values", "d": "4/2014"}, {"body": "leaving open remember still try get backburner upgrade", "d": "4/2014"}, {"body": "closing favor mixonic pr", "d": "4/2014"}, {"body": "closed favor", "d": "4/2014"}, {"body": "machty something else alley", "d": "4/2014"}, {"body": "record seeing also firefox", "d": "4/2014"}, {"body": "stefanpenner thoughts", "d": "4/2014"}, {"body": "could related least class problem", "d": "4/2014"}, {"body": "machty work", "d": "4/2014"}, {"body": "nixme seems specifically tested could identify lacking test case failing could assemble jsbin demonstrate issue", "d": "4/2014"}, {"body": "closing reproduced jsbin", "d": "4/2014"}, {"body": "told observer watch object nt change therefore observer never fires changing observer makes everything work aside find using lot observers probably making things difficult necessary ember would typically want handle things like properties smile wagenet issue closed", "d": "4/2014"}, {"body": "create jsbinjsfiddle", "d": "4/2014"}, {"body": "ilovett works based closely describe issue also works view direct descendant view reproduce base test case wish glad take look otherwise vote close without working reduction cc wagenet", "d": "4/2014"}, {"body": "would call expected behavior route fires loading route pivot route virtue resource route exists used whether anything userprovided present easily demonstrated multiple peer routes zoo nt bug feature smile seriously old loading route story machty fixed unfortunate though look like emulate using method described guides machty wagenet rjackson nominate closing", "d": "4/2014"}, {"body": "loading substates pivot route transition nt get entered mentioned trying want substate possibly addition toplevel substate", "d": "4/2014"}, {"body": "would get eyes discussemberjscom nonsensery would mind starting thread reopen open new issue something actionable", "d": "4/2014"}, {"body": "yeah sounds like great idea", "d": "4/2014"}, {"body": "matchy got thoughts together posted discussion topic thanks giving reason finally sit think things", "d": "4/2014"}, {"body": "confirm difference behavior exists whether classified bug entirely different story matter opinion smile happening becomes quite clear js bin default browser form behavior pressing enter inside submits form internet explorer guessing since nt create form element guess triggering click whichever button first included dom example wrapped section element also gets interesting behavior chrome double events action handled enter form submission ie form submission button events fire generally would rely ie behavior would try override enter handling input text seems brittle nevertheless difference functionality probably deal interestingly might considered jquery bug opposed ember bug without tracing wagenet optional close probably get seconds thought core team meeting going address itpunt somebody else", "d": "4/2014"}, {"body": "rjackson ping", "d": "4/2014"}, {"body": "sorry long delay time go absolutely correct mutable enumerable tests run thank pointing fixed master beta channels dentuzhik double check fix indeed work submit pr changes review detail", "d": "4/2014"}, {"body": "rjackson thanks try submit pr resolving issue asap", "d": "4/2014"}, {"body": "awesome thank sorry delay", "d": "4/2014"}, {"body": "rjackson issues seems fixed last commit still nt know handle failing tests without enabled prototype extensions removed usage newobject method acts like wrapper prevents failing without prototype extensions used test case nt fail used tests fail reason also fail disabled prototype extensions since native array nt method needs resolved somehow ideas", "d": "4/2014"}, {"body": "create pr issue tests resolved", "d": "4/2014"}, {"body": "believe another ticket dealing issue", "d": "4/2014"}, {"body": "closing favor fixing pr", "d": "4/2014"}, {"body": "related", "d": "4/2014"}, {"body": "difference property interchangeable tell code quoted gordonkristan see jquery blog post details implemented jquery expected behavior nominating closing cc wagenet", "d": "4/2014"}, {"body": "stevekinney depends trying trying array accessed across instances put call extend ie defining class prototype want accessible particular instance pass template using component could well deal documentation around constant source pain beginning programmers js ember nt seem see difference defining class something creating object thus myobj emberobjectextend sharedarray var myobjcreate var b myobjcreate aget sharedarray unshift hi aget sharedarray gt hi bget sharedarray gt hi ie array exact object effectively created class variable called sharedarray variable shared prototype problem javascript makes super easy thing people nt usually create class variable makes trickier thing people quite often make new instance class gets unique array set copy data like contrast prior example following myobj emberobjectextend nonsharedarray null init function thissuper thisset nonsharedarray var myobjcreate var b myobjcreate aget nonsharedarray unshift hi aget nonsharedarray gt hi bget nonsharedarray gt case people would expect happen ie time create object set instance variable new fresh copy default value works init function nt get evaluated class creation time evaluated instance creation time therefore array instance exists inside body init function nt actually exist actually created afresh every single time init function called averse previous example class creation created one across instances think common use case perhaps worth adding feature ember provide easy walk door speak new users also ease veteran js programmers needless repetition perhaps something like object set prototype called instanceproperties without given much thought set ember go create new objects objects using prototypes nt know still think worth discussing tho nt want change javascript ordinary behaviour language works want make easier things time hopefully", "d": "4/2014"}, {"body": "makes ton sense helps clear things setting array method makes sense recall correctly backbone similar javascript thing think na\u00efvely thought maybe using would avoid problem upon reflection reason would ended creating arrays controller passing components arguments probably better approach needed communicate contents array back controller anyway perfect world wish way pull without call got weird feel end world edit hit reply wrong email wrote something nonsensical", "d": "4/2014"}, {"body": "stevekinney sorry nt follow", "d": "4/2014"}, {"body": "julianleviston sorry toddler trying help use gmail shortcuts ended replying wrong email super embarrassing updated comment something ontopic sensical posterity", "d": "4/2014"}, {"body": "stevekinney want avoid calling super possibility rely init event clear beahave appmyobj emberobjectextend myarray null init function thissuper thisset myarray appmyobj emberobjectextend myarray null myfunctiononinit function thisset myarray init", "d": "4/2014"}, {"body": "timevans able provide reduced test case", "d": "4/2014"}, {"body": "wagenet seems cause affect thing using ember data reducecomputed property set model save properties model marked dirty may changed sees property changed flushes changes rerenders view seems bugs either implementation side effect work causes issue tldr could nt provide reduced test case", "d": "4/2014"}, {"body": "still seems like bug item array probably nt removed middle", "d": "4/2014"}, {"body": "hjdivad thoughts", "d": "4/2014"}, {"body": "wagenet problem exactly timevans described issue twofold emberdata invalidates dependency attributes although observers triggered properties set existing values triggered dependencies chains changed even nt result changes actual value fixing doable think stefanpenner iirc talked attribute depend rather calling something vaguely like fixing probably good idea bit work could make ignore values previous values worry semantics diverging much regular cps interim solution could something bit hacky removing items whose values changed depending upstream implementation knowing ignore exactly one additional insertion seems like reasonable localised workaround wagenet stefanpenner think", "d": "4/2014"}, {"body": "think related issue occurs depends model state changes dirty change also triggered causes filter recomputed viewelements redrawn ie someone types something input field immediately loses focus stepbystep explanation issue", "d": "4/2014"}, {"body": "fraserkillip verify still happens latest release also jsbin jsfiddle would great", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "mspoerer seems fixed latest builds fiddle working fiddle", "d": "4/2014"}, {"body": "selvagsz thank confirming", "d": "4/2014"}, {"body": "ping", "d": "4/2014"}, {"body": "recreate problem upgrading close still similar problem", "d": "4/2014"}, {"body": "rjackson status", "d": "4/2014"}, {"body": "definitely major goal need wait module layout refactored build system updated gon na keep open loose track blocked moment things", "d": "4/2014"}, {"body": "machty ping", "d": "4/2014"}, {"body": "tomclose still issue really hard time following example seems like actually end would expect thing seems bug way application controller computed issue nt see anything actually broken behavior clarify", "d": "4/2014"}, {"body": "still issue end checkout path forgotten id order reproduce navigate click checkout note link click login redirected checkout url order id lost url redirected ago since looked think time decided trying transition instead actual transition wanted", "d": "4/2014"}, {"body": "got working bout push fix", "d": "4/2014"}, {"body": "closing dup", "d": "4/2014"}, {"body": "krisselden ping", "d": "4/2014"}, {"body": "matter reversing alias making controllers use instead since cps work consumption content proxies consume model users set controllers anyone review", "d": "4/2014"}, {"body": "closing favor pr", "d": "4/2014"}, {"body": "machty ebryn status", "d": "4/2014"}, {"body": "nt builtin solution works pretty well implemented ghost admin rewrite theory active checking stuff could moved mixin allow easier usage custom components views handlebars helpers etc", "d": "4/2014"}, {"body": "rjackson really like neat little trick create binding property component linkview reads nicely handlebars still feels like hack need reopen add component add active class seems bit heavy noticed solution accepts dependent keys optional first parameters currently documented intentional add pull request", "d": "4/2014"}, {"body": "manuelmitasch agree difficult needs illustration could nt completely suck prefer reopen think presence custom component issue though example duplicate route args helper well linkto would use went custom component route name args needed template exactly components great two specific pr mind extract active logic mixin easy use component directly without reopening allowing use specify custom view class linkto helper would allow us implement custom linkview special logic", "d": "4/2014"}, {"body": "htmlbars subexpressions make piece cake", "d": "4/2014"}, {"body": "see also", "d": "4/2014"}, {"body": "issue component targetobject childroute whereby alternate childroutes component losing targetobject using emberrunnext component though", "d": "4/2014"}, {"body": "tried reproducing jsbin works fine found issue lingering google map event handlers caused refer old component instance emberjs sorry", "d": "4/2014"}, {"body": "work round problem fix suggested verdict bug", "d": "4/2014"}, {"body": "stefanpenner ping", "d": "4/2014"}, {"body": "closing since issue seems dead related pr", "d": "4/2014"}, {"body": "closing favor pr", "d": "4/2014"}, {"body": "queryparmas included release builds sorry annoying question trying decide wait days use routes need product reliability stability quite important", "d": "4/2014"}, {"body": "xypaul ready nt rush things nearly ember contributions labour love happened individuals time note require least full release cycle enabled default beta days another thing note core team builds apps canary bugs arise usually fixed quickly aspects canary stable stable releases contains many bug fixes yet stable comfort level allows", "d": "4/2014"}, {"body": "rjackson status", "d": "4/2014"}, {"body": "keep issue open actionable", "d": "4/2014"}, {"body": "wagenet say issue broad also curious animations talk emberconf", "d": "4/2014"}, {"body": "actionable likely split already support animating transitions eventually smarter emberdata education via better docs fixing way tremendously backwardscompatibility breaking change every app built would break block loading far longer intended could add new router hook would trigger time model called always fired implemented deferring behavior allow people optin smoothing hook want willing write", "d": "4/2014"}, {"body": "ok going go ahead close issue think one points nt well captured elsewhere please open new ticket", "d": "4/2014"}, {"body": "also youtube style progress top page looks really awesome ember apps without loading templates nt get flickr", "d": "4/2014"}, {"body": "honest aware could use helper iterate keys object standard handelbars utilizing helper comes handlebars using independent helper see object key iteration semantics one linked believe fundamental difference ember helper handlebars helper really bug happy reopen something missing", "d": "4/2014"}, {"body": "stefanpenner next step", "d": "4/2014"}, {"body": "machty thoughts", "d": "4/2014"}, {"body": "wagenet et al nt really routing thing something needs fixed helper believe unless something actually desirable behavior ca nt think renamed issue assigning rjackson know done semirecent work might fresh brain feel free reassign", "d": "4/2014"}, {"body": "destroy controller created singleton controller may able destroy additional controller long case instantiated", "d": "4/2014"}, {"body": "stefanpenner latter case meant refer renamed title renaming", "d": "4/2014"}, {"body": "always instantiates new controller case theory even may work", "d": "4/2014"}, {"body": "timevans nt want remove stuff resolver cache cache factories instances", "d": "4/2014"}, {"body": "still got error", "d": "4/2014"}, {"body": "query params requires handlebars", "d": "4/2014"}, {"body": "eldilibra ping", "d": "4/2014"}, {"body": "lukemelia ping", "d": "4/2014"}, {"body": "alas one passed us closing reopen helpful test case", "d": "4/2014"}, {"body": "definitely seems inconsistent", "d": "4/2014"}, {"body": "closing favor resolves discrepancy", "d": "4/2014"}, {"body": "hjdivad closed", "d": "4/2014"}, {"body": "wagenet yeah need manually", "d": "4/2014"}, {"body": "closing favor fixing issue", "d": "4/2014"}, {"body": "hey cool thanks fixing time filed bug nt really sure whole pullrequest process worked nice ride shotgun one speak", "d": "4/2014"}, {"body": "ebryn keep mind htmlbars", "d": "4/2014"}, {"body": "see also", "d": "4/2014"}, {"body": "machty ping", "d": "4/2014"}, {"body": "machty ping", "d": "4/2014"}, {"body": "closing adds nice assertion metamorph tag parentage differenct start end tags", "d": "4/2014"}, {"body": "closing favor pr", "d": "4/2014"}, {"body": "updated fiddle implementing arrangedcontent sorting ran issue using sortproperties", "d": "4/2014"}, {"body": "bcardarella going close since inactive let know still something want pursue", "d": "4/2014"}, {"body": "wagenet sorry let go jsbin demonstrating issue see user object defined indexcontroller deferred object resolves second user id shows properly template however hover link href problematic styling urls based upon visited status simply demo would reallife situation async relationship emberdata", "d": "4/2014"}, {"body": "note solved wrapping helpers deferred object ultimately might proper way interested feedback", "d": "4/2014"}, {"body": "going reopen rjackson maybe quickly discuss core decide bug", "d": "4/2014"}, {"body": "linktext update path object property promise resolves fixable linkto level debugging", "d": "4/2014"}, {"body": "moving problem description issue believe following rjackson suggestion exactly problem assuming model related user object want make link user page template may write something like work perfectly good long user object wont replaced one like happens link update text keep old invalid href example workaround attached example would force linkto synchronization giving direct path object helper like please verify consider bug happy work fix ps noticed possibly related behaviour causing linkto href object id difference may due usage ember data async relations thus dspromiseobject able replicate", "d": "4/2014"}, {"body": "note somewhere observer seems setup incorrectly", "d": "4/2014"}, {"body": "add linkview seems update href properly guys think", "d": "4/2014"}, {"body": "add test submit pr sure might break tests definitely step right direction", "d": "4/2014"}, {"body": "sure try today", "d": "4/2014"}, {"body": "machty ping", "d": "4/2014"}, {"body": "mikepack interesting idea start discussion forums someone open pr ready", "d": "4/2014"}, {"body": "encountered issue thanks clarifying movement documenting clearly", "d": "4/2014"}, {"body": "machty keep open", "d": "4/2014"}, {"body": "fighting emberselect found issue expected behavior easy enough explain necessarily implement like see update content emberselect view recheck selection variable set selection", "d": "4/2014"}, {"body": "rjackson consensus", "d": "4/2014"}, {"body": "seeing happen anymore current canary", "d": "4/2014"}, {"body": "wagenet confirmed appears fixed", "d": "4/2014"}, {"body": "around basically unchanged since pretty old method said according api docs strings relative", "d": "4/2014"}, {"body": "wagenet relative source object target object right", "d": "4/2014"}, {"body": "aaronshaf strings relative source nt see different using old syntax globals required", "d": "4/2014"}, {"body": "stefanpenner canonical backburner", "d": "4/2014"}, {"body": "would say", "d": "4/2014"}, {"body": "rjackson working moving things broccoli", "d": "4/2014"}, {"body": "stefanpenner looking possibility creating custom view itemcontroller template created typeview nt work briefly looked fix using collectionview idea come soon edit nevermind inserting instead", "d": "4/2014"}, {"body": "jayphelps status", "d": "4/2014"}, {"body": "wagenet laid ground work ok history paths extra hashes hash paths doubled hashes eg needs love support still planning fix finally adding test coverage since likely find several edgecase bugs likely project start end week lasting week two start pr day two track progress thanks nudge smile", "d": "4/2014"}, {"body": "stefanpenner hjdivad ping", "d": "4/2014"}, {"body": "think todos fix compare types least inequality probably fine inequality give unspecified ordering use b implement comparator falls back underlying content personally would strongly favour option b think gives much natural semantics object proxies still escaped desired manually checking type extracting content need less invasive change would go option ie implement stefanpenner todo list look right", "d": "4/2014"}, {"body": "hjdivad theoritcally huge advocate using comparablemixin dealing proxies slightly nervous pandora box open feel may better box open current one one concern nt think proxies maybe nt matter us maybe proxyvalueof", "d": "4/2014"}, {"body": "going close since inactive still interested pr", "d": "4/2014"}, {"body": "ebryn krisselden ping", "d": "4/2014"}, {"body": "nt may never work ember correctly preserve context cc rjackson", "d": "4/2014"}, {"body": "confirm previously using item controller always modified context longer case canarybeta builds", "d": "4/2014"}, {"body": "fixed current error attempt use nonarray arraycontroller jsbin", "d": "4/2014"}, {"body": "bfbriggs something going work", "d": "4/2014"}, {"body": "bfbriggs yuno docs", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "lt", "d": "4/2014"}, {"body": "machty still issue router refactoring going", "d": "4/2014"}, {"body": "stefanpenner plans fixing", "d": "4/2014"}, {"body": "would love refactor area keeping issue open nt providing much value", "d": "4/2014"}, {"body": "need revamp emberselect since nt appear critical bug going close", "d": "4/2014"}, {"body": "rjackson ping", "d": "4/2014"}, {"body": "closing due inactivity", "d": "4/2014"}, {"body": "tested jquery matters seems resolved", "d": "4/2014"}, {"body": "closing sounds like workaround cleaning select view future", "d": "4/2014"}, {"body": "punished extra closing div error punishes bad feel bad would like error even vague misleading kidding", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "stefanpenner ping", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "hjdivad anything actionable", "d": "4/2014"}, {"body": "wagenet yeah need fix two things listed thanks reminder", "d": "4/2014"}, {"body": "krisselden ping", "d": "4/2014"}, {"body": "ctimmerm give feedback reviewed jsbin parentview handling case nt assumes chains could added parentview leaves chains childview setup unfinished parentview giving unfullyinitialized createchildview installing chain observer", "d": "4/2014"}, {"body": "clarify finishing chains nodes metachainwatchers starting metachains", "d": "4/2014"}, {"body": "krisselden needs done", "d": "4/2014"}, {"body": "wagenet problem error message already downstream error happens already fixed cases result message issue breaking point causes different", "d": "4/2014"}, {"body": "mixonic still something want pursue", "d": "4/2014"}, {"body": "stefanpenner ping", "d": "4/2014"}, {"body": "curious gets registered injected resolved later seems like solution create entity initializer bother register potentially need reference later create entity initializer register instance preserved", "d": "4/2014"}, {"body": "closing favor", "d": "4/2014"}, {"body": "would great get reports investigation", "d": "4/2014"}, {"body": "jasonmit status", "d": "4/2014"}, {"body": "view keyword handled correctly pointing internal yield view yield context view simple fix", "d": "4/2014"}, {"body": "think jasonmit solution good one context object fixed krisselden saying dev env ember nt setup anymore new laptop rush finish work deploy noone find time fix love fix days least", "d": "4/2014"}, {"body": "made basic jsfiddle show problem", "d": "4/2014"}, {"body": "removed needs feedback since given unverified since know problem", "d": "4/2014"}, {"body": "clarify view keyword generally antipattern usually suggests need child controller like render item controller array controller using view using component", "d": "4/2014"}, {"body": "well purpose simple example showing problem application component used configurable scrolling area optional custom scrollbars buttons used scroll need set class held view whole template logically working component block inside course view configurable display stuff differently render used", "d": "4/2014"}, {"body": "wrote test issue trying fix looks like view good one retrieved method class reason becomes function rendered template looking deeper first look makes thinking easy fix thought hehe", "d": "4/2014"}, {"body": "wow freaking weird added template log renaming property sure nt property name problem got weird output got right view got component object console instead", "d": "4/2014"}, {"body": "sorry spam logging view template returns correct correct property correctly set", "d": "4/2014"}, {"body": "oh forget missing test angry also think found way fix run unit tests create pr soon pass", "d": "4/2014"}, {"body": "closing since sure issue issue pretty much inactive", "d": "4/2014"}, {"body": "rjackson correct fixed", "d": "4/2014"}, {"body": "knownasilya still interested", "d": "4/2014"}, {"body": "seems issue still present ember thanks quickfix mattmarcum could solve", "d": "4/2014"}, {"body": "machty know still issue", "d": "4/2014"}, {"body": "closing since date gustavopaes still issues let know", "d": "4/2014"}, {"body": "rjackson add core team agenda easy decide find worth pursuing", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "kselden status", "d": "4/2014"}, {"body": "solved htmlbars", "d": "4/2014"}, {"body": "issue wo nt resolved metamorph code removed something like get around", "d": "4/2014"}, {"body": "htmlbars remove metamorphs someone wants submit pr fix htmlbars lands probably merge stopgap", "d": "4/2014"}, {"body": "wagenet bumped last week may take stab still interest supporting layout containerviews correect", "d": "4/2014"}, {"body": "realizing feature clashes idea call multiple times layouts makes sense templated views since render template n times nt make sense managing set view instances could probably assert limit layouts container view single call somehow inconsistency nt great probably leave since called often workaround pretty simple", "d": "4/2014"}, {"body": "wonder steffen bren trying solve similar issue around also probably broken issue wagenet mentioned", "d": "4/2014"}, {"body": "stefanpenner fixed yet", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "ebryn kselden htmlbars affect", "d": "4/2014"}, {"body": "yes fixed htmlbars work", "d": "4/2014"}, {"body": "closing since solve", "d": "4/2014"}, {"body": "stefanpenner ebryn guys know even intend support", "d": "4/2014"}, {"body": "im supporting ca nt use keywords accomplish thing", "d": "4/2014"}, {"body": "discuss krisselden", "d": "4/2014"}, {"body": "johnkpaul know still issue", "d": "4/2014"}, {"body": "still issue", "d": "4/2014"}, {"body": "mixonic could give insight guys find tests exercise runloop scheduling eg emberrunlater super flaky describe might improve thank", "d": "4/2014"}, {"body": "someone investigate see side effects would", "d": "4/2014"}, {"body": "maybe brain slow fail see latency compared multiple todomvc examples without noticing anything", "d": "4/2014"}, {"body": "krajsnick obviously long time ago remember browser using", "d": "4/2014"}, {"body": "probably safari apr kl skrev peter wagenet notifications githubcom krajsnick obviously long time ago remember browser using reply email directly view github", "d": "4/2014"}, {"body": "hi guys im issue using firefox aswell imagine also happens safari frameworkside solution issue works modern browsers", "d": "4/2014"}, {"body": "matiasdecarli works great guessing chrome autofills insert right callback fired", "d": "4/2014"}, {"body": "aehrjames working version emberhandlebars using", "d": "4/2014"}, {"body": "aehrjames matiasdecarli working also chrome ember", "d": "4/2014"}, {"body": "ember latest chrome dev branch stopped working sure robust way maybe repo link", "d": "4/2014"}, {"body": "believe need cross browser solution also ember handlebars issue js issue", "d": "4/2014"}, {"body": "latest chrome version mac osx fire change event automatically fixed also issues safari unfortunately current beta ist failing nt check stableprevious versions though", "d": "4/2014"}, {"body": "ebryn confirm htmlbars solve", "d": "4/2014"}, {"body": "yes", "d": "4/2014"}, {"body": "krisselden ebryn want leave sort issues open", "d": "4/2014"}, {"body": "solved", "d": "4/2014"}, {"body": "rjackson also depends decided meeting", "d": "4/2014"}, {"body": "", "d": "4/2014"}, {"body": "stefanpenner updates", "d": "4/2014"}, {"body": "believe improved refactor code factories way issue sane way without breaking backwards compat", "d": "4/2014"}, {"body": "ebryn want keep open close", "d": "4/2014"}, {"body": "solved", "d": "4/2014"}, {"body": "machty stefanpenner ping", "d": "4/2014"}, {"body": "nt think issue anymore one seems complaining nice ember inspector tracing promises reopen necessary", "d": "4/2014"}, {"body": "eh leaving open still promiseswallowing sadness promiseland", "d": "4/2014"}, {"body": "feel like probably fixed stefanpenner know", "d": "4/2014"}, {"body": "believe nearly occurrences result something strange binding globals leaving intervalstimers running cleaning object destroyed closing individual problems show triage needed", "d": "4/2014"}, {"body": "aw yiss", "d": "4/2014"}, {"body": "unfortunately async call stacks solve virtualstack stitching though", "d": "4/2014"}, {"body": "well crap guess callbacks sit queue run ignoreme", "d": "4/2014"}, {"body": "slindberg correct bb preserve stack traces debug mode manual tedious better nothing see bb repo details hopefully proper support land soon", "d": "4/2014"}, {"body": "stefanpenner status", "d": "4/2014"}, {"body": "stefanpenner happened", "d": "4/2014"}, {"body": "nothing core changed since us eakecli users enjoying consistent naming conventions real solution transition ember users similar naming conventions steps outlined previous comment", "d": "4/2014"}, {"body": "stefanpenner even make sense anymore", "d": "4/2014"}, {"body": "think move towards embercli much likely let handled external component", "d": "4/2014"}, {"body": "rjackson know discussed meeting today decide", "d": "4/2014"}, {"body": "wagenet trying catch wycats rethinking select story wip component addresses speed issue likely others think current plan replacement ready deprecate add new handlebars helper current wip jsbin curious", "d": "4/2014"}, {"body": "rjackson make new issue close issues point one", "d": "4/2014"}, {"body": "teddyzeenny stefanpenner ping", "d": "4/2014"}, {"body": "wagenet working logging library hopefully take logging ember", "d": "4/2014"}, {"body": "teddyzeenny project looks great think room coordinate internal logging flags make sure ready small shim replace specifically number different flags enable logging moment passed others think rework bit prepare using new log manager thoughts", "d": "4/2014"}, {"body": "logmanager introduces named logging names follow certain hierarchy inheritance also matter levels sometimes want logging prefer skip certain noisy level hoping would lead clearer flags instead something like loggers inherit levels parents unless levels explicitly set far final api logmanager early stage think", "d": "4/2014"}, {"body": "teddyzeenny awesome going go ahead close ticket stuff ready send pr", "d": "4/2014"}, {"body": "ran today longer issue htmlbars correct", "d": "4/2014"}, {"body": "samselikoff correct", "d": "4/2014"}, {"body": "confirm get issue using emberfastclickjs easiest fix simply use anchor tag instead button particular action", "d": "4/2014"}, {"body": "ghempton ping", "d": "4/2014"}, {"body": "aside bad naming applypartial means mixin applied prototype nt done design object create call finishpartial point required checks done", "d": "4/2014"}, {"body": "still case iterating object build forms setting id value attributes fundamental ability", "d": "4/2014"}, {"body": "might possible using sexpressions handlebars nt actually tried", "d": "4/2014"}]