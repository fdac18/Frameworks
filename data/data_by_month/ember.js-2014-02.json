[{"title": "calling removeobjects removes incorrect things", "body": "hi everyone found issue using method may illustrated bin trying go deep problem found think actual issue library code roughly results calling callback two times thus deleting required things sure expected behaviour native reproduced chrome ff easy fix may moving regular loop try submit pr issue make pass existing tests nt completely stupid", "num": "4443", "d": "2/2014"}, {"title": "recovering rejection promise emberroute model work using recommended means", "body": "ember guides async routing recovering rejection section says catch promise rejects within model hook convert fulfills wo nt halt transition gist demonstrates problem live example jsbin problem although error callback successfully invoked model function evidenced log output route detect happened continues halt transition route evidenced log output fact template nt get rendered run browser hash fragment nt change either expected result route detect callback returned recovery object thus allow transition go using model page render foo foo successfully recovered promise rejection route", "num": "4442", "d": "2/2014"}, {"title": "emberobjectextend breaks objectseal", "body": "js emberversion var extendcreate objectseal emberobjectextend foo function return bar create class extendcreatefoo function return baz function return baz extendcreatefoo bar yet js createwithmixins objectseal emberobjectcreatewithmixins foo function return bar class createwithmixinsfoo function return baz function return baz createwithmixinsfoo baz", "num": "4441", "d": "2/2014"}, {"title": "item items wrong context", "body": "think found bug helper specifically nesting two jsbin showing mean section interest since using preserves context would expect reference variable object array instead inside second helper reference controller expected behavior helper preserving context", "num": "4437", "d": "2/2014"}, {"title": "template rendered named template use outlet", "body": "see demonstrating rendering cats route along cats template named cats outlet application template result see catsindex template rendered within cats template despite seeing transition catsindex machty usually respond coworkers issues quickly tell us ember wrong hoping", "num": "4434", "d": "2/2014"}, {"title": "actions inside nested components bubble route", "body": "maybe something wrong ca nt get foo action bubble route error occurs nest two components inside using handlebars block helper syntax example parent component template child component template handlebars hello child bubbling route apparently route javascript appindexroute emberrouteextend model function return red yellow blue actions", "num": "4430", "d": "2/2014"}, {"title": "x working certain situations", "body": "following construct working emberjs demonstrated following jsfiddle seem issue order evaluation", "num": "4429", "d": "2/2014"}, {"title": "component looses context initfunction implemented", "body": "component template getting context controller implemented initfunction modified componentexample show", "num": "4428", "d": "2/2014"}, {"title": "emberselect never output selected attribute", "body": "hi trying use emberselect view however selected attribute never outputted active option exemple doc work neither reproducing minimal example current version ember beta failed also master branch thank", "num": "4427", "d": "2/2014"}, {"title": "binding route controller transitioning route causes exception", "body": "hi folks found bug emberroutesetup route bound property controller route transitioned exception thrown simply changing line emberroutesetup line fixes cheers andrew", "num": "4425", "d": "2/2014"}, {"title": "using emberarray component", "body": "component works similar manner pass array get selected item simply taking options array pushing ember array call component template multiple times value options property components component options another component options components value property shared components nt supposed happen coffee selectinputcomponent embercomponentextend value options dog cat fish list embera didinsertelement gt get options get options foreach item gt get list pushobject emberobjectcreate value get value isselected false isdefault false", "num": "4424", "d": "2/2014"}, {"title": "embercomputedfilter replaces items place property changes", "body": "list text fields bound ux issue field autosaved text field loses focus tracked issue reducecomputed properties called removes item adds item back issue nt happening upgraded might also related quickly content gets flushed dom add remove occur directly item location affect dom", "num": "4423", "d": "2/2014"}, {"title": "emberselect work subobjects embermap", "body": "emberselect combination view viewhelper take controller property contentargument view emberselect contentrelationsroles case relations could javascript object relationsroles expected enumerable confgure relations embermap perform relationsset roles name one emberselect display values correctly bug jsbin", "num": "4422", "d": "2/2014"}, {"title": "queryparamsnew query params sticky index route", "body": "seeing two issues using index routes queryparamsnew first breaking active state may related second sticky params working expected ca nt find open ticket seems relevant seeing longer description demo found", "num": "4420", "d": "2/2014"}, {"title": "transition fails silently", "body": "code error dashboardpageheader exist ember fails report issue application would never transition loading issue reported able resolve sure doubt supposed fail silently", "num": "4419", "d": "2/2014"}, {"title": "promiseproxymixin reset isfulfilled isrejected reseting promise", "body": "sure expected behavior design assume object promiseproxymixin fullfilledrejected assign new promise object isfulfilledisrejected reset example code javascript var tasks emberarrayproxyextend emberpromiseproxymixin tasksset promise getjson apitasksjson tasksget isfulfilled return false ajax request response tasksget isfulfilled return true assign new promise reload data tasksset promise getjson apitasksjson ajax response isfulfilled true tasksget isfulfilled return true expect every time set reset false set manually reseting sure good suggestion could anyone tell reason design like reset isfulfilled isrejected automatically thanks", "num": "4414", "d": "2/2014"}, {"title": "reason using container factorycache", "body": "looked container code looks like never merge factorycache actually container cache reason using", "num": "4413", "d": "2/2014"}, {"title": "routing error route", "body": "sure changed app get error seems like error never reached far caught earlier helpful message exactly sure going though", "num": "4412", "d": "2/2014"}, {"title": "loading event bubbling expected", "body": "event appear bubbling upward way described ember app template routes model hook returning delayed promise demonstrating", "num": "4409", "d": "2/2014"}, {"title": "refer arrangedcontent instead content", "body": "encountered subtle weirdness mixin looks like previously dependant key referring whenever mixin overriden ending null method composedelete function index var arrayoperation thisoperations index deletestogo arrayoperationcount leftarrayoperation thisoperations may undefined leftop leftarrayoperation amp amp leftarrayoperationtype nextarrayoperation nextop nextcount removenewandnextop false removeditems operations assignment referring index greater", "num": "4408", "d": "2/2014"}, {"title": "passing primitives longer calls model hooks nested routes", "body": "passing string number route using helper function longer calls hook nested routes parent changes working example broken example version router nt call model hook nested routes argument child route nt changed think common nested routes model refresh parent model changes sure bug nt want pollute stackoverflow", "num": "4405", "d": "2/2014"}, {"title": "amd detection define default", "body": "almost thing previously resolution great removing ember reliance still nt detect amd environments define automatically literally something simple would mostly satisfy gladly pr core sickness supported begs question whether still leak globally running amdsupported environment sort global variable nazis personally vote still go global need devil advocate btw realize example people want wrap ember module issue believe ember detect automatically especially since source ported amd eak think buy completely", "num": "4402", "d": "2/2014"}, {"title": "fixture adapter allow testing serializers transforms wrong repository sorry please delete", "body": "fixture adapter assumes data provided correct format call serializers transforms fixture data format expect get data massaged version data take payload rest service use fixture data first massage transforms custom serializer would like test fixture data case may offline able call rest service also test meta data serializer null statement fixtureadapter removed defaults back jsonserializer transforms called subclass fixtureadapter specify defaultserializer test serializer data format rest service would actually send way subclass fixtureadapter set serializer back undefined would ok", "num": "4400", "d": "2/2014"}, {"title": "transitioning stored transition subroutes fails", "body": "route setup like approutermap function thisresource login thisresource order path orders orderid function thisresource checkout checkout path protected authenticated route stores attempted transition appauthenticatedroute emberrouteextend beforemodel function transition var loggedin thiscontrollerfor application get isloggedin loggedin thisredirecttologin transition redirecttologin function transition var applicationcontroller thiscontrollerfor application applicationcontrollerset attemptedtransition transition thistransitionto login appcheckoutroute appauthenticatedrouteextend login transition retried app attempts transition instead back order code seems work ember fails higher small app reproducing issue", "num": "4399", "d": "2/2014"}, {"title": "actions nt delegate controller controller", "body": "action inside context bubble foocontroller rather current route controller furthermore inside returns current route controller seems action would first bubble controller context defined route controller would output current controller context jsbin cc bcardarella", "num": "4398", "d": "2/2014"}, {"title": "model property proxying like content property", "body": "caused breaks upgrading always source confusion whether use controller proxying personally favoured upgrading count created jsbin illustrate problem jsbin controller defined length even though aliased property elements change keyword correct length verify taking steps click companies link navbar check boxes sidebar property reference handlebars displays find change model content repeat steps correct length displayed", "num": "4396", "d": "2/2014"}, {"title": "deprecate notifypropertychange", "body": "convenience method calling row nt whole point called change occurs used places ember tests", "num": "4395", "d": "2/2014"}, {"title": "transitionto routing", "body": "realted created jsbin show problem steps recreate click companies top nav check boxes sidebar click delete button delete button action handler looks like replication happening real world application real app wait records deleted want back certain route happen noticed router code appending ca nt understand work", "num": "4394", "d": "2/2014"}, {"title": "allow view parameter render option hash", "body": "jsbin trying show possible render outlet possible render viewcontrollertemplate second outlet possible render using controller capital leters middle greengreen possible render using controller capital leters middle associated nongenerated view needed bluebluecontroller blueblueview ember uses controller blueblue specified options autogenerates view blue guess match template blue understand default rules choose view outlet possible override manually maybe parameter render options hash", "num": "4392", "d": "2/2014"}, {"title": "routing different handler linkto", "body": "sure connected misunderstanding router works would good get clarity situation jsbin illustrates problem steps reproduce click companies link top nav everything works expected correct handler route name selected afterhook called route click companies link top nav handler routename executed route defined therefore overrriden hook get behaviour expect override stop transition route would expected handler get executed time find strange clicking link generated link results different handler executed different circumstances", "num": "4391", "d": "2/2014"}, {"title": "controllerfor setupcontroller fails silently setupcontroller aborted", "body": "bug setupcontroller apphelloroute emberrouteextend usercontroller bug code needed find ember complain aware thing happening template rendered thought named controllersroutersviews wrong route spent hours looking problem simply failing completely silent stacktrace console error message expected behaviour think least development builds error message provided edit seems error abort silently unexpected", "num": "4390", "d": "2/2014"}, {"title": "nested collectionviews broken", "body": "hi shown js bin using nested collection views causes error uncaught typeerror call method lookup null issue states collection views working itemview either", "num": "4389", "d": "2/2014"}, {"title": "transition params changed", "body": "router seems changed unexpected ways previously check willtransion messages route experiencing many subtle bugs", "num": "4388", "d": "2/2014"}, {"title": "helper add css class based active route", "body": "issue discussed lately currently clean way active css class depending active route tag linkto helper markup used bootstrap example desired output current workaround double nesting ugly proposal add helper adds active class enclosing tag existing active route detection functionality moved mixin reused proposed usage fancy usage sometimes designers put classes body distinguish styles different templates first parameter string route could lookupadd css classes handed property eg views classnames property guys happy proposal try implement first draft ping trek stefanpenner", "num": "4387", "d": "2/2014"}, {"title": "context component", "body": "found number bugs release happening upgrading app relatively big creating jsbins proving bit struggle first one click one checks left column route transitions click check sidebar transition find action alert used work routing bugs go away revert try create jsbins situations", "num": "4385", "d": "2/2014"}, {"title": "helper specifying controller actions ignored controller", "body": "see specifying controller helper nt work entirely expected expected actions triggered within block handled controller named block instead bubble parent controller", "num": "4384", "d": "2/2014"}, {"title": "emberstringfmt stringprototypefmt behave differently", "body": "seems requires single array requires multiple parameters returns returns conversely returns returns fiddle table form given data method array params desired desired", "num": "4383", "d": "2/2014"}, {"title": "select tag display options bug", "body": "hello try make select tag associated model user change appropriate property updated jsbin see selected value displayed select box made mistake bug emberselect view", "num": "4382", "d": "2/2014"}, {"title": "queryparamsnew available canary build", "body": "using enabled queryparamsnew feature worked well application however upgraded keep getting error checked emberjs gem distribution could nt find reference queryparamsnew however code related queryparamsnew still found canary build queryparams officially removed betarelease builds", "num": "4372", "d": "2/2014"}, {"title": "ember seems incompatible sharethis", "body": "using sharethiscom implement sharing site without including emberjs everything works fine file included javascript error raised uncaught typeerror read property undefined buttonjs", "num": "4371", "d": "2/2014"}, {"title": "newer version breaks jqgrid", "body": "using ember jqgrid recently try upgrade ember newer version breaks jqgrid grid longer sends request web service nt see error using chrome debugger using fiddler nt see error request back end downgraded back works finds grid stops working starting ember anyone gotten newer version ember work jqgrid", "num": "4370", "d": "2/2014"}, {"title": "nested feature flags", "body": "currently support nested feature flags build error occurs value anything believe able updated handle properly created shipped value feature fixed upstream reference used", "num": "4369", "d": "2/2014"}, {"title": "arraylength computed properties observers firing", "body": "seem run issue fairly often always work around appears unexpected behavior ember basic way reproduce define array property emberobject define computed property based array length define observer computed property add value array observer fire expected read computed property elsewhere console add another value array observer fires continue array changes expected fiddle demonstrate open console see log messages array changes observer valueslength fires expected observer computed property fire expected click log hasvalue button starts work second concern click log button hasvalues observer fires time array content changes would expect observer fire hasvalues actually changes occurs array becomes empty empty workarounds simple issue behavior unexpected wind pulling hair trying debug code work thanks everyone", "num": "4368", "d": "2/2014"}, {"title": "contradicting documentation related parameter emberrouterender", "body": "example accept template name route name", "num": "4367", "d": "2/2014"}, {"title": "route transitions flickery many repaints", "body": "actionable bug wanted bring general problem everyone attention close several apps seen route transition visually busy might still fairly fast measured milliseconds amount repaints makes seem heavy example illustration happens hit back button one pages going home page page back button takes half second importantly seems cause excessive flickering several consecutive frames", "num": "4366", "d": "2/2014"}, {"title": "wrong assertion value loops must array", "body": "problem ca nt pass object handlebarsjs conditional raises exception emberjs code handlebarsjs iterate objects excerpt handlebars place emberjs occurs module ember submodule emberhandlebars emberhandlebarseachview embercollectionviewextend embermetamorph assertarraylike function content emberassert value loops must array passed contentconstructor arraycontroller embercontrollermixindetect content content amp amp contentisgenerated content instanceof emberarraycontroller emberassert value loops must array passed embercontrollermixindetect content amp amp contentget model undefined contentget model wrapped content content emberarraydetect content module ember submodule emberviews embercollectionview embercontainerviewextend contentdidchange emberobserver content function var content get content", "num": "4365", "d": "2/2014"}, {"title": "destroying namespace remove list namespaces", "body": "", "num": "4363", "d": "2/2014"}, {"title": "ca nt loop emberdeffered object template", "body": "want show issues get emberdeferred resolve pass controller shows error issues else code model var dfd emberdeferredcreate var issues ema getjson appapipath issues magid function response error console assertion failed value loops must array passed emberdeferred uncaught typeerror object object object method addarrayobserver please help thanks", "num": "4361", "d": "2/2014"}, {"title": "internal state transition indom embercoreview causes must use emberset access property error within containerview", "body": "ember component passing containerview component choking render throwing error stating need use emberset set view state property setting directly seems culprit line embercoreviewtransitionto line ember changing simple thisset state state seems resolve problem nearly comfortable enough ember internals know whether appropriate fix happy provide additional context helps thanks", "num": "4356", "d": "2/2014"}, {"title": "findingnearesteventmanager wasteful", "body": "feature likely never rarely used incur cost every dispatched event includes mouseoveretc consider killing flagging cache results need run time", "num": "4355", "d": "2/2014"}, {"title": "ca nt get content value view class", "body": "trying get content template view class modelname showing fine template try access contentname view class shows undefined define app function app return appissueview please help thanks", "num": "4354", "d": "2/2014"}, {"title": "route view initialized model changes", "body": "noticed route view initialized every time model changes route even though model actually rendered original view quick jsbin reason view created used try find router happening", "num": "4353", "d": "2/2014"}, {"title": "latest canary build broken", "body": "hi developing canary recently ran new error looks like coming javascript function embercontainer requiremodule container default embercontainerset emberset occurs regardless whether app initialized suggestions", "num": "4345", "d": "2/2014"}, {"title": "render thing thingmodel nt tear controller upon unrender causes leaks", "body": "seeing memory leak controllers nt torn leaving route thus multiple instances controller acting object created", "num": "4342", "d": "2/2014"}, {"title": "ember bower handlebars dependency incorrect", "body": "handlebars dependency specified pulls breaks embertemplatecompiler precompiling templates", "num": "4341", "d": "2/2014"}, {"title": "query parameters works", "body": "linkto index queryparams statecontent time linkto code console log error uncaught error parse error line linkto index queryparams state expecting close closeunescaped string integer boolean id data got invalid", "num": "4340", "d": "2/2014"}, {"title": "using deep property computed property bindattr work", "body": "tried using code like defined like within controller verify computed property changes expected modified elsewhere value attribute update accordingly", "num": "4339", "d": "2/2014"}, {"title": "embercomputedsortlength receiving change notifications incorrectly", "body": "adding single object empty source array observer property defined fire changing property object source array one sortproperties observer fire times even though length conceptually changing created failing test yet dug root cause wanted put see hjdivad initial feedback guidance", "num": "4337", "d": "2/2014"}, {"title": "emberroutingboundactionname quoteless actions controller cause uncaught error", "body": "action defined controller controlleractions appear demo fix replace reference", "num": "4335", "d": "2/2014"}, {"title": "bug emberselect multipletrue nt set selection elements deep equal objects", "body": "bug emberselect preselect options selection property contains objects content property doesnt preselect objects match deep equal operation live example test javascript test selection set deeply equal objects function var yehuda id firstname yehuda tom id firstname tom david id firstname david brennain id firstname brennain aclonedtom id firstname tom aclonedyehuda id firstname yehuda", "num": "4331", "d": "2/2014"}, {"title": "differences bindattr", "body": "bit confusing realize bindattr use different notion truth example errorname array validation errors field name field ok array empty otherwise error messages using matters write ca nt write works fine", "num": "4330", "d": "2/2014"}, {"title": "oneway defaultto nt", "body": "docs emcomputedoneway say downstream value permanently diverges upstream property docs emcomputeddefaultto nt specify happens upstream value changes implementation causes permanent divergence like need thing js k emobjectextend oneway embercomputedoneway ab defaultto emcomputeddefaultto ab k kcreate b pull upstream unset kget oneway kget defaultto allow setting kset oneway kset defaultto retain value set kget oneway kget defaultto diverge permanently kset ab kget oneway kget defaultto", "num": "4323", "d": "2/2014"}, {"title": "input type checkbox valueboolthing work", "body": "turns supposed sure makes sense maintains parity old school cept syntax strictly html world dumbleton brain spent insignificant amount time wondering heck approach issue title nt working make sense support anyone else tripped", "num": "4319", "d": "2/2014"}, {"title": "embermixin cp firing emberobject", "body": "basically computedproperty mixin cp depends instance controller cp nt trigger upon change object two jsbins showing issue", "num": "4318", "d": "2/2014"}, {"title": "active state anscestor linkto broken queryparamsnew enabled", "body": "routes controller defines links ancestor routes longer considered active jsbin demonstrates issue believe current behavior changed pr due considering object keys empty object", "num": "4317", "d": "2/2014"}, {"title": "proper way create fixture adapter", "body": "docs currently show three different methods creating adapters getting starting guide using fixtures section fixture adapter created extending adapter class adapter class documentation created using dsstorecreate fixture adapters guide created using dsstoreextend seem work equally well however option relies undocumented default value nt explained tutorial elsewhere could find option specifies revision field nt explained nt appear used best practice specifying adapters know submitted documentation discrepancies happy forkfix api appears state flux ca nt tell docs code correct method use think important get right common warningcomplaint heard people give trying evaluate angular vs ember hard find accurate ember tutorials api keeps changing", "num": "4315", "d": "2/2014"}, {"title": "emberroutermap nt documented", "body": "one first ember functions exposed getting started tutorial following perhaps unique see code tutorial like cross reference docs awfully hard time figuring map actually could nt find function documented anywhere ember router class documentation found reference source code nt immediately obvious since documentation source site looking rest documentation reference find map emberenumerable documentation emberrouter use interface would useful see mentioned somewhere emberrouter docs nt map come context api", "num": "4314", "d": "2/2014"}, {"title": "memory leak observables observed array", "body": "really simple test file basically along assumption folder structure starter kit tested instead happens using let run hour essentially leaks bytes per second bytes hour much larger app worse wanted dead simple thoughts ember starter kit lt gt welcome emberjs lt gt lt p gt outlet firstname lastname version app emberapplicationcreate apppersonmodel emberobjectextend firstname null lastname null version versionchanged function observe something observes version approutermap function put routes appindexroute emberrouteextend apptestcontroller apppopulatearray function var myarray embera myarrayaddobserver function actually wanted something var lt var person apppersonmodelcreate firstname john lastname doe version myarraypushobject person return myarray appindexcontroller emberarraycontrollerextend init function apptestcontroller content apppopulatearray setinterval function apptestcontrollerset content apppopulatearray setinterval function var data apptestcontrollerget content dataforeach function value index valueincrementproperty version", "num": "4309", "d": "2/2014"}, {"title": "able sort arraycontroller computed property itemcontroller", "body": "currently sortproperties includes computed property itemcontroller property found sort properties original model", "num": "4308", "d": "2/2014"}, {"title": "bindattr regression observers properly removed", "body": "commit removed function helper looks like call missed though still references function rather function say line packagesemberhandlebarslibhelpersbindingjs left master currently line problem exists line", "num": "4307", "d": "2/2014"}, {"title": "weird behaviour deleting last element arrayproxy", "body": "jsbin shows problem click remove add removing adding new element items appear old one new one twice exception last element removed", "num": "4306", "d": "2/2014"}, {"title": "use handlebars whitespace control", "body": "handlebars whitespace control introduced simply mustache expression may add opening brackets closeing brackets indicate whitespace beforeafter expression trimmed eg render line sometimes may break layout eg blocks unwanted empty spaces since handlebars fix adding whitespace control however tried use ember app getting error console warning running embertemplates dist embertemplates task error parse error line ss headers goal forec expecting id data got invalid warning ember handlebars failed compile apptemplatesforecasthbs use force continue related grunt task looks like emberhandlebars allow whitespace control project deps", "num": "4305", "d": "2/2014"}, {"title": "ember guides creating deleting records misleading usage examples", "body": "section deleting records correctly stated delete record call deleterecord instance dsmodel however example chance called promise object would suggest changing example something like", "num": "4304", "d": "2/2014"}, {"title": "findquery fails content", "body": "ember correctly calls rest interface fine results however none rest api returns content causes problem ember expects empty array logs following error response findquery must array undefined application working change api work around surely findquery handle better response returning empty array", "num": "4303", "d": "2/2014"}, {"title": "transitionto someroute undefined nooping cases", "body": "placeholder fix problem try flesh specific jsbin soon basically code tries provide model model expected work transition following nt working causing transition noop least setupcontroller set model undefined following fixed need investigate worked", "num": "4298", "d": "2/2014"}, {"title": "queryparams remember old state", "body": "controller go controller link go another page click next link redirect taskcontroller params queryparams remember state", "num": "4294", "d": "2/2014"}, {"title": "typo", "body": "differnt channels read post release cycle blog post different channels", "num": "4288", "d": "2/2014"}, {"title": "fear ember become fun", "body": "working work projects weekend fun working ember make painful thanks", "num": "4286", "d": "2/2014"}, {"title": "appending created component instance via componentfactory nt invoke didinsertelement", "body": "hey see container nt like longer tried using lookup component registered helper manually appending component view nt invoke function live example please note working ok replace manually registered component via handlebars helper auto registered component thanks", "num": "4284", "d": "2/2014"}, {"title": "meeting minutes", "body": "trek blog post would nice", "num": "4283", "d": "2/2014"}, {"title": "naming conventions guide uses term theoretically", "body": "second paragraph contains sentence following examples app name chose namespace represent ember application created theoretically choose name want application usage term theoretically suggests behavior resulting use another name confidently known function correctly confidently known valid js identifier work alternative phrasing could although unconventional may choose another name application simply removing word theoretically would also sufficient", "num": "4282", "d": "2/2014"}, {"title": "make ember initializers embertesting friendly", "body": "production apps custom initialize fetch global configuration permissions etc found embertesting nt initializer aware current implementation example test need mock xhr fired init method stub configuration example get test setup qunit init code already fired get around today monkey patch initializer invoke manually setup curious possible delay boot testing scenarios honestly curious option", "num": "4280", "d": "2/2014"}, {"title": "queryparamsnew unsorted queryparams produce duplicate history", "body": "controller unsorted duplicate history produce transit helper demo click link twice produce duplicate history wo nt happens application route app fix sorting controller manually works simplified demo fix sorting demo", "num": "4279", "d": "2/2014"}, {"body": "beerlington fyi understanding sticky queryparams going removed next iteration machty raytiley would know details", "d": "2/2014"}, {"body": "mutating array enumerating deletionsadditions may throw current position resulting unexpected results removeobjects suffering issue considered bug", "d": "2/2014"}, {"body": "guess approve nt intended behaviour try pr", "d": "2/2014"}, {"body": "dentuzhik yes believe pr fixing adding test fails currently would wonderful", "d": "2/2014"}, {"body": "rjackson thanks chance may go upcoming beta case successful pr", "d": "2/2014"}, {"body": "dentuzhik bugfixes bugs affect beta branch get pulled beta merged yes pr accepted get current beta series", "d": "2/2014"}, {"body": "found test modules nt even exist written bunch tests using pretty much code used module cases passed started investigation going seems like problem two places existing tests use function returns array items passed value seems like test suite wrong comes passing values reference initially test module done returns new value thus preventing passing value reference using code case tests passed create failing case create helper make testing code case finally failed tests unsure solution since create new helper abandon used lots places tests may case similar bugs may reproduced somewhere else although seems like mutationonly problem rjackson think nt pushed test even fork necessary", "d": "2/2014"}, {"body": "also problem tests give expected results prototype extensions enabled really sure handle gracefully", "d": "2/2014"}, {"body": "think one corner cases jquery promises obviate deficiencies normalize rsvp promise appears work correctly leave open known limitation jquery weaksauce implementation promises", "d": "2/2014"}, {"body": "created newer milestone jsbin demonstrates thing using exact syntax ember guide docs first callback", "d": "2/2014"}, {"body": "machty thanks answer think wrap promise rsvppromise happy workaround perhaps rely anything function promise instead check rsvppromise function case wrap rsvppromise similar done except user care another alternative think specific promise likely many developers using especially scenario route ajax returned promises common detect jquery promises wrap rsvp promises thoughts", "d": "2/2014"}, {"body": "bguiz assimilation already part promisea spec rsvp conforms issue jquery promises apparently nt work would recommend using something like icajax normalizes jquery ajax utilize runloop rsvp promises", "d": "2/2014"}, {"body": "stefanpenner thank much suggestion icajax works perfectly", "d": "2/2014"}, {"body": "hmm maybe actually part works prototypes js function myclass myclassprototypefoo function return bar myinstance objectseal new myclass myinstancefoo function return baz myinstancefoo bar", "d": "2/2014"}, {"body": "cases references controller", "d": "2/2014"}, {"body": "seeing use statement first loop outside second reference one objects array", "d": "2/2014"}, {"body": "output first iteration items name lt output children lt output children child children lt output generated index controller bug expected equal item name lt found output expected output thisname lt found output expected output output model ah damn see mean think bug", "d": "2/2014"}, {"body": "one debugger statement look debugger variables refer one objects array controller even made explicit prefixing", "d": "2/2014"}, {"body": "updated example indeed bug", "d": "2/2014"}, {"body": "title issue template rendered named outlet use outlet", "d": "2/2014"}, {"body": "hitting well fix define sub routes manually specify parameter", "d": "2/2014"}, {"body": "seems like template rendered outlet considered child looks like probz lies trying compute based lastrenderedtemplate", "d": "2/2014"}, {"body": "think found fix post info later tonight", "d": "2/2014"}, {"body": "guess design problem app code parent component calling nt bubble route parent component another component nested inside parent component actually handles actions child component displays text pr issue fixes", "d": "2/2014"}, {"body": "actually changing second value override first fixes problem working jsfiddle internally copying keywords new localized set options block specified added context bind destination fiddle source fiddle essentially means inside template referencing summary believe simply support aliasing name", "d": "2/2014"}, {"body": "could definitely benefit documentation notating limitation", "d": "2/2014"}, {"body": "yes noticed works changing variable name something else also think documented clear allowed expecting first occurrence x reference outer scope mostly option x references value defined nt seem useful", "d": "2/2014"}, {"body": "closing favor pr adding documentation", "d": "2/2014"}, {"body": "override need call ensure internal component initialization occurs generally case overriding internal methods hooks implemented specifically purpose working jsbin docs classes instance initialization", "d": "2/2014"}, {"body": "nt know much jquery think kind found source issue function applies attributes dom elements views js emberviewapplyattributebindings function elem name value var type embertypeof value changes also change logic emberhandlebarslibhelpersbindingjs name value amp amp type string type number amp amp isnan value value elemattr name elemattr name value else name value type boolean emberisnone value value false remove attribute elemremoveattr name elemprop name else value elemprop name line value always properties elemprop name value else value elemremoveattr name marked line fails thereby causing attribute applied looking bit deeper fails jquery says element already attribute ran following jquery selectors console option selected selected true prop selected true jquery ca nt find elements attribute asked element directly says selected says tags without even decent knowledge jquery wo nt speculate going wrong certainly seems like bug", "d": "2/2014"}, {"body": "abrom sounds like good fix would mind submitting pr possibly test illustrating issue make sure nt future regression", "d": "2/2014"}, {"body": "possible missing something seems list implemented computed property dependent options would need customization totally untested illustration coffeescript selectinputcomponent embercomponentextend value options dog cat fish list emcomputed options key value options get options list ema", "d": "2/2014"}, {"body": "thanks thats way better implementation still nt think behaviour occur", "d": "2/2014"}, {"body": "seifsallam dig figure actually happening confirm incorrect definitely seems wrong surface though change fix issue", "d": "2/2014"}, {"body": "rjackson partially still hiccups trying fix generally values correct", "d": "2/2014"}, {"body": "rjackson tried wo nt able observe elements inside list depending", "d": "2/2014"}, {"body": "ember expert nt believe embermap implements emberenumerable result ca nt observe property changes map bad hopefully feature gets added future confusing made embermap behave like enumerable missing observable functionality", "d": "2/2014"}, {"body": "beerlington got still debugging found put default value works", "d": "2/2014"}, {"body": "abuiles tried default values looks like really works default value matches query param otherwise sticky params still lost", "d": "2/2014"}, {"body": "beerlington nt found exactly issue noticed example value param still even though already change url", "d": "2/2014"}, {"body": "beerlington correct default value nt change either", "d": "2/2014"}, {"body": "beerlington fixed", "d": "2/2014"}, {"body": "confirm issue using ember transition fails without error indication failure template named incorrectly also navigating directly route got error saying call method shouldsupercede null", "d": "2/2014"}, {"body": "certain seems like normal promise made one time use type thing nt seem like intended handle swapping internal promise like trying least see code mixin infers handle", "d": "2/2014"}, {"body": "reason way always use arraycontroller promiseproxymixin reason load model route model hook want display loading spinner page loaded way create promise object set controller also use arrayproxy promiseproxymixin build model layer classes seems ed promisearray uses way collection wants reload data think replace new things wrong way tell better way much appreciate", "d": "2/2014"}, {"body": "think reasonable isfullfiled isrejected reset promise changes", "d": "2/2014"}, {"body": "take time research ember ember data uses promiseproxymixin first ok make pr", "d": "2/2014"}, {"body": "checked ember ember data source ember nt use promiseproxymixin ember data mixin used promisearray promiseobject seems records need reload new promisearraypromiseobject created safe modify mixin sure needs discussion submit pr currently even without feature also work code", "d": "2/2014"}, {"body": "pr tests would great", "d": "2/2014"}, {"body": "coffeescript works promiseproxy embermixincreate emberpromiseproxymixin promisedidchange emberimmediateobserver promise setproperties isfulfilled false isrejected false content null reason null", "d": "2/2014"}, {"body": "would accept pr adds reset", "d": "2/2014"}, {"body": "stefanpenner problem add tap function tests", "d": "2/2014"}, {"body": "awesome thanks", "d": "2/2014"}, {"body": "factorycache caching resolver returns factory change resolved repeated resolving factory nt incur penalty resolving strategies impose singleton factory instantiated stored container cache nonsingleton factory instantiated cached believe current behavior working expected closing issue", "d": "2/2014"}, {"body": "seeing problem well another fiddle reproduce problem guides mention work see offending section transitioning nt exist stops looking since pivot handler machty intended behavior looks like guides need pull request", "d": "2/2014"}, {"body": "actions bubble top shown loading substates entered pivot route would mean tearing bunch templates nt need torn order perform intermediate transition loading substate sounds like might want use loading action handler apply global loading spinner something blurb docs suggests behavior describing maybe could clear way loadingerror substate resolution differs error events continue bubble transition pivot route bug maybe docs could improved", "d": "2/2014"}, {"body": "machty gotcha thanks good explanation", "d": "2/2014"}, {"body": "believe", "d": "2/2014"}, {"body": "failing jsbin treats object array nearly equivalent", "d": "2/2014"}, {"body": "put amd shim let pass module name first argument frustrating using handlebars amd way leave anonymous people put wherever file systems choose", "d": "2/2014"}, {"body": "fivetanley", "d": "2/2014"}, {"body": "fivetanley thought could clarify link somewhere would import ember anonymous note nt familiar anon modules mentioned even though googled bunch probably misunderstanding", "d": "2/2014"}, {"body": "could please try demonstrate behavior jsbin", "d": "2/2014"}, {"body": "tried jsbin first could nt work visit given route provided app instructions reproduce issue instead code jsbin find see behaviour visiting link clicking checkout followed login easier way navigate route jsbin", "d": "2/2014"}, {"body": "stefanpenner confirm bug put together pr pretty quickly", "d": "2/2014"}, {"body": "believe bug", "d": "2/2014"}, {"body": "dup", "d": "2/2014"}, {"body": "template referencing defining default setup alias overriding therefore removing default alias really sure working though alias nt seem changed going use seems fine would need use everywhere setup alias noticed set instead model existing alias still work make value", "d": "2/2014"}, {"body": "actually see mean updated jsbin handlebars refers check boxes click delete action runs controller count one places breaking real app modal rendered action like length change property model content jsbin everything works would expect major would call breaking change stumped happened upgrading", "d": "2/2014"}, {"body": "content set alias model controller way around proxies consume content consume model model cp work correctly", "d": "2/2014"}, {"body": "something meaning fix nt got around", "d": "2/2014"}, {"body": "useful synthesize property change events occasion example invalidate cp", "d": "2/2014"}, {"body": "saying click select one thing hit delete nt get routed back companiesconstruction route seem work fine jsbin", "d": "2/2014"}, {"body": "jespr take steps said see main outlet content behaviour expected solved though advice", "d": "2/2014"}, {"body": "gonvaled even specify options hash method refer working bin", "d": "2/2014"}, {"body": "oooops missed exactly wanted close thanks", "d": "2/2014"}, {"body": "implicit route even nt explicitly define one ultimately translates fixed bug causing hooks routes nt need reevaluated way eg transition model hooks nt run avoid wasteful computation server queries think affecting case transitioning sibling routes nt going refire logic model hooks route nt invalidated way want define redirect logic would always worked past", "d": "2/2014"}, {"body": "feel linking expected think confusing even confusing add redirect hook feel like edge case exception want link routes worry fear might number places feels unnecessary", "d": "2/2014"}, {"body": "stage would prefer wasteful computation strange behaviour would expect links work", "d": "2/2014"}, {"body": "link routes worry move hook amount code", "d": "2/2014"}, {"body": "case functionally equivalent mean move", "d": "2/2014"}, {"body": "machty work around problems multiple ways immediate concern thinking long term surprising behaviour things seem like work", "d": "2/2014"}, {"body": "add assertions alert user going wrong path", "d": "2/2014"}, {"body": "sure behavior describing expected nested route hierarchy course resource expected invoke hooks", "d": "2/2014"}, {"body": "would expect behave way part application code different places different situations", "d": "2/2014"}, {"body": "certainly struck unexpected would raised issue", "d": "2/2014"}, {"body": "really think missing nt catch breaking change make lot noise upon release nt think sort assertions add case way code actually serve welldefined purpose transitions hierarchy must pass whatever validationredirection put model hooks case different expect links within hierarchy refire hooks involve entry route nt make conceptual sense would expect behave way part application code different places different situations way goal much welldefined goal hierarchical structures involved given data required performcomplete transition different depending app state well transitioning tofrom links going behave way depending present context want hear suggestions making things straightforward need make sure conceptual page things way least think agree loudly mentioned potential breaking change upon release", "d": "2/2014"}, {"body": "hindsight yes would good aware problem remains want everything displayed ca nt child route change create put hook undefined model passed hook use could use controllerformodelfor feels like working round problem least feel natural", "d": "2/2014"}, {"body": "good news betacanary feature routes nt specify model inherit model parent resource released weeks able need use modelfor succinct kind unsuccinct means code smell", "d": "2/2014"}, {"body": "certainly sounds better although think waiting next upgrade", "d": "2/2014"}, {"body": "yeah feel ya sorry one rough talking others see ifhow prevent sort thing lot undefined behavior routerjs microlibs ironed unfortunately feel pain illdefinedundefined behavior solidifying direction broke app let know approach ends working meantime", "d": "2/2014"}, {"body": "unfortunately circumstance relying buggy behavior nt want afraid upgrades upgrading app within week release one us wrong", "d": "2/2014"}, {"body": "machty hook works funny thing realised big work around counteract model hooks always firing", "d": "2/2014"}, {"body": "oh please tell get rid workaround would silver lining", "d": "2/2014"}, {"body": "well ends well thanks input cheers paul cowan cuttingedge solutions scotland blog website february alex matchneer notifications githubcom wrote oh please tell get rid workaround would silver lining reply email directly view github", "d": "2/2014"}, {"body": "woooo hoooo could close alreadyclosed issues", "d": "2/2014"}, {"body": "seems bad ping machty", "d": "2/2014"}, {"body": "needed provide jshint would need create save effort think issue clear enough", "d": "2/2014"}, {"body": "gonvaled time provide jsbin would great", "d": "2/2014"}, {"body": "also sure canary beta release", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "take look commentuncomment line bug see described effect", "d": "2/2014"}, {"body": "well crap changing beta build fixes issue bug technically already fixed probably merged beta released stefanpenner think worth new release", "d": "2/2014"}, {"body": "machty likely seems like may afew regressions want fixup though", "d": "2/2014"}, {"body": "far tell several problems exist jsbin instantiating controllers without going container leaves without container truly need instantiate suggest item view template calls render without context called time use singleton foo controller context looping list must provide context appropriate", "d": "2/2014"}, {"body": "may bug first issues prevented actually getting bug", "d": "2/2014"}, {"body": "stefanpenner changed like right still working", "d": "2/2014"}, {"body": "updated bin", "d": "2/2014"}, {"body": "excellent thanks stefanpenner selvag", "d": "2/2014"}, {"body": "oscarvgg confirm issue exists close guy thanks selvag", "d": "2/2014"}, {"body": "oscarvgg fixed container lookup controller previous jsbin updated working bin", "d": "2/2014"}, {"body": "oscarvgg working mean demonstrates issue demonstrate issue", "d": "2/2014"}, {"body": "stefanpenner issue nested collection views problem nt looking controller lookup factory", "d": "2/2014"}, {"body": "selvagsz noticed problem previous bin sorry nt tell got idea important thing", "d": "2/2014"}, {"body": "ping machty", "d": "2/2014"}, {"body": "yeah router refactor changed flattened hash params deeper hash params keyed route name seeing original approach broken unable handle cases two different params route hierarchy name clobber flattened version nt think every documented marked public api though understand utility cases sure really falls semver category nt really think reverse though perhaps better documented breaking change though honestly surprised many people know ituse", "d": "2/2014"}, {"body": "think number gotchas least finding", "d": "2/2014"}, {"body": "please let us know else finding nt fall category flattened params hash", "d": "2/2014"}, {"body": "machty true say model hooks running async think different behaviour hook executing running caused problems ca nt recreate one jsbin probably return promise hook", "d": "2/2014"}, {"body": "sounds completely crazy nothing like wouldshould ever snuck without someone noticing also update persistence library eg ember data ember model might changed whether promise returned api lem know isolate jsbin doubts one", "d": "2/2014"}, {"body": "machty using emberdata old version updated reverting makes problem go away hard one track impossible recreate jsbin think", "d": "2/2014"}, {"body": "unsure possiblepractical try bisect", "d": "2/2014"}, {"body": "im proposal problem clear would love hear others thoughts", "d": "2/2014"}, {"body": "close might need wait til htmlbars though form sexpr though", "d": "2/2014"}, {"body": "machty sexpr subexpression concept handlebars eg new query params feature could done", "d": "2/2014"}, {"body": "seems bad know big pain reproduce failing test case would tremendous help", "d": "2/2014"}, {"body": "jsbin issue trying recreate router bugs", "d": "2/2014"}, {"body": "ah ok mind quickly refactoring issue provide step step makes much easier digest step step step expected got", "d": "2/2014"}, {"body": "sure problem number places components losing context recreated issue problem component used different templates template component templates component declared like component clicked uses sentaction call action like component template action sent component template action sent stepped code reason action sent target triggeraction function click one items sidebar jsbin transition bulkactions route component send action triggeraction function opts opts opts var action optsaction get action target optstarget get targetobject actioncontext optsactioncontext", "d": "2/2014"}, {"body": "maybe illustrates better boxes left sidebar able call action via sendaction component component main body able call action via sendaction target triggeraction", "d": "2/2014"}, {"body": "still sure cause yet looks like component main outlet set causes find target mentioned try review detail tonight", "d": "2/2014"}, {"body": "undefined clicking component main outlet odd", "d": "2/2014"}, {"body": "ah think could extract jsfiddle failing test case help lay groundwork fix", "d": "2/2014"}, {"body": "bitten sure rationale", "d": "2/2014"}, {"body": "would good compromise accept either array multiple parameters way nt break backwards compatibility either get consistency two", "d": "2/2014"}, {"body": "likely duplicate various others unfortunately need love many little quirks bugs aware unfortunately bandwidth sort yet hopefully soon", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "still working provide really rock solid queryparams solution hope solve current issues cycle", "d": "2/2014"}, {"body": "see thanks effort hope queryparams restored betarelease builds soon", "d": "2/2014"}, {"body": "enabled default prior beta release builds first couple betas beta series accidentally left nonenabled feature flagged features build intentional corrected later betas sytong sorry mistake caused confusion hope caused much trouble definitely working hard get enabled default soon possible maybe even beta series", "d": "2/2014"}, {"body": "work final api fix bugs cropup feature available canary builds please note still need optin enabling feature flag ember loaded made mistake initial beta branching process working caused flagged features still present builds sorry caused trouble confusion anyone general feature flagged code included builds feature ready betarelease enabled default used without using environment flags", "d": "2/2014"}, {"body": "sharethis using enumeration without checking given common extending really update guard case configure ember extend prototypes", "d": "2/2014"}, {"body": "trek likely start making defproperties nonenumerable last time tried though emberstates broke pretty quickly backwards compatibility concern mine big", "d": "2/2014"}, {"body": "added windowenv envextendprototypes false still getting error", "d": "2/2014"}, {"body": "example note env set loading emberjs", "d": "2/2014"}, {"body": "mixonic", "d": "2/2014"}, {"body": "mixonic always feel like flags error try set late", "d": "2/2014"}, {"body": "set models fails say longer supports property observes assuming need able extend prototypes live error take share completely fix thank prompt replies", "d": "2/2014"}, {"body": "js function property foo becomes js embercomputed foo function", "d": "2/2014"}, {"body": "also beable disable array prototypes see", "d": "2/2014"}, {"body": "try using see ember swallowing error place line beginning application file also please try better error handling stuff added believe could also jsbin example behavior", "d": "2/2014"}, {"body": "isolate jsbin jsfiddle", "d": "2/2014"}, {"body": "jinx", "d": "2/2014"}, {"body": "partial jsfiddle code first time use jsfiddle nt know put webapi code webapi basically returns list city name id webapi controller would never get hit put emberonerror function error throw new embererror error still error raised", "d": "2/2014"}, {"body": "file using jqgrid seems respond error chrome console tells jquery method jqgrid caused aforementioned", "d": "2/2014"}, {"body": "updated jsfiddler using project however latest version jqgrid file locally", "d": "2/2014"}, {"body": "latest fiddle contains ember previous fiddle going dom manipulation route happen view suspect reorganize code case much better situation far nt appear like bug ember ill gladly reopen demonstrated suggestion would open stackoverflow question accomplish correctly really good venue knowledge sharing issue tracker unfortunately great feel free cross link", "d": "2/2014"}, {"body": "last fiddle last post source used include jqgrid nt part original question sorry confusion relevant fiddler still actually nothing route array names part starting template ember code nt really anything render grid content perhaps misunderstood comment", "d": "2/2014"}, {"body": "sorry controller work view also nt believe exists api ember emberdata", "d": "2/2014"}, {"body": "moved everything view still request nt sent web service something disabled function jqgrid latest jsfiddler code", "d": "2/2014"}, {"body": "unconsumed computed properties trigger observers never computed property observers fire even dependent keys change think value changing one unknown value another nt usually affect application code computed properties almost always observed time fetched example get value computed property put dom draw observe update dom property changes need observe computed property nt currently retrieving get method also use prototype extension fire observer method init assuming cp value observers usually", "d": "2/2014"}, {"body": "thanks much explanation luke big help feb pm luke melia notifications githubcom wrote closed reply email directly view github", "d": "2/2014"}, {"body": "actually think actionable one wycats motivations emberdata identity map default scenario pulling data fetched local cache needs work case refreshing said local cache example clicking backbutton rerequest transition smooth one would expect clearly approaches need good solution managing stale data would big win apps rather going emberdata route may want consider provide strategy set strategies mitigate problem", "d": "2/2014"}, {"body": "often see sort thing people ditch model hooks load bunch stuff like setupcontroller something like means paint multiple times async data comes vs waiting destination route promises resolve single paint", "d": "2/2014"}, {"body": "interesting perhaps need improving performance avoiding rerequests people weird async stuff model hooks might try defer updating dom state settled avoid screen flicker", "d": "2/2014"}, {"body": "sounds undetectable probably undesirable wrong provide escape valve folk ca nt fit every last thing means necessarily opting repaints async involved maybe get better idea approach nt work contact info authors", "d": "2/2014"}, {"body": "contact info authors nt semirelated nt currently way distinguish backbutton transitions forward transitions might cases expensive things forward transitions model reloading animations etc would nt want user hits back button", "d": "2/2014"}, {"body": "joliss ya even identity map invalidated normal transitions backbuttons would fix specific issue", "d": "2/2014"}, {"body": "think key really minimizing requests instead pretend like request happened instead pause made equally janky experience optimizing requests make big difference", "d": "2/2014"}, {"body": "joliss absolutely rely described weird async behavior implement lazyloading functionality applications guidelines outbound data requests route model hook override necessary deal properly setting values anything single request means gets overwritten kick async loading data hook nt return promises hook make sure set things properly deal race conditions results primary render blocks core data loaded lazilyloaded components load css transitions win race beat promises great present first render outbound requests made parallel one place look data loaded patterns like big part embernodata solution felt need something handling sort async load nonessential data cleanly deals resulting race conditions aside use exclusively redirection machty put late cycle use case anyway", "d": "2/2014"}, {"body": "think need way freeze views animated properly back transition ios smooth two uiviewcontroller instances also makes swipe gesture possible ember instant new loading substates used data framework like ember data provides cached data smooth animate one associating directionality transitions could helpful animations joliss example relayouts styling mistakes image dimensions known image finishes loading total lack animations destroys experience compared ipad app", "d": "2/2014"}, {"body": "ember going get first class animation support including directionality mentioned majorbreakfast probably wo nt land months hugely challenging probably substantial chunk code nathanhammond seen", "d": "2/2014"}, {"body": "machty glad hear thinking stuff basically area experise routerviewlayer definitly super hard get right without doubt", "d": "2/2014"}, {"body": "majorbreakfast freezing views actually part plan idea actually disconnect bindings enable animations", "d": "2/2014"}, {"body": "think holy grail ios swipe gesture fixed duration user input interruptible ember nt support directly nt stand way either", "d": "2/2014"}, {"body": "machty loading behavior defined well advance new loadingerror substate stuff landing loading routes actually became usable thanks actually nt use promises return value instead solved loading templateview layer everything css blocks computed properties actually made relatively easy support partially moving away behavior could move async additional data nt block render calls hook continue life could fire completed hook earlier lifecycle care nt gets called lifecycle hook chose abuse hook define pattern consistent throughout codebase", "d": "2/2014"}, {"body": "bug questions please use stack overflow much better venue knowledge sharing", "d": "2/2014"}, {"body": "likely observing observed consider making", "d": "2/2014"}, {"body": "fact observing state speech balloon component intended wrap view decorate shadow little triangle rendered svg thinking size inner view would drive size balloon thus bunch svg attributes bound computed properties need able call getboundingclientrect inner view element naturally nt work well inner view nt dom hoping able get around computed properties bail inner view nt dom recompute component state changes alternative way accomplish without dramatically restructuring things", "d": "2/2014"}, {"body": "nt observable likely consider moving although suspect breaking change also error message nt good totally improve would interested pr improving error message second question stackoverflow much better venue sort help suggest cross linking issue", "d": "2/2014"}, {"body": "work around", "d": "2/2014"}, {"body": "stackoverflow much better venue asking help mind opening question please feel free cross link", "d": "2/2014"}, {"body": "cc seems related optimization rerender route transitions models route hierarchy changed", "d": "2/2014"}, {"body": "yes intentional new view object gets instantiated see code changes reason view gets pick template context wants render ca nt tell template context unchanged instantiating view way avoid creating unused view object would change view api views longer dynamically override things probably worth", "d": "2/2014"}, {"body": "thanks seems intentional likely change time soon closing", "d": "2/2014"}, {"body": "think strongly consider take another approach prevents view needing instantiated preserving optimization", "d": "2/2014"}, {"body": "seems common theme walking prototype anyone", "d": "2/2014"}, {"body": "think exists path defer actual creation views till much much later merely passing view factory around till last moment likely sort enable sorting several quirks", "d": "2/2014"}, {"body": "hmm ok still learning ember code base trying wrap head around changing view template context model change specific use case example jsbin something help get better idea something like would expect override rendertemplate route enforcing acceptable solution equality check views could moved route render method", "d": "2/2014"}, {"body": "likely related dig fix shortly", "d": "2/2014"}, {"body": "yeah ran ca nt break jsbin ucanam streak", "d": "2/2014"}, {"body": "looks like fixed", "d": "2/2014"}, {"body": "parrish actually unrelated error getting issue fixed", "d": "2/2014"}, {"body": "ah seen commit fixed build assumed culprit thanks looking", "d": "2/2014"}, {"body": "yeah build never failed publishing calling would cause transpile step ensures called", "d": "2/2014"}, {"body": "fixed applying monkey patch ember javascript var willdestroy viewwilldestroy viewwilldestroy function containerresolvecacheremove controllerfullname controllerdestroy willdestroycall", "d": "2/2014"}, {"body": "imo nt correct approach targets problem", "d": "2/2014"}, {"body": "according would seem controller singleton hence wo nt destroyed", "d": "2/2014"}, {"body": "docs model property path specified new instance controller created used multiple times name case would want tear controller tear controller singleton usage", "d": "2/2014"}, {"body": "could labeled bug correct pile issues", "d": "2/2014"}, {"body": "timevans labeled", "d": "2/2014"}, {"body": "stefanpenner heart", "d": "2/2014"}, {"body": "knownasilya open", "d": "2/2014"}, {"body": "yeah created could nt find delete submitting pr", "d": "2/2014"}, {"body": "either handlebars date andor something wrong canary enabled query params feature", "d": "2/2014"}, {"body": "jonnii thanks reply totally new emberjs like much trying learn using starter kit downloaded emberjscom please let know enable query params feature", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "believe also need beta branch", "d": "2/2014"}, {"body": "definitely use canary builds number bugfixes canary make beta since feature enabled default", "d": "2/2014"}, {"body": "eldilibra find working getting right issue still exists please provide jsbinfiddle demonstrating issue", "d": "2/2014"}, {"body": "thanks checking selvag whip fiddle soon time", "d": "2/2014"}, {"body": "behaviour test expected like computed properties created lazily initially add sorted array insert beforehand first expectation pass test changing observed properties two entries fires twice entry property change sorted item results removal addition length decrements increments problem nt trigger observers watched key set value observers trigger watched key cp whose depkey changed", "d": "2/2014"}, {"body": "lukemelia understood kselden problem length observer would nt fire item readded different test lukemelia yes misunderstood something", "d": "2/2014"}, {"body": "indream thank reporting fixed", "d": "2/2014"}, {"body": "opened pull request review deep knowlage codebase sure better way fix could give feedback", "d": "2/2014"}, {"body": "semantics identical said think expected semantics even difference important someone pretty nonobvious", "d": "2/2014"}, {"body": "pretty strange diverges immediately hmm", "d": "2/2014"}, {"body": "jamesarosen also find conceptually confusing list default dk", "d": "2/2014"}, {"body": "originally opened surprised permanently diverged implementation could set would reconverge soon upstream changed probably dangerous figure relying behavior likely answer keep global state around apps since apps use ember router amp container create tear views controllers user navigates around", "d": "2/2014"}, {"body": "ember update system works per property basis changing object merely value trigger updates change dependent key everything works expected", "d": "2/2014"}, {"body": "nt know name property added feb pm stefan penner notifications githubcom wrote ember update system works per property basis changing object merely value trigger updates change dependent key testhi everything works expected reply email directly view github", "d": "2/2014"}, {"body": "guess workaround would increment property every time add change property observe", "d": "2/2014"}, {"body": "yes would responsibility object propagate information believe concept maybe explored something support today", "d": "2/2014"}, {"body": "another idea use custom notifies change upon setting individual property content", "d": "2/2014"}, {"body": "rjackson yes also works level deep good suggestion", "d": "2/2014"}, {"body": "rjackson ca nt seem get working js resultgroups emberobjectproxyextend setunknownproperty function key value thissuper key value create content emberobjectcreate", "d": "2/2014"}, {"body": "rjackson something wrong", "d": "2/2014"}, {"body": "think better stack overflow question", "d": "2/2014"}, {"body": "stefanpenner right", "d": "2/2014"}, {"body": "seems like duplicate slindberg confirm", "d": "2/2014"}, {"body": "rjackson think different issues without digging ca nt say sure deals links current route falsely marked active whereas problem links routes farther current route chain getting marked active", "d": "2/2014"}, {"body": "clozedbai", "d": "2/2014"}, {"body": "lfalin probably kurko give us insights also might right place issue related docs hence emberwebiste", "d": "2/2014"}, {"body": "likely better stackoverflow question please feel free cross link", "d": "2/2014"}, {"body": "stefanpenner asking programming howto question reporting conflicting information documentation nt want hurt anyone feelings one biggest complaints seen ember vs angular api changes often hard find reliable uptodate information use fine api change think reasonable expect least official documentation would consistent sync changes also mentioned happy fork docs make edits nt appear enough authoritative information choose one way another like ember would love see widely adopted happy help abuiles right place put issue understanding docs autogenerated code comments repo seemed appropriate place report issue", "d": "2/2014"}, {"body": "lfalin ember stable api really nt changed since maybe additions nt believe valid concern anymore issue seems related emberdata working hard also reach stability ember property concern guides please open issue website repo issue emberdata related api docs please open issue ember data repo", "d": "2/2014"}, {"body": "lfalin right right place put issue understanding docs autogenerated code comments repo seemed appropriate place report issue stuff api auto generated emberdata fixed stuff guides emberjswebsite would say let go easier understand nt confuses people stuff", "d": "2/2014"}, {"body": "thanks everyone nt realise guides emberdata separate repositories one sorry still new ember great framework though", "d": "2/2014"}, {"body": "problem trying keep stuff organized", "d": "2/2014"}, {"body": "fwiw defined", "d": "2/2014"}, {"body": "thanks found code well nt immediately obvious least", "d": "2/2014"}, {"body": "closing emberjswebsite", "d": "2/2014"}, {"body": "hjdivad really need port sortable stuff array computed", "d": "2/2014"}, {"body": "use embercomputedsort want sort properties itemcontroller", "d": "2/2014"}, {"body": "stefanpenner would love blocked order support full backwards compatibility", "d": "2/2014"}, {"body": "blocked decision core backwards compat existing core macros", "d": "2/2014"}, {"body": "levelbossmike thanks jsbin", "d": "2/2014"}, {"body": "suppose bug somehow object behaves strange way either use return different array", "d": "2/2014"}, {"body": "right use workaround quite unreadable", "d": "2/2014"}, {"body": "michlord maybe example expects record already loaded store fix example make explicit please open issue cc trek", "d": "2/2014"}, {"body": "ok", "d": "2/2014"}, {"body": "singingbush could please open issue emberdata", "d": "2/2014"}, {"body": "ok recreated", "d": "2/2014"}, {"body": "singingbush please close one", "d": "2/2014"}, {"body": "closing favor alternate issue", "d": "2/2014"}, {"body": "correct behaviour query params tied properties controllers property changed controller query param remains query params guide gives detail clearing query params", "d": "2/2014"}, {"body": "guides stored repo actual file could send pr fix", "d": "2/2014"}, {"body": "ah look hard enough submitted", "d": "2/2014"}, {"body": "pain go back one year", "d": "2/2014"}, {"body": "smiley", "d": "2/2014"}, {"body": "ya serious regression workaround follows", "d": "2/2014"}, {"body": "stefanpenner applied shit broken wan na pair wink", "d": "2/2014"}, {"body": "thread excites given experience ember year old", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "considered mixing angular", "d": "2/2014"}, {"body": "one word ie", "d": "2/2014"}, {"body": "scshepard prefer netscape imo", "d": "2/2014"}, {"body": "ha used netscape twenty seconds deleted itha date sun feb notifications githubcom emberjs noreplygithubcom cc scshepard hotmailcom subject emberjs fear ember become fun scshepard prefer netscape imo reply email directly view github", "d": "2/2014"}, {"body": "oh god one year ago nt even knew ember", "d": "2/2014"}, {"body": "see container nt like component xx longer unsure mean components looked container via tried using componentfactory lookup component registered helper manually appending component view nt invoke didinsertelement function registering handlebars helper add factory container thus call find since registered container reason fire called custom component found created empty component wired use template words never used modified jsbin use initializer register component container", "d": "2/2014"}, {"body": "rjackson thanks clarifying registration via problematic library code use register components programmatically place probably u remember appropriate way achieve without requiring users add initializers", "d": "2/2014"}, {"body": "number libraries add initializers library required consumers include anything special seems perfectly acceptable examples", "d": "2/2014"}, {"body": "thing", "d": "2/2014"}, {"body": "reschedule google outage away traveling laid low nasty cold coming", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "would mind submitting issue write pr thanks", "d": "2/2014"}, {"body": "ah", "d": "2/2014"}, {"body": "would like prevent initializers running till test phase", "d": "2/2014"}, {"body": "curious run test driving app code need special treatment like feeling test code", "d": "2/2014"}, {"body": "personally usually handle form asynchrony application route get nice loading template going possible similar things initializers least use cases felt somewhat place maybe different", "d": "2/2014"}, {"body": "initializers run upon initialize application subsequent call put together quick jsbin illustrate toranb saying would prefer initializers run upon", "d": "2/2014"}, {"body": "may also meant test code running initializer async finished easiest way handle add call module setup routine individual test nt another example jsbin", "d": "2/2014"}, {"body": "rjackson corrected looks like appreset work mentioned initial complaint updated jsbin show example rsvpall never actually fires test code runs even using wait mentioned chance way calling embertesting wo nt wait rsvp finish odd reason", "d": "2/2014"}, {"body": "toranb following code incorrect likely addition intializer likely also likely stackoverflow post", "d": "2/2014"}, {"body": "closing think initializers alright testing scenarios", "d": "2/2014"}, {"body": "epic fail part sorry waste everyone bandwidth", "d": "2/2014"}, {"body": "toranb worries gave good excuse make jsbin uses async initializers smile", "d": "2/2014"}, {"body": "also definitely think usage separate class like example wonderful idea allows test initializer code simple stubs", "d": "2/2014"}, {"body": "finally got jsbin working include test embertesting package regression purposes nothing else provide good example others might follow looked embertesting tests nt see anything like alsowait required setup resolve rsvp like metioned rjackson thanks help guys", "d": "2/2014"}, {"body": "indream talked machty irc saw bug old jsbin well seems legit want throw together pr nt want nt time let know put together pull request want get credit since posted issue figured fix", "d": "2/2014"}, {"body": "machty dunno explicitly defined routes like similar would nt regex exclude list available routes assertion would swap one bug another", "d": "2/2014"}, {"body": "also since implicit routes actually added recognizer technically link nt list though end probably probably bug well though since transitioning error route shows notsopretty dummy path sounds like nt recognized names instead new private handler would used transition would kill two birds one stone", "d": "2/2014"}, {"body": "machty sure still applicable issue tried hand solving anyway used computed property maintain list friendly route names filtering error loading route names without iterate entire list went route performance reasons noticed errorloading routes always first offsets existing route name array get chance appreciate quick review see point", "d": "2/2014"}, {"body": "avaragado probably investigate bit however think error view layer note jsbin problem body invocation include tag rather immediately outputting tags seem specific jsbin related real problem", "d": "2/2014"}, {"body": "avaragado another way work around problem entire app enable range api following note must come load ember seems bug metamorph table handling", "d": "2/2014"}, {"body": "look later feeling ebryn kselden may able help problem seems entire body rendered buffer process use metamorph function wind start tags end tags different parents table implicit tbody respectively metamorph also first child view problem manifests first record able work around problem omitting tbody tags templates would nt recommend falling back range api unless fixing templates impractical", "d": "2/2014"}, {"body": "ok thanks", "d": "2/2014"}, {"body": "cc machty", "d": "2/2014"}, {"body": "closing favor pr", "d": "2/2014"}, {"body": "machty waiting", "d": "2/2014"}, {"body": "discussions w wycats", "d": "2/2014"}, {"body": "finally managed create jsbin shows initially joe member party amp list bottom shows members party open console tab issue upper list updates list nt although theres explicit error thrown described think result related problem edit might bug probably unrelated issue even happens without sorting part", "d": "2/2014"}, {"body": "hjdivad first glance appears similar issue true propagating extra change notifications coming emberdata fixing involve good time consuming refactor computed properties work likely somewhat breaking also seems like issue array computed reduce computed exists brought light extra change events ultimately need fix sides problem shortterm seems like arraycomputed target", "d": "2/2014"}, {"body": "seems environment show bug little hard reproduce thus hards diagnose helps offer life vncsession examine original setting time", "d": "2/2014"}, {"body": "fwoeck problem jsbin inverse relationship updated problem noted problem ember data nt think completely resolved single source truth done relationships meantime many many relationships think need responses include updates sides relationship see example although using rest active model adapters able include sides payload stefanpenner please correct errors", "d": "2/2014"}, {"body": "fwoeck upon reflection unsure posted jsbin reflects original problem would probably good walk vnc session kindly offered see original issue try set something email", "d": "2/2014"}, {"body": "curious anything come legit bug good workaround", "d": "2/2014"}, {"body": "longer issue latest build assume got handled elsewhere", "d": "2/2014"}, {"body": "thomassnielsen think could take shot", "d": "2/2014"}, {"body": "pretty busy time put time list wo nt intervene someone though", "d": "2/2014"}, {"body": "wagenet thomassnielsen took shot providing docs", "d": "2/2014"}, {"body": "sounds good", "d": "2/2014"}, {"body": "seems like thread connected ember extension issue", "d": "2/2014"}, {"body": "braddunbar actually works fine latest chrome could confirm still happens let us know browser adjust jsbin breaks", "d": "2/2014"}, {"body": "hi jayphelps thanks response probably mentioned unable break jsfiddle issue requires navigating directly using router already correct fragment navigates without issue however retrieving fragment locationpathname page load value using chrome nt match", "d": "2/2014"}, {"body": "history location implementation requires server understands ca nt test jsbin jsbin giving", "d": "2/2014"}, {"body": "yep yep used node server debug locally", "d": "2/2014"}, {"body": "thanks smiley", "d": "2/2014"}, {"body": "seeweer good question let see get clarification", "d": "2/2014"}, {"body": "gon na toss entirely resolved issue promised would nt spend time fighting anyway sad", "d": "2/2014"}, {"body": "hello stefanpenner update", "d": "2/2014"}, {"body": "closed included beta series", "d": "2/2014"}, {"body": "closing favor pr", "d": "2/2014"}, {"body": "hey team started using ember working getting pure js client working google auth using historylocation discovered historylocation geturl respecting locationhash part setting history current geturl drops locationhash fragment first thoughthack inject location hash url breaks router parser tries match full string instead generating path request may natural update routing engine ignore location hash routing historylocation use sure effects design hashlocation router second though alter location hash query param works nt break routing parser issue wanting flush queryparams url really happy erase hash params history location need consistent way access historylocation lasthash hope makes sense glad see worked new emberjs aware design protocol team follows years web experience excited framework", "d": "2/2014"}, {"body": "robotarmy sounds like similar issue mmun working supporting type scenarios phases first classes strip hash content nt route related work done ready using would access would normally start working emberidiomatic way accessing hashes supports doubled hashes eg let support well", "d": "2/2014"}, {"body": "digging ready using historylocation would access would normally windowlocationhash", "d": "2/2014"}, {"body": "jayphelps yes similar", "d": "2/2014"}, {"body": "robotarmy never used google hashed based oauth flow access hash via ember app actually runs router strips google oauth library allows provide access token via javascript would decent workaround lands demo", "d": "2/2014"}, {"body": "good thought continue hack way fri jan pm jay phelps notifications githubcomwrote robotarmy never used google hashed based oauth flow access hash via windowlocationhash ember app actually runs router strips google oauth library allows provide access token via javascript would decent workaround lands demo reply email directly view github modern yoga vs traditional yoga", "d": "2/2014"}, {"body": "rjackson appreciate profound explanation thank", "d": "2/2014"}, {"body": "closing since pr", "d": "2/2014"}, {"body": "looks like fixed", "d": "2/2014"}, {"body": "yes closing", "d": "2/2014"}, {"body": "joelkallman filmknurd macool ditto", "d": "2/2014"}, {"body": "updated jsbin could nt reproduce tried also tried mode firefox windows old fiddle one seemed fine", "d": "2/2014"}, {"body": "also reproduce going close let reopen find way isolate reliably reproduce", "d": "2/2014"}, {"body": "bit haphazardly renamed thinking make disappear causing exact error upon template teardown", "d": "2/2014"}, {"body": "hit repro usecase", "d": "2/2014"}, {"body": "news fiddle recent build ember maybe workaround", "d": "2/2014"}, {"body": "friendly psa already acknowledged issue said working unnecessary", "d": "2/2014"}, {"body": "action believe run annoying issue workaround would much appreciated", "d": "2/2014"}, {"body": "old issue confirm case shouldjs well tacking seems best solution", "d": "2/2014"}, {"body": "ran problem ember source beginning default serialize override probably want", "d": "2/2014"}, {"body": "trying use zurb foundation clearing lightbox running similar issue mien seems stem js use next prev css better workaround messing foundation code know model wo nt changing would great option skip metamorph tags", "d": "2/2014"}, {"body": "end ended using embercollectionview nt seem litter metamorphs based", "d": "2/2014"}, {"body": "see issue happening", "d": "2/2014"}, {"body": "stefanpenner see click archive posts links source code gist new bug time double rooturl happens route model hook returns promise returning array works expected however model async transition results double rooturl eg blogblogpostsarchive archive route w async compared blogposts index route asyc", "d": "2/2014"}, {"body": "indeed problem canary tested beta canary problem starts canary take look see find changed", "d": "2/2014"}, {"body": "digitaltoad revision beta", "d": "2/2014"}, {"body": "tested beta joshua borton wed feb pm jay phelps notifications githubcom wrote digitaltoad version beta reply email directly view github", "d": "2/2014"}, {"body": "jayphelps took changes updated example app shared fix linkto url see looks good", "d": "2/2014"}]