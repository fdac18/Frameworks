[{"title": "inflector error", "body": "using ember emberdata file appinitializersinflectorjs var inflector emberinflectorinflector singularize repositoriosbens repositoriosbem wrong use following repositoriobem bem var inflector emberinflectorinflector return right hope help making ember better better cheers antonio", "num": "15097", "d": "3/2017"}, {"title": "emberwarn throws deprecation optional argument specified", "body": "following docs argument optional specified deprecation emberdebugwarnoptionsmissing thrown following docs syntax work", "num": "15096", "d": "3/2017"}, {"title": "infinite loop", "body": "using register pattern register child component parent throwing error one child constructed parent receives attributes want wait async work complete rerender manually ember works fine switching ember get infinite loop twiddle work crash tab switching", "num": "15095", "d": "3/2017"}, {"title": "unhelpful rerender glimmer error message", "body": "polling server changes using emberconcurrency new data arrives seeing view nt rerendered certain ember bug rather something silly given initial render works fine occurs new data added seems like might problem glimmer dom diffing expected behavior helpful error message would certainly appreciated full traceback error failed execute insertbefore node node new node inserted child node error native domchangesinsertbefore domchangesinsertafter listblockopcodeevaluate updatingvmexecute renderresultrerender rootstatethisrender runintransaction interactiverendererrenderroots interactiverendererrenderrootstransaction defaultdispatch dispatcherror invokewithonerror flush flush end anonymous function", "num": "15092", "d": "3/2017"}, {"title": "ember action handlers fire twice ie edge", "body": "jsbin jsbin instead embertwiddle ie click red yellow blue chrome notice color text changes green reflect selected state try fiddle ie change look jsbin console pane see event handle logged invoked twice first time toggled second back false happen reason happens element action handler also understand happening need first look eventdispatcherjs notice looping element attributes looking action handler exact order happens click eventdispatcher finds element action handler action handler invoked toggles state changes dom adding class dom change shifts action handlers position action handler returns next loop moves finding exact handler recalls screenshot first invocation action handler screenshot second invocation action handler works ember somewhere along way something changed", "num": "15076", "d": "3/2017"}, {"title": "typeerror fire replacewith route", "body": "typeerror fire replacewith error action route need refresh route changed query params model promise rejected route action error", "num": "15072", "d": "3/2017"}, {"title": "allow running acceptance tests without jquery", "body": "part work work performed provide consistent jqueryfree test helpers work integration acceptance found acceptance tests nt work without jquery reason least file task featuredetect jquery skip lines present interested see remove jquery emberapp commit", "num": "15063", "d": "3/2017"}, {"title": "project svelte deprecation introduction hitlist", "body": "wanted need know versions ember deprecations introduced please simply report version specific id introduced ensure nt overlapping efforts please state deprecation investigating work eventual introduction svelte builds mechanism say strip code deprecated features however enable rangebased decision need start range ways find deprecations method codebase tags changelog deprecation ids containerlookupfactory emberapplicationinjectedcontainer emberapplicationappinstanceregistry emberapplicationregistryresolverasfunction emberapplicationappinstancecontainer emberapplicationappinitializerinitializearguments emberapplicationvalidatetype emberdebugdeprecateoptionsmissing emberdebugdeprecateidmissing emberdebugdeprecateuntilmissing emberdebugwarnoptionsmissing emberdebugwarnidmissing emberviewscomponentdefaultlayout emberroutingviewscontrollerwrappedparam emberhtmlbarsmakeboundhelper emberhtmlbarsemberhandlebarssafestring embermetalbinding emberviewsdidinitattrs embermetalrequired embermetalobserverargumentorder embermetalimmediateobserver emberviewsrenderdoublemodify emberroutingrouterresource emberroutingtoplevelrenderhelper emberruntimecontrollerproxy emberruntimeactionhandleractions emberruntimeenumerablecontains emberruntimewillmergemixin emberruntimefrozencopy emberruntimeenumerablecontains emberruntimefreezableinit emberstringutilsfmt embertemplatecompilerdeprecaterendermodel embertemplatecompilerdeprecaterender embertemplatecompilertransforminputontooneventdynamicvalue embertemplatecompilertransforminputontooneventnoaction embertemplatecompilertransforminputontooneventnormalizedon embertemplatecompilertransformoldbindingsyntax embertestingtestwaiters emberviewslifecyclehookarguments emberviewsrendertoelement emberviewsdidinitattrs embermetalemberk embermetalemberbackburner", "num": "15062", "d": "3/2017"}, {"title": "globbed dynamic route segments nt urldecoded hook params", "body": "using current versions emberembercli seems similar issues first addressed closed favor pr closed existence patch afaics created urlencoding address query params full example given import ember ember export default emberrouteextend model params let filequery path decodeuri paramspath consolelog file route params filequery return thisget store queryrecord file filequery path tmpmy path tmpmy file spaces", "num": "15059", "d": "3/2017"}, {"title": "quest decouple ember tests globals resolver", "body": "lifted introduction ember test suite coupled default globalsmode resolver example tests often make controller available application tests often use set template onto even tests use set location configuration ways passing things ember considered part globalsmode resolver api far future date would like drop default resolver globals api ember nearly ember apps built using embercli applications minor tweaks need default resolver already use emberresolver however subclass default resolver retains globals loading fallback behavior first step many toward removal globalsmode default resolver refactor ember test suite reliant upon end introduced configurable resolver mock used ember tests ideally classbased testing abstraction added test porting effort example js internaltesthelpers provides several testcase classes import modulefor applicationtestcase internaltesthelpers pass anonymous class extending testcase modulefor modulefor linkto component class extends applicationtestcase defining es class test module may override apis parent class call super needed even create whole new test case internaltesthelpers format tests property class starts test test able inserted dom router present inside test class instance example thisaddtemplate application prop add template test resolver add controller would use specifier thisadd controller application controllerextend replaces older test styles appapplicationcontroller would set exactly api changes based class extended course real linkto test example thisaddtemplate application roughly taken linktotestjs default mock break applicationtestcase subclass abstractapplicationtestcase creates application options default resolver modulebasedtestresolver modulebasedtestresolver subclass testresolver modulebased resolver use loading substates feature globals mode successfully integrated besides difference goal migrate tests ember implicitly rely globals resolver improved testing style note aim really use test resolver tests may avoiding implicit default resolver registering factories registry tests also migrated mock resolver help figuring tests use default resolver pass little tricky since well default identify test uses default resolver still must ascertain test testing default resolver dependency implicit tests using default resolver candidates refactoring testing interaction resolver running call spits list tests possibly using globals resolver narrowed list files look like good candidates refactoring ember tests using globals resolver mission choose accept pick file list port old style test uses classbased testing framework use global resolver successfully converted file use classbased testing harness may use though fact already test cases might appropriate however classbased systems default add modify test case sure defaults test resolver reliant upon globals mode resolver unless part file actively testing default global subset tests optin global resolver example see skirt matter using registry factories unless test actively testing interaction registry test resolver preferred following useful resources journey testresolverjs testcases folder context examples properly migrated files simple example conversion josemarluedke plus note used tests glimmer test issue examples classbased tests poke around codebase well please see google spreadsheet ember tests using globals resolver learn files make good candidates work add github handle date attempting refactor advanced jedi may find refactoring opportunities included spreadsheet please feel free add open pr thank help attending emberconf perhaps pick tab", "num": "15058", "d": "3/2017"}, {"title": "glimmer vm broke hot reloading", "body": "tested emberclihotloader today ember found longer able clear templateor compiler cache like could previously ember quick rundown hot loader works gt clear cache find invoke rerender nothing magical ember takes new version glimmer vm wondering help us identify clearing cache tried additional steps tonight including see screenshot clearing also still luck step code confirm executing found ember first guess something changed glimmer nt yet clearing full example app show broken found help would amaz thank advance", "num": "15057", "d": "3/2017"}, {"title": "queryparams working locationtype set hash", "body": "unable access ember queryparams locationtype environmentjs file set hash controller route setup url something like output locationtype set auto output locationtype set hash undefined undefined wondering able access queryparams locationtype auto locationtype hash", "num": "15056", "d": "3/2017"}, {"title": "uncaught typeerror function", "body": "hi geting following error uncaught typeerror function objectapplystr objectsendevent notifyobservers propertydidchange chainwatchersnotify chainsdidchange objectpropertydidchange objectset classset occurs around project different locations example inside application controller property isloggedin function thisget sessionisauthenticated let controller return thisstorefind user thisget sessionsessionauthenticateduser function user controllerset user user return true else thisset user null return false property sessionisauthenticated sessionsessionauthenticateduser thisset user null controllerset user user causing error anyone ideas thanks edit also errors following", "num": "15053", "d": "3/2017"}, {"title": "leadership embercli provide ember documentation", "body": "addresses project leadership please leave issue open addressed least seen relevant people lost excessive amounts time documentation provided guidesemberjscom eg tutorial finally dropped ember evaluation list ember back eval list form embercli nice reallife docs without tdd fixation straight business result working application suggestion ember leadership let embercli provide primary documentation within guidesemberjscom would greatly enhance things minimum please decency yes decency provide link embercli tutorials simply far better quality ones guidesemberjscom nt know political issues teams ember core embercli one thing know ember documentation major weakness embercli documentation strength please act affects emberjsguides lazaridiscomjseval", "num": "15052", "d": "3/2017"}, {"title": "sticky query params failing engine loading template", "body": "pr ended presenting issues application updated emberengines look like might existing known issue see however experiencing engine upgrading figured worth opening new issue created failing test reproduces issue quick explanation example failing test case let say file engine controller currently set nondefault value also slowloading model loading template also template contains link profile navigate link contain queryparameter expected best could figure initial transition query parameter cache key includes contain model case fact test pass navigate tricks qpcache key", "num": "15051", "d": "3/2017"}, {"title": "set property element object object getter", "body": "hi folks upgrading embercli embercli getting following error app loads tried creating simplified embercli app reproduce issue could nt reproduce issue simplified app best tell something changed insight could cause thoughts resolve thanks everyone output", "num": "15047", "d": "3/2017"}, {"title": "remove internaltesthelpers builds", "body": "search", "num": "15046", "d": "3/2017"}, {"title": "see cleaning orderedset", "body": "source edited serabe locks consent see latest information", "num": "15041", "d": "3/2017"}, {"title": "attempted access nodetype factory manager created container factoryfor nodetype member factory manager", "body": "running test embersource emberdata embercli", "num": "15033", "d": "3/2017"}, {"title": "use action actionname tagless component", "body": "hello currently possible send action component tagname set null want use component wrapper another component could able send action", "num": "15031", "d": "3/2017"}, {"title": "ember requires service stubbing change tests", "body": "getting error recent update maybe nt like service named cleared travis cache reran master verify ember causing", "num": "15030", "d": "3/2017"}, {"title": "context lost inside function", "body": "throws gone stack overflow asked around see something wrong everyone seems think work bug", "num": "15026", "d": "3/2017"}, {"title": "ssl error chrome emberjscom", "body": "hi got error normal", "num": "15025", "d": "3/2017"}, {"title": "ensure master builds useless vendored glimmerdi code", "body": "landing probably eager vendored dependency may included builds include builds unless used likely toggled feature flag", "num": "15024", "d": "3/2017"}, {"title": "override default datastore specific route model", "body": "possible somehow change store specific route eg work overriding seem possible default store used either way work using unique key custom store works fine vendor plugins rely available request data wrong store ps using service extend datastore custom adapter serializer works seems right however nt found documentation adding store sure using way intended", "num": "15023", "d": "3/2017"}, {"title": "embera seems modify array instance", "body": "seeing bug ember simple auth dummy app simplabsembersimpleauth seems caused fact enumerableuniq tries modify provided array seems affect addon projects prototype extension disabled mostly assumption though reproduction steps js var array objectfreeze array embera array gt uncaught typeerror add property nextobject object extensible objectdefineproperty applymixin mixinprototypeapply objecta eval eval init classinit new class functionclassmixinpropscreate classbuildquerystring classbuildurl seems fail addon dummy apps real apps cc", "num": "15020", "d": "3/2017"}, {"title": "asserting error thrown longer works", "body": "following test longer run start use saw mocha users faced nearly problems question slack archive repro", "num": "15013", "d": "3/2017"}, {"title": "cache factorymanager instances", "body": "factorymanager likely cached seems strange create new ones instance addition could cache result nt need create many either cc chadhietala", "num": "15007", "d": "3/2017"}, {"title": "emberroute controllerfor api reference seems wrong", "body": "controllerfor api documentation says returns resolved model current route parent ancestor route route hierarchy seems wrong returns associate controller nothing realted model guess", "num": "15004", "d": "3/2017"}, {"title": "embercomponent attributebindings disappeared api docs", "body": "docs least one property disappeared component api docs", "num": "15003", "d": "3/2017"}, {"title": "drop emptyobject use objectcreate null", "body": "seems added workaround performance couple drawbacks ember also comes performance penalty recent chrome versions ie current channels include cl tell often used create objects supposed used dictionaries least function constructors always create fast mode objects means ember probably wastes metadata memory browser plus time let engine figure essentially transition objects dictionary mode objects always creates dictionary mode object start since aforementioned cl landed compatible stuff allocation roughly par performance current chrome channels like trigger discussion get rid cc krisselden stefanpenner", "num": "15001", "d": "3/2017"}, {"title": "error trying disable input readonly value", "body": "hello trouble trying disable input field readonly value error get assertion failed modified value twice single render rendered component textfield modified component textfield twiddle shows error better explain write anything input press enter watch console", "num": "14996", "d": "3/2017"}, {"title": "application crashes uses whitespace control", "body": "hi found issue using whitespace control templates happens using helper inside block change value break wo nt break example embertwiddle reproduce remove whole line add new line textarea open console get remove whitespace control helper breaks", "num": "14993", "d": "3/2017"}, {"title": "fix de serializequeryparam behavior enabling", "body": "de serializequeryparam behavior currently broken due changes made facilitate new public router service help adhere methods specific performance semantics namely instantiating controllers part qp computation need fixed enable feature", "num": "14992", "d": "3/2017"}, {"title": "embercomputedrejectby function", "body": "hi possible add computed properties already thanks", "num": "14988", "d": "3/2017"}, {"title": "linkto helper functioning ember data model relationship", "body": "attempting use helper model relationship property assertion error thrown link fails display recreated twiddle specifically previously worked earlier throws error", "num": "14984", "d": "3/2017"}, {"title": "triple braces sometimes render wrong", "body": "following template sometimes results rendering content reproduction reproduction first click click works directly click", "num": "14978", "d": "3/2017"}, {"title": "major memory leak normal use", "body": "demonstration route uses peekall get posts store controller impersonates sort server polling repeatedly pushing jsonapi data store key overwriting comments hasmany put console log emberdebugjs end method see extra elements array every time posts pushed store stefanpenner spoke slack much simpler reproduction", "num": "14977", "d": "3/2017"}, {"title": "emberinstrument misses compilationlookup phase", "body": "initial render component subscription event include compilation module lookup times happens first time class component rendered likely new event maybe flame graph demonstrating unclaimed time note darkerbolder highlights unclaimed time reference noticed authoring emberperftimeline addon hjdivad amp stefanpenner", "num": "14974", "d": "3/2017"}, {"body": "hi acaxon ember inflector separate library please file", "d": "3/2017"}, {"body": "sure sorry mistake closing issue", "d": "3/2017"}, {"body": "rendering html svg content based data yet error seems occur rerendering svg remove svg portion template html properly updated", "d": "3/2017"}, {"body": "suggested slack likely caused use js tool modifies dom directly seems likely notentirelyuncommon mistake error message suggested possible causes failure would helpful case particular lib able work around issue manually supplying wrapper element nt create internally clear work around general jquery plugin case though might worth updating docs explain done hook along proper workaround one exists right docs didrender say leverage didrender hook perform postprocessing dom component updated seems imply work", "d": "3/2017"}, {"body": "bisected turns caused commit reading original description looking commit obvious broke also little bit coincidence worked honestly sure loop element attributes continues finds handler guess could multiple handlers case seems like list first filtered matching action handlers handler called cc gavinjoyce", "d": "3/2017"}, {"body": "think simplest fix would track actions already called single loop given action already ran noop", "d": "3/2017"}, {"body": "rwjblue shall open pr", "d": "3/2017"}, {"body": "yep nt mind need test help ensure nt regress future believe least", "d": "3/2017"}, {"body": "rwjblue roger pr tonight upgrade blocker us side note test would easy write emberjs ci process test ie edge either way test curious", "d": "3/2017"}, {"body": "yes test edge well chrome firefox safari phantom ci", "d": "3/2017"}, {"body": "submitted specific thing mentioned suspect things need lands", "d": "3/2017"}, {"body": "cibernox rwjblue rfc issue pr instead serabe still encouraging feature types issues go rfcs repo", "d": "3/2017"}, {"body": "pixelhandler nt really adding new feature simply removing error condition one usage scenario definitely saying folks drop jquery want modifying default blueprint", "d": "3/2017"}, {"body": "items cover cibernox issue closed", "d": "3/2017"}, {"body": "mixonic first known issue addressed need test canary builds nt chance yet tbh", "d": "3/2017"}, {"body": "tried still work able help emberconf", "d": "3/2017"}, {"body": "would like work might take little time though new advice help get started welcome", "d": "3/2017"}, {"body": "property still", "d": "3/2017"}, {"body": "working gone changelog still solve uploading pr soon part get done", "d": "3/2017"}, {"body": "serabe basically need mapping deprecation id version going deprecation flags take semver version semver version get turned bool based consuming app says supports", "d": "3/2017"}, {"body": "need mapping list containerlookupfactory found code emberapplicationappinitializerinitializearguments emberapplicationappinstancecontainer emberapplicationappinstanceregistry emberapplicationinjectedcontainer emberapplicationregistryresolverasfunction emberapplicationvalidatetype emberdebugdeprecateidmissing emberdebugdeprecateoptionsmissing emberdebugdeprecateuntilmissing emberdebugwarnidmissing emberdebugwarnoptionsmissing emberhtmlbarsemberhandlebarssafestring included reverted emberhtmlbarsmakeboundhelper embermetalbinding embermetalemberbackburner embermetalemberk embermetalimmediateobserver embermetalobserverargumentorder embermetalrequired emberroutingviewscontrollerwrappedparam emberroutingrouterresource emberroutingtoplevelrenderhelper emberruntimeactionhandleractions emberruntimecontrollerproxy emberruntimeenumerablecontains emberruntimefreezableinit emberruntimefrozencopy emberruntimewillmergemixin emberstringutilsfmt embertemplatecompilerdeprecaterender embertemplatecompilerdeprecaterendermodel embertemplatecompilertransforminputontooneventdynamicvalue embertemplatecompilertransforminputontooneventnoaction embertemplatecompilertransforminputontooneventnormalizedon embertemplatecompilertransformoldbindingsyntax embertestingtestwaiters emberviewscomponentdefaultlayout emberviewsdidinitattrs emberviewslifecyclehookarguments emberviewsrenderdoublemodify emberviewsrendertoelement nt need actual option shall close", "d": "3/2017"}, {"body": "work done partial findings emberapplicationregistryresolverasfunction containerlookupfactory emberapplicationinjectedcontainer embermetalemberk embermetalemberbackburner embermetalembercreate embermetalemberkeys emberapplicationappinstancecontainer emberapplicationappinitializerinitializearguments emberapplicationvalidatetype emberviewscomponentdefaultlayout emberroutingviewscontrollerwrappedparam emberhtmlbarsmakeboundhelper emberhtmlbarsemberhandlebarssafestring emberroutingrouterresource emberroutingtoplevelrenderhelper differences see serabe findings tracked embermetalembercreate embermetalemberkeys though appear issue might declared may missed chadhietala tracked containerlookupfactory also included emberapplicationappinstancecontainer emberroutingrouterresource emberroutingtoplevelrenderhelper details though basically versions ie instead different versions emberapplicationvalidatetype emberviewscomponentdefaultlayout emberroutingviewscontrollerwrappedparam emberhtmlbarsmakeboundhelper someone take another look fyi versions found tracking tagged commits hence detail though plain wrong cases code moved different files", "d": "3/2017"}, {"body": "andyhot serabe awesome serabe think keep pr open still sure rwjblue wants field deprecation nt know needed thing wrote", "d": "3/2017"}, {"body": "think need verification rwjblue go cleanup flags also expired viewscomponentdefaultlayout emberapplicationvalidatetype assertion first emberroutingviewscontrollerwrappedparam emberhtmlbarsmakeboundhelper", "d": "3/2017"}, {"body": "yep cleaned", "d": "3/2017"}, {"body": "looks like also readdressed closed problem apparently fixed seems may reference tildeiorouterecognizer seem like address issue specifically bugfix inconsistent decoding dynamic segments though may misinterpreting sure maybe filed repo instead", "d": "3/2017"}, {"body": "gabrielgrant would willing make example embertwiddle see", "d": "3/2017"}, {"body": "little strange unlike browser ember twiddle url field accepts literal space characters need manually escape spaces results actual ember twiddle uri double escaped edit strangely although link query param seems actually open route ember twiddle loads seems like twiddle bug pasting ember twiddle path field shows problem", "d": "3/2017"}, {"body": "ah interesting seems happen using globbing pattern updated twiddle see properly decoding nonglobbedmatches", "d": "3/2017"}, {"body": "tbh nt really think ember bug hot reloader definitely digging around deeply private territory happy folks enjoy using moment definitely using public apis think good long term solution would truly analyze need submit rfc make minimal required api tools like could hook would give hot reloader tools ability stop using private api", "d": "3/2017"}, {"body": "rwjblue understood thanks quick reply", "d": "3/2017"}, {"body": "clear reply nt trying shut anything usually happy help try find path forward", "d": "3/2017"}, {"body": "rwjblue worry plan pause moment big event next week really choices worth considering reboot rfc mention play hero reverse engineer internals glimmer vm change miguelmadero great success point feel level rfc giving offense comment asking play rules powerful tool personally prefer keep moving instead rebooting asking feedback getting everyone involved truly addon built", "d": "3/2017"}, {"body": "hi tl dr let extend rfc write new one find approach fun also think could great wide impact could keep stable one ember release additionally even preglimmer many known issues current hotloader approach based component helper issues fixed ast approach able release new approach since nt work glimmer version think time bite bullet less exciting work writing rfc talking chadhietala yesterday sf ember meetup said could help push event next week also recommended look existing rfc talks componentmanager think referring chance review might official way solve going forward think need help someone glimmer experience play hero together one time get working version ast approach write rfc keep stable going forward", "d": "3/2017"}, {"body": "apologies following pretty rough initial braindump polish bit send comment rfc move discussion first pass seems promising initial thoughts may replaced looks something like class hotreplacementcomponentmanager extends componentmanager private components new componentcache create metadata componentdefinition args componentarguments let instance getowner lookup let othervalues path othervaluesfromastrewrite return instance othervalues metadata getcontext instance object embercomponent return instance getview createditem object embercomponent createditemothervaluesneedsrefresh todo get value service clearcache createditemmetadataclass still need clear require container caches magic happens createditeminstance getowner lookup return createditeminstance update instance object args componentarguments void instancesetproperties argsnamed instancedidupdateattrs instancedidreceiveattrs plus glimmer hooks maybe simply call super instead making lot assumptions favor seems like right direction", "d": "3/2017"}, {"body": "miguelmadero first wanted apologize speaking behalf yesterday respect decision leaning toward rfc total cost ownership grown control past months conflicted someone using addon great success time suddenly supported broken reflects poorly something dealing still plan look deeper current break around mid april bandwidth certainly see value moving ahead rfc suggested truth people nt already know done work anyway contribution mostly morale keep dream alive help land something embercli might use one day headed one direction wise consider brains behind addon", "d": "3/2017"}, {"body": "wanted apologize speaking behalf yesterday toranb good nt feel like done work anyway kind say reality unlocked different parts puzzle supported broken reflects poorly agree think need parallel fix broken start discussing public apis required keep stable hopefully get help someone glimmer experience since main blocker", "d": "3/2017"}, {"body": "may hard make working example since sure set embertwiddle cc serabe perhaps make new repo working example reproduce issue share githubgitlab url would help troubleshoot issue could create working demo example app issue", "d": "3/2017"}, {"body": "hey created test repo reproduce issue could take look url", "d": "3/2017"}, {"body": "hey seems url using nt hash vs", "d": "3/2017"}, {"body": "yeah know sangm url something control put manually hash url queryparams work case first enter app url browser user logged redirect single sign page successful login redirects back application time redirects see hash url though locationtype set hash beforemodel model methods application route invoked params undefined hash appended url automatically", "d": "3/2017"}, {"body": "ah okay think immediate fix append automatically root application probably fix issue access query params could probably reopen hashlocation change makes sense framework perspective type behavior built framework locationtype hash guarantee hash therefore guarantee query params work locks nathanhammond rwjblue trentmwillis could guys chime", "d": "3/2017"}, {"body": "thanks response first thing looks like temporary fix nt see queryparams application route working secondly nt know access hashlocation initializer access initializer application instance help would appreciated", "d": "3/2017"}, {"body": "import ember ember const hashlocation ember export function initialize hashlocationreopen formaturl custom logic return thissuper arguments export default name addhash initialize use generate initializer well let know need assistance", "d": "3/2017"}, {"body": "tried application route beforemodel model called formaturl defeats purpose think making queryparams work application route solid solution", "d": "3/2017"}, {"body": "curious nt control url gets redirected app sign third party let know url directed back include", "d": "3/2017"}, {"body": "way reproduce error working example great way share working failing code examples others run help troubleshoot issue check errortrace line code app causing issue seems indicate app code maybe framework code trying invoke function object resulting helps pause error using chrome debugger tools", "d": "3/2017"}, {"body": "hello lazaridiscom stated contributing guide issue tracker reserved bugs framework please also observe suggesting people act lack moral respectability done think would best code conduct ask people respectful empathetic suggesting lack decency none closing bug thank", "d": "3/2017"}, {"body": "guess use email bypass strange issueguardbots even know word bug defect decency mostly empathy means sad", "d": "3/2017"}, {"body": "addressed project leadership handling issue actionable portion post user guide extending sections ember cli documentation linked serves hub current future documentation efforts", "d": "3/2017"}, {"body": "note readers workaround ignore documentation emberjscom domain use nt miss one possibly make like ember loosing faith locks time eat", "d": "3/2017"}, {"body": "lazaridiscom issue trackers various ember code repositories place discussion invite open discussion forums would proper place reach leadership formulate positive discussion share ideas improve documentation learning experience sure aware framework associated libraries learning resources etc provided volunteers commercially backed project means want change things need get involved positive way means finding way serve existing leadership among various teams helping lift weight say improving learning experience tone post come across considerate sweat labor individuals calling take action nt think get far community opinion find way roll sleeves help solve shared problems community benefit greatly perhaps consider purchasing commercial product level support expect info ember discussion meta leadership governance forms place debate evaluating direction", "d": "3/2017"}, {"body": "pixelhandler done tell stuff goldfish effect", "d": "3/2017"}, {"body": "note readers positive attitude really think positive attitude would help look quality comments mikenorth people discussing north even realize plays one two leagues simply grasp essence talking volunteers one intervenes say hey cool league pays users hit terrible docs loose time cause volunteer work emberjscom domain commercially backed framework contributing usual opensourcewhiners grasp concept analysis contribution think file issue invest time look happens direct contribution suggested may send reworked version page see shouldcould look result locks locks issue actually fun locks locks project dedicated locks role final result seen impossible even try make docs better within project perfect much better docu beginner amp expert go try contribute possibly works better", "d": "3/2017"}, {"body": "hi rwjblue ember team turns similar issue folks emberjs issue thread time component use track clicks app analytics reporting things like found ember components property called element indeed getter refactored component use property called instead everything works expected side note know toggle different versions ember guides best way see different version ember api thanks folks", "d": "3/2017"}, {"body": "side note know toggle different versions ember guides best way see different version ember api tiandavis currently possible working hard versioned api doc viewer released soon drop sneakpeek", "d": "3/2017"}, {"body": "thanks locks", "d": "3/2017"}, {"body": "sure actions necessary regarding comment means types tests need added see clean mean eg remove polish reorganize", "d": "3/2017"}, {"body": "locks please provide detail perhaps closed", "d": "3/2017"}, {"body": "possible create demo showing error either embertwiddlecom embercli app repo would work", "d": "3/2017"}, {"body": "yeah done putting nt able reproduce error new app keep debugging playing around weekend open againcomment come solutions", "d": "3/2017"}, {"body": "ran cryptic issue trying component integration test managed work around using instead", "d": "3/2017"}, {"body": "issue caused scream testem intercepts tries jsonlike object contains array arguments originally passed arguments cause crash see trace top comment", "d": "3/2017"}, {"body": "may related related", "d": "3/2017"}, {"body": "started new issue", "d": "3/2017"}, {"body": "difficult help without detailed explanation moment issue actionable cases need see demo checkout embertwiddlecom nt seen sometimes code snippets suffice", "d": "3/2017"}, {"body": "base component basemodalhbs yield ok modal inheritance want achieve send named action childmodal downwards basemodal current setup use childmodalhbs component dom tag", "d": "3/2017"}, {"body": "guess valid syntax would awesome provide reproduction embertwiddlecom", "d": "3/2017"}, {"body": "twiddle read comments applicationhbs details", "d": "3/2017"}, {"body": "thank twiddle twiddle defining dom event functions component supported use go assertion test code confirm changed function name everything worked twiddle link ember bug price pay use component", "d": "3/2017"}, {"body": "kumkanillam nt know thank case closed", "d": "3/2017"}, {"body": "sure bug unknown services always supposed throw error unfortunately nt working right fixed work factory feature see background", "d": "3/2017"}, {"body": "issue service stubbing unit tests like longer works need register stub service call pass new assertion", "d": "3/2017"}, {"body": "alternatively unit tests specify ensure service present containerregistry assertion checks still allows stubbing creation show", "d": "3/2017"}, {"body": "moving emberjswebsite", "d": "3/2017"}, {"body": "affects beta builds", "d": "3/2017"}, {"body": "nt know related ca nt update error message seems related tests failing fail app embercli already diff commit cause error", "d": "3/2017"}, {"body": "dependency removed cibernox persisting seems like massive break beta getting error perhaps open reproduction", "d": "3/2017"}, {"body": "going close issue cibernox still running something please open fresh issue", "d": "3/2017"}, {"body": "mixonic still need fix current beta branch", "d": "3/2017"}, {"body": "hello redsandro closing since emberjs bug please go help channel slack registered use slackin app thank", "d": "3/2017"}, {"body": "think modification", "d": "3/2017"}, {"body": "hm right debugged sure right actually results exception update issue assume still bug though also modify passed array", "d": "3/2017"}, {"body": "embera definition prototypes extended applies object defines properties would say suggested behaviour behaviour changed versions extend prototypes still thank", "d": "3/2017"}, {"body": "choice modify array prototype even frozen contract likely produce downstream errors one think casting", "d": "3/2017"}, {"body": "stefanpenner serabe says modify original object api documentation function though little misleading said something like modify contents array would clear certainly modify array object adding properties never knew actually changed anything always thought would create sort wrapper objects necessary additional properties sort like guess", "d": "3/2017"}, {"body": "one think casting good know thanks agree though might good update docs thinking well passed object would touched way submitted pr", "d": "3/2017"}, {"body": "reopening docs issue thank", "d": "3/2017"}, {"body": "closed", "d": "3/2017"}, {"body": "ya strange docs accurate prototype extensions enabled disabled like addons default configuration modify", "d": "3/2017"}, {"body": "guess fix actually making object nt modified would always clone object applying mixin prototype extensions disabledthe mixin nt already applied prototype guess performance overhead prohibitive", "d": "3/2017"}, {"body": "ya already mega costly copying would also likely break code expects array work done embera phased", "d": "3/2017"}, {"body": "cc rwjblue krisselden workmanw", "d": "3/2017"}, {"body": "seeing identical errors shouldjs expect style assertions also using mocha though see bumping similar pattern failing using expect shouldjs", "d": "3/2017"}, {"body": "something replicated using embertwiddle", "d": "3/2017"}, {"body": "pixelhandler struggling getting embermocha twiddle set tips examples started", "d": "3/2017"}, {"body": "tried reproduce without success maybe something related ember versions twiddle", "d": "3/2017"}, {"body": "one stackoverflow comment says could reproduced twiddle checkout repo", "d": "3/2017"}, {"body": "reproduced twiddle key reproduction run acceptance test running test asserts thrown error running acceptance test populates adapter handles error receive cc pixelhandler", "d": "3/2017"}, {"body": "workaround qunit javascript import ember ember import qunit qunit import qunitadapter emberqunit workaround const originalassertthrows qunitassertthrows const rethrowadapter qunitadapterextend exception error throw error create qunitassertthrows gt const originaladapter embertestadapter embertestadapter rethrowadapter originalassertthrowsapply arguments embertestadapter originaladapter", "d": "3/2017"}, {"body": "opened issue directly guides hence closing one", "d": "3/2017"}, {"body": "correct place", "d": "3/2017"}, {"body": "mistake sorry", "d": "3/2017"}, {"body": "fixed", "d": "3/2017"}, {"body": "mikenorth maybe still docs views", "d": "3/2017"}, {"body": "mikenorth looks like back", "d": "3/2017"}, {"body": "awesome thanks checking yogipatel", "d": "3/2017"}, {"body": "discussed previously believe", "d": "3/2017"}, {"body": "bmeurer sounds great totally added work around slightly nervous performance older androids may time", "d": "3/2017"}, {"body": "working pr testing pr testing bmeurer past also found forcing objects dictionaries sooner yielded improvements something continue discontinue bmeurer also worked around cost ways might time discuss scenarios detail next week specifically code meta like basically created work around issue results good remains ends complicated costly", "d": "3/2017"}, {"body": "stefanpenner trick common workaround ie older typescript versions used well chat next week maybe vc morning european time older android chrome evergreen update chromiumbased android browsers lot unfortunately many still new ember code probably perform poorly anyway sure performance tracking old versions", "d": "3/2017"}, {"body": "chat next week maybe vc morning european time work day except wednesday evening thursday morning works ping hangouts", "d": "3/2017"}, {"body": "added patch emberdata", "d": "3/2017"}, {"body": "note speak also adding support probably even faster fully recognized parser course available slightly sooner", "d": "3/2017"}, {"body": "bmeurer allocation seems slower current nodejs nodejs master node indexjs new emptyobject x opssec runs sampled objectcreate null x opssec runs sampled fastest new emptyobject nodemaster indexjs new emptyobject x opssec runs sampled objectcreate null x opssec runs sampled fastest new emptyobject enabling turbofan compiler", "d": "3/2017"}, {"body": "lpinca probably nt measure use dictionary also include lot faster", "d": "3/2017"}, {"body": "bmeurer measuring much takes create object thinking reverting change nodejs see reason unfortunate", "d": "3/2017"}, {"body": "lpinca yap allocation inlined turbofan escape analysis remove allocation turbofan nt escape nt useful", "d": "3/2017"}, {"body": "strange happen chrome happen upgrading chrome", "d": "3/2017"}, {"body": "workaround use plain tags faster", "d": "3/2017"}, {"body": "works thanks lot tip", "d": "3/2017"}, {"body": "sorry point time adding computed macros highly unlikely read post information thank", "d": "3/2017"}, {"body": "thank report", "d": "3/2017"}, {"body": "error object ca nt construct link point errors rather building malformed href add client well misunderstood issue please feel free clarify reopen", "d": "3/2017"}, {"body": "actually something seem strange works also specify template", "d": "3/2017"}, {"body": "seems url generation code unable read emberproxies also works naked", "d": "3/2017"}, {"body": "seems related router related changes cc krisselden scalvert", "d": "3/2017"}, {"body": "think offending line cc trentmwillis", "d": "3/2017"}, {"body": "diff simply moved function location file feels unlikely cause change behavior pr engines", "d": "3/2017"}, {"body": "thank report", "d": "3/2017"}, {"body": "relatedduplicate also apply component controllerview related", "d": "3/2017"}, {"body": "duplicate might related doublerendering handlebars content rendering content wrong place yet able reproduce components however sure exactly triggering", "d": "3/2017"}, {"body": "could due track bounds render bounds somehow get track cc krisselden chancancode", "d": "3/2017"}, {"body": "discovered emberdata moved issue", "d": "3/2017"}, {"body": "seems good likely fine pr review specific details", "d": "3/2017"}, {"body": "relatively straight forward maybe someone spare cycles nt really cycles", "d": "3/2017"}, {"body": "intended indepth comparison analysis merely recommending others", "d": "3/2017"}, {"body": "stefanpenner intended idea experiment integrating mobx inside ember mainly want answer questions attempt writing rfc anyone thought worth experiment objections integration like", "d": "3/2017"}, {"body": "suspect much useful investigation learn pros cons apply lessons ember switching users use something different means leave existing codebases apps without said improvements fails compounded value aim offer also worth pointing ongoing effort remake observation system interms primitives glimmer provides ones glimmer provides extremely quick would interopt overhead longer working glimmer mentioned always lots learn opensource projects sure deep analysis apply said learning", "d": "3/2017"}, {"body": "jpschober curious filed ember data issue tracker", "d": "3/2017"}, {"body": "pixelhandler nt think related ember data encountered bug ember data scenario looks like error emberutilsutilssuperjs find time dig", "d": "3/2017"}, {"body": "updated twiddle obvious ember data related bug additionally added another test button one button result ok button error triggered difference two methods comment therefore situation mere presence comment affects code execution", "d": "3/2017"}, {"body": "firefox chrome right following spec absence values min max value get values closing non issue thank", "d": "3/2017"}, {"body": "reopening consideration thank", "d": "3/2017"}, {"body": "wycats chancancode created issue spec repo follow along", "d": "3/2017"}, {"body": "foreseeable future want fix bug probably need special case input type attribute set last thu mar pm robert jackson notifications githubcom wrote wycats chancancode created issue spec repo follow along whatwghtml receiving mentioned reply email directly view github mute thread", "d": "3/2017"}, {"body": "could work around", "d": "3/2017"}, {"body": "need rfc issue use rfc issues propose rough idea basically great place test waters", "d": "3/2017"}, {"body": "alonski may worth sharing work around example well see issue embertwiddle example provided looks like bug", "d": "3/2017"}, {"body": "pixelhandler hey workaround renaming templatehbs templatesinglehbs tenplateroute templatename templatesinglehbs", "d": "3/2017"}, {"body": "likely related pods", "d": "3/2017"}, {"body": "locks clarify using pods app", "d": "3/2017"}, {"body": "alonski thing resolver supports structures time far know way turn indirectly using pods x think happening since nt pod module prefix set falls back meaning translates template file templates route could confirm rwjblue good news module unification structure suffer kinds ambiguity", "d": "3/2017"}, {"body": "ember longer maintained unlikely bug gets fixed since code evolved lot months closing sorry", "d": "3/2017"}, {"body": "mixonic update add followup chrome change acburdine found workaround eg hammerjs help", "d": "3/2017"}, {"body": "pixelhandler embersortable added css class right place solved issue", "d": "3/2017"}, {"body": "pixelhandler afaict chrome team interested reverting change inclined treat bug however since jquery offer way pass arguments event listener yes seriously ca nt optout js using jquery mechanism fix rather convoluted need sync back rwjblue check direction", "d": "3/2017"}, {"body": "locks oh forgot used live embercli bad", "d": "3/2017"}, {"body": "gabrielcw locks curious discussed rfc issue instead two places emberjs data issue trackers use rfc issues propose rough idea basically great place test waters", "d": "3/2017"}, {"body": "pixelhandler sure would actually need full blown rfc honest feel free write one", "d": "3/2017"}, {"body": "pixelhandler went ahead wrote rfc available", "d": "3/2017"}, {"body": "gabrielcw awesome thanks", "d": "3/2017"}, {"body": "rwjblue labeled bug", "d": "3/2017"}, {"body": "interesting nt think bug still call feature request definitely good feedback cibernox however nt seem likely would change helper merge semantics specific ember components instead take datapoint figure use dynamic curried component invocation glimmer components", "d": "3/2017"}, {"body": "fwiw nt consider unexpected think signaled area api component could improved", "d": "3/2017"}, {"body": "fixed", "d": "3/2017"}, {"body": "anyone able reproduce issue", "d": "3/2017"}, {"body": "zoltannz issue still valid", "d": "3/2017"}, {"body": "cleaned followup pr", "d": "3/2017"}, {"body": "invocation component name instead directory dividers public api documented sorry bit kkincade appreciate time reporting issue closing wontfix", "d": "3/2017"}, {"body": "correct thing definitely using path documented anywhere making assert better seems tricky", "d": "3/2017"}, {"body": "artemgurzhii state thank", "d": "3/2017"}, {"body": "serabe nothing refactor always stays date sure package noticed ca nt changed compiled babel making changes makes tests fail trying refactor tests afraid break something got refactored packages nt refactored also problems refactoring internaltesthelperslibfactoryjs", "d": "3/2017"}, {"body": "btecu even svelte would still useful", "d": "3/2017"}, {"body": "thanks everyone interest created new issue supersedes deprecation ids please see would like help", "d": "3/2017"}, {"body": "denisovlev still issue newer versions ember started using weakmaps would handle case places available however unsure anything done case please test", "d": "3/2017"}, {"body": "denisnazarov ported jsfiddle ember twiddle allow easily swapping ember version", "d": "3/2017"}, {"body": "thank mixonic see new twiddle heap constantly growing hence memory still leaking", "d": "3/2017"}, {"body": "oh gee appear several issues docs yield appearing dead links emberview toc guides information think api mentioned api docs defer learning team want present guides regardless would issue guides repo lets keep focused api docs api docs document layouts section dropped sure issue", "d": "3/2017"}, {"body": "callovarne mixonic looked bit much beginner emberjs land afacit yield nt documentation looked even embertemplateshelpershtml methodyield link probably dead perhaps lived somewhere htmlbars docs locks mentioned broken link embercomponent probably level docing yield want hand digging deeper happy help", "d": "3/2017"}, {"body": "best guess yield docs disappeared", "d": "3/2017"}, {"body": "elucid nice find question implemented docs belong", "d": "3/2017"}, {"body": "think problem glimmer package glimmer statement", "d": "3/2017"}, {"body": "since statement comes right statement glimmer think putting yuidoc block packagesemberglimmerlibindexjs right yuidoc debugger makes sense", "d": "3/2017"}, {"body": "makes sense mixonic thoughts", "d": "3/2017"}, {"body": "trying get done", "d": "3/2017"}, {"body": "rohmann thank raising going suggest outcome drop api entirely used addons look usage marked private seem like large number users noticed broke nt seem rise level intimate might consider regression especially since workaround pretty straight ahead", "d": "3/2017"}, {"body": "closed", "d": "3/2017"}, {"body": "ahoyahoy creating component layout appears work passing property component correct want pass going close feel free reopen details missed something", "d": "3/2017"}, {"body": "contract generates function works documentation describes timing new function generated dfreeman sorry got tripped mental model correct still think useful however still slightly divergent implementation going close please reopen think missed something thank", "d": "3/2017"}, {"body": "afaict still issue", "d": "3/2017"}, {"body": "believe superseded please reopen missed something thank", "d": "3/2017"}, {"body": "chancancode actually seems like need something regarding fix", "d": "3/2017"}, {"body": "problem described arenoir", "d": "3/2017"}, {"body": "closed works properly", "d": "3/2017"}, {"body": "thanks confirming", "d": "3/2017"}, {"body": "ever get around issue running situation link dynamic elements works nt despite routes like ignore deals route", "d": "3/2017"}, {"body": "nope sorry managed write failing test clue fix", "d": "3/2017"}, {"body": "looks like problem sits fact route need link definition debugging saw another facility issue method would succeeded traced call returns false", "d": "3/2017"}, {"body": "think traced method js function handlerinfosequal handlerinfos otherhandlerinfos handlerinfoslength otherhandlerinfoslength return false var len handlerinfoslength lt len handlerinfos otherhandlerinfos return false return true namesissueid", "d": "3/2017"}, {"body": "issue affecting sites lts patch would ideal", "d": "3/2017"}, {"body": "thanks support agree probably nt need evaluate arguments existing helper already performance regression initial render due revision caching could removed regarding addon path simple definitely impossible using public api would need way access glimmer primitives way register builtin helper ideas sensible way", "d": "3/2017"}, {"body": "get access glimmer internal modules using typical way experimental addons things nt public api", "d": "3/2017"}, {"body": "thanks info additional help rwjblue slack created published addon called provides solution issue exposing helper actual implementation bit simpler one provided idea see new implementation app use total helpers exposed implementation provides significant performance boost specific operation avoiding rerendering long list", "d": "3/2017"}, {"body": "similar issues issue code manages kind behavior take two code snippets provided users issue paste reproduce eb code around little intricate though", "d": "3/2017"}, {"body": "trying hard upgrade enterprise project ember project validation addon separate form components addon validation addon works embercomponents generate validation errors form components addon display errors generated validation addon via helper addons way complicated share source code hence created following twiddle illustrate case facing given example contains two components responsible generate validation errors validation errors generated cascaded containing component via action thrown within computed property errors generated component displayed within component help helper code provided working expected see however deprecation warning follows erroremberbindingvalidatableerrorsnameemberbindingalias order avoid please go helper comment line number uncomment line number suggested warning explanation hit infamous understand getting error action triggering within computed property result recalculation computed property content already rendered causing error would like learn vs working quite differently sure terms recalculation rerendering phase exact difference suggesting using latter replacement first one seems breaking code least case triggering action within computed property problem yes possible suggestions avoid considering wrapping action triggering withing statement right way go finally please go back breaking code type something field surprisingly components rerendered multiple times suspect might related bug", "d": "3/2017"}, {"body": "fwiw seen components rerendering frequently would expect cases tracking cause rerender quite time consuming often synced runloop love know shortcuts debugging tricks area", "d": "3/2017"}, {"body": "way catch suppress assertion debug builds tracked fixed via refactors described places rather stubborn one particular case destroying object transitioning destroyed object api sends pusher notification unloaddestroy several objects production builds rerender issue since destroying object transitioning away anyways whole route torn however assertion dev builds quite frustrating requires refresh restore site understand getting error quite complicated refactor case avoid case doesnt matter since entire route destroyed way catch suppress change warning tried trycatch well route error handler neither picked", "d": "3/2017"}, {"body": "sending action within get invalidates property already rendered data backflow bindings cycle would detect silently pick forward direction winner comes large cost flowed several things flows back source basically cyclic dependency need data flow nt render error run validation validate parent component yields model errors render form inside block", "d": "3/2017"}, {"body": "similar issue sure need open new issue list sort twice date second time order get folder top list know use two lists noticed second sort modifying sort first one even sort function always returns two following codes produce result first snippet produces correct results sort according user selection sorteditems embercomputedsort filtereditems sortby sort according user selection sorteditems embercomputedsort filtereditems sortby open new issue twiddle", "d": "3/2017"}, {"body": "still seeing ember", "d": "3/2017"}, {"body": "main issue fixed tildeiorouterjs", "d": "3/2017"}, {"body": "hey guys ran problem addon components nt work found solution least affects desired element addons always additional classes besides css selector checking element class hopefully someone finds also useful", "d": "3/2017"}, {"body": "update seems work also curious marked private", "d": "3/2017"}, {"body": "denzo mingcodes asking morning per rwjblue slack may public least intimate api ie ca nt broken probably safe use see work router service includes tests joshfarrant exupero still problem quite helpful get reproduction twiddle check carefully thanks", "d": "3/2017"}, {"body": "using emberinstrumentation namespace publishing events embersubscribe listen code publish events stack subscribers call even destroyed basically example route destroyed running subscribe statements fail give error solution problem use emberinstrumentationreset remove previous subscribers destroyed solution helped acceptance tests app destroyed tests finished wrote emberinstrumentationreset startapp function moduleforacceptancejs worked hope helps", "d": "3/2017"}, {"body": "updates", "d": "3/2017"}, {"body": "wanted migrate js app ember js wondering statement supported unsupported browser convincing statistic reported sauce labs seems clear mentioned browser mean ember js targeting browsers", "d": "3/2017"}, {"body": "write official policy somewhere quick note support major browsers evergreen browsers latest version non ever green browsers latest versions detailed officially supported matrix would good addition docs cc locks", "d": "3/2017"}, {"body": "looks like classes ember already supported using emberclibabel official way still hold", "d": "3/2017"}, {"body": "tatyahoo babel allows classes ember used throughout framework things like observing properties unknown properties etc moving classes nt simple", "d": "3/2017"}, {"body": "knownasilya mean even though code works functioning normal way unsafe js import ember ember const component ember export default class extends component", "d": "3/2017"}, {"body": "also experiencing problem mmun described theory could use emberroute didtransition seems called transition complete specifically currentroutename application controller nt updated future able inject routing service instead go application controller acorncom bug intended behavior would expect actual one behind basically put around works expected seems like hack also triggers logic run twice also nice following code behaves like would expect first version work except fact emberrunnext delays work next runloop", "d": "3/2017"}, {"body": "still happening marking inactive", "d": "3/2017"}, {"body": "mmun see twiddle", "d": "3/2017"}, {"body": "marking issue inactive per triage policy", "d": "3/2017"}, {"body": "marking issue inactive per triage policy stefanpenner state", "d": "3/2017"}, {"body": "marking issue inactive per triage policy", "d": "3/2017"}, {"body": "happened closing thank", "d": "3/2017"}, {"body": "unconsumed computed properties nt trigger observers seems bug rather feature", "d": "3/2017"}, {"body": "cbou idea observers side effects merely observing something change state world computed properties lazy nt cost unless used combined means unconsumed computed properties nt emit observer changes", "d": "3/2017"}, {"body": "thanks answer stefanpenner idea observer observe seems clear lazy loaded stuff loaded observe changed lazy stuff loaded performance could frustrated emberjs beginners aware", "d": "3/2017"}, {"body": "idea observer observe yes observers observe accessors lazyondemand accessors need lazily properties set within constructor computed property enhanced accessor happens required eagerly developer opt behavior explicitly accessing property appropriate maybe within appropriate hook allows existing behavior continue work eagerness explicit optin js export default emberobjectextend init thissuper arguments fullname computed first last function return said using observers quite rare far typically writing party libraries like similar speak detail state world changed order data loaded much state changing performance nt dismissed real constraint", "d": "3/2017"}, {"body": "thanks long answer talk learned useful tips try use much however still convinced computed nt lazy observed hidden developers order data loaded much state changing right observe something implicitly means otherwise ca nt observe nt dismissed real constraint observed computed loaded nt big performance issue better understand ember way thanks lot", "d": "3/2017"}, {"body": "cbou ya abit balancing act hopefully context helps tad", "d": "3/2017"}, {"body": "yes helps lot think warning message could possible dev environment", "d": "3/2017"}, {"body": "marking issue inactive per triage policy stefanpenner solved ember", "d": "3/2017"}, {"body": "gon na bold ask wycats reopen guide updated started crazy stuff like dynamic segment shown would available", "d": "3/2017"}, {"body": "jonblack guide", "d": "3/2017"}, {"body": "locks guide error substates", "d": "3/2017"}, {"body": "jonblack please file issue appropriate repository", "d": "3/2017"}, {"body": "also directly present jquery", "d": "3/2017"}, {"body": "marking issue inactive per triage policy", "d": "3/2017"}, {"body": "marking issue inactive per triage policy", "d": "3/2017"}, {"body": "seeing issue ember trying clear query param controller effect barelyknown workaround gets way would still consider open bug", "d": "3/2017"}, {"body": "leaving route queryparams equal default even resetting resetcontroller items active class item itemindex lt queryparams transition made", "d": "3/2017"}, {"body": "tried fix test metal knowledge js testboth suspending observers fire callback even deferred function get set let obj let target othertarget target values method thisvaluespush get obj foo othertarget values method thisvaluespush get obj foo addobserver obj foo target targetmethod addobserver obj foo othertarget othertargetmethod function callback jshint validthis true equal target set obj foo equal suspendobservers obj foo target targetmethod callback result set obj foo deepequal targetvalues invoke deepequal othertargetvalues invoke marking issue inactive", "d": "3/2017"}, {"body": "issue today solved adding maybe works else", "d": "3/2017"}]