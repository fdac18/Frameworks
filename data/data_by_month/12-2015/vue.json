[{"title": "implement countdown using", "body": "", "num": "2099", "d": "12/2015"}, {"title": "data property prefixed rendered properly", "body": "hi learning vue great far use underscore data property name nt render properly anyone experience missing something example thanks", "num": "2098", "d": "12/2015"}, {"title": "onetime interpolations attribute", "body": "gt", "num": "2097", "d": "12/2015"}, {"title": "css animations leave bug", "body": "add attribution dom class dom removed fact javascript hooks log found function run sorry bad english see demo compare bug something wrong test os x chrome", "num": "2096", "d": "12/2015"}, {"title": "", "body": "", "num": "2095", "d": "12/2015"}, {"title": "scoped css content distribution", "body": "component scope css rules nt applies elements slot", "num": "2094", "d": "12/2015"}, {"title": "computed properties depend computations", "body": "currently following variable updated updated vue would aware dependency since dependent modifying somehow work jsfiddle demonstrating see none computed properties update despite updating dependency changing see console log", "num": "2093", "d": "12/2015"}, {"title": "", "body": "new vue el el name webview props name type string required true created function consolelog browsercreatewebview thisname parentcreatewebview thisname template function html return html", "num": "2092", "d": "12/2015"}, {"title": "vif vshow velse", "body": "\u53d1\u73b0 velse \u53ef\u4ee5\u548c vif elseif \u4f46\u662f velse \u548c vshow elseshow \u4f46\u662f vif \u548c vshow \u5143\u7d20\u90fd\u53ef\u4ee5\u63a5 velse vif \u4e0e vshow velse", "num": "2090", "d": "12/2015"}, {"title": "watched properties start update deletion", "body": "encoutnered think bug first codepen reproduce watched property array objects property one object changed watch callback called delete one elements subsequent change properly tracked reproduce try change properties input fields try deleting one pressing x try change property", "num": "2089", "d": "12/2015"}, {"title": "undefined", "body": "\u5728test \u4e8b\u4ef6\u91cc\u9762\u53ef\u4ee5\u83b7\u53d6\u5230", "num": "2088", "d": "12/2015"}, {"title": "css reflow", "body": "tabset example used css frame template change code animation works debugged code found problem code looks like works fine another solution better vue style solution", "num": "2087", "d": "12/2015"}, {"title": "run nodejs", "body": "vue run nodejs need simple webpack config runs linux", "num": "2086", "d": "12/2015"}, {"title": "mustache class compiles undefined", "body": "compiles bug wo nt appear class attribute root child component", "num": "2085", "d": "12/2015"}, {"title": "warning using vm set set nonexistent path", "body": "sorry nt describe clearly setting nonexistent path using vm set vue arises warning like root vue instance used control url routing page loading switching switching login page need inject data root instance nt want define root option want keep root clean possible", "num": "2084", "d": "12/2015"}, {"title": "vmodel attribute lazy", "body": "vmodel attribute lazy activated twice blur change think enough change event", "num": "2083", "d": "12/2015"}, {"title": "\u8bf7\u95ee\u600e\u4e48\u5b9e\u73b0\u5217\u8868\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u7684\u4e00\u4e2a\u56de\u590d\u8868\u5355", "body": "js var listmodel new vue el listpage data list methods \u52a0\u8f7d\u6570\u636e function var appajax postlist function ret thatlistlength thatlist retdata return true \u56de\u590d reply function", "num": "2082", "d": "12/2015"}, {"title": "event fired calling similar route", "body": "loving vuejs far appreciate work put nt know issue assume probably something wrong using vuex addition vue problem nt seem related stores route parameter called slug computed value navigate route different slug data nt updated never called even though works statement inside computed value assuming wrong way go routesjs userprofileviewvue import store store const getuserbyslug storeactions export default computed user storestatecurrentuserslug routeparamsslug getuserbyslug routeparamsslug return storestateuserdata attached getuserbyslug routeparamsslug way force reattach update data", "num": "2081", "d": "12/2015"}, {"title": "data \u91cc\u7684\u6570\u7ec4\u4e0d\u80fd foreach", "body": "", "num": "2080", "d": "12/2015"}, {"title": "vcloak\u5bfc\u81f4\u7ec4\u4ef6\u65e0\u6cd5\u8ba1\u7b97\u9ad8\u5ea6", "body": "ahtml vcloak display none", "num": "2079", "d": "12/2015"}, {"title": "useful feature", "body": "want use components like function arguments like props think could return components useful somecase like datapicker", "num": "2078", "d": "12/2015"}, {"title": "\u5728ios\u8bbe\u5907\u4e0a\u7684\u7ed3\u679c\u662f\u5012\u5e8f\u7684", "body": "html\u5982\u4e0b html key js\u5982\u4e0b vuejs ios \u6d4b\u8bd5\u5730\u5740", "num": "2077", "d": "12/2015"}, {"title": "class classname classname cause duplicated result", "body": "source html expect html result html code \u662f\u6211\u7684\u4f7f\u7528\u59ff\u52bf\u4e0d\u5bf9\u5417", "num": "2075", "d": "12/2015"}, {"title": "\u4e00\u4e2avue\u5b9e\u4f8b\u7684\u67d0\u4e2adata\u5b57\u7b26\u4e32\u53ef\u5426\u88abvue\u89e3\u6790", "body": "\u6bd4\u5982\u8bf4 \u6f14\u793a\u5730\u5740 html\u90e8\u5206 javascript\u90e8\u5206", "num": "2074", "d": "12/2015"}, {"title": "vue\u4e3a\u4ec0\u4e48\u7528\u7684\u65f6\u5019\u8981\u52a0\u4e00\u4e2anew\u5462", "body": "new vue", "num": "2073", "d": "12/2015"}, {"title": "vue js combation fastclick weirdness", "body": "loving vue js great job weird problem though fastclick used events firing listening click accurately vue js bothered try set data event object databound almost like nt update rendering view binding full usecase exercise selector component select exercise exercise gets used input element previous screen works fine use fastclick issue appears databinding bit everything else working fine quite odd even weirder duplicate exercise selected exercise shows duplicated exercise array original like original nt rendered nt detected change", "num": "2071", "d": "12/2015"}, {"title": "\u548c\u5b83\u5185\u90e8\u7684li amp", "body": "\u6e90\u7801 block repeat want make sure return frag bound vfor see ul\u548c \u53c2\u8003issue", "num": "2070", "d": "12/2015"}, {"title": "viewmodel change", "body": "\u6709\u6ca1\u6709\u4e8b\u4ef6\u53ef\u4ee5\u77e5\u9053viewmodel change val \u52a8\u6001\u66f4\u65b0", "num": "2069", "d": "12/2015"}, {"title": "change problem", "body": "upgrade vuejs app going wrong example main different data load input box app create data show input box correctly data empty input box also update data empty cos input box empty also try changed ready created result also guess vmodel input field data show vmodel input field vmodel updated data may wrong way need suggestion many thank please forgive poor engish", "num": "2068", "d": "12/2015"}, {"title": "referencing previous elements vfor", "body": "ran issue trying inspect previous element list relation current one detail working event log would like assign special class first event series events generated user logic similar messaging app creates little arrow chat bubble user different previous sends message user sends message markup nt happen user also straightforward markup notice filtering sorting simply use events original data source filtered sorted moreover factory returns component type created best approach case trying access previous abstract index within underlying dataset operation", "num": "2067", "d": "12/2015"}, {"title": "", "body": "javascript watcher vmuserwatchers key new watcher vm exp wrappedcb deep deep user true javascript var watcher new watcher vm exporfn cb deep options amp amp optionsdeep filters parsed amp amp parsedfilters", "num": "2065", "d": "12/2015"}, {"title": "binding working creation", "body": "hi trying create custom input component component current property value value change editing input element component receiving new value directly via current validation invoked new input case validation pass value accepted value reverted back jsfiddle property main bind current inputcomponent binding working upon creation values different looks like bug since synchronization reflected input change valid sync occur parsing input move ready instead created sync also works looks like issue non syncing value created", "num": "2064", "d": "12/2015"}, {"title": "", "body": "", "num": "2063", "d": "12/2015"}, {"title": "link css nt applied ready hook", "body": "nt use html template looks like html tooltip template tooltipjs looks like debugged code found hook called still position attribute like actural value wanted fix problem", "num": "2062", "d": "12/2015"}, {"title": "\u5b9a\u4e49\u4e00\u4e2a\u5148\u4e8e vif \u6267\u884c\u7684\u6307\u4ee4", "body": "vif \u7684\u4f18\u5148\u7ea7\u662f div vif vif vif \u7684\u6761\u4ef6\u4e3a false \u4e00\u4e2a\u7b80\u5355\u7684 demo", "num": "2060", "d": "12/2015"}, {"title": "editortheme used screenshots docs", "body": "like one", "num": "2059", "d": "12/2015"}, {"title": "use component according async data", "body": "trouble use component async data ready say fetch data router data hook need use components according data fetched fetched data nt know component need use components orders idea template fetched data need push component params template according data thanks answering", "num": "2058", "d": "12/2015"}, {"title": "google maps uncaught typeerror converting circular structure json", "body": "hello trying add google maps object data property vue instance receive following error google maps uncaught typeerror converting circular structure json created basic jsfiddle demonstrate see error development console thank please let know provide details", "num": "2057", "d": "12/2015"}, {"title": "packagejson broken", "body": "packagejson says exists fails", "num": "2056", "d": "12/2015"}, {"title": "safari windows silently fails", "body": "tested app using safari windows pages render navigating page goes blank without errors warnings make demo figure goes wrong perhaps others similar findings", "num": "2055", "d": "12/2015"}, {"title": "computed properties dependencies", "body": "hi feature request would nice could declare dependencies computed properties could run one described values actually changed understand correctly computed properties run update efficient plus track actual changes inside helper bound single value mean think would nice declarative alternative multiple watchers running function", "num": "2053", "d": "12/2015"}, {"title": "arguments undefined null ieedge", "body": "wanted emit custom event variable inside repeater works expected chrome firefox edge first call", "num": "2052", "d": "12/2015"}, {"title": "ignore nonvue elements template", "body": "working aframe used custom web component syntax vue trying parse example component nonvue elements ignored vue templates", "num": "2051", "d": "12/2015"}, {"title": "feature passing filters together prop component", "body": "please see fiddle", "num": "2050", "d": "12/2015"}, {"title": "computed work props", "body": "posted issue sure notifications go closed issue like see issue reopened lets say component something like child component msg props msg type string required false default hello computed msg cached false get function elswidget get text set function value elswidget set text value ready function elswidget superwidget text thismsg parent script define instance child like view creates powerful interaction interface underlying value generatorcontainerproducer declares values passed course well familiar underlying code vue yet internally value provider assign value trigger call update internal value", "num": "2049", "d": "12/2015"}, {"title": "vuejs change templates based media queries", "body": "suggestioninquiry whether vuejs handle dynamically applying templates based media query possible implement support defining component several templates one different media query vuejs apply template query changes playing css media queries allows one simply adjust style layout better fit screen size however offer alter layout way applying different hierarchy element different parents nesting depths vue compiles templates potentially could reconnect data reattach components different template", "num": "2048", "d": "12/2015"}, {"title": "directive always bound root", "body": "inside function would expect would instance though allways get root vue instance using vue html mercilessme hello world javascript vuecomponent uifullscreen template vuedirective test bind function consolelog thisvm thisvm root gt thisvm thisvm root new vue el app console says", "num": "2047", "d": "12/2015"}, {"title": "svg attribute interpolation exception", "body": "raise nevertheless interpolated", "num": "2046", "d": "12/2015"}, {"title": "", "body": "tks demo", "num": "2045", "d": "12/2015"}, {"title": "vref inside vfor defined", "body": "using component produces list components using components inside using component expect behavior component list present see code sample illustrating issue vuejs think related", "num": "2044", "d": "12/2015"}, {"title": "binding muted attribute work", "body": "repro", "num": "2042", "d": "12/2015"}, {"title": "suggestion api change add new reactive values observed array items", "body": "faced problem component like div vfor index item items vshow itemhidden clickprevent hide index gt itemtext data items text foo text bar methods hide function index hide item setting item index hidden nt work expected since nt property registered observer able make work think might nicer ways added array observer please note might already way better right could nt find docs proposals works similar instead replacing object extends object work setting multiple properties works enhancing arrays prototype pass two args current behaviors pass set key", "num": "2041", "d": "12/2015"}, {"title": "transition ending firefox", "body": "code jsfiddle chrome ok firefox change value false ok use case page loaded show loading gif hide loading gif page loaded", "num": "2040", "d": "12/2015"}, {"title": "vue global set", "body": "vueset data c try set like data globally show reference error data define", "num": "2039", "d": "12/2015"}, {"title": "vuedelete key object vfor", "body": "hello got something like javascript new vue el content data html html method uncaught typeerror read property parentnode null pops idea next option convert nonaction array would pain would like solution tried removing inner contents vfor error still occurs remove vfor completely html error pop thanks", "num": "2038", "d": "12/2015"}, {"title": "use localstorage vue", "body": "posted chat twice nobody answered hoping get help mixin isloggedin return true item present localstorage false nt question reevaluate state update remove item form localstorage elements shown isloggedin true right use vshow isloggedin would suggest something else nt know best practice thanks guys", "num": "2037", "d": "12/2015"}, {"title": "vuedelete amp vueset \u65e0\u6cd5\u89e6\u53d1watch", "body": "push pop shift unshift splice sort reverse javascript var testvm new vue el ct data name \u6d4b\u8bd5\u4eba\u5458 info age school \u6d4b\u8bd5\u5b66\u6821 frends", "num": "2036", "d": "12/2015"}, {"title": "issue", "body": "works fine get error vue working vue error", "num": "2035", "d": "12/2015"}, {"title": "access data inside slot fallback", "body": "possible access parent data inside slot fallback component example vue moduleexports data function return something cool example", "num": "2034", "d": "12/2015"}, {"title": "reserved component names", "body": "first try attempted message looked pretty bythebook turns work change name reason everything fine error message anything name nt work nothing shows output correctly gives component name reserved something reserved component names maybe reserved names prefixed something nt collide userland component names", "num": "2033", "d": "12/2015"}, {"title": "bug multipleselect mouse event handling", "body": "clickdrag select multiple items select list chrome event handler misses mouseup event nt trigger model update", "num": "2032", "d": "12/2015"}, {"title": "javascript vs filter syntax", "body": "particular reason vue needs invent custom syntax filters imo would intuitive js context easy mistake js syntax extension expecting things like work alternatively maybe syntax could align better js eg maybe subtle syntax extension like special character indicate filter expressions also allow inline evaluation eg rather throwing ideas", "num": "2031", "d": "12/2015"}, {"title": "\u6570\u7ec4\u4e2dwatch\u53d8\u5316\u7684\u95ee\u9898", "body": "", "num": "2030", "d": "12/2015"}, {"title": "chrome plugin prevent enter key action", "body": "example input info form input focus input press key nothing happened finally found remove chrome plugin message shows vue bug browser problem", "num": "2029", "d": "12/2015"}, {"title": "form nt sync changes submit using debounce option", "body": "blur handler calling debounced version listener opinion purpose debounce keystrokes blur makes sense sync changes immediately avoid stale data example input something press enter click submit right", "num": "2028", "d": "12/2015"}, {"title": "vif vorks oddly transition lacking leavetransition", "body": "sure bug feature code double click button additional label displayed", "num": "2027", "d": "12/2015"}, {"title": "vpre component root element", "body": "used component root element vue fails unhelpful message believe turn instance fragment instance instead repro", "num": "2026", "d": "12/2015"}, {"title": "feature need similar anuglar", "body": "sometimes want set new property vfor loop item find hard html angular use easily html lorem wish vue similar anuglar scenario vue angular", "num": "2025", "d": "12/2015"}, {"title": "bug regarding arrayunshift together vfor vmodel radiobutton group", "body": "click add first time value original radio button disappear although vmodel value still click add second time dom added although array changed", "num": "2024", "d": "12/2015"}, {"title": "vmodel debounce param issue uncaught typeerror read property set null", "body": "debounce internal timeout id needs clear unbinding vmodel directive avoid calling directiveset directive teardown call reproduce error focus input field click hide button", "num": "2023", "d": "12/2015"}, {"title": "transition \u52a8\u753b\u6548\u679c\u5bf9\u4e8e\u901a\u8fc7 vm \u65b0\u589e\u7684\u6570\u636e\u4e0d\u80fd\u6b63\u5e38\u6267\u884c", "body": "\u5bf9\u4e8e\u901a\u8fc7 vm \u5faa\u73af\u751f\u6210\u7684\u5143\u7d20\u4e2d\u4f7f\u7528 \u548c \u4e14 \u503c\u4e3a \u5143\u7d20\u7684\u6700\u7ec8\u72b6\u6001\u662f \u800c\u4e0d\u662f \u6ca1\u6709", "num": "2022", "d": "12/2015"}, {"title": "fontface unicode display icons correctly", "body": "using font icon unicode insertion dom display strings online", "num": "2021", "d": "12/2015"}, {"title": "receive oauth token vue since routes behind", "body": "using oauth provider forwards token url like set oauth redirect url end loose route tried tricks book ca nt figure deal vue configure nginx make work thanks much disclaimer posted issue also vuerouter maybe appropriate place", "num": "2020", "d": "12/2015"}, {"title": "transitions view model parent set", "body": "seems transitions nt fire templates view model parent property set using example vue website js fiddle change external resource use later beta like set add var vm vue existing view model add parent vm transition animation stops firing simply commenting parent vm allows work bug missing something", "num": "2019", "d": "12/2015"}, {"title": "support multiple javascript dialects expressions", "body": "support alternate dialects vue expressions introduction thinking implementing support using dialects javascript coffeescript opal expressions handlebars directives figured would open issue see vue community would benefit motivation implementing would allow developers use one programming language form cohesive application would remove need developer use multiple programming languages build application amount vanilla javascript used expressions small cause hiccup developer wants use sugar available language would cumbersome write vanilla javascript expression pros one javascript dialect code use syntactic sugar desired dialect cons could cause confusion another developer attempts readmodify code unaware special dialect resolution brief developer custom vue configuration syntax highlighting inside expressions supported future could cause syntax highlighter break resolution since syntax highlighter nt access vue runtime one would specify tag similar syntax highlighter interpret detailed example workflow use would something like example webpackenabled app coffeescript appcoffee probably better require webpackprovideplugin coffee require coffeescript vue require vue could compiler dialect whatever makes sense config value would set function transpiles language javascript vueconfigexpressiondialect coffeecompile alternate method compiler requires extra options vueconfigexpressiondialect expression coffeecompile expression bare true vuecomponent app require appvue vm new vue el body methods somemethod options amp amp bar jade appjade html body app vif somemethod foo bar vue app myclass getdate today else today moduleexports data somevar methods getdate date new date date today new date dtodatestring todaytodatestring return true else return false detailed implementation developer would set equal dialect transpilation function developer would write vue components using desired dialect expressions vue parses expression check defined defined parser pass expression transpile function eval return transpiled expression defined parser simply eval return expression impact existing code would affect existing codebases default value would use vanilla javascript miscellaneous commentary one may argue using logic expressions unnecessary since logic could moved method counterargument could ability call nested function object tree structure using coffeescript existential operator vanilla javascript either significantly verbose simply nt handle undefined children jade vanilla javascript somecomponent somediv app appfoo appfoobar appfoobarbaz appfoobarbazsomemethod args null null null null one could simply write somediv appfoobarbazsomemethod args accept fact vue throw warning coffeescript syntax would handle undefined child simply stop walking tree jade coffeescript somecomponent somediv app foo bar baz somemethod args another example implementation usefulness could ability use coffeescript list comprehension extremely contrived probably useless example vue vanilla javascript somecomponent somediv vrepeat arr foothefoo foo someotherdiv arr moduleexports data foo bar baz qux methods foothefoo foo results val foo resultspush val results obviously since script written coffeescript one could simply write following provide example able write list comprehension vrepeat directive val val foo vue coffeescript somecomponent somediv vrepeat arr foos val val foo someotherdiv arr moduleexports data foo bar baz qux questions comments feel free reply issue contact twitter thetaylorzane gitter taylorzane", "num": "2018", "d": "12/2015"}, {"title": "submit bug", "body": "pressing enter button keyboard input triggers event cause reactive changes input clicking button demo repo edit changed clicking pressing might source confusion", "num": "2017", "d": "12/2015"}, {"title": "testing needs sorted", "body": "hello seen anyone talking testing see checkout source code tests testing vuejs issue believe testing broad concept frameworks like needs official documentation covering different aspects testing agree unit testing issue every component object tested easily problem writing code make use breaks testing breaks badly next tried making use frameworks like testing breaks frameworks expect test click events help css selectors vuejs habit creating css selectors easily two way data binding resulting tests hard write one using frameworks hard work upto date vuejs development might guys great plans sort denying fact testing framework issue expecting", "num": "2016", "d": "12/2015"}, {"title": "", "body": "", "num": "2015", "d": "12/2015"}, {"title": "default value select box", "body": "old setting model selected default manually loop create setting model nt select default anymore must set empty string ugh", "num": "2013", "d": "12/2015"}, {"title": "release plan csp", "body": "main autobuild along normal release", "num": "2012", "d": "12/2015"}, {"title": "class style bindings bug", "body": "vbind class array bug use vbind class active isactive works example flag steps radio input active default click radio input change flag result radio input radio input active changed use vbind class active flag works correctly", "num": "2011", "d": "12/2015"}, {"title": "conditional slots possible", "body": "achive component template looks like works set replace param component true end custom tag html thoughts", "num": "2009", "d": "12/2015"}, {"title": "\u904d\u5386", "body": "\u89c2\u5bdf", "num": "2008", "d": "12/2015"}, {"title": "mistake vfor directive json", "body": "component subcomponent user work fine write data json instead get error uncaught typeerror read property adddep null depdepend reactivegetter read vueapplyfilters watcherget watcher directivebind linkandcapture compositelinkfn vuecompile vue mount vueinit vuecomponent build mountcomponent anonymous function anonymous function cb vueresolvecomponent resolvecomponent setcomponent bind directivebind linkandcapture compositelinkfn vuecompile vue mount vueinit vue anonymous function", "num": "2007", "d": "12/2015"}, {"title": "feature computed property component", "body": "assumption list objects represented components components bit complexity computed properties would come handy could find solution elegantly handle see solutions project using vue usage vcomponent able computed properties inside component called iterating array using components already asked forums gitter nobody able help yet assumed possibly implemented yet simple example showing would like accomplish feature requesting way parent vm know anything contents simply sets data component rest done html item emitted loop want call computed property sum contents nt work way implemented give idea trying work around abusing computed property parent vm way parent know data compute properties children imagine badly performing larger data structures nt know would best define computed property related item rather container parent vm component used display child seems right", "num": "2006", "d": "12/2015"}, {"title": "clear way contribute wiki", "body": "hey guys trying add skeleton application created however figured add since forking project wo nt fork wiki along cloned wiki desktop made changes tried pushing got may new github however maybe quick explanation doc contribute would nice", "num": "2005", "d": "12/2015"}, {"title": "feature passing props partials", "body": "far understand partials scope variables inside partial surrounding component vuepartial mypartial partial msg case would part data right passing props partials would find really useful able pass props directly partial vuepartial mypartial partial msg reasoning often use partials functionless snippets svg icons need able pass different values using components case seems like much example vuepartial mypartial sure plenty usecases think", "num": "2004", "d": "12/2015"}, {"title": "type transformation modifiers vmodel", "body": "morgul comment html would also seem useful able register custom transformations eg datetime transformations momentjs objects", "num": "2002", "d": "12/2015"}, {"title": "inconsistent class binding behavior", "body": "upgrading vue still experiencing class attribute merging problems previous versions duplicate", "num": "2001", "d": "12/2015"}, {"title": "vfor performance issue", "body": "hi table row column using vfor rendering slow improve efficiency", "num": "2000", "d": "12/2015"}, {"title": "\u7528von\u7ed1\u5b9a\u4e8b\u4ef6\u662f\u5426\u6709\u65b9\u6cd5\u83b7\u53d6\u5230\u89e6\u53d1\u7684this\u5bf9\u8c61", "body": "\u9996\u5148\u6211\u77e5\u9053\u53ef\u4ee5\u7528\u83b7\u53d6\u5230\u70b9\u51fb\u5230\u7684\u5143\u7d20 \u5e0c\u671b\u5f97\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848", "num": "1999", "d": "12/2015"}, {"title": "array er recieves wrong", "body": "repro output", "num": "1998", "d": "12/2015"}, {"title": "space component name throw error", "body": "found little bug create component component name space reported error making hard debugging div wrapper menu msg export default name layout app replace false data function return msg hi", "num": "1997", "d": "12/2015"}, {"title": "von click set scope used vfor", "body": "dose nt seem work jsfiddle", "num": "1996", "d": "12/2015"}, {"title": "define property ob android", "body": "\u7cfb\u7edf \u9519\u8bef uncaught typeerror define property ob object extensible \u5de5\u5177 \u7248\u672c vue \u5728\u70b9\u51fb\u6709\u8def\u7531\u8df3\u8f6c\u4e8b\u4ef6\u7684\u5143\u7d20\u65f6\u8def\u7531\u4e0d\u8df3\u8f6c\u5e76\u51fa\u73b0\u5982\u4e0b\u9519\u8bef vlink\u548croutergo\u90fd\u4f1a\u51fa\u9519 \u5237\u65b0\u4e4b\u540e\u8def\u7531\u8df3\u8f6c\u5230\u4e4b\u524d\u672a\u8df3\u8f6c\u7684\u8def\u7531 ios\u65e0\u6b64\u95ee\u9898 \u6362\u56devue", "num": "1995", "d": "12/2015"}, {"title": "transition error", "body": "demo code fast multiple clicks nav error", "num": "1994", "d": "12/2015"}, {"title": "escaping custom tag vue component", "body": "hey want ignore custom tag eg mytag treat count vue component giving warning way change commontagre done via vueutilextend", "num": "1993", "d": "12/2015"}, {"title": "transitions everything", "body": "hi see transitions showhide element would easy make available property transition would play changing state lets call state property example html javascript vuetransition expand beforestateenter function el eltextcontent beforeenter stateenter function el eltextcontent enter", "num": "1992", "d": "12/2015"}, {"title": "chrome plugin mode support", "body": "html name run directly browser developing chrome plugin use work show html vuejs use feature supported chrome plugin mode", "num": "1991", "d": "12/2015"}, {"title": "suggestion allow control dispatch whether trigger self", "body": "use recursive component build tree component want leaf nodes dispatch event data upper node get whole data tree root node wrote keep triggering crush although use two way binding advice add param dispatch control whether trigger self somthing like problem solved default dispatch still triggers self omit set compatible please consider implement ok submit pr thanks", "num": "1990", "d": "12/2015"}, {"title": "el move another place unexpectedly vm created", "body": "put vm created moved behave", "num": "1989", "d": "12/2015"}, {"title": "private scope nonreactive data methods", "body": "data kept track component need made reactive currently one place organize private data like values stores even prefixed underscore eg get methods added every key object would like dedicated space designated vue private data functions made reactive realize even create something like guarantee clash vue future development would great namespace allocated populated key component configuration object data function props methods private private variables made reactive watched", "num": "1988", "d": "12/2015"}, {"title": "passing data components overly complicated common simple examples", "body": "setup lt svg gt lt g vfor pt pts gt lt rect x ptx pty width z height z gt lt rect gt lt g gt lt svg gt instance var pts x x z var v new vue el graph pass data child templates automatically data pass data html elem nt access vue instance child like normal html would", "num": "1987", "d": "12/2015"}, {"title": "vue multiple checkbox", "body": "bug using vue checkbox used like documentation check one button vue automatically select items", "num": "1986", "d": "12/2015"}, {"title": "error rendering nested checkboxes sessionstorage", "body": "problem rendering nested checkboxes view problem array arrays button try render label vue buttontext wish save user clicked click link go back choices remembered wish refresh remembered close session come back later reset gets inconsistent click first box hit refresh remember enable one checkbox enabled click link go back buttons enabled reason get set true enable second checkbox hit refresh enabled click link go back checkbox stay enabled expected happens first checkbox created demo illustrate gist positive trouble browsers reason recreate chrome opera suspect something blink engine problem safari complex application ca nt share firefox plays nicely though problem thank advance", "num": "1985", "d": "12/2015"}, {"title": "\u8bf7\u95ee\u4e3a\u4ec0\u4e48\u53cc\u5411\u8fc7\u6ee4 \u4fee\u6539\u540e\u9762\u7684\u503c model\u6ca1\u53d8\u5316", "body": "\u8bf7\u95ee\u4e3a\u4ec0\u4e48\u53cc\u5411\u8fc7\u6ee4\u4fee\u6539\u540e\u9762\u7684\u503c model\u6ca1\u53d8\u5316 \u800c\u5b98\u7f51\u7684demo\u4e0a\u4e3a\u4ec0\u4e48\u4f1a\u8054\u52a8 \u6211\u7684demo\u5730\u5740 \u5e0c\u671b\u80fd\u6307\u51fa\u6211\u54ea\u91cc\u5199\u9519\u4e86 \u6216\u8005\u600e\u4e48\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898 \u8c22\u8c22", "num": "1984", "d": "12/2015"}, {"title": "optimize vfor rendering performance first time", "body": "use vue js wrote date component processing date panel using v hair rendering slow little choice optimization method", "num": "1983", "d": "12/2015"}, {"title": "used inside routerenabled app", "body": "warning although routing working fine cant get rid appjs javascript vue vueconfigdebug true var app new vue el app vuefilter int function value return parseint value var router new vuerouter routermap report component require componentsreportvue component require componentsselectionvue routerstart app app indexhtml html turn debug mode additional warning appears get rid make sure everything working fine thanks advance", "num": "1981", "d": "12/2015"}, {"title": "messed order children using vfor", "body": "hi tried use html javascript use id indicate component illustration purpose consolelog children output n would reasonable n anything may done wrongly cause thanks", "num": "1980", "d": "12/2015"}, {"title": "shorthand syntax component definition properly working", "body": "using shorthand syntax first one several sequentially defined components rendered example html", "num": "1979", "d": "12/2015"}, {"title": "broadcast description api misleading", "body": "eventscount returns immediate descendants events optionally bug makes eventscount return immediate descendants events", "num": "1978", "d": "12/2015"}, {"title": "broadcast data activate hook working", "body": "codepen events empty collections activate data phase broadcast even emit working data activate hooks nt found information suggesting design nt think", "num": "1977", "d": "12/2015"}, {"title": "adding transition component breaks vshowvif", "body": "fiddle remove html like works fine something stupid missing like able transition tab change atm nt seem work end state transition seems persist non active tabs change seems get worse dom seems get active item added instead removing becomes inactive well", "num": "1976", "d": "12/2015"}, {"title": "async problem passing property child component", "body": "two component grid parent contain array emotions use vfor initiate multiple emotion component fight computed property depends data data property using ajax html emotion component errors receive console require emotion component child parent component seems rendered data work thanks advance", "num": "1974", "d": "12/2015"}, {"title": "js question listen object property change", "body": "sorry silly question start learn viewjs data dom linked everything reactive know open browser developer console modify exampledataname suprised use observe ecmascript", "num": "1973", "d": "12/2015"}, {"title": "able compute properties pass props", "body": "basically setting computed property prop name nt work well sample use case custom input data json vuecomponent custominput template custominput data function return b computed value get function return set function parts partspartssplit props value new vue el app custom input would like able pass default value also needs computed value component manipulate maybe going wrong way workaround use different name prop use callback set computed value", "num": "1972", "d": "12/2015"}, {"title": "add von doubleclick", "body": "double click event", "num": "1971", "d": "12/2015"}, {"title": "make return value", "body": "hi would nice function return value passed parameters example would useful instead coffee methods somemethod val gt new someclass val vueset someproperty key also pretty change one line around", "num": "1970", "d": "12/2015"}, {"title": "", "body": "\u5f00\u53d1\u73af\u5883 vuevueloadervuerouterjqueryperfect scrolljquery \u95ee\u9898 \u8fd9\u662f\u5f15\u7528perfect scrollvue\u7684\u6e90\u4ee3\u7801 var require jquery require perfectscrollbarjquery require libperfectscrollbarmincss viewdanamic perfectscrollbar notice perfectscrollbar \u7ec4\u4ef6\u5207\u6362\u56de\u6765\u540e", "num": "1969", "d": "12/2015"}, {"title": "property object without explicit initialisation constructor become reactive", "body": "assign array task objects vuedata instance property task set inby constructor vue attach settergetter functions design following case reactive class task name isrunning false show true constructor name isrunning false gt set explicitely constructor reactive class task name isrunning false show true vue creation class viewmodel search nb local property set explicitely inby constructor either reactive nontheless", "num": "1968", "d": "12/2015"}, {"title": "vue destroy remove trigger detached hook second level children", "body": "experienced issue levels vue components calling top component trigger detached hook bottom child looking function think issue called last point children hierarchy called causing remove event hooks part think removal brought cleanups lifecycle order changed evan please excuse breaking something making faulty statement could nt anywhere detached hook supposed called found one test validates called destroyed humble opinion think detached called destroyed nt state component detached go back attached destroyed instance mean say component hierarchy b c calling events would detached detached detached beforedestroy beforedestroy beforedestroy destroyed destroyed destroyed observe pending proposal fix post soon", "num": "1966", "d": "12/2015"}, {"title": "calling slot removed first time", "body": "trying components slots something weird happening component bootstrap modal made work passing boolean prop showeditstatemodal shows hides modal header body default footer slot problem first time open modal page load correctly copies slot div right place also copies default slot body dom looks like html edit state x x close modal correctly copies element footer first time open model problem happens also theres another problem since giving content besides footer slot default slot body component template printed see xyz body empty templates parent component html lt div class modal fade tabindex role dialog vmodal show vif show gt lt div class modaldialog gt lt div class modalcontent gt lt div class modalheader headerclass gt lt slot name header gt lt button type button class close datadismiss modal ariahidden true gt lt button gt lt class modaltitle vif title vtext title gt lt gt lt slot gt lt div gt lt div class modalbody gt lt slot gt xyz lt slot gt lt div gt lt div class modalfooter gt lt slot name footer gt lt slot gt lt div gt lt div gt lt div gt lt div gt", "num": "1965", "d": "12/2015"}, {"title": "allow computed properties subobjects", "body": "want something like way actual computed property song object feeling may quite easy add pointers start happy try add", "num": "1964", "d": "12/2015"}, {"title": "support jquery data method binding data attribute", "body": "yes understand jquery feature update internal data array data attributes changed element breaks expected reactivity binding data attributes changes data storage first time futher changes effect", "num": "1963", "d": "12/2015"}, {"title": "slot select nt work", "body": "hi component iselect template like following parent template use component like following content inserted slot somehow move slot select everything works fine", "num": "1962", "d": "12/2015"}, {"title": "null treated object component prop check", "body": "component let user select object array parent template something like html blah blah blah please select object displays different content based whether object selected get know remove type object check suppress warning would nt better component props checks treat null object javascript typeof null object setting null initial value knowledge nt affect mutation observation", "num": "1961", "d": "12/2015"}, {"title": "class foo class foo treated way transitions", "body": "example using template elements nt transitioning use transition fine", "num": "1960", "d": "12/2015"}, {"title": "suggestion directly declared enter class leave class transition definition", "body": "using lib like animatecss ca nt integration easy vue expect integration animatecss", "num": "1956", "d": "12/2015"}, {"title": "use syncronously async", "body": "maked post request get data replace data vue run code vue instance change data still time", "num": "1954", "d": "12/2015"}, {"title": "check type children component", "body": "hi want something like parent component displays number children components specific type example achieve saw implementation assign specific class children parent component uses jquery find children class works wondering less jquery dom approach achieve", "num": "1953", "d": "12/2015"}, {"title": "parent component activate hook ca nt used conjunction child required props", "body": "using activate hook parent component child components throw vue errorswarnings required props example parent async data fetching resolves activate hook loaded child required prop dependant data prior activate hook resolved throw vue error sure bug makes logical sense based activates description make async loading required props little difficult deal", "num": "1952", "d": "12/2015"}, {"title": "", "body": "var example vueextend template message data function return message hello vuejs", "num": "1951", "d": "12/2015"}, {"title": "suddenly discovered hidden feature class bindings", "body": "cool html component propvariable think need documented", "num": "1950", "d": "12/2015"}, {"title": "compatibility linters rules nonew noundef", "body": "using eslint code linting vue code goes like linter say write linter say okay add config file linter project comes using unconfigable linter like standard error always shown way avoid new method versions like", "num": "1948", "d": "12/2015"}, {"title": "suggest methods like appendto work component instance", "body": "like component instance ca nt directly appendto dom report must like var alert require componentalertalert moduleexports function message var vm new alert suggest vm directly appendto dom", "num": "1947", "d": "12/2015"}, {"title": "inconsistent class binding behavior", "body": "hello creating component using following markup template using component follows would expect see result true modern browsers unfortunately real one emulated mind empty live demo bug missing something", "num": "1946", "d": "12/2015"}, {"title": "need variables inline statement", "body": "currently variables provided represents first argument handler called dom events case suitable custom vm events especially multi arguments eg js parent child emit myevent foo bar suggest add flexible variable represents arguments get argument convenient provide represents corresponding arguments like bash agree think necessary please let pull pr trollface", "num": "1945", "d": "12/2015"}, {"title": "", "body": "hi \u6211\u5c1d\u8bd5\u4f7f\u7528 \u8bf7\u95ee\u662f\u5426\u6709\u66f4\u5b98\u65b9\u7684\u65b9\u6cd5\u5b9e\u73b0 js vuecomponent mycomp function resolve var vm new vue el wrapper data ps \u8fd9\u4e2a\u6309\u94ae\u53ef\u80fd\u4e0d\u4f1a\u6709\u4eba\u70b9 btn click function", "num": "1944", "d": "12/2015"}, {"title": "\u8bf7\u95ee\u5982\u4f55\u7ed1\u5b9atouch\u4e8b\u4ef6", "body": "von touch demo von touchend demo \u5747\u65e0\u6548", "num": "1943", "d": "12/2015"}, {"title": "vuejs defiantjs return duplicate result safari browser", "body": "using defiantjs vuejs search json data return duplicate item affect safari browser posted issue defiantjs think problem may vuejs testing defiantjs without using vuejs problem result identical sample update sorry forget searching close issue may duplicate", "num": "1942", "d": "12/2015"}, {"body": "place kind question", "d": "12/2015"}, {"body": "zchking please us vue community forum stackoverflow types questions issues section within github reporting potential bugs providing feedback enhance project", "d": "12/2015"}, {"body": "looks like new year countdown needs urgently happy new year make sure read contribution notes new year trollface", "d": "12/2015"}, {"body": "prefixed properties reserved vue internal properties available direct binding bind", "d": "12/2015"}, {"body": "thanks evan explanation dec evan notifications githubcom wrote prefixed properties reserved vue internal properties available direct binding bind datamessage reply email directly view github", "d": "12/2015"}, {"body": "see browser console", "d": "12/2015"}, {"body": "define css rules classes", "d": "12/2015"}, {"body": "defined class enter leave example add enter leave class use css animations like", "d": "12/2015"}, {"body": "pespantelis compare", "d": "12/2015"}, {"body": "vue tell whether want transition end event event added ability manually specify transition type let vue know end transition css animation finishes next patch want use build dev branch", "d": "12/2015"}, {"body": "gitter", "d": "12/2015"}, {"body": "could provide jsfiddle also stand", "d": "12/2015"}, {"body": "intended slot content considered parent thus styled parent", "d": "12/2015"}, {"body": "actually might better way handle let move", "d": "12/2015"}, {"body": "think misunderstood vue reactivity works object blackbox complex internal state plain data object vue guarantee observe see", "d": "12/2015"}, {"body": "vue \u7684\u6a21\u677f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u72b6\u6001\u5230 dom vue \u7684\u6a21\u677f\u672c\u8eab\u63d0\u4f9b\u7684\u903b\u8f91\u539f\u8bed\u6bd4\u5982 \u548c slots \u548c", "d": "12/2015"}, {"body": "detect nested value changes inside objects enable option", "d": "12/2015"}, {"body": "reproduce please provide reproduction", "d": "12/2015"}, {"body": "anygong \u628a\u53c2\u6570\u91cc\u7684\u53cc\u5f15\u53f7\u6362\u6210\u5355\u5f15\u53f7", "d": "12/2015"}, {"body": "nt always guarantee reflow example firefox prefer explicitly forcing reflows", "d": "12/2015"}, {"body": "trying accomplish sure vuejs run nodejs server need something like jsdom emulate nt know trying", "d": "12/2015"}, {"body": "please ask questions gitter forum regarding question vue currently needs jsdom render things node", "d": "12/2015"}, {"body": "note fix parent class overwrite child class always sets entire class want preserve child class still use instead", "d": "12/2015"}, {"body": "think put description issue title worried", "d": "12/2015"}, {"body": "copy pasted console warning provide repro ad show interest creating issue otherwise get ignored", "d": "12/2015"}, {"body": "closed skull", "d": "12/2015"}, {"body": "please specific issue closing descriptions provided", "d": "12/2015"}, {"body": "sorry nt think clearly whether vue issue wrong way created issue put aside lately forgot totally", "d": "12/2015"}, {"body": "ping", "d": "12/2015"}, {"body": "fenivana looked vuestrap scott", "d": "12/2015"}, {"body": "smolinari said bootstrap means boot loader entry point appjs rather bootstrap css framework", "d": "12/2015"}, {"body": "doh sorry mentioned anything lol scott", "d": "12/2015"}, {"body": "could provide example please", "d": "12/2015"}, {"body": "first add date watcher activated twice", "d": "12/2015"}, {"body": "nt think understand yourissue well honest seems watch callback lacks logic original pen shows soon input got focus alert get watch missing logic try simple ghetto solution best one html alert old val old new val new javascript var demo new vue el demo data message null alert old new watch message function newval oldval oldval null thisalert thisalert thisold oldval thisnew newval function datepicker datepicker code pen reference", "d": "12/2015"}, {"body": "work value written inserted manually", "d": "12/2015"}, {"body": "pavelcss silly solution point problem implementing callback", "d": "12/2015"}, {"body": "\u5982\u679c\u7ed9\u52a0\u4e2a\u5c5e\u6027\u6bd4\u5982", "d": "12/2015"}, {"body": "vuejs", "d": "12/2015"}, {"body": "maybe use could provide example fiddle", "d": "12/2015"}, {"body": "zepto html \u56de\u590d js reply function eve pid idx var var iptele evetarget parent find input var remsg ipteleval trim", "d": "12/2015"}, {"body": "thanks pespantelis", "d": "12/2015"}, {"body": "infinite list worry using components influence performance use little bit zepto method code pespantelis", "d": "12/2015"}, {"body": "configured component option maybe future allow configured places", "d": "12/2015"}, {"body": "thanks wrong project could useful example explanation around location options apply component assume applies listed merry christmas", "d": "12/2015"}, {"body": "\u6211\u7684\u6a21\u578b\u5927\u6982\u662f\u8fd9\u6837\u5b50\u7684", "d": "12/2015"}, {"body": "\u600e\u4e48\u5728 save \u65b9\u6cd5\u91cc \u53d6\u51fa\u6240\u6709 images \u91cc\u7684 path", "d": "12/2015"}, {"body": "change parameters callback", "d": "12/2015"}, {"body": "pespantelis thank right", "d": "12/2015"}, {"body": "\u56e0\u4e3a \u88ab\u79fb\u9664\u540e\u7acb\u523b\u4f1a\u540c\u6b65\u8c03\u7528 css \u6216\u8005 \u7b49\u4e00\u5e27\u5c31\u597d\u4e86", "d": "12/2015"}, {"body": "specific mean like function", "d": "12/2015"}, {"body": "closing details provided", "d": "12/2015"}, {"body": "user stackoverflow issue", "d": "12/2015"}, {"body": "\u5df2\u7ecf\u5728 \u770b\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86", "d": "12/2015"}, {"body": "expected object guarantee enumeration order determined js engine use explicit ordering", "d": "12/2015"}, {"body": "interesting behaviour looking forward fix", "d": "12/2015"}, {"body": "interesting nt found sooner good catch scott", "d": "12/2015"}, {"body": "class bindings array syntax", "d": "12/2015"}, {"body": "nice bill thanks solution still binding test nt cause icon inserted twice scott", "d": "12/2015"}, {"body": "smolinari would say judging docs went along two default ways bind classes always assumed interpolation attribute value would nt work without prefixing", "d": "12/2015"}, {"body": "cool pespantelis looks figured issue nice work pantelis scott", "d": "12/2015"}, {"body": "thanks smolinari smiley", "d": "12/2015"}, {"body": "\u8fd9\u91cc\u7684 markdown html", "d": "12/2015"}, {"body": "issue", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "\u9879\u76ee\u80cc\u666f\u662f\u505a\u4e86\u4e00\u4e2acss", "d": "12/2015"}, {"body": "\u90a3\u5c31\u76f4\u63a5\u4f5c\u4e3a\u7ec4\u4ef6\u7684 \u800c\u4e0d\u662f\u7528 \u554a", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "\u56e0\u4e3a \u8bf7\u4e0d\u8981\u7528 issue", "d": "12/2015"}, {"body": "please provide reproduction", "d": "12/2015"}, {"body": "possible force render element component", "d": "12/2015"}, {"body": "possible rather figure really wrong forcing rerender tue dec pm kirk bushell notifications githubcom wrote possible force render element component reply email directly view github", "d": "12/2015"}, {"body": "like well like know indeed update issue feels like sure", "d": "12/2015"}, {"body": "ca nt tell reproduction tue dec pm kirk bushell notifications githubcom wrote like well like know indeed update issue feels like sure reply email directly view github", "d": "12/2015"}, {"body": "let know test need difficult investigation providing thorough report ie force rerender component", "d": "12/2015"}, {"body": "internal api may may future nt want people using insist call vmdigest instance force rerender point vm log state component see reactivity issue forcing rerender nt help much diagnosing problem tue dec pm kirk bushell notifications githubcom wrote let know test need difficult investigation providing thorough report reply email directly view github", "d": "12/2015"}, {"body": "tbh trying make hard people often make wrong assumptions actually causing issue time helpful provide actual code", "d": "12/2015"}, {"body": "oh agree wanted investigate nt aware log perfect investigate using figure hell convert vue something usable demo p", "d": "12/2015"}, {"body": "okay quick test local log shows data applicable instance nt rendering call digest shows expect fastclick appears getting way somewhere vue calls odd click event firing getting right data back parent component data correctly rerendering updating required collection selected exercises anyways setup fiddlebin reproduce", "d": "12/2015"}, {"body": "closing inactivity feel free reopen repro information available", "d": "12/2015"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "12/2015"}, {"body": "boiled probably get fixed recommendations use instead unless good reason use attribute alongside directive", "d": "12/2015"}, {"body": "close nt issue still get looked especially worked previous build", "d": "12/2015"}, {"body": "nt going get answers questions issue software possible bug post otherwise gitter channel forum ask questions sorry runaround going get answer evan anyway might well close issue move question one support areas thanks scott", "d": "12/2015"}, {"body": "nt seem like bug closing please post similar questions forum instead", "d": "12/2015"}, {"body": "\u6211\u73b0\u5728\u5c31\u5728\u7528\u8fd9\u5757\u505a\u5fae\u4fe1\u7684\u5f00\u53d1 \u5982\u679c\u5fae\u4fe1\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u7684\u8bdd \u5e94\u8be5\u517c\u5bb9\u6027\u90fd\u6ca1\u4ec0\u4e48\u95ee\u9898", "d": "12/2015"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue \u5bf9\u5b89\u5353\u7684\u652f\u6301\u6d4b\u8bd5\u8fc7\u7684\u662f \u4ee5\u4e0b\u4e0d\u80fd\u4fdd\u8bc1 transition", "d": "12/2015"}, {"body": "triggers http request fetch css inserted asynchronous ready called synchronously insertion way works short answer use vueify", "d": "12/2015"}, {"body": "\u4e3a\u4ec0\u4e48\u8981\u5148\u4e8e vif sun dec pm zhonglei qiu notifications githubcom wrote vif \u7684\u4f18\u5148\u7ea7\u662f div vif vif vif \u7684\u6761\u4ef6\u4e3a false \u4e00\u4e2a\u7b80\u5355\u7684 demo reply email directly view github", "d": "12/2015"}, {"body": "\u81ea\u5b9a\u4e49\u4e86\u4e00\u4e2a loading loading \u8fc7\u7a0b\u4e2d vif \u5f97\u5230\u7684\u662f \u5c31\u53d8\u6210 true loading \u5148\u4e8e vif \u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u7528 \u800c\u4e0d\u662f\u8fd9\u6837 ps \u77e5\u9053 vuerouter \u4e0a\u6709\u4e2a data router", "d": "12/2015"}, {"body": "\u770b\u6765\u53cc\u5411\u7ed1\u5b9a\u4f60\u8fd8\u6ca1\u61c2", "d": "12/2015"}, {"body": "\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u6211\u4f1a\u5728\u6307\u5b9a\u7684 dom", "d": "12/2015"}, {"body": "html loading \u5c55\u793a\u6570\u636e", "d": "12/2015"}, {"body": "\u5728 evan notifications githubcom loading \u5c55\u793a\u6570\u636e reply email directly view github", "d": "12/2015"}, {"body": "\u5728 vue dom loading \u76f8\u5173\u7684\u4e1c\u897f\u505a\u6210\u4e00\u4e2a\u7ec4\u4ef6\u7684 mixin", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "\u5728 evan notifications githubcom \u5728 vue dom vloading loading \u76f8\u5173\u7684\u4e1c\u897f\u505a\u6210\u4e00\u4e2a\u7ec4\u4ef6\u7684 mixin reply email directly view github", "d": "12/2015"}, {"body": "sublime text solarized maybe also hell place kind questions oo", "d": "12/2015"}, {"body": "material theme please nt use issues ask questions", "d": "12/2015"}, {"body": "please use issues ask questions use either gitter forum", "d": "12/2015"}, {"body": "got sorry", "d": "12/2015"}, {"body": "vue reactive data must plain objects treat complex objects reactive data need attach instance set thismap map created hook", "d": "12/2015"}, {"body": "included source control please install npm", "d": "12/2015"}, {"body": "however learned apple stop supporting safari windows", "d": "12/2015"}, {"body": "already", "d": "12/2015"}, {"body": "anyone actually use safari windows nt think even officially distribute anymore dead browser nt really think worth catering", "d": "12/2015"}, {"body": "sure computed properties run update efficient scott", "d": "12/2015"}, {"body": "computed properties track accurate dependencies sure request makes sense", "d": "12/2015"}, {"body": "wow actually ie fires nonstandard native event button clicked sometimes rendered initially guess avoid using custom event name wondering anything work around nt really good idea moment", "d": "12/2015"}, {"body": "lets manually specify element nodes ignored", "d": "12/2015"}, {"body": "yeah add", "d": "12/2015"}, {"body": "specific expect", "d": "12/2015"}, {"body": "effect actually achieve required filters passed prop using computed properties component", "d": "12/2015"}, {"body": "think confusing useful particular two sources thing big red flag prop passed parent child mess around value derived prop prop computed computed achieve want separated really point mixing", "d": "12/2015"}, {"body": "nt think builtin vue use media query breakpoint detection library together dynamic components achieve", "d": "12/2015"}, {"body": "please see", "d": "12/2015"}, {"body": "damn read docs twice including section still got bitten thanks anyway playing around vue days easy nice angular", "d": "12/2015"}, {"body": "svg works prefer working svgs", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "\u8fd9\u4e2a\u548c vue \u6ca1\u5173\u7cfb filter \u6216\u8005", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "currently intended behavior refs defined scope sure makes sense define refs surrounding component could lead pretty tricky cases html refsnested nested html case nested array nt really sound useful", "d": "12/2015"}, {"body": "cause works similar present inline element first rendered sets initial value changing attribute effect need set corresponding property bit frustrating centralized documentation correspondence html attributesproperties may attributes like need add list", "d": "12/2015"}, {"body": "initialize every variable data object", "d": "12/2015"}, {"body": "yes case pulling xhr instead seems bit unnecessary since items property also nt one may may set added later", "d": "12/2015"}, {"body": "also think would good differentiate data needed display logic data actually displayed scott", "d": "12/2015"}, {"body": "may wrong adding properties object make work objects added later declare every prop used play around example", "d": "12/2015"}, {"body": "psova correct knew declaring make work vue makes reactive declared directly way described work thing setting data handcoded array fetched xhr still inject properties merely saying common pattern fetching objects later adding observed value helper function make easier users", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "add dummy object every property watched", "d": "12/2015"}, {"body": "posva closer nt complete control data object retrieve handcoding data object constructing clientside take approach ideas modify code add property items would great", "d": "12/2015"}, {"body": "sjoerdvisscher fetch model somehow create upgrade items using hope example clear enough", "d": "12/2015"}, {"body": "posva quite verbose example nt think scott", "d": "12/2015"}, {"body": "smolinari nt think small example lines", "d": "12/2015"}, {"body": "thanks suggestion think somewhat similar proposed exactly wanted explicit possible like add extensions possible native prototypes", "d": "12/2015"}, {"body": "sound promising scott", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "called synchronously similar adding element synchronously page load browser optimize render element directly without triggering transition using proper fix give browser time render initial state adding leave class trigger transition", "d": "12/2015"}, {"body": "reproduction", "d": "12/2015"}, {"body": "probably forgot", "d": "12/2015"}, {"body": "closing inactivity", "d": "12/2015"}, {"body": "works minimal test case need live repro", "d": "12/2015"}, {"body": "got jquery datatables pagination fails javascript insert el target param element el param element target function el target targetparentnodeinsertbefore el target guess jquery plugin removes element dom vue fires anyway problem vue closing", "d": "12/2015"}, {"body": "catch localstorage reactive need something reactive trigger changes basically use object represent login state loginlogout modify localstorage object together initialize object reading localstorage app load see exactly trying", "d": "12/2015"}, {"body": "thanks man article exactly trying", "d": "12/2015"}, {"body": "gebilaoxiong", "d": "12/2015"}, {"body": "gebilaoxiong work well javascript var testvm new vue el ct data name \u6d4b\u8bd5\u4eba\u5458 info age school \u6d4b\u8bd5\u5b66\u6821 frends html infoage", "d": "12/2015"}, {"body": "luckymore", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "luckymore \u6211\u7684\u610f\u601d\u662f\u5728\u4ee3\u7801\u4e2d\u64cd\u4f5c\u5220\u9664age \u660e\u767d\u5417", "d": "12/2015"}, {"body": "vuex \u5c31\u6ca1\u7ee7\u7eed\u8ddf\u8fdb\u4e86", "d": "12/2015"}, {"body": "deep watcher \u624d\u4f1a\u89e6\u53d1 \u4e0b\u4e2a\u7248\u672c\u4e0d\u9700\u8981 deep", "d": "12/2015"}, {"body": "nope ca nt linked parent scope", "d": "12/2015"}, {"body": "saw thatbut access data inside slot anything originally inside tags considered fallback content fallback content compiled child scope displayed hosting element empty content inserted vue data json moduleexports data function return something cool butca nt inside slot even try parent data", "d": "12/2015"}, {"body": "mean example last comment work", "d": "12/2015"}, {"body": "sorry made typo fallback original content", "d": "12/2015"}, {"body": "real example", "d": "12/2015"}, {"body": "expected original content compiled parent scope fallback content compiled child scope original content refers root vm empty data fallback content refers child component data use fallback content", "d": "12/2015"}, {"body": "slot special element", "d": "12/2015"}, {"body": "scott", "d": "12/2015"}, {"body": "part shadow dom specification think one besides standard html elements worry", "d": "12/2015"}, {"body": "ah makes sense take maybe best practice namespace components eg rather maybe guide section components make general recommendation", "d": "12/2015"}, {"body": "used required lifted nice since always avoided conflicts also little annoying guess custom elements specification dropped requirement lazy look haha makes nervous new tag released could make things messy", "d": "12/2015"}, {"body": "indeed good practice namespace fact vue would warn commonly used html elements add list", "d": "12/2015"}, {"body": "actually spec several rules custom element type identifies custom element interface sequence characters must match ncname production must contain hyphenminus character must contain uppercase ascii letters list reserved element names follow rules well", "d": "12/2015"}, {"body": "yeah vue originally followed spec enforced hyphen component names however spec remained draft status still going constant changes lots disagreements within work group vue implementation loosely modeled spec aim spec compliant api stability gt draft spec flux", "d": "12/2015"}, {"body": "looks like bug windows chrome mouse released outside firing event safari also behavior mac chrome firefox correctly fire event try see way achieve consistent behavior vue also file bugs chrome safari fix behavior", "d": "12/2015"}, {"body": "confirmed indeed chromechromiumwebkit bug fired respectively wontfix vuejs", "d": "12/2015"}, {"body": "well said filter functionmethod like way looks feels readable read pipeline", "d": "12/2015"}, {"body": "function sometimes refers one two functions read write still function nt", "d": "12/2015"}, {"body": "appreciate ideas however please note vue reached status used production many unlikely consider breaking changes without substantial concrete reasons mean syntax preference obviously", "d": "12/2015"}, {"body": "nt suggesting breaking change though understand syntax issues low priority", "d": "12/2015"}, {"body": "mindplaydk special kind function say function side effects filter intended modify data displayed view hand method intended much things like emitting events creating requests change model etc filter never changes model", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "galenyuan", "d": "12/2015"}, {"body": "luckymore", "d": "12/2015"}, {"body": "\u52a0\u4e00\u4e2a saving flag", "d": "12/2015"}, {"body": "\u8fd9\u4e2a\u771f\u662f\u4e2a\u5f88\u795e\u5947\u7684\u95ee\u9898 \u6211\u7814\u7a76\u4e86\u534a\u5929\u53d1\u73b0\u662f \u5728\u770b\u5230 granttype \u7684\u503c\u4e3a form submit \u4e8b\u4ef6 \u5982\u679c\u4f60\u628a granttype \u8fd9\u4e2a\u7edd\u5bf9\u662f \u7684 bug", "d": "12/2015"}, {"body": "ok got", "d": "12/2015"}, {"body": "hi twiknight works nice problem comes css declare element like like hidden expandleave working example", "d": "12/2015"}, {"body": "always define leave transition vue detects element transition duration waiting event want element leave instantly add", "d": "12/2015"}, {"body": "thx commenting", "d": "12/2015"}, {"body": "sure new according vue concept reactivity data initialized front add show items data works scott", "d": "12/2015"}, {"body": "agree smolinari completely sure vue handle internally years experience angularjs tell always avoid using nginit lot reasons makes sense create data inside html", "d": "12/2015"}, {"body": "agree smolinari init data created function datas created eidtor developer vue", "d": "12/2015"}, {"body": "thanks actually solved problem additional init function leslieyq commented still think better vinit directive leave option user already", "d": "12/2015"}, {"body": "point people found bad practice randomly add additional data templates general templates treated like pure function side effects except event handlers component state initialized single place function also makes easier read understand code later leslieyq solution adds nonreactive property called data observation already done always declare properties directly", "d": "12/2015"}, {"body": "try see", "d": "12/2015"}, {"body": "works thanx", "d": "12/2015"}, {"body": "use dev build nonminified see warning prompts use", "d": "12/2015"}, {"body": "realized blur handler checking situation maybe check done directly inside listener function realized also blur handler calling debounced version listener nt make much sense debounce blur event opinion think better sync model directly blur event avoid stale data summited clicking submit button right last input field", "d": "12/2015"}, {"body": "debouncing blur handler create different issue explain use case want", "d": "12/2015"}, {"body": "yeah please open separate issue", "d": "12/2015"}, {"body": "need custom filter", "d": "12/2015"}, {"body": "need use item timely thanks", "d": "12/2015"}, {"body": "issue belong take look", "d": "12/2015"}, {"body": "lorengreenfield nt think way going creating new vue instance correct ever one instance instances components partials forked example follow suggested parentchild pattern see parent child component parent instance call scope child component parent instance returned record update vue use followed steps reproduce issue able reproduce issue like said way attempting instantiate parentchild relationship incorrect", "d": "12/2015"}, {"body": "wanted use baked component system nt think creating parentchild relationship required works fine event system little surprised prevents transitions working way components extended vue instances nt", "d": "12/2015"}, {"body": "correct component simply syntactic sugar may one root instance certainly something like manage components logical different prevents instantiating child using", "d": "12/2015"}, {"body": "pre used vm addchild create children scroll bottom page instances nt created using vueextend optional changed fine adapt interestingly using transitions old addchild system also issue", "d": "12/2015"}, {"body": "well stand corrected skimmed change logs found release notes instance method vm addchild deprecated instead new option parent introduced usage pretty simple var child parent addchild options var child new vue parent parent suppose need brush vue docs", "d": "12/2015"}, {"body": "working fiddle second child vue instance attribute transitions still work expected", "d": "12/2015"}, {"body": "ok seems key el option parent think call problem solved going rework code little bit makes sense taylorzane thanks help", "d": "12/2015"}, {"body": "interesting proposal technical concerns compilation would happen runtime means include entire transpiler runtime app expression parsing slower maybe could compiletime eg vueloadervueify transpilers would expand simple expressions quite verbose code eg array comprehension coffeescript compile js var cubes num cubes function var len results results len listlength lt len num list resultspush num return results single expression therefore easily passed vue expression parser evaluation possible modify vue expression parser make work going nontrivial", "d": "12/2015"}, {"body": "think compilation compiletime would greatly improve performance nt feel coffeescript slow compile one hundreds evals per second add would also remove need bundle transpiler runtime app could stay devdep fact code transpiles much verbose output certainly hurdle understand output single expression granting one ability use alternate language may worth overhead extending parser look parser source walk call parser start finish fully understand steps would take", "d": "12/2015"}, {"body": "well testing morning realized compiletime may feasible option coffeescript nt know others relies node modules nt available browser transpiling javascript secondary loader may best bet would still modify expression parser handle multiple expression expressions", "d": "12/2015"}, {"body": "coffeescript user would nt use affects performance amount js code written inside htmljade minimal therefore benefit using coffee expression counter amount work needed setup handle dialect really like idea behind think mean lot work little value", "d": "12/2015"}, {"body": "fact code transpiles much verbose output certainly hurdle incorrect coffeescript code starts smaller expands size native js would occupy used cs four years work transpiled output inspector frequently mon dec eduardo san martin morote lt notifications githubcom wrote coffeescript user would nt use affects performance amount js code written inside htmljade minimal therefore benefit using coffee expression counter amount work needed setup handle dialect really like idea behind think mean lot work little value reply email directly view github", "d": "12/2015"}, {"body": "markhahn think evan concerned fact transforming expression coffeescript long javascript function example main issue see expression parser forbids functions among things", "d": "12/2015"}, {"body": "browser using works fine chrome", "d": "12/2015"}, {"body": "using chrome osx el capitan", "d": "12/2015"}, {"body": "seems work fine please specific steps necessary reproduce issue expecting actual behavior", "d": "12/2015"}, {"body": "expected input create form become blank submit form actual input becomes empty click click create button try press key everything works except input emptied intended replicating click create new task button fill input characters anything press enter key click create new task button able see input filled last value filled broken unintended repeat steps time click create button click create new task button able see empty input actual expected thanks response clarification needs made please feel free ask", "d": "12/2015"}, {"body": "thank much appreciated", "d": "12/2015"}, {"body": "looked", "d": "12/2015"}, {"body": "azamatsharapov yes really helpful talk vueify unit tests tests way complex source code really think browsing source code helpful think coz source code helpful one would write docs framework", "d": "12/2015"}, {"body": "thetutlage take look set nightwatch inspired", "d": "12/2015"}, {"body": "posva seems interesting nightwatch good option believe test click events using css selectors nightwatch", "d": "12/2015"}, {"body": "yes using css selectors great allows write maintainable tests even elements change", "d": "12/2015"}, {"body": "thetutlage open source framework docs good enough contribute make better tests nt care kind framework using nt understand vue docs unrelated link source code gave helpful believe willing code example using casperjs testing tool look api check options click talking selecting element limited css class use plain js way casperjs least check clicklabel casper docs example idea nightwatch similar casper works selenium casper works phantomjs slimerjs also please ask kind questions forum next time", "d": "12/2015"}, {"body": "opinionated test guidance nice seriously nt take granted ask demanding tone vue provided free nt obligations solve problems technically even problem basically asking free research already got something free could suggested along lines would nice vue provides official guidelines approach testing vueify chose phrase vue owes makes sad maintainer really said testing guide mentioned karma plugins browserify webpack ever occur using browserify plugin karma would allow use tests vuespecific issue period", "d": "12/2015"}, {"body": "seems like angry bird one forced write vuejs respect project always nice open integration options rather rude saying job decided vuejs free know one ever pay respect gain respect", "d": "12/2015"}, {"body": "nitishtyagi wow wow please stay away community behaviour toxic points trying defend nt even make sense read initial comment nt respectful", "d": "12/2015"}, {"body": "nitishtyagi must troll way serious talk respect guy gives one best written pieces code ever seen asks behave decent way ask nicely respect", "d": "12/2015"}, {"body": "agree posva jonagoldman nitishtyagi thetutlage clue oss community effort evan nt let get bothered put together something masterful personally appreciative hard work please keep scott", "d": "12/2015"}, {"body": "yeah troll nt waste time guy contributions", "d": "12/2015"}, {"body": "believe leave issue guys think rude asking let talk testing seriously browsing issues found community diverted towards quoted trolling someone profile great jonagoldman fancy aswell respect hard work maintaining open source easy task requires lot time management lot hard work nice reply even better", "d": "12/2015"}, {"body": "post nt rude thetutlage still nt wanted open positive dialog documentation testing basically left door closed evan noted tone scott", "d": "12/2015"}, {"body": "thetutlage nt get vibe comparing profiles showing nitishtyagi github activity meaning probably fake trolling account anyways better stop discussion contributing nt really belong", "d": "12/2015"}, {"body": "nitishtyagi trollface", "d": "12/2015"}, {"body": "reading comments following work years wanted personally reach give thanks life blood poured project", "d": "12/2015"}, {"body": "thanks everyone made positive responses thread thetutlage trying make simple point want nice answer ask nicely think asked nicely think", "d": "12/2015"}, {"body": "jdavidberger put default option", "d": "12/2015"}, {"body": "simplesmiler wo nt work empty string nt make sense simple fiddle something crop lot situations old handled gracefully", "d": "12/2015"}, {"body": "want bind value want empty string set value empty string current behavior explicit think even evaluates javascript nt think loose necessarily graceful", "d": "12/2015"}, {"body": "main correct distributed npm source code", "d": "12/2015"}, {"body": "ca nt reproduce please make live demo", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "happens include adds active class element click using array syntax preserves existing classes element consider element add array syntax always false vue knows third class array empty attempt remove active class vue never able render assumes element comparison using object syntax vue knows want toggle class say intended behavior vue part careful using array syntax another library also modifies classes", "d": "12/2015"}, {"body": "would using vuestrap possible alternative scott", "d": "12/2015"}, {"body": "smolinari cool", "d": "12/2015"}, {"body": "yeah found library like oh yeah cool nt cover bootstrap already working version match looks promising scott", "d": "12/2015"}, {"body": "coderzh nt forget vuemdl stuckouttongue", "d": "12/2015"}, {"body": "nice work posva got feature set vuestrap actually interested vuemdl simply different everybody brother using bootstrap scott", "d": "12/2015"}, {"body": "thanks smolinari vuestrap mean feature set affraid wo nt case follow different set features may however add features top", "d": "12/2015"}, {"body": "pretty close featurecomponent set still keep good work keep eye smile scott", "d": "12/2015"}, {"body": "thanks great always looking feedback smile", "d": "12/2015"}, {"body": "use vif slots question", "d": "12/2015"}, {"body": "means two default slots time good use component fragment instance root node attach make sure always give component single root node also please post questions forum", "d": "12/2015"}, {"body": "javascript", "d": "12/2015"}, {"body": "obj x false b true c obj \u7684\u987a\u5e8f\u662f x b c vue data xxx obj obj c b x", "d": "12/2015"}, {"body": "yuhere \u4f60\u5b66\u8fc7js\u5417 cry", "d": "12/2015"}, {"body": "luckymore cry \u4fee\u6539vue\u5173\u4e8eobserverwalk observerprototypewalk function obj var keys objectkeys obj var keyslength thisconvert keys obj keys observerprototypewalk function obj var keys objectkeys obj var \u548c vue \u65e0\u5173", "d": "12/2015"}, {"body": "\u867d\u7136\u786e\u5b9e\u548c vue property enumeration thu dec pm zack notifications githubcom wrote yuhere vue reply email directly view github", "d": "12/2015"}, {"body": "\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5bf9\u8c61\u7684 property enumeration \u4e0d\u8fc7property enumeration \u5982\u679c\u4f60 \u4e0d\u8ba4\u4e3a\u5b83\u662fbug \u6216", "d": "12/2015"}, {"body": "specs property\u539f\u751f\u987a\u5e8f \u4fee\u6539diffzip", "d": "12/2015"}, {"body": "\u8bf7\u53d1 pull request \u4e0d\u8981\u7528\u4e0a\u4f20 fri dec pm yuhere notifications githubcom wrote specs image jasmine property\u539f\u751f\u987a\u5e8f \u4fee\u6539diffzip reply email directly view github", "d": "12/2015"}, {"body": "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5bf9property\u7684\u987a\u5e8f\u6539\u53d8\u662f\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\u7684 \u7684\u4f7f\u7528\u73af\u5883\u4e2d\u662f\u4e0d\u4f1a\u51fa\u73b0\u7684", "d": "12/2015"}, {"body": "decided problem nedd userlist component", "d": "12/2015"}, {"body": "resolved original error nt look right though great make live reproduction", "d": "12/2015"}, {"body": "like", "d": "12/2015"}, {"body": "notice template accesses computed property component", "d": "12/2015"}, {"body": "hm interesting could nt find anything docs either happening put template scope component would item scope basically plain object", "d": "12/2015"}, {"body": "computed properties exposed directly component inside component indeed plain object passed prop yeah component scope basically looks like install vuedevtools inspecting instance makes lot easier understand state", "d": "12/2015"}, {"body": "unfortunately constant spammers spamming wiki disable make pull request share app forum show amp tell section", "d": "12/2015"}, {"body": "point partials scopeless ie evaluated surrounding scope want prop passing use dynamic components", "d": "12/2015"}, {"body": "rpkilby thanks creating issue planning tackling day work got way", "d": "12/2015"}, {"body": "petersngithub think description lacks details would help lot tell bit andor show example jsbin similar tool one see going case", "d": "12/2015"}, {"body": "somewhat inevitable cell count simply large currently simple way make magically fast two possible ways around rethink ui design really need cells rendered time even make sense pagination need interactivity every single cell scrap write custom directive simply renders table maybe nt using vue render first place", "d": "12/2015"}, {"body": "also interested listing large amounts data reports however real interactivity needed except regular linking would imagine possible without kind performance issues would best practice include large set data vue scott", "d": "12/2015"}, {"body": "smolinari pagination probably reasonable solution performance ux wise real bottleneck many items rendered page time limit reasonable amount might work virtual scroll list renders items viewport future", "d": "12/2015"}, {"body": "pagenation report nt really good usability reports looking would limited maximum maybe rows could columns lot data yes decent reporting system would need show amount maybe need come completely different way show data hmm maybe sort infinite scrolling might answer scott", "d": "12/2015"}, {"body": "nt think web framework handle many cells acceptable rendering performance assuming reactive instead static html yeah dirty work implement infinite scroll virtual scroll", "d": "12/2015"}, {"body": "\u7528", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "\u90a3\u5f97\u7ed9\u91cd\u73b0", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "\u56e0\u4e3a\u7b49\u4f60\u5c55\u5f00 log", "d": "12/2015"}, {"body": "mutating array returns array vue nt keep old copy intended", "d": "12/2015"}, {"body": "ignore works", "d": "12/2015"}, {"body": "\u6211\u624b\u5934\u6ca1\u6709", "d": "12/2015"}, {"body": "\u4f60\u770b\u4e0b\u628a\u90a3\u4e00\u884c\u7684 \u6539\u6210", "d": "12/2015"}, {"body": "\u7684\u503c\u4e00\u76f4\u90fd\u662f\u90fd\u662ffalse \u53e6\u5916\u7684\u503c\u4e5f\u662ffalse", "d": "12/2015"}, {"body": "\u6539\u6210", "d": "12/2015"}, {"body": "\u6539\u6210", "d": "12/2015"}, {"body": "\u6211\u7528 vue qq \u66f4\u65b0 vue", "d": "12/2015"}, {"body": "trying use native element vue component case nt warning", "d": "12/2015"}, {"body": "trying custom element trixeditor causing warning way ignore escape warning tag set config", "d": "12/2015"}, {"body": "currently builtin mechanism however register empty elementdirective also makes vue skip content inside element", "d": "12/2015"}, {"body": "thanks lot planned use vuejs company wedevscom really cool simpler thing made", "d": "12/2015"}, {"body": "great idea lbineau would nice", "d": "12/2015"}, {"body": "would awesome feature", "d": "12/2015"}, {"body": "thu dec pm stephen young notifications githubcom wrote image would awesome feature reply email directly view github", "d": "12/2015"}, {"body": "something like polymer neon animation", "d": "12/2015"}, {"body": "possible trigger css transition demand time smil style vuecomponent define custom transition component lay inside directive want perform transition inject component method component call transition whenever like finish component publish days time", "d": "12/2015"}, {"body": "twiknight nice idea opinion javascript transition object really powerful feature hook state animation pause etc nt know enough vuejs think big effort implement extension transition order apply property", "d": "12/2015"}, {"body": "lbineau nt need hooks control transition need know animation done listen event possible way return promise", "d": "12/2015"}, {"body": "demo lbineau", "d": "12/2015"}, {"body": "angular similar concept nganimateswap", "d": "12/2015"}, {"body": "hand pretty much simulate demo", "d": "12/2015"}, {"body": "pretty cool simplesmiler shows elegance vue nt scott", "d": "12/2015"}, {"body": "smolinari believe done angular way wink missing piece analogue transitionmode components", "d": "12/2015"}, {"body": "probably vue still much elegant angular scott", "d": "12/2015"}, {"body": "solution mentioned add animation later week", "d": "12/2015"}, {"body": "could gents ladies add works forum scott", "d": "12/2015"}, {"body": "smolinari already added thanks", "d": "12/2015"}, {"body": "using csp version", "d": "12/2015"}, {"body": "see need use csp build chrome apps", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "well first nt sound like good idea would suggest take look vuex cleaner state management solution second simple", "d": "12/2015"}, {"body": "ca nt live within element gets thrown browser police soon dom parsed happens vue anything ca nt anything example situations isattribute", "d": "12/2015"}, {"body": "nirazul said", "d": "12/2015"}, {"body": "easy way attach whatever want hook hook called vue already finished observation phase note vue apiinternal properties start either long property nt use two prefixes totally fine", "d": "12/2015"}, {"body": "let say parent components pass data implicitly children child components implicitly make use parent scope variables later look deeply nested child component uses mysterious property idea inherited parent chain hints template actual composition happens check implementation details every component chain figure one introduced property scope want extract child component reuse makes use inherited properties makes tightly coupled parent components much work refactor everything make reusable give component may get used different context different parents explicit data passing makes individual component decoupled usage context makes easier reason maintain makes component reusable necessary", "d": "12/2015"}, {"body": "first thank response regarding closures could applied well grab closest vue instance yes check component chain brilliant could reference properties vue instance directly example pts z regarding child component expecting x z tightly coupled source structure anyways regardless data got named therefore explicit data passing required part parent collections named differently internal structure x z unusual design scenario could still pass data explicitly winwin would also like note forced abandon templates inject templates jquery actually could get work due syntax wanted pass entire object template could nt figure documentation would awesome worked even better", "d": "12/2015"}, {"body": "vuejs sophisticated framework uses established principles established libraries framework unlikely undesirable throwing away core principles due argumentation nt really know aiming nt provide jsfiddle try help specific use case nt work", "d": "12/2015"}, {"body": "sure", "d": "12/2015"}, {"body": "things needed fixed passing directly instance root instead passing component declare props expects add definition use syntax svg attributes see errors console use shorthand instead working fiddle", "d": "12/2015"}, {"body": "evan thanks probably fault big deal regarding way make template system transparent optionally pass data props automatically way component data declared vue parameter option compare componentless example fiddle componentless component look simple notice nt need redundancies redundant data syntax props html parameters think important first discovered vue shock simplicity design everything meticulously simple without sacrificing functionality literally could cleaner tried beautiful however component standard vue instance requires extra declarations extra abstraction way pass data simple know great abstraction reason often nt need vue usually nt right place abstraction opinion many times wa nt template function exact way vue instance functions template brings regarding nt ever pass data like opinion nt even vue job worry let vue work complex objects package name alias object however want first var j b b c c new vue el id data j root access obviously need able access root data props html letting access root object props subsequently html major disservice component system use expanded syntax combined props system makes component system significantly complicated needs goes reasons chose vue first place solution going continue use vue honest cleaner inject html manually worry passing data around component system please consider feature like something think would benefit framework future thanks help", "d": "12/2015"}, {"body": "component boundary simplicity whole point components break code logically isolated units feel redundant pass data probably using components prematurely nt actually need remember vue simple stuff focus simple probably nt realize maintainability issues give rise large applications pass data missing point point object pass vue instance container vue needs know property name order reference templates case js var new vue el id data way vue tell original object variable name access templates top level property vue instance ever sees", "d": "12/2015"}, {"body": "vue needs know property name order reference templates yes nt need know parent object name way vue tell original object variable name access templates top level property vue instance ever sees nt need knowcare variable name reason put name variable passing data components requires would nt option pass data automatically need access could pass components issue would resolved would next issue remember vue simple stuff course vue great making complicated stuff simple best thing vue saying vue pass data automatically saying option", "d": "12/2015"}, {"body": "pass whole assign root component data single property root instance data components accept pass subcomponents make data global observe every component options reduce reusability components extent demo", "d": "12/2015"}, {"body": "simplesmiler solutions abcd bar graph html lt span gt b lt span gt js var freindship b magic new vue el demo data template demotemplate replace false using template system access data missing point probably using components prematurely nt actually need nail head", "d": "12/2015"}, {"body": "checkednames variable array show vue code please", "d": "12/2015"}, {"body": "thank forgot set vue instance", "d": "12/2015"}, {"body": "docs working", "d": "12/2015"}, {"body": "assume original issue resolved reopen", "d": "12/2015"}, {"body": "sorry \u5df2\u7ecf\u89e3\u51b3\u4e86 \u662f\u81ea\u5df1\u60f3\u9519\u4e86 \u8bf7\u5173\u95ed", "d": "12/2015"}, {"body": "\u4e0d\u8981\u5728\u8fd9\u91cc\u8d34\u95ee\u9898 \u95ee\u9898\u4e0a\u8bba\u575b\u6216\u8005segmentfaultcom", "d": "12/2015"}, {"body": "\u89e3\u51b3\u4e86\u81ea\u5df1\u4e5f\u53ef\u4ee5\u5173", "d": "12/2015"}, {"body": "many items rendering component look like array objects look like", "d": "12/2015"}, {"body": "date component panel display current month days weeks object line code follows add components page chrome case seconds time render html javascript", "d": "12/2015"}, {"body": "would slow takes less machine", "d": "12/2015"}, {"body": "nt know complex logic code use chrome timeline analysis see time consumption execution javascript code full component code html year \u5e74 month \u6708 \u5468 \u4e00 \u4e8c \u4e09 \u56db \u4e94 \u516d \u65e5 nodecontent hour \u65f6 minute \u5206 second \u79d2 \u786e \u5b9a \u6e05 \u7a7a \u4eca \u5929 \u73b0 \u5728 var calendermixin require calendermixinvue export default mixins uuiuuimixin calendermixin props \u7ec4\u4ef6\u7c7b\u578b uitype type string default udatetime \u7ec4\u4ef6\u63cf\u8ff0 label type string default mode type string default date currmode type string default date computed \u65e5\u671f\u9009\u62e9\u9762\u677f datapanel function var alldaycount var result var date new uuidate thisyear thiszeropad thismonth \u7b2c\u4e00\u5929\u661f\u671f\u51e0 var firstday dategetday \u5f53\u524d\u6708 var currmonth dategetmonth \u5f53\u524d\u5e74 var curryear dategetfullyear \u5f53\u524d\u6708\u603b\u5929\u6570 var currdaybycurmonth dategetmonthdaynum \u4e0a\u4e2a\u6708\u7684\u5e74 var beforeyear dategetmonth dategetfullyear dategetfullyear \u4e0a\u4e2a\u6708 var beforemonth dategetmonth dategetmonth \u4e0a\u4e2a\u6708\u603b\u5929\u6570 var beforemonthday uuidategetmonthdaynum beforeyear beforemonth \u4e0b\u4e2a\u6708\u5e74 var nextyear dategetmonth dategetfullyear dategetfullyear \u4e0b\u4e2a\u6708 var nextmonth dategetmonth dategetmonth \u4e0a\u4e2a\u6708\u663e\u793a\u5929\u6570 var oldday firstday firstday oldday else firstday oldday \u4e0b\u4e2a\u6708\u663e\u793a\u5929\u6570 var newday alldaycount currdaybycurmonth oldday var lt result var j j lt j var obj beforemonthday beforemonthday currdaybycurmonth currdaybycurmonth beforemonth beforemonth currmonth currmonth nextmonth nextmonth beforeyear beforeyear curryear curryear nextyear nextyear oldday oldday newday newday j j result push thisgetdaycontent obj \u6dfb\u52a0\u5468\u4fe1\u606f thisaddweek result return result methods \u65e5\u671f\u9762\u677f\u5355\u51fb datepanelhandle function event var op jquery eventtarget attr op var data jquery eventtarget attr data var currdate new uuidate thisyear thiszeropad thismonth op lastmonth currdateaddmonth thisyear currdategetfullyear thismonth currdategetmonth else op nextmonth currdateaddmonth thisyear currdategetfullyear thismonth currdategetmonth else op selectdate thismode date thisdatavalue new uuidate data parentinitpanel thisisopen false else thisselectdate data else op ok thisdatavalue new uuidate thisselectdate thiszeropad thishour thiszeropad thisminute thiszeropad thissecond thisisopen false else op clear thisdatavalue null thisisopen false else op today thisdatavalue new uuidate thisisopen false else op openselectmonth thiscurrmode selectyearmonth else op openselecttime thiscurrmode time \u83b7\u53d6\u65e5\u671f\u5185\u5bb9 getdaycontent function obj var result isold false isnew false isactive false year month content var count obji objj count lt objoldday result isold true isnew false isactive false isweek false value objbeforeyear thiszeropad objbeforemonth thiszeropad objbeforemonthday objoldday count content objbeforemonthday objoldday count else count gt objoldday objcurrdaybycurmonth result isold false isnew true isactive false isweek false value objnextyear thiszeropad objnextmonth thiszeropad count objoldday objcurrdaybycurmonth content count objoldday objcurrdaybycurmonth else result isold false isnew false isactive false isweek false value objcurryear thiszeropad objcurrmonth thiszeropad count objoldday content count objoldday thisselectdate resultvalue resultisactive true return result \u6dfb\u52a0\u5468\u4fe1\u606f addweek function ar var lt var ar var date ar unshift isold false isnew false isactive false isweek true value content uuidategetweek date date date", "d": "12/2015"}, {"body": "sorry simply enough information want help least provide live reproduction nt time guess component works actually test", "d": "12/2015"}, {"body": "closing feel free follow", "d": "12/2015"}, {"body": "thank reply propaganda loading date first time panel input gains focus rendering", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "oubushixb \u56e0\u4e3a\u53ef\u80fd\u8fd8\u4f1a\u6709\u5176\u4ed6\u56fd\u5bb6\u7684\u670b\u53cb\u6765\u770b\u5230\u8fd9\u4e2a\u95ee\u9898 \u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u4e2d\u6587 \u4f46\u662f\u57fa\u672c\u80fd\u4e0agithub\u7684\u4eba\u90fd\u4f1a\u82f1\u6587\u7684", "d": "12/2015"}, {"body": "ask questions forum seems related vuerouter stuckouttongue", "d": "12/2015"}, {"body": "forgot call", "d": "12/2015"}, {"body": "already included file html although tried nothing changed please note router fully functioning far see say warning thanks prompt response", "d": "12/2015"}, {"body": "hmm please provide live repro possible", "d": "12/2015"}, {"body": "sample code warnings check bitbucket", "d": "12/2015"}, {"body": "ah component constructor instance instead", "d": "12/2015"}, {"body": "nested child components created first either way children offers guarantee order rely", "d": "12/2015"}, {"body": "tried using parent div like html", "d": "12/2015"}, {"body": "support autoclosing tags always close custom elements mon dec eduardo san martin morote lt notifications githubcom wrote tried using parent div like reply email directly view github", "d": "12/2015"}, {"body": "okay use instead right", "d": "12/2015"}, {"body": "yes", "d": "12/2015"}, {"body": "recursively updated along parent chain", "d": "12/2015"}, {"body": "could please update description note broadcasting available event", "d": "12/2015"}, {"body": "submit pr vuejsorg repo", "d": "12/2015"}, {"body": "would inside lifecycle hook also called switch dynamic components used control timing dom manipulations would work component compiled content therefore created children would work", "d": "12/2015"}, {"body": "turns part vuerouter transition pipeline vue sorry chaos", "d": "12/2015"}, {"body": "remove transitionfadein updated example perfect guess use vif component creating another jsfiddle illustrate", "d": "12/2015"}, {"body": "still leaves problem stacking due inactive ones removed flow document kind fixes jumps go back", "d": "12/2015"}, {"body": "works chrome though got urgent things right come later nobody find solution sorry", "d": "12/2015"}, {"body": "using chrome well get solution seem help though kind understand would thought would increased well decreases instead decreases", "d": "12/2015"}, {"body": "actually css specificity gotcha always present put overriding time adjust css rules order would work properly", "d": "12/2015"}, {"body": "wow call frontend dev basic thing thanks quick close", "d": "12/2015"}, {"body": "hmm rendered empty add see value", "d": "12/2015"}, {"body": "better yet create repro possible", "d": "12/2015"}, {"body": "thanks prompt response problem typo instead thanks much", "d": "12/2015"}, {"body": "use forums questios smile", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "nt make sense prop computed time use two way filters though", "d": "12/2015"}, {"body": "like see issue reopened lets say component something like child component msg props msg type string required false default hello computed msg cached false get function elswidget get text set function value elswidget set text value ready function elswidget superwidget text thismsg parent script define instance child like view creates powerful interaction interface underlying value generatorcontainerproducer declares values passed course well familiar underlying code vue yet internally value provider assign value trigger call update internal value", "d": "12/2015"}, {"body": "use native event eg", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "thanks", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "vue observer ignores prototype properties design", "d": "12/2015"}, {"body": "reactive set either", "d": "12/2015"}, {"body": "initialized please read", "d": "12/2015"}, {"body": "possible workarround tried works instead call", "d": "12/2015"}, {"body": "merged", "d": "12/2015"}, {"body": "found culprit vif show without works expected second problem read documentation nt say mix fallback slot named slots assumed would let wrong", "d": "12/2015"}, {"body": "make jsfiddle reproduction", "d": "12/2015"}, {"body": "kind understand behavior maybe working intended also said docs nt say guess ca nt", "d": "12/2015"}, {"body": "suggested several times opinion nested computed properties confusing actually get defined data object polluting raw data sounds bad work inside nested computed properties confusing vm object imo nested computed properties provide substantial benefits flat ones proper naming eg", "d": "12/2015"}, {"body": "yes nt feel like pollution syntax nt see confusion vm like computed properties advantage see pass along song object another component cumbersome songduration property fri dec evan notifications githubcom wrote suggested several times opinion nested computed properties confusing actually get defined data object polluting raw data sounds bad thissongduration work inside nested computed properties confusing vm song object imo nested computed properties provide substantial benefits flat ones proper naming eg songduration reply email directly view github", "d": "12/2015"}, {"body": "nt think components add random getters raw data objects observe pass object component expect component observe add stuff note return object computed property eg feel free pick better name pass around", "d": "12/2015"}, {"body": "issue please read line help understand regarding data attributes lowlevel method retrieve data attributes unless convenient data method already retrieved working fiddle data set explicitly item retrieve value", "d": "12/2015"}, {"body": "alexandrebonaventure explicitly stated know jquery feature point unclear unexpected behavoir vue simplicity clean way handling data bindings alot possible solutions workarounds umm natural way considering often people use jquery vue", "d": "12/2015"}, {"body": "really jquery issue rather vue unexpectedness comes jquery works rather vue works nt make sense change vue jquery unexpected behavior", "d": "12/2015"}, {"body": "kerbylav already data viewmodel would want give roundtrip though dom probably better way achieve trying achieve", "d": "12/2015"}, {"body": "simplesmiler jquery libs uses data mechanism keep options states stuff components example would great easy clean way bind data dynamically yes course jquery issue still implement reimplement similar behaviour quite frustrating would suggest keep things done reusable way kind custom directive perhaps", "d": "12/2015"}, {"body": "kerbylav afraid jquery plugins designed reactivefriendly jquery standardize data flow general write custom directive component per jquery plugin", "d": "12/2015"}, {"body": "kerbylav interested bootstrap tooltips check maybe info help", "d": "12/2015"}, {"body": "according spec allowed tag", "d": "12/2015"}, {"body": "expected similar use", "d": "12/2015"}, {"body": "fails object behavior commonly considered bad design javascript language initialize empty object", "d": "12/2015"}, {"body": "initializing cause evaluate true means wo nt able use create another variable store whether object selected remove type check", "d": "12/2015"}, {"body": "sounds like useful option define transition object", "d": "12/2015"}, {"body": "course use little complicated", "d": "12/2015"}, {"body": "alternatively", "d": "12/2015"}, {"body": "great enough provide js hook", "d": "12/2015"}, {"body": "define either inline javascript definition", "d": "12/2015"}, {"body": "avoid synchronous http requests hangs ui waiting", "d": "12/2015"}, {"body": "yes need set object use setted nt sync object pass previous data setted data", "d": "12/2015"}, {"body": "nt think understand mean", "d": "12/2015"}, {"body": "use array drive child components", "d": "12/2015"}, {"body": "children dynamics say carousel component lets developer put child component inside dynamically", "d": "12/2015"}, {"body": "telling use array keep track children dynamically tracked way nt understand try playing around js console bit wed dec pm yifeng notifications githubcom wrote children dynamics say carousel component lets developer put child component inside dynamically reply email directly view github", "d": "12/2015"}, {"body": "add child components get instantiated data fetched behavior unlikely change short term since potentially breaking", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "thanks works browser supports computed property names vue feature work old browsers", "d": "12/2015"}, {"body": "maybe transpile expressions us", "d": "12/2015"}, {"body": "possible easy babel turns complex code", "d": "12/2015"}, {"body": "nt carefully study docs turns special array syntax", "d": "12/2015"}, {"body": "vue concern using unconfigurable linter create method", "d": "12/2015"}, {"body": "always avoid warning exporting variable", "d": "12/2015"}, {"body": "cost pay using imperative apis note omit div empty div created chain", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "curiosity happens instead", "d": "12/2015"}, {"body": "well researching src codes found variable even provided vue custom events", "d": "12/2015"}, {"body": "thanks think something like explicit need basically wrap calling handler set current scope reset afterwards", "d": "12/2015"}, {"body": "got", "d": "12/2015"}, {"body": "\u7528 \u7136\u540e\u5728\u4e8b\u4ef6\u91cc\u9762", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "could someone translate issue", "d": "12/2015"}, {"body": "test uncaught typeerror read property indexof null vuetouchjs eventindexof gestures recognizertype gestures \u8fd9\u6837\u5199\u4e5f\u4e0d\u884c test", "d": "12/2015"}, {"body": "vuetouch", "d": "12/2015"}, {"body": "thank much", "d": "12/2015"}, {"body": "tanks", "d": "12/2015"}, {"body": "closing inactivity", "d": "12/2015"}, {"body": "think close vue reactivity system pretty memory hungry like avoid noncritical memory consumption", "d": "12/2015"}, {"body": "semantics providing value prop absent ie consumer component even provide value different providing value value posva mentioned could lead unexpected results users also breaking change general try avoid strong benefits think use case covered suggested option though", "d": "12/2015"}, {"body": "hi think debatable javascript sole purpose precisely case explicitely saying value affected sole definition value ecma specifications nt interpreted value absence value also dump keys ones opinion set property anywhere interpreted value assigned case vue properties trigger default", "d": "12/2015"}, {"body": "debatable exactly users feel way point breaking change prefer leave current state unless everyone agrees changed", "d": "12/2015"}, {"body": "agreed perhaps next major semantic version could reconsidered opening community already suggest hard workaround coerce option makes even better thanks", "d": "12/2015"}, {"body": "access raw value element also get think makes sense keep current behavior", "d": "12/2015"}, {"body": "think try stay close native behavior value conversions user explicitly wants keep current behavior", "d": "12/2015"}, {"body": "would open alternative syntax html feels keeping syntax", "d": "12/2015"}, {"body": "morgul sounds like good idea open separate issue", "d": "12/2015"}, {"body": "slated release willimplement btw", "d": "12/2015"}, {"body": "yeah milestone", "d": "12/2015"}, {"body": "sorry saw close issue hello bdedardel work summernote today found question solution use summernote onchange callbacks like let program vue instance detail model program know good way solve problem probably already got", "d": "12/2015"}, {"body": "abdulahkam thanks post try solution even summernote respond exactly needs", "d": "12/2015"}, {"body": "use ionic components vuejs collectionrepeat mobile ui", "d": "12/2015"}, {"body": "closing nt think cases necessary use represent ui state json serializable benefits nt justify amount work needed properly support especially available every browser", "d": "12/2015"}, {"body": "little late party sure feature using alias syntax allowed store data vm application component state example wanted turn editing mode item list could would nt dilute object since longer using vm assuming longer possible clean workaround maybe understanding change actually moved yet nt chance experiment looking current code base trying evaluate pain involved", "d": "12/2015"}, {"body": "\u5728webpackvueloader", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "updates released yet", "d": "12/2015"}, {"body": "shayac use new version vuejs dynamically create lot better", "d": "12/2015"}, {"body": "want", "d": "12/2015"}, {"body": "awesome", "d": "12/2015"}, {"body": "wrote definitions nt tested definitions might mistakes", "d": "12/2015"}, {"body": "considering writing new app vue wanted know status nkovacs ssrendering pocs another relates evan vision eventually supportingmerging ssrendering vue thanks", "d": "12/2015"}, {"body": "nkovacs work likely longer relevant plan experiment ssr early intuition getting idiomatic vue components render node relatively easy proper hydration without blowing away serverrendered dom tricky", "d": "12/2015"}, {"body": "problems trying solved making vue ssr capable one thing want another actually understand reasons wanting none offered thus far like put forth reasons one might want ssr maybe better seo longer needed accessibility really hard make waiaria capable content client side fast first paint screen times loading needs fast paint times factors problems might need considered last bit information help develop point view nt already one please look blog currently neither serverside rendering vue truly understanding benefits ssr outweigh risks insight especially evan would greatly appreciated scott", "d": "12/2015"}, {"body": "use vueserver right compitable latest vuejs version also tested production though blow away serverrendered dom like said", "d": "12/2015"}, {"body": "smolinari google one se russian segment example highly dependent yandex able properly parse js right maybe soon could also share vuejs components templates services like emails generation api resources provide html", "d": "12/2015"}, {"body": "good points thanks fullfs andrey others edit discussion going another js framework watching scott", "d": "12/2015"}, {"body": "thank smolinari fullfs responding principle use case related custom clientside performance metric timetofirst art art gift web site important scaffold dom pullin media cdn cache ensure endusers see product asap impetus behind question process proofing app vue ssred dom replaced vue component instances vs attaching dom would show stopper us case simply nt gotten point proof test yet", "d": "12/2015"}, {"body": "ssred dom replacing overall ok looks fine try serfing eng support sorry probably wo nt notice moment replacing ofc restrictions example animate something like banners videos pull parts content moment replacing problem make ssr dom client dom little different good thing vuejs fast first loading wo nt take much time rerender dom ssr dom also allow begin loading simple media content like images app inited boost", "d": "12/2015"}, {"body": "blowing away existing dom sounds expensive reality really bad especially app complex eg displaying catalog artworks anything focusing optimizing image compression distribution would probably yield much better return", "d": "12/2015"}, {"body": "looking lightweight js frameworks currently tinkering riotjs wanted keep eye vuejs see take ssr like offer another couple reasons ssr important ssr extremely important want largest international user base possible many parts world running old browsers even feature phones many devices either nt run js nt js features required run modern site without downloading obscene amount shims bandwidth latency concerns emerging markets may allow downloading js alone referring vue size number seen many modern sites serverrenderedclientrendered hybrid app ensures reach largest audience still allowing modern experience users enjoy additionally initial page load faster users js required working page excuse progressive enhancement plug", "d": "12/2015"}, {"body": "get property changing watching data", "d": "12/2015"}, {"body": "documented easy", "d": "12/2015"}, {"body": "janokary documentation give hint know property changed using able get notify new oldvalue property viewmodel property changed", "d": "12/2015"}, {"body": "mentioned guitcastro still nt mention watch item within list say list like watch using know item mutated changed issue guys livestream work", "d": "12/2015"}, {"body": "u please share code", "d": "12/2015"}, {"body": "take look trying make happen working", "d": "12/2015"}, {"body": "fair vif nt use complex expression computer properties microdreamit go fixed nt use issues personal problems even nt related vif anyway", "d": "12/2015"}, {"body": "anyone working gist custom directive wrapping mediumjs please spent hours trying make work luck", "d": "12/2015"}]