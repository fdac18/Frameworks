[{"title": "test factory use cases introjs", "body": "lot logic introjs test two browser use case common nodejsdom cover scenarios freely changing code actually breaks tests", "num": "2181", "d": "3/2015"}, {"title": "error indication getscript nt execute script sent mime textplain", "body": "gist makes call trying run jsbin console dutifully shows script loaded network tab shows indeed request gistgithubcom returned script problem script wo nt ever execute know github returns sets failure execute nt entirely surprising think fact called misleading undefined nt indicator undefined even script executes jsbin raises separate issue exactly supposed contain body script result apparently script called second jsbin returns console still shows", "num": "2178", "d": "3/2015"}, {"title": "settimeout defined referenceerror commonjslike environment firefox sdk", "body": "unusual usecase jquery sdk addon obvious window object reason manipulate dom injected content scripts fact hidden window means jquery usable things like deferreds etc main indexjs first three lines firefox magic get hold hidden window important javascript var cc ci require chrome var hiddendomwindow cc mozillaorgappshellappshellservice getservice cinsiappshellservice hiddendomwindow var j require jquery hiddendomwindow var deferred jdeferred done function value consolelog done value deferredresolve hello world throws settimeout defined referenceerror ing jquery following stack trace line jqueryjs environment nt however fix instances usage jquery", "num": "2177", "d": "3/2015"}, {"title": "introjs code truncated", "body": "introjs code file appears truncated line opening bracket line", "num": "2176", "d": "3/2015"}, {"title": "consider evaling responses crossdomain queries", "body": "currently clientside code crossdomain url default json look url response guess protocol use certain conditions eg url contains response javascript jquery autoguess jsonp used automatically eval response query behavior dangerous introduce xss vulnerabilities also potentially unexpected caller nt explicitly set might surprising unexpected eval response server present imagine might cause subtle xss vulnerabilities deployed code uses jquery think would worth considering whether possible change automatic behavior good principle might nt eval response crossdomain server unless developer requested could reasonably anticipate would happen course backwards compatibility existing jquery code going challenge nt know whether good way thread needle backwards compatibility existing code creating traps unwary code looks entirely reasonable actually xss vulnerability perhaps possible jquery bit smarter instance developer calls nt explicitly set could jquery use instead feasible disable autojsonp step back bit least crossdomain queries lacking data usage jquery apis nt know might possible smells like area changes jquery behavior might help developers avoid getting bit subtle xss bugs see eg usual resources security risks eval untrusted code", "num": "2175", "d": "3/2015"}, {"title": "docs get specify condition secure", "body": "documentation get mention conditions causes xss vulnerability describe developers need avoid introducing xss using get particular unsafe comes untrusted source eg attacker another user apparently two problems first attacker controls attacker arrange hold something like arrange respond request malicious javascript jquery jsonp autodetection eval javascript found response request making call xss vulnerability second attacker controls attacker arrange url arrange respond request malicious javascript served set something javascriptlike footgun clear documentation introduce kind vulnerability part url controlled attacker documentation mention fact might autoguess jsonp eval response server let alone conditions happens also mention might eval response server set make look like javascript documentation nt describe developers safe documenting clearly would help developers avoid inadvertent xss vulnerabilities code apparently url might partially completely attacker control safe way fetch json url use particular necessary set set option fact apparent documentation described documentation clearly also appears way set combination settings method url might attacker control necessary use see details", "num": "2174", "d": "3/2015"}, {"title": "docs getjson specify conditions secure", "body": "documentation getjson mention conditions causes xss vulnerability describe developers need avoid introducing xss using getjson particular unsafe comes untrusted source eg attacker another user attacker controls attacker arrange hold something like arrange respond request malicious javascript jquery jsonp autodetection eval javascript found response request making call xss vulnerability footgun clear documentation introduce kind vulnerability part url controlled attacker documenting clearly would help developers avoid inadvertent xss vulnerabilities code apparently url might partially completely attacker control safe way fetch json url use fact apparent documentation described documentation clearly see details", "num": "2173", "d": "3/2015"}, {"title": "obj trigger nt work plain javascript objects length property", "body": "docs state works plain javascript objects pubsub manner together however nt work whenever object property repro steps works nt work guess logic intended detect arrays gone haywire", "num": "2172", "d": "3/2015"}, {"title": "fneach fails argument function class", "body": "following code print myclass instead document tested", "num": "2171", "d": "3/2015"}, {"title": "npm install error windows", "body": "info worked ends ok verbose cli program filesnodejsnodeexe verbose cli program filesnodejsnodemodulesnpmbinnpmclijs verbose cli install verbose cli g verbose cli contextify info using npm info using node silly cache add args contextify null verbose cache add spec contextify silly cache add parsed spec raw contextify silly cache add scope null silly cache add name contextify silly cache add rawspec silly cache add spec silly cache add type range verbose addnamed contextify silly addnamed semvervalid null silly addnamed semvervalidrange silly addnamerange name contextify range hasdata false silly maptoregistry name contextify silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry uri verbose addnamerange registry flight fetching verbose request uri verbose request auth needed info attempt registry request try verbose request id verbose etag http request get http silly get cb silly get date thu mar gmt silly get server apache silly get via varnish silly get lastmodified thu mar gmt silly get cachecontrol silly get etag silly get age silly get xservedby silly get xcache hit silly get xcachehits silly get xtimer silly get vary accept silly get contentlength silly get keepalive silly get connection keepalive verbose etag cache verbose get saving contextify f usersjackzhangappdataroamingnpmcacheregistrynpmjsorgcontextifycachejson silly addnamerange number name contextify range hasdata true silly addnamerange versions contextify silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange verbose addnamed contextify silly addnamed semvervalid silly addnamed semvervalidrange silly cache afteradd contextify verbose afteradd f flight writing verbose afteradd f written silly install resolved name contextify silly install resolved version silly install resolved description turn object persistent execution context silly install resolved author name brian mcdaniel email gmailcom silly install resolved contributors silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved keywords context vm silly install resolved repository silly install resolved type git silly install resolved url silly install resolved main libcontextify silly install resolved scripts test nodeunit test install nodegyp rebuild silly install resolved engines node silly install resolved licenses object silly install resolved dependencies bindings nan silly install resolved devdependencies nodeunit silly install resolved gypfile true silly install resolved githead silly install resolved bugs url silly install resolved homepage silly install resolved id contextify silly install resolved shasum silly install resolved contextify silly install resolved npmversion silly install resolved nodeversion silly install resolved npmuser name brianmcd email gmailcom silly install resolved maintainers object silly install resolved dist silly install resolved shasum silly install resolved tarball silly install resolved directories silly install resolved resolved silly install resolved readme error readme data found info install contextify f usersjackzhangappdataroamingnpm info installone contextify verbose installone contextify f usersjackzhangappdataroamingnpm flight installing verbose lock using f f usersjackzhangappdataroamingnpmnodemodulescontextify silly install write writing contextify f usersjackzhangappdataroamingnpmnodemodulescontextify silly cache addnamed cb contextify verbose unbuild nodemodulescontextify verbose gentlyrm vacuuming f usersjackzhangappdataroamingnpmnodemodulescontextify verbose tar unpack f verbose tar unpacking f usersjackzhangappdataroamingnpmnodemodulescontextify verbose gentlyrm vacuuming f usersjackzhangappdataroamingnpmnodemodulescontextify silly gunztarperm modes silly gunztarperm extractentry packagejson silly gunztarperm modified mode packagejson silly gunztarperm extractentry npmignore silly gunztarperm modified mode npmignore silly gunztarperm extractentry readmemd silly gunztarperm modified mode readmemd silly gunztarperm extractentry changelog silly gunztarperm modified mode changelog silly gunztarperm extractentry bindinggyp silly gunztarperm modified mode bindinggyp silly gunztarperm extractentry libcontextifyjs silly gunztarperm modified mode libcontextifyjs silly gunztarperm extractentry testcontextifyjs silly gunztarperm modified mode testcontextifyjs silly gunztarperm extractentry licensetxt silly gunztarperm modified mode licensetxt silly gunztarperm extractentry srccontextifycc silly gunztarperm modified mode srccontextifycc silly gunztarperm extractentry wscript silly gunztarperm modified mode wscript info preinstall contextify silly prepareforinstallmany adding bindings contextify dependencies silly prepareforinstallmany adding nan contextify dependencies silly cache add args nan null verbose cache add spec nan silly cache add parsed spec raw nan silly cache add scope null silly cache add name nan silly cache add rawspec silly cache add spec lt silly cache add type range verbose addnamed nan gt lt silly addnamed semvervalid null silly addnamed semvervalidrange gt lt silly addnamerange name nan range lt hasdata false silly maptoregistry name nan silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry uri verbose addnamerange registry flight fetching verbose request uri verbose request auth needed info attempt registry request try verbose etag http request get silly cache add args bindings null verbose cache add spec bindings silly cache add parsed spec raw bindings silly cache add scope null silly cache add name bindings silly cache add rawspec silly cache add spec silly cache add type range verbose addnamed bindings silly addnamed semvervalid null silly addnamed semvervalidrange silly addnamerange name bindings range hasdata false silly maptoregistry name bindings silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry uri verbose addnamerange registry flight fetching verbose request uri verbose request auth needed info attempt registry request try verbose etag http request get http silly get cb silly get date thu mar gmt silly get server apache silly get via varnish silly get lastmodified thu mar gmt silly get cachecontrol silly get etag silly get age silly get xservedby silly get xcache hit silly get xcachehits silly get xtimer silly get vary accept silly get contentlength silly get keepalive silly get connection keepalive verbose etag cache verbose get saving bindings f usersjackzhangappdataroamingnpmcacheregistrynpmjsorgbindingscachejson silly addnamerange number name bindings range hasdata true silly addnamerange versions bindings silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange verbose addnamed bindings silly addnamed semvervalid silly addnamed semvervalidrange silly cache afteradd bindings verbose afteradd f flight writing verbose afteradd f written http silly get cb silly get date thu mar gmt silly get server apache silly get via varnish silly get lastmodified thu mar gmt silly get cachecontrol silly get etag silly get age silly get xservedby silly get xcache hit silly get xcachehits silly get xtimer silly get vary accept silly get contentlength silly get keepalive silly get connection keepalive verbose etag cache verbose get saving nan f usersjackzhangappdataroamingnpmcacheregistrynpmjsorgnancachejson silly addnamerange number name nan range lt hasdata true silly addnamerange versions nan silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange silly addnamerange verbose addnamed nan silly addnamed semvervalid silly addnamed semvervalidrange silly cache afteradd nan verbose afteradd f flight writing verbose afteradd f written silly install resolved name bindings silly install resolved description helper module loading native module node file silly install resolved keywords native addon bindings gyp waf c c silly install resolved version silly install resolved author silly install resolved name nathan rajlich silly install resolved email nathan tootallnatenet silly install resolved url silly install resolved repository silly install resolved type git silly install resolved url git githubcomtootallnatenodebindingsgit silly install resolved main bindingsjs silly install resolved bugs url silly install resolved homepage silly install resolved license mit silly install resolved githead silly install resolved id bindings silly install resolved scripts silly install resolved shasum silly install resolved bindings silly install resolved npmversion silly install resolved npmuser name tootallnate email nathan tootallnatenet silly install resolved maintainers object object silly install resolved dist silly install resolved shasum silly install resolved tarball silly install resolved directories silly install resolved resolved silly install resolved readme error readme data found silly install resolved name nan silly install resolved version silly install resolved description native abstractions nodejs c header node compatibility silly install resolved main includedirsjs silly install resolved repository type git url git githubcomrvaggnangit silly install resolved scripts silly install resolved test tap gc testjstestjs silly install resolved rebuildtests nodegyp rebuild directory test silly install resolved contributors silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved object silly install resolved devdependencies silly install resolved bindings silly install resolved nodegyp silly install resolved tap silly install resolved xtend silly install resolved license mit silly install resolved githead silly install resolved bugs url silly install resolved homepage silly install resolved id nan silly install resolved shasum silly install resolved nan gt lt silly install resolved npmversion silly install resolved nodeversion silly install resolved npmuser name rvagg email rod vaggorg silly install resolved maintainers object object silly install resolved dist silly install resolved shasum silly install resolved tarball silly install resolved directories silly install resolved resolved silly install resolved readme error readme data found info install bindings f usersjackzhangappdataroamingnpmnodemodulescontextify info install nan f usersjackzhangappdataroamingnpmnodemodulescontextify info installone bindings verbose installone bindings f usersjackzhangappdataroamingnpmnodemodulescontextify flight installing info installone nan verbose installone nan f usersjackzhangappdataroamingnpmnodemodulescontextify flight installing verbose lock using f f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan verbose lock using f f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings silly install write writing nan f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan silly cache addnamed cb nan verbose unbuild nodemodulescontextifynodemodulesnan silly install write writing bindings f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings silly cache addnamed cb bindings verbose unbuild nodemodulescontextifynodemodulesbindings verbose gentlyrm vacuuming f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan verbose gentlyrm vacuuming f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings verbose tar unpack f verbose tar unpacking f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan verbose gentlyrm vacuuming f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan verbose tar unpack f verbose tar unpacking f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings verbose gentlyrm vacuuming f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings silly gunztarperm modes silly gunztarperm modes silly gunztarperm extractentry packagejson silly gunztarperm modified mode packagejson silly gunztarperm extractentry packagejson silly gunztarperm modified mode packagejson silly gunztarperm extractentry readmemd silly gunztarperm modified mode readmemd silly gunztarperm extractentry includedirsjs silly gunztarperm modified mode includedirsjs silly gunztarperm extractentry readmemd silly gunztarperm modified mode readmemd silly gunztarperm extractentry bindingsjs silly gunztarperm modified mode bindingsjs silly gunztarperm extractentry licensemd silly gunztarperm modified mode licensemd silly gunztarperm extractentry dntrc silly gunztarperm modified mode dntrc silly gunztarperm extractentry appveyoryml silly gunztarperm modified mode appveyoryml silly gunztarperm extractentry nanh silly gunztarperm modified mode nanh info preinstall bindings silly gunztarperm extractentry silly gunztarperm modified mode silly install resolved verbose build f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings info build f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings verbose linkstuff true verbose linkstuff f usersjackzhangappdataroamingnpmnodemodules verbose linkstuff false verbose linkstuff f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodules info linkstuff bindings verbose linkbins bindings verbose linkmans bindings verbose rebuildbundles bindings info install bindings info postinstall bindings verbose unlock done using f f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesbindings silly gunztarperm extractentry silly gunztarperm modified mode silly gunztarperm extractentry nannewh silly gunztarperm modified mode nannewh silly gunztarperm extractentry changelogmd silly gunztarperm modified mode changelogmd info preinstall nan silly install resolved verbose build f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan info build f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan verbose linkstuff true verbose linkstuff f usersjackzhangappdataroamingnpmnodemodules verbose linkstuff false verbose linkstuff f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodules info linkstuff nan verbose linkbins nan verbose linkmans nan verbose rebuildbundles nan info install nan info postinstall nan verbose unlock done using f f usersjackzhangappdataroamingnpmnodemodulescontextifynodemodulesnan verbose build f usersjackzhangappdataroamingnpmnodemodulescontextify info build f usersjackzhangappdataroamingnpmnodemodulescontextify verbose linkstuff true verbose linkstuff f usersjackzhangappdataroamingnpmnodemodules verbose linkstuff true verbose linkstuff f usersjackzhangappdataroamingnpmnodemodules info linkstuff contextify verbose linkbins contextify verbose linkmans contextify verbose rebuildbundles contextify verbose rebuildbundles bindings nan info install contextify verbose unsafeperm lifecycle true info contextify failed exec install script verbose unlock done using f f usersjackzhangappdataroamingnpmnodemodulescontextify verbose stack error contextify install verbose stack exit status verbose stack eventemitter program verbose stack eventemitteremit verbose stack childprocess program verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid contextify verbose cwd f githubjquery error windowsnt error argv program filesnodejsnodeexe program filesnodejsnodemodulesnpmbinnpmclijs install g contextify error node error npm error code elifecycle error contextify install error exit status error failed contextify install script nodegyp rebuild error likely problem contextify package error npm error tell author fails system error nodegyp rebuild error get info via error npm owner ls contextify error likely additional logging output verbose exit true verbose unbuild nodemodulescontextify info preuninstall contextify info uninstall contextify verbose unbuild rmstuff contextify f usersjackzhangappdataroamingnpmnodemodules info postuninstall contextify verbose gentlyrm vacuuming f usersjackzhangappdataroamingnpmnodemodulescontextify silly gentlyrm purging f usersjackzhangappdataroamingnpmnodemodulescontextify silly gentlyrm quitting entries f usersjackzhangappdataroamingnpmnodemodules", "num": "2170", "d": "3/2015"}, {"title": "jquery angular requests assets multiple times cors enabled webserver", "body": "ok bit crazy moving parts try give happening simply nginx running cors enabled separately django web app running port serving api use cors headers access api port things get weird page loads scripts rerequested jquery breaks bunch things couple pics console reference tracked line makes sense page would want check see cors enabled trying run resources understanding adding preflight crossdomain request nt exact opposite want want add preflight cors related request headers cross domain request nt perhaps would better make sense please let know questions perhaps take local server illustrate happening", "num": "2169", "d": "3/2015"}, {"title": "find mouse buttons pressed", "body": "need way check mouse button pressed tried record mousedown mouseup events release two mouse buttons screen one mouseup event fired also cheat around using mouseleave events", "num": "2168", "d": "3/2015"}, {"title": "html invoked shorthand tag skip next closing tag generate appropriate closing tag", "body": "expected behavior invoking html shorthand closing tag function generate closing tag leave intact code outside shorthand closed tag actual outcome element whose html code replaced via html function shorthand form function replace code next closing tag even duh closing tag belongs different node dom steps reproduce see outcome calling html replace html code full short hand tags jsfiddle", "num": "2167", "d": "3/2015"}, {"title": "nt publish distcdn", "body": "directory nt published npmbower meant generate files send various cdns later refs", "num": "2164", "d": "3/2015"}, {"title": "", "body": "", "num": "2163", "d": "3/2015"}, {"title": "noop master", "body": "master modifies sinon fake timers heavily perhaps task nt run one recent sinon updates", "num": "2160", "d": "3/2015"}, {"title": "toggle checkboxes set checked state internal checkbox", "body": "hi example great internal checkbox radiobutton state remains expected behavior click button inner checkbox gets accordingly looking toggle function bootstrap see implemented nt work bootstrap example page website", "num": "2157", "d": "3/2015"}, {"title": "download error", "body": "probably correct place report today following error console get net errtoomanyredirects since many sites includes jquery directly url think looked asap many thanks work jakub", "num": "2156", "d": "3/2015"}, {"title": "merge function add code firstlength", "body": "length first increase automatically merge function add code firstlength", "num": "2155", "d": "3/2015"}, {"title": "update jsdom amp drop obsolete workarounds", "body": "currently test jsdom latest version supporting nodejs test example jsdom document created via body", "num": "2153", "d": "3/2015"}, {"title": "run promisesa test suite real browsers", "body": "currently running promisesa tests node mean mostly untested nt know really works browsers get test suite run real browsers problem since suite uses getters heavily even getting run browsers would huge win musthave beta imo ready final set milestone refs refs", "num": "2152", "d": "3/2015"}, {"title": "outerhtml", "body": "please implement function already compelling", "num": "2151", "d": "3/2015"}, {"title": "jquery still support ie", "body": "hi noticed something strange open source code latest build jquery search lot hits see line quote support ie lt even compat branch longer support anyway correct stated docs jquery branch supporting older ie", "num": "2150", "d": "3/2015"}, {"title": "siblings set length gt includes original members", "body": "see jsfiddle consider series elements jquery object contains documentation says original element included among siblings important remember wish find elements particular level dom tree assumption case however jquery test sibling contained original set get personally consider bug implementation intended behavior least docs need reflect", "num": "2149", "d": "3/2015"}, {"title": "fail test modifying offset values callback", "body": "see", "num": "2147", "d": "3/2015"}, {"title": "replacewith nt work latest firefox", "body": "facing issue replacewith method nt work properly firefox latest removes src attribute img tag nt happen chrome inspected element found src eliminated used safe mode firefox tested two machines please check jsfiddle latest firefox browsers compare", "num": "2146", "d": "3/2015"}, {"title": "fails intermittently ios due safari bug", "body": "timing bug causes mobile safari incorrectly report length objects nt one best knowledge happens possibly systems bug triggered objects numeric properties example case query mobile safari sometimes return highest property causes functions like treat objects foo arrays instead objects tries iterate fails since foo problem fixed function instead checking also need check latter check immune ios bug realize fix one browser browser large user base see background repro steps following stack overflow discussion", "num": "2145", "d": "3/2015"}, {"title": "firefox animation issue", "body": "trying zoom absolutely positioned div center page using top right bottom left percentages discovering issue site created fiddle tested ie windows chrome windows fedora ubuntu firefox windows fedora ubuntu safari mobile iphone chrome mobile android firefox platforms exhibits issue first half animate div moves left without growing grows full size new starting point since happens firefox thought might firefox bug nt start happening jquery decided start", "num": "2144", "d": "3/2015"}, {"title": "preventdefault timeout blocking error", "body": "version preventdefault inside timeout error member found break following functionality consoleerror fired stated jquery unable prevent default called within timeout proceeded normal", "num": "2143", "d": "3/2015"}, {"title": "object function index value value doesnt inherit string prototype", "body": "error undefined function attempting use string methods directly upon value work around", "num": "2142", "d": "3/2015"}, {"title": "jsdom error using node npm", "body": "project using jquery inside express app running nodejs working fine switched new computer rebuilt environment getting following jsdom error let know suggestions could look set nodename throw new coredomexception syntaxerror unexpected token exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs", "num": "2140", "d": "3/2015"}, {"title": "unite compat master branches", "body": "discussed meeting small size difference two branches headache support develop functionality lot sense users since real divergences supported environments probably best suited post since ticket indented break backcompat might makes consider change next minor release although would shame ditch work put master like data module", "num": "2139", "d": "3/2015"}, {"title": "make sense split jquery smaller modules", "body": "since npm great job browserify webpack becoming popular commonjs style highly recognised lot frontend developers jquery also embraces npm makes npm future package manager javascript frontend backend however jquery quite heavy bloated methods would probably never used website quite npm way say want iterate objects would use even load different versions methods one app without ing whole lodash src files therefore asking make sense split module smaller ones developers cherry pick methods going use fact jquery src already modulised would nt hard publish small piece npm need build tool convert packages like cheerio similar things jquery could potentially share small modules way angularjs could use ones need instead building jqlite like lodash jquery also develop build tool build different versions different purposes", "num": "2138", "d": "3/2015"}, {"title": "parse got error chrome error message uncaught syntaxerror unexpected end input", "body": "firefox got error syntaxerror jsonparse unexpected end data line column json data know string charactor jquery know idea type parse error msg descriptive clear thanks jquery version chrome firefox go beyond oneself make perfection perfect", "num": "2137", "d": "3/2015"}, {"title": "trailing ampersand causes uncaught error syntax error", "body": "issue jquery encounters syntax error first load fails complete initialisation jquery version reproduce create html page including jquery using standard scrip tag request url trailing ampersand eg wwwexamplecom amp check developer console following error message uncaught error syntax error unrecognized expression amp tab chrome test chrome safari firefox understandably trailing ampersands useful slightest web application build manage query parameters neatly however jquery probably nt completely fall", "num": "2136", "d": "3/2015"}, {"title": "post get ignore type callback provided", "body": "according documentation arguments post get aliases ajax function optional however provide callback type ignored example post myservercomtestphp data json done function json code defines get post functions arguments get shifted second argument function case third argument string", "num": "2135", "d": "3/2015"}, {"title": "standardize invalid input behavior", "body": "many jquery collection operations meaningful elements somewhat less commonly dom nodes collections logically contain anything operations always assume valid input potentially throwing exceptions encounter invalid given ease manually cleaning like singlemember read eg wholecollection read eg wholecollection write eg special consideration warranted singlemember reads responding empty collections current behavior usually returns seems reasonable standardize including changing methods return like cases collides real output collisions seem etc related", "num": "2134", "d": "3/2015"}, {"title": "synchronize use document globals", "body": "changes particular definition use variables never made compat branch introducing feel needless divergence source merge conflicts mzgol agree", "num": "2133", "d": "3/2015"}, {"title": "html function return correct xhtml legacy created html strings", "body": "according understanding spec disabled option set disabled disabled old html also produced browsers direct innerhtml also anything may retrieved stored database old email acquire strings like capitalised value disabled attribute var htmlstring perfectly legitimate old html put direct jquery get old school solution input tag closed disabled attribute incorrect value rather disabled htmlstring html proper xhtml need end input element value disabled disabled attribute html cleaner sort ydrdynamicloadload cleanser xhtml htmlstring text order cleanser small xml database html tags whether supposed contentless loads rules clean bad html", "num": "2131", "d": "3/2015"}, {"title": "find returns two dom object dom element safari", "body": "using jquery problem jquery returns two dom elements safari select find option selected return two dom objects single element safari browser options", "num": "2130", "d": "3/2015"}, {"title": "data new dataasexpando implementation causing olddisplay test failure", "body": "cc markelog", "num": "2127", "d": "3/2015"}, {"title": "trigger event called native dom event called twice", "body": "native dom event prefix called twice trigger function called", "num": "2123", "d": "3/2015"}, {"title": "data string returning uncommon types like string", "body": "data attribute set uncommon data type recognized string instead correct type instance returns like string instead number float high priority occur float types float zero right side float without integer float without decimal cases relevant first converted number suggestion use parsefloat detect number like low priority occur others numbers type exponential values hexadecimal values binary values octal values suggestion use parseint hexadecimal pattern others nt know low priority undefined value type undefined value undefined last case seems ok putting avail suggestion attribute value undefined returns test case", "num": "2122", "d": "3/2015"}, {"title": "jquery encounters nonprintable characters", "body": "var str str data xx give object var str str data xx give string normal result bug jquery", "num": "2120", "d": "3/2015"}, {"title": "return null attr attributes nt exist", "body": "currently returns probably days native dom return cases also removes attributes would convenient allow universal roundtripping let consider changing return value accommodate note setter treatment explicitly outofscope ticket roundtripping although certainly related topics", "num": "2118", "d": "3/2015"}, {"title": "add new closest relative selector", "body": "find quite often traversing dom like always thought would nice one string like main reason one string make easier navigate elements reusable components parameters passed via attributes example quite options like long somewhat confusing first use investigated source little seems easy add relative combinator requires source modification sizzle inaccessible outside idea chances get merged think could send pr", "num": "2117", "d": "3/2015"}, {"title": "jquery ajax basic authentication sending auth headers", "body": "method basic authentication jquery ajax module set header using optsusername optspassword simply put authentication header request even though prebaked url auth browser convention would nice support feature well answer talks problem username password options confirmed findings tested jquery chrome firefox noticed line built jquery unminified source options commented realize nt spot defines implemented noticing request api server allowed cross origin requests using npm cors package enabling preflight playing configuration options effect responses although expected auth headers nt sent jquery ajax", "num": "2116", "d": "3/2015"}, {"title": "remove ownerdocument check offset getter", "body": "fallout since supported browsers reason call method right away letting exception throw input fact dom element object without getboundingclientrect test go well", "num": "2115", "d": "3/2015"}, {"title": "allow offset setter throw input disconnected", "body": "fallout remove top left added let continue proxying along associated tests asserting behavior", "num": "2114", "d": "3/2015"}, {"body": "excluding sizzle supported jquery said readme compat branch perhaps everyone reads main readme add note well", "d": "3/2015"}, {"body": "let morph docs issue", "d": "3/2015"}, {"body": "thanks quick help", "d": "3/2015"}, {"body": "trying fix easier add new test", "d": "3/2015"}, {"body": "problem changing want use pieces jquery another environment nt ie nodejs wo nt work nt think way see cover scenarios would create hook users provide etc implementations default list assumed globals found amp taken factory amp amdcommonjs problem affects timers", "d": "3/2015"}, {"body": "understood naive solution fall back local timer functions global nt exist course breaks concept assumed globals guess firefox sdk pretty much unique commonjs globals available fact perhaps firefox issue", "d": "3/2015"}, {"body": "understood naive solution fall back local windowsettimeout timer functions global settimeout nt exist could work already expose globals variables see see also commit made code stop assuming browser environment could even check first fallback would make things work little better jsdom exposes patched able cancel timeouts would add bytes though could fixed firefox sdk side better jquerycore think", "d": "3/2015"}, {"body": "js environment without settimeout global weird place though find might want explode already detectstore window somewhere could reuse find", "d": "3/2015"}, {"body": "gnarf firefox sdk runtime global object sandbox kind excludes et al evil weird crazy mzgol saving bytes always good thinking firefox sdk global feature bug say unusual use case happy hack local jqueryjs imagine sandboxed runtimes future interesting implemented checking first get nice jsdom behaviour idea risky change would", "d": "3/2015"}, {"body": "implement would look something like adding parameter introjs factory defining similar definitions window methods right opposed exploring", "d": "3/2015"}, {"body": "using alreadyavailable facepalm", "d": "3/2015"}, {"body": "implement would look something like adding global parameter introjs factory defining var settimeout windowsettimeout globalsettimeout similar definitions window methods right may hard sometimes get global universally need special code path node knows else unless required people supply nonbrowser scenarios seems hostile using alreadyavailable wo nt work node module module instead could create additional wrapper closure define define module", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "gnarf js environment without settimeout global weird place although part ecmascript happen though find might want explode already detectstore window somewhere could reuse find settimeout defined global like ie nt contain property explicitly passed factory consumer relevant detection code timmywil would name file build system change change semantics detection idea avoids problem perhaps checking available would need added well repetitive feeling could extracted helper", "d": "3/2015"}, {"body": "mzgol yes thinking var module return var settimeout change semantics detection catching problem nt var want variable named top built file every place needing settimeout referring var nt issue", "d": "3/2015"}, {"body": "timmywil suggestion get built file fallback global empty bytes someone passes factory nt property declaration shadowed global effectively get even though global might exist", "d": "3/2015"}, {"body": "course shadowing would shorter change name var", "d": "3/2015"}, {"body": "may hard sometimes get global universally need special code path node knows else unless required people supply nonbrowser scenarios seems hostile given strict mode work everywhere turns get free using alreadyavailable wo nt work node module instead global true outermost context introjs calls iife true iife context defines context defines returns could either add etc parameters define etc inclined towards former wo nt even break strict mode practically indistinguishable proposal anyway", "d": "3/2015"}, {"body": "could either add etc parameters define etc let see understand correctly propose roughly modulo comments amp size reduction following introjs js function global factory pass window defined yet typeof window undefined window function window settimeout cleartimeout setinterval clearinterval noglobal even make whole body strict leave first iife still going work", "d": "3/2015"}, {"body": "fine jumping lot hoops wonder much", "d": "3/2015"}, {"body": "course shadowing would shorter change name var yes going harder contribute firsttime contributors assume available nt necessarily need know magic used make available", "d": "3/2015"}, {"body": "let see understand correctly propose roughly modulo comments amp size reduction following introjs even make whole body strict leave first iife still going work pretty much actually whole thing compatible strict mode embedding avoid assumptions first iife eg instead", "d": "3/2015"}, {"body": "really want jquery domcentric meaning needs dom work correctly would jquery dom ie correct object usable things like deferreds etc want use module use build jquery without module want use helpers methods like use etc yeah build version jquery core module", "d": "3/2015"}, {"body": "really want jquery domcentric meaning needs dom work correctly would require jquery dom ie correct window object environment global require passing factory still take timer functions global mainly exist node custom compilation less node would work required lie problem changing would fix issue would make harder node people inconsistency reason considering fixing issue good idea eg environment needs say sorry need getting passed via look different place", "d": "3/2015"}, {"body": "markelog also see wrote using node used jsdom jsdom patches etc cancel timers us using global may cause leaks someone uses considered edge case rare enough care considering need global node anyway issue another edge case may", "d": "3/2015"}, {"body": "matched outrojs", "d": "3/2015"}, {"body": "intentional meant used start builded file build system handles also thanks reporting", "d": "3/2015"}, {"body": "ha dmethvin second quicker", "d": "3/2015"}, {"body": "given time machine agree would nt work way however nt think without breaking lot innocent code docs explain default datatype intelligent guess someone retrieving get evaluated perhaps docs could improved calling script text makes sense wo nt execute script calling jsonp script impossible tag used retrieve script browser executes directly calling padding function json argument ing anything directly case", "d": "3/2015"}, {"body": "yea sure change without breaking ton code perhaps docs issue section untrusted urls bypass autojsonp js type inference way answer first stack overflow question longer accurate options objects passed shortcut methods like also longer necessary set option false need pass options object anyway required set proper datatype", "d": "3/2015"}, {"body": "better put since docs also nt specific jquery inject script tag document using plain dom methods script untrusted site made big mistake still nt think problem adding short warning docs since many web devs nt aware issues", "d": "3/2015"}, {"body": "see docs tickets could combined", "d": "3/2015"}, {"body": "guess nt far mark problem though lies many signatures accepts array logic identifies object numeric length element highest corresponding index arraylike length always looks like array empty force elements collection explicitly wrapping array see succeed", "d": "3/2015"}, {"body": "think documented example", "d": "3/2015"}, {"body": "function passed ready overload used value return jquery object containing single item object js function document ready function ready document ready ready return var doc function consolelog ready ready doc document", "d": "3/2015"}, {"body": "thought default behavior following script returns instance example following script returns false also think function fneach fully documented sometimes use iterate collection items necessarily jquery object sorry english", "d": "3/2015"}, {"body": "think best posed stackoverflow question want clarification", "d": "3/2015"}, {"body": "part log end interesting also please provide node amp npm versions check via", "d": "3/2015"}, {"body": "clear version jquery used code looks like makes requests description trying make crossdomain request django app hosting page port ngnix server port origin defined feeling like stackoverflow question rather bug report would better sort reopen specific problem identified", "d": "3/2015"}, {"body": "nt matter version jquery using version version behave understand defines origin trying cross domain requests multiple requests referring happen page loaded first browser downloads scripts first pic jquery sends xhr request second pic requesting resources via kind ajax call plugin jquery taking upon rerequest scripts idea happening", "d": "3/2015"}, {"body": "yep totally unrelated jquery doh level", "d": "3/2015"}, {"body": "believe stackoverflow right place kind question ask exactly trying accomplish nt see problem jsfiddle", "d": "3/2015"}, {"body": "ok let rephrase problem jquery correctly fire mouseup events multiple buttons released screen expected workflow press two mouse buttons move mouse screen release two mouse buttons get two mouseup events current workflow press two mouse buttons move mouse screen release two mouse buttons get one mouseup event", "d": "3/2015"}, {"body": "oh see mean thanks tested also happens mouse buttons pressed released mouseup event think way browsers handle events tested without jquery", "d": "3/2015"}, {"body": "browser bug", "d": "3/2015"}, {"body": "nt know happened chrome firefox opera mouseup event happens weird", "d": "3/2015"}, {"body": "ah well javascript still ca nt get basic things mouse api right use flash instead thanks help anyway", "d": "3/2015"}, {"body": "html invalid html autoclosing tags disallowed actually interpreted without closing tag example autoclosed next closing see without running jquery code actually contains replacing btw nested tags disallowed opening close previous paragraph", "d": "3/2015"}, {"body": "invalid html nt exception raised rather replacing content", "d": "3/2015"}, {"body": "practical use browser parser via give detailed error messages need reimplement html parser javascript embed jquery using internet explorer see html warnings console things like technically error spec defines pretty deep detail parse badly formed html", "d": "3/2015"}, {"body": "fair enough", "d": "3/2015"}, {"body": "practical impossible nt see source html dom browser parses case following html html html show wo nt show notice wo nt show paragraph gone serialized dom deserializes following html html html show wo nt show notice wo nt show paragraph gone see paragraph third line actually closed thing jquery sees replacing", "d": "3/2015"}, {"body": "believe published accident regardless already taken care new release script", "d": "3/2015"}, {"body": "believe published accident real issue using instead publishing person happens sidefiles directory get published handled release script possibly easiest way achieve always publish fresh copy btw likely need need make sure nt happen amp branches either wo nt use new release script", "d": "3/2015"}, {"body": "using separate repo publish longer necessary made get copied repo make sure nt distribution publishing npm manually rather updates old release stuff reopen reminder", "d": "3/2015"}, {"body": "make sure distcdn nt distribution publishing npm manually rather updates old release stuff reopen reminder add amp amp branches amp changes release script necessary amp wo nt rememeber submit pr sounds ok", "d": "3/2015"}, {"body": "submit pr sounds ok sure", "d": "3/2015"}, {"body": "pr", "d": "3/2015"}, {"body": "fixed amp", "d": "3/2015"}, {"body": "see", "d": "3/2015"}, {"body": "scottgonzalez thanks maybe script would nt bad heard scripts discouraged although nt know", "d": "3/2015"}, {"body": "would potentially put dirty state immediately though right nt sound great", "d": "3/2015"}, {"body": "touch good gets dirty state nt forget commit everything files match noop", "d": "3/2015"}, {"body": "assuming person making change manually changing using changes made script wo nt run", "d": "3/2015"}, {"body": "postinstall would help us remember nt want users onetime contributors deal", "d": "3/2015"}, {"body": "changes made npm install savedev somepackage postinstall script wo nt run right good idea", "d": "3/2015"}, {"body": "nt see problem linked page properties update every click possible confusing property attribute rate though appear jquery issue believe otherwise please link reduced test case eg jsfiddle reevaluate", "d": "3/2015"}, {"body": "right problem debugger sorry hassle", "d": "3/2015"}, {"body": "works closing issue", "d": "3/2015"}, {"body": "pointed code line necessary length parameter automatically updated new length removed unnecessary code commit", "d": "3/2015"}, {"body": "internally use merge jquery objects arraylike need corrected see documented perhaps api ticket needed cc arthurvr", "d": "3/2015"}, {"body": "yup note documentation ca nt hurt open issue api site home", "d": "3/2015"}, {"body": "nt want", "d": "3/2015"}, {"body": "writeonly looking read property better said less verbose version", "d": "3/2015"}, {"body": "idea rejected years ago lot change years quote pertinent comments seems people expect tend agree jitter potential abuse simply enormous many people nt understand concept dom element think html inject element place else add outerhtml going see ton stuff like john resig classic example nt simple theoretically yes however jquery public api new methods released specific endorsement idea along comes support support means tests tests mean bugs bugs mean edge cases edge cases mean hours debug never simple seems also criticism reasons implementing amount well idiot something idiotic going get idiotic results unfair summary reasons given plus one easy implement plugin hazy interactions tables exactly people trying use similar welltested api methods almost exact thing method handle data events associated element replaced mike sherov right mikesherov easy ignore consistency details definitely plenty tickets arriving tracker tell us outerhtml broken case simple implementation suits needs problem using dave methvin", "d": "3/2015"}, {"body": "way implementation changed years since currently supported browsers even compat support property nt know whether means plugin even shorter", "d": "3/2015"}, {"body": "discussed meeting leaning towards adding plenty short nt want add support issues firstclass outerhtml mix", "d": "3/2015"}, {"body": "thanks update", "d": "3/2015"}, {"body": "comments come sizzle selector engine used jquery sizzle opposed jquery one version line supports browsers jquery note plan reduce browsers supported jquery compat current jquery ie see happen time jquery next version still mean even jquery version nt support still see code nt make sense browsers getting rid would require sizzle two versions though always pain maintain gains would nt large enough enough workarounds sizzle warrant separete version thanks looking code filing bug thought", "d": "3/2015"}, {"body": "mzgol comments come sizzle line valhooks nt update selected form reset line line ajax module support examples jquery core", "d": "3/2015"}, {"body": "line valhooks nt update selected form reset line line ajax module support se comments needed support nt delete info older browsers code still needed anyway", "d": "3/2015"}, {"body": "comments cover browser master supports though", "d": "3/2015"}, {"body": "union siblings elements collection one element per level dom tree get expect jquery methods work way", "d": "3/2015"}, {"body": "yes fair enough still would harm mentioned docs surprising case worth short notice", "d": "3/2015"}, {"body": "works fine", "d": "3/2015"}, {"body": "thanks mate screenshot safe browsing without addon look source src attribute missing", "d": "3/2015"}, {"body": "working well getting errors console example mixed content", "d": "3/2015"}, {"body": "error warning see nothing network code since open normally via chrome console looks like", "d": "3/2015"}, {"body": "nt know say working fine whatever problem nt seem jquery", "d": "3/2015"}, {"body": "oliverhuynh please try fresh profile possible extension messing code would beyond scope fix", "d": "3/2015"}, {"body": "btw oliverhuynh say plugins clear firebug installed often cause problems", "d": "3/2015"}, {"body": "btw oliverhuynh say plugins clear firebug installed well plugins extensions maybe nt plugins installed", "d": "3/2015"}, {"body": "btw oliverhuynh say plugins clear firebug installed think default firefox dom inspector wrong", "d": "3/2015"}, {"body": "think default firefox dom inspector wrong look title window minimizemaximizeclose buttons also firebugspecific see browser bar oliverhuynh lot extensions installed need see results disabled", "d": "3/2015"}, {"body": "oh nt seen second screenshot", "d": "3/2015"}, {"body": "hi guys last screenshot run normal mode quick test pluginsextensions issue able reproduce computer place test safe mode firefox first screenshot", "d": "3/2015"}, {"body": "nothing related pluginsextensions strange things methods work well look directly implementatian code replacewith investigate issue", "d": "3/2015"}, {"body": "since nobody else reproduce problem need diagnose system", "d": "3/2015"}, {"body": "thanks report really weird due timing issue seems impossible write test report apple andor like issue able link agree work around", "d": "3/2015"}, {"body": "mzgol agree writing test case would impossible nt report issue apple think would carry weight coming jquery team point right direction happy file", "d": "3/2015"}, {"body": "description provided seems detailed enough could report bug mention affects jquery amp link issue", "d": "3/2015"}, {"body": "link webkit bug", "d": "3/2015"}, {"body": "wow guess must rare enough nt occur often plain object numeric indices etc patch says tries work around could something similar seems like situation december release worth another minorpoint release", "d": "3/2015"}, {"body": "like get response webkit bug first know dealing benjaminpoulain could look", "d": "3/2015"}, {"body": "yep looks like bug one two optimizers problem likely occurs code executed thousand times first try make test case reproduce", "d": "3/2015"}, {"body": "worth another minorpoint release might could ask people affected comment seems like bug manifests mainly large apps hard debug apple going fix amp backport fix line could punt wo nt know release judging past events imo proceed assuming wo nt backport", "d": "3/2015"}, {"body": "suggest go next point release regardless apple lot market share come bug nasty diagnose took weeks unearth core problem jquery great position spare people anguish", "d": "3/2015"}, {"body": "lot market share come yes meant apple backported fix ios amp safari nt release patch people would noticed bug would fixed fix get ios still need patch since supporting ios still want hear affected people tend agree something need patch release", "d": "3/2015"}, {"body": "btw according nt think bug reproable ios simulator sauce uses wo nt able write meaningful test since run test simulators well unless someone going run suite manually ios time time number people able drastically decrease release ios", "d": "3/2015"}, {"body": "hell time reproducing even tell bug exists webkit trunk attempt instrumenting jit makes bug disappear due changes timing anyone found reliable way reproduce bug using test case fragile", "d": "3/2015"}, {"body": "anyone found reliable way reproduce bug test case triggers bug iphone ios reliably nt see bug ios simulator posterity js var getlength function array return arraylength jit getlength arrays var lt getlength alert getlength test gt alerts", "d": "3/2015"}, {"body": "note jit perfunction per incorrectly treated object following code js var getlength function array return arraylength var function array return arraylength var test jit getlength arrays var lt getlength alert getlength alert", "d": "3/2015"}, {"body": "per meeting today hotfix patch release", "d": "3/2015"}, {"body": "perf issue", "d": "3/2015"}, {"body": "seems like good idea", "d": "3/2015"}, {"body": "timmywil let create milestone new patch releases amp changed one new one always change back discover issue possible patches", "d": "3/2015"}, {"body": "mzgol sounds good thanks", "d": "3/2015"}, {"body": "issue looking forward jquery could cover", "d": "3/2015"}, {"body": "swamped tasks moment chance take second look far tell bug still exists good release addressing", "d": "3/2015"}, {"body": "michael look fixed bug", "d": "3/2015"}, {"body": "awesome bug guess nt idea merged latest safari whether backported means new release still", "d": "3/2015"}, {"body": "worth investigating", "d": "3/2015"}, {"body": "get desired behavior animating width height rather right bottom", "d": "3/2015"}, {"body": "error expected object exists duration event time runs gone console message described sounds like would coming underscore something might changed", "d": "3/2015"}, {"body": "started project upgraded underscore nt changed aware limitations preventdefault timeout behavior broken since updated test native timeout error", "d": "3/2015"}, {"body": "right confirms object accessible function returned test case shows working giving error console simpler test case shows ca nt event", "d": "3/2015"}, {"body": "issue code exactly jquery version changed see create test case fire cases", "d": "3/2015"}, {"body": "well see happens whether jquery whatever code actual app may something mask prevent problem assume since console message appeared jquery way treats event object copy properties want event time clearly nt even make sense attempt inside since default action presumably already occurred earlier point time", "d": "3/2015"}, {"body": "right close ticket", "d": "3/2015"}, {"body": "could post concrete example preferrably jsbin hard guess mind sharing code", "d": "3/2015"}, {"body": "nt account jsbin reproduce edit way line expecting return javascript string please tell go away still somewhat beginner never looked hood jquery", "d": "3/2015"}, {"body": "jquery passes exact type declared object case passes number replace method number type goes booleans example info jquery convert declared keys string values according spec keys always strings", "d": "3/2015"}, {"body": "yes please ask questions stack overflow bug", "d": "3/2015"}, {"body": "apologies guys guess thanks help", "d": "3/2015"}, {"body": "point repo latest jsdom nt work latest node latest iojs probably issue unrelated jquery tried old computer see breaks well", "d": "3/2015"}, {"body": "unfortunately repo closed source could definitely node version issue currently looking rolling back latest node release also nt old computer currently get home hours check node version try running project npm update report back whatever find thanks tip", "d": "3/2015"}, {"body": "yep jsdom supports iojs need jsdom lt work node currently testing get updated small chance able drop jsdomonly workarounds fixed", "d": "3/2015"}, {"body": "getting jsdom installing jquery npm believe running jsdom version unless missing something version listed packagejson nodemodulesjquerynodemodulesjsdompackagejson", "d": "3/2015"}, {"body": "constellates unless directly jquery repository wo nt get get even though package dependency project means installing old version npm package older one nt published us thirdparty took ownership ca nt help need upgrade", "d": "3/2015"}, {"body": "thanks help rolling back node version work around issue correct currently jquery try updating", "d": "3/2015"}, {"body": "would nt necessarily ditch work makes build process little complicated impossible", "d": "3/2015"}, {"body": "fine merging branches like still release nt support otherwise many jquery downgrade since supporting larger library would slow adoption new version modules differ lot converge may introduce convention naming files build process proper version chosen versions eg amp otherwise introduce comment directives would cut parts files different code needed different browsers hopefully would nt lot cases separatefiles approach seems cleaner", "d": "3/2015"}, {"body": "really sad nt saved much space master always seems platform still holding us back whether android phantomjs main trouble spots would seem event ajax data maybe naming mzgol suggests along new build process would solve maybe would better continue separate branches drop support potentially keeping supported feel needed differences accessing internal data makes cherry picking much difficult even keep new data implementation restore consistent way modules get data across", "d": "3/2015"}, {"body": "otherwise introduce comment directives would cut parts files different code needed different browsers real ifelse syntaxaware build step let treeshaking remove unreachable code two files better two branches enough taste", "d": "3/2015"}, {"body": "maybe would better continue separate branches drop support potentially keeping supported feel needed worth noting beginning january current version internet explorer available supported operating system receive technical support security updates means months officially unsupported ms except embedded scenarios xp still supported nt matter means large companies need migrate enterprise mode support keep apps working amp still security fixes might good idea wait year amp drop instead opting complicated build process spend time merging branches drop shortly afterwards time spent cherrypicking chance lower time needed set tear apart later", "d": "3/2015"}, {"body": "time spent cherrypicking chance lower time needed set tear apart later right relative effort certainly guiding principle well", "d": "3/2015"}, {"body": "good point mzgol maybe wait drop support time deprecate jquery compat altogether", "d": "3/2015"}, {"body": "per last week meeting decision wait drop support ie thus deprecating compat project effectively result return one branch", "d": "3/2015"}, {"body": "first answer question yes modules made smaller already sure others find similar opportunities go dispute assertions however jquery quite heavy bloated methods would probably never used website quite npm way frontend web development nowhere near bloated npm proof look directory node development like layers onion reason nt look bloated top level seeing outer layer pungent onion every module include npm usually include many modules worse projects usually include different versions modules toponionskin project layer dutifully dependencies dependencies lower layers control code may still saddled whatever bugs thought escaping say want iterate objects would use jqueryeach lodasheach since jquery depends usable free course include utilities functionality prefer lead bloat even load different versions lodash methods one app without requireing whole lodash src files yes obviously behavior upon many node programs depend mentioned adds bloat reduce bloat allow sane debugging developer choose single version use jquery src already modulised would nt hard publish small piece npm need build tool convert nt see producing publishing modules problem challenge sharing single object support continuation passing style chaining overcome bigger issue consumption modules first frontend code nt file think thousands jquery plugins nt know dependencies second ca nt node include multiple versions everything every layer onion code moving internet resting instead tools need way flatten duplicate dependencies include one version yet ca nt happen automatically cases developer need resolve conflicts jqueryspecific issues matter node developers preach npm ideal tool clientside web developers right working npm lot others improve moment could summarize mo modules mo problems javascript development community long way solving issue solution far invent multiple incompatible workflows different package managers module loaders etc defrag mess agree smaller simpler set processes otherwise web developers rightly stay workflow simple comprehensible like including files manually via tags", "d": "3/2015"}, {"body": "note like eventually switch amd modules amp compile amd potentially commonjs whole modularization would require changes really soon also publishing lots tiny modules would complicate release process significantly much rather work switching modules implemented implementing transpiling someone needs modules etc", "d": "3/2015"}, {"body": "bloat primary concern modules way go using custom build process smaller footprint using modules directly also jquery utility library utility methods like used internally convenient users expose grand scheme nt actually many methods make sense standalone methods instance seems intuitive publish separately ajax many dependencies deferred callbacks core quickly becomes simpler include whole jquery would publish separately perhaps ajax methods together one module getting grouping ending compiled file size jquery anyway given leaving module wrappers love using modules js publishing jquery methods modules individually would lot effort surprisingly little reward", "d": "3/2015"}, {"body": "sounds interesting jquery willl converted modular future saw repo yesterday guys think future jquery", "d": "3/2015"}, {"body": "used syntax jquery transpiled suspect would add unneeded bulk resulting source also probably would nt get lot benefit features like arg destructuring default arguments given parameterhockeyhappy way api defined decade ago might fun see looks like though maybe could find subset pleasant write would nt add bulk pretty easy play babel repl see comes always free use code call jquery matter build likely transpile source next years anyway actually want use syntax modules look something like instead", "d": "3/2015"}, {"body": "thank issue roadmap foreseeable future probably take look modules may", "d": "3/2015"}, {"body": "thank guys back mind love using modules js publishing jquery methods modules individually would lot effort surprisingly little reward surprised nt know", "d": "3/2015"}, {"body": "thank opening issue error thrown browser jquery", "d": "3/2015"}, {"body": "chrome firefox json parse used native api browser", "d": "3/2015"}, {"body": "provide demonstration seems working", "d": "3/2015"}, {"body": "issue reproduced html document jquery loaded trailing slash part documentlocationhref property reproduce via ajax additional testing unable reproduce issue home computer closing", "d": "3/2015"}, {"body": "big fan parameter hockey leaving callback pretty rare case always use placeholder jquery signature accepts options arg like specify outlier cases heart delight everyone agrees seems make sense clarify docs", "d": "3/2015"}, {"body": "agreed docs issue", "d": "3/2015"}, {"body": "think already docs issue nt", "d": "3/2015"}, {"body": "yup thanks arthurvr", "d": "3/2015"}, {"body": "theory queasy feeling probably cases existing code depending undocumented failsilent quirky behavior", "d": "3/2015"}, {"body": "mostly nt backport required nonbrowser environments nt support compat line nothing porting makes cherrypicking easier note though different jshint config assumes browser environment one declares amp timer functions", "d": "3/2015"}, {"body": "fell foul weird formatting rules guess htmlstring originally", "d": "3/2015"}, {"body": "still didnt save try using serverhtmlencode htmlstring htmlstring html cleanser string ie", "d": "3/2015"}, {"body": "server html encoded strings get unencoded put back original try remember", "d": "3/2015"}, {"body": "preserving native browser behavior expecting", "d": "3/2015"}, {"body": "hi thanks quick reply defines correct rendering html years ago valueless attributes attribute name value ie disabled deprecated html recognising old form converting new standards code page supposed write disabled disabled old code therefore indicates element set disabled html effectives opposite setting also states tags content eg input img meta etc contentless elements ie stand alone tags expects properly formatted html readable xml parser comes html see html returns native innerhtml looking jquery hide browser differences looking jquery protect native browser variations return standard syntax need standard compliant transferred server resent users predictable results machine need html rendered exactly way given ser user key depressions regardless browser also sent html email nonstandard rendering email generally gets bounced isp another real problem much code generating html strictly well behaved html issue server strictly xml compliant problem created locally eg textarea contenteditable app uses allows user trigger execcommand native htmlclient javascript edit document execcommand allow paste external applications eg ms word basically anything turn stuff problem deal junk clean supplier dross bloats copy paste client side app uses xml services totally screwed microsoft recently internet explorer recent ie changes could job browser pain deal microsoft changes time regards dr martin w baker york development research limited mailto martinwbaker yorkdevrescouk martinwbaker yorkdevrescouk tel mob skype martinwbaker skype martinwbaker call status registered england registered office north house high street tonbridge kent email attachments confidential intended addressee named recipient use disclose reproduce copy distribute contents communication received error please contact sender delete email system richard gibson mailto notifications githubcom sent march jqueryjquery cc martin subject jquery html function return correct xhtml legacy created html strings preserving native browser behavior expecting reply email directly view github", "d": "3/2015"}, {"body": "code page supposed write disabled disabled quote spec spec seems contradict", "d": "3/2015"}, {"body": "sounds like want deal xhtml guaranteed valid xml names indicate neither native property jquery method make guarantees recommend using code specific quick search part turned seems exactly want rate scope existing jquery methods", "d": "3/2015"}, {"body": "richard wow feed back quick helpful sorry land across research thanks much really appreciate help new query two weeks old even time impressed guys achieved architectural elegance solution kind regards martin dr martin w baker york development research limited mailto martinwbaker yorkdevrescouk martinwbaker yorkdevrescouk tel mob skype martinwbaker skype martinwbaker call status registered england registered office north house high street tonbridge kent email attachments confidential intended addressee named recipient use disclose reproduce copy distribute contents communication received error please contact sender delete email system richard gibson mailto notifications githubcom sent march jqueryjquery cc martin subject jquery html function return correct xhtml legacy created html strings sounds like want deal xhtml whichunlike guaranteed valid xml names indicate neither native innerhtml property jquery html method make guarantees recommend using code specific problema quick search part turned seems exactly want rate scope existing jquery methods reply email directly view github", "d": "3/2015"}, {"body": "say exactly correct code get junk document eg end user paste contenteditable textarea element javascript execcommand another application native machine user running junk comes needs cleaning want get rubbish inhertited outside application dr martin w baker york development research limited mailto martinwbaker yorkdevrescouk martinwbaker yorkdevrescouk tel mob skype martinwbaker skype martinwbaker call status registered england registered office north house high street tonbridge kent email attachments confidential intended addressee named recipient use disclose reproduce copy distribute contents communication received error please contact sender delete email system dave methvin mailto notifications githubcom sent march jqueryjquery cc martin subject jquery html function return correct xhtml legacy created html strings code page supposed write disabled disabled quote spec spec seems contradict reply email directly view github", "d": "3/2015"}, {"body": "please link live demonstration jsfiddlejs binetc showing behavior deviates expectations", "d": "3/2015"}, {"body": "thanks reply gibson link live demonstration please open link safari browser run sample program select cycle option jquery returns dom elements two times", "d": "3/2015"}, {"body": "caused use numeric values attribute duplicate fixed jquery", "d": "3/2015"}, {"body": "thanks lot taking time see ticket give response", "d": "3/2015"}, {"body": "see trac background problem suggested fix trades one bug another far tell good set unit test additions would confirm", "d": "3/2015"}, {"body": "float case", "d": "3/2015"}, {"body": "seems like better fix almost everything except negative values octal", "d": "3/2015"}, {"body": "behavior intentional value converted number nt change value representation example equivalent numbers numeric value converting would alter representation left strings string value converted number see explanation introduced jquery infer intent opaque sequence characters feel free numericcast values know operation makes sense", "d": "3/2015"}, {"body": "make sense work number separator instance really represents integer float really unfeasible new behavior following logic also affect hexadecimal developer expect hexadecimal literally numerical conversion", "d": "3/2015"}, {"body": "also affect hexadecimal way disambiguate developer safer assume values serialized strings indeed treated strings let developer explicit html fwiw html spec properties pretty clearly states value always coerced string dataset idl attribute provides convenient accessors data attributes element getting dataset idl attribute must return domstringmap object relevant part domstringmap set value new existing named property name value value algorithm setting names certain values must run passing name name result converting value domstring value illustrate would jquery know value string legacy octal literal jquery always returns string developer whatever want", "d": "3/2015"}, {"body": "thank opening issue agree according docs work rare edge case may worth fix use case brought discovering behavior created test case", "d": "3/2015"}, {"body": "second nt valid json formfeed f nt allowed want escape double backslashes", "d": "3/2015"}, {"body": "duh thinking already escaped dave right nt think things", "d": "3/2015"}, {"body": "encounters problem processes file paths windows wonder normal behaviour understanded thank much", "d": "3/2015"}, {"body": "dmethvin leaning towards beta know use case would make catastrophic", "d": "3/2015"}, {"body": "seems like returning good idea although knows break wild way find change continue return empty jquery collections tho", "d": "3/2015"}, {"body": "continue return undefined empty jquery collections tho thanks reminded create", "d": "3/2015"}, {"body": "seems like returning null good idea although knows break wild course answer turns jquery ui working updates right", "d": "3/2015"}, {"body": "team decided revert due breakages ui mobile", "d": "3/2015"}, {"body": "thank opening issue adding additional selector extensions core", "d": "3/2015"}, {"body": "tried introducing option jqueryajax function named authbyheader set true would cause jqueryajax set authorization header basic username password working fine tested functionality well local machine would great mods could look", "d": "3/2015"}, {"body": "anshuxlr link feature code message please", "d": "3/2015"}, {"body": "madlittlemods link commit", "d": "3/2015"}, {"body": "according guard browsers longer support sounds good", "d": "3/2015"}, {"body": "nt seem jquery core action items dmethvin could open api issue suggested clarification quite sure mind", "d": "3/2015"}, {"body": "issue longer necessary several runs since keeping eyes swarm failures times keep reminder meeting minutes wo nt release got green thanks", "d": "3/2015"}, {"body": "giant since promises nt based prototype much easier supported internally rather something like wrap constructor decorate returned promise", "d": "3/2015"}, {"body": "originally going write angry rant dismissed facts form lt object stars stars stack overflow question upvotes years ago google results jquery serialize quickly shows serialize object turning form data json common practice opposite nt uncommon though generally reserved parsing current search query populating search form form lt querystring jquery function however function luckilly plugins debatable serialize would even jquery core ca nt shift something back querystring lt json object turning serialized string object back done numerous libraries qs brought walmart labs simply put querystring node core jquery implements object querystring luckilly plugins querystring object jquery care jquery mix useful wrappers avoid browser differences well make life easier animate function animations one things really made jquery popular data function store objects reference jquery still using deferred system instead bluebird done makes sense many cases forms nt part dom would right however forms important peice dom arguably important brush supporting finge usecase seems quite shortsighted", "d": "3/2015"}, {"body": "dmethvin maybe jquery size bit large however functions aretoo important us frequently used jquery official side would better offer", "d": "3/2015"}, {"body": "would argue jqueries size getting large perhaps effectscss need moved seperate repository cross browser compatability css also huge issue creating effective animation suite task would nt involve alot code however huge change likely complete wrong direction want", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "ajax need jquery internals wrapper believe wrapper course benefit code always benefit features nowadays jquery attempting lean mean internally likely tool developers however relates lot assorted inputs forms part dom believe served plugin however seen comment though still ranks high search results stackoverflow deserialize jquery people would generally prefer recreating possibly sloppy andor imperfect implementation use plugin many reasons however comes official vs unofficial unless giant library force reckoned usually simple scripts seen untrustworthyannoying end small files get basic functionality another example ends number jquery deserialize jquery want support developers recreating possibly worse wheel think point jquery crossbrowsertools would use everywhere change existing api nt believe fail see something like deserialized serializeobject nt make cut worth guys make excellent product rather praise criticize however nt enjoy line answers", "d": "3/2015"}, {"body": "basically problem calling toggle twice nt leave state permanently turned inlineblock element even animation worked around explicitly resetting element back inline animation done though", "d": "3/2015"}, {"body": "seems nt achieve intended result reopening", "d": "3/2015"}, {"body": "following code triggers dialog see", "d": "3/2015"}, {"body": "fixes landed amp really fixed time", "d": "3/2015"}, {"body": "landed includes support test workaround seems make clear docs android browser suffers issue", "d": "3/2015"}, {"body": "think replicates problem u guys look", "d": "3/2015"}, {"body": "lot code modify demonstrate problem could nt find situation jquery nt already setting target", "d": "3/2015"}, {"body": "hi found details issue small example replicates problem example found issue missing eventcurrenttarget firing events jquery handling event within gwt code nt know libraries gwt expects eventcurrenttarget set jquery sends different event object depending type handler jquery handler eventcureenttarget present native handler eventcurrenttarget example jsfiddle demonstrates problem without gwt types handlers tested event data dumped browser console uncomment different handlers click run observe browser console changing combo box values correctly replicates problem jquery code check different behavior different handler types trigger function search comment fire handlers event path familiar jquery nt know design bug", "d": "3/2015"}, {"body": "note properties left days dom level events spec nt even mention suspect nt set event object nt originally defined case backcompat concerns example native functions chrome firefox property whether fired inside native javascript triggered via interaction control safari property cases property fired native javascript populated triggered via interaction control native cases nt set reason jquery set value event object passed browsers generally nt", "d": "3/2015"}, {"body": "agree findings jsfiddle however copied example results different properly populated tested chrome firefox ie triggering code interaction control populates seems little bit strange tested firing native events chrome console gwt application internally gwt uses properties setting handlers works expected seems jquery populate case native handlers nt know properties deprecated beleive covered well", "d": "3/2015"}, {"body": "waiting sizzle update right btw need get issue changelog timmywil seems mentioned anywhere fixed commit messages add commit importing latests sizzle", "d": "3/2015"}, {"body": "yea update sizzle commit include pertinent sizzle issues", "d": "3/2015"}, {"body": "woohoo expect release", "d": "3/2015"}, {"body": "already git builds compat formerly formerly betas following resolution blockers soon since biggest", "d": "3/2015"}, {"body": "awesome thanks ton", "d": "3/2015"}, {"body": "please ping gon na update sizzle", "d": "3/2015"}, {"body": "tomchentw could check works submitted pr patch", "d": "3/2015"}]