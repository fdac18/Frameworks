[{"title": "navigate space url triggers route even trigger false firefox", "body": "consider example javascript function var approuter backbonerouterextend windowapp new approuter backbonehistorystart log home route null proceed log click every click click make one small modification add space url navigate try find home route also start logged counter reset two every three clicks release testing latest firefox issue chrome could chrome maybe something encode spaces url sure though realize space character url first place behavior odd least documented ie navigate may behave expected urls containing spaces unsafe characters sure easy fix hope least documenting bug save developers time trying hunt", "num": "3399", "d": "11/2014"}, {"title": "backbone router route route events heard page render", "body": "scenario user hits url backbone route like something home route function called immediately construction router also get fired immediately construction router problem object properly subscribe two events page render user first went root url like went hashchange fired route events fired well objects system ability subscribe little code sample exposes mentioning nt make sense try explain better gist backbone wait fire events preferably next event loop cycle", "num": "3398", "d": "11/2014"}, {"title": "adding jscs", "body": "interest adding jscs help check inconsistencies backbone style", "num": "3393", "d": "11/2014"}, {"title": "backboneview submit events firing click events instead", "body": "based limited knowledge backbone seems unable add click events submit buttons also submit event", "num": "3392", "d": "11/2014"}, {"title": "backbonehistorynavigate strips slash", "body": "root set navigate see especially", "num": "3391", "d": "11/2014"}, {"title": "collection set uses unparsed attribute id determine uniqueness", "body": "due limitations backend api working model class whose id attribute generated method simply moving nested attribute top level fetching collection may contain models already exist collection normal circumstances set would expect models id merged together however work id attribute present unparsed json data see following code collection set l modelslength lt l attrs models attrs instanceof model id model attrs else id attrs targetmodelprototypeidattribute id duplicate found prevent added optionally merge existing model existing thisget id workaround mind override collection class although work fine feels bit unclean requires code duplication would consider moving parsing stage id check branches execution eventually parse model", "num": "3390", "d": "11/2014"}, {"title": "nickpjasongithubio tab opening everytime open firefox", "body": "hello today got home university opened firefox browser loaded homepage another tab opened web address keeps asking download install youtube video downloader extension want opens everytime open new window firefox anyway get rid thought would ask github way get rid asking firefox help forums", "num": "3389", "d": "11/2014"}, {"title": "unmatched filesystem mksquashfs", "body": "filesystem squashfs filesystem big endian version debian using unsquashfs firmwaremodkit using mksquashfs regenerate filesyatem find completely different filesystem unsqushfs mksquashfs", "num": "3387", "d": "11/2014"}, {"title": "backbonemodelsave problem large json", "body": "model trying save one nested array object objects schedule children anything beyond object array makes problem express server take seconds realize happened nt get model data nested children array works fine suggestion break json parts stream browser", "num": "3385", "d": "11/2014"}, {"title": "wraperror function overrides emptiness error callback", "body": "ajaxprefilter function watch global ajax errors show user catch error request globally ca nt know whether customset ca nt event match source function tostring ca nt get native wraperror function gon na get global error warning going like unexpected error standart errors know occur want save action get standart error like bad request show modal dialog user nt want set callback save fetch error", "num": "3382", "d": "11/2014"}, {"title": "doc page displayed incorrectly", "body": "displayed correctly due unescaped tag", "num": "3379", "d": "11/2014"}, {"title": "communicate modelcollectionviewetc type browser dev tools", "body": "see debuggerconsole child nt exactly help debugging robust something like possibilities could possibly part backbone core day", "num": "3377", "d": "11/2014"}, {"title": "documentfragment instead creareelement", "body": "create documentfragment instead default div element property el set think would usefull views uses templates", "num": "3372", "d": "11/2014"}, {"title": "using backbone without jquery", "body": "hello wanted see would need use backbone use jquery want use famous views trying decouple jquery backbone mostly using backbone models collections though may use framework view insert famous code wanted use models collections backbone would need order run successfully without jquery thanks", "num": "3371", "d": "11/2014"}, {"title": "incoherence different sort behaviour setting models collections", "body": "let assume collection sorted attribute called words model behaviour take one collection models attribute collection resorted event triggered well explained documentation collection behaviour take collection whole call passing existing model modified indeed resort collection trigger event refer following line intended imho would better either caused resort none", "num": "3370", "d": "11/2014"}, {"title": "false triggering routernavigate", "body": "browser ff hashchange true example routernavigate route jsonstring trigger false fire callback gethash function return uri encoded json value documentlocationhref equals original fragment browsers encodes locationhref", "num": "3369", "d": "11/2014"}, {"title": "history navigate replace true working", "body": "call route called fine inserted browser history go route click browser back button called option prevent", "num": "3365", "d": "11/2014"}, {"body": "believe correct behavior changed value left see", "d": "11/2014"}, {"body": "right changed attributes stored since last change call would get messy otherwise need track revisions life model every sync say fairly easy", "d": "11/2014"}, {"body": "sorry label spam phone github nt best labels mobile", "d": "11/2014"}, {"body": "hi chaimpeck thanks reporting unfortunately able reproduce using code tried latest chrome firefox master branch release would mind posting working example gistbinfiddle take look definitely problems encodingdecoding specific characters firefox would nt doubt smiley", "d": "11/2014"}, {"body": "backwards event fired call need listen ahead time js routeron route homeroute function consolelog route homeroute heard backbonehistorystart", "d": "11/2014"}, {"body": "ah yes true let follow application ideally call", "d": "11/2014"}, {"body": "seanstrom call last load order using module system js var backbone require backbone var get require get var require var require var assets require assets backbonehistorystart maybe make sense html backbonehistorystart", "d": "11/2014"}, {"body": "hmm interesting clears thanks thejameskyle similar note know calls callback sets route", "d": "11/2014"}, {"body": "using", "d": "11/2014"}, {"body": "oh misread question looking loadurl", "d": "11/2014"}, {"body": "yup saw well amazing help thank", "d": "11/2014"}, {"body": "nope thanks asking", "d": "11/2014"}, {"body": "jashkenas would okay adding simple style guide backbone underscore contributing docs needed clean commits past conform correct style pointed megawac read bunch old pull requests write something like", "d": "11/2014"}, {"body": "sure sounds fine forewarned one reads anyway going future commits look better", "d": "11/2014"}, {"body": "backbone builds top jquery events whatever works works nothing backbone", "d": "11/2014"}, {"body": "thank response nt think jquery would problem", "d": "11/2014"}, {"body": "fml", "d": "11/2014"}, {"body": "chemoish definitely correct browser behavior click event fire submit event click event would nt fire submit event might want search event bubbling works", "d": "11/2014"}, {"body": "take look master part", "d": "11/2014"}, {"body": "yep feature want thanks jridgewell", "d": "11/2014"}, {"body": "wrong forum try github support", "d": "11/2014"}, {"body": "filesystem unsqushfs mksquashfs pray null god", "d": "11/2014"}, {"body": "nt look like backbone try mailing list irc channel questions like", "d": "11/2014"}, {"body": "issue related xhr limitation backbone modelsave many nested elements", "d": "11/2014"}, {"body": "comments please thoughts buzzy english native language almost end working day sorry inappropriate ca nt get check global error processing ajax call error callback model never empty ca nt check whether error callback equal one prefilter one backbone", "d": "11/2014"}, {"body": "looks like docco bug might try opening issue repo meantime fix hand", "d": "11/2014"}, {"body": "docco user would info notify", "d": "11/2014"}, {"body": "robust something would end backbone core day real answer time goes js runtimes get better better inferring true name js variables", "d": "11/2014"}, {"body": "backbone view defined element potentially fragment multiple elements defined fragment instead would nt make sense would nt make sense would nt make sense importantly event delegation machinery would break", "d": "11/2014"}, {"body": "see page wiki", "d": "11/2014"}, {"body": "nt help anything problems set alternative defining everything requireconfig", "d": "11/2014"}, {"body": "question issues try mailing list irc channel", "d": "11/2014"}, {"body": "yes intended", "d": "11/2014"}, {"body": "jashkenas may ask", "d": "11/2014"}, {"body": "models entering exiting collection supposed sorted proper place adds removes models collection however inside collection collection ca nt know general case model changed properties need resorted arbitrary function application type particular models sort properties change want tell collection resort appropriate time", "d": "11/2014"}, {"body": "paging braddunbar probably nt want look yet another permutation probably duplicate question", "d": "11/2014"}, {"body": "hey chilikov would mind posting working example glad take look need example work otherwise often start assumptions nt match end wasting lots time checking something describing thanks", "d": "11/2014"}, {"body": "closed test case provided", "d": "11/2014"}, {"body": "documentation states update url without creating entry browser history set replace option reason experiencing happening setting replace current history entry instead inserting new one still history way put different url updated new entries created history info replacestate", "d": "11/2014"}, {"body": "great", "d": "11/2014"}, {"body": "saying changed idattribute property setting model", "d": "11/2014"}, {"body": "set define model nt change afterwards case attribute rest api uses queries save db set field", "d": "11/2014"}, {"body": "ca nt imagine changing line isnew really anything let take look monday back computer generally speaking nt using arbitrary strings resource identifiers autoincrementing id uuid given backend much better solution", "d": "11/2014"}, {"body": "ah used set modelcollection create consider bug feel free open pr test add back sat nov pm adam kre\u0185s krebsadam gmailcom wrote ca nt imagine changing line isnew really anything let take look monday back computer generally speaking nt using arbitrary strings resource identifiers autoincrementing id uuid given backend much better solution", "d": "11/2014"}, {"body": "tinkering backbone changing changing worked changing add collection model line referenced nt effect case believe working bug implementation would always return false set anything id method nt use add new attributes model sending backend design decision could fix probably change backend recommendation although try think way backbone relying id field check model new although good practice setting id client either letting user choose id generating one based client features useful many cases", "d": "11/2014"}, {"body": "create short jsfiddle problem set setting model attributes model property right value js var model backbonemodelextend idattribute uuid var model new model uuid modelid modelhas uuid true", "d": "11/2014"}, {"body": "although good practice setting id client either letting user choose id generating one based client features useful many cases really ever good practice even check availability ahead time user trivially break things fussing around console", "d": "11/2014"}, {"body": "sorry mixed versions old implementation checking would work passing modelsave jashkenas case behind scenes everything works database generated ids referenced ids interface user rest api use memorable names instead ids queries validated server execution user wo nt able change crucial field mess system using way indicating backbone field use api queries identify true id field", "d": "11/2014"}, {"body": "memorable names field true", "d": "11/2014"}, {"body": "implementation nt work new version backbone using made code shorter cleaner slug name url field build appropriate query string frontend parser backend think help features need build next", "d": "11/2014"}, {"body": "problem see fixed nt think wokes", "d": "11/2014"}, {"body": "think confused different problem instead conversion pushstate style url hash style url", "d": "11/2014"}, {"body": "docs say otherwise create method accept either attributes hash existing unsaved model object fine nt want support docs bug needs fixed", "d": "11/2014"}, {"body": "indeed bit reduplication logic nt see harm adding line sets collection reference either sat nov collin donahueoponski lt notifications githubcom wrote docs say otherwise create method accept either attributes hash existing unsaved model object fine nt want support docs bug needs fixed reply email directly view github", "d": "11/2014"}, {"body": "made pull request resolve bindtime trigger time resolution could nt something hacky like var extend backboneevents var b extend backboneevents asomeotherhandler function arg consolelog arg call asomehandler function arg thissomeotherhandler arg alistento b event somehandler btrigger event hello gt prints hello call asomeotherhandler function arg consolelog arg call btrigger event hello gt prints hello call", "d": "11/2014"}, {"body": "thinking idea allowing strings events hash necessary since defined statically ca nt since nt object alternative really fugly must called runtime instance nt face issues get string support would nt translate well called object leaving object method defined ambiguous get support nt break parity two sets think adds minimal gain adds complexity", "d": "11/2014"}, {"body": "allowing strings events hash necessary since defined statically would consider extending feature many users already several frameworks marionette thorax already add functionality event maps since nt object get string support would nt translate well called object leaving object method defined ambiguous quite works current form grabs method whatever object going executed behavior could easily changed nt seem right js var foo function var foo function foo foo gt foo foo gt could easily changed think adds minimal gain adds complexity change simply changing signature omit changes line change total size difference chars minified also little perf difference calls using strings", "d": "11/2014"}, {"body": "would consider extending feature many users already several frameworks marionette thorax already add functionality event maps statically defined since nt really necessary listen object events hash would still need method actually binding define functionality method akin delegateevents foo foo gt foo foo gt could easily changed ambiguity exactly nt like either way someone going want opposite functionality impossible support someone trip benefit explicit", "d": "11/2014"}, {"body": "would still need method actually binding following example gave works fine people already writing methods subtly inconsistent depending library using implementation ambiguity exactly nt like still nt said ambiguous always going method given context backbone event methods already default context object called impossible support someone trip would anyone expect work like", "d": "11/2014"}, {"body": "following mean defining hash nt actually bind anything something actually call put string method conversion would leave simple pass function give responsibility translating static context instance original point still nt said ambiguous context default ambiguity hash specify means runtime point trying make expect someone want functionality especially converting", "d": "11/2014"}, {"body": "adding complexity exact thing implementation context default ambiguity hash specify means runtime point trying make expect someone want functionality especially converting sounds like think ambiguity backboneevents currently decides context callbacks new problem introduced one case stringbacked callback always look context executed", "d": "11/2014"}, {"body": "ooo reason thought threw error passed events hash obj undefined either way still make responsible translating static context instance opposite sounds like think ambiguity backboneevents currently decides context callbacks confused nothing wrong mean saying object grab stringmethod ambiguous unlike passed directly following makes one case stringbacked callback always look context executed context third param want grab executed without context event triggers everything clear current fetching calling context event triggers makes even confusing method used listener gets accepted argue functionality always make even context param", "d": "11/2014"}, {"body": "confused nothing wrong well someone nt understand going called case also nt going understand would pulled nt anymore ambiguous gets accepted argue functionality always make even context param okay trying get stuckouttonguewinkingeye wondering would make sense could go either way similar implementation", "d": "11/2014"}, {"body": "think still getting issue even though adding outter scope separate scope marionette redefining scope would property defined", "d": "11/2014"}, {"body": "jisaacks scope would nt issue share common modules across files setting requiring marionette make available marionette check marionette depends version backbone app specific reason include call would make non issue agree behavior short time wrap jquery require dropped support browserify users personally like see brought back much rather support common case attempting load jquery commonjs count build tool allow exclusion option like browserify webpack rjs shim", "d": "11/2014"}, {"body": "scope would nt issue require share common modules across files setting backbone requiring marionette make available marionette thanks info helped agree behavior short time wrap jquery require trycatch right think downside strict requirements", "d": "11/2014"}, {"body": "treating jquery like dependencies current sudodependency approach causes significantly problems solves", "d": "11/2014"}, {"body": "indeed dgbeck origin problem jquery real dep makes everything gothchas plenty already said issue numerous issues", "d": "11/2014"}, {"body": "hi proof concept tried implement objectobserve first changed backbone build change object objectobserve callback extracted observe function iterates changes triggers appropriate change events finally registered objectobserve method called used previous observe function callback three implemented dedicated commits see browser without objectobserve test suite green everything seems ok browser objectobserve got one test failed try set object equal different instance objectobserve sees change triggers change event nt know fix efficiently without checking object equality suggestions think implementation thanks", "d": "11/2014"}, {"body": "passing order would think fire order changed think real problem order changing still fires nt agree problem firing instead removing maybe something like would better would fire changes fire nothing changed", "d": "11/2014"}, {"body": "fixed", "d": "11/2014"}, {"body": "closing favor", "d": "11/2014"}, {"body": "yeah retrospect wish stood ground one like revert add note wiki page", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "foxytasks use simple override change backbone behavior desired using override changes made set stored changedattrubtes save record fetched set default behavior add forgetchanges true option key value key value style arguments typeof key object attrs key options val else attrs key val options options silent optionssilent", "d": "11/2014"}, {"body": "bruth plan continue work implementing applying patches backbonemodel", "d": "11/2014"}, {"body": "skotchio simply using also mentioned granularity patch may applicationspecific one realizes think simple enough override generate patch set appropriately option passed", "d": "11/2014"}, {"body": "found little difficult implementing ajax queue backbone method generated save ie overriding queue requests would still issue two posts eg expected anybody found solution problem", "d": "11/2014"}, {"body": "richardscarrott use", "d": "11/2014"}, {"body": "philfreo gist would mean model set previous requests complete makes sense queue would handled sync models amp collections therefore views get job leaving sync worry persisting data background almost easily done nt fact sync method create update etc evaluated immediately", "d": "11/2014"}, {"body": "anybody interested managed solve problem optimisitcally setting models id parsing server generated id also meant queue could handled jquery level giving utility", "d": "11/2014"}]