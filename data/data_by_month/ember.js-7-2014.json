[{"title": "error transitionto running tests", "body": "upgraded regression one unit tests test controller send action action handler calls call generating following stack please note happening running tests happen running application also causing tests fail", "num": "5291", "d": "7/2014"}, {"title": "sendaction test component working", "body": "may duplicate closed tl dr specifying action method nt work however action placed calling works need specify action send want pass parameters along action", "num": "5287", "d": "7/2014"}, {"title": "embercollectionview ui content upate controllers property volatile", "body": "come issue using embercollectionview volatile property controller current setup objectcontroller collectionview currently basically filters attributes based couple rules addremove attributes method controller triggers verified collection view object controllers ui collection view nt rerender sure however notice remove setting everything works perfectly runs need use since allow users update attributes nt cached otherwise could see older version attribute another thing nested object filteredattributes method basically takes hash transforms going post stackoverflow thought would appropriate place given unexpected behavior either way help would greatly appreciated since banged head wall hours", "num": "5284", "d": "7/2014"}, {"title": "routeargs undefined", "body": "app running ember canary today wanted upgrade latest betacanary release got error look routeargs property using ember animated outlet kind outdated worked fine since new ember release problem comes line var ret get linkview routeargs slice get linkview routeargs returns undefined anybody help one", "num": "5283", "d": "7/2014"}, {"title": "regression controller else", "body": "seems regression using falsy value controller shows else block shows main block", "num": "5282", "d": "7/2014"}, {"title": "testing promise resolution", "body": "trying write test action handler one components stubbing method one models return resolved promise using component chain promise using pattern use lot serverside use promise library however clientside never end inside function block assert functionality unit tests anyone provide insight best way", "num": "5280", "d": "7/2014"}, {"title": "feature queryparams boolean default value set true", "body": "edited existing jsbin shows example boolean values changed variable default value see demo click links show hide routers model hook always set default value working intended ember version", "num": "5275", "d": "7/2014"}, {"title": "feature queryparams removing queryparams links explicitly", "body": "good work queryparams beta works well app except one thing ca nt figure queryparam set link links bare route without queryparams query params appended automatically ie results route hash ok great question generate queryparamless urls param set earlier transition tried leads course work around like prefer clean url btw tried hash historybased routing strategies summarizing way clear queryparams explicitly helper would frameworkprescribed way solving problem", "num": "5274", "d": "7/2014"}, {"title": "cleanup arraycomputed", "body": "nt replace items place property changes consider compound dependent keys", "num": "5268", "d": "7/2014"}, {"title": "cleanuprefactor collectionview arraycontroller", "body": "two things pretty tightly coupled may want split collectionview work itemcontroller able sort arraycontroller computed property itemcontroller", "num": "5267", "d": "7/2014"}, {"title": "cleanuprefactor container", "body": "non singleton injections treated singleton x child containers nt clobber resolver delegation presume extend ember extend", "num": "5266", "d": "7/2014"}, {"title": "triggerevent helper possibly broken using keypress", "body": "following get empty array args triggerevent helper resulting failed element lookup possible something incorrectly else help debug issue latest build thanks running great oss project", "num": "5265", "d": "7/2014"}, {"title": "improverefactor outlets view creation", "body": "get polluted template rendered named template able use outlet support rendering outlet created template render transition static segment dynamic clean content avoid unnecessary view reinstantiation changing model", "num": "5264", "d": "7/2014"}, {"title": "refactor object model", "body": "mixinprototypereopen call didapply x emberrequired work extend", "num": "5263", "d": "7/2014"}, {"title": "refactor controllers", "body": "resolve issues", "num": "5262", "d": "7/2014"}, {"title": "refactor view layer", "body": "resolve issues allow application view receive multiple rerenders examine classname reset issues", "num": "5261", "d": "7/2014"}, {"title": "deprecate slash namespace", "body": "currently slash lookups used namespaces deprecating next release deprecate subsequent release remove code", "num": "5260", "d": "7/2014"}, {"title": "new ember select", "body": "existing emberselect many known issues eventual plan create new simpler version deprecate old one rwjblue preliminary work", "num": "5259", "d": "7/2014"}, {"title": "nested async test helpers fire correct order", "body": "affects fixed acceptance test async test helpers nested test helpers run proper order example visit andthen function fillin inputfirst something fillin inputsecond something else click button andthen function fillin inputfirst happened fillin inputsecond happened click button happened yet example jsbin", "num": "5251", "d": "7/2014"}, {"title": "node undefined", "body": "added polyfil ensure older firefox versions break check unfortunately introduced regression specific failing line", "num": "5250", "d": "7/2014"}, {"title": "registerboundhelper bound options working expected", "body": "example jsbin working emberjsemberjs trying make inputhelper work bound helper process run two issues returning bound value expecting based documentation bound helper reevaluated options see jsbin format seems work according documentation quoteless version also work sure related", "num": "5245", "d": "7/2014"}, {"title": "access computed properties itemcontroller sorting multiple times", "body": "trying combine sorting filtering array controller works beginning keep changing sortproperties template fails render cp item controller failing bin click sort button multiple times template stops showing computed properties item controller already asked link multiple work arounds get working listed answers comments feel work works ok beginning sure related tried debug ember computed code league", "num": "5239", "d": "7/2014"}, {"title": "invalid state rootdeleted", "body": "apparently ember allow invalidate delete request returns default message deletion allowed embers raises since object error ca nt retrieve error message try delete get right error response server error messages returned", "num": "5234", "d": "7/2014"}, {"title": "addmetamorphcheck defensive", "body": "function coded defensively running scenario documentgetelementbyid returning null parentnode calls throwing read property parentnode null", "num": "5233", "d": "7/2014"}, {"title": "enhancement relax selection property inside emselect", "body": "scenario instance array want display element via object instance property object absolutely needs element array enforced comparison object elements array instead would way specify long ids object match good go ids could convention maybe would way override different property see jsbin example talking exactly pull request something develop one suppose", "num": "5231", "d": "7/2014"}, {"title": "incorporate morph emberjs", "body": "part ongoing effort ensure whole emberjs ecosystem internally migrating several microlibs included repositories put pipeline brocfile next list however written rwjblue discussed library brought updated accordingly wanted keep track", "num": "5227", "d": "7/2014"}, {"title": "create polymorphic record bug", "body": "asked question think think bug emberdata create record polymorphic relationship assertion barfs saying wrong type however use prod version emberdata nt assertion test code creates record fine sets id type correctly perhaps assertion test wrong nt allow polymorphism anyway jsbins question show believe correctly maybe proper way create polymorphic record searched high low found good documentation thanks advance bfcoder", "num": "5218", "d": "7/2014"}, {"title": "expose lookup application instance", "body": "think legitimate use cases would want get reference singleton container via application instance example increase performance want send initial json payload client code however distributed service environment frontend web server makes n concurrent calls backend services nt want block instead want stream base page using chucked encoding keep socket open requests resolved stream browser something like appcontainerlookup store main push someresource id title foo appcontainerlookup store main push id title foo appcontainerlookup store main push id title foo backend calls resolve streamed client frontend web server packet format knows push records store options would add unique identifiers script tags polling services pushed records store seems kind hacky technique known big pipe comes facebook however built similar systems past deal aggregating ui ssr applications tl dr like forced use api never touch allow us populate data store streamed base page", "num": "5213", "d": "7/2014"}, {"title": "query params replace seems broken", "body": "fiddle would expect replace true would cause history entries click change button expectation incorrect something wrong actually broken", "num": "5211", "d": "7/2014"}, {"title": "cleanup eager urls abort", "body": "eager url updates nice everything manages abort transition runloop aborts amp transitions happen subsequent run loops case leave application broken state abort case end url nt reflect real current state next time user hits back button nothing happens redirect case break back button leaving intermediate state user history often redirect back discussed machty agreed would good work likely router keep track eager url pushes unwind similar abort happens", "num": "5210", "d": "7/2014"}, {"title": "component actions thissendaction default behavior", "body": "say component three actions internal functionality seems pretty redundant specify action hash component like reason ca nt default action nt specify custom handler", "num": "5209", "d": "7/2014"}, {"title": "transitionretry captures previous router state transition aborted", "body": "transitionretry seem always working example one follows links sequentially finally clicks button transitionretry url reflects product undefined", "num": "5208", "d": "7/2014"}, {"title": "ember select select option", "body": "view emberselect contentindustries valueindustryid optionvaluepath contentid optionlabelpath contentname configuration export default emberrouteextend setupcontroller function controller model thissuper controller model var borrowinglimits ember getjson function items itemsforeach function item borrowinglimitspushobject id itemid description itemdescription model function params var return ember getjson geturl model renders industryid selected values id fix problem", "num": "5206", "d": "7/2014"}, {"title": "accessing controllers within component", "body": "within component programmatically creating new view want specify controller view using seem work directly looking controller using works feels wrong passing reference controller component surrounding template works also feels wrong correct pattern creating viewsassigning controllers within component", "num": "5204", "d": "7/2014"}, {"title": "possible super bug", "body": "essentially new super wrapper requires methods called scope object housing method sure bug intentional worked pre appfooroute emrouteextend blah function alert foo appindexroute appfoorouteextend blah function alert index model function var blah thisblah blah return red yellow blue super simple example showing problem working", "num": "5198", "d": "7/2014"}, {"title": "meta missing aliasedproperty", "body": "upgraded got error thrown emberdata value passed aliasedproperty nt meta function run never see aliasedproperty come ever see computedproperty", "num": "5184", "d": "7/2014"}, {"title": "mergedproperties unexpected deleting behavior", "body": "see jsbin seems nt specify property object marked mergedproperty never gets passed basically deleted set", "num": "5182", "d": "7/2014"}, {"title": "computed leaks observers", "body": "using computed problem observers removed example test within console fast noticeably slower unchanged", "num": "5181", "d": "7/2014"}, {"title": "helper subexpression within component causes component render incorrectly", "body": "helper component renders fine add helper subexpression resulting html gets borked tested canary resulted issue edit also issue", "num": "5180", "d": "7/2014"}, {"title": "findbyid", "body": "ca nt seem find documentation storefindbyid search ember site shows search actual info thanks", "num": "5176", "d": "7/2014"}, {"title": "ability define itemcontroller inline", "body": "opening discussion currently define inline like would nice able thing itemcontrollers like broader note seem like natural fit think makes sense unify api use semantics define looking feedback attempt implement", "num": "5174", "d": "7/2014"}, {"title": "metalviews master childviewsproperty replace nt special case containerview", "body": "insted merely defer replace backing view object also fixes cycle stuff", "num": "5173", "d": "7/2014"}, {"title": "input two way binding via bindattr", "body": "seems provide one way binding value updated model property updated ps helper input valuepropertyname works see", "num": "5172", "d": "7/2014"}, {"title": "high order function property manipulation", "body": "would nice function update property without using pair often find writing code like javascript foo objget foo something newfoo something else objset foo newfoo getting value property modifying way setting back examples ember would action updating property easily abstracted high order function simply little benefit javascript due verbosity anonymous functions coffescript nicer tiny example love versus features find nice variant less vars property name string vote used harder make typo obvious value updated ie wo nt return less typing implicit scope defined pair made explicit", "num": "5171", "d": "7/2014"}, {"title": "unit tests emberdata models", "body": "create new model unit test property model already set right way reset write unit tests verify property updated correctly controllers modify models", "num": "5170", "d": "7/2014"}, {"title": "qp uses global json object nt old browser safe", "body": "likely drop replacement usecase cc machty unfortunately might challenging another approach likely good practice going forward maybe prepare compatibility shim instead one includes", "num": "5169", "d": "7/2014"}, {"title": "set readonly property upgrading canary", "body": "upgrading canary version ember morning receive following error currently something like filters null filters computedbinding function key value argumentslength gt thisset filters value null value null filterconditions computedreads filters segmentnames function return thisdecodeconditions thisget filters aliased like computedbinding emcomputed computedreads function var args args lt argumentslength slicecall arguments return emcomputedapply em args readonly stacktrace help would awesome thanks advance", "num": "5168", "d": "7/2014"}, {"title": "feature queryparams regression beta routerhandlerinfoshandlerreset set true", "body": "extending custom object property causes transitions route break throwing typeerror jsbin example list handlerinfos run outputs function isexiting transition error gets thrown routerjs seems happen extending route reset set true put inside normal cause happen happen master happen beta canary metal views nt tested others", "num": "5167", "d": "7/2014"}, {"title": "detect warn goofy use", "body": "came across desk today meant silently failing confusing", "num": "5163", "d": "7/2014"}, {"title": "query params test failures", "body": "basic issue comparing object one without comparison fails spoke machty chat think easiest thing create custom use", "num": "5158", "d": "7/2014"}, {"title": "view gets recreated model updated", "body": "rails backend returns updated model json put change dsmodel save ember view belongs model eg userview user model gets destroyed recreated sure correct behavior causes trouble use animation didinsertelement view supposed run however runs whenever model changes content returned server instead updated model json everything works expected opened issue emberdata since sure belongs", "num": "5157", "d": "7/2014"}, {"title": "actions fired within yield fired containing component", "body": "using construction action fired within template included component used work previous version ember using ie action correctly intercepted containing component however since moving version nt work anymore shown jsbin sure way using intended behavior bug someone clarify", "num": "5155", "d": "7/2014"}, {"title": "dsstoreupdate updating bindings route model object dsstore", "body": "model bunch properties would like update json returned server however two similar methods giving different results method controllerstoreupdate form data var formcontrollerstoregetbyid form dataformid formsetproperties dataform relationship route model store initialized model hook expected behavior update", "num": "5152", "d": "7/2014"}, {"title": "regression error template render", "body": "entering route throws exception error state transitioned template never gets rendered assume related changes exception gets thrown console intended change restore old behavior error message shows nothing gets rendered", "num": "5148", "d": "7/2014"}, {"title": "feature queryparams updating property number string caused property become nan", "body": "query param bound property value number try update value string gets nan see demo", "num": "5145", "d": "7/2014"}, {"title": "unexpected behavior loop", "body": "sure bug seems deliberate behavior confusing template something like using arraycontroller itemcontroller defined works fine however try use argument action action function bare model access controller made jsbin illustrate found workaround also jsbin using viewcontentindex objectat seems hacky like said seems intentional else would transform expect access controller better way", "num": "5144", "d": "7/2014"}, {"title": "createelement nt call didinsertelement", "body": "hi create view manually call createelement didinsertelement nt called view however read documentation", "num": "5143", "d": "7/2014"}, {"title": "rsvphash resolves without content", "body": "using rsvphash promise resolves without data object passed function example hashsession undefined thus appsession undefined code works perfectly browsers gt chrome tested latest canary build master", "num": "5142", "d": "7/2014"}, {"title": "model binding problem", "body": "hello trying submit model template one template like input valuebinding name required required class formcontrol id name save also one model like export default dsmodelextend name dsattr string controller export default emberobjectcontrollerextend submitaction function data windowalert submit model thisget model model function return thisstorefind companydetails done something wrong controller nt bind model nt know problem something wrong model binding u advice submit model correctly thanks", "num": "5141", "d": "7/2014"}, {"title": "query param links active root param matching", "body": "follow ember docs query params would think perfectly reasonable way write query param link would instead query param link would currently always active long current route leads strange behaviors like menus full filters active even none query params actually used demonstrated jsbin click posts see mean problem nt exist index routes", "num": "5138", "d": "7/2014"}, {"title": "add testing harness public api exports", "body": "example", "num": "5133", "d": "7/2014"}, {"title": "renderhelper use contextstring controllername", "body": "default behaviour render function specifies takes view model nt explains one parameters take build controller looking renderhelper function found next line renderjs know render template specific controller use following syntax seems hard messy model controller use related propose change line next line syntax render model controller instead getting default arrayobjectcontroller would next one", "num": "5130", "d": "7/2014"}, {"title": "read property count undefined", "body": "using emberjs version ca nt reproduce error outside app occurs first load app certain route called sets triggers triggers unfortunately nt know interpret rest stack trace full stack trace error solved issue adding check undefined around nt know right way solve issue nt understand well origin cc bugant", "num": "5129", "d": "7/2014"}, {"title": "identifier expected line", "body": "much additional information available loading ember gives following error id expected line emberjs gem embersource version beta beta still works ca nt move final nt include query params", "num": "5128", "d": "7/2014"}, {"title": "access violation emberobject", "body": "hi recently discover strange thing emberobject wanted know feature bug description problem testclass emberobjectextend propa embera props var testclasscreate var testclasscreate propa addobject props hello propa propa props hello props propa propa concat optimized kind stuff loop big risk memory leak propa propb simple example see property defined actually static property set property instance change local property using array kind value change using actually modify static property think use guard constructor copying objectlike property local property", "num": "5127", "d": "7/2014"}, {"title": "itemviewclass use model itemcontroller arraycontroller", "body": "use view helper render arraycontroller define associated view expect bound model respective currently seem case jsfiddle demonstrate imagine goal set controller context itemviewclasses itemcontroller", "num": "5125", "d": "7/2014"}, {"title": "unable call send within setupcontroller", "body": "looked documents nt see explanation cantshould nt call route action within therefore seeing expected action within route like call controller first gets setup also arbitrarily controller jsbin example works put action within controller example sure best practices put kind action", "num": "5122", "d": "7/2014"}, {"title": "routewilldestroy hook never called", "body": "using hook deprecated mention breaking change regarding changelog change history stops switch edit nvm", "num": "5113", "d": "7/2014"}, {"title": "observer regression objectproxy", "body": "looks like introduced issue observing paths objectcontrollers see using ember build merge commit full stack trace error", "num": "5112", "d": "7/2014"}, {"title": "test helper documentation incorrect", "body": "two issues documentation method must pass undocumented argument order use argument used presented second example actually set argument", "num": "5108", "d": "7/2014"}, {"title": "emberselect always expect groupedcontent", "body": "using ember inspector discovered could nt inspect emberselect viewcomponent definitly comes lines controlsselectjs lines think add line", "num": "5107", "d": "7/2014"}, {"title": "bug linkto unwrapping get content model", "body": "although confusing believe internally content consumption", "num": "5105", "d": "7/2014"}, {"title": "helpers refer parent context like parent render block using parent context", "body": "expected behavior would always contents block rendered using surrounding context renders correctly using raw handlebars seems ember specific problem two bins demonstrating issue ember handlebars", "num": "5103", "d": "7/2014"}, {"title": "queryparamsnew property concatenated default", "body": "tl dr think property controllers default listed default makes inflexible behavior valid use cases instance controller base class defines listing behavior sorting filtering etc used many routes using query parameters controllers extending base class independent specify query parameter names base controller rather specifying times cases nested routes controllers share functionality case would like functionality controllers yet rename query parameters nested controller order avoid name clashes since query parameters concatenated actually get rid query parameters base class resort hacks beta however code tried seems calling controller property directly rather computed property longer works thus currently see way leave defaults altogether would bad dryness code see reason query parameters concatenated property default probably equal use cases enabling easy disabling next impossible requires sorts nasty workarounds", "num": "5102", "d": "7/2014"}, {"title": "bindattr loses static set classes", "body": "see static value bound attribute setting bound attribute static value lose value jsbin see set class lost encountered use case cms end user type bootstrap class clear input type see fail maybe handlebars issue", "num": "5101", "d": "7/2014"}, {"title": "cp based childviews nt fire changes", "body": "trying make composeable form component returns valid child inputs valid simplified jsbin trying even though entering string gt length makes inputs valid parent view nt recompute", "num": "5100", "d": "7/2014"}, {"title": "setupcontroller renamed setupcontroller", "body": "routejs ought named setup setup noun set verb current name suggests setup controller rather set controller also deprecated thing applies would made pull request thought might trivial change deprecations etc", "num": "5099", "d": "7/2014"}, {"title": "multiple ember apps page ca nt observe changes one another", "body": "background multiple autonomous teams working ember applications eventually need allow dockingundocking parent application sub applications need shareable urls location handler implemented using emberlocalstoragelocation jsfiddle linked would expect application template parent application access child application controllers would automatically update child applications change paths realize common use case according brief discussion ebryn ought work nt", "num": "5098", "d": "7/2014"}, {"title": "normalize lookup behavior constants templates", "body": "currently templates resolve variables considered constants nonuniform fashion expect references behave identically", "num": "5097", "d": "7/2014"}, {"title": "emberjscom getting started tutorial crashes jsbin", "body": "getting started online tutorial works fine reaches step entitled transitioning show incomplete todos point tutorial jsbin display goes blank whenever click one implemented filter buttons populated incrementally tutorial active completed problem less severe computer follow along display persists new item entry field shown footer shown body items shown", "num": "5096", "d": "7/2014"}, {"title": "run emberjs nodejs environment", "body": "", "num": "5095", "d": "7/2014"}, {"body": "supported behavior", "d": "7/2014"}, {"body": "could elaborate supported behavior example provided totally makes sense promise asynchronous thing use case valid work around situation find resources google missed something docs anything would happy could point", "d": "7/2014"}, {"body": "swapping promise promise created currently supported behavior plan remove promise proxy entirely make promises bindable", "d": "7/2014"}, {"body": "ok write meant swapping supported missing docs setter must assert got called understand motivation latter promiseproxies dropped anyways could least explicitly stated docs swap promise idea subclass mixin object property would used promiseproxy right like would swap promise along content promise nt matter still fulfills least content think still important promise cancelledcan cancelled whenever needed anymore eg got swapped consider app needs one one long running task could replaced another long running tasks user decides several times tasks stopped could performance issue sure maybe even covered planned changes", "d": "7/2014"}, {"body": "ohcibi promises nt currently support cancelation added specs unclear ever welcome pr updates docs adds assert reason supporting promise proxies interim hack correct solution bind raw promises unfortunately hotswapping also wont work scenario adding introduces something wont able support wen proxies dropped likely correct solution introducing intermediate promise settles final promise choose settles", "d": "7/2014"}, {"body": "jefflage provide steps reproduce isolation", "d": "7/2014"}, {"body": "jsbin shows working properly closing happy reopen reproduction feel free tweak jsbin", "d": "7/2014"}, {"body": "btw fixed issue method functionality extracted method two methods call volatile v nonvolatile nt ideal gets need moment", "d": "7/2014"}, {"body": "provide demo jsbin issue ember core ember animated outlet", "d": "7/2014"}, {"body": "issue definitely ember core since ember animated outlet working previous canary build probably related new feature thought maybe someone could pinpoint easily nt think able build jsbin demo one full function called animated outlet function args linkview router route var ret get linkview routeargs slice animations linkviewparametersanimations retsplice animations return ret example linkto trigger transition linktoanimated index animations main slidedown link linktoanimated clearly animated outlet parse linkto animations attributes via routeargs property since new beta release clear enough thanks", "d": "7/2014"}, {"body": "also worth mentioning currently documented officially supported probably useful smile", "d": "7/2014"}, {"body": "clearly due refactoring think tests use else look bit", "d": "7/2014"}, {"body": "aware ever supported", "d": "7/2014"}, {"body": "seems like may want support parallel support handlebars", "d": "7/2014"}, {"body": "super urgent pretty easily work around see version much nicer smile", "d": "7/2014"}, {"body": "version ember", "d": "7/2014"}, {"body": "jul pm stefan penner notifications githubcom wrote version ember reply email directly view github", "d": "7/2014"}, {"body": "suspect causing autorun bug version rsvp eats errors autorun since fixed believe fixes fault apologies", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "bug fixed master andi believe", "d": "7/2014"}, {"body": "updated still getting getting new errors", "d": "7/2014"}, {"body": "please provide isolated example reproduces problem maybe fix nt branches", "d": "7/2014"}, {"body": "actually error part working thanks help", "d": "7/2014"}, {"body": "fwiw following beforeeach make stable javascript emrun function slots set selected false slots set selected true", "d": "7/2014"}, {"body": "jefflage fyi promises fulfilled end runloop use actions queue async unless using foriegn async actually truely async", "d": "7/2014"}, {"body": "written one way solving create controller action resets query param properties still might use cases resetting query params within example global navigation items always link paramless route", "d": "7/2014"}, {"body": "lfridael queryparams logic stores compares provided value original value set controller prototype remove qp eg", "d": "7/2014"}, {"body": "bradleypriest thx hint needed however using default working use empty string get comparison work ie update clear using empty string default property value removes query params generated url solves problem", "d": "7/2014"}, {"body": "probably nearly enough tests around test helpers work today unless feel like get first", "d": "7/2014"}, {"body": "rush wanted make sure following docs expected", "d": "7/2014"}, {"body": "messed", "d": "7/2014"}, {"body": "toranb give try think covers many different possible argument signatures", "d": "7/2014"}, {"body": "closing", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "start deprecation process tonight rwjblue free pair tonight", "d": "7/2014"}, {"body": "thank", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "prior invoking local helper functions directly instead using ones injected unfortunately meant get chaining expected see closing solved issue thank opening submitting pr confirm regressions", "d": "7/2014"}, {"body": "trek ideas changes reverted handle scenarios old ff old ie", "d": "7/2014"}, {"body": "hjdivad look wanted know bug", "d": "7/2014"}, {"body": "sounds like emberdata thing ember proper", "d": "7/2014"}, {"body": "sorry really ember data move", "d": "7/2014"}, {"body": "good point look forward reviewing pr fixing", "d": "7/2014"}, {"body": "wow exactly need", "d": "7/2014"}, {"body": "theory comparable mixin could help idea provide keypath id tell detect equality", "d": "7/2014"}, {"body": "thinking something like keypath id would id convention nt specify nt want unless think makes sense stick true default comparable mixin point docs", "d": "7/2014"}, {"body": "ca nt change default behavior keypath would opt mixin", "d": "7/2014"}, {"body": "keypath sounds good want take stab producing pr", "d": "7/2014"}, {"body": "kalmanh yes", "d": "7/2014"}, {"body": "real blocker rebase current master metalviews branch cc mixonic allow us pin morph sha done pr referenced", "d": "7/2014"}, {"body": "emberdata repo issue reopened", "d": "7/2014"}, {"body": "confirm bug assertion happens using used ember cli assertion assuming containerlookupfactory model foo import foo appmodelsfoo", "d": "7/2014"}, {"body": "krisselden still ember data issue ember jj abrahms resolver", "d": "7/2014"}, {"body": "container resolve check work", "d": "7/2014"}, {"body": "stefanpenner linked gmail nt notice nt ember data repo", "d": "7/2014"}, {"body": "exist ordering entity instantiation somewhat complicated deferring di framework guaranteed entities instantiated correct order correct dependencies secondly app considered godobject internal coupling abstracted container explicitly private reason wish accomplish great solution would create collaborator store provided injection collaborator would also aware outside world subscription various data sources first easily pick data known location secondly also subscribe sidechannel mechanisms loading web socket", "d": "7/2014"}, {"body": "continue discussion explicit design decision bug closing", "d": "7/2014"}, {"body": "idea approach get everything initial request keep socket open experiments seen extremely high latency times asia establish connection websockets forces secondary handshake client would subject latency initial connection like idea collaborator could use pubsub like pattern know new data flushed page transport mechanism could something like bigpipetrigger loaded someresource id title foo bigpipetrigger loaded id title foo bigpipetrigger loaded id title foo thanks stefanpenner", "d": "7/2014"}, {"body": "chadhietala keep us posted progress imagine many community members like hear somewhat related thinking adding", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "course soon post realize config route controller", "d": "7/2014"}, {"body": "agree issue seeing even hook route url reflects page would gone transition nt aborted", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "also happy submit pr implement functionality chance accepted", "d": "7/2014"}, {"body": "thank great suggestion bubbling actions deep component hierarchies indeed require annoying amount boilerplate something run apps however latest core team meeting discussed one things trips new developers implicitness magic data flow general like start moving towards explicitness less problem address perhaps adding syntactic sugar proxying actions upwards fact could probably pretty easily today computed property macros nt think anyone core team favor adding implicit data flow", "d": "7/2014"}, {"body": "closed issue purely housekeeping nt interpret shutting discussion please feel free continue discussion file new issue proposed explicit syntax take discussion thanks", "d": "7/2014"}, {"body": "worries undertand ref", "d": "7/2014"}, {"body": "pushobject name property either reopen stack overflow gets visibility prefer use issue tracker bugs features thanks", "d": "7/2014"}, {"body": "name problem cut different part code already stackovetflow still nt solution think important problem", "d": "7/2014"}, {"body": "reproduce jsbin easiest way us help debug see bug ember", "d": "7/2014"}, {"body": "simple select know selected value test id test", "d": "7/2014"}, {"body": "fivetanley real app code works api", "d": "7/2014"}, {"body": "nininea sample jsbin returning array model hook causes issue working bin agree current issues especially asynchronous content remember rwjblue posted developing version new ember select emselect issues github", "d": "7/2014"}, {"body": "selvagsz thanks answer fix yet emselet binding value content loaded asynchronously", "d": "7/2014"}, {"body": "nininea could see emselect async issue workaround use jsbin", "d": "7/2014"}, {"body": "selvagsz thanks", "d": "7/2014"}, {"body": "directly looking controller using appcontainerlookup controller xxxx works feels wrong nt using use instead number fine number preferred number preferred decoupling controllercomponent although passing data sending actions help assigning controller view component", "d": "7/2014"}, {"body": "generally treat component like wrapper encapsulates series lowerlevel views something controlleddefined public api within component may render views case based data iterated want use view want views get controllers type x type", "d": "7/2014"}, {"body": "jefflage provide example jsbin emberjsjsbincom description something goes ember conventions maybe sounds like using named outlets nested routes", "d": "7/2014"}, {"body": "basically issue run strict mode accessing global considered insecure mdn say securing javascript submitted fix", "d": "7/2014"}, {"body": "unfortunately shipped missed commit added backwards compatibility cherrypicked work fine sorry inconvienience thanks taking time report", "d": "7/2014"}, {"body": "great wait", "d": "7/2014"}, {"body": "stefanpenner hjdivad thoughts", "d": "7/2014"}, {"body": "ultimatemonty need use registerhelper case improved htmlbars", "d": "7/2014"}, {"body": "mmun thanks info changed jsbin use resolved issue docs show preferred method always need used using subexpressions submit pr mention docs", "d": "7/2014"}, {"body": "ultimatemonty consider bug fixed htmlbars yes helper intended used subexpression always registered registerhelper bound", "d": "7/2014"}, {"body": "ultimatemonty mmun sure resolved using helper output jsbin displays value label whereas expecting label experiencing problem anything returned subexpression gets rendered rest wondering solution available ember handlebars also ember throws uncaught typeerror emberhandlebarshelper emberhandlebarsregisterhelper javascript import ember ember export default emberhandlebarshelper formatdate function date format format format return moment date format format", "d": "7/2014"}, {"body": "riekus use work around issue ember moves htmlbars ember hopefully resolved import ember ember export default emberhandlebarsregisterhelper formatdate function date format format format return moment date format format", "d": "7/2014"}, {"body": "ultimatemonty thanks investigation come realise problem need bound helper passing objects helper believe bound helpers subexpressions working", "d": "7/2014"}, {"body": "riekus time well ember moves using htmlbars guess good mine happens believe read somewhere ember discussion forum aiming nothing confirmed branch ember think used htmlbars integration feeing adventurous", "d": "7/2014"}, {"body": "method private probably want view ember data api docs clicking ember data link menu top left", "d": "7/2014"}, {"body": "thank seems like getbyid nt make server request nothing found findbyid seems make call exact behavior need preferred method achieve without using private findbyid thanks", "d": "7/2014"}, {"body": "want plain old returns promise see", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "gavacho sure saying know property currently accepts string tries resolve looking able define class inline like", "d": "7/2014"}, {"body": "also looking way helper seems wasteful create additional file embercli want computed property", "d": "7/2014"}, {"body": "sounds like good idea sunday july blessan mathew notifications githubcom wrote also looking way helper seems wasteful create additional file embercli want computed property reply email directly view github", "d": "7/2014"}, {"body": "chatting krisselden assertion removed entirely", "d": "7/2014"}, {"body": "quick perusal code supports oneway binding js object dom set observers object detect changes update dom reflect changes think support twobindings bindattr", "d": "7/2014"}, {"body": "personally sure find easier better wonderful thing absolutely make macro application andor distribute use others closing seems like perfect addon material", "d": "7/2014"}, {"body": "reopen issue emberdata repo", "d": "7/2014"}, {"body": "affects usage qp imho constitute breaking change features still work perfectly work simply suggest users add need support", "d": "7/2014"}, {"body": "rjackson think official file need make ember work legacy browsers good idea lets us shims way well good agenda item", "d": "7/2014"}, {"body": "sounds good could host hosted along ember assets bower repo", "d": "7/2014"}, {"body": "rjackson ya think good path forward must ensure tests run shims well self troll epically", "d": "7/2014"}, {"body": "good idea", "d": "7/2014"}, {"body": "long include shim test suite run think right way go really want objectcreate null", "d": "7/2014"}, {"body": "would shims feel like suddenly adding requirement minor release would huge gotcha many people deploying ember tricknotes could probably weigh", "d": "7/2014"}, {"body": "fivetanley maybe could anyone wants build without would included default", "d": "7/2014"}, {"body": "fivetanley thoughts still forming whole idea bear likely safest aka backwards compat route build build take shim needed review specific polyfils want move pure build really know much work certainly possible default file would build swap along instructions shim", "d": "7/2014"}, {"body": "cc mmun", "d": "7/2014"}, {"body": "alvincrespo reproduce jsbin possible would make debugging somewhat easier", "d": "7/2014"}, {"body": "alvincrespo error nt seem match setup described means readonly alias example simple property trying set either way tried reproducing bug unable could provide failing jsbin", "d": "7/2014"}, {"body": "rjackson mmun apologize providing jsbin issue ill make sure future looks like typo coffeescript caught compiler another reason move away coffeescript", "d": "7/2014"}, {"body": "worries glad got sorted", "d": "7/2014"}, {"body": "machty quick thoughts one", "d": "7/2014"}, {"body": "agree results pain sure solve component api meant absorb scenario actions listened outside world essentially becoming noop case determine difference properties nonexistent passed vs bound incorrectly hacked together playing unsure info needed good assertion would love insight diff diff git apackagesemberviewslibviewscomponentjs bpackagesemberviewslibviewscomponentjs index apackagesemberviewslibviewscomponentjs bpackagesemberviewslibviewscomponentjs import componenttemplatedeprecation emberviewsmixinscomponenttemplate import targetactionsupport emberruntimemixinstargetactionsupport import view emberviewsviewsview import descriptor embermetalproperties import get embermetalpropertyget import set embermetalpropertyset import isnone embermetalisnone var component viewextend targetactionsupport componenttemplatedeprecation isnone actionname typeof actionname string emberassert action action triggered component thistostring provided component upon initialization action found looked please ensure specified correct action template string eg instead action instanceof descriptor amp amp isnone actionname action name action could found abort actionname undefined return", "d": "7/2014"}, {"body": "trek thoughts", "d": "7/2014"}, {"body": "helper deepequal", "d": "7/2014"}, {"body": "post jsbin isolates", "d": "7/2014"}, {"body": "replicate jsbin closing", "d": "7/2014"}, {"body": "im familiar specific feature ember behavior describe bug sounds correct", "d": "7/2014"}, {"body": "stefanpenner correct desired behavior template aka thing block template always intended surrounding context component bug forced context incorrect bug fixed", "d": "7/2014"}, {"body": "ok makes sense thanks clarifying", "d": "7/2014"}, {"body": "reopen seems like ember data specific issue", "d": "7/2014"}, {"body": "looking first thought result certain continue tracking things hopefully get squared away soonish", "d": "7/2014"}, {"body": "definitely caused confirmed working pr adding new integration test confirm template works properly along fix seems like fairly big regression may justify release review rest core team", "d": "7/2014"}, {"body": "addressed", "d": "7/2014"}, {"body": "nice catch xtian", "d": "7/2014"}, {"body": "completely agreed thank xtian glad caught early reproducing jsbins perfect help track cause", "d": "7/2014"}, {"body": "haha pleasure thank fix", "d": "7/2014"}, {"body": "tracked query parameter deserialized tries cast updated query parameter type original query parameter controller case changes number string causing nan cast made", "d": "7/2014"}, {"body": "seem like bug seems like action get wrapping itemcontroller instance", "d": "7/2014"}, {"body": "seems like using action dosomething controller works sure think unwrapping intentionnal", "d": "7/2014"}, {"body": "indeed intentional action unwraps item controller", "d": "7/2014"}, {"body": "mmun yes example still defined passing", "d": "7/2014"}, {"body": "rjackson think example undefined comes itemget unsavedprop normal since unsavedprop defined itemcontroller", "d": "7/2014"}, {"body": "jskeate works similar linkto also unwraps models imo action nt need simple workaround explicitly pass relevant options", "d": "7/2014"}, {"body": "get fully reviewing jsbin thanks digging pointing missed", "d": "7/2014"}, {"body": "fact unwraps definitely intentional thought issue originally stating passing keyword action helper nt work clarified case closing", "d": "7/2014"}, {"body": "yeah guess work strange thought tried way thanks", "d": "7/2014"}, {"body": "provide example", "d": "7/2014"}, {"body": "think docs wrong didinsertelement happen view appended dom created", "d": "7/2014"}, {"body": "updated docs reflect actual behavior", "d": "7/2014"}, {"body": "nice thank", "d": "7/2014"}, {"body": "update tried ember stable recompiled feature flags enabled need query params error nt present", "d": "7/2014"}, {"body": "thanks reporting test latest beta build version based branch build includes fixes prevent things like causing issues older ie also please note using feature flag either enabled value optional value definitely supported bug fixes security fixes features pulled channels apply effectively means use branches nondefault features enabled choosing use build known bugs sure aware feel important mention", "d": "7/2014"}, {"body": "thanks rjackson try tomorrow indeed aware require query params feature support best extend try debug figure application code report accordingly possible help fix", "d": "7/2014"}, {"body": "rjackson seems newer", "d": "7/2014"}, {"body": "replicate issue latest canary tested used testing local vm please provide failing demo application feel free pr starterkit branch", "d": "7/2014"}, {"body": "michaelvdheeren may ran issue fixed please test master least preferably whatever latest commit", "d": "7/2014"}, {"body": "believe resolved closing happy reopen provided repo demonstrating failure", "d": "7/2014"}, {"body": "probably better suited stackoverflow question unless feel isolated specific bug post", "d": "7/2014"}, {"body": "trek yes questions bug give source bind model gets server", "d": "7/2014"}, {"body": "beta active class nt added", "d": "7/2014"}, {"body": "added", "d": "7/2014"}, {"body": "default selects", "d": "7/2014"}, {"body": "thanks stefanpenner issue two views controllermodel pair case need main view auxiliary view auxiliary view used different path show handle resume list model case would need aproach resume saying case seems usual cases", "d": "7/2014"}, {"body": "seems like good stackoverflow question bug feel free crosslink", "d": "7/2014"}, {"body": "bug think like improvement try", "d": "7/2014"}, {"body": "potomak", "d": "7/2014"}, {"body": "yes need investigate closely seems related", "d": "7/2014"}, {"body": "hyderali confirm duplicate unfortunately nt describe issue well seems edge case reference counting watch particular setup causing", "d": "7/2014"}, {"body": "going close duplicate", "d": "7/2014"}, {"body": "looks like misconfigured transpiler", "d": "7/2014"}, {"body": "quick fix would add build pipeline transpile occurs rjackson", "d": "7/2014"}, {"body": "fixed gem build", "d": "7/2014"}, {"body": "stefanpenner yes fivetanley working", "d": "7/2014"}, {"body": "michaelvdheeren fixed master next day include", "d": "7/2014"}, {"body": "desired behavior defining properties like methods extend time sets properties prototype means shared following article described situation pretty well", "d": "7/2014"}, {"body": "thanks clarification think could nice explanation guide probably one discovering behavior coding", "d": "7/2014"}, {"body": "issue canary", "d": "7/2014"}, {"body": "ah see resolves itemcontroller solves issue leaving open case keywords changed", "d": "7/2014"}, {"body": "stefanpenner behavior canary", "d": "7/2014"}, {"body": "ryanjm believe intentional behavior since router facelift related", "d": "7/2014"}, {"body": "seems defined unsupported behavior closing", "d": "7/2014"}, {"body": "mentioned chat suspect modelcontent duality debugging maybe reveal something else anyways good catch regression considered blocking", "d": "7/2014"}, {"body": "helps debugging changing observer works around issue", "d": "7/2014"}, {"body": "really makes think contentmodel duality internal proxy stuff still sticking content", "d": "7/2014"}, {"body": "programming hard", "d": "7/2014"}, {"body": "exact line causing issue appending content trying find contentmodel", "d": "7/2014"}, {"body": "mmun discussion krisselden observer observing something ye consumed js appindexroute emberrouteextend model function return appindexcontroller emberobjectcontrollerextend init function thissuper thisget content forcing cp become active fixes issue propdidchange function thisget foobar observes foobar", "d": "7/2014"}, {"body": "stefanpenner issue nt due observers triggered inside seems cause issue", "d": "7/2014"}, {"body": "could actually time saturday dig see fixedimprovedadjustedinvestigated guys nt nock sooner", "d": "7/2014"}, {"body": "think use different descriptor one forwards every operation target property including observation lazy semantics computed properties nt really work alias since term alias implies operation either side equivalent", "d": "7/2014"}, {"body": "krisselden oneway readonly also likley want similar semantics im unsure draw line new forwarding alias descriptor seems straight forward though im sure interesting implement", "d": "7/2014"}, {"body": "believe nt blocking release need addressed early part series beta", "d": "7/2014"}, {"body": "understood thanks clarifying stefanpenner", "d": "7/2014"}, {"body": "alias changes likely fix particular manifestation seems underlying bug reference counting watching inheriting prototype particular setup uncovering existed long time throughout releases", "d": "7/2014"}, {"body": "work around regression test underlying bug still exists krisselden explains rjackson beta need first cherrypick order", "d": "7/2014"}, {"body": "jackca would happily merge pr correcting documentation", "d": "7/2014"}, {"body": "fixed", "d": "7/2014"}, {"body": "thanks trek give updating docs next time rjackson", "d": "7/2014"}, {"body": "duplicate", "d": "7/2014"}, {"body": "sure understand could definitely understand testing new case dealing thing makes valid", "d": "7/2014"}, {"body": "happy pr fixchange like understand first", "d": "7/2014"}, {"body": "sounds like make recent code use get escape hatch think use case outweighed mixinwithquery params use case able mixin query params provide additional ones top without clobbering mixin qps", "d": "7/2014"}, {"body": "machty agree use think current default better vast majority use cases", "d": "7/2014"}, {"body": "confusing sounds like full agreement", "d": "7/2014"}, {"body": "machty lol yes completely wholeheartedly agreeing", "d": "7/2014"}, {"body": "demand nothing less", "d": "7/2014"}, {"body": "hahaha nice going guys course okay long fallback hack lt sounds nice say loud though still think easy need whereas far know impossible get rid arguably requires slightly deeper understanding want require people though understand point", "d": "7/2014"}, {"body": "ya known handlebars lacks correct context know usual htmlbars help solution", "d": "7/2014"}, {"body": "nt work upgrading", "d": "7/2014"}, {"body": "denisnazarov strings mutable get new one every time change value bindings get broken wrap object eg work", "d": "7/2014"}, {"body": "likely going change effort required changes websitedocsapicodebaseevery app existence likely outweighs benefit", "d": "7/2014"}, {"body": "stefanpenner yeah thought much another reason held pull request every app existence bit could handled deprecating sensibly see might considered worth effort", "d": "7/2014"}, {"body": "seems like pretty big change relatively little benefit definitely agree better though", "d": "7/2014"}, {"body": "planned breaking change", "d": "7/2014"}, {"body": "planned behavior", "d": "7/2014"}, {"body": "drop things starting uppercase following back globals", "d": "7/2014"}, {"body": "unable reproduce problem seems work fine mecould try jsbin", "d": "7/2014"}, {"body": "also reproduce give us additional context spbbosch", "d": "7/2014"}, {"body": "initial screen cid click active completed would work shot cid sorry know try", "d": "7/2014"}, {"body": "question better suited stackoverflow github issues use bug reports feature discussion", "d": "7/2014"}, {"body": "closing favor pr", "d": "7/2014"}, {"body": "updated emberpublishing nt think version bumped", "d": "7/2014"}, {"body": "rondalesc invalid tags published build confirmed recent travis build", "d": "7/2014"}, {"body": "ah maybe thinking automatic deploy valid tags nt implemented travelling moment look maybe topic", "d": "7/2014"}, {"body": "getting error nt taken full steps isolate seemed pop inserted itemcontroller attribute helper", "d": "7/2014"}, {"body": "submitted pr", "d": "7/2014"}, {"body": "similar problem think test manually set container bucket cache controller like worked fix released since bucket cache injected controller", "d": "7/2014"}, {"body": "believe addressed another pr commadelimited", "d": "7/2014"}, {"body": "machty think canary trow error version current canery build emberjs", "d": "7/2014"}, {"body": "new issue local emberjs calling view nothing happens whereas linkto query params call view work", "d": "7/2014"}, {"body": "machty example setup using local emberjs first click category category", "d": "7/2014"}, {"body": "machty emberjs issue possible configuration fault side ie reproduce", "d": "7/2014"}, {"body": "looks also exists current beta machty please take look question thanks great effort", "d": "7/2014"}, {"body": "interesting think requires discussion sure fully understand would mind starting thread fleshing ideas thanks", "d": "7/2014"}, {"body": "run problem longer think many requests simplified responses begun getting error problem occurs function particular calling second argument returned value failing case object belong reason calls array throws index range exception bit confused called reference already present function array decide whether valid object remove also bit new reading deep emberdata ideas greatly appreciated bug came back seemingly nowhere", "d": "7/2014"}, {"body": "also happens using sort function", "d": "7/2014"}, {"body": "worth noting use search array instead ex get another index range issue updated network two different range exceptions two different cases two different sort functions", "d": "7/2014"}, {"body": "flyswatter update issue title perhaps provide jsbin", "d": "7/2014"}, {"body": "agree try update soon think could reproduce issues", "d": "7/2014"}, {"body": "version ready go like work making dynamic inputcheckbox work stuck", "d": "7/2014"}, {"body": "think line asking simply trying match process determining match seems complex done app works expected change", "d": "7/2014"}, {"body": "adds failing test adding breaks assertions test passing links would active sure ignore section linktos specify queryparam", "d": "7/2014"}, {"body": "pr", "d": "7/2014"}, {"body": "spent hours tracking spoke one firefox dev tools developers determine expected behavior party two issues play first chrome chooses display error message prepended seems incorrect us chrome probably wo nt change behavior firefox displays stack trace get actual error threw exception need log ember currently logs error message course missing second issue firefox dev tools currently nt good job formatting output readable text live links reported bug project happy take issue create solution ember firefox displays error message slightly better trace working locally looks like change ember logger pass exception thrown instead within logger regexing stack format nicely removing duplicate error message chrome feedback support made pr", "d": "7/2014"}, {"body": "looks like still issue latest canary builds machty thoughts work", "d": "7/2014"}, {"body": "sometimes need send values instead booleans", "d": "7/2014"}, {"body": "ndreckshage seems like reasonable change gladly review pr adding pr definitely feature flag", "d": "7/2014"}, {"body": "going close issue hopefully favor pr come", "d": "7/2014"}, {"body": "rwjblue sounds good ill work one", "d": "7/2014"}, {"body": "exposing keyword really like become thing could open pr start thread discuss", "d": "7/2014"}, {"body": "stefanpenner thoughts short version expose keyword inside component templates", "d": "7/2014"}, {"body": "sure understand well seems simply keyword inside component template refers component arenoir tried use jsbin seems work like want", "d": "7/2014"}, {"body": "yes refer component components layout think sandstrom referring accessing view components template aka thing inside block passed something like", "d": "7/2014"}, {"body": "past machty probably others spent crazy amounts time thinking two interrelated problems component composition component isolation component composition basically compose component combining smaller components upcoming holy grail web apps something hoping ember would lead years ostensibly goal viewonly libraries like think actually fallen behind plain gotten stuff wrong although terribly difficult write components complex behaviors ember still painfully hard author components modularly ie internal pieces configured replaced customization contributing problem poor component isolation description components basically lie blockless components nt access context get used block components opens questions like ok block change contexts back component ask rpflorence tell find using templates components missing abstraction suspect either need extend handlebars sugar around use cases block args would help put templates back away slowly admit useful nonisolated controller backed display antipattern data isolated display aside default twoway data binding big way component isolation broken data mutation inside component leaks back context used without control incredibly convenient demos well source pain nt want", "d": "7/2014"}, {"body": "trek read vote increased isolation would prefer removing access surrounding scope blockful components increase isolation keyword would right side isolation divide one consider template embercomponent object part component arguing although nt given much thought isolation components seems desirable removing access outer context component templates might good idea trying understand consider template part isolation cell", "d": "7/2014"}, {"body": "would prefer removing access surrounding scope blockful components increase isolation removed surrounding scope access nt think helpercomponents like wo nt need keyword since would resolve component nt think anyone really nailed scope problem seen angular turn giant global dumping ground react punts problem forcing say lookup object want vs ember additional complication four desired lookup locations action targets use blocktemplate component inside controller backed template outer context lookup outer context targets controller outer context view lookup outer context targets view inner context lookup inner context targets component inside components template inner context lookup outer context targets component applicationhbs componentsmythinghbs totally reasonable want access keyword per se whole messy situation wanting keyword symptom causes much complecting entirely reasonable ember template using component switch back forth various contexts think causes spike complexity worried basically footgun maintainability", "d": "7/2014"}, {"body": "react punts problem forcing say lookup object want thisprops vs thisstate thread meaningless react components functions normal javascript scope applies props state separate outside world gave managing data flows would nt ever asking child state owner would piece state pass child prop child needed change also pass handler receive new value set state", "d": "7/2014"}, {"body": "sure understand usecase need component property yielded template controller pass controller property component use controller component care property exactly bound properties right hbs controller template xfoo componentbar xfoo seems bad outside world reaching instead give want xfoo barcontrollerbar controllerbar xfoo curious wrong", "d": "7/2014"}, {"body": "rpflorence example code use case component property based value passed want use block", "d": "7/2014"}, {"body": "rjackson trek note used inside component refers component master current ember release see robert previous fiddle release build basically behavior nt know behavior change intented anyway think similar use case trying implement modal component header body footer subcomponents wanted factorize actions root component call subcomponents example close action modal could send either button header button footer watched rpflorence video realize maybe developing component wrong way try implement differently like ictabs see smells better", "d": "7/2014"}, {"body": "example posted earlier another use case buttongroupcomponent children toggle open property like stated works release master release master wondering going wrong direction could pass open property controller feel especially multiple button groups", "d": "7/2014"}, {"body": "possible use branch testing metalviews approach step towards htmlbars removes usage metamorph script tags builds automatically published like check closing favor htmlbars tracking issue", "d": "7/2014"}, {"body": "struggling issue well trying use handlebars svg element construction instead application", "d": "7/2014"}, {"body": "using running issue able work around using ugly hack eg trying update class rect inside component template", "d": "7/2014"}, {"body": "first helpful provide jsbin including whole code people spot problem took look controller saw defined property however original todo indexhtml contains button appear application handlbars helper since completed property returns number attribute length condition never true however sure problem see whole code", "d": "7/2014"}, {"body": "correct set within want view target currently specify invoke view helper something like works would generally fine setting alias jsbin bunch different scenarios", "d": "7/2014"}, {"body": "closing get addressed changes discussed july face face meeting", "d": "7/2014"}, {"body": "maybe supposed happen see line component currently inserted dom parent view property point controller parent view", "d": "7/2014"}, {"body": "actions like events bubble components views controllers instead component action sent controller template used controller handle action sent corresponding route point router bubbles action route hierarchy direct action parent component setting property child component example demonstrates behaviour", "d": "7/2014"}, {"body": "jgwhite correct", "d": "7/2014"}, {"body": "think documentation incorrect nt think enough information really help also seems like good candidate stack overflow question please feel free link back question", "d": "7/2014"}, {"body": "rjackson mixonic pr supposed close issue", "d": "7/2014"}, {"body": "way tag view inheriting private recommended generally since gone soon htmlbars lands nt support tagname see discussion", "d": "7/2014"}, {"body": "confirmed hitting error well also content array changes trigger resort index go range eventually well", "d": "7/2014"}, {"body": "closed already fix also experienced problem", "d": "7/2014"}, {"body": "working properly latest canary builds likely fixed", "d": "7/2014"}, {"body": "know ticket old probably got think something like would work fine considering link gave edit fiddling saw example almost exactly ember guides", "d": "7/2014"}, {"body": "happening jsbin manually creating providing container items looked naturally property set automatically jsbin providing falling back old triggering deprecation working jsbin", "d": "7/2014"}, {"body": "machty think", "d": "7/2014"}, {"body": "knownasilya mean pass set values different places qp implementation qp values passed sure specifically referring", "d": "7/2014"}, {"body": "referring object gets passed route properties set controller", "d": "7/2014"}, {"body": "maybe grasping inconvenience working today nt seem like benefit would justify additional api surface say little would clean code", "d": "7/2014"}, {"body": "closing happy reopen needed", "d": "7/2014"}, {"body": "machty would allow passing queryparams object directly without delete values could make nice defaults even nt define model hook query params setup get automatically passed method performs query", "d": "7/2014"}, {"body": "stefanpenner add placeholders expand either using broccolistringreplace original source docs could easily stash local var examples things would work fine", "d": "7/2014"}, {"body": "sure much think change default setter behavior likely prevents issues causes think two way bindings whatnot good explanation probably added api docs nt already make sure folks know work around closing nt think much done would love pr documentation make discoverable", "d": "7/2014"}, {"body": "lets keep open atleast weekend believe ongoing discussions related problem resolution possible", "d": "7/2014"}, {"body": "brief discussion resolution likely got sidetracked vote cp become readonly default opt readwrite cp", "d": "7/2014"}, {"body": "stefanpenner guess close sure worth documenting edgecase workaround elucid said pretty brutal fix probably nt encourage", "d": "7/2014"}, {"body": "ya lets close core well aware annoyance", "d": "7/2014"}, {"body": "stefanpenner sounds good thanks looking", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "working correctly", "d": "7/2014"}, {"body": "would happily merge api documentation pr closing issue meantime", "d": "7/2014"}, {"body": "seems concerning", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "standard pods layout definitely something worth considering probably better forum discussion", "d": "7/2014"}, {"body": "happily review feature flagged pr adding", "d": "7/2014"}, {"body": "hello guys update issue", "d": "7/2014"}, {"body": "think would need failing jsbin track provide", "d": "7/2014"}, {"body": "rjackson possibly nt ipad handy anymore anyone one thread", "d": "7/2014"}, {"body": "machty unless aposed someone add finallycatch tonight", "d": "7/2014"}, {"body": "stefanpenner opposition", "d": "7/2014"}, {"body": "suspect improved htmlbars", "d": "7/2014"}, {"body": "yogananthan maybe submit index file instruction detecting leak htmlbarsmetalview people confirm problem gone", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "expected behavior chatter destruction flows existed would large penalty", "d": "7/2014"}, {"body": "expected feel like would worth throwing error point attempting set value event possible avoid silently working scenario", "d": "7/2014"}, {"body": "discovered well agree nathanpalmer throwing error might right thing documentation regarding inability would also another option", "d": "7/2014"}, {"body": "nathanpalmer unfortunately breaking change people set flags cleanup state hooks theoretically something rethink jackca docs sound good mind submitting something iterate", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "said documentation nt use private mean used internally kind help bug emberselect content using ember inspector gives us explains nt get anything", "d": "7/2014"}, {"body": "closing since private", "d": "7/2014"}, {"body": "map meant polyfil map unfortunately observable", "d": "7/2014"}, {"body": "fyi alex speller posted component solves bootstrap issue easy use less complex proposal", "d": "7/2014"}, {"body": "issue toggling property based toggled flag removing item therefore causing destroyed next run loop closing think bug", "d": "7/2014"}, {"body": "rjackson dropped appropriate documentation follow vs previous attempt api query params replaces", "d": "7/2014"}, {"body": "stefanpenner may review referenced pr would create qunitmodule eventdispatcher eventmanager gather related tests", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "definitely seems working properly", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "emcomputedsort cause index range error resort ref", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "mmun mentioned work properly", "d": "7/2014"}, {"body": "machty still issue could provide jsbin still issue", "d": "7/2014"}, {"body": "ca nt reproduce longer routerjs refactorings", "d": "7/2014"}, {"body": "adding guide make pr embercli picks suspect see initializer usage questions test", "d": "7/2014"}, {"body": "would like strongly advise async initialization initialization really meant setup safe start app usecases initializers setting injection rules setting factory registrations nt reason follow resolver rules reading configuration env variables meta tags things great idea fetching data via xhr deferring readiness eagler loading likely fine nt pause app boot instantiating using fetching data via xhr deferring readiness xhr means variable latency means must provide user indication loading progress defer app readiness initializer wait xhr prevent routing starting results white screen users instead loading occur route thanks machty render lovely available instantiating using may instantiate entities ready resulting unexpected behavior obviously app add options ensure correct ordering working addons lots initializers get extremely tedious example given addons aware addon code eagerly instantiate router addon tries add injection rule router going bad time allowing framework instantiate entites ondemand enables extensibility", "d": "7/2014"}, {"body": "gon na kick ember inspector prettify really necessary really bug since convenience anyway provide informative error message", "d": "7/2014"}, {"body": "thanks following machty understand sounds like good call search ways contribute", "d": "7/2014"}, {"body": "bitten well progress issue test missing", "d": "7/2014"}, {"body": "bcardarella ping", "d": "7/2014"}, {"body": "wagenet pong", "d": "7/2014"}, {"body": "bcardarella said write failing test still planning", "d": "7/2014"}, {"body": "wagenet sure try week", "d": "7/2014"}, {"body": "wagenet", "d": "7/2014"}, {"body": "happy know confirmed issue even though driving crazy less ideal workaround create copysubset content decouple binding original reference downside select field longer updates new objectsitems added content fortunately case need bindings select content", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "error", "d": "7/2014"}, {"body": "would love see soon couple places would make sense using need itemcontroller", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "closing since one seeing anymore", "d": "7/2014"}, {"body": "seems working without error", "d": "7/2014"}, {"body": "ping mmun jayphelps nt really bandwidth work could help provide guidance needed", "d": "7/2014"}, {"body": "mmun machty basically boat right lack bandwidth one picks might able knock weekend basically putting time actually add test coverage historyhashlocation cause otherwise risk nasty regressions", "d": "7/2014"}, {"body": "using tracking meetings closing", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "gon na close inactivitydisinterest would love see pr", "d": "7/2014"}, {"body": "pretty close removing jquery dependency several stabs integrating jquery custom build system work rakep broccoli seems silly point", "d": "7/2014"}, {"body": "think least mentioned documentation", "d": "7/2014"}, {"body": "saved couple hours reading guys", "d": "7/2014"}, {"body": "happy accept pr bring guides back line mixonic mentioned looks like ok though", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "ran issue made progress branch anywhere hjdivad", "d": "7/2014"}, {"body": "stefanpenner enabling model injection flag considered save", "d": "7/2014"}, {"body": "manuelmitasch use without problems plains reduce potential problems", "d": "7/2014"}, {"body": "stefanpenner thank", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "worked around issue using view", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "resolved", "d": "7/2014"}, {"body": "definitely mixin closing favor", "d": "7/2014"}, {"body": "recent changes made mmun fixed reported issue see confirmation pr addressed", "d": "7/2014"}, {"body": "", "d": "7/2014"}, {"body": "closing favor", "d": "7/2014"}, {"body": "believe currently support closing inactivity happy reopen someone interested investigating", "d": "7/2014"}, {"body": "closing since seems limited interest one working prs still welcome", "d": "7/2014"}, {"body": "work need help serious need imo would love huboard", "d": "7/2014"}, {"body": "likely working area later week may time email rauhryan", "d": "7/2014"}, {"body": "sounds great", "d": "7/2014"}, {"body": "gbirke situations value present work around using", "d": "7/2014"}, {"body": "closing since solutions someone wants pr something better please", "d": "7/2014"}, {"body": "would love see pr documenting behavior helper closing suggestion teddyzeenny using instead mixonic disabling testing work well", "d": "7/2014"}, {"body": "closing inactivity happy reopen someone willing legwork see impact switching", "d": "7/2014"}, {"body": "still problem status issue changed", "d": "7/2014"}, {"body": "yet suspect metalviews htmlbars land energy core go unlikely", "d": "7/2014"}, {"body": "closing favor", "d": "7/2014"}, {"body": "working refactoring improving view layer resolve", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "afaik last main issue fixed", "d": "7/2014"}, {"body": "closing due inactivity", "d": "7/2014"}, {"body": "annoying issue still solution deprecate slash namespace release remove code subsequent release", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "closing due inactivity", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "closing prs welcome", "d": "7/2014"}, {"body": "please aggregate deprecate slash namespace", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "closing favor discussion much work put pulling lodash", "d": "7/2014"}, {"body": "closing favor cc rwjblue", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "since closed issue could please make sure particular details gets included new title issue pretty generic hate get closed get fixed issue particular problem get addressed", "d": "7/2014"}, {"body": "abobwhite issues backreference one context discussion sufficient", "d": "7/2014"}, {"body": "stefanpenner thanks believe wagenet made checklist sufficient thanks", "d": "7/2014"}, {"body": "possible currently metalviews branch", "d": "7/2014"}, {"body": "tonywok know old issue ever find solution run almost exact thing today ca nt lift figure wrong", "d": "7/2014"}, {"body": "closing essentially activity nt seen actual scenario problem love see pr making bit lazy", "d": "7/2014"}, {"body": "closing revisiting object model future keep issue mind", "d": "7/2014"}, {"body": "see", "d": "7/2014"}, {"body": "brennanmceachran nice catch pretty weird ios starts listen click events element add saved thx", "d": "7/2014"}, {"body": "functionality kind critical us discourse need able transform elements inserted dom example need size width height attribs images prior dom insertion mobile html stored db understanding htmlbars get actual dom element willinsertelement correct krisselden", "d": "7/2014"}]