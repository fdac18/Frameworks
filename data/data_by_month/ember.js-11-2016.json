[{"title": "ember route redirect method issue incorrect arguments bug", "body": "hi according doc method args fact serialized eg previous releases returned correct model serialized one bug new feature", "num": "14660", "d": "11/2016"}, {"title": "nested component notation docs", "body": "upgraded ember notation nested components work anymore following notation work reflected docs nt see popping anywhere changelogs possibly mistake made end undocumented change", "num": "14659", "d": "11/2016"}, {"title": "ember undefined route dynamic segment longer working", "body": "looks like unsupported feature bug thought would log upgrading ran following exception approuterjs thisroute timecards path timecards login function thisroute index path thisroute timecardday path day date thisroute payperiod path payperiod date approutestimecardsjs model hook model params let login paramslogin thisget currentuserlogin return thisstorepeekall user findby login login quite handy use optional dynamic segment parent route load default user model rather load individual child routes", "num": "14657", "d": "11/2016"}, {"title": "prevent manual browser unloadrefresh working file filelist", "body": "hi thanks awesome framework ember really appreciate hard work building ember app allows people upload media files eg audio video local computer server manage content metadata order need work html objects since way get access user local files returns objects app allows user multiselect files puts objects queue starts uploading problem user manually reloads web page refreshes using browser controls ember app reloaded lose objects prevent solutions use store local storage files large mb gb encoding string storing local storage wo nt feasible store path name security measure browser sets path way see real path programatically reload file ember app reload know app robust reloads refreshes beyond control html standard prevents cachingstoringprogramatically fetching objects representing local files opaque blob solutions robust way prevent user unloadingreloadingrefreshing tab showing ember app suggestions welcome thanks ps realize nt much bug ember instead drawback js spa compared native apps trying start flame wars need help", "num": "14656", "d": "11/2016"}, {"title": "ember jquery issue", "body": "tried tracking somewhere code think leads issue using jquery ember jquery success ember jquery success ember jquery success ember jquery fail running addon dummy locally console errors addon might guess wraps jquery datepicker plugin inspected sending right options hash plugin init options taking effect datepicker normally would point finger datepicker works fine jquery rollback ember also works fine ember use jquery combo ember jquery seems culprit tried updating jquery plugin recent version change one success cases failure case branch see failing", "num": "14655", "d": "11/2016"}, {"title": "ember didupdateattrs firing incorrectly", "body": "twiddle run twiddle click options notice nothing logged console switch notice called unnecessarily manifests failing test emberselectbox repo", "num": "14654", "d": "11/2016"}, {"title": "log asd breaks ember", "body": "route simple template breaks unfortunately reproduce easily simple application ember twiddle logic nested routes etc however unsure exactly causes problem hope reproduce somehow help way", "num": "14653", "d": "11/2016"}, {"title": "use handlebars comment attribute ember", "body": "following working code ember ember get following javascript error expected", "num": "14652", "d": "11/2016"}, {"title": "bug regression input helper support html types", "body": "ran strange bug updating ember reproduce use somewhere application expected behaviour rendered element type real behaviour helper rendered element type work previous ember versions test case developed simple test case bare embercli application found specific test case found copied import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile moduleforcomponent input integration component input integration true base case test text type default function assert thisrender hbs assertequal input attr type text one fails test date type function assert thisrender hbs assertequal input attr type date however one succesfull test number type function assert thisrender hbs assertequal input attr type number think intended test text type type random function assert thisrender hbs assertequal input attr type text test results remarks also seem work datetime datetimelocal however seen testcase random string normalized type think somewhere date types missing valid types another strange observation seems work running tests chrome browser", "num": "14651", "d": "11/2016"}, {"title": "unable set error route", "body": "emberjs setting error route default routerecognizer allow duplicate routes anymore give blank page error console default error routes set test trying handle route using functionality worked fine", "num": "14650", "d": "11/2016"}, {"title": "cleanup remove enabled features", "body": "example emberruntimecomputeduniqby emberruntimeenumerableincludes emberstringishtmlsafe embertestingcheckwaiters", "num": "14647", "d": "11/2016"}, {"title": "using triple braces open close html tags render properly", "body": "controller javascript file following want able use template like result want button instead rendering want run loop inside opentag problem tag always div could span p section ul container tag want dynamic otherwise insert block container twiddle showing issue", "num": "14645", "d": "11/2016"}, {"title": "runtime exception yielding values within partial", "body": "related fixed chancancode recently new error could observed seems much related changes worked started get exception build coming within glimmer seems took quite time isolate seems happens yielding values partial twiddle reproduces", "num": "14642", "d": "11/2016"}, {"title": "ember computed properties nt seem work arrays", "body": "hi ember awesome thanks hard work ember newbie forgive missed something obvious spent time googling issue still ca nt find solution seems ember computed properties nt working documentedintended array properties like length trying build queue js appcustomobjectsprocessingqueueitemjs import ember ember export default emberobjectextend payload null extracontext null processingstate pending pending succeeded failed processingoutcome null null pending result succeeded error failed tostring return appcustomobjectsprocessingqueuejs import ember ember import processingqueueitem processingqueueitem export default emberobjectextend emberenumerable queuename null class incomplete want start displaying queue contents template help debugging ca nt get work controller template js appcontrollersdashboardjs import ember ember import processingqueue customobjectsprocessingqueue export default embercontrollerextend init thissuper arguments thisset processingqueue processingqueuecreate queuename dashboardqueue thisget processingqueue thisget processingqueuelength thisget queuelength queuelength embercomputed processingqueuelength function return thisget processingqueuelength apptemplatesdashboardhbs dashboard queue length queuelength processingqueue queueitem queueitempayload outlet problem queue length always undefined add items queue true queue empty array length using dashboard controller emberinspector see strange soon add items queue queue length becomes defined keeps syncs template add queue items first automagically updates template show queue length undefined though enqueued items tried adding gets place according unconsumed computed properties trigger observers nt seem help ideas entirely possible misunderstand something computed properties nt understand tried ca nt get make difference either something right help would hugely appreciated willing add wiki write blog post maybe release queue open source thank thanks thanks making ember awesome", "num": "14641", "d": "11/2016"}, {"title": "input checkbox component update checked property", "body": "code sample note console output keep printing true instead alternating true false initial value property respected code changed render checkbox initially unchecked appears property value code sample property get updated user interacts checkbox", "num": "14640", "d": "11/2016"}, {"title": "components stronger adherence requirements valid names", "body": "example following disallowed according spec names used component names ember annotationxml colorprofile fontface fontfacesrc fontfaceuri fontfaceformat fontfacename missingglyph rules around naming requirements goal components eventually move would assume full spec would respected", "num": "14635", "d": "11/2016"}, {"title": "add helpful assertion using component helper input textarea", "body": "recreate assuming nonhyphenated ember components", "num": "14632", "d": "11/2016"}, {"title": "passing model queryparams controllerreplaceroute", "body": "ember docs controllerreplaceroute states beside identical transitiontoroute respects noticed controllertransitiontoroute allows passing options object queryparams object specified current use case would like use replaceroute instead pass options object replaceroute seems take route models argument reason omitting options argument replaceroute", "num": "14631", "d": "11/2016"}, {"title": "element property exist tests", "body": "apologies already discussed nt property available contexts integration tests jquery version words happen done integration test", "num": "14630", "d": "11/2016"}, {"title": "deprecate embertestqunitadapter embertestadapter defaulting", "body": "would like propose deprecation class property defaulting instead move implementation project default using empty base implementation since would breaking change copy existing stuff deprecate remove ember released point deprecation warning explicitly set likely replaced default moving", "num": "14628", "d": "11/2016"}, {"title": "ca nt acceptance test error routes", "body": "trying test error route displayed correctly error occurs application like javascript import skip qunit import moduleforacceptance fooapptestshelpersmoduleforacceptance import pretender pretender let server moduleforacceptance acceptance error beforeeach server new pretender function thisget apifoo gt return null aftereach servershutdown skip error function assert assertexpect visit andthen gt ca nt get problem error occurred suite fails regardless sorry submitted wrong repo clear belongs", "num": "14627", "d": "11/2016"}, {"title": "possible memory leak switching routes", "body": "using ember every time switching routes strange detached dom trees inside heap snapshop got small repository two branches master even switch small routes got detached elements since application working much complex simple demo even detached elements causes huge trouble iosdevices since memory limited", "num": "14626", "d": "11/2016"}, {"title": "standardize template error structure", "body": "like begin standardizing template error structure returned various ember components better utilize plethora information known time error thrown one major end results ability generate userfriendly error page developers error structure still discussion documented along work required various parts ember ecosystem notable locations emberjs cc rwjblue stefanpenner", "num": "14625", "d": "11/2016"}, {"title": "routereplacewith support options argument like transitionto", "body": "currently impossible use replacewith query parameters since nt argument supported", "num": "14622", "d": "11/2016"}, {"title": "doc contributingmd building emberjs section missing yarn install step", "body": "building emberjs section currently reads follows follow commands build emberjs bower install yarn run build nt work since also need run yarn install probably read yarn install bower install yarn run build", "num": "14620", "d": "11/2016"}, {"title": "error message error nonrecoverable condition triggered watchman needs help", "body": "hi new emberjs found bug possible reason tried run got following load terminal message repeated around times several paths think following thing wrong watchman tries watch every folder requires watchman trying wath folders inside lot dependencies following added ingore packagefolders error raised hope helped way anything wrong let know greetz bob", "num": "14618", "d": "11/2016"}, {"title": "currentwhen working dynamic segment", "body": "example", "num": "14615", "d": "11/2016"}, {"title": "handles differently", "body": "twiddle twiddle component glimmer passed property set reset value empty case remove attribute element nt effect actual value element technically setting probably advisable seems call handle handled well", "num": "14614", "d": "11/2016"}, {"title": "empty maps nt trigger else clause helper", "body": "seen helper let loop empty clause entered believe due maps using rather happy try work pull request would appreciate steer whether supported way", "num": "14613", "d": "11/2016"}, {"title": "bug beta mut action helper fully propagate changes", "body": "prior glimmer could use helper things like flip booleans forms appears broken prop dom update repro", "num": "14612", "d": "11/2016"}, {"title": "hmr hot reload", "body": "good day ember team building new tool simplify creating ember app without files structure everything write embercli object created json structure fill json functions variables anything json application file javascript convert json functions js functions create amd modules everything working fine want replace controller already cached ca nt remove app load new one used controller still memory ca nt var dataapp embera path appapplicationcontroller import exports ember arrg exports ember functions exports default ember default controllerextend n active function consolelog application controller n editing false n activecomponent nulln n path appindexcontroller import exports ember arrg exports ember functions exports default ember default controllerextend n active function consolelog index controller n editing false n activecomponent nulln n working fine dataappforeach function define ipath iimport new function iarrg ifunctions function problem function hotreload consolelog hotreload var path appapplicationcontroller import exports ember arrg exports ember functions exports default ember default controllerextend n active function consolelog application controller new n editing false n activecomponent nulln n var name controller application appunregister name consolelog testapphasregistration name delete requirejsentries ipath define ipath iimport new function iarrg ifunctions appregister name hotreload", "num": "14608", "d": "11/2016"}, {"title": "replacewith transitionto nt respect query params beforemodel", "body": "described attempting use set default query param value want visible url ember twiddle expected behavior initial load page output query timeframe desired value timeframe query param actual result redirect take place query param set value page instead outputs query timeframe set query param manually output reflects actual value param try changing path box twiddle cc rwjblue", "num": "14606", "d": "11/2016"}, {"title": "ember blog post items", "body": "things call frozen development pr particular means frozen dev deprecated issue pr deprecation guide pr completely deprecated previously model argument deprecated usage without argument also deprecated additionally route deprecated issue pr deprecation guide pr", "num": "14601", "d": "11/2016"}, {"title": "ember blog post items", "body": "things call development arguments frozen issue pr known issue return params passed helper followup fix patch omg backtracking rerender called several qp bugfixes", "num": "14600", "d": "11/2016"}, {"title": "properly serializing nonprimitive array query parameters", "body": "query parameters seems getting lot attention lately wanted chime feature request currently nonprimitive query parameter values passed results rather ugly urls example controller pushes onto original array triggering qp change js export default embercontrollerextend queryparams array array b c init thissuper arguments url would expect however url get twiddle", "num": "14598", "d": "11/2016"}, {"title": "optimization emberrouteactionsqueryparamsdidchange", "body": "hey sorry seeing wrong looking line seems finding one queryparam needs trigger refresh loop break parameters changed need trigger refreshes time right one refresh enough", "num": "14597", "d": "11/2016"}, {"title": "clear", "body": "prior versions ember setting either would clear property given following template setting remove previously set value demo", "num": "14595", "d": "11/2016"}, {"title": "emberset amp embersetproperties fail set properties enumerable", "body": "currently using ember wanted upgrade behaviour onwards seems bit buggy reproduce bad behaviour following javascript const test emberobjectextend myprop null didchangemyprop emberon init emberobserver myprop function consolelog updated const testinstance testcreate embersetproperties testinstance id myprop id would expect get ember ember onwards prints consolelog objectkeys testinstance alternatively property emberset testinstance myprop id console print empty array however nt initialize property call objectkeys set usual seems somewhere deep guts amp amp declaring property enumerable ca nt reproduce bug seems work try steps chrome devtools interesstingly enough prints ember version call console prints", "num": "14594", "d": "11/2016"}, {"title": "controller specialized component documentation issue", "body": "controller object component view controller idea dom elements attached wo nt know example seems also unable process events passed actions big component nt described wrong way please explain fairly new ember", "num": "14589", "d": "11/2016"}, {"title": "issue loading substates canary", "body": "seems change behavior canary loading substates declaring route name twice one nested different route namespace one top level causes error loading substate loads fine canary uncaught error may add duplicate route named may related", "num": "14585", "d": "11/2016"}, {"title": "handle unrecognizedurlerror application level", "body": "trying fresh embercli application version creating sample routes using navigating unknown route yields uncaught attempting catch application route eventaction nt seem work known intended behavior ember way dealing unknown routes thanks advance", "num": "14584", "d": "11/2016"}, {"title": "use template print contexts results", "body": "given following template get following error sure fundamentally public api common debugging technique fix assume string used since represents template context handlebars ast parlance", "num": "14581", "d": "11/2016"}, {"title": "component block nt getting values component scoping issue", "body": "see perhaps assuming much scoping rules around component blocks nt block template component able access values component actually prefer outer scope similarly defined property", "num": "14580", "d": "11/2016"}, {"title": "ember computed mathabs", "body": "tried times create whenever tried find way save emptied code long story short binding edit formatting computed property fires correctly amp b updated return value change b changed may overlooking something obvious wanted create ticket case bug also happy create ember js bin somebody tell save", "num": "14578", "d": "11/2016"}, {"title": "rubygems embersource provides", "body": "think version mismatch unexpected someone publish correct version embersource", "num": "14576", "d": "11/2016"}, {"title": "beta typeerror invalid value used weak map key rootpropertyreferencecompute canary", "body": "hello continuation fixed one error another latest canary previous issue form error happens chrome firefox safari levels stacktrace see references makes think connected rjwblue noted sorry keep bringing issues know help let know way contribute", "num": "14573", "d": "11/2016"}, {"title": "bug emberget empty string path longer returns target object", "body": "previously would return behavior removed caused breakage embercpvalidations relied opinion likely bug people relied could instead marked deprecation", "num": "14572", "d": "11/2016"}, {"title": "better compatibility asyncawait function test", "body": "hi like next asyncawait feature proposed main goal cleaner syntax tried action like actions async clone model const clone await modelclone works test message turned testing mode disabled runloop autorun need wrap code asynchronous sideeffects run described error question know use asyncawait become useless saw set false problems later solution plan thanks", "num": "14569", "d": "11/2016"}, {"body": "data updated also longer needed adding new keys demo without rerendering set", "d": "11/2016"}, {"body": "hmm actual app code quite bit complex also involves removing keys trying approach results error also breaks ability inspect component ember inspector try reproduce embertwiddle reverting result everything working", "d": "11/2016"}, {"body": "saladfork get error console closed incognito suspect inspector might observing private property managing child views", "d": "11/2016"}, {"body": "rwjblue closing ember inspector even console open results everything working expected might move issue longer need call approach recommended one update guides reflect", "d": "11/2016"}, {"body": "might move issue agreed longer need call rerender set approach recommended one update guides reflect yes", "d": "11/2016"}, {"body": "exelord tried recreate issue twiddle nt managed yet perhaps could try modify twiddle demonstrate issue", "d": "11/2016"}, {"body": "correct results compared serialized", "d": "11/2016"}, {"body": "referring embertwiddle url appears url encoded correctly perhaps could modify twiddle demonstrate seeing", "d": "11/2016"}, {"body": "noticed route twiddle url seeing routes linked twiddle may bug ember twiddle saving may fork twiddle save case", "d": "11/2016"}, {"body": "docs linked example dot notation nested component fact nt example invocation nested component regardless notation mixing example use component helper", "d": "11/2016"}, {"body": "sohara ah bad fairly confusing regardless dot notation example invocations nested components reading bit apparently dot notation never properly supported slash used times miss parts documentation specified use dash dealing nested components", "d": "11/2016"}, {"body": "pieterjanvdb actually sure much guides go use nested components could search guides source possibly file issue find documented believe examples nested components wild eg blog posts books etc opposed official documentation said using ember since beginning ca nt remember seeing dot notation invocation nested components see dot notation invocation contextual components still supported", "d": "11/2016"}, {"body": "sort undefined behaviour used work never intended api indeed reserved contextual components mentioned sohara similar issue recently could nt find quick search nt really document nested components gets messy fast personally waiting module unification rfc work get ember", "d": "11/2016"}, {"body": "sohara ah fault came project currently working thought subdirectories components default thing", "d": "11/2016"}, {"body": "fairly sure still passing undefined implementing custom serialize hook error message added pretty big win folks general prefer keep around possible", "d": "11/2016"}, {"body": "rwjblue passing undefined linkto helper throws warning", "d": "11/2016"}, {"body": "also issues ember error told undefined quick fix change router think real fix deserves qualified bug otherwise information changing router behavior", "d": "11/2016"}, {"body": "think better fit stackoverflow since question related bugissue ember may suggest close issue reopen question post link soquestion try answer slack irc would also work", "d": "11/2016"}, {"body": "sandstrom said try leave section bug reports please ask question help channel community slack given broader nature question might likely get great response stackoverflow thank", "d": "11/2016"}, {"body": "good place start would jquery changes page list breaking changes also bit unclear way nt working ran branch although failure case looked like image opens fine click input ie thing see small difference default state input perhaps explain detail image emberbugreport branch", "d": "11/2016"}, {"body": "ie thing see small difference default state input perhaps explain detail correct difference options nt taking good place start would jquery changes nt know true addon works perfectly ember jquery nt know jquery changelog would give answers seems ember using jquery bit differently leading believe intimate knowledge ember inner workings start please correct wrong", "d": "11/2016"}, {"body": "error intended report providing helper already provided ember see twiddle reproduction assertion prevents appsaddons overriding builtin helpers guess", "d": "11/2016"}, {"body": "well nt helper however find results makes problem obvious defines helper reason thanks help marking resolved", "d": "11/2016"}, {"body": "hmm introduced error message case following would rendered seems pretty odd think error actually good welcome input", "d": "11/2016"}, {"body": "mmun mixonic thoughts", "d": "11/2016"}, {"body": "think would useful way comment attributes could make become become generally dislike adding support special cases think ones intuitive might worth", "d": "11/2016"}, {"body": "problem seems related phantomjs since reproduce chrome firefox implement date", "d": "11/2016"}, {"body": "yes worked ember using phantomjs version entirely sure caused ember phantomjs", "d": "11/2016"}, {"body": "think discovered cause function checks type input field set given type done creating dummy input element type set actual type checked given type copied function test case link added input types test case fails also date type conclusion phantomjs support date type however changed type checking new discovered maybe still idea change would expect type input element say independent support browser", "d": "11/2016"}, {"body": "type checking done prior versions also see sure would change type checking code seems identical ember version comparing", "d": "11/2016"}, {"body": "problem jquery takes value collection returns type browser actually rendering take look bin", "d": "11/2016"}, {"body": "hmm function seems identical jquery explantion makes sense however see jquery used apart unit tests created branch repo uses ember found test results show input type set whatever set phantomjs browser still nt support date type", "d": "11/2016"}, {"body": "reproduce twiddle please", "d": "11/2016"}, {"body": "locks", "d": "11/2016"}, {"body": "seeing well nt recall seeing recent beta yesterday", "d": "11/2016"}, {"body": "seems legit virtue change made need lock default creation user already created one know fix get", "d": "11/2016"}, {"body": "working pr", "d": "11/2016"}, {"body": "believe something support plan directly support pre htmlbars would worked", "d": "11/2016"}, {"body": "thanks quick reply way make work could write helper would return whole block loop array helper prefer avoid solution", "d": "11/2016"}, {"body": "defining component passing tagname", "d": "11/2016"}, {"body": "unfortunately twiddle posted working showing content twiddle posted without component", "d": "11/2016"}, {"body": "btw code depends heavily component bit complicated moment using partials replace one partial want render tagname component pass lot parameters", "d": "11/2016"}, {"body": "try", "d": "11/2016"}, {"body": "neat nt aware component could called way solved problem many many thanks", "d": "11/2016"}, {"body": "nice one perhaps close issue", "d": "11/2016"}, {"body": "added failing test", "d": "11/2016"}, {"body": "oops thank reporting looking", "d": "11/2016"}, {"body": "simonihmig fixed", "d": "11/2016"}, {"body": "confirmed finally fixes remaining failing tests emberbootstrap green thanks lot", "d": "11/2016"}, {"body": "seems ember computed properties nt working documentedintended array properties like length something seems strange mind reproducing way easy us see whatsup debug issue", "d": "11/2016"}, {"body": "thanks responding quickly happy setting twiddle right", "d": "11/2016"}, {"body": "ok shared twiddle see queue starts empty length computed property undefined however add items length property goes expected clear queue length goes back tried sorts tricks like put initial item queue remove within init try get computed property run loop etc nothing seems work length always starts undefined also idea nt work would expect work right thanks anything else help please let know happy", "d": "11/2016"}, {"body": "joelpresence iteration counting fine", "d": "11/2016"}, {"body": "problem kinda strange workaround easy end world although improving something result extremely wat simply remove custom going explain whats going nt forget discovered explore fixin invokes overridden following development assertion ember invoked reads reads property process seting since read right accurately right set value ends cached value object considered fully initialized short circuit nt trackbroadcast changes results cache evicted really silly think right solution think several", "d": "11/2016"}, {"body": "notes read schedule required share whenand use often forget calls without object wont initialize properly move classes get syntax error", "d": "11/2016"}, {"body": "smaller reproduction likely write test tomorrow", "d": "11/2016"}, {"body": "less convoluted example demonstrates issue although broadcasting changes init likely continue happen believe may reasonable explore local cache evicted maybe fix making sure nt unexpectedly invoke user code may sideaffects via development assertion", "d": "11/2016"}, {"body": "hi stefanpenner thanks much detailed replies say init often forget thissuper arguments calls without object wont initialize properly move classes get syntax error mean thought according initializing instances necessary extending framework class like invoking super init application controller since latter framework class mind need invoke init even simple subclass emberobject please confirm happy need right removing custom fixes thank much way make custom tostring shows length would cause problem reason added custom tostring custom objects extend issues logging console would print something would also print unknown mixin roll tostring either way remove tostring keep coding thanks careful advice review issue grateful help ember best wishes", "d": "11/2016"}, {"body": "ok mean happens remove maybe process item logs following console maybe process item lt unknown mixin gt tostringprocessingqueue lt unknown mixin tostringemberinspect eprocessingqueue unknown mixin log console something wrong emberinspect maybe", "d": "11/2016"}, {"body": "setting overwriting logic changes property complete list properties pass helper need change event using modern ember gt consider using plain html inputs twiddle thank", "d": "11/2016"}, {"body": "component keyword wrote thank", "d": "11/2016"}, {"body": "future reference solutions sure components private event might helpful people get error try use instructing consider form fwiw obvious developer helpers furthermore implementations buried pretty deep within bowels ember took good long find", "d": "11/2016"}, {"body": "agreed updated title reopening would love someone tackle fairly straightforward think happy help someone implementation", "d": "11/2016"}, {"body": "rwjblue want confirm suggested assertion use private component names", "d": "11/2016"}, {"body": "imho would suggest people use private components case would great know improve documentation input helper make clear helper current api section specifies might place overlooked thank", "d": "11/2016"}, {"body": "would suggest people use private components confirm lean towards well however think experience confusing recommendation use private components would able promote components public would assertion raise give help people improved documentation great think assertion would fastest feedback loop", "d": "11/2016"}, {"body": "well definitely inform folks ca nt use component helper would better today already since today throws bizarre unhelpful errors question suggest people instead think best thing suggest folks make components extend since least already public api realize nt feel super good definitely favor figuring better solution", "d": "11/2016"}, {"body": "thank reporting sivamahadevan since duplicate track issue", "d": "11/2016"}, {"body": "close issue track repo keep open", "d": "11/2016"}, {"body": "serabe yes think would right repo track moved questionrequest", "d": "11/2016"}, {"body": "thank closing track linked issue", "d": "11/2016"}, {"body": "awesome thanks", "d": "11/2016"}, {"body": "slack rwjblue happy change default based presence rwjblue seems like better move anyways tbieniek yeah would probably work", "d": "11/2016"}, {"body": "locks else need verify bug", "d": "11/2016"}, {"body": "even switch small routes got detached elements share screenshots see heap profiler helps makes sure available information shared anyone working confirmdiagnose", "d": "11/2016"}, {"body": "course also added one snapshots repository mentiond switching two routes serval htmldivelement htmlheadingelement visible get cleared garbage collection small scale nt cost much memory content complex dom gets changed footage grows give overview one route huge table dynamically loaded entries use component nested components medium sized grid also gets dynamically loaded try get demo clear reproduce problem better", "d": "11/2016"}, {"body": "vmalloc see also", "d": "11/2016"}, {"body": "nathanhammond sure conclusion end result trying achieve transition route specific query params without pushing another history state item ended messing history api since saw builtin way ember", "d": "11/2016"}, {"body": "merged thank", "d": "11/2016"}, {"body": "thanks locks first pr hopefully start contributing useful code soon well", "d": "11/2016"}, {"body": "bobmulder emberjs bug perhaps reach help channel chat regarding solutions issue experiencing ember cli", "d": "11/2016"}, {"body": "discussing bit slack close", "d": "11/2016"}, {"body": "nt see problem please describe expectation actually happening", "d": "11/2016"}, {"body": "sure hyperlink therefore visit expecting current attribute contains hyperlink active removing dynamic segment linkto makes works expected per docs", "d": "11/2016"}, {"body": "ah recommend p", "d": "11/2016"}, {"body": "couple questions spring mind recommend documented work removing dynamic segment", "d": "11/2016"}, {"body": "recommend documented ideally done via route nestingarchitecture work removing dynamic segment nt know mean", "d": "11/2016"}, {"body": "ideally done via route nestingarchitecture something illadvised link far tell nothing complicated incorrect route architecture work removing dynamic segment nt know mean mean remove number work expected", "d": "11/2016"}, {"body": "oh passing two arguments route one dynamic segment", "d": "11/2016"}, {"body": "nope arguments correct foo fooid foo title text foo route dynamic arg fwiw even though closed still think bug", "d": "11/2016"}, {"body": "thank reporting ultimately issue know seem different working fix tildeioglimmer repo update things resolved", "d": "11/2016"}, {"body": "lllama nt believe maps intended enumerable helper see vs uses enumerable", "d": "11/2016"}, {"body": "thanks pixelhandler would helper appropriate also nt currently work", "d": "11/2016"}, {"body": "hello hamzahio thank writing originally ember apps written similar way using global variables long time ago though still supported discouraged since would losing ecosystem ember cli currently hot reloading supported would require opening issue following rfc process closing since issue thank", "d": "11/2016"}, {"body": "thank serabe want remove controller route update new ones", "d": "11/2016"}, {"body": "nt seem related recent transition work really transitioning query params really need default param serialized url suggest using using requires instead work currently however think real issue fighting design query params explicitly default value nt show url use case explicitly support ember currently whilst workarounds inclined say nt bug query params work", "d": "11/2016"}, {"body": "alexspeller thanks workaround suggestions using inside controller set param also works js import ember ember export default embercontrollerextend queryparams timeframe timeframe null init thissuper arguments however creates useless history item reason want default query param visible might want change default still old urls work way scenario history item query params results redirect breaks back button unless hammer guides api docs suggest transition work work differently place use seems like confusing inconsistency", "d": "11/2016"}, {"body": "hmm yeah thinking transition work totally legit usecases unrelated param defaults would nt advise pretty much anything init methods anywhere ember exception basic object setup guarantees init method would called may point expect due dependency injection laziness", "d": "11/2016"}, {"body": "bgentry seems like bug seems work argument work fine using argument route name docs indicate following work working twiddle", "d": "11/2016"}, {"body": "took look already test javascript test transitionto supports query params thissetsingleqpcontroller index foo lol first last assert appear testing behaviour already missing new contributor apologies obvious", "d": "11/2016"}, {"body": "larowlan seems bug happens specifically done route controller loaded nt think test exercising specific scenario", "d": "11/2016"}, {"body": "thanks bgentry would appreciate tips simulate scenario test", "d": "11/2016"}, {"body": "larowlan would expect issue routerjs library emberjs start looking tackle one", "d": "11/2016"}, {"body": "thanks think worked test", "d": "11/2016"}, {"body": "test gives error seen console ie someone give make sure right path", "d": "11/2016"}, {"body": "ok got point nt error test fails genuinely handlers router early supportedpossible beforemodel hook", "d": "11/2016"}, {"body": "supportedpossible beforemodel hook routing guides state redirection transitioning indeed supported something queryonly case think", "d": "11/2016"}, {"body": "closing favor", "d": "11/2016"}, {"body": "closing favor", "d": "11/2016"}, {"body": "cc nathanhammond", "d": "11/2016"}, {"body": "believe duplicate review confirm", "d": "11/2016"}, {"body": "consider duplicate buschtoens working", "d": "11/2016"}, {"body": "awesome keep eye repo thaks lot smiley", "d": "11/2016"}, {"body": "urbany seems reasonable want early exit right", "d": "11/2016"}, {"body": "sounds like great pr", "d": "11/2016"}, {"body": "rwjblue pr", "d": "11/2016"}, {"body": "likely blocks stable release", "d": "11/2016"}, {"body": "stefanpenner absolutely fixed glimmerengine working pr", "d": "11/2016"}, {"body": "interestingly enough prints ember version call emberversion console prints embertwiddlecom ember app runs ember atm app twiddle creating running iframe asking host application reports asking app running inside iframe report whatever version specified changing console use right context fix", "d": "11/2016"}, {"body": "suspect happening set determines values actually set property work done demo js const foo emberobjectextend null let foo foocreate log keys objectkeys foo fooset null log keys objectkeys foo fooset value log keys objectkeys foo", "d": "11/2016"}, {"body": "believe duplicate review confirm", "d": "11/2016"}, {"body": "thanks lot response rwjblue first also thought may duplicate issue mentionend think slightly different value set enumerable soon declared property see edited demo declared call always return empty array return value set correctly declared set via guess", "d": "11/2016"}, {"body": "herom cloned jsbin set version see output object property available via looks like bug", "d": "11/2016"}, {"body": "thanks lot pixelhandler totally forgot jsbin working solution", "d": "11/2016"}, {"body": "short sumup different code samples order understandreproduce bug better readability working demo without emberobserver ember canary rwjblue working fully reproduce issue lacking failing demo emberobserver ember canary herom working fully reproduces issue working demo emberobserver ember pixelhandler working fully reproduces issue", "d": "11/2016"}, {"body": "moved guides repository", "d": "11/2016"}, {"body": "error message added cc nathanhammond", "d": "11/2016"}, {"body": "easier discussion question js routermap function thisroute posts resetnamespace true function thisroute thisroute users resetnamespace true function thisroute posts resetnamespace true function", "d": "11/2016"}, {"body": "created behavior route map would take answer whichever one defined second though guaranteed implementation detail route map incorrect becomes way get except direct navigation via url something consider obviously wrong want alert users mistake earlier rather later thus addition error", "d": "11/2016"}, {"body": "nathanhammond maybe keep track ie object list seen routes ember side also provide better assertionerror message", "d": "11/2016"}, {"body": "could move gets invoked", "d": "11/2016"}, {"body": "trying postsshow nested users goes userspostsshow postsall goes postsall top level want keep templates posts folder linking postsshow want canary since get resetnamespace error need remove resetnamespace inner posts route nested users longer access showhbs posts folder still route nested users need move postsusersshowhbs need replace instead get similar behavior equivalent changes needed get working canary guess trick basing routes second wins behavior wondering similar way trying achieve mainly keep posts templates posts top level folder nest folders makes easier navigation opinion keep posts link linkto postsshow still url route userspostsshow instead linkto userspostsshow", "d": "11/2016"}, {"body": "agree leveraging hacky behavior previously believe pattern continue supported asking quite seriously curious opinion believe looking address item item nt believe worth trying solve confuses going", "d": "11/2016"}, {"body": "nathanhammond addressing templatename would fix issue could keep templates location would cause route file routesuserspostsshowjs instead routespostsshowjs controller controlleruserspostsshowjs instead controllerpostsshowjs feel little bit downside since like posts folder relevant files instead sprinkling around know could stuff importing exporting get around necessary could live changing linkto fully qualified path name userspostsshow resetnamespace sort nice shorten could go either way previously liked could layer resetnamespaces multiple nested layers act top level linktofile layer uncommon changing apps would interested see others chime next weeks people test canarybeta comes", "d": "11/2016"}, {"body": "monitor pretty strongly opinion combinatorially relying unspecified untested implementation details lessfrequently used features introducing deliberately broken code paths happens application user directly visits presented feature literally works coincidence nt intended one advantages ember brings sit anybody project immediately productive clever abuse ember resolves modules combination handles routing subverts goal except familiar users could also set custom resolver wished", "d": "11/2016"}, {"body": "use route catch note documented", "d": "11/2016"}, {"body": "covered anywhere guides also explanation asteriskcolon syntax mon nov btecu notifications githubcom wrote use route catch thisroute fourohfour path receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "nt know guides documented link included nt name see example documentation", "d": "11/2016"}, {"body": "mentioned covered routing section guides questions accomplish good community presence stackoverflow help channel slack group", "d": "11/2016"}, {"body": "oh sorry missed link first comment thanks lot sorry trouble", "d": "11/2016"}, {"body": "problem seems like btecu added link github sent email notification would nt seen visited website", "d": "11/2016"}, {"body": "makes sense indeed read comment email thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "nightire right aware address casebycase basis situations nondeterministic number properties yield", "d": "11/2016"}, {"body": "bcardarella simple answer yield represent whole component recommended component reality component author provide fixed amount properties actions outside world otherwise users know properties actions use users know currently valid value example think", "d": "11/2016"}, {"body": "nightire right issue need pass nondeterministic number properties pass object using helper let control curate public api component thank", "d": "11/2016"}, {"body": "nt believe takes two arguments", "d": "11/2016"}, {"body": "created example using suspect may appropriate given provide appear work maybe example serve starting point reproduction issue", "d": "11/2016"}, {"body": "tried times create whenever tried find way save emptied code strange may bug nt really within control said ember community maintain think works quite nicely", "d": "11/2016"}, {"body": "stefanpenner heh sorry waste time put comma instead apparently need break coding amp cup coffee doh", "d": "11/2016"}, {"body": "apparently need break coding amp cup coffee doh often problem nt caffeinate", "d": "11/2016"}, {"body": "ya likely mucked thank reporting", "d": "11/2016"}, {"body": "released correct assets sorry issue delay", "d": "11/2016"}, {"body": "awesome thanks seems fine", "d": "11/2016"}, {"body": "backspace would mind adding specific steps reproduce bug description", "d": "11/2016"}, {"body": "sure bug happens run travisweb visit", "d": "11/2016"}, {"body": "repro comes two bugs template without controller defined makes ed template since attempts inherit host location generated none found assumes receives object calls unconditionally object passed context triggers calling", "d": "11/2016"}, {"body": "jasonmit see discussion similar issue related change", "d": "11/2016"}, {"body": "thanks close one", "d": "11/2016"}, {"body": "still think make assertion key passed emberget empty string would least made logic issue embercountvalidations easier track", "d": "11/2016"}, {"body": "saw article seems work test code test import destroyapp helpersdestroyapp import describe beforeeach aftereach mocha import expect chai import startapp helpersstartapp import authenticatesession helpersembersimpleauth import page tinytestspagescourses describe acceptance courses gt let application beforeeach function velocitymock true application startapp authenticatesession application data attributes fullaccess true accesstoken aftereach function destroyapp application clone course async function const activity servercreate activity", "d": "11/2016"}, {"body": "hi gcorbel reserve issues bugs ember closing since feature request feature request requires feature go rfc process afaik nothing planned actions currently lucky us rfc testing includes support asyncawait emberjsrfcs change would probably require open rfc might interested ember concurrency well thank", "d": "11/2016"}, {"body": "thanks fast answer already saw emberconcurrency compatible ember hooks", "d": "11/2016"}, {"body": "gcorbel hooks ec incompatible", "d": "11/2016"}, {"body": "dwickern create working code example demonstrate issue perhaps embertwiddle", "d": "11/2016"}, {"body": "jordpo posted repro ember slack jquery ember test filter acceptance ok phantomjs acceptance authlogin visiting authlogin actual gt authlogin expected gt dashboard stack gt andthen isolate trycatch invokecallback publish invoke flush flush end run run log ok phantomjs jshint acceptanceauthlogintestjs pass jshint ok phantomjs jshint helpersmoduleforacceptancejs pass jshint tests pass skip fail jquery bower install jquery amp amp ember test filter acceptance ok phantomjs acceptance authlogin visiting authlogin ok phantomjs jshint acceptanceauthlogintestjs pass jshint ok phantomjs jshint helpersmoduleforacceptancejs pass jshint tests pass skip fail ok", "d": "11/2016"}, {"body": "actually also issue using regular methods since upgrading tests jquery ajax requests cause tests fail either tests failing even though step line debugger conditions visually met getting error weird wrapping ajax request rsvp promise nt incompatibilities know code", "d": "11/2016"}, {"body": "validkeys confused well thought wrapping jquery promises rsvp promises would solve problem nt help nt wait jquery promises rsvp promises resolve fire changed code like would work let isrunning false embertestregisterwaiter gt isrunning", "d": "11/2016"}, {"body": "dwickern current release ember seems indicate jquery supported see however appears jqueryajax may compatible wait test helpers", "d": "11/2016"}, {"body": "dwickern tried make embertwiddle example see ca nt get test feature work acceptance test", "d": "11/2016"}, {"body": "pixelhandler looks like might related twiddle nt updated embercliqunit", "d": "11/2016"}, {"body": "dwickern repo working emberfetchjax uses fetch ajax repo using jquery ajax use wrap jqueryajax promise acceptance tests seem work fine behavior think various options use jquery wrap use addon perhaps migrate fetch polyfill file xhr long nt need cancel request addon example could use progressively migrate use fetch makes sense use ajax still need", "d": "11/2016"}, {"body": "thank feedback jkole moved proper repository", "d": "11/2016"}, {"body": "workmanw find odd using controller routes would possible inject service routes controllers need use route setupcontroller method provide properties various templates need", "d": "11/2016"}, {"body": "pixelhandler yea talked workaround strategy initial report core reason nt done queryparams nt good option service cleaning get set queryparams using controller much natural queryparams involved issue ultimately deemed something wo nt fix switch using service use private apis talk router edit btw clear happy use workaround agree little weird already submitted weird issues like past part comes nearly year old ember app dang years coming soon goal simply report unexpected changes see betacanary builds thanks embertry help get ball going quicker resolutions perfectly understand shedding old crufty apis", "d": "11/2016"}, {"body": "wanted add also seeing main production app moving probably stop sharing controller two routes inject parent controller prop child controller", "d": "11/2016"}, {"body": "quite sure yet running builds get errors due calling calls running builds skip call errors production config quick tour stack embercanarytravisciorg ember codebase makes think related references configenterprise templates nt dug much deeper figure", "d": "11/2016"}, {"body": "hmm well presumably comes faux pas reference config templates like decision predates addition feature flags maybe could used instead see place templates", "d": "11/2016"}, {"body": "yall seems fine brain dump findings debugging session", "d": "11/2016"}, {"body": "backspace fix", "d": "11/2016"}, {"body": "true excellent thank sadly getting another seemingly related different stacktrace open another issue", "d": "11/2016"}, {"body": "nathanhammond wonder go rfc process instead", "d": "11/2016"}, {"body": "thing could simply create new feature flag single line code almost question want", "d": "11/2016"}, {"body": "stefanpenner yes", "d": "11/2016"}, {"body": "sweet", "d": "11/2016"}, {"body": "ah one remaining believe could already global scope", "d": "11/2016"}, {"body": "looks like bunch docs nt moved yet small list likely things though also reviewing seems indeed private ember probably fix change blueprint", "d": "11/2016"}, {"body": "merged", "d": "11/2016"}, {"body": "noticed regression production app well tried moving error still looking right", "d": "11/2016"}, {"body": "adamknights hey adam created pr see", "d": "11/2016"}, {"body": "thanks serenaf hadnt found time yet", "d": "11/2016"}, {"body": "help", "d": "11/2016"}, {"body": "closed", "d": "11/2016"}, {"body": "backspace sorry", "d": "11/2016"}, {"body": "whoops forgot keeping open someone add info docs", "d": "11/2016"}, {"body": "believe krisselden fix inmind", "d": "11/2016"}, {"body": "interchange new create nt know want total interchangeability example many legacy concepts like following code would love consider new start concepts p", "d": "11/2016"}, {"body": "agree zackthehuman last comment", "d": "11/2016"}, {"body": "yup page much zackthehuman pr cleanup think still applied", "d": "11/2016"}, {"body": "yes would work perfectly thank report", "d": "11/2016"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "11/2016"}, {"body": "helper rerenders dom took look appears issue contains helper looses diffing semantics reason following true although appears fixed beta fixed stable stable unstable", "d": "11/2016"}, {"body": "good news appears fixed current beta released", "d": "11/2016"}, {"body": "unclear fix old versions backporting nt option although may possible separate fix created older versions like lts releases need chat figure", "d": "11/2016"}, {"body": "believe would likely take quite bit effort figure fix htmlbars someone interested absolutely entertain help review pr doubt core team folks much time try figure gut feeling leave open close fixed", "d": "11/2016"}, {"body": "also lts think fixing could break folks unwittingly relying bug way entire cycle ok fix targeting review decided low risk really ok backporting", "d": "11/2016"}, {"body": "alright milestone set close lands", "d": "11/2016"}, {"body": "chancancode running moment users still seem hitting error ca nt reproduce locally unfortunately", "d": "11/2016"}, {"body": "getting error testing ghostadmin tried going well result", "d": "11/2016"}, {"body": "acburdine able reproduce consistently could write instruction reproduce", "d": "11/2016"}, {"body": "yup happens every time render page repro steps get ghost set update ghostadmin visit index page gt post currently drilling cause think got narrowed specific component template", "d": "11/2016"}, {"body": "think figured component mentioned using old code borrowed embercliactivelinkwrapper assuming broke updating use actual embercliactivelinkwrapper addon fixed issue", "d": "11/2016"}, {"body": "hmm using app users still hitting error nt able reproduce possible addon still funky stuff", "d": "11/2016"}, {"body": "krisselden follow issue closed thank", "d": "11/2016"}, {"body": "discussed core team call support reuse view views deprecated moved addon support removed may happened work work support non trivial deprecate private api plans support api ongoing work make first class allows data flow render continue tree even though subtree placed elsewhere believe satisfies use case", "d": "11/2016"}, {"body": "future travelers issue turns affect significant number users consider revisiting decision", "d": "11/2016"}, {"body": "still interested pr", "d": "11/2016"}, {"body": "closing think largest issue fixed continue iterate pain around", "d": "11/2016"}, {"body": "kellyselden going close favor pr reproduction thanks keeping oil burning", "d": "11/2016"}, {"body": "chancancode checked twiddle using partial still seems broken", "d": "11/2016"}, {"body": "checked twiddle using hasblock partial still seems broken using partial also nt work failing test anything help please let know", "d": "11/2016"}, {"body": "simonihmig gavinjoyce sorry delay fixed", "d": "11/2016"}, {"body": "thanks chancancode passing test feel like coverage ember land useful", "d": "11/2016"}, {"body": "thanks chancancode well changes indeed fixed problem first twiddle demonstrated however extracted addon first observed bug running build addon new error appeared time runtime exception within glimmer filed new issue", "d": "11/2016"}, {"body": "closed", "d": "11/2016"}, {"body": "added", "d": "11/2016"}, {"body": "also reported", "d": "11/2016"}, {"body": "closing favor", "d": "11/2016"}, {"body": "sure seems good call happy review pr", "d": "11/2016"}, {"body": "reproduce since notmessenger still issue", "d": "11/2016"}, {"body": "notmessenger upgrading ember work resolve issue", "d": "11/2016"}, {"body": "serabe pixelhandler upgrading resolves issue sorry nt get sooner", "d": "11/2016"}, {"body": "happened upgrading ember replaced working thanks tips cibernox", "d": "11/2016"}, {"body": "fivetanley improving error message sounds good know krisselden stefanpenner workflow tracking issues maybe help give directions", "d": "11/2016"}, {"body": "joukevandermaas runnext great fix error though understand overwhelmed errors would go best try understand back flow data invalidating things already rendered likely set props service could injected onto component increases chances set invalidating something already rendered general pattern set used internal state rendering hooks tied input services set used event input state settled time stuff renders", "d": "11/2016"}, {"body": "joukevandermaas runnext great fix error cause performance issues case informing duplicate work happening really nt want want performant app previously ember would absorb result heft performance penalty knowledge sharing work todo ultimately believe healthy path forward apps need make sure everyone tools knowledge available benefit", "d": "11/2016"}, {"body": "person follows ember goings relatively closely twitter github mailing lists etc issue snuck would suspect might catch others surprise lands part ember particularly deprecation warning associated specifically states behavior supported nt believe seen socialized anywhere behavior work glimmer although may simply missed", "d": "11/2016"}, {"body": "suspect might catch others surprise lands part ember particularly deprecation warning associated specifically states behavior supported nt believe seen socialized anywhere behavior work glimmer although may simply missed yup need improve messaging details", "d": "11/2016"}, {"body": "see made release mentioned release blog post", "d": "11/2016"}, {"body": "chancancode pretty hard time trying fix deprecations app lot deprecations point emberglimmer internals make difficult decipher exactly deprecation triggered screenshot one example debugging curve pretty hard making assertion would prevent us upgrading without someone knows internals ember metalglimmer fairly well agree correct behavior going forward would like help least try make messaging better time provide guidance", "d": "11/2016"}, {"body": "messages also happen rerender queue meaning get scheduled far away property actually changed often removes ability follow stack figure thing changed causing rerender", "d": "11/2016"}, {"body": "bad comments belonged instead", "d": "11/2016"}, {"body": "fivetanley congrats landing job heroku", "d": "11/2016"}, {"body": "jdenly still happening stefanpenner way help thank", "d": "11/2016"}, {"body": "stefanpenner way help well may need get reproduction order see leak work around side honestly bandwidth fairly low especially seems like sort browser bug may want try reach ie team members see lend hand", "d": "11/2016"}, {"body": "flagged", "d": "11/2016"}, {"body": "rwjblue believe allows us close", "d": "11/2016"}, {"body": "sounds good thanks", "d": "11/2016"}, {"body": "done beta shortly", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "ya prefer static method form public lets pursue rfc though adds new public api closing issue", "d": "11/2016"}, {"body": "perlun anyone else interested came solution using two simple components works ember updates template gist", "d": "11/2016"}, {"body": "repro passing betacanary", "d": "11/2016"}, {"body": "alexspeller think something might still broken attempting set default query param want visible url make call action route works expected sure controller set correctly queryparams work transition elsewhere also tried canary", "d": "11/2016"}, {"body": "bgentry suspect issue seeing query param specific would likely justify separate issue would mind making one", "d": "11/2016"}, {"body": "rwjblue opened", "d": "11/2016"}, {"body": "allowedkeys defaulting tbh nt think valid reason likely added later changing default would breaking change best way add action external link basis updating guides agree amp seem best options going crazy adding actions links nah seems like good thing cases want track given thing reviewed even opened new tab applicable guides api doc updates seems great going close nt think bug unintuitive behaviors need thoughtcare use together", "d": "11/2016"}, {"body": "going close nt really cause problems practice far", "d": "11/2016"}, {"body": "anyone seen reference new api since may", "d": "11/2016"}, {"body": "toobulkeh rfc changes meanwhile recently merged accepted implementation work started", "d": "11/2016"}, {"body": "fyi using cheatyhacky method discovered robbiespeed way successfully use transitionto component context rather route need pass parameter also new api actually come someone teaches better method need used", "d": "11/2016"}, {"body": "cc nathanhammond", "d": "11/2016"}, {"body": "mmun slack expect behaviour different nt consume anything path wrapping set paths behaviour eg authentication user expect able write something like use fooauthbarauth house authentication redirects also expect able define root level indexhbs", "d": "11/2016"}, {"body": "perfect runtime error glimmer much better ember ember", "d": "11/2016"}, {"body": "awesome thanks gavinjoyce", "d": "11/2016"}, {"body": "still happening worked fine failed using method yielded result place order get work set route hash follows painful nt actually want refresh model model perfectly fine change variations code work fine although nt actually replace history item", "d": "11/2016"}, {"body": "think running addon built one components addon property called referenced component template one consuming apps another addon installed defines helper seems like case inconveniently named helper way disambiguate property references template protect problem", "d": "11/2016"}, {"body": "use get local property", "d": "11/2016"}, {"body": "considering afraid usage might go away future bc nt see docs anywhere anymore thanks", "d": "11/2016"}, {"body": "guess global first local second resolution something aware naming properties makes little afraid add libraries like awesome embercomposablehelpers reasonably sized project makes many simple words unavailable presentation components", "d": "11/2016"}, {"body": "tend agree jayphelps happy continue discussion pr someone wants push forward since nt movement interest going go ahead close", "d": "11/2016"}, {"body": "twiddle link twiddle work update btw giving solution whoever comes javascript actions upload function event consolelog upload", "d": "11/2016"}, {"body": "kanongil currently like elaborate directory", "d": "11/2016"}, {"body": "redsandro method nt work", "d": "11/2016"}, {"body": "thank reporting working properly betacanary", "d": "11/2016"}, {"body": "wow ca nt believe missed issue completely terribly sorry novtor pretty good amount cleanup related query params last weeks would able whip embertwiddlecom emberjsjsbincom reproduces see fixed", "d": "11/2016"}, {"body": "working properly betacanary update jsbin", "d": "11/2016"}, {"body": "nt think work though understand confusion look controller specific route jsbins case would determine query param values separate concern templates render going go ahead close think bug still continue conversation like", "d": "11/2016"}, {"body": "future googlers tripped ember make sure remove newlyadded", "d": "11/2016"}, {"body": "fixed ember", "d": "11/2016"}, {"body": "fixed demo", "d": "11/2016"}, {"body": "glennsl still interested think pr small targetted fix would great", "d": "11/2016"}, {"body": "hi raytiley using emberjs experienced bug recently bug triggered bug fixed emberjs", "d": "11/2016"}]