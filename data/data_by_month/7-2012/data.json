[{"title": "modelon change key never fires", "body": "hi issues months ago figured bug nt really need back today tried recent backbonejs version far see still nt work coffee modelon change task gt consolelog never fires modelon change gt consolelog always fires modelset task figure wo nt fire gt always fires according backbonejs documentation invoke bindings binding idea wo nt fire info greatly appreciated thanks", "num": "1516", "d": "7/2012"}, {"title": "store model arrayattributes backbonecollection", "body": "hi think bad idea store raw arrays backbonemodelattributes missing lot tools way add remove etc working hack converts raw arrays server backbonecollection vice versa would allow handling references embedded documents much easier chance official backboneproject would accept seperated regards", "num": "1515", "d": "7/2012"}, {"title": "modelchange call validate", "body": "methods change attributes call validate set create change nt feature", "num": "1514", "d": "7/2012"}, {"title": "got complicated issue", "body": "issue backbonejs beat sick", "num": "1513", "d": "7/2012"}, {"title": "optional parameters splats routes", "body": "could nt find searching issues assume github search poor must suggested would really nice backbone router supported optional parameters routes potentially optional splats although nt care either way way crossroadsjs supports seems nice potential syntaxes reasons one biggest problems using router nt seem like edgecase know use regex writing place gets tedious really hard maintain instead write one reread", "num": "1508", "d": "7/2012"}, {"title": "easier attaching model events view", "body": "currently backbone views simple way binding events el children awesome leaves common scenario view binding events model currently done manually inside init somewhere similar apply mechanism models collections would work naturally similar ticket following arguments made idea like dispute often view listening events one two three models two three collections nt see backbone ditching support optionsmodel optionscollection view could use multiple modelscollections right making things better usersuse cases nt hurt rest way usually nt many distinct events listened single view often change common change hookup providing convenient way would make library better plus plenty cases people bind multiple model events eg change foo change bar change baz importantly unlike views dom views nt type objects listen model events models also listen controller objects right jquery provides way bind events backbone stay event business right course views listen model events ton make particular binding harder possible way binding events exists", "num": "1507", "d": "7/2012"}, {"title": "backbonejs regulated good", "body": "many developers confused pull requests fails", "num": "1506", "d": "7/2012"}, {"title": "make eventsplitter public", "body": "require event splitter nt split spaces spaces meaning events propose change api", "num": "1504", "d": "7/2012"}, {"title": "browsers supporting", "body": "hi first apologies wrong place ask unable find definitive answer anywhere reference browser stats july active users firefox see old versions ie still radar us due audience serve intranet site either work large enterprise health care entities come across backbone looks something might use upcoming work tried test suite failed two tests seen forum comments ie support drawing line thanks everything really appreciate efforts steve", "num": "1502", "d": "7/2012"}, {"title": "enhancement historynavigate support stateobj", "body": "would nice backbone supported passing statobj windowhistorypushstate via backbonenavigate options right use backbonenavigate windowonpopstate callback always emits popstateeventstate null way distinguish chromesafari firing event page load vs user actually pressing backforward", "num": "1501", "d": "7/2012"}, {"title": "ca nt call collections", "body": "hi ca nt call backbonecollection call nothing happens usermodel define jquery underscore backbone function backbone usercollection define jquery underscore backbone modelsuser function backbone usermodel call view search function e ulcontactlist li remove assume bug also tried using without success", "num": "1500", "d": "7/2012"}, {"title": "saving unchanged model call success callback", "body": "thismodelsave success function consolelog saved code nt make changes model modelsave calls success handler called seems like bug save still goes request server like ajax call check success use code var save thismodelsave success function consolelog saved savesuccess function consolelog saved success handler attached jqxhr still works", "num": "1499", "d": "7/2012"}, {"title": "create add inconsistent return values", "body": "really annoying add nt return fully hydrated model added collection means bunch hoops need jump get add yet create returns model inconsistant rather annoying", "num": "1496", "d": "7/2012"}, {"title": "bug attributes inherited objectprototype", "body": "coffeescript john new backbonemodel new backbonemodel constructor john constructor gt true new backbonemodel constructor gt true wtf", "num": "1495", "d": "7/2012"}, {"title": "bugdocumentation issue event", "body": "either bug intended functionality documentation issue event docs state onchange callback events objectoff null onchange removes callbacks events objectoff null null context removes callbacks objectoff problem ever pass null first argument actually remove event listeners collectionrelated event listeners well models way works way described code snippet states event specified event callbacks object removed personally like possibility removing event handlers given context understand requirements imposes", "num": "1494", "d": "7/2012"}, {"title": "viewremove causes uncaught rangeerror maximum call stack size exceeded error", "body": "using viewremove remove view dom causes uncaught rangeerror maximum call stack size exceeded error using thisel remove seems work though", "num": "1491", "d": "7/2012"}, {"title": "attributes prefixed synced localstorage instead sent server", "body": "like client specific variables named attribute would nice automatically sync localstorage crud commands instead sending server", "num": "1489", "d": "7/2012"}, {"title": "nt always return", "body": "want avoid hookingup redundant handlers handy able however latest version backbone simply returns undefined rather returning breaks attempt chain call like code since would trivial change please", "num": "1487", "d": "7/2012"}, {"title": "extend issue chrome devm", "body": "find issue caused code executed error think issue may caused latest chrome stable u use simple api assign value may secure like thanks", "num": "1485", "d": "7/2012"}, {"title": "parse happens initialize", "body": "collection thisadd data parse true start calling parse initialize", "num": "1482", "d": "7/2012"}, {"title": "documentation overhaul", "body": "intermittent holes backbonejs docs pamelafox pointed one collectionsort options unclear docs respects one option also mentioned options object passed reset event silent false expect behaviour understand documentation backbone user think docs unclear new users maybe looking backbone method doc first time one problem incomplete documentation second problem hard parse option object properties middle sentence like propose backbone docs methods accept options objects options delineated table outside prose content method scrutinized documentation coverage get get started week", "num": "1481", "d": "7/2012"}, {"title": "extended classes reference object extended class", "body": "following example thisajax search collection references object photosearch videosearch normal behaviour creating new instance photosearch videosearch see share reference ajax javascript var search backbonecollectionextend var videosearch searchextend var photosearch searchextend var videosearch new videosearch var photosearch new photosearch consolelog videosearchajax photosearchajax true", "num": "1480", "d": "7/2012"}, {"title": "method bindroutes chrome dev", "body": "lastest chrome dev backbone test suite global failure backboneevents global failure rerun bug chrome", "num": "1479", "d": "7/2012"}, {"title": "unexpected change events save wait true", "body": "think different without wait true javascript backbonesync function method model options var data modeltojson settimeout function optionssuccess extend id b c true data var backbonemodelextend new afetch success function aon change function model evt consolelog keys evtchanges aon change id function model data consolelog change id data settimeout function consolelog wait asave b settimeout function consolelog wait true asave b wait true result use wrong way bug", "num": "1478", "d": "7/2012"}, {"title": "collectionreset never run validate", "body": "code added causing return immediately upon silent true passed tell added never tested regards reset bug mentions forcing discussion feeling fetchsave always triggering validate causing slowness", "num": "1477", "d": "7/2012"}, {"title": "fetch allow optional url parameters passed", "body": "find backbone code need pass url parameters fetch method collections example use cases pinterestlike autoloading feature grab additional items entire list would need pass parameters letting server know models already loaded client setup comboboxes first one state one autoloading cities based state chosen would need pass state name cities controller get back appropriate cities server created mixin use code think would beneficial relatively easy add backbone source code backboneparamfetchcollection backbonecollectionextend", "num": "1476", "d": "7/2012"}, {"title": "uncaught typeerror google chrome canary", "body": "latest couple google chrome canary builds throws error might chrome issue might worth investigation avoid ending one stable builds chrome breaking change chrome repro go open chrome devtools console type hit return", "num": "1475", "d": "7/2012"}, {"title": "collectionfetch fires reset rather fetch docs issue", "body": "states resets model state server delegating backbonesync returns jqxhr useful model never populated data like ensure latest server state change event triggered server state differs current attributes tried seeing change event first issuing fetch seeing reset event though wrong code docs", "num": "1470", "d": "7/2012"}, {"title": "attribute doms backboneview", "body": "gt javascript var appview backboneviewextend doms newtodo input main main", "num": "1469", "d": "7/2012"}, {"body": "check", "d": "7/2012"}, {"body": "realize done way presents certain problems see avoid problems first method outlined could used however rather use awkward syntax got braces lying around method could used provide much cleaner syntax", "d": "7/2012"}, {"body": "nt present many problems want call super certainly call super coffeescript", "d": "7/2012"}, {"body": "okay cool thought would make things little simpler large number use cases really want call super", "d": "7/2012"}, {"body": "nevermind seems remove another library stack libraries including work see exactly causing problem", "d": "7/2012"}, {"body": "nt seem like great idea using collections attributes usually custom bit functionality needed specific problems want easy access lot array methods something nt actually collection wrap array underscore object parse", "d": "7/2012"}, {"body": "hi bodokaiser thanks opening issue model attributes array values tricky agree nearly always bad idea collection usually better option however method something backbone stays neutral putting squarely plugin territory thanks asking", "d": "7/2012"}, {"body": "anthonyshort hi good hint also wrap array underscore collection braddunbar okay understand descision", "d": "7/2012"}, {"body": "hi ichernev definitely working intended method mutates attribute state even behest another method specific methods change attributes call need validate attributes since neither need validate hope helps", "d": "7/2012"}, {"body": "one complicated situation yo think could wrap var beat eval get great result", "d": "7/2012"}, {"body": "think limiting optional parameters end route would completely normal limitation seeing probably nt throwing optional parameters randomy would eliminate edge cases assume nt added tell limitation additions limited javascript two extra regex helpers var leadingoptionalnamedparam w g var optionalnamedparam w g replace optionals first route routereplace escaperegexp amp replace leadingoptionalnamedparam replace optionalnamedparam replace namedparam replace splatparam guys think edge cases missing", "d": "7/2012"}, {"body": "another solution might separate way optional elements route made idea named params brackets denoting optional pieces wrapped around anything route definition would look like instead add following code javascript var optionalparam g later replace optionalparam seems like better solution actually cuz less magicful nt weird edge cases type instead perfectly fine thing regex escaping happens would need handle differently chosen syntax", "d": "7/2012"}, {"body": "regardless whether good idea general would odd represent bindings actual js objects string syntax let say wanted bind change event presumably write would mean extracting string evaling determine refers pretty gross reason makes sense use strings dom events lowerlevel methods backbone via jquery relies addeventlistenerattachevent take strings arguments", "d": "7/2012"}, {"body": "valid issue", "d": "7/2012"}, {"body": "seriously darn nonchalance comes pull requests starts get issue many developers wonder looking solutions", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "hi boxxxie rather interesting sure good idea need events spaces use underscores instead", "d": "7/2012"}, {"body": "simplicity sake however went edited event splitter assigned worked backbone creating events properly however backbone nt able let multiple event listeners object looks like suggestion break event system propose event system refactored would work someone wanted control eventsplitter clear eventsplitter changes event system break least experienced", "d": "7/2012"}, {"body": "simplicity sake make things simpler event names spaces", "d": "7/2012"}, {"body": "things users enter db use raw keys models also common write testing functions keys human readable sentences", "d": "7/2012"}, {"body": "see would recommend use different approach common likely comes several problems fragmenting event separators help backbone code interoperable nt pass standard litmus test features useful backbone users", "d": "7/2012"}, {"body": "mornin stevehurcombe nt know official support document knowledge backbone supports latest version chrome safari firefox opera also mobile browsers supported though nt know ones nt seen discussion support older versions though nt think would major issues please let us know help bugs old browsers get considerably less reports since used often", "d": "7/2012"}, {"body": "hi brad good know case rerun tests report back honest nt know significance may showstoppers may extreme edge cases wo nt disturb us", "d": "7/2012"}, {"body": "oh forgot mention failing tests master part ongoing effort improve test coverage routerhistory functionality believe fixed", "d": "7/2012"}, {"body": "hi tomkit thanks opening issue discussed tangentially backbone takes stance pushstate api broken way use well ignore first two arguments disagree previous reasons ignoring arguments please respond reevaluate", "d": "7/2012"}, {"body": "async try adding success callback options fetch consolelog good dealing async stuff try consolelog contactsmodels see shows anything also collections method builtin try", "d": "7/2012"}, {"body": "hi", "d": "7/2012"}, {"body": "documentcloud irc channel good place get help kind stuff documentcloud channel", "d": "7/2012"}, {"body": "thank link look around next time var contacts new usercollection contactsurl users username etarget val contactsfetch add true remove true success function contacts contactseach function contact consolelog contact ulcontactlist append contactget username", "d": "7/2012"}, {"body": "hi joezimjs thanks opening issue problem accepts two arguments attributes options nt provide attributes pass instead give following shot", "d": "7/2012"}, {"body": "awesome thanks", "d": "7/2012"}, {"body": "hi kav need reference model always listen event create adding like goes groups models reason wo nt work", "d": "7/2012"}, {"body": "well introduces extra callback flow otherwise would nt need thus functions create outside collection return model use collections need callback otherwise inconsistent thus seems strange remember tripping year ago getting way wednesday july pm brad dunbar wrote hi kav need reference model always listen event create adding like goes groups models reason wo nt work reply email directly view github", "d": "7/2012"}, {"body": "thus functions create outside collection return model use collections need callback would need callback", "d": "7/2012"}, {"body": "sorry looking listen add based solution wo nt work attributes nt include id guarantee object returned one created could store ids cids collection intersect post create ids cid list massive hack", "d": "7/2012"}, {"body": "sorry nt quite follow would mind posting code illustrates objective", "d": "7/2012"}, {"body": "much need workaround mean hell change return value add fork backbone codebase inconsistent across core collection operations particular reason subpar design therefore bug sure work around return value switched match rest core operations change anyone relying current behavior would trivial xadd add b xadd xadd b meanwhile workaround sans forking convoluted rather ugly make sense", "d": "7/2012"}, {"body": "codebase inconsistent across core collection operations particular reason disagree entirely different purposes perfectly natural return values different particular meant persist new model server meant insert models collection creating models passing workaround bug appropriate action given need reference said would like post code illustrating situation desired api glad take look", "d": "7/2012"}, {"body": "add models collection one also happens persist server nt make entirely different intend wait persisting model create add nt make sense example one create case model collectioncreate name foo stuff model add case model collectionadd name foo stuff model persisting goes initialize validate modelsave whenever decide persist today collection collectionadd name foo lt world helpful already collection reference reason might need chaining nt suggested use case hand nt reference hydrated model get need jump bunch hoops give back thing nt already rather one", "d": "7/2012"}, {"body": "whole bunch issues well ideas patch using", "d": "7/2012"}, {"body": "using cases like check support use supported oneline patch patch support old ie much sophisticated placed everywhere etc", "d": "7/2012"}, {"body": "fwiw annotated source code say remove one many callbacks context null removes callbacks function callback null removes callbacks event events null removes bound callbacks events code works code commented respect argument null", "d": "7/2012"}, {"body": "hi thanks opening issue agree documentation could clear addressed", "d": "7/2012"}, {"body": "hey braddunbar actually meant comments inline code snippet says removes callback events removes callbacks events two examples equal example removes callbacks edit regard actually function run", "d": "7/2012"}, {"body": "code snippet says removes onchange callback events removes callbacks context events two examples equal example removes callbacks object would nt say equal despite fact passes nullundefined arguments certainly different maybe missing something response onchange callback events objectoff null onchange removes callbacks events objectoff null null context removes callbacks objectoff", "d": "7/2012"}, {"body": "braddunbar actually sorry nt changes event although documentation confusing closely resembled code snippet reflected exactly actually works thanks upgraded", "d": "7/2012"}, {"body": "glad could help", "d": "7/2012"}, {"body": "hi nrmitchi thanks opening issue since viewremove equivalent thisel remove would guess provided view correct", "d": "7/2012"}, {"body": "yes simply used thisel remove function instead", "d": "7/2012"}, {"body": "see would mind posting code could look", "d": "7/2012"}, {"body": "think may misunderstood initial question response write way removing view simply used thisel remove instead thisremove shortcut relevant components view javascript events click removeicon remove remove function thisel remove thisremove using thisremove opposed thisel remove producing error", "d": "7/2012"}, {"body": "issue overwritten function calling within cause infinite loop stack overflow try instead js var view backboneviewextend events click removeicon remove remove function thisremove", "d": "7/2012"}, {"body": "realized thank sorry inconvenience", "d": "7/2012"}, {"body": "problem glad could help", "d": "7/2012"}, {"body": "sounds cool go backbone nt anything localstorage directly", "d": "7/2012"}, {"body": "hi machineghost believe already changed grab latest master", "d": "7/2012"}, {"body": "awesome thanks", "d": "7/2012"}, {"body": "dupe also presents solution switch canary daily builds rather dev channel weekly builds", "d": "7/2012"}, {"body": "yep think vincentbriglia right please direct comments thanks reporting zjhiphop", "d": "7/2012"}, {"body": "hi butuzgol called canonical parsed representation model used initialize model attributes opposite order would cause attributes change opportunity reinitialize model", "d": "7/2012"}, {"body": "confusing parse available options paragraphs text", "d": "7/2012"}, {"body": "would nice options broken default clear libraries handle different kinds options objects eventoptions xhroptions etc document shared options signatures single place rather repeatedly might might practical", "d": "7/2012"}, {"body": "also add todo list breakdown events may triggered method arguments passed happy help workload standard docs format agreed", "d": "7/2012"}, {"body": "options arguments documented correctly also enjoy prosaic nature docs would rather replaced giant page tables lists said objectives satisfied better", "d": "7/2012"}, {"body": "catch lot people included confused events thrown exactly braddunbar agreed explicit documentation nt mean ca nt read well personally enjoy twitter bootstrap documentation everything lots examples nt look like reading bunch auto generated docs", "d": "7/2012"}, {"body": "seems scope separate communitymaintained project fully explicitly rigourously document backbone would nt necessarily need perhaps nt official docs braddunbar correctly said simplicity minimalist nature docs great terms getting grips basics quickly easily nt mean nt valid use case finetoothedcomb version", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "point actually setting either videosearchajax photosearchajax since contained within function bodies nt called set default ajax specified base search object notice also returns true", "d": "7/2012"}, {"body": "could sworn videosearchajax photosearchajax search function called life replicate", "d": "7/2012"}, {"body": "well let us know manage reproduce", "d": "7/2012"}, {"body": "update many site backbone", "d": "7/2012"}, {"body": "hey chuangbo fairly certain issue latest chrome details including chromium bug seems fixed already", "d": "7/2012"}, {"body": "many thanks braddunbar", "d": "7/2012"}, {"body": "getting kind error help would great", "d": "7/2012"}, {"body": "tgriesser recently pointed proposed good solution appear regression thinking best way solve", "d": "7/2012"}, {"body": "note actually bug silent changes still trigger", "d": "7/2012"}, {"body": "braddunbar new ideas looking little day still ca nt come cases patch nt generate expected result solutions would involve heavily reworking functions", "d": "7/2012"}, {"body": "collection constructor place internally call reset passes silent true confident fix remove silent true forced reset", "d": "7/2012"}, {"body": "nt using collection url method", "d": "7/2012"}, {"body": "poor encapsulation collection object examples view even router would object knows parameter values classes turn would responsible resetting models collection would nt want write collection url references multiple objects", "d": "7/2012"}, {"body": "already fine jquery options respected forwarded request backbone sync methods", "d": "7/2012"}, {"body": "whoa quite right seeing problem documentcloudorg even though likely fixed getting pushed chrome proper let get sorted", "d": "7/2012"}, {"body": "done poking around whatever reason backbonecollection backbonemodel function set backbonerouter constructor function particularly weird extend functions declared time modelextend collectionextend routerextend viewextend extend router view extend functions set correctly", "d": "7/2012"}, {"body": "truly bizarre behavior replacing line results following behavior first assignment returns correctly compare results line return value constructor backbonerouter backbonecollection backbonemodel interestingly however check seems correctly assigned appropriate function body looks like canary assigning correctly returning function bodies unpredictably", "d": "7/2012"}, {"body": "filed", "d": "7/2012"}, {"body": "awesome looks weird spent two hours troubleshooting code realized beyond error highcharts library time ago took quite long time corrected canary build", "d": "7/2012"}, {"body": "going close us seems pretty clearly like something nt worry", "d": "7/2012"}, {"body": "anyone looking bug seems present well", "d": "7/2012"}, {"body": "getting really erratic behavior addition issue router undefined really hope sort soon miss canary web inspector", "d": "7/2012"}, {"body": "behavior chrome devm", "d": "7/2012"}, {"body": "backbonejs site working fine since morning chrome update devm getting method bindroutes error defining model chrome browser bug even backbone official sample todo app working", "d": "7/2012"}, {"body": "running version dev hope issue nt make dev channel release", "d": "7/2012"}, {"body": "fyi think underlying issue fixed guys expect things good next chrome dev build", "d": "7/2012"}, {"body": "hope", "d": "7/2012"}, {"body": "looks like fixed version canary", "d": "7/2012"}, {"body": "hardbap still version dev channel nt supposed get updates canary", "d": "7/2012"}, {"body": "victorgama dev channel released twice weekly canary daily", "d": "7/2012"}, {"body": "hardbap nice know change release channel thank", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "yikes", "d": "7/2012"}, {"body": "collection fire reset event models inside collection fire event attributes get updated data returned fetch first fetch collection contains models get event fired collection", "d": "7/2012"}, {"body": "see updated documentation great behaviour clearer models inside collection fire change event attributes get updated data returned fetch would good addition docs since neither mention", "d": "7/2012"}, {"body": "using latest backbone source need pass update models perform fetch get events firing models", "d": "7/2012"}, {"body": "undocumented", "d": "7/2012"}, {"body": "version directly github showing could get events fire part quoted original issue actually model fetch current version backbone wo nt get change events happening models collection fetch either completely reset collection add models nt exist yet latest github get change fire models using options", "d": "7/2012"}, {"body": "ah bad great feature love backbone pollute thread suggest collectionslice collection would useful thanks hard work", "d": "7/2012"}, {"body": "two snippets equivalent using unscoped jqueryzepto query scoped proposed property would assume create scoped selections also guessing mean syntax otherwise really fan change nt really save anything terms reducing amount code write creates nonobvious syntax creating references child elements", "d": "7/2012"}, {"body": "note created scope selection", "d": "7/2012"}, {"body": "yep proposed hash", "d": "7/2012"}, {"body": "created jsfiddle problem see running code validation failing see error message second textarea save function still returning success see text first textarea", "d": "7/2012"}, {"body": "created page jsfiddle see running code press trigger modelsave button validation failing see error message second textarea save callback function still returning success see text first textarea claudio ortolina reply replygithubcom benjen bgunn rocketmailcom sent tuesday july subject backbone modelvalidate failing stop modelsave saving server hi would able create page jsbin jsfiddle markup well reply email directly view github", "d": "7/2012"}, {"body": "issue inconsistent support options views models collections confusing", "d": "7/2012"}, {"body": "get issue validation nt occur unless pass object parameter save modelsave calling modelsave bypasses validation downloaded latest version backbone v", "d": "7/2012"}, {"body": "dombesz skbailey woud mind trying latest master wrong think fixed thanks", "d": "7/2012"}, {"body": "ok tried master call validate new issue getting error event model intentionally make validation fail modelon error function model error nt work", "d": "7/2012"}, {"body": "like error callback works modelsave", "d": "7/2012"}, {"body": "providing callback current code trigger event issue aims address perhaps merged soon like error callback works modelsave still nt work via would mind posting reduced test case debug", "d": "7/2012"}, {"body": "provide callback model modelon error documentation says failed validations trigger error event callback one view methods call modelsave modelsave nt trigger error modelsave triggers modelset value error function assuming suppresses error event make sense", "d": "7/2012"}, {"body": "would mind posting reduced test case take look", "d": "7/2012"}, {"body": "var mymodel backbonemodelextend urlroot example validate function attrs return never valid var mymodel new mymodel id mymodelon error function model error alert error mymodelsave produce alert doesnt", "d": "7/2012"}, {"body": "thanks skbailey addressed", "d": "7/2012"}, {"body": "hi braddunbar thanks reply sorry taking long respond never encountered situation using handler change change attr events desirable ok first noticed registering listener events listener seemed similar events similar signatures passing common arguments consistent positions would advantageous especially since recently experienced actual problem due handlebars pulling switcheroo position passes argument nt real world use case point correct attribute name accessible handler think good change attr handlers explicitly handling one attribute otherwise change event used since care one attribute already know name hmm seems counterintuitive makes important necessarily preferable handler handle change events single attr subset attrs require similar handling change useful dynamic behavior depends attr name would wrong registering handler vs putting logic handler called attr changed course could create closure handler function attr name desirable use handler multiple attrs point anyway nt real world use case argue seemed counterintuitive right bat find good use case post see think thanks", "d": "7/2012"}, {"body": "makes important necessarily preferable handler handle change events single attr performant since event triggered specific attribute changed attribute changed please let us know find use case thanks getting back", "d": "7/2012"}, {"body": "maybe described meaning poorly let say model attrs az whatever reason want use change handler e u something attr name handler case like would necessarily less performant register handler attrs register handler implement logic detect among changed attrs something specific please let us know find use case thanks getting back yeah sorry took long thanks addressing questions still think would good make documentation signatures obvious eg mention modelset", "d": "7/2012"}, {"body": "problem behaviour nt work works var model new backbonemodel modelon change function consolelog message isnt showed youre using backbone modelchange expected bug thanks", "d": "7/2012"}, {"body": "stumbled upon issue actually line uses js sort instead sortby comparator function arguments nt understand ca nt think decent workaround aswell using sortby works fine js nt work probably array sortings bugs", "d": "7/2012"}, {"body": "problem comparator function binded model removed binding works ok", "d": "7/2012"}, {"body": "rsirotins coould please elaborate fixed problem thanks advance", "d": "7/2012"}, {"body": "experience exact issue", "d": "7/2012"}, {"body": "routing pushstate enabled app deceptively complicated lets review issue main argument new behavior creates valid url cases reliably parsed client server old version breaks windowlocationsearch windowlocationhash would return inconsistently across pushstate supported unsupported browsers confusing breaks fundamental part lovely window object potentially breaking anything else relying windowlocation worth send query params already sending fragment want access url params serverside using pushstate app pages root single page app said one many unanticipated downsides pushstate apps use case lets go inviting people join site say friendly ie user visits mysitecomcreateaccount old behavior would redirected mysitecom createaccount page reload need parse token value hash send token back server validation changes made router coffeescript route params myroute old route myroute new myroute params gt old myroute gt new params windowlocationsearch hopefully helpful let know questions definitely nt speak backbone team fix needed particular project artsy merely reasoning fix learning go hopefully evolving patterns side note avatars look pretty hilarious discussion", "d": "7/2012"}, {"body": "issue resolved thanks", "d": "7/2012"}, {"body": "line causes reset never validate reset thisadd models extend silent true options reset forces silent true", "d": "7/2012"}, {"body": "adding silent causes reset never validate models always passes silent", "d": "7/2012"}, {"body": "pain one part site used backbone broke dramaticly normal web query params added reopened people least made aware maybe mention manual", "d": "7/2012"}, {"body": "validate run collection reset ver reset thisadd models extend silent true options silent forced validate optionssilent thisvalidate return true first line true thisvalidate never called basically validate never run collectionreset matter think", "d": "7/2012"}, {"body": "ran issue today would like add cents seems like unintuitive behavior explicitly setting wo nt trigger event unless hash changed vote favor triggering route matter condition one real world example want refresh current page would impossible current behavior", "d": "7/2012"}, {"body": "kenperkins method something similar integrated bb routers", "d": "7/2012"}, {"body": "discussion bruth said certain cases patch produced may larger full document somewhat counter productive send patch save anything unless patch applied larger object server prefix interesting point think one benefit verb sequential atomic nature understand please correctly wrong processing server happens sequentially one one could see benefit application design obviously upto application implementation opinion backbone nt interfere option things consider mentioned document pointed bruth restrictions simultaneous requests whilst apply http verbs may irrelevant libraryframework something may need considerdocument also may good idea original resource becomes outdated", "d": "7/2012"}, {"body": "take look something think howwhere sync current state document copied required last saved reference generate patch", "d": "7/2012"}, {"body": "use workaround", "d": "7/2012"}, {"body": "regarding jashkenas requirements listed view ever needs one template templating engine supports nested templates like handlebars partials template rendered data returned server fact great way make app feel responsive render instantly click render data comes back real trick feature events since bound root element good thing template render create root elem subsequent renders mean rewire events might worth testing see hurts performance case backbone could support feature majority whose templating engine meets certain requirements would certainly improvement current workflow putting part html template js view", "d": "7/2012"}, {"body": "fguillen yeah since backbone started render template moment called replacing add dom rerender changed parts thismodel finally fetched every full render called even done calling goal jashkenas imo achieved much better convention view dommable called reduces coupling view class view template former would otherwise friends postponing dom stuff also allows unit test without useless dom creations", "d": "7/2012"}, {"body": "geddesign requirements mean simple solution would touch let people whatever want whichever method choose conventionally end call people wish available right opposed personally nt neither wish nt like tagname coupling js html regardless future today already ignore ensured element calling", "d": "7/2012"}, {"body": "keeping backbone simple backbone default behavior calling post multiple times waiting first one seem pretty bad", "d": "7/2012"}, {"body": "philfreo created plugin prevent behavior", "d": "7/2012"}, {"body": "know already closed looking solution tested following bit strange suppose stranger previous ones seems work javascript events keyup subdomain checksubdomain checksubdomain debounce function something", "d": "7/2012"}, {"body": "web apps integrated frontend backend facebook example would app frontmatter pages accessible regardless js capabilities probably still single javascript code base build facebook style app one single backbonejs code base", "d": "7/2012"}, {"body": "kkaefer props mate", "d": "7/2012"}, {"title": "action tag requiring triple braces", "body": "requires action method work action method described docs causes error", "num": "1226", "d": "7/2012"}, {"title": "jquery mobile support need emberselectoption creation without content dom hooks", "body": "emberselectoption wraps content script tags compatible jquery mobile since escapes script tags individual select options unlikely need updating would good option values rendered directly instead wrapped script tags example", "num": "1225", "d": "7/2012"}, {"title": "embersortablemixin contentitemsortpropertydidchange removesinserts objects even index nt change", "body": "believe nt removeinsert object position", "num": "1224", "d": "7/2012"}, {"title": "publish edge api", "body": "docs right kind mess stuff documented latest lot new features ok routing documented master people wondering work need either new subdomain edge api possible new url", "num": "1223", "d": "7/2012"}, {"title": "problem sortproperties simultaneous loadmany calls", "body": "seems problem properly updating collections simultaneous loadmany calls made creating issue clearly problem sorting nt get time reproduce issue without using emberdata problem easily reproduced using loadmany calls one set records one record already previous set situations things happen depending use display records collection display records placed additional record using notfounderr dom exception thrown", "num": "1221", "d": "7/2012"}, {"title": "handlebars overrides explicitly set view context", "body": "following code nt work expected suspect handlebars view helper following logic workaround set property inside view init method", "num": "1219", "d": "7/2012"}, {"title": "pushstate called using back button", "body": "probably related fix open app click transition link goes foo click back button click foo link last click nt trigger pushstate app state changes alright reflected location bar", "num": "1218", "d": "7/2012"}, {"title": "stoppropagation looks like causing trouble", "body": "emberjs packages emberviews lib system eventdispatcherjs line setuphandler function rootelement event eventname var self rootelementdelegate emberview event ember function evt triggeringmanager var view emberviewviews thisid result true manager null manager selffindnearesteventmanager view eventname manager amp amp manager triggeringmanager result selfdispatchevent manager evt eventname view else view result selfbubbleevent view evt eventname else evtstoppropagation return result discussed", "num": "1217", "d": "7/2012"}, {"title": "introducing tomdale helper", "body": "anywhere handlebars templates invoke helper output following simple nice", "num": "1215", "d": "7/2012"}, {"title": "fixed routes pass deserialized state connectoutlets", "body": "given following route snippet fixed path connectoutlets function receives null instead object created deserialize change dynamic path works spent bit time debugger trying figure fixed routes nt remember state nt find solution course could store fixed route state outside router add constraint requires equal either feels like hack", "num": "1213", "d": "7/2012"}, {"title": "getters setters nt allow proper overridingextending", "body": "hey guys recently working orm work ember large single page app building links jsonschema haljson model definitions interaction building relationship section found even though overridden getters setters rest app honor custom ones really neuters usability since instead using use override getpath well functionality perhaps wrong javascript used get data object proper bindings allows dynamic object loading param string key return mixed get function key check see key relationship key thisrelationships var rel thisrelationships key ret seems like important thing developers wish make extensions framework issue core nt use object getters setters instead drills directly child means override work properly property bindings etc reason things done way solution allows dynamic loading objects thanks", "num": "1212", "d": "7/2012"}, {"title": "bindings plain objects nt work mandatory setter enabled", "body": "kselden discussed issue knows going", "num": "1211", "d": "7/2012"}, {"title": "using action within causes memory leaks", "body": "using latest ember master memory leaks occur using within see demo basically consists array controller whose content rendered using nested multiple cycles adding new content removing content overall memory usage increases memory usage ok using seems action registered array line never unregistered array could one reason memory leak", "num": "1210", "d": "7/2012"}, {"title": "href default true action helper", "body": "target action router default hreftrue possible href determined", "num": "1208", "d": "7/2012"}, {"title": "redirectsto breaks back button", "body": "route defined impossible use back button get past suspect fix simple set finds redirectsto frozen routing right worthwhile make pr", "num": "1207", "d": "7/2012"}, {"title": "embersortablemixin needs api docs", "body": "", "num": "1206", "d": "7/2012"}, {"title": "add init flag observers", "body": "add flag indicate observer function called init js emberobjectextend selectiondidchange function", "num": "1205", "d": "7/2012"}, {"title": "routing nested states recalls connectoutlets", "body": "fiddle shows app couple nested states routing connectoutlets called stateone rerenders stateone view desired behaviour dealing nested states way avoid parent views rerendered state changes state nesting", "num": "1203", "d": "7/2012"}, {"title": "another question volatile", "body": "hi run issue volatile reserved word js means older tools like yuicompressor javascript lint work new ember apps noticed pull request nt use reserved word volatile noncached properties explanation vs issues however closure compiler also tools fail would like know ember community view definitely stick volatile keyword ember patch old tools remove volatile check restriction also sure whether using volatile break functionality thanks", "num": "1202", "d": "7/2012"}, {"title": "nested view rendering broken latest", "body": "somewhat amateur bug reporter maybe someone explain behavior child views emberlatest download vs broken unless assumptions templates recently changed latest", "num": "1199", "d": "7/2012"}, {"title": "router manual url modification nt work every case", "body": "hi fairly new router concept several tests one use case behaviour seams wrong two posts ok append url view specific post id remains posts go directly show post correctly change shows corresponding post id come back posts stuck one test realize different route structure works fine instead two sibling route starting posts posts posts postid change single parent route posts two child routes postid makes sens way suppose work", "num": "1197", "d": "7/2012"}, {"title": "emberselect nt render content", "body": "using emberselect like appdateofbirthfield emberviewextend defaulttemplate emberhandlebarscompile view viewmonthview view viewdayview view viewyearview viewvalidationtext monthview emberselectextend promptbinding parentviewcontentmonthlabel contentbinding parentviewcontentmonthlist valuebinding parentviewmonth dayview emberselectextend promptbinding parentviewcontentdaylabel contentbinding parentviewcontentdaylist valuebinding parentviewdate yearview emberselectextend promptbinding parentviewcontentyearlabel contentbinding parentviewcontentyearlist valuebinding parentviewyear view used within another view somehow prompt render content rendering works perfectly fine add parentviewcontentmonthlist template prints dsmodelarray data list array seems like viewcontent view emberselectoption contentbinding iterating within emberselect matter view inside container view idea please thank", "num": "1196", "d": "7/2012"}, {"title": "router unable transition states nested states", "body": "using router unable transition state nested states following error thrown failing test case demonstrates issue javascript test router works states nested states function var router emberroutercreate location none root emberroutecreate index emberroutecreate route nestedroute emberroutecreate route nested emberrun function routerroute equal routergetpath currentstatepath rootindex router rootindex", "num": "1195", "d": "7/2012"}, {"title": "use root element body multiple times emberapplication", "body": "getting error use root element body multiple times emberapplication sure means looking fix issue thank", "num": "1192", "d": "7/2012"}, {"title": "append existing emberview chromewindows", "body": "uncaught error assertion failed append existing emberview consider using embercontainerview instead fails windows chrome build ember works firefox ie machine could replicate developers mac office chrome note remove hanblebars template script portion wrapping target div works user error reading ember assertion code line appears user containerview anywhere beneath emberview", "num": "1190", "d": "7/2012"}, {"title": "example code wrong statemanager", "body": "page one line code using wrong path robotmanagergetpath currentstategetpath powereddowncharging robotmanagergetpath currentstatepath powereddowncharging", "num": "1189", "d": "7/2012"}, {"title": "add isempty property enumerable", "body": "would awesome handlebars conditionals", "num": "1187", "d": "7/2012"}, {"title": "make first argument handlebars helper functions", "body": "right handlebars helper functions take form helpers variable number arguments ie arguments optional contortions like find hash argument list writing bunch handlebars helpers form helpers hopefully released soon anti pattern code objections making first parameter usage would example volunteering pull request", "num": "1186", "d": "7/2012"}, {"title": "mandatorysetter cleared emberenv debug build", "body": "embermetaljs module contains line emberenv undefined typeof env env imo clears anything included emberenv debug module fix add var env env emberenv line emberenv definition line please let know think fill pull request thanks jan", "num": "1185", "d": "7/2012"}, {"title": "making view script compliant content security policy csp", "body": "emberjs aims framework building big ambitious web applications security one important aspect look possible make view scripts usually inline scripts run external scripts", "num": "1181", "d": "7/2012"}, {"title": "context propagated setup function first invokation send", "body": "first invokation context object context propagated corresponding state property subsequent calls works expected fiddle illustrating problem look web inspector console", "num": "1180", "d": "7/2012"}, {"title": "caching prevents initialstate computed property", "body": "implemented history state making initialstate computed property act context direct state manager flow specific state thanks bug state manager caching system corrected code working find jsfiddle illustrating problem look console wagenet irc thought state manager could detect initialstate cp prevent caching would elegant solution problem", "num": "1179", "d": "7/2012"}, {"title": "view rerendered twice changing dependant property computed one", "body": "looking question computed property evaluated twice changing one dependant property seems view rerendered twice whereas think created even simplified jsfiddle demonstrate", "num": "1178", "d": "7/2012"}, {"title": "set elementid init function", "body": "hi trying create conventions view definitionstemplates css case would like assign elementid based view class contructor js appanybaseview emviewextend init function example throws exception due elementid constraint documented issue thought view still creation process logic executed init function wondering could possiblegood idea move elementid modification constraint execution init function", "num": "1175", "d": "7/2012"}, {"title": "move emberapplication entirely emberapplication package", "body": "unless compelling reason exist namespace subclass runtime like move centralize extend documentation", "num": "1172", "d": "7/2012"}, {"title": "make arrayproxy look like array web console", "body": "add two properties object web console chrome shows array jquery arrayproxy class also shows array thoughts makes much easier debug arrayproxy related arraylike classes instance emberdata collection models see array models rather console counterintuitive feature helpful jquery side note main reason using stop using acted like array actually looked like array", "num": "1171", "d": "7/2012"}, {"title": "handlebars collection helper passed content", "body": "made fiddle show example example see collection creating correct number subviews property undefined set appapplicationcontroller quite expecting", "num": "1170", "d": "7/2012"}, {"title": "fails infinite loop", "body": "spending past hours trying debug one nt really know solve moment using accessors want avoid set native array gets selfpointing method defined emberruntimelibmixinsenumerablejs jquery tries deep clone object creates infinite loop jquerysrccorejs javascript jqueryextend jqueryfnextend function var options name src copy copyisarray clone target arguments length argumentslength deep false handle deep copy situation typeof target boolean deep target target arguments skip boolean target handle case target string something possible deep copy typeof target object amp amp jqueryisfunction target target extend jquery one argument passed length target lt length deal nonnullundefined values options arguments null extend base object name options src target name copy options name return modified object return target important part accessors turned returns good old bug web console saying would adding fix think looks like probably jquery bug getting late ca nt quite tell try running web console create infinite loop came across using jqueryfileupload plugin ember accessors nt work bc ajax call making passes files array method right", "num": "1169", "d": "7/2012"}, {"title": "bypass loading view outlet currentview instance viewclass", "body": "already instance viewclass bypass recreating view app calls connectoutlet viewclass appmyview example javascript routerget mycontroller get myoutlet constructor returns appmyview approuterget applicationcontroller connectoutlet outletname myoutlet viewclass appmyview controller routerget mycontroller least let app decide whether force recreating view thoughts", "num": "1166", "d": "7/2012"}, {"title": "review memory leaks", "body": "one place examine view created container view removes dom another observer helper pathroot long lived object another check keywords destroyed view", "num": "1165", "d": "7/2012"}, {"title": "binding declaration order", "body": "even sure start trying work changed something simplifyproperties made order declaration bindings important code like broke fix move currentstatebinding headingbinding kselden sorry could nt work anything specific think would caused change", "num": "1164", "d": "7/2012"}, {"title": "support setting view controller handlebars", "body": "currently following nt work context handlebars point parent controller instead believe timing binding evaluated eg context already set controller property binding triggered following work wagenet mentioned nt sure setting properties without bindings handlebars supported moreover helper complicates things since uses keywords neither following work seems relatively important currently way consume array controllers per wycats gist handlebars using helper", "num": "1162", "d": "7/2012"}, {"title": "merge", "body": "discussed kselden joliss determined performance hit minimal worth usability improvements", "num": "1161", "d": "7/2012"}, {"title": "action helper multiple route contexts", "body": "given url like root state want action take us need supply action given one object could supply hash context maybe view action gotobar context viewbarcontext viewbarcontext return hash foo xxx bar yyy use feels rather nasty", "num": "1160", "d": "7/2012"}, {"title": "get property occasionally returning object instead property value", "body": "difficult one reproduce happens intermittently app occasionally helper getting returned templatelayout function try replicate fiddle meantime screenshot current debugging session set object data view note actual ember object subsequently call returns expected function", "num": "1159", "d": "7/2012"}, {"title": "sortablemixin changing sortascending cause views rerender", "body": "see two seconds sortascending changed items nt change order trigger change sortproperties eg uncommenting penultimate line items redrawn", "num": "1156", "d": "7/2012"}, {"title": "helper arraycontroller stopped working", "body": "hi new ember going tutorials trying different stuff version able create arraycontroller reference helper template expected behavior per documentation however longer works reference actual content seems bug misunderstood something example example please note workaround reference actual content apparraycontrollercontent", "num": "1155", "d": "7/2012"}, {"title": "textarea valuebinding causes cursor position move ieopera", "body": "example using embertextarea view valuebinding user types textarea opera cursor position changes end textarea key press jsfiddle example start type word test character type appear cursor jump text textarea remaining text type show bottom means extremely difficult make changes text within text area end", "num": "1153", "d": "7/2012"}, {"title": "breaking change embercollectionview api latest build", "body": "repost stackoverflow two examples collectionview code running latestthe version works latest version breakingchanges embercollectionview api latest build issue current build collectionview", "num": "1152", "d": "7/2012"}, {"title": "emberrouter loses context dynamic segments page reload", "body": "repost stackoverflow trying debug far avail let explain happening use fiddle navigate notice dynamic segment url replaced stay gather routing ember router makes call update url replacing dynamic segments values gets respective instantiated objects case thought maybe case loaded point apparently fixed last month whether bug implementation failure part anyone else seen", "num": "1151", "d": "7/2012"}, {"title": "nt work unless foo initialized", "body": "view template initialized state manager reference ember fails following error perform operations metamorph dom think happens ember tries setup bindings action target expecting target exist creating initial view state manager happens appstatemanager defined possible solution action would evaluate target lazily event triggered instead setup template view state manager appstatemanager emberstatemanagercreate enablelogging true start emberviewstatecreate", "num": "1150", "d": "7/2012"}, {"title": "routedeserialize dynamic route segment naming convention", "body": "tldr read code evolution currently naming convention many issues guess partly tight binding emberdata api completely understanding ember data find api could pass hash argument instead primary key would return however since array might problematic least bigger win would later index context since would open things like let us query things id problems since nt different separator key model class lead suggestion since much expressive way dealing segments shame let load many models time would represented context sent remember context set makes fragile formats possible also one use case interesting consider may bad idea hard implement key next segment uses starting char become confusing one query param like one persons thoughts think needs improvements happy hear others thinks gladly try implement feature gets ok", "num": "1149", "d": "7/2012"}, {"title": "detect behavior surprising", "body": "behavior tested pretty straightforward tests nt cover behavior example javascript var emmixincreate c emobjectextend cextend nt work module inclusion mdetect c false mdetect false works inheritance cdetect true works module instance mdetect ccreate true mdetect dcreate true nt work class instance cdetect ccreate false cdetect dcreate false see behavior action", "num": "1146", "d": "7/2012"}, {"title": "nearestinstanceof uses instanceof check inheritance", "body": "uses ca nt used look things include mixin example nt work instances nt actually instances one option would change use instead believe safe since anything view hierarchy must instance something defines another option would add separate uses", "num": "1145", "d": "7/2012"}, {"title": "statemanager transitionto ignoring initialstate", "body": "working example using last release failing example using emberlatest", "num": "1144", "d": "7/2012"}, {"title": "documentation update", "body": "emberjs boasts many features currently documented many mixins controls absolutely documentation example targetactionsupport mixin would appear add whole range view defined action handling outside template emberbutton control leverages targetactionsupport mixin would seem handle host default actions see button deprecated documented reason trying socialize emberjs company hard time sparse documentation examples", "num": "1141", "d": "7/2012"}, {"title": "un inforamtive exception thrown objectproxy content set action delegated", "body": "currently error message reads belive word objectproxy test also content set maybe problem objectproxy self missing field something like would nice maybe objectproxy repr better values repr", "num": "1140", "d": "7/2012"}, {"title": "calling super class ember nt work", "body": "struggling create example jsfiddle attempt basically want use class level several ways tried adding methods parent class defining child class overriding methods child class adding methods classes defined first parent child adding methods classes defined first child parent reverse coffeescript appparent emberobjectextend appparentreopenclass methodaddedbeforechildclasswasdefined gt super appchild appparentextend appchildreopenclass methodaddedbeforechildclasswasdefined gt super appparentreopenclass methodaddedafterchildwasdefined gt super appchildreopenclass methodaddedafterchildwasdefined gt super appchildreopenclass methodaddedafterchildwasdefinedreverse gt super appparentreopenclass methodaddedafterchildwasdefinedreverse gt super none works latest ember reason nt work", "num": "1135", "d": "7/2012"}, {"title": "serialize id occasionally null", "body": "quite sure see hack grabs id working instances seen however idea right route go using history implementation location url updated id null serialize function manager context var modelclass routematcher namespace param id", "num": "1133", "d": "7/2012"}, {"title": "debug build emberjscom broken", "body": "nt contain emberroute routing nt seem work using emberlatest though", "num": "1131", "d": "7/2012"}, {"title": "bug toplevel objectcontroller requires property set", "body": "consider fiddle note must followig line commented throws error complaining set contention objectcontroller required set per fiddle dynamic content forced set believe overrestrictive alternatively entirely possible wrong please advise misunderstood intended design missed something else new new router", "num": "1129", "d": "7/2012"}, {"title": "dynamically add computedproperty", "body": "public api adding dependent keys computed property use case say emberdata association setup javascript appprofile dsmodelextend author dsbelongsto appauthor authorid dsattr string appauthor dsmodelextend profile dshasone appprofile sure exactly emberdata implementing internally nt really matter issue say wanted able set want reflect state means need append dependent keys means property would etc thoughts making possible implemented one ways javascript emberjs source one way computedpropertyprototypeproperty function var keys aslicecall arguments thisdependentkeys thisdependentkeys thisdependentkeysconcat keys keys return another way might making adddependentkeys public seems complex main reason would nice computedproperty abstractions created like way customize really also would nice dynamically add properties computedproperty like javascript instead var dependentkeys b var computed embercomputed function computedcall property dependentkeys able var dependentkeys b embercomputed function property dependentkeys var dependentkeys b var computed embercomputed function var lt dependentkeyslength computedproperty dependentkeys", "num": "1128", "d": "7/2012"}, {"title": "router give detail control", "body": "example post router post postid subrouter post postidcomment want animation comment view showup post view possible", "num": "1127", "d": "7/2012"}, {"title": "support sub state managers router", "body": "right javascript emberonload application function app appregisterinjection name statemanagers controllers injection function app router property az statemanager test property return modified transitionto accept first argument name state manager want run transition planing work make experience transparent possible would interest adopting something like core", "num": "1126", "d": "7/2012"}, {"title": "views inherit parent context available breaking outlets", "body": "tomdale braked connectoutlet demonstrated", "num": "1122", "d": "7/2012"}, {"title": "manipulate childview properties", "body": "collection view click handler handler trying toggle properties itemview childview setting properties childviews seems anything fails silently example fiddle", "num": "1121", "d": "7/2012"}, {"title": "sortablemixin adds duplicate elements arraycontroller", "body": "jsfiddle right coffeescript traviscontrollers emnamespacecreate repositoriescontroller emberarraycontrollerextend contentbinding layoutrepositories sortproperties sortorder sortascending false traviscontrollersrepositoriescontrollerreopen embersortablemixin later coffeescript bound repositoriescontroller content set repositories travisrepositoryfind result", "num": "1120", "d": "7/2012"}, {"title": "state manager initial state loading race condition", "body": "ember tried following example ember app get following error uncaught error lt subclass emberview unable find template first clicking first finds template loads state state manager initializes view empty looks like weird race condition initialstate statemanager", "num": "1119", "d": "7/2012"}, {"title": "connectoutlets router context passed context transitionto state context", "body": "fiddle", "num": "1118", "d": "7/2012"}, {"title": "routing working", "body": "fiddle routing example works fine safari chrome using ember seeing errors assertion failed could find state path assertion failed embercollectionview content must implement emberarray passed", "num": "1115", "d": "7/2012"}, {"title": "documentation opposite emberroutable connectoutlets", "body": "got state connectoutlets set however leave state like outlets cleared nt seem documentation go example check click post click back button note specific post still appears nt appear equivalent disconnectoutlets feature fully implemented different way disconnectoutlets leaving state thing tried add conenctoutlets index leaf state try call connectoutlet without arguments resulted error", "num": "1113", "d": "7/2012"}, {"title": "new method getpathwithdefault", "body": "like suggest new method getpathwithdefault like getwithdefault internally uses getpath allowing dotseparated property paths used embergetpathwithdefault function root key defaultvalue var value embergetpath root key emberobservable mixin would course included", "num": "1111", "d": "7/2012"}, {"title": "sortablemixin arrayproxy results duplicate content", "body": "fiddle example loading content arrayproxy results duplicate content using ran loading content via emberdata rerendering content makes duplicates disappear underlying content fine", "num": "1110", "d": "7/2012"}, {"title": "dry event subscribing", "body": "dry common patterns hooks addlistener removelistener js emberobjectextend content null contentarraywillchange function array idx removedcount addedcount content array contentarraydidchange function array idx removedcount addedcount content array change init call function init emberobjectextend content null contentarraywillchange emberon function array idx removedcount addedcount content array contentarraydidchange emberon function array idx removedcount addedcount content array change init call function init emberobjectextend didinsertelement emberon didinsertelement nt define func subscribe event hooks", "num": "1109", "d": "7/2012"}, {"title": "substates uncaught error assertion failed could find state path", "body": "trying take ember application structure guide modify post state substate posts state connect post outlet within posts view template however move post state inside posts state get error goal allow post sometimes appear adjacent list posts depending route", "num": "1108", "d": "7/2012"}, {"title": "state manager gotostate internal substate", "body": "simple state manager javascript var statemanager emstatemanagerextend go phone settings state initial state ca nt go settings phone settings statemanager thinks settings", "num": "1107", "d": "7/2012"}, {"title": "warn router model class found nt implement find", "body": "default route deserialize expect certain parameter naming object finding behavior warn missing know implement model find override entirely wycats say yea one need find time", "num": "1106", "d": "7/2012"}, {"title": "ember application structure guide refers subclassing emberstate instead emberroute", "body": "ember application structure guide currently refers subclassing emberstate instead emberroute however according using emberroute instead", "num": "1105", "d": "7/2012"}, {"title": "ember application structure guide clarify approuter instantiated", "body": "trying follow along ember application structure guide describes subclass emberrouter however nt specify approuter instantiated instead guide note approuter instantiated specifically indicating whether developer instantiate instance ember instantiate one instead", "num": "1104", "d": "7/2012"}, {"title": "singleton view amp controller", "body": "creating single page application decided emberjs investigating new router however think bad design decision singletons far tell idea view bound data controller events actions router applicationinitialize router create singleton instance controller singleton used whenever controller needed problems planning big application want easy maintain requirejs heavily used currently connectoutlets since logincontroller singleton created way earlier somewhere ms years appinitialize manually create nt feel good nesting another route tried nt expect work nt like movement away singletons problem problem singletons idea moving away singletons ideas comments", "num": "1101", "d": "7/2012"}, {"title": "conflict addthis widget", "body": "problem addthis widget apply ember site could please help figure go link hover compact plus icon throw error firebug evar typeerror p undefined break error else addth line line addthisssh defined break error else addth thank advance", "num": "1099", "d": "7/2012"}, {"body": "make official url", "d": "7/2012"}, {"body": "agree even nt fully date get post commit hook updates site every commit master", "d": "7/2012"}, {"body": "nevermind saw", "d": "7/2012"}, {"body": "still needs run manually pangratz nt care docs", "d": "7/2012"}, {"body": "trek give heroku access like able push updates", "d": "7/2012"}, {"body": "happy take ownership figure something nt need manual intervention add new subdomain", "d": "7/2012"}, {"body": "subdomains domain wycats pun intended", "d": "7/2012"}, {"body": "though immediately obvious duplicate", "d": "7/2012"}, {"body": "wagenet ah makes sense remember svenfuchs telling sorting issue may connected views removalinsertion", "d": "7/2012"}, {"body": "ghempton write failing test would great start also sounds like idea fix", "d": "7/2012"}, {"body": "look", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "cool thanks fixing nt tested close reopen find problems", "d": "7/2012"}, {"body": "view dom elementid corresponding element looks like reason going exactly gets added", "d": "7/2012"}, {"body": "hint view init method register view event handling hash used embereventdispatcher dispatch incoming events thisisvirtual emberviewviews get elementid wonder overriding emberviewinit method without calling thissuper", "d": "7/2012"}, {"body": "almost certainly right cause problem possibility creating instance sabithpocker mistaken let know reopen ticket", "d": "7/2012"}, {"body": "wagenet tried well along also error persists probably bad practice following problem still commented line time wagenet applicatiocreate initialize page load glimpse template using repeat type view emberselect elementid repeattypeselect contentbinding apprepeatintervalcontroller selectionbinding approuterrepeatcontrollerinterval optionlabelpath contentinterval optionvaluepath contentid repeat every outlet counter elementid counterwrap intervallabel showskiptime skip time outlet skipintervals showskipday skip day week outlet skipdays brief every fresh load page load loaded enables events defined defined loading using mouse events works works afterwards detail load page url hash route everything works fine loads corresponsing template stops responding everything events view dom events one attached using sy missing inside area corresponding template defined view also works fine template initially loaded either entry another route page load route soon loads corresponsing called doesnt work anymore time anyhow working acts fallback case looks like action events getting targetted targetting corresponding attribute corresponding controllers looks like right page load also put events state corresponds parent template instead placing corresponding levels problem events time choosetime emberroutetransitionto timeindex chooseendtime emberroutetransitionto timeendtime choosestarttime emberroutetransitionto timestarttime date choosedate emberroutetransitionto dateindex chooseenddate emberroutetransitionto dateenddate choosestartdate emberroutetransitionto datestartdate timezone choosetimezone emberroutetransitionto timezoneindex choosestarttimezone emberroutetransitionto timezonestarttimezone chooseendtimezone emberroutetransitionto timezoneendtimezone repeat chooserepeatoptions emberroutetransitionto repeatindex chooseskipday emberroutetransitionto skipdaysindex thank suggestion please ask info unclear", "d": "7/2012"}, {"body": "still pretty confident problematic disabling may introducing bugs reproduce issue jsfiddle would make possible us actually examine code action", "d": "7/2012"}, {"body": "wagenet try repeoduce fiddle get back", "d": "7/2012"}, {"body": "declare app global removing var var app emapplicationcreate", "d": "7/2012"}, {"body": "well done sir", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "clap", "d": "7/2012"}, {"body": "garth try master chance aware recent statemanger changes might addressed", "d": "7/2012"}, {"body": "yes apart today commits running latest master", "d": "7/2012"}, {"body": "look", "d": "7/2012"}, {"body": "happens back end guy gets extending front end frameworks thanks helping remember rtfm go posting bug reports figured missing something since something key thanks javascript used get data object proper bindings allows dynamic object loading param string key return mixed unknownproperty function key check see key relationship key thisrelationships key thisloadedrelationships return thisloadedrelationships key", "d": "7/2012"}, {"body": "kselden ebryn guys take look", "d": "7/2012"}, {"body": "already talked ebryn need willreset rerender anytime go prerender destroy inbuffer haselement indom", "d": "7/2012"}, {"body": "thanks fast reply already know issue fixed approxfixed", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "sounds great one big problem handlebars helpers context aware means helper nt know action tag tag makes sense", "d": "7/2012"}, {"body": "ah frig course", "d": "7/2012"}, {"body": "given ca nt think way manage sanely going close ticket idea good one nt see implement consistently", "d": "7/2012"}, {"body": "disagree closed talking routable actions target router event url computable exception rather rule action corresponds url used nonanchor tag someone really wanted could explicitly set hreffalse", "d": "7/2012"}, {"body": "ghempton reopen since like discuss moment opposed making change though might able convinced otherwise would good hear wycats tomdale think well", "d": "7/2012"}, {"body": "wagenet thanks sensible defaults well seems bad default people creating ember apps anchors without hrefs keyboard accessible ca nt cmd clicked unless remember put hreftrue everywhere", "d": "7/2012"}, {"body": "maybe need two different helpers fact right action ca nt determine route cause application blow", "d": "7/2012"}, {"body": "could good might make sense remove href logic entirely helper", "d": "7/2012"}, {"body": "taken step target could controller target could router", "d": "7/2012"}, {"body": "definitely bug prs always welcome", "d": "7/2012"}, {"body": "time implement looks like", "d": "7/2012"}, {"body": "workmanw", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "think would answer", "d": "7/2012"}, {"body": "raisedhands", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "know discussed tomhuda though sure conclusion part obvious function would nt see major burden putting things method seems like correct approach anyway", "d": "7/2012"}, {"body": "agree naming confusing perhaps better feels like simple feature eliminates boilerplate lot people encounter evidenced seems much keeping ember philosophy", "d": "7/2012"}, {"body": "anything decide whether alter behavior create", "d": "7/2012"}, {"body": "think would simpler super call nt postinit hook current init becomes init init nt need super called still think people forget think init creating observers", "d": "7/2012"}, {"body": "sure proposed alteration way things work find value nt think much burden putting things could really said observers bindings see extra convenience saves little bit time makes code little readable javascript emberobjectextend init function thissuper thissomethingdidchange vs somethingdidchange function observes something oninit think might good name short descriptive", "d": "7/2012"}, {"body": "workmanw proposed change create behave like suspect made change initial observers would fired would become nonissue", "d": "7/2012"}, {"body": "wagenet proposal made also suggestion object fire observers init setproperties create caused observers would still need manually init extend undefined defined would still consistently change nt much clearer maybe clear terse brings state observers handle", "d": "7/2012"}, {"body": "run connectoutlets called context changing fiddle occurring think bug currently gets retriggered context try passing around fake context see fixes open new issue", "d": "7/2012"}, {"body": "similar issue accessing child parent already loaded parent loads data accessing child already parent state reloads data using relative routes way ex parent postsindex load posts child comments load posts comments comments level index", "d": "7/2012"}, {"body": "updated fiddle master version ember switching nested states appears working correctly parentview rerendered index substate nt view put outlet needed clear outlet state entered providing disconnectoutlet method discussed elsewhere going close", "d": "7/2012"}, {"body": "curiosity sake master build include statemanger refactor want get better understanding resolved", "d": "7/2012"}, {"body": "build used last commit nt include refactor broken version last commit working version last commit one commits fixed", "d": "7/2012"}, {"body": "related", "d": "7/2012"}, {"body": "yes showed problem closure compiler tools", "d": "7/2012"}, {"body": "gotcha read bit closer question better suited wycats", "d": "7/2012"}, {"body": "jankopriva give examples actual libraries fail seeing failures current jslint also tested without visible issues related", "d": "7/2012"}, {"body": "yuicompressor realize javascript lint quite old probably developed yuicompressor quite popular", "d": "7/2012"}, {"body": "jankopriva hmm seem reserved yui compressor opinion bug yui removed previously reserved words done partial job ca nt see point reserving words longer reserved never used", "d": "7/2012"}, {"body": "ok thanks answer patch yuicompressor", "d": "7/2012"}, {"body": "searching would give answer latest views preserves context default means templates direct access properties parentview prepend view property current view latest think could close issue", "d": "7/2012"}, {"body": "thanks tried places could nt seem find project changing quickly hard know information still relevantaccurate closed", "d": "7/2012"}, {"body": "theworkerant nt worry things starting settle wanted get change knew would disruptive nt much churn future", "d": "7/2012"}, {"body": "second right way first way supported", "d": "7/2012"}, {"body": "ok thanks note saw quiete examples using wrong way already documentation better add", "d": "7/2012"}, {"body": "jfgirard curiosity seeing examples", "d": "7/2012"}, {"body": "wagenet didnt bookmark examples google offical outlet documentation first example understand well supported posts post routes using starting url posts", "d": "7/2012"}, {"body": "jfgirard hmm maybe work even though would recommend setting things way reopen discussion wycats work", "d": "7/2012"}, {"body": "perhaps nothing monthview dayview yearview properties dateofbirthfield must capitalized otherwise think taken globals nt realize first view question stackoverflow someone answers link", "d": "7/2012"}, {"body": "changed lowercase nt help thanks input", "d": "7/2012"}, {"body": "ok well realize emberselect optionlabelpath optionvaluepath properties content raw string array define work see", "d": "7/2012"}, {"body": "defined still work", "d": "7/2012"}, {"body": "one thing noticed view nt work nested within another view works moving outside", "d": "7/2012"}, {"body": "bug compatibilty sorry unable give much information perhaps issue parentview something like daylist others defined parentview dateofbirthfield definition parentviewparentviewcontentdaylist", "d": "7/2012"}, {"body": "intended route leaf states see possible determine difference path leading state path leads nonleaf state could nice output descriptive error pretty common gotcha", "d": "7/2012"}, {"body": "rlivsey thanks nt realise intended", "d": "7/2012"}, {"body": "part router docs got removed concerns confusing think need add back solid examples nested state transitions context passing", "d": "7/2012"}, {"body": "trek agreed perhaps endorse pattern like", "d": "7/2012"}, {"body": "means creating multiple without specifying different default", "d": "7/2012"}, {"body": "indeed raise error version firefox ie surprised raising errors either", "d": "7/2012"}, {"body": "firefox ie thanks", "d": "7/2012"}, {"body": "wagenet getting scotfree ought nt apparently relevant config data", "d": "7/2012"}, {"body": "wagenet also sent screenshot jsfiddle barfing", "d": "7/2012"}, {"body": "btw wagenet theory correct behavior intention force us use containerviews much higher level view stack say managing tab tab kinds situations could imagine case app dj manages records say mr dead display would say apprecord subclass hit button tells flip would tell views change drop aside put bside containerview meant", "d": "7/2012"}, {"body": "sgharms views need know children append another view nt know children recipe pain", "d": "7/2012"}, {"body": "wagenet thanks", "d": "7/2012"}, {"body": "appears happen number places search document would mind pull request file needs updating", "d": "7/2012"}, {"body": "wagenet issue closed unless jmao gets first thanks annavester", "d": "7/2012"}, {"body": "wrong using", "d": "7/2012"}, {"body": "right nt even think thinking nt allowed thanks work perfectly", "d": "7/2012"}, {"body": "would breaking change also inconsistent base handlebars nt think", "d": "7/2012"}, {"body": "jankopriva explain actually problem", "d": "7/2012"}, {"body": "debug build emberjs mandatorysetter relevant code executed ie mandatorysetter retvalues etc even supposed turned default commit", "d": "7/2012"}, {"body": "debug trying work ahead embermetalcore setup stuff case trying setup env core order default value debug unless explicitly set defaulting env defined", "d": "7/2012"}, {"body": "kselden entirely sure understand said", "d": "7/2012"}, {"body": "kselden actually issue", "d": "7/2012"}, {"body": "yes", "d": "7/2012"}, {"body": "could clarify view script think mean handlebars template want sure", "d": "7/2012"}, {"body": "yeah sorry meant handlebars template", "d": "7/2012"}, {"body": "suspect forcing ssl using unsafeinline one way shortcomings road", "d": "7/2012"}, {"body": "worries wanted sure cases say productionlevel ember apps wo nt use inline handlebars templates performance hit template compilation small probably unacceptable simple applications using rails recommend looking compile templates include part javascript file node best found gist environments ember new gained much tooling support experiment prove wildly popular eventually come still want handlebars better security repost issue github page handlebar external dependency ember", "d": "7/2012"}, {"body": "think ssl forcing ca nt prevent inline script injection one shortcoming long ember still uses handlebar clarification security issue would help early development userauthenticated apps like said template compilation puts performance strains either client server rails node approach means compilation takes place server side might problem heavy data updating apps like betting sites user request times traffic comparing users normal apps kind apps server side compilation might work pretty well", "d": "7/2012"}, {"body": "compilation server occurs deployment per request rendering would still occur client zippy expected", "d": "7/2012"}, {"body": "thanks understand", "d": "7/2012"}, {"body": "fixed never intend pass context however bug affected internal cache multiple calls produced different results would like pass context target directly", "d": "7/2012"}, {"body": "renajohn know want get really trying keep issue count get something released asap able get pr would help us make", "d": "7/2012"}, {"body": "wagenet give try better way detect property cp", "d": "7/2012"}, {"body": "think acceptable solution forking master pull request soon unit test new feature btw detecting property cp follow", "d": "7/2012"}, {"body": "pull request fix way merge tickets", "d": "7/2012"}, {"body": "renajohn way merge tickets provide reference", "d": "7/2012"}, {"body": "closing favor discussion pr", "d": "7/2012"}, {"body": "updating emberlatest view rerendered", "d": "7/2012"}, {"body": "ppcano try calling know normally discourage bypassing setters think case would ok", "d": "7/2012"}, {"body": "wagenet thiselementid raises exception error assertion failed must use emberset access property version", "d": "7/2012"}, {"body": "sounds fine like know tomdale wycats think", "d": "7/2012"}, {"body": "reasoning behind writing node app instance still want able say would nt want stuff unless browser context similar alias readability people nt think adds value fine moving like understand two places preventing trek extending documentation", "d": "7/2012"}, {"body": "tomdale methodlevel documentation split among files nt think found way make two doc definitions merge sigle output", "d": "7/2012"}, {"body": "example code works change template following html viewcontentpriority viewcontentname", "d": "7/2012"}, {"body": "master helper change context however property always point current view hence reason cjthompson solution correct", "d": "7/2012"}, {"body": "intended behaviour feels unintuitive especially upgrading previous version maybe least deprecation warning accessing collection itemview", "d": "7/2012"}, {"body": "geoffreyd whole thing", "d": "7/2012"}, {"body": "wagenet ok cool guess wanted let know far obvious confusing behaviour opposite published documentation could find without even notice console much client mine dropped ember spending many hours confused anyway thanks fast responses", "d": "7/2012"}, {"body": "geoffreyd always master generally considered use risk unfortunately far documentation goes due miscommunication part published docs contain information master hope release beta soon sorry hear friend gave ember hope open giving another try documentation updated hate someone make decision ember based alpha level code", "d": "7/2012"}, {"body": "wagenet yeah hope make sure try looking forward", "d": "7/2012"}, {"body": "nice guys updated documentation reflect changes struggling", "d": "7/2012"}, {"body": "radiodario definitely update docs beta released", "d": "7/2012"}, {"body": "great thanks thankfully irc channel helpful pointed issue", "d": "7/2012"}, {"body": "posted jquery", "d": "7/2012"}, {"body": "think might actually bug caused changes kselden made kselden think could case", "d": "7/2012"}, {"body": "bug jquery said would nt fix jsfiddle demonstrating", "d": "7/2012"}, {"body": "bug fixed extending prototype attaching methods instance javascript jsfiddle accessor hasownproperty bug two click function var array objectdefineproperty array get function return enumerable true configurable true log array array array array log arrayhasownproperty length arrayhasownproperty length log arrayhasownproperty arrayhasownproperty", "d": "7/2012"}, {"body": "kselden says always experimental time removed master", "d": "7/2012"}, {"body": "damn", "d": "7/2012"}, {"body": "issue could also solved nt selfreferential property", "d": "7/2012"}, {"body": "wagenet would still nice feature simple debugging web console makes much enjoyable type standard code snippet able use", "d": "7/2012"}, {"body": "viatropos kselden one ask worth merged make things little nicer", "d": "7/2012"}, {"body": "wagenet cool thanks kselden thoughts including useaccessors link standard code snippet use available makes debugginghacking much fun avoiding calls", "d": "7/2012"}, {"body": "like deprecated code removed testing matrix becomes simpler reintroducing also want hear debate unknownproperty setunknownproperty would enough way define explicit properties delegate without something like proxies supporting useaccessors conflicts one could take approach similar emberdata describe properties want delegate objectproxy content maybe good spot form validation value transforms added lot complication emberwatch defineproperty mainly around props set normally becoming descriptor overriding descriptors", "d": "7/2012"}, {"body": "like deprecated code removed testing matrix becomes simpler reintroducing makes sense also want hear debate unknownproperty setunknownproperty would enough way define explicit properties delegate without something like proxies supporting useaccessors conflicts sure exactly mean personally huge fan like methodmissing ruby abstraction using makes methodmissing actually possible javascript awesome one could take approach similar emberdata describe properties want delegate objectproxy content maybe good spot form validation value transforms sure must something new check mean exactly added lot complication emberwatch defineproperty mainly around props set normally becoming descriptor overriding descriptors makes sense ember testscode works without defineproperty optimized would nice extra module could include add useaccessor functionality ability makes development much enjoyable write every little thing enjoyable practice", "d": "7/2012"}, {"body": "defineproperty accessors nt enough unknownproperty need proxies order remove standalone embergetset", "d": "7/2012"}, {"body": "ah see wondering makes sense complex issue sure take look soon", "d": "7/2012"}, {"body": "think probably would covered scheduled milestone", "d": "7/2012"}, {"body": "related connectoutlet memory leak", "d": "7/2012"}, {"body": "enough know issue bindings sync connect dependency binding sync still cause sync queued binding watching connects", "d": "7/2012"}, {"body": "kselden status", "d": "7/2012"}, {"body": "swear done exactly worrisome worked potentially timing issues", "d": "7/2012"}, {"body": "actually nt bad thought nt timing issue bug fixed fixes case", "d": "7/2012"}, {"body": "clarify question hand whether work note intentional lack quotes around intended pass object instead path", "d": "7/2012"}, {"body": "ghempton understanding yehuda trying nt supposed work", "d": "7/2012"}, {"body": "glad see happening unified assume", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "preemptively open issue get wo nt work properties contain first comment pr welcome close place point someone eventually comes trollface", "d": "7/2012"}, {"body": "trek allow passing array strings bypass split trollface trollface trollface", "d": "7/2012"}, {"body": "emberwatch already works way would nt work keys", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "playing around", "d": "7/2012"}, {"body": "closing since pr", "d": "7/2012"}, {"body": "case think relation foos bars kind parentchild relation right could get parent context child object need supply child think", "d": "7/2012"}, {"body": "works case parentchild say foo n bars bar belongs foo falls foo n bars bar n foos less cryptically imagine people projects project many people members person many projects ca nt get projectid person individual person instance nt know projects want inside project action gotoprofile context person works fine outside project ca nt tell project go person profile view one action helper", "d": "7/2012"}, {"body": "think anywhere app call action gotoprofile relevant context person always go url see mean ca nt find example passing severals contexts would mandatory anyway need probably right perhaps encounter use case developing app work", "d": "7/2012"}, {"body": "rlivsey kind relationshiproute app well first like trying find way pass two contexts via action helper get working instead participants like join object representing manytomany relationship people projects semantics always possible derive full route given child context work", "d": "7/2012"}, {"body": "big fan set way think consider space separated list paths similar handle class names", "d": "7/2012"}, {"body": "whoops comment pr", "d": "7/2012"}, {"body": "closing since pr", "d": "7/2012"}, {"body": "note current master", "d": "7/2012"}, {"body": "wow seems insane", "d": "7/2012"}, {"body": "info please", "d": "7/2012"}, {"body": "yeah threw loop saw going child views error seems occur rendering one child views appears first time called rendering child view returns object subsequent calls return right thing late though app died error try extract app fiddle run git bisect see find introduced seems likely might come simplify properties work could something crazy somewhere app ca nt rule clients today evening try get info asap", "d": "7/2012"}, {"body": "think saw nt exception catcher ca nt verify thing unfortunately ca nt reproduce possible useful tidbit using case", "d": "7/2012"}, {"body": "case peter also cp layout", "d": "7/2012"}, {"body": "kselden nt use layouts app think related though", "d": "7/2012"}, {"body": "pretty sure related connectoutlet fix", "d": "7/2012"}, {"body": "think fixed without reproduction steps ca nt certain", "d": "7/2012"}, {"body": "built latest master error still occurs unfortunately dig deeper tomorrow get error reloading app turns times fingers crossed able figure something", "d": "7/2012"}, {"body": "looking returned bit closer appears cache computed property values nt dug properties code enough know cache stored coming getting bit late call night hopefully provides insight least acts reminder start look deeper morning", "d": "7/2012"}, {"body": "ok last message night really go bed object view meta cache get thing debugger returned instead value called mystery least figured object", "d": "7/2012"}, {"body": "thank", "d": "7/2012"}, {"body": "maybe add consoletrace layout object instead function fiddle failed would still helpful", "d": "7/2012"}, {"body": "gets weirder narrowed computedpropertyprototypeget function obj keyname var ret cache meta thiscacheable meta metafor obj cache metacache else ret thisfunccall obj keyname return ret debugger ret object foo function context options options options return templatespeccall container handlebars context optionshelpers optionspartials optionsdata cache keyname function context options options options return templatespeccall container handlebars context optionshelpers optionspartials optionsdata reason looks like occasionally returning object value assigned breaking dual assignment two lines makes error go away since changed nt seen error reloaded page times used see times latest version chrome nt able replicate issue safari firefox", "d": "7/2012"}, {"body": "appears bug chrome sure would happening intermittently case certainly sounds like problem guess solution wait new version chrome released", "d": "7/2012"}, {"body": "related thread issue backbone fixed latest version chrome canary running dev channel update canary time think safe close bug ember", "d": "7/2012"}, {"body": "awesome sleuthing ever make released version chrome", "d": "7/2012"}, {"body": "aware think made dev amp canary builds normal folk nt affected gather", "d": "7/2012"}, {"body": "yep observable tomdale told", "d": "7/2012"}, {"body": "tchak easy fix however", "d": "7/2012"}, {"body": "seeing behavior fiddles", "d": "7/2012"}, {"body": "oops forgot properly update fiddle ones using version correct fiddle version sorry inconvenience", "d": "7/2012"}, {"body": "nt issue forgot call method permissive process fixing another bug became important", "d": "7/2012"}, {"body": "ah course thanks helping", "d": "7/2012"}, {"body": "inspection looks like value binding nothing turning valuebinding completely nt resolve issue", "d": "7/2012"}, {"body": "following code change seems resolve issue embertextarea declaration", "d": "7/2012"}, {"body": "submitted pull request issue", "d": "7/2012"}, {"body": "default context changed view controller change context via binding like", "d": "7/2012"}, {"body": "nice thanks info update question stackoverflow", "d": "7/2012"}, {"body": "duplicate", "d": "7/2012"}, {"body": "pretty sure still related fact record nt loaded yet going look soon", "d": "7/2012"}, {"body": "wagenet ivanvanderbyl think kind issue resolve put transitionto inside emberrunnext inside modeldidcreate correct anyway pr good simplify code remove dirty hack", "d": "7/2012"}, {"body": "hope", "d": "7/2012"}, {"body": "related", "d": "7/2012"}, {"body": "lazy evaluation wo nt work also need handle href workaround wrap references variable change", "d": "7/2012"}, {"body": "ok looks like may lead astray bit looking first possible current situation write serializedeserialize methods exact hash passed rest personally think way complex easily handled custom serialize methods", "d": "7/2012"}, {"body": "well know deserialize serialize method implement ones though think convention helps little bit better allowing single key query also question fact allowed lowercase id fields allowed context thing needs concrete right ways", "d": "7/2012"}, {"body": "", "d": "7/2012"}, {"body": "good know exist still feel inconsistent perhaps reason nt exist modules use classes use", "d": "7/2012"}, {"body": "jamesarosen agree seem odd detect instance mixin class mixin", "d": "7/2012"}, {"body": "make change might want tweak name bit", "d": "7/2012"}, {"body": "happens already state demonstrated", "d": "7/2012"}, {"body": "agree problem happens already state still inconsistency either consider transitioning foo foobar bar foo initial state transition case need fire enter exit events consider transition case maybe calculates state would final state initial substates foo path state current state path transitionto function nt anything", "d": "7/2012"}, {"body": "something like would help testing javascript test keeps state asked transition state already initial state function statemanager emberstatemanagercreate initialstate foo foo emberstatecreate initialstate bar bar emberstatecreate", "d": "7/2012"}, {"body": "pull requests welcome leaned ember reading documenting many classes big preamble documentation blocks button deprecated deprecation notice says use instead", "d": "7/2012"}, {"body": "joliss also started contributing ember way", "d": "7/2012"}, {"body": "closing ticket trek said prs definitely accepted desired", "d": "7/2012"}, {"body": "delegate set foo emberobject content object proxy emberobjectproxy content undefined", "d": "7/2012"}, {"body": "trek sounds right except undefined part cause test throw checks falsenes could include alot code text change code check object like text content object", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "appear work app emberapplicationcreate appparent emberobjectextend appparentreopenclass methodaddedbeforechildclasswasdefined function consolelog parent called appchild appparentextend appchildreopenclass methodaddedbeforechildclasswasdefined function consolelog called thissuper appparentmethodaddedbeforechildclasswasdefined parent called appchildmethodaddedbeforechildclasswasdefined called parent called", "d": "7/2012"}, {"body": "would also useful get working computed properties ways useful things like configuration variables class level", "d": "7/2012"}, {"body": "viatropos already ticket making work cps", "d": "7/2012"}, {"body": "viatropos since trek unable reproduce cases never seen problems going close issue still problems please submit failing test cases thanks", "d": "7/2012"}, {"body": "issue", "d": "7/2012"}, {"body": "closing duplicate since fiddle", "d": "7/2012"}, {"body": "ivanvanderbyl change declaring attribute", "d": "7/2012"}, {"body": "correct cause problem point nt specify id type default using uuids integers", "d": "7/2012"}, {"body": "btw thanks pointing seems fixed issue", "d": "7/2012"}, {"body": "handle internally pretty sure assume string", "d": "7/2012"}, {"body": "nonminified version latest release emberroute yet renamed emberstate routing works minimal level quite different head", "d": "7/2012"}, {"body": "mainly documentation mistake nt pushed documentation router yet", "d": "7/2012"}, {"body": "proxying object want", "d": "7/2012"}, {"body": "want define later perhaps view needs render async work needs happen entirely possible wrong", "d": "7/2012"}, {"body": "controller wanted backed object url would dynamic slugs context would passed would normally connected automatically controller pass manually idiomatically applicationcontroller unlikely proxy data object", "d": "7/2012"}, {"body": "trek ok convinced incidentally using contrived sets create update outlets guide finding comments documentation work router helpful", "d": "7/2012"}, {"body": "sgharms glad someone updating guide entirely complete accurate anymore hoping get bit timestrapped feel free email directly questions", "d": "7/2012"}, {"body": "possible explain error message use proxy demanded hunted long time googled unable delegate set without content property found issue clue even looking class", "d": "7/2012"}, {"body": "sure open new issue preferred message pr one get", "d": "7/2012"}, {"body": "bout changing exception throw new error content set trying delegate operation set objectproxy key key value valuetostring", "d": "7/2012"}, {"body": "kselden verbose warning committed simplyproperties change", "d": "7/2012"}, {"body": "trek posted new issue", "d": "7/2012"}, {"body": "doubt ever add support property dependencies ember data associations however might able make easier set id also nt think generally makes sense set computed properties dynamically think strong use case please open new issue", "d": "7/2012"}, {"body": "also want pursue emberdata issue open new ticket", "d": "7/2012"}, {"body": "aisensiy luck posting stackoverflow issue tracker reseved issues", "d": "7/2012"}, {"body": "trek", "d": "7/2012"}, {"body": "ok sorry wrong place", "d": "7/2012"}, {"body": "reverted commit", "d": "7/2012"}, {"body": "odd way going things nt expect work closing since nt think bug better luck stack overflow", "d": "7/2012"}, {"body": "failing test", "d": "7/2012"}, {"body": "duplicate", "d": "7/2012"}, {"body": "fix removing initialstate state manager going firsttab app ready however initialstate working javascript var app emberapplicationcreate ready function appstatemanagergotostate firsttab var states firsttab secondtab appstatemanager emberstatemanagercreate rootelement tabcontent showfirst function thisgotostate firsttab showsecond function thisgotostate secondtab firsttab emberviewstatecreate view emberviewextend templatename first secondtab emberviewstatecreate view emberviewextend templatename second", "d": "7/2012"}, {"body": "believe dup", "d": "7/2012"}, {"body": "trek right", "d": "7/2012"}, {"body": "seems like context nt get passed unless dynamic segment", "d": "7/2012"}, {"body": "wagenet milestone issue", "d": "7/2012"}, {"body": "devinus intentional nt believe makes sense contexts passed nondynamic routes wycats verify", "d": "7/2012"}, {"body": "closing since nt see makes sense allow contexts nondynamic routes", "d": "7/2012"}, {"body": "clarify point dynamicsegmentcontext pairing connectoutlets method guaranteed receive object whether state entered via path via action dynamic segments serialize context context deserialized coming router dynamic segment app flat work coming router defeats entire purpose api", "d": "7/2012"}, {"body": "wycats makes sense", "d": "7/2012"}, {"body": "unfortunately routing nt really fully baked something addressing", "d": "7/2012"}, {"body": "peter thanks look understand routing nt really done yet working well chrome sorry ask idea long works ie need figure dump routing something else might able spend time trying debug issue ie considering familiar ember inner workings chance fix reasonable amount time thanks brian thu jul peter wagenet reply replygithubcom wrote unfortunately routing nt really fully baked something addressing reply email directly view github", "d": "7/2012"}, {"body": "general would nt need clear outlets states transitioning overwrite outlets outlets root level used one state think probably using ideal fashion however really need could create method state", "d": "7/2012"}, {"body": "wagenet case blank controller view set outlet index leaf state", "d": "7/2012"}, {"body": "pixelcort definitely saying nt seem ever unconnected outlet state therefore switch new state outlet would always overridden anyway", "d": "7/2012"}, {"body": "outlet main layout top level toolbar certain sections populate sections toolbar ca nt guarantee switching sections clear position html means ca nt populate subtemplate wagenet suggests clearing exit state works fine emberrouteextend connectoutlets router gt applicationcontrollerconnectoutlet outletname apptoolbar name peopletoolbar exit router gt routersetpath applicationcontrollerapptoolbar null super router places wrapped pattern mixin appsectionwithtoolbar embermixincreate connectoutlets router gt toolbarconfig jqueryextend outletname apptoolbar toolbar applicationcontrollerconnectoutlet toolbarconfig super router exit router gt routersetpath applicationcontrollerapptoolbar null super router emberrouteextend appsectionwithtoolbar toolbar router gt name peopletoolbar using feels slightly wrong job maybe method would useful agree wagenet uncommon", "d": "7/2012"}, {"body": "going close since think already solution place rare situation necessary said someone way make even smoother open pr discussion", "d": "7/2012"}, {"body": "wagenet wait case described earlier jsfiddle replied saying set blank controller view say instead case list posts alongside specific post right way master detail view like route specific outlet would need blank", "d": "7/2012"}, {"body": "wagenet specifically index leaf state specific post selected", "d": "7/2012"}, {"body": "pixelcort imo unpopulated outlet bad design however really feel need would set outlet property default controller", "d": "7/2012"}, {"body": "pixelcort fiddle couple options see disconnect outlet add outlet blank state ie empty part page could contain message select post something wagenet think worth pr sets outlet null see fairly common thing need situations like pixelcort nested outlets index nt anything preselected setting outlets property feels like working outside outlets interface", "d": "7/2012"}, {"body": "rlivsey yeah think make index view says please select something template see empty outlet would undesirable thanks advice", "d": "7/2012"}, {"body": "rlivsey settting outlet null nt work least way managed make work calling outletview like", "d": "7/2012"}, {"body": "possible solution", "d": "7/2012"}, {"body": "plan merge would remove need", "d": "7/2012"}, {"body": "encountered tomdale claimed fix", "d": "7/2012"}, {"body": "think binding directly property arraycontroller anything sortablemixin resolve underly issue fixed", "d": "7/2012"}, {"body": "duplicate", "d": "7/2012"}, {"body": "could use right moment code", "d": "7/2012"}, {"body": "bug ca nt route directly state leafstate", "d": "7/2012"}, {"body": "gingman thanks clicking post selecting back button browser nt seem disconnects outlet specific post still appears", "d": "7/2012"}, {"body": "nvm think get connectoutlets oneway operation", "d": "7/2012"}, {"body": "sure ideal able get via", "d": "7/2012"}, {"body": "artpetrosyan either rename wrap states another named state ie root bradleypriest suggested bradleypriest still need wrap since statemanager named", "d": "7/2012"}, {"body": "absolutely issue first looking router meantime figured override naming convention created small jsfiddle explain thoughts", "d": "7/2012"}, {"body": "still called example resulting outcome look implementation see designed silently fail api optional coming existing context existing context context returned populate dynamic sections url example intended location inside", "d": "7/2012"}, {"body": "suspect website guides targeted latest released version case though need verify route change master", "d": "7/2012"}, {"body": "wagenet think referring master refers objectcontroller nt think last release", "d": "7/2012"}, {"body": "pixelcort refile issue website repo", "d": "7/2012"}, {"body": "refiled", "d": "7/2012"}, {"body": "looks like calling causes approuter instantiated probably documented guide mention another guide explains called", "d": "7/2012"}, {"body": "also confused", "d": "7/2012"}, {"body": "refile website repo", "d": "7/2012"}, {"body": "refiled", "d": "7/2012"}, {"body": "confused want nest login view within yo dawg heard joke somewhere nt controllers available indeed need add could wrap method standard way add later", "d": "7/2012"}, {"body": "nt want login view inside test practical example would project manager example task could tasks case would end task inside task inside task suspect router rewritten bit allow onthefly routes length chain nt known runtime edit point think bad idea store instances router think related route nt think store intial lower case name constructor consider difftool two windows comparing two files sidebyside thinking somewhere along path storing controller attached somehow outlet rendered think necessary address problem lot easier fix without care backwards compatibility", "d": "7/2012"}, {"body": "wycats tomdale made lot decisions would great could chime", "d": "7/2012"}, {"body": "ask stackoverflow", "d": "7/2012"}, {"body": "encountering issue also seems like presence ember version clobbers addthis widget lord knows sort nonsense addthis code introduces", "d": "7/2012"}, {"body": "digging little deeper seems addthis tripping ember array extensions specifically point error occurs addthis trying iterate nested array translations point error thrown assigned method defined ember rather expected array", "d": "7/2012"}, {"body": "problem mitigated assigning object", "d": "7/2012"}, {"body": "interesting example dangers extending native objects", "d": "7/2012"}, {"body": "thank jgwhite", "d": "7/2012"}, {"body": "guess addthis using hasownproperty guard", "d": "7/2012"}, {"body": "joliss absolutely sadly bet addthis library provider without safeguards specific case even defaulting object rather array would improvement try catch block", "d": "7/2012"}, {"body": "think tchak solution good enough", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "wagenet must miss something see assertion fixing", "d": "7/2012"}, {"body": "tchak bradleypriest said happy assertion actually ember bug hard debug mistake", "d": "7/2012"}, {"body": "disagree expect action show juste work view backed objectproxy action show context content confusing", "d": "7/2012"}, {"body": "tchak mentioned different manifestation problem run times since agree need warning problem delegating proxy object default makes difficult someone ever wants set proxy context", "d": "7/2012"}, {"body": "tchak good point reopen", "d": "7/2012"}, {"body": "apparently particular feature changed master logical behavior context child view preserved unless explicit controller set", "d": "7/2012"}, {"body": "unfortunately commit breaks things reverting reopening fixed properly", "d": "7/2012"}, {"body": "updated fiddle", "d": "7/2012"}, {"body": "workaround try instead fact former works implies problem may keywords related", "d": "7/2012"}, {"body": "wonder related", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "yes issue could nt resolve loosen binding made synchronisation hand workaround", "d": "7/2012"}, {"body": "second kselden question", "d": "7/2012"}, {"body": "correct way fix want support older versions jquery able push affect events pretty sure solve problem", "d": "7/2012"}, {"body": "someone submit pull request uses fixhooks bumps us", "d": "7/2012"}, {"body": "merged looks like", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "updated still happening", "d": "7/2012"}, {"body": "also seeing xp", "d": "7/2012"}, {"body": "suspect issue related fact ie nt browsers get identical error somewhere relying direct property access using idea though", "d": "7/2012"}, {"body": "brief investigation looks like error may coming containerview use defineproperty", "d": "7/2012"}, {"body": "ugh finally found cases outlet used becomes watched browsers fine direct access need use browsers without pr forthcoming", "d": "7/2012"}, {"body": "hjdivad chance look", "d": "7/2012"}, {"body": "ebryn maybe could chime", "d": "7/2012"}, {"body": "igort think pr fix test explicitly bug", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "updated fiddle", "d": "7/2012"}, {"body": "fixed kselden branch", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "think fixed however probably need implement polling support", "d": "7/2012"}, {"body": "resubmit ticket website repo thanks", "d": "7/2012"}, {"body": "looking", "d": "7/2012"}, {"body": "got back appears", "d": "7/2012"}, {"body": "commadelimited intermittent error would imply timing issue makes feel better hit", "d": "7/2012"}, {"body": "commadelimited bradleypriest right direction issue getting called templates loaded fixed moving end however worth considering better way us", "d": "7/2012"}, {"body": "peter mean end page know best practice really hate script tags belong head old school", "d": "7/2012"}, {"body": "commadelimited yes meant", "d": "7/2012"}, {"body": "moving appjs end nt help sauliusb said moving function solved problem least", "d": "7/2012"}, {"body": "think hesitation fix within library relates bigger issues web development particular application environment using preprocessor domreadiness loading templates incrementally etc discussion checking time whether handlebars finished bootstrapping issuing warning least know whyyou getting warning suggesting specific ways resolve warning probably beyond scope framework", "d": "7/2012"}, {"body": "looks like mistaken nt fixed yet", "d": "7/2012"}, {"body": "nevermind fixed test messed", "d": "7/2012"}, {"body": "merged think fine", "d": "7/2012"}, {"body": "suspect may fixed work kselden right", "d": "7/2012"}, {"body": "appears fixed master already", "d": "7/2012"}, {"body": "rlivsey looks like working current master let know missing something reopen", "d": "7/2012"}, {"body": "tomdale actually fixing", "d": "7/2012"}, {"body": "interestingly fixes duplicates seeing missing items rerender investigate see shed light tomorrow", "d": "7/2012"}, {"body": "seems setting still runs similar issue", "d": "7/2012"}, {"body": "think likely big performance issue demonstrate otherwise gladly reopen", "d": "7/2012"}, {"body": "pretty difficult since action helper nt aware current context however may still possible wo nt close", "d": "7/2012"}, {"body": "ebryn still still case know back forth propagation changes last week", "d": "7/2012"}, {"body": "pretty sure fixed", "d": "7/2012"}, {"body": "think might fixed would good someone verify", "d": "7/2012"}, {"body": "pretty sure resolved still problems would helpful someone could provide failing test case", "d": "7/2012"}, {"body": "covered", "d": "7/2012"}, {"body": "elod looked new context roules ember master think resolve problem preserve context parent views behavior showing right calling go context chain one level would recommend using ember even surprised working", "d": "7/2012"}, {"body": "tchak works handlebars paths work quoted strings ie since behavior correct closing issue", "d": "7/2012"}, {"body": "indeed bug think would handlebars issue guess could demonstrate using pure handlebars change context would considered ember bug", "d": "7/2012"}, {"body": "sry vacation tchak following ember lately nt checked issue still holds furthermore nt sure really bugissue found situation reported freenode somebody wagenet recall correctly suggested open gh issue intended behavior changes context issue closed think stumbled upon thing trying use collectioneach helper access variables different contexts tchak mentioned context cleaned lately", "d": "7/2012"}, {"body": "elod problem even issues turn bugs helpful filed verify", "d": "7/2012"}, {"body": "guess storage mean computed properties nt readonly might read already otherwise look", "d": "7/2012"}, {"body": "understand well want override set property need touch", "d": "7/2012"}, {"body": "think tchak right let know still nt work", "d": "7/2012"}, {"body": "nt something likely support nt think would easy either however would consider pr", "d": "7/2012"}, {"body": "petrjanda new routerapplication structure resolve underlying issue", "d": "7/2012"}, {"body": "sure setup something recommend explicitly support since seems router targeted would address concerns closing ticket let know disagree reopen", "d": "7/2012"}, {"body": "useful worth blocking", "d": "7/2012"}, {"body": "deprecated", "d": "7/2012"}, {"body": "created pull request", "d": "7/2012"}, {"body": "closing favor pr", "d": "7/2012"}, {"body": "neppord syntax supported", "d": "7/2012"}, {"body": "case call whatever passed explains results", "d": "7/2012"}, {"body": "however binding work bug", "d": "7/2012"}, {"body": "kselden status", "d": "7/2012"}, {"body": "kselden wagenet news last friday play reindexing sorting manyarray encountered strange issue sure mistake morning seeing realize exactly symptoms workaround", "d": "7/2012"}, {"body": "kselden wagenet tomdale tried make short example reproduce issue happens using sortablemixin wanted reorder least elements see", "d": "7/2012"}, {"body": "fiddle comparison emberdata problematic array case creating proxy content sorting rendering emberdata case rendering empty array populating sorted inserts updating problem lies inserts scheduled updated would happen without ember data pushed objects onto array rendering", "d": "7/2012"}, {"body": "think nt understand mean perhaps appset myemberdatacontroller appmycontrollercreate content appstorefindall appmymodel findall query empty populating anyway cases items sorted insert executing fiddle array case emberdata case wrong behavior", "d": "7/2012"}, {"body": "shows root problem", "d": "7/2012"}, {"body": "wow ok example simple thanks buggy behavior hard detect error message wonder matter rendering improvement behavior bug", "d": "7/2012"}, {"body": "confirm viewstates deprecated", "d": "7/2012"}, {"body": "viewstate deprecated removed cc wagenet", "d": "7/2012"}, {"body": "close viewstates removeddeprecated", "d": "7/2012"}, {"body": "ah whoops nt realize already deprecated", "d": "7/2012"}, {"body": "raycohen rlivsey think something else mind right create method get called keyup suggestion support matter fact judging already done", "d": "7/2012"}, {"body": "kselden know working stuff related think", "d": "7/2012"}, {"body": "get tackled", "d": "7/2012"}, {"body": "may addressed kseldens branch", "d": "7/2012"}, {"body": "fixed", "d": "7/2012"}, {"body": "tomdale think important enough block release thinking", "d": "7/2012"}, {"body": "tomdale moving good path forward change back", "d": "7/2012"}, {"body": "finally benchmarked discovered difference nt significant seems likely merge", "d": "7/2012"}, {"body": "closing favor pr", "d": "7/2012"}, {"body": "closing strong need pr would considered", "d": "7/2012"}, {"body": "would nice status", "d": "7/2012"}, {"body": "viatropos updates moment kselden thought", "d": "7/2012"}, {"body": "fairly straightforward make work", "d": "7/2012"}, {"body": "wycats doubts know", "d": "7/2012"}, {"body": "probably use private stuff like proto dependentkeys cacheable make work better way obviously nt found", "d": "7/2012"}, {"body": "nt spot would applymixin", "d": "7/2012"}, {"body": "fordi nt specifically mean solution meant wycats doubts feature general", "d": "7/2012"}, {"body": "say", "d": "7/2012"}, {"body": "kselden wycats said nt sure support know feels way", "d": "7/2012"}, {"body": "accessor method would nt want support overloading accessor method", "d": "7/2012"}, {"body": "nt seem momentum however would consider pr", "d": "7/2012"}, {"body": "let remove readme move towards updated docs site guides better learning tools outdated todos example", "d": "7/2012"}, {"body": "master transition event default happens transition completed think serves stated goals", "d": "7/2012"}, {"body": "nt see us changing way things current master closing issue", "d": "7/2012"}, {"body": "posterity believe recommended solution must use custom view class", "d": "7/2012"}, {"body": "fwiw similar request", "d": "7/2012"}, {"body": "wycats true guess add keyword would address case also case close duplicate anyway", "d": "7/2012"}, {"body": "nt think something likely add", "d": "7/2012"}, {"body": "less issue internals use emberevented", "d": "7/2012"}, {"body": "kselden branch touch", "d": "7/2012"}, {"body": "looks like still issue", "d": "7/2012"}, {"body": "chains chain properties produce arrays requires changes stated nt done work also problematic changes array", "d": "7/2012"}, {"body": "move milestone trying get manageable list release", "d": "7/2012"}, {"body": "sure", "d": "7/2012"}, {"body": "think wycats working adding support something like may remembering incorrectly", "d": "7/2012"}, {"body": "nt important would nt mind answer release", "d": "7/2012"}, {"body": "kselden might also insight", "d": "7/2012"}, {"body": "nt use anymore", "d": "7/2012"}, {"body": "viewstate deprecated removed cc wagenet", "d": "7/2012"}, {"body": "close view states removed", "d": "7/2012"}, {"body": "whoops nt realize already deprecated", "d": "7/2012"}, {"body": "imagine solves close", "d": "7/2012"}, {"body": "think trek right", "d": "7/2012"}, {"body": "new object proxysimplified properties provide solution trying get accurate milestone list", "d": "7/2012"}, {"body": "kselden thoughts", "d": "7/2012"}, {"body": "looks like fixed kselden branch", "d": "7/2012"}, {"body": "fixed though need make sure notifies changes", "d": "7/2012"}, {"body": "kselden performance like days", "d": "7/2012"}, {"body": "still case lot commits event propagation last week", "d": "7/2012"}, {"body": "things seem lot better probably verify wycats tomdale", "d": "7/2012"}, {"body": "think covered closing", "d": "7/2012"}, {"body": "nt think precompilation test important since failure actually precompilation nt something normally within ie", "d": "7/2012"}, {"body": "seems like embercontrols old stuff going die still move tabs core least take issue milestone even sure approach tabs uses still", "d": "7/2012"}, {"body": "trek agreed removing instead moving tabs fine", "d": "7/2012"}, {"body": "alternative embertabs better approach", "d": "7/2012"}, {"body": "apps generally achieve result however want old tabs code minimal nt issue create implementation", "d": "7/2012"}, {"body": "confirm", "d": "7/2012"}, {"body": "move milestone trying get manageable list release nt seen much attention", "d": "7/2012"}, {"body": "move milestone trying get manageable list release", "d": "7/2012"}]