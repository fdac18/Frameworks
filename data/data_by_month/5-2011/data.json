[{"title": "binding collection refresh view effect", "body": "", "num": "385", "d": "5/2011"}, {"title": "refresh event collection", "body": "suggest add refresh event collectionadd method give opportunity aware models added case give array models add function models options isarray models var l modelslength lt l thisadd models options else thisadd models options optionssilent amp amp thistrigger refresh options return", "num": "383", "d": "5/2011"}, {"title": "rails form serialization", "body": "hi working backbone rails trying save form backbone serialize jquery like problems due attributes namespacing read accross issues namespace issue nt think case since putting data server fetching leave code obtain error best way use rails form backbone anyway", "num": "381", "d": "5/2011"}, {"title": "change events model fired attributes set", "body": "given following model following two code snippets cause model viewed differently triggered version mymodelset loaded true title bye anything listening change loaded event gets model title hello version b mymodelset title bye loaded true anything listening change loaded event gets model title bye inconsistent behavior caused change events fired one one attributes set model instead change events fired attributes set", "num": "380", "d": "5/2011"}, {"title": "todos example allows empty entries", "body": "todos app lets create empty entries also lets edit existing entry set content blank string", "num": "378", "d": "5/2011"}, {"title": "stale annotated source file todos example", "body": "todosjs changed todoshtml updated", "num": "377", "d": "5/2011"}, {"title": "inconsistent result haschange", "body": "var model new backbonemodel foo bar modelset foo baz silent true consolelog modelhaschanged consolelog modelhaschanged foo output whereas currently backbone", "num": "376", "d": "5/2011"}, {"title": "correct success callback fetch method reference window", "body": "hi sorry bother looked issues nt find duplicate situation model like user backbonemodelextend url function var base users thisisnew return base return base basecharat baselength thisid see refreshuserdata method output two objects data object shows sure reference current user model shows window correct must referencing current model sorry english may native language thanks advance time agustin", "num": "375", "d": "5/2011"}, {"title": "give spinejs good readthrough", "body": "maccman discussed would great projects like backbone spine learn one another released give spinejs codebase good readthrough interesting ideas", "num": "374", "d": "5/2011"}, {"title": "current attributes models become previous attributes early", "body": "resetting previous attributes seems happen early ie soon event listeners called current attributes become previous attributes really happen next time set called otherwise following code fails var model backbonemodelextend foo function thisset key thistrigger fooevent var model new model key modelbind fooevent function consolelog modelprevious key modelfoo output backbone", "num": "372", "d": "5/2011"}, {"title": "collection get method use model idattribute property otherwise wo nt work mongodb models", "body": "collection get method use model idattribute property otherwise wo nt work mongodb models", "num": "371", "d": "5/2011"}, {"title": "backbone model tojson nt serialize nested collections", "body": "got model nested backbone collection calling tojson nt serialize collection property json array", "num": "370", "d": "5/2011"}, {"title": "backbone nt find objects sub collections saved silent true", "body": "hi say dokuments collection notes collection within dokuments added note saved later silently id returned server copied object ca nt found get dok dokumentsget doknotesget undefined doknoteslast get id thank advance hints frank", "num": "369", "d": "5/2011"}, {"title": "controller documentation", "body": "documentation controller usage extremely lacking one example given sample application use controllers difficult determine exactly controllers used given limitation", "num": "368", "d": "5/2011"}, {"title": "backbonejs incompatible jquery mention docs", "body": "", "num": "367", "d": "5/2011"}, {"title": "support namespaced events", "body": "right looks like backboneview nt support binding namespaced events regexp example want bind view coffeescript class myview extends backboneview events endpjax hideloader hideloader gt contextloader hide wo nt work regexp splits endpjax match w endpjax end pjax index input endpjax bug reason dots nt allowed regexp wrong", "num": "366", "d": "5/2011"}, {"title": "", "body": "constructor strikes curious line far tell argument nt modified anywhere else backbone", "num": "365", "d": "5/2011"}, {"title": "ca nt figure", "body": "", "num": "364", "d": "5/2011"}, {"title": "beforesave aftersave events models", "body": "planned already implemented provide models beforesave aftersave events aware validation functions nt fit needs nothing like would accept pull requests functionality jan", "num": "362", "d": "5/2011"}, {"title": "collection batch loading", "body": "collections great loading small numbers models many hundreds thousands even models exist impractical load models via fetch better method batch operations x number models fetched held memory time good example paging items think fetch modified allow hash parameters gets passed sync sync layer knows exactly models load used paging querying certain models etc", "num": "361", "d": "5/2011"}, {"title": "add hello world example", "body": "think want use backbone project feel like harder time wrapping head around todo example helpful think bit much complete newbies reading docs cover cover also seems bit daunting think needed simple example lt loc illustrating basic ideas", "num": "360", "d": "5/2011"}, {"title": "support models one level attributes", "body": "plan support complex models attributes nested eg var personmodel firstname john lastname doe contactinfo emailaddress johndoe xyzcom phonenumbers home work cell currently fetch populate models get set methods work workaround directly accessing attributes property serious problems change model support", "num": "358", "d": "5/2011"}, {"title": "creating multiple models defaults deeply cloned", "body": "defaults object function backbone uses underscore extend copy defaults onto newly created instances clear seems default attributes objects underscore extend nt deeply clone means multiple instances backbone model shared attributes leads crazytown jquery extend better job deeply cloning solution found locally simply define defaults function returns new anonymous object rather assigning anonymous object defaults property model class sure anything backbone maybe use jquery extend maybe deprecate using object default property value model maybe document annotations others learn", "num": "356", "d": "5/2011"}, {"title": "question possible ok init view inside model", "body": "hi new backbone please forgive asking stupid questions anyhow read lots tutorials focused generating objects already page ones already need generate elements onload server side need search engines see anyhow document ready im something like put collection views think code least one problem need save element model attribute reuse later create view correct way", "num": "355", "d": "5/2011"}, {"title": "add travis ci examples", "body": "think travis ci would great addition examples section travisci", "num": "354", "d": "5/2011"}, {"title": "latest code published npm oo", "body": "looking source github file length lines backbonejs file lines well minor differences source packagejson github master says version npm ls also get crazy", "num": "353", "d": "5/2011"}, {"title": "multiple controller callbacks single common hash url", "body": "hi possible trigger multiple events callback functions particular route matched kind trigger order example hypothetical mail application controllersidebar backbonecontrollerextend routes mails mail mail function consolelog sidebar controller fetch mail count refresh sidebar update count emails controllermail backbonecontrollerextend routes mails index index function consolelog mail controller fetch mail render index fragment", "num": "352", "d": "5/2011"}, {"title": "expose helper functions", "body": "backbone contains lots small helper functions like etc would cool expose similar", "num": "351", "d": "5/2011"}, {"title": "move inherits", "body": "hi wonder deserves live underscorejs seems robust crossbrowser tia vladimir", "num": "350", "d": "5/2011"}, {"title": "expose var decouple library dependency", "body": "currently iife var points either expose backbone object overwritten without edit backbone source directly perhaps even backbonelibrary declares easily extend override methods might overkill would easily allow use bigger variety libraries", "num": "347", "d": "5/2011"}, {"title": "backbonehistoryloadurl undefined", "body": "problem backbone routing breaking internet explorer trying use fix thissavelocation backbonehistoryloadurl route called stays current route jump back previous route however see loadurl definition backbonehistory look firebug says undefined calling ie says object attribute nt exist help", "num": "346", "d": "5/2011"}, {"title": "save model previous save issues post create instead put update request", "body": "developed nice rich application interface users add objects quickly start updating properties objects simply tabbing relevant fields problem sometimes user beats server initial save end saving two objects example recreate problem follows user clicks add person button add dom nt save anything yet nt data yet code sample person new person user enters value name field tabs name field loses focus triggers save update model server model new backbonejs automatically issue post create request server code sample personset name john code sample personsave create new model user quickly types age field tabbed enters tabs next field age therefore loses focus triggers save update model server code sample personset age code sample personsave update model would expect scenario one post request create model one put requests update model however first request still processed response code point run actually get two post requests thus two objects created instead one question whether best practice way dealing problem backbonejs backbonejs queuing system save actions one request sent previous request object succeededfailed alternatively build something handle gracefully either sending one create request instead multiple update requests perhaps use throttling sort check backbone model middle request wait request completed advice deal issue would appreciated happy take stab implementing sort queuing system although may need put code wo nt well formed existing code base", "num": "345", "d": "5/2011"}, {"body": "alternative fix something like var instance thissync window thissync backbonesync call instance read success error", "d": "5/2011"}, {"body": "patch issue tempjs backbonejs optionssuccess optionssuccess model resp var error wraperror optionserror model options thissync backbonesync read success error fix issue backbone var instance thissync window thissync backbonesync call instance read success error return var error wraperror optionserror model options var method thisisnew create update thissync backbonesync method success error fix issue backbone var instance thissync window thissync backbonesync call instance method success error return optionssuccess optionssuccess model resp var error wraperror optionserror model options thissync backbonesync delete success error fix issue backbone var instance thissync window thissync backbonesync call instance delete success error return optionssuccess optionssuccess collection resp var error wraperror optionserror collection options thissync backbonesync read success error fix issue backbone var instance thissync window thissync backbonesync call instance read success error return", "d": "5/2011"}, {"body": "yeah way javascriptbackbone works want user object scope add function", "d": "5/2011"}, {"body": "ok thanks lot anwser close issue thanks", "d": "5/2011"}, {"body": "sorry wrong works fine got updated version local machine", "d": "5/2011"}, {"body": "absolutely right want customize function produce custom serialization feel free override", "d": "5/2011"}, {"body": "default implementation produce invalid json nested backbone collection present returned object type still backbonecollection", "d": "5/2011"}, {"body": "correct stuffing collections invalid default", "d": "5/2011"}, {"body": "correct model id nt considered changed next change event fires model still found old id happens like trigger change event call", "d": "5/2011"}, {"body": "ahh see thank reply", "d": "5/2011"}, {"body": "fixed soonish branch backbonecontroller renamed backbonerouter clarity although still going used example app documentation better motivate howwhy want use including perhaps pointing documentcloud workspace live example", "d": "5/2011"}, {"body": "mentioned commit thanks note", "d": "5/2011"}, {"body": "welcome", "d": "5/2011"}, {"body": "patch unintentional", "d": "5/2011"}, {"body": "discussed commit patch test closing ticket", "d": "5/2011"}, {"body": "right need delete really fixed commit", "d": "5/2011"}, {"body": "plan build core backbone add events quite easily overriding model class", "d": "5/2011"}, {"body": "think app logic furthermore always override tell server want get", "d": "5/2011"}, {"body": "override fetch whatever page items want also pass jqueryajax options directly", "d": "5/2011"}, {"body": "sure anyone wants contribute simpler clearer hello world app glad host homepage", "d": "5/2011"}, {"body": "think something like html file would helpful still learning feel free make changes something improperly entry model collection entry view rendered template windowentry backbonemodelextend windowentries backbonecollectionextend model entry localstorage new store entries windowentries new entries windowentryview backboneviewextend template template entrytemplate html render function thisel html thistemplate thismodeltojson var content thismodelget content entrycontent text content return application view element input events model update hooks windowappview backboneviewextend el body events keypress newentry createonenter initialize function bindall newentry refreshentries entriesbind add thisnewentry entriesbind refresh thisrefreshentries entriesfetch create entry view append entrylist create enter newentry function entry var view new entryview model entry entrylist append viewrender el refreshentries function entrieseach thisnewentry createonenter function e ekeycode return entriescreate content newentry val windowapp new appview", "d": "5/2011"}, {"body": "later today tomorrow planning publish blog post simple example app quite hello world simple much less todo app example apps aimed beginners trying understand different backbone components work together post link thread", "d": "5/2011"}, {"body": "demo app planning write tutorial goal show different mvcc components interact simplest possible scenario something substantive practical hello world downside backboney nt show backbone core features like binding model changes syncing data server motivation writing help newcomers basics nt clear started backbone seen fair number requests discussion threads beginnerlevel examples wanted try help still fairly new backbone want make sure promoting bad practices anyone feedback would greatly appreciated", "d": "5/2011"}, {"body": "hi look seb", "d": "5/2011"}, {"body": "looks good dealing embedded objects dont really want create separate models able reliably access nested attributes example provided would nice could personmodelget contactinfophonenumbershome rather personmodelattributescontactinfophonenumbershome believe backbone currently assumes flat data model pm sebslomski reply replygithubcom wrote hi look seb reply email directly view github", "d": "5/2011"}, {"body": "afraid flat keys json object nt valid notion perfectly valid key object changes work similarly twiddle property object identify object remains answer question plans support style attributes", "d": "5/2011"}, {"body": "think would valid way deal deep properties backbone wanted support also deep merging models would become generic eventpowered wrapper js object valuable even separate pattern bound dbtransport best regards vladimir", "d": "5/2011"}, {"body": "common javascript gotcha nt unique backbone place passing objects reference addition reliable function deep clone jquery works simple cases fails complex ones added warning commit", "d": "5/2011"}, {"body": "erm think better", "d": "5/2011"}, {"body": "yes passing dom element view initialize way go elements already extant page", "d": "5/2011"}, {"body": "yep travisci would great example glad add write paragraph", "d": "5/2011"}, {"body": "great added issue tracker", "d": "5/2011"}, {"body": "crazy master branch good bit ahead released pushed npm", "d": "5/2011"}, {"body": "ahh gotcha", "d": "5/2011"}, {"body": "looking code guess using function returns back soon finds match see loadurl function thoughts better design clubbing multiple view rendering within one route callback controller done current design multiple controllers handle different view rendering common hashroute current backbone design requires modification", "d": "5/2011"}, {"body": "better design definitely first match used instead possible matches want two different things happen accessed controller action call two functions", "d": "5/2011"}, {"body": "agree thanks response", "d": "5/2011"}, {"body": "perhaps nt want enlarge backbone public api grabbag stuff feel free copyandpaste codebase like large part reason source code annotated", "d": "5/2011"}, {"body": "nope asked look issues", "d": "5/2011"}, {"body": "also like idea configuration exta libs stated undescore one dependency reality need jquery sometimes overkill", "d": "5/2011"}, {"body": "simple overriding afraid api actually needs compatible way make backbone support frameworks add capability backbone zepto support added glad take noninvasive patches along lines", "d": "5/2011"}, {"body": "btw also tried read fix add backbonejs file thisiframedocumentopen close thisiframelocationhash windowlocationhash code made things worse nt get js error reason backbone views nt render", "d": "5/2011"}, {"body": "also add internet explorer trigger hashchange route get never ending stream object nt exist errors guessing may backbone polling thread used keeps trying call loadurl nt exist", "d": "5/2011"}, {"body": "looking buddy", "d": "5/2011"}, {"body": "presumably get id server using clientside uuidguids way set id immediately save future isnew evaluate false", "d": "5/2011"}, {"body": "hi matt nice idea would unfortunately require change default database set rails apps prefer work around issue rather see potential solution implemented yet update ticket amp stackoverflow works matt", "d": "5/2011"}, {"body": "nt think core backbone default queueing nt hard override app override ensure prior xhr finished launching next one make nice plugin would great material backbone wiki", "d": "5/2011"}, {"body": "yes unfortunately longstanding bug safari android incorrectly predecode url times afraid much nudged webkit bugzilla tracker", "d": "5/2011"}, {"body": "implement notifications listening events specific models looks like want single global message interchange bad pattern imo hey whatever floats boat could build one quite easily like var pubsub new backbonemodel backboneviewextend initialize function pubsubbind custom event callback backboneviewextend foo function pubsubtrigger custom event data", "d": "5/2011"}, {"body": "idea sorry check typos", "d": "5/2011"}, {"body": "fixed branch go", "d": "5/2011"}, {"body": "problem set undefined though means assign model different collections first one collection owns model guess situation improve", "d": "5/2011"}, {"body": "deleting comment nt realised documentation relates tag latest backbonejs new git bad", "d": "5/2011"}, {"body": "transparent support caveat longstanding safari bug ready testing branch anyone wants give spin", "d": "5/2011"}, {"body": "makes sense thanks jeremy", "d": "5/2011"}, {"body": "know issue closed ran issue couple days ago thought share fix little simpler nt require nulling callbacks found cloning array calling reassigning property clean solution cheers aron edit updated ticket remove example code broken", "d": "5/2011"}, {"body": "problem adding entry like need add routes initialization routes matched order inserted routes added route never matched historystart solution works page load still think worthwhile feature add", "d": "5/2011"}, {"body": "works better class quicknuminputview extends forminputview plusid elementid plus minusid elementid minus template label events extend forminputviewprototypeevents click plus doplus click minus doplus locates solution near problem still love able make generic seems events really method could class quicknuminputview extends forminputview plusid elementid plus minusid elementid minus template label events extend super click plus doplus click minus doplus", "d": "5/2011"}, {"body": "update check current progress branch", "d": "5/2011"}, {"body": "consensus jquery bug guess fixed jquery", "d": "5/2011"}, {"body": "fact fixed jquery see", "d": "5/2011"}, {"body": "apparently might want try backbone google group", "d": "5/2011"}, {"body": "sounds like trying access dom initialized", "d": "5/2011"}, {"body": "branch takes option allows get behavior easily", "d": "5/2011"}, {"body": "looks like duplicate", "d": "5/2011"}, {"body": "nice would make decent backbone plugin", "d": "5/2011"}, {"body": "considering models return value comparator order would undefined nt think particularly surprising nt want use comparator nt pass one", "d": "5/2011"}, {"body": "afraid javascript works backbone models nt defined schemas arbitrary hashes passed way go want create backbone plugin behavior sure would popular wiki", "d": "5/2011"}, {"body": "hah nice catch", "d": "5/2011"}, {"body": "sure models nt store either least anymore general local variables preferred instance variables possible", "d": "5/2011"}, {"body": "encountered similar issue today seems something fact backbone records previous attributes whole instead ones changed", "d": "5/2011"}, {"body": "thanks bug report previously known limitation synchronous change events nested think way fix take look commit let know think", "d": "5/2011"}, {"body": "works", "d": "5/2011"}, {"body": "like change behavior recommended override", "d": "5/2011"}, {"body": "nt creating pull request idea core dry eases maintenance", "d": "5/2011"}, {"body": "afraid url reversing nt sound concept routes able take arbitrary regular expressions arbitrary regular expressions ca nt reversed even django addition good urls nt change code changes url reversing general kind antipattern humble opinon try stay away even serverside", "d": "5/2011"}, {"body": "thanks note commit updated documentation make clear friends useful course event", "d": "5/2011"}, {"body": "really lovely ticket thanks research said sure concrete path forward proposed tauren considered trying turn ideas patch", "d": "5/2011"}, {"body": "jashkenas hoping get thoughts best handle building patch main concern solution probably backwards compatible high likelihood patch would rejected overall intent make sure error handlers receive consistent set parameters consistent order information lost along way several options proposed stand preferred way forward error handlers passed possible parameters null values nt make sense error handlers passed single object properly named properties properties nt make sense defined call save multiple error handlers instead one would mean would validationerror syncerror handler additional events error sync error validation somewhat leaning toward option would nt apibreaking change would acceptable", "d": "5/2011"}, {"body": "api breaking ok especially context major release backbone going hand complicating interface much would indeed probably get rejected current master callbacks events always passed true error object could clientside validation jquery response options may bit bit less processed nt think major issues anything simple ca nt solve none three options seem like real improvements", "d": "5/2011"}, {"body": "see committed change always passes options happening simple able solve problem case latest commit given perhaps would best leave user figure failed complicate", "d": "5/2011"}, {"body": "yep feel free define bulk modification individual resources something outside scope simple rest nt onesizefitsall implementation go wind good conventions bulk saves bulk deletes bet would make highly successful backbonejs plugin", "d": "5/2011"}, {"body": "nope looks like bug code probably mean call bind also probably want define fat arrow", "d": "5/2011"}, {"body": "right accounts fixed ago forgot close sorry", "d": "5/2011"}, {"body": "yep point entirely synchronous clientside like perform serverside validation feel free run validation change clientside state calling another option assume validation pass allow server reject change passing back either error resetting model back previous attributes three options work fine", "d": "5/2011"}, {"body": "nice idea nt think reinventing dom event bubbling terms backbone views always use dom events jquery custom events like might make popular backbonejs plugin", "d": "5/2011"}, {"body": "anyone still working backbone ie history supported extjs history dojo history historyjs reason backbonejs outsider currently url bookmark causes ie lt redirect visitor empty hash write pull request fix lots pulls hanging already backbone supported", "d": "5/2011"}, {"body": "thanks nudge commit fix issue would incorrectly blank window hash iframe hash initial page load initial loads url containing hash", "d": "5/2011"}, {"body": "jonleighton thanks patch saved lot time nerves", "d": "5/2011"}, {"body": "yes backbone default restful thing put complete representation resource server like send changed state default overriding way go", "d": "5/2011"}, {"body": "afraid perfectly valid key javascript object want custom object comparisontraversal going write logic", "d": "5/2011"}, {"body": "hopefully fixed master go still trouble let reopen ticket", "d": "5/2011"}, {"body": "nt think makes sense prefix routes underneath true page level especially actual support master certainly override like", "d": "5/2011"}, {"body": "sorry jquery issue fixed jquery", "d": "5/2011"}, {"body": "like add custom events feel free idea backboneevents mixinable object supporting custom event like better accomplished overriding function simply passing options directly jquery", "d": "5/2011"}, {"body": "nice glad easy implement use case nt think makes sense core backbone despite client might think server state may nt really know server state actually situation state could modified another user cached state simply incorrect client know client state check server instead assuming", "d": "5/2011"}, {"body": "backbone proxies model events collection model currently contained happens model contained multiple collections", "d": "5/2011"}, {"body": "sure follow usecase entirely imagine wrapper function would way go remember nt use complicated things use jquerydelegate whatever functions like", "d": "5/2011"}, {"body": "also running issue would like know best solution handling nested models collections", "d": "5/2011"}, {"body": "cuboxbackboneatlas good ideas nested models amp collections work duplicates yet", "d": "5/2011"}, {"body": "nt see one could check backbonerelational pretty sure need javascript var user backbonerelationalmodelextend var project backbonerelationalmodelextend relations type backbonehasmany key members relatedmodel user type backbonehasone key manager relatedmodel user reverserelation type backbonehasmany key manages instantiate users projects match usersprojects id like desired syntax id name projecta members manager", "d": "5/2011"}, {"body": "multiple valid ways model object relationships clientside true object graph flat sql tables remote backbone agnostic model clientside relationships different circumstances work well different use cases deep nested attributes instead models example tags array strings post model nested collections true models example documentsfirst notes collection foreignkey style manytomany relationships example documents collection notes collection refer even fancier schemes possible even desirable need optimize things heavily approach tend use documentcloud described", "d": "5/2011"}, {"body": "cool helps lot thanks fri may jashkenas lt reply replygithubcom wrote multiple valid ways model object relationships clientside true object graph flat sql tables remote backbone agnostic model clientside relationships different circumstances work well different use cases deep nested attributes instead models example tags array strings post model nested collections true models example documentsfirst notes collection foreignkey style manytomany relationships example documents collection notes collection refer even fancier schemes possible even desirable need optimize things heavily approach tend use documentcloud described reply email directly view github", "d": "5/2011"}, {"body": "nt think need change api call twice add helper function", "d": "5/2011"}, {"body": "merged upcoming branch master support optin basis start history get pushstate instead hashes routes note requires server able handle pushstateminted urls using nonpushstate browser ie still get usual hashes ie user sends hashbased link pushstate user get transparently upgraded pushstate version url pushstate user sends realurl ie user first route change page refresh hashbased version url changes point involve page refresh hopefully allows us best worlds backbone support urls nothing optional hidden state parameter pushstate api hopefully avoid many known bugs said still fairly major safari bug makes difficult putting urlencoded parts routes like arbitrary search queries careful safari autourldecodes information coming windowlocation incorrectly means urlencoded indistinguishable literal backbone perspective want try early give current master spin", "d": "5/2011"}, {"body": "ping jashkenas", "d": "5/2011"}, {"body": "new user really confused", "d": "5/2011"}, {"body": "vote changing ecmascript bind method function prototype accept move away jquery convention see", "d": "5/2011"}, {"body": "", "d": "5/2011"}, {"body": "patch worked ago make backboneevents like node eventemitter", "d": "5/2011"}, {"body": "heart", "d": "5/2011"}, {"body": "heart", "d": "5/2011"}, {"body": "thumbs often find needing kind functionality could easily use underscorejs leaves unnecessary callbacks internal callback array", "d": "5/2011"}, {"body": "seems little app specific make backbone", "d": "5/2011"}, {"body": "testing thing ietester standard tool used interface developers test sites multiple browsers able test css ietester using backbonejs big downside compatibility mode problems done testing using ietester empty page works fine rest tests done changing backbone sourcecode directly using blank crashes browser using javascript false gives error using javascript void crashes browser using javascript crashes browser using crashes browser using crashes browser really mess see way", "d": "5/2011"}, {"body": "added method fork commit something similar discussed pass attributes either updates existing instances using adds new instance collection seems like easy way satisfy use case since makes assumptions persisting model using extensively ajax callbacks remote forms rails", "d": "5/2011"}, {"body": "would go saving items nt want make request time item changed want save single request user action thinking collecting everything document saved updating document items attr good solution", "d": "5/2011"}, {"body": "long items set document documentsave items sent server well", "d": "5/2011"}, {"body": "let say add item collection runtime nt get added items attribute also automagically new model added collection wo nt sent server ca nt see changes collection could propagate model attributes sent save", "d": "5/2011"}, {"body": "handeling document default items array initialization overloaded set method create new items collection attributes set document class document extends backbonemodel defaults items set attrs options gt items attrs items items isarray items isempty attrs items new documentitemscollection newitem new item attrs items add newitem silent true else attrs items new documentitemscollection items point deal items collection methods get set add remove nt mess dot notation even methods document class called additem deleteitem fire change events document save document call tojson item collection honestly simple case documents even deeper subdocuments dealing amount complexity backbone overloading several methods models real big pain ass looking replacing backbone sproutcore future deal really complex documents would suggest looking extjs sproutcore backbone great small project simple models falls apart pretty quickly objectsinteractions start ramping", "d": "5/2011"}, {"title": "todos tutorial issues", "body": "tutorial indicate download new css file create todoscss link head index new css calls compass work demo also getting things done section code example missing handlebar beginning code", "num": "7", "d": "5/2011"}, {"title": "dsstore files code tree", "body": "couple dsstore files code tree may want get rid adjust gitignore", "num": "6", "d": "5/2011"}, {"title": "instructions readmemd running unit tests incorrect", "body": "amber directory running inside repo root dir gives error ebryn spade update genspadeboot genspadeboot open update run dispatch load running works repo root dir tests nt running navigating test url web inspector ot looks like spadebootjs empty tested chrome safari", "num": "4", "d": "5/2011"}, {"title": "scbuttons inside form tags trigger form submission", "body": "using inside existing html page rendered collection nested inside form tag form submission triggered clicking scbutton move collection outside form tag works expected", "num": "2", "d": "5/2011"}, {"title": "safari throws typeerror", "body": "tested starter kit scgenerateguid causes typeerror typeerror defineproperty supported dom objects seems working fine latest version chrome firefox beta", "num": "1", "d": "5/2011"}, {"body": "also problem installing spade created issue", "d": "5/2011"}, {"body": "works", "d": "5/2011"}]