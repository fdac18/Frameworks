[{"title": "sending string literal jsonified data ajax results replaced garbage containing word jquery", "body": "description submitting serialized object containing value string inside object gets replaced different data reproduce issue test case using latest version jquery latest versions firefox chrome extensionsplugins enabled link test case open developer console open network tab rerun fiddle request shown differing form data serialized data", "num": "3831", "d": "10/2017"}, {"title": "uncaught exception htmlunit", "body": "somehow line causes htmlunit version crash hard jquery fully loaded processing website possible could please wrap trycatch assert comgargoylesoftwarehtmlunitscriptexception typeerror set property innerhtml undefined comgargoylesoftwarehtmlunitjavascriptjavascriptengine htmlunitcontextactionrun netsourceforgehtmlunitcorejsjavascriptcontextcall netsourceforgehtmlunitcorejsjavascriptcontextfactorycall comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunithtmlhtmlpageloadexternaljavascriptfile comgargoylesoftwarehtmlunithtmlhtmlscriptexecutescriptifneeded comgargoylesoftwarehtmlunithtmlhtmlscript comgargoylesoftwarehtmlunithtmlhtmlscriptonallchildrenaddedtopage comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderendelement orgapachexercesparsersabstractsaxparserendelement unknown source comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderendelement netsourceforgehtmlunitcybernekohtmltagbalancercallendelement netsourceforgehtmlunitcybernekohtmltagbalancerendelement netsourceforgehtmlunitcybernekofiltersdefaultfilterendelement netsourceforgehtmlunitcybernekofiltersnamespacebinderendelement netsourceforgehtmlunitcybernekohtmlscanner contentscannerscanendelement netsourceforgehtmlunitcybernekohtmlscanner contentscannerscan netsourceforgehtmlunitcybernekohtmlscannerscandocument netsourceforgehtmlunitcybernekohtmlconfigurationparse netsourceforgehtmlunitcybernekohtmlconfigurationparse orgapachexercesparsersxmlparserparse unknown source comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderparse comgargoylesoftwarehtmlunithtmlhtmlparserparse comgargoylesoftwarehtmlunithtmlhtmlparserparsehtml comgargoylesoftwarehtmlunitdefaultpagecreatorcreatehtmlpage comgargoylesoftwarehtmlunitdefaultpagecreatorcreatepage comgargoylesoftwarehtmlunitwebclientloadwebresponseinto comgargoylesoftwarehtmlunitwebclientgetpage comgargoylesoftwarehtmlunitwebclientgetpage orgopenqaseleniumhtmlunithtmlunitdriverget orgopenqaseleniumhtmlunithtmlunitdriverlambda orgopenqaseleniumhtmlunithtmlunitdriverlambda javalangthreadrun unknown source caused netsourceforgehtmlunitcorejsjavascriptecmaerror typeerror set property innerhtml undefined netsourceforgehtmlunitcorejsjavascriptscriptruntimeconstructerror netsourceforgehtmlunitcorejsjavascriptscriptruntimeconstructerror netsourceforgehtmlunitcorejsjavascriptscriptruntimetypeerror netsourceforgehtmlunitcorejsjavascriptscriptruntimeundefwriteerror netsourceforgehtmlunitcorejsjavascriptscriptruntimesetobjectprop netsourceforgehtmlunitcorejsjavascriptinterpreterinterpretloop netsourceforgehtmlunitcorejsjavascriptinterpreterinterpret netsourceforgehtmlunitcorejsjavascriptinterpretedfunctioncall netsourceforgehtmlunitcorejsjavascriptcontextfactorydotopcall comgargoylesoftwarehtmlunitjavascripthtmlunitcontextfactorydotopcall netsourceforgehtmlunitcorejsjavascriptscriptruntimedotopcall netsourceforgehtmlunitcorejsjavascriptinterpretedfunctionexec comgargoylesoftwarehtmlunitjavascriptjavascriptengine comgargoylesoftwarehtmlunitjavascriptjavascriptengine htmlunitcontextactionrun", "num": "3829", "d": "10/2017"}, {"title": "microsoft edge returns error code request nt offer responsejson", "body": "calling web service following manner chrome ff ie correctly reply error object includes proper responsejson attribute microsoft edge however reports status statustext error object nt contain additional information web server always responds error request raw response request according google chrome expected result parameter e microsoft edge exclusively tested browsers generates", "num": "3828", "d": "10/2017"}, {"title": "use new fetch api", "body": "feature request improvement hi think using new api already implemented major browsers used default function available explicitly deactivated using parameter major browsers supporting feature time familiar jquery codebase used maybe implemented due missing features eg full browser compatibility usage check documentation", "num": "3826", "d": "10/2017"}, {"title": "ie compatability issue", "body": "application working previously later start using identifying symbol ie browser throwing error value property null undefined function object executing code ddlstate empty", "num": "3824", "d": "10/2017"}, {"title": "parsing html child throws error", "body": "description throws exception instead properly parsing unusual html string documentation also nt seem mention usage impure html expect happen html string properly parsed null returned proper console message proper description docs actually happens exception thrown browsers affected mac firefox mac safari version jquery versions affected jquery jsfiddle latest jquery javascript library link test case", "num": "3823", "d": "10/2017"}, {"title": "offset inaccurate pinchzoomed", "body": "bug reports expect happen offset return offset document origin actually happens browsers pinchzoomed browsers affected edge possibly safari future description open console clicktap input box pinchzoom page scroll top scroll back input box tap output always see background details issue offset adding getboundingclientrect relative layout viewport windowpagexyoffset relative visual viewport note chrome recently made pageyoffset relative layout viewport nt issue link test case", "num": "3822", "d": "10/2017"}, {"title": "featreq add new api tags", "body": "past already asked forums peek css rules eg example css declaration like learned possible resp difficulties since css stylesheets tags becomes important access jquery jquery provide new api next release first step would sufficient modify check presence eg see sample find simply elements clause afterwards want remove elements coming jquery api make following possiblevalid div span remove", "num": "3819", "d": "10/2017"}, {"title": "maybe better solution", "body": "description created amazing tool write synchronous code even operation asynchronous alternative solution deferred maybe merged jquery link test case example code js cc function exec ctx resume project address", "num": "3818", "d": "10/2017"}, {"title": "inarray functions returns negative", "body": "problem array function returns boolean backwards solution fixed", "num": "3814", "d": "10/2017"}, {"title": "attr rowspan return number", "body": "hello suggestion return number attribute values converted numeric values sush rowspan", "num": "3813", "d": "10/2017"}, {"title": "using slideup page inner element makes whole page scroll instead", "body": "description test case provided see upon arriving page items green column regularly sliding precise topmost item slideup making items underneath slide well topmost item moved green column reappears case everything looks good soon start scrolling page see items yellow column read text red column see every time green item slides whole page slides well effect see yellow red column look like going back reach top page point green column resumes intended motion link test case", "num": "3812", "d": "10/2017"}, {"title": "ajax interprets webserver errordocument valid javascript", "body": "ajax called datatype script received document always interpreted javascript even actually document expected behavior evaluate received document webserver returns small example ajax url doesnotexistjs datatype script firefox shows message console syntaxerror expected expression got lt tries execute html document received webserver expected behavior ajax call functionally equivalent meaning nonexisting resources webserver give error message console log syntax errors", "num": "3811", "d": "10/2017"}, {"title": "new element creation raw html string working expected", "body": "description example run console javascript fnjquery gt text hello attr disabled true prop outerhtml gt hello lt ok text hello prop outerhtml gt lt expected text link documentation link test case", "num": "3810", "d": "10/2017"}, {"title": "ieedge submitting form using jquery submit causes submit handler forms detach using beforeunload", "body": "description examples two forms first form foo submitted js button outside form second form bar submitted submit button within form bar also event handler submit event handler disable beforeunload confirmation dialog bar submitted without asking user confirm submit foo confirmation dialog displays choose stay page page remain unaffected button never pressed works fine pure js using jquery ie edge choosing stay current page causes onsubmit handler bar become detached somehow nt run bar gets submitted case means user gets another annoying dialog cause severe problems processing needs happen handler form submitted worked around code calling submit raw form element also solved attaching event handler using pure js using pure js entirely tested ie fail edge fail firefox pass chrome pass tests run link test cases jquery native reproduce issue submit foo click stay current page submit bar pass form submits fail confirmation dialog shows", "num": "3809", "d": "10/2017"}, {"title": "css reports wrong widthheight chrome certain zoom levels", "body": "jquery reports wrong sizes elements chrome certain browser zoom levels seems add element insets padding border width height although css width already includes insets demonstration provided test case two padding sides border sides css widthheight set boxsizing set visual size elements remaining inner space browser zoom level correctly reported zoom numbers get slightly changed probably due rounding errors instead always get css pixels affected browser zoom would expected numbers stay live real problem occurs reload page browser zoom width completely incorrect instead page uses values programmatic layout results wrong see effect demo css width height first copied second always size however start second much larger analysis analysis shown seems caused internal function csssupportjs wrongly sets internal property apparently happens rounding error case test div measured width equal expected value worse internal property calculated start zoom reset problem still persists completely reload page could observe problem following zoom levels firefox ie nt seem affected problem also jquery everything works fine browsers tests performed windows default dpi font size settings", "num": "3808", "d": "10/2017"}, {"title": "jquery ajax removes empty arrays data", "body": "description expected jquery ajax sending correctly array even empty could nt find rfc saying nt sent though know one happy read happened sent data nt contain empty array link test case", "num": "3807", "d": "10/2017"}, {"title": "missing closing square bracket attribute selector nt throw error browsers except safari", "body": "description concern googled returned stackoverflow question nt gained attention going exact problem example works fine browsers except safari politely throws error reminds silly mistake thrown browsers work link test case", "num": "3806", "d": "10/2017"}, {"title": "nonpassive even listener violation", "body": "link picture looks im using jquery uikit threw error used side nav also throws google chrome error link", "num": "3804", "d": "10/2017"}, {"body": "unrelated jquery packages causing errors package nt dependencies peerdependencies", "d": "10/2017"}, {"body": "last part modified data underscore appears current timestamp suggesting actually part anticaching mechanism appending timestamps course one favoured techniques gone wrong", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "closing per dave comment", "d": "10/2017"}, {"body": "somehow key thing nt nt enough information determine problem jquery try mask nt even make sense somehow resolved nobody else reported problem need provide information", "d": "10/2017"}, {"body": "maybe error caused line precisely faulty implementation code htmlunit end", "d": "10/2017"}, {"body": "use bare xhr problem persist moment seems like reporting edge bug jquery one nt enough information standalone test case determine actual issue", "d": "10/2017"}, {"body": "looks like could really edge bug created little test code browsers post status correct edge however get back status", "d": "10/2017"}, {"body": "created ticket microsoft bug tracker", "d": "10/2017"}, {"body": "benefit using fetch feature done code work better", "d": "10/2017"}, {"body": "advantages promise based streaming responses response promise provides methods text json blob arraybuffer newer means better idk sorry think random weird issue advantages sooo huge think implementation much cleaner one xml maybe fetch replace sometimes", "d": "10/2017"}, {"body": "nt know could used compatibly within implementation already return promises via improvement expose somehow already performs functionality similar fetch data type methods think best way would via new api rather stacking new functionality top even clear whether would dependency jquery implementation could done plugin explore feature locking version mind nt think something core team manage build", "d": "10/2017"}, {"body": "enough detail act report likely issue setup please look help stack overflow", "d": "10/2017"}, {"body": "strongly disinclined work around native behavior would willing submit documentation pull request", "d": "10/2017"}, {"body": "thanks opening issue may need fixed browsers leave open time case anyone finds workaround", "d": "10/2017"}, {"body": "since large performance difference native selectors processed via native method jquery selector extensions require sizzle code longer consider selector extensions however sizzle engine provides extension api lets add features like", "d": "10/2017"}, {"body": "good luck library", "d": "10/2017"}, {"body": "idea sudenly original turns good", "d": "10/2017"}, {"body": "dom returns attribute values strings must represent integers nt think want get business trying determine whether specific attributes proper numbers converting done similar things past example regretted", "d": "10/2017"}, {"body": "might understanding correctly concern elements move element height reduced completely normal layout works however could reduce test case bit large smaller test case would help us understand issue thanks", "d": "10/2017"}, {"body": "forgot mention bug mostly seen chrome problem occurs scroll page point green column stops moving page scrolls back try reduce even already really slim version actual page see issue thanks looking", "d": "10/2017"}, {"body": "repro steps use chrome visit link arrive page see green items cycling properly intended behavior scroll page bring item f g near top notice green column stopped instead whole page scrolling back problem", "d": "10/2017"}, {"body": "behavior complaining coming chrome jquery seems related scroll anchoring probably simplify single operation submit issue bugschromiumorg nt seem anything us", "d": "10/2017"}, {"body": "thanks time inputs continue investigating see pinpoint exact problem", "d": "10/2017"}, {"body": "conclusion problem indeed caused scroll anchoring css style overflowanchor none applied first column example solves issue", "d": "10/2017"}, {"body": "says nt care server returns header data type jquery interpret way server returns different types case nt trust server content type call manually inspect decode request complete", "d": "10/2017"}, {"body": "would expect attribute nonempty value set way see jquery issue", "d": "10/2017"}, {"body": "nt expect attribute text expect button text caption", "d": "10/2017"}, {"body": "ah see misread sorry", "d": "10/2017"}, {"body": "api page linked important second argument passed html string first argument must represent simple element attributes seems documented sure reason restriction though ideas team arturbaybulatov note docs explicitly discourage using pattern second argument convenient flexibility lead unintended consequences eg calling method instead setting size attribute better using method explicitly always works", "d": "10/2017"}, {"body": "way logic worked feature put long ago code fell simple path tag nothing else looked second argument list attributes otherwise second argument element creation context documentation tries warn people away method signature entirely noticed nt use", "d": "10/2017"}, {"body": "ah right clash signature", "d": "10/2017"}, {"body": "check console see edge generate exceptions versions jquery ca nt expected resolve", "d": "10/2017"}, {"body": "ugh confirmed git build think need something like unitpreserving round comparison fortunately reproducible able verify fix unit testing", "d": "10/2017"}, {"body": "news fixed downgrading version", "d": "10/2017"}, {"body": "pr would welcome nobody expresses interest probably put fix next release", "d": "10/2017"}, {"body": "right rfc governing encoding javascript object query string people doubt depend current behavior since way decade need welldefined spec would advise using json could try setting see works case", "d": "10/2017"}, {"body": "add empty arrays additional option jquery ajax would change current behavior would add possibility send accurate data good naming things something like default", "d": "10/2017"}, {"body": "posted answer thread way could throw error every browser would fully parse every selector javascript nt going happen performance reasons", "d": "10/2017"}, {"body": "jquery nt support passive event listeners yet planned tracked closing duplicate", "d": "10/2017"}, {"body": "krinkle still like tackle welcome closing patchwelcome tho", "d": "10/2017"}, {"body": "produces", "d": "10/2017"}, {"body": "childishgiant api proposal ticket still open meaning support passive event listeners moment need wait release", "d": "10/2017"}, {"body": "functions working versions jquery try hack addclass removeclass hasclass jquery methods jquery versions usage", "d": "10/2017"}]