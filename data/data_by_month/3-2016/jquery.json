[{"title": "support ajax script attributes eg sri csp", "body": "razamirza mentioned think would worth considering adding support check script outside however probably worthy extension browsers support fetchsriwebcrypto natively", "num": "3028", "d": "3/2016"}, {"title": "possible remove required attribute chrome", "body": "current google chrome jquery tested mac os x el capitan windows fiddle example problem form radio buttons required statements html require states removed using jquery trying submit form fails chrome moans radios still required checking dom tree chrome developer tools shows required removed multiple ways unrequiring tested removing setting false prop attr see jscode fiddle", "num": "3027", "d": "3/2016"}, {"title": "invoke jqueryready callbacks without context", "body": "callbacks currently invoked context soo promisesa promises explicitly specify callbacks called without context although methods provide context callbacks moving direction increased standards compliance stop providing case especially since soon thenable", "num": "3026", "d": "3/2016"}, {"title": "deprecate jqueryfnready", "body": "although jqueryfnready form method nt use following equivalent specifically equivalent deprecate favor andor promiseresolve jqueryready jquerywhen jqueryready etc furthering trajectory began", "num": "3025", "d": "3/2016"}, {"title": "replacewith confusing behaviour jquery set", "body": "jquery var set setfilter b replacewith consolelog set would expect changed element case one replace element using since creates new jquery object creates problem sadly seems awkward way simple thing suggest updating api kind way replace easily", "num": "3024", "d": "3/2016"}, {"title": "behaviour differs one described docs", "body": "docs jquery method longer uses default setting default best compatibility across versions call explicit value second argument use defaults actual", "num": "3023", "d": "3/2016"}, {"title": "postmessage events support", "body": "hi looks like postmessage events completely supported jquery stackoverflow post suggests events data properly parsed jquery look jquery internally parses events data looks quite trivial fix thoughts concerning possible caveats kind fix proper pr", "num": "3019", "d": "3/2016"}, {"title": "jquery leaks detached dom", "body": "noticed csssupportjs created dom element referenced function dom never removed way", "num": "3018", "d": "3/2016"}, {"title": "selector working", "body": "jquery using selector find thow error older jquery works well fiddle", "num": "3017", "d": "3/2016"}, {"title": "adding webpack amp bootstrap official docs", "body": "would really nice devs webpacknpmbootstrap section thanks", "num": "3013", "d": "3/2016"}, {"title": "unable get property expando undefined null reference", "body": "please let know need anymore information browser ie edge mode error unable get property expando undefined null reference file line column shims shams snippet document head offending code errors loop gets onfocusin function var eventname div documentcreateelement div debugger support ie lt lack submitchange bubble firefox lack focus events submit true change true focusin true eventname", "num": "3012", "d": "3/2016"}, {"title": "revert ajax behavior change", "body": "see xss update behavior change reverted stay", "num": "3011", "d": "3/2016"}, {"title": "jquery breaks jquery easing plugin", "body": "jquery easing plugin around since seems heavily used even npm downloads pretty high changes made break plugin plugin needlessly afaict uses deprecatedremoved args several ways address easiest would update plugin gdsmith would accept pr github repo", "num": "3010", "d": "3/2016"}, {"title": "jquery incompatibility selector", "body": "getting error works perfectly jquery broken compatibility attempted switch exception follows thanks assistance", "num": "3009", "d": "3/2016"}, {"title": "feature request allow param function", "body": "would bad idea allow function argument dmethvin originally mentioned fan adding behavior api documenting nt forget unfortunately suppose already crossed rubicon calling functions prevent param used way passively serialize object way would json still fan although suggesting additional functionality tend agree dmethvin point minimizing behavior function fan simple strict rules thought process allowed attribute level certainly allowed root however secondarily suggesting allowed root simply ignore method attributes similar would make sense pass function builds dynamic object pass object build dynamic properties almost seems like tail wagging dog natural evolution might firstly allow root eventually phase methods attribute basis", "num": "3008", "d": "3/2016"}, {"title": "requestanimationframe nt effective compressed version", "body": "uglify featurebug", "num": "3006", "d": "3/2016"}, {"title": "param returns null undefined literal attribute function", "body": "result jsfiddle check line happen ternary statement since result null ie javascript add function key value", "num": "3005", "d": "3/2016"}, {"title": "outerwidthouterheight return decimal values", "body": "using outerwidth outerheight combination subpixel rendering postion properties return correct subpixel values outer functions return incorrect values consider code snippet full example happens ie ff chrome", "num": "3004", "d": "3/2016"}, {"title": "internal use jquerytrim erroneously strips much", "body": "internal use replaced html strip collapse whitespace operation modifies small set ascii whitespace characters problem solution", "num": "3003", "d": "3/2016"}, {"title": "nt work within modal", "body": "use check visibility element lot however working element within modal bootstrap modal simply malfunctions eventhough find way use makeshift still problem worth solution please check jsiddle page see relevant infomations issue", "num": "3001", "d": "3/2016"}, {"title": "nt unwrap promises", "body": "log undefined instead logs promises methods diverging native behavior", "num": "3000", "d": "3/2016"}, {"title": "tools ui issue building", "body": "tools ui throwing error please help caused comgithubeirslettmavenpluginsfrontendlibtaskrunnerexception grunt nocolor failed error code comgithubeirslettmavenpluginsfrontendlibnodetaskexecutorexecute comgithubeirslettmavenpluginsfrontendmojogruntmojoexecute comgithubeirslettmavenpluginsfrontendmojoabstractfrontendmojoexecute", "num": "2997", "d": "3/2016"}, {"title": "included slim version jquery", "body": "seen use jqueryslimjs ca nt seem find documentation internet probably simply searching wrong terms still like know", "num": "2995", "d": "3/2016"}, {"title": "touchend delegated event handler reports wrong currenttarget", "body": "reproduce use following html latest versions windows browsers today title container position relative border solid black delegate position absolute border solid red mouse try drag left block onto right block blocks wo nt move finger touch screen try drag left block onto right block blocks wontt move either look console logs compare currenttarget mouseup touchend function document mousedown touchstart delegate function e consolelog etype ecurrenttarget attr id mousemove touchmove function e consolelog etype ecurrenttarget attr id mouseup touchend delegate function e consolelog etype ecurrenttarget attr id result chrome windows latest updates applied design use touchend get destination block order draw connection origin block would mouseup", "num": "2987", "d": "3/2016"}, {"title": "simplify isplainobject", "body": "skip property enumeration look prototypeconstructor directly cf", "num": "2986", "d": "3/2016"}, {"title": "something closure sandbox", "body": "want know difference two closure another", "num": "2984", "d": "3/2016"}, {"title": "version use import load module nt need load jquery plan", "body": "thank", "num": "2983", "d": "3/2016"}, {"title": "isplainobject throws typeerror", "body": "hi migrating code jquery jquery found difference implementations two versions difference also affects jquery methods internally call like see reduced example jqueryextend reason seems removed around following check called object property nonfalsy nonfunction value throws convert undefined null object understand using property value original constructor function somewhat unusual best practice far see prohibited ecmascript spec including also understand discussable whether objects reported plain running seems quite unexpected adding back might best way fix maybe check could made robust mean eg adding another condition motivated concrete error checking whether type function motivated original intention check whether standard backlink points please let know thoughts regression valid simplification kind regards cw", "num": "2982", "d": "3/2016"}, {"title": "chrome produces warning svg searching svg", "body": "please see fiddle make sure dev window open first warning displayed need refesh page see selector input requiredifvisible typecheckbox checked visible select requiredifvisible visible hits jqueryexprfiltershidden embedded svg elements fact goes function elements throws error svgelementoffsetwidth deprecated removed around april see details know previous discussion svg supporting offsetwidth check visible note concerned searching input document happens svg elements try selector input requiredifvisible typecheckbox checked visible select requiredifvisible visible separately nt seem trigger warning jquery chrome beta checked browsers", "num": "2980", "d": "3/2016"}, {"title": "published jquery versions etc replaced well", "body": "someone uses amd modules published version nt get true version instead replacement also published versions regular runs", "num": "2979", "d": "3/2016"}, {"title": "set select options containing tabs", "body": "select element contains options whose values contain tab characters original use case trailing tab also tested leading tabs tabs middle nonwhitespace called select element expected corresponding option selected since values identical option selected interesting observations work around issue leading trailing cases removing leading trailing tab characters string pass unexpected since values nt match exactly removing middle tab character passing select value workaround strings tab characters middle behavior jquery edge jquery leading trailing tabs bug behavior tab middle word passing matching string tab middle works expected regression point case jsfiddle see console expect behavior compared behavior actually searched tab whitespace nt see anything directly relevant find issue mentions seeing unexpected behavior firefox chrome", "num": "2978", "d": "3/2016"}, {"title": "unintendedredundant onload event", "body": "migrated found strange issue sorry ca nt provide simple code reproduce maybe find going steps open jqueryui dialog tabs one tab upload form hidden iframe detail iframe created adhoc upload button click something like click upload button form submitted fine select tab onloadfn executed switching tabs execute onload create another iframe redundant event also executed close dialog tabs may required reproduce issue", "num": "2977", "d": "3/2016"}, {"title": "eliminate introoutro nuisance tickets", "body": "good news development best practice using jshint eslint check source files becoming lot common bad news people running jshint eslint jquery source files getting error messages introjs outrojs since actually complete files examples think based google translate able fix changing extension two files way wo nt linted default name provide clue complete files", "num": "2975", "d": "3/2016"}, {"title": "isplainobject difference", "body": "seems difference following object returns plain object returns think correct", "num": "2968", "d": "3/2016"}, {"title": "jqueryvalidation group controls", "body": "group controls validate suggest change jqueryvalidatejs checkform function name element unique id submit", "num": "2967", "d": "3/2016"}, {"title": "", "body": "testing scenarios callback animate harmful speed reliability test suite looking ways run synchronous instead async skipping callback curious possible others worked around testing thank advance", "num": "2966", "d": "3/2016"}, {"title": "parsehtml creates anchor elements empty href property chrome", "body": "created documents interpret property anchor elements different different browsers eg chrome returning empty string affects usage backed amp try may make work suggested create element setting base current document original issue", "num": "2965", "d": "3/2016"}, {"title": "custom easing longer works", "body": "extended easing functions longer work new beta tell change tweenprototype replacing tweenprototype one alpha fixes issue", "num": "2964", "d": "3/2016"}, {"title": "estoppropagation function jquery", "body": "since jquery experience following problem appears jqueryevent originalevent native event jquery object ie nt able reproduce jsfiddle deployed simple application reproduce open devtoolsfirebug console tab click open modal window click close button set breakpoint jqueryjs line works correctly event mouseevent set conditional breakpoint see event jquery object throws exception problem jquery hope provided information demo application enough debug please let know provide information", "num": "2963", "d": "3/2016"}, {"title": "ajax bug", "body": "jquery send ajax like ajax url url data action sendsn cellphone input namecellphone cellphone input text control borwser blocked kill please try ajax url url data action sendsn cellphone cellphone effection", "num": "2962", "d": "3/2016"}, {"body": "recently got similar request csp nonces submitter went dark rather trying support individually needing verify work across browsers maybe could treat like headers give general way put attributes script tag", "d": "3/2016"}, {"body": "request nt clear exact scenario use get script third party cdns want check integrity script need something like relatively new js reason ca nt chip", "d": "3/2016"}, {"body": "jquery issue manifests plain javascript", "d": "3/2016"}, {"body": "correct thanks filed chromium bug report", "d": "3/2016"}, {"body": "ca nt", "d": "3/2016"}, {"body": "yeah could nt remove anyway like idea deprecating soon", "d": "3/2016"}, {"body": "dom operation nt change context collection ensures becomes detached new content inserted dom members used cf modify collection follow linked stackoverflow answer use map suggested later", "d": "3/2016"}, {"body": "using method inside seems less performant using answer provided ticket jquery library useful dom functions yet nt simple thing outofthebox reason thanks", "d": "3/2016"}, {"body": "nt checked expect proper faster since dom manipulation required note behavior seek dom operation longer manipulates collection refer", "d": "3/2016"}, {"body": "actually map would nt work well since loose jquery data events bound element replace ca nt var set var data aon click gt alert set setmap function return b want fullon replace data events whole party", "d": "3/2016"}, {"body": "nt think common need evidenced lack complaints past years use case jquery primarily selecting manipulating dom elements document collection dom elements disconnected document put plain javascript array manipulate way use convert collection", "d": "3/2016"}, {"body": "ca nt yes", "d": "3/2016"}, {"body": "dmethvin use case using simple ui framework html template describes page components example page barname tabscount tabs open javascript file controller compile page template send result rendered components async needs ajas retrieve data server done components dom structure templates replace components screen real ones whole thing done page controller placing anything dom rather pass jquery collection rendered template upwards parent controller one renders page controller knowledge real browser dom collection associated page knows might might rendered nt important page controller loads needed components replaces elements known set needs replaced real databinded eventsbinded components hope explained situation well think trivial thing jquery replace one element set another keeping integrity collection would nt say course could turn collection intro real array iterate find thing want replace would nicer automatic thing writing jquery years nt think encountered amazed nt", "d": "3/2016"}, {"body": "maybe something like might extend jquery thing use", "d": "3/2016"}, {"body": "nice catch sowcow would like submit pr", "d": "3/2016"}, {"body": "yes looking forward", "d": "3/2016"}, {"body": "probably also modify ajaxjs check tomorrow", "d": "3/2016"}, {"body": "jquery event handler object normalized jquery event original nonnormalized data events like real domrelated content right nearly always use trying unnormalize events makes things inconsistent major benefit attaching events via jquery first place since normalizing anything nt see one", "d": "3/2016"}, {"body": "thank quick reply actually goal use jquery eventhandler attachers especially convenience end understand point view admit benefit probably limited create inconsistencies instead shall write wrapper involve jquery", "d": "3/2016"}, {"body": "hardly leak yeah could improved", "d": "3/2016"}, {"body": "duplicate", "d": "3/2016"}, {"body": "note quotes fix", "d": "3/2016"}, {"body": "thanks opening issue however duplicate webpack bootstrap nt ways download jquery adding npm", "d": "3/2016"}, {"body": "said webpack usage instructions included npm package readme usage options apply bootstrap depending organize code nt think need mention one", "d": "3/2016"}, {"body": "oh okay well thank response", "d": "3/2016"}, {"body": "provide test case without scripts ideally site like jsbincom jsfiddle net ca nt run code snippets help debug", "d": "3/2016"}, {"body": "ping us find time complete ticket", "d": "3/2016"}, {"body": "fixed", "d": "3/2016"}, {"body": "leaving fix despite breaking change plans rereleasing version without fix", "d": "3/2016"}, {"body": "version released ca nt change release new versions", "d": "3/2016"}, {"body": "deprecate point easings jquery ui optimized size", "d": "3/2016"}, {"body": "npm module cdn distro easings", "d": "3/2016"}, {"body": "nt split module separate releases", "d": "3/2016"}, {"body": "deprecate point easings jquery ui optimized size also loosing speed front pretty heavily gdsmith would help us bring speed goodness core proposed", "d": "3/2016"}, {"body": "sounds like plugin needs updated see", "d": "3/2016"}, {"body": "top level could nt already", "d": "3/2016"}, {"body": "example essentially handling guess reason would nt want key strokes bytes uglier code probably relevant reason dealing ambiguous variables consider following example happens frequently world javascript function widget options thisurl optionsurl thisparams optionsparams plain object method returns object widgetprototyperemotefunction function ajax url thisurl data thisparams could object method simply invoking would result error object passed find adding abstraction might seem like much repeated dozen times projects seems break model library abstract plugin less abstract implementation defined opinion natural place ambiguous entry point would library lesser note allowing function argument would result examples currently latter would work", "d": "3/2016"}, {"body": "opposed expanding input signature way dmethvin valuing consistency ie call anything serialization methods come think wonder much deprecate release cycle", "d": "3/2016"}, {"body": "raf used jquery beta amp lines nt utilize see nonminified version", "d": "3/2016"}, {"body": "makes sense would like submit pr jtrumbull", "d": "3/2016"}, {"body": "yeah wanted confirm nt reasoning behind current setup", "d": "3/2016"}, {"body": "thanks opening issue already fixed master duplicate", "d": "3/2016"}, {"body": "probably know answer want expose", "d": "3/2016"}, {"body": "also nt think mean internal use", "d": "3/2016"}, {"body": "might internal uses want double check one", "d": "3/2016"}, {"body": "really mean internal uses", "d": "3/2016"}, {"body": "need trim ajax argument way compatible html spec", "d": "3/2016"}, {"body": "need trim ajax argument way compatible html spec css selectors spec case fortunately shares html definition whitespace need need stop", "d": "3/2016"}, {"body": "oops wrong example abandon document spaceseparated values making best superfluous fact looks like call removed replaced nothing since subsequent ignore leadingtrailing space anyway", "d": "3/2016"}, {"body": "agreed need trim regex", "d": "3/2016"}, {"body": "jquery bug please ask help bootstrap plugins stackoverflow", "d": "3/2016"}, {"body": "cc jaubourg intended", "d": "3/2016"}, {"body": "afaik preferred current approach rewrite proposed back handled unwrapping difficult handle needs", "d": "3/2016"}, {"body": "native promises unwrap sure even possible get native promise parameter callback problem unwrapping attaching may change final result imo really unexpected compare unfortunately noticed late cycle may late may make breaking change thoughts jquerycore jaubourg would require trivial changes", "d": "3/2016"}, {"body": "familiar new deferred code nt think would hard detect input promise", "d": "3/2016"}, {"body": "intended compatibility loomed much heavily code written fight beaten point much still despise resolvereject asymmetry note however idiomatic casting best achieved cf fulfilled value value unwrapping", "d": "3/2016"}, {"body": "benefit unwrapping", "d": "3/2016"}, {"body": "compatibility jquery callback passed args also want introduce initial resolution unwrapping specifically look methods falling back like would break decide whether unwrap ie whether legacy methods thenableresolved deferred see thenable resolution value decide deferred resolved multiple values one thenables decide invocation method throws exception might better let sleeping dog lie", "d": "3/2016"}, {"body": "seeing involved really far release process pushing milestone time think think surprising many people late sth", "d": "3/2016"}, {"body": "posterity cases consider important address js var badthens function throw new error function onfulfilled onfulfilled foo throw new error var dfd jquerydeferred callbacks see dfddone logfulfillment fail logrejection dfdthen logfulfillment logrejection dfdresolve sample badthens", "d": "3/2016"}, {"body": "sound like jquery core issue think meant file somewhere else", "d": "3/2016"}, {"body": "sorry yes posted belongs", "d": "3/2016"}, {"body": "thanks opening issue note nt final release slim build yet include explanation final blog post probably want find place somewhere jquerycom said custom build jquery excludes effects ajax deprecated code", "d": "3/2016"}, {"body": "internet explorer touchstart reported mousedown touchend triggered", "d": "3/2016"}, {"body": "firefox touchstart reported mousedown touchend reported mouseup right target", "d": "3/2016"}, {"body": "move example jsbincom jsfiddlenet", "d": "3/2016"}, {"body": "see", "d": "3/2016"}, {"body": "touch events apple invention simulated windows chrome simulates firefox explains touchmouse difference using jquery delegated events look native target event handled code requested set jquery element handled seems correct values differ ones getting ios way", "d": "3/2016"}, {"body": "touch events tricky browsers convert touch interactions mouse events touch events inconsistent mouse events nevertheless able get workarounds using except internet explorer internet explorer seems convert touch interactions mouse events lifting finger touch surface trigger mouseup event see screenshot", "d": "3/2016"}, {"body": "jquery passing events occur seeing case happen sound like describing jquery bug", "d": "3/2016"}, {"body": "understanding jquery made sure abstract browsers bring back consistency see key events ewhich example one sure thing totally inconsistent across browsers workarounds require browser testing whether jquery bug relates specs design could tell", "d": "3/2016"}, {"body": "jquery try synthesize normalize touch events standard consistent across browsers many cases existing code attempts use presence firing touch events indicator specific platform code changes behavior accordingly result synthesizing generating touch events actually break page see blog post compatibility example looking crossplatform way handle touch mouse take look pointer events pep", "d": "3/2016"}, {"body": "looks greatthx", "d": "3/2016"}, {"body": "anyone information pep wo nt solve consistency issues experiencing although might solve others actual solution whether using pep consists adding css class touchable elements example class definitively jquery defect example works consistently browsers least windows title container position relative border solid black delegate position absolute border solid red touchaction none mouse try drag left block onto right block blocks wo nt move finger touch screen try drag left block onto right block blocks wontt move eiher look console logs compare currenttarget mouseup touchend function document mousedown touchstart delegate function e consolelog etype ecurrenttarget attr id mousemove touchmove function e consolelog etype ecurrenttarget attr id mouseup touchend delegate function e var changedtouches eoriginalevent amp amp eoriginaleventchangedtouches var elem changedtouches documentelementfrompoint changedtouches clientx changedtouches clienty ecurrenttarget consolelog etype elem attr id", "d": "3/2016"}, {"body": "seems already draft refactoring concerns postponing", "d": "3/2016"}, {"body": "adding amp small items milestone amp never release think good add new things necessary always change milestone moment merging", "d": "3/2016"}, {"body": "sounds like invitation bureaucratic discussion since also opposite make move necessary code ready tests sure ca nt easy fix way suggesting add label asking concerns proposed code", "d": "3/2016"}, {"body": "sounds like invitation bureaucratic discussion since also opposite make move necessary adds burden make actual decision moving later milestone delay release release already dragged way long code ready tests pr ready yet", "d": "3/2016"}, {"body": "think making issue nt one land think create pr right discussion feels redundant highly unproductive", "d": "3/2016"}, {"body": "discussed meeting code submitted release land waiting next one", "d": "3/2016"}, {"body": "please look programming help stack overflow place report bugs jquery library", "d": "3/2016"}, {"body": "mean like rollup builders like webpack would still include full version library since treeshaking algo fully implemented would access modules exposed also sure mean version since would still use builded transpiled version would code since pretty much environments moment support every new thing canary though cool however build custom jquery see readme including modules would use also idea build web builder writing jquery syntax would probably increase size transpiler hope answers question gon na close something else would probably better check irc channels since github issues really questions thanks", "d": "3/2016"}, {"body": "dup fixed master already next patch release", "d": "3/2016"}, {"body": "thanks looking maybe mentioned read checked already well fixes unfortunately nt fix issue described see uses copy current isplainobject nt mind want merge please reopen regards cw", "d": "3/2016"}, {"body": "right different edge case guard funny property suppose", "d": "3/2016"}, {"body": "like idea checking type", "d": "3/2016"}, {"body": "harmless methods go away chrome warnings disappear code still work see details", "d": "3/2016"}, {"body": "ok thanks guess ok selector match filter order works differently searching singularly vs multiple selectors searches element visibility filters tag would thought would less processing power check tag name vs visibility", "d": "3/2016"}, {"body": "jquery precisely sizzle matches selectors right left similarly browsers behave maybe good exception custom filters require selector rewriting trivial task achieve general would know selectors slow best avoid use rewrite selector include filter result ie change way selector may go faster sizzle general case performancerelated things related original report leave closed ideas improve performance selectors please open new issue thanks", "d": "3/2016"}, {"body": "suppose", "d": "3/2016"}, {"body": "yeah bug fix seems responsible pr discussion pull fix seems like code trying use may work seem broken consistently everywhere", "d": "3/2016"}, {"body": "actually looks like overzealous expanding include trimming values rather text think partial revert order", "d": "3/2016"}, {"body": "really broken though see chromefirefox one exception return value selected instead empty string", "d": "3/2016"}, {"body": "think fiddle broken respect comment attributes replaced whitespace focusing see behavior chrome firefox edge three defining value idl attribute stripped collapsed whitespace version content attribute treating like text instead following spec edit browsers fine jquery fault forgot valhook getter also used valhook getter fixing consist updating valhook return directly correct otherwise performing full strip collapse whitespace operation requires upon", "d": "3/2016"}, {"body": "reproduceable recent firefox chromium tested browsers add event argument function looks chrome differs timestamp value firefox", "d": "3/2016"}, {"body": "happens also ca nt test produces errors probably old jqueryui", "d": "3/2016"}, {"body": "jquery ui released january may work recent jqueries likely first update jquery ui first try update jquery jquery ui supports many jquery versions ca nt ensure compatibility ones released jquery ui read jquery ui upgrade guide try upgrade ui anything blocking", "d": "3/2016"}, {"body": "still support way use older jquery detected use one jqueryui version browsers try test", "d": "3/2016"}, {"body": "according release longer accepting bug reports issues also removed testing infrastructure workarounds still present code remove jquery ui hight chance ui work ie since old workarounds nt removed", "d": "3/2016"}, {"body": "confirm issue exist using jqueryui case anyone wanted dig deeper simple reproduction page testhtml button click function attr name iframe appendto documentbody load function consolelog onload form attr target iframe submit dlg dialog", "d": "3/2016"}, {"body": "thanks update", "d": "3/2016"}, {"body": "thinking recently possible prefer change wrapping logic template js file containing intro amp outro would placeholder comment replaced rest build file would mean files consolidated could keep js extension", "d": "3/2016"}, {"body": "would let us lint combined introoutro file currently parts obviously excluded although linted dist files created", "d": "3/2016"}, {"body": "would let us lint combined introoutro file yup thinking", "d": "3/2016"}, {"body": "like", "d": "3/2016"}, {"body": "came conclusion go", "d": "3/2016"}, {"body": "nt want downer linters would still throw error file since like unused arguments dead code seems complicated build process sorry bad mood", "d": "3/2016"}, {"body": "markelog nt setting eslint rules running lint without modifying rules going break regardless using jshint work pragma top", "d": "3/2016"}, {"body": "confirmed api page says check see object plain object created using new object object presented ca nt created way problem present present ok well thanks report", "d": "3/2016"}, {"body": "jquery bug tracker report issues related plugins plugins case repo", "d": "3/2016"}, {"body": "check test animation module stub timers sinon fake passing time back used real ones animation suite much slower believe similar approach solve issue", "d": "3/2016"}, {"body": "also found sure still recommended way go worth throwing", "d": "3/2016"}, {"body": "would skip lot logic ca nt check state animation would nt simulation real environment units supposed run plus changing global state impure suppose could relevant cases", "d": "3/2016"}, {"body": "repeat comment proposed fix fix looks like correct way go based brief look specs default base url intention make behaviour match document fallback need set base url anyway browsers way currently done jquery technically incorrect even chromium bug fixed correctly still need match behaviour also going permanent fix probably good idea make sure element already exist input", "d": "3/2016"}, {"body": "reviewing patched thing struck behavior varies lot depending whether provided since constructor like passes method default circumvents donotrunscript benefit missing case want make safer wondering try hard pass cases like", "d": "3/2016"}, {"body": "looking nt need replace whole thing make work new format changing fixes issue", "d": "3/2016"}, {"body": "parameters easings used easings defined jquery jquery ui removed perhaps use external libraries still use parameters could provide test case", "d": "3/2016"}, {"body": "yes nt break core easing methods break custom extended ones see fiddle currently set jquery edge nt work changing alpha parameters removed still able extend easing useful way thanks", "d": "3/2016"}, {"body": "removed parameters redundant necessary information needed easing purposes possible get first parameter example written way way look cleaner use first parameter", "d": "3/2016"}, {"body": "either way definitely mention release notes maybe somewhere else said could big cc timmywil gnarf mgol seems close", "d": "3/2016"}, {"body": "thanks mgol expert easing nt know easy would update work single parameter agree documented assumed would happen anyway point look forward somebody creating new library easing methods new format nt event want attempt", "d": "3/2016"}, {"body": "look forward somebody creating new library easing methods new format nt event want attempt looks intimidating actuality relatively easy params really redundant like check jqueryui commit migrating", "d": "3/2016"}, {"body": "really interesting thanks markelog", "d": "3/2016"}, {"body": "beavykins always possible define new easings would wrap old ones snippet shows easily rewrite old one actually eg example would amount findreplace variables inside code according pattern changes close issue relatively easy migration path allowed introduce breaking changes feel free comment remarks though beavykins thanks spending time report", "d": "3/2016"}, {"body": "problem thanks detailed explanation", "d": "3/2016"}, {"body": "error comes call inside wicket point error inside event seems native without native method assume native event always method code calls several nonpublic apis including extends possible violating assumption still lot code simplify bit", "d": "3/2016"}, {"body": "thanks looking dmethvin tried simplify seems missing something fiddle works fine used make sure wicket js code always works jqueryevent native js events extension custom event used demo application think could ignored debug work idea nt fail normal nonconditional breakpoint used makes think timing issue", "d": "3/2016"}, {"body": "time messing undocumented jquery internals hard predict happen never necessary external code call especially nonnative events get error twice original case also nt get twice nt know intermittent would say jquery problem way get native chrome nt method due wicket changing passing jquery bug wicket", "d": "3/2016"}, {"body": "ok dig direction remove usage jqueryeventfix thanks", "d": "3/2016"}, {"body": "problem wicket difference comes different handling normal events like etc wicket special thingy called normal events wicket uses uses ie see firstonly argument passed handler jquery object find nt breaking fix thanks", "d": "3/2016"}, {"body": "please use similar resource articulate issue", "d": "3/2016"}, {"body": "also check report bugs guide", "d": "3/2016"}, {"body": "would work much better want get actual value input asking jquery serialize jquery object apparentely goes kaboom also stackoverflow better place kind questions", "d": "3/2016"}, {"body": "api docs say data type plainobject string array data sent server converted query string already string passing object contains dom elements include circular references probably causes loop actually surprised nt die first trying call methods jquery collection test pass right data using jaubourg said things work fine kind problem would definitely best explore site like stackoverflow filing bug", "d": "3/2016"}, {"body": "agreed", "d": "3/2016"}, {"body": "need jquery", "d": "3/2016"}, {"body": "sure would need updated seems adding libre would parse question would want anyone", "d": "3/2016"}, {"body": "tsutsukakushi examples libraries already use tags", "d": "3/2016"}, {"body": "markelog libre would parse question would want anyone want people run freesoftware net also want run fingerprinting javascript malicious stuff nt want people run fingerprinting javascript currently user either jquery malicious stuff neither examples libraries already use tags like quote earlier message answer order help users use free software people done realize everyone thought like world would proprietary software", "d": "3/2016"}, {"body": "tsutsukakushi mgol librejs recognizes magnet link proper expat license user wants get license download via magnet link jquery nt make new magnet urls anything include one proper expat current license use good worried order help users use free software people done realize everyone thought like world would proprietary software nt mean sound way sorry gave impression experience jquery amp projects taught established standards standards may become former necessarily catering much latter often leads maintaning nonneeded obsolete code later one example package managers added support npm amp bower people asking discussions decided punt every package manager additional release burden us come amp go retrospect might better publishing npm leaving rest packages community main concern asking libraries see established may always possibility spec critical faults better solutions may automated without making changes etc note cautious library nt mean nothing done someone first may eg open similar issues popular libraries bug trackers agree might something worth know wo nt ones hurry existing jquery versions web wo nt get anyway wo nt change much rather wait little hear projects say make wellthought decision rush sum nt object maintainers popular oss libraries also nt object amp nt present better solutions may want jquery library ever used", "d": "3/2016"}, {"body": "point question borrowing someone else experience create get philosophical debate like grunt task configuration could use anything else could help us", "d": "3/2016"}, {"body": "mgol experience jquery amp projects taught established standards standards may become former necessarily ad hoc standard better nothing catering much latter often leads maintaning nonneeded obsolete code later need code jquery part two comment lines per js file run user browsers one example package managers added support npm amp bower people asking discussions decided punt package managing world lot different tools license verification one every package manager additional release burden us come amp go retrospect might better publishing npm leaving rest packages community requires two comments code hurry existing jquery versions web wo nt get anyway wo nt change much yeah javascript library framework field trainwreck librejs versions jquery whitelisted many rather wait little hear projects say make wellthought decision rush reasonable sum nt object maintainers popular oss libraries also nt object amp nt present better solutions may want jquery library ever used javascript libraries neglegent issues none willing take first step markelog point question borrowing someone else experience create get philosophical debate like grunt task configuration could use anything else could help us doubt tool navigate differences structure determine needs tag nt add existing files every time add new files run user browser add tags nt even seem like task would require separate tool", "d": "3/2016"}, {"body": "tsutsukakushi sum nt object maintainers popular oss libraries also nt object amp nt present better solutions may want jquery library ever used javascript libraries neglegent issues none willing take first step would willing create issues anyway like hear voices regardless say saying necessarily follow decide wait final decisions least hearing would worthwhile imo", "d": "3/2016"}, {"body": "would willing create issues anyway sure libraries target first", "d": "3/2016"}, {"body": "doubt tool navigate differences structure determine needs tag nt add existing files every time add new files run user browser add tags nt even seem like task would require separate tool cool sounds easy could provide pr", "d": "3/2016"}, {"body": "markelog familiar structure jquery stupid script nt know files would require tags would nt clone repo see could figure seems lot scripts build scripts whatnot would trivial someone already familiar project", "d": "3/2016"}, {"body": "easy guess would better check someone else experience matter", "d": "3/2016"}, {"body": "markelog easy someone knows project easy someone nt writing patches project without knowing works hard", "d": "3/2016"}, {"body": "easy someone knows project know project nt know write seems one thread either", "d": "3/2016"}, {"body": "markelog jquery foundation member nt familiar build process", "d": "3/2016"}, {"body": "since static information added introjs file unminified file gruntfilejs minified version problem unless markelog wanted automated way generate magnet links license urlsnames would overkill imo would willing create issues anyway sure libraries target first need ideas top head lodash bootstrap backbone angular ember threejs modernizr pdfjs lessjs create issues please link bug see thanks", "d": "3/2016"}, {"body": "mgol libre asks add end comment would update unminified file already look like hack minified file would need use prepend add banner footer knowledge workaround seems would need make already two hacks make work tsutsukakushi markelog jquery foundation member nt familiar build process familiar process nt know asking us whereas nt want help us issue guess always fun debate philosophy things push comes shove people start quickly disappear", "d": "3/2016"}, {"body": "okay ping us still facing issue", "d": "3/2016"}, {"body": "saw chromium bugtracker interesting affecting larger library vmagik sure getting resolved url firefox jsbin link shows firefox full chrome fix looks like correct way go based brief look specs default base url intention make behaviour match document fallback need set base url anyway even chromium bug fixed correctly still need match behaviour", "d": "3/2016"}, {"body": "backout landed amp issue resolved created separate one making work", "d": "3/2016"}, {"body": "yes firefox shows testhtml jquery jquery shows resolved url think big problem problem", "d": "3/2016"}, {"body": "changing back causes error locally perhaps variable available testswarm", "d": "3/2016"}, {"body": "maybe supportjquery global lying around least amd mode edit actually one available modes version use tests expected available mean also set case amd mode", "d": "3/2016"}, {"body": "created generator issue pull request templates asks questions project creates templates customized project might helpful", "d": "3/2016"}, {"body": "talater sure gon na use cool really enjoyed reading", "d": "3/2016"}, {"body": "looks correct set default since nt specified original request mentioned api docs server wants different value set options", "d": "3/2016"}, {"body": "dmethvin fine supposed default value please consider makes virtually sense request current implementation inconsistent would default header set first request set options second time around", "d": "3/2016"}, {"body": "glad worked big thanks typicode mgol bringing", "d": "3/2016"}, {"body": "loaded tests iframe still luck nt remember joined swarm manually browserstack joined swarm nt remember next mgol seems better understanding run thing would mind", "d": "3/2016"}, {"body": "join swarm recognized ie one tested browser sets browser schedule test run testswarm get picked unless another identical browser gets picked first one advantage though already spawned go kill interfere amp restart job joining swarm go log see login details page private restart failing test see ie getting job running amp failing sure easy debug though perhaps copying htmlcss page joining swarm setting iframe url one running tests effects module would reproduce amp give better starting point debug idea good luck ping still unclear", "d": "3/2016"}, {"body": "since showhide gon na change logic point change tests since one else seems interested improving current state closing", "d": "3/2016"}, {"body": "mgol see function used selector apart function used looks like always used elements inside adding following logic id part parameter add id", "d": "3/2016"}, {"body": "adding following logic id part parameter add id nt work documented arbitrary selector therefore ca nt modify without tokenizing whole thing nt belong test code would opposed making copy postselection filtering semantics though", "d": "3/2016"}, {"body": "going stick see merit sides argument address complaints come markelog feel free say nanny nanny boo boo behavior locked pending usersubmitted tickets", "d": "3/2016"}, {"body": "ca nt jquery see error chrome must rogue extension question one avoid nasty error", "d": "3/2016"}, {"body": "already described diagnose often error include path points extension eg one", "d": "3/2016"}, {"body": "nonbreaking change backport amp", "d": "3/2016"}, {"body": "hopefully far topic since change considered handle would bad idea also handle function argument similar object iterator invokes attributes functions", "d": "3/2016"}, {"body": "fan adding behavior api documenting nt forget unfortunately suppose already crossed rubicon calling functions prevent used way passively serialize object way would json still fan", "d": "3/2016"}, {"body": "dmethvin moved question separate issue", "d": "3/2016"}, {"body": "per meeting pushing", "d": "3/2016"}, {"body": "removed milestone backed end", "d": "3/2016"}, {"body": "fix backed branch really confusing fix still though jquery safer disturbing get security fix back", "d": "3/2016"}, {"body": "reedloden hey thanks pointing would mind creating ticket need write three places", "d": "3/2016"}, {"body": "reedloden revert breaking change nt done revert well see fix arrive", "d": "3/2016"}, {"body": "markelog added milestone ticket nt one", "d": "3/2016"}, {"body": "rejected fixed removed milestone", "d": "3/2016"}, {"body": "backed definitely seems right also excluded want nonexistent attribute return proposed want remove milestone tag", "d": "3/2016"}, {"body": "removed milestone due revert opened issue amp added needs review label account dave question", "d": "3/2016"}, {"body": "backed definitely seems right also excluded remember discussion reverted cause might dangerous proved ui breakage literally gain except align standard whereas behaviour dom spec questionable first place since others js api get value value", "d": "3/2016"}, {"body": "backported amp changed milestone", "d": "3/2016"}, {"body": "backported amp changed milestone used say", "d": "3/2016"}, {"body": "per meeting pushing", "d": "3/2016"}, {"body": "reverted removing milestone", "d": "3/2016"}, {"body": "posterity behavior change ready handlers executed async words code adding ready handler expected handler executed synchronously ie code break hopefully nt common", "d": "3/2016"}, {"body": "nt fixed removing milestone", "d": "3/2016"}]