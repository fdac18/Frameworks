[{"title": "small bug", "body": "found bug accident actually binding method name vue throw error warning still work intended", "num": "151", "d": "2/2014"}, {"title": "allow simple prototype properties", "body": "would useful simple bound properties view prototype performance reasons example js var form vueextend var loginform formextend overlaps form prototype propery hidesuccessmessagetimeout case simple property copied prototypes", "num": "150", "d": "2/2014"}, {"title": "syntax sugar extending components", "body": "currently extend registered component thinking new syntax make easier maybe something like thoughts", "num": "149", "d": "2/2014"}, {"title": "hook called extended view", "body": "fiddle worked previous versions", "num": "148", "d": "2/2014"}, {"title": "option disable parsing mustachestyle directives", "body": "trying create hybrid application using means pages rendered serverside client parts converted dynamic views problem user example name string html rendered server html superman parse replace property view data course could use directive every node may contain unsafe content would convenient come kind option disable parsing mustachestyle directives think", "num": "147", "d": "2/2014"}, {"title": "creating subviews vue", "body": "confused quite long time since know mvvm developer based backbone backbone new views required remove subview disappears case picture would open clicking click open people build kind ui vue", "num": "146", "d": "2/2014"}, {"title": "srcqueuejs empty", "body": "looks strange", "num": "145", "d": "2/2014"}, {"title": "component within template sets listeners wrong element", "body": "example click listener set component element replaced taking listener", "num": "144", "d": "2/2014"}, {"title": "add mark safe filter translates mustache binding instead", "body": "would useful filter allows user mark mustache binding safe would become", "num": "143", "d": "2/2014"}, {"title": "give component access partial", "body": "think would useful give component access partial allow manipulated inserted component template", "num": "142", "d": "2/2014"}, {"title": "directives inside component templates binding early", "body": "example type field alert comes template uses directive set alert class appears binding prior getting data type undefined wrong class set", "num": "141", "d": "2/2014"}, {"title": "updating vue data array items", "body": "trying update array items vue data object tried using vmodel tried specifying handler specific assigning fromto neither one update look debugger method values evaluate would expect still nt seem update vm sure missed point", "num": "140", "d": "2/2014"}, {"title": "vue\u652f\u6301\u7684\u6d4f\u89c8\u5668\u8303\u56f4\u662f", "body": "chrome ff opera", "num": "139", "d": "2/2014"}, {"title": "paramattributes values interpolated", "body": "see", "num": "138", "d": "2/2014"}, {"title": "transitions skipped vtransition vrepeat", "body": "demo switch select firefox setting transitions skipped time better setting vue transitions still skipped time time chrome vue transitions skipped part displaying dom transitions demo seem affect", "num": "137", "d": "2/2014"}, {"title": "default value paramattributes options", "body": "option exists element default value think would allow easily define default options", "num": "136", "d": "2/2014"}, {"title": "regression delegation", "body": "using conjunction delegation mechanism fails run handler see seems regression introdouced", "num": "135", "d": "2/2014"}, {"title": "ready hook", "body": "fiddle", "num": "134", "d": "2/2014"}, {"title": "staggering animations", "body": "", "num": "133", "d": "2/2014"}, {"title": "vmodel nt work components", "body": "created component added vmodel select tag component use component try get value model value nt seems like way binding nt happen model component", "num": "132", "d": "2/2014"}, {"title": "attached", "body": "foo getting rendered cases attached callback never get called first case jsfiddle javascript var foo vueextend template foo attached function consolelog attached run var new vue template components foo foo appendto body var new foo appendto body", "num": "131", "d": "2/2014"}, {"title": "callback bound event object", "body": "js var vm new vue created function consolelog vm true current vm maybe event could passed second parameter", "num": "130", "d": "2/2014"}, {"title": "strange behavior vueextend components", "body": "creating two classes extending vue component name last defined component shadows previously defined component another class also shadowing component visible vue class", "num": "129", "d": "2/2014"}, {"title": "vtransition lock element vleave state", "body": "demo already listening change expression beginning transition event", "num": "127", "d": "2/2014"}, {"title": "make delegate vm root node default", "body": "repeated items except", "num": "126", "d": "2/2014"}, {"title": "option", "body": "seems better solution confusing likely removed next release", "num": "125", "d": "2/2014"}, {"title": "plugin shorthand syntax work browserify", "body": "browserify analyze static requires", "num": "124", "d": "2/2014"}, {"title": "extended components able plugins", "body": "", "num": "123", "d": "2/2014"}, {"title": "clarify directive documentation using literals directive html attribute", "body": "let say want pass string literal directive one two ways html message literal string show parameter directive method however need single quotes inside double quotes bit eyesore could way html message literal string available directive methods like way looks better potential confusing directive documentation needs good enough know interpret keypath string literal string expression needed additionally consequences performance otherwise abusing literal strings think questions addressed directives depth section documentation list directives api reference good job calling literal directives split list top page", "num": "122", "d": "2/2014"}, {"title": "wrap settimeout javascript transitions", "body": "", "num": "117", "d": "2/2014"}, {"title": "add css animation support vtransition", "body": "also staggering animations list items", "num": "116", "d": "2/2014"}, {"title": "appened dom nodes two way binding", "body": "first say excellent library created started port rather large enterprise sized application work vue far done extremely well reducing complexity code said wondering currently possible make two way data binding work appended dom nodes take fiddle example trying bind inserted input box firstname model mean dom elements must present vue setup bindings correctly perhaps better method going", "num": "115", "d": "2/2014"}, {"title": "vuejs server", "body": "would nt cool require vue nodejs use browserify reuse viewmodels", "num": "114", "d": "2/2014"}, {"title": "updating model callback propogate", "body": "updating model within vm callback see data model update update get reflected view see ready method timercomponent jsfiddle example", "num": "113", "d": "2/2014"}, {"title": "dispatch behavior", "body": "trying dispatch event grandchildren ready event works inside bar arrives foo nt ready function var self self dispatch hello foo setactive function index self dispatch hello bar self dataactive index", "num": "112", "d": "2/2014"}, {"title": "vhtml documentfragment dom node", "body": "seems assign documentfragment html node data attribute view update assign string value html node template updated ie vueobject dataelement works updates dom tree vueobject dataelement documentcreateelement div vieobject dataelement documentcreatedocumentfragment nt work vueobject dataelement documentcreateelement div innerhtml works something wrong seems inefficient transform documentfragment string back piece dom", "num": "111", "d": "2/2014"}, {"title": "onetime bindings", "body": "times need static template rendering without overhead setting observers currently experimental feature polymer polymer lands vue", "num": "110", "d": "2/2014"}, {"title": "input values deleted vmodel", "body": "following think result instead replacing value data reasonable without data less html new vue el body data two three great job btw", "num": "109", "d": "2/2014"}, {"title": "performance poor firefox", "body": "sure excited go alpha version browser seems firefox system amp slower chrome good selfoptimizing js faster something wrong like see another test firefox aurora someone else possible todomvc benchmark palemoon firefox fork vue ms backbone ms knockout ms ember ms angular ms react ms om ms ractive ms firefox aurora vue ms backbone ms knockout ms ember ms angular ms react ms om ms ractive ms chrome beta vue ms backbone ms knockout ms ember ms angular ms react ms om ms ractive ms vue ms backbone ms knockout ms ember ms angular ms react ms om ms ractive ms animating instances iterations ms results vue firefox fork firefox aurora cpu much higher amp seems sluggish chrome beta tia", "num": "108", "d": "2/2014"}, {"title": "inline data", "body": "mixed compilation literal directive intended simple inline data similar attributes nested paths expressions bindings literal strings anything complicated pass object parent vm alldigit values converted numbers values wrapped quotes escape commas eg", "num": "107", "d": "2/2014"}, {"title": "add outlet syntax templates", "body": "would allow components wrap existing html allow better composed", "num": "106", "d": "2/2014"}, {"title": "array diffing still runs transition unchanged elements", "body": "could wrong seems like transitions run elements array unchanged built commit css transition runs replace array objects previously array case example", "num": "105", "d": "2/2014"}, {"title": "allow created constructors add assets directives filters etc", "body": "gives bit flexibility code organization", "num": "104", "d": "2/2014"}, {"title": "instanciate component many times", "body": "hello thks beautifull framework question want instanciate component many times identify instance apply specific data regards", "num": "103", "d": "2/2014"}, {"title": "diff arrays vrepeat update", "body": "thoughts new array large overlap elements old array could save lot work", "num": "102", "d": "2/2014"}, {"title": "make loop objects also", "body": "internally object converted array object additional innumerable attribute data manipulation done manipulating array instead mapped back original object mostly way detect new property creation objects could avoided available tbd allow user access converted array", "num": "101", "d": "2/2014"}, {"title": "vrepeat destroys amp recreates items changes made array", "body": "vrepeat directive combined vcomponent component contains components using vrepeat short deeply nested dom element like tree view would parent gt child gt child etc seems hugely ineffective vrepeat destroys rebuilds views every time original array changes avoided either changing vrepeat directive avoiding issue together example thanks efforts", "num": "100", "d": "2/2014"}, {"title": "error", "body": "error installation latest version node version npm version", "num": "99", "d": "2/2014"}, {"title": "callback ca nt handle correct callback", "body": "always fire first element callback element retrun code wrong", "num": "98", "d": "2/2014"}, {"title": "image src attribute causes compilation", "body": "hello template like javascript gives error angular team issue resulted ngsrc directive nb problem might happen attribute see nghref well edit comes jsfiddle", "num": "97", "d": "2/2014"}, {"title": "general faq", "body": "use thread simple quick questions avoid cluttering issue list alternatively try vuejs irc channel freenode also read wiki faq first", "num": "96", "d": "2/2014"}, {"title": "binder currently blanking form elements load", "body": "default set values within form elements binding declared currently vue clear values regardless data scope happen reading current values assigning scope simple fix initially stop binder clearing values adding thislock value return modelupdate method sure consequences though thoughts", "num": "95", "d": "2/2014"}, {"title": "vmodel work", "body": "running using using either fails work completly although nt time figure scripts may something break able use vmodel even add simple myvuetags always returns first value even multiple values selected try see create minimal example broken behaviour", "num": "93", "d": "2/2014"}, {"title": "plugin interface spec", "body": "verbose version shorthand equivalent inside plugin function", "num": "88", "d": "2/2014"}, {"title": "add cspcompliant mode content security policy", "body": "might missing something obvious apologize advance expected work nt good reason", "num": "87", "d": "2/2014"}, {"title": "add truncate default filter", "body": "", "num": "86", "d": "2/2014"}, {"title": "allow ajax loading templates vpartial", "body": "also requires hook become asynchronous actually sure part vue starting feel like something framework like handled userland recommended practice prebundle everything using component", "num": "85", "d": "2/2014"}, {"title": "make vrepeat work array primitive values", "body": "wrap value object access value value", "num": "84", "d": "2/2014"}, {"title": "utilstotext stringify object", "body": "", "num": "83", "d": "2/2014"}, {"title": "", "body": "", "num": "82", "d": "2/2014"}, {"title": "throws error minified concatenated use strict script", "body": "vue part built website happens concatenate minify tested another script adds global scope minified vuejs script throws js exception part script assigns library undefined recreate try using using official umd factory pattern fixes remember correctly", "num": "81", "d": "2/2014"}, {"title": "ie nt allow", "body": "kinda annoying using inside style", "num": "80", "d": "2/2014"}, {"title": "rewrite lifecycle hook mechanism", "body": "use emitters internally user also listen events instance created", "num": "79", "d": "2/2014"}, {"title": "roadmap", "body": "core animation transition api internal improvements consolidate api future specs improve api make easier ship standalone reusable components build largerscale applications tooling chrome dev tools extension cspcompliant build see branch commonjsbased build setup browserify vueify webpack vueloader scoped css wip serverside rendering starter kit plugins please discuss plugin specific topics plugin respective repo general philosophy plugins light selfcontained importantly avoid reinventing wheel build top solid low level solutions mostly make vuefriendly vuetouch vueresource vuerouter wip vuevalidator community calling usercontributed examples tutorials open blog post submissions blog set", "num": "78", "d": "2/2014"}, {"title": "allow directives literal ie bound anything take attribute value string", "body": "would simplify internal directives", "num": "77", "d": "2/2014"}, {"title": "bug function removeclass", "body": "vuejs dev line removeclass funciton branch", "num": "76", "d": "2/2014"}, {"title": "vrepeat vm destroyed directly remove data corresponding array", "body": "", "num": "75", "d": "2/2014"}, {"title": "fix weird issue todomvc example", "body": "item checked complete page loads clear completed button bindings somehow skipped", "num": "74", "d": "2/2014"}, {"title": "remove need classlist polyfill", "body": "", "num": "73", "d": "2/2014"}, {"title": "docs update", "body": "x accessing repeated child vms x unescaped html x add section using event system compositionmd x remove classlist polyfill notice", "num": "72", "d": "2/2014"}, {"title": "change avoiding conflicts handlebar binding", "body": "dear xiaoyou looking mvvm work meteorjs recently found ngmeteor taking glance codes vue find explicit mentioning fix problem would like create project vmeteor maybe may suggest thank much", "num": "71", "d": "2/2014"}, {"title": "irc channel", "body": "hi thank amazing work project would think vuejs irc channel need help registering channel freenode handle want tell", "num": "69", "d": "2/2014"}, {"title": "accessing computed properties components mixed view model javascript", "body": "way access computed properties components mixed view model javascript docs show use directive access html javascript example jsfiddle illustrates type composition referring component created adding view model using components instantiation option want know right way access computed properties component view model javascript access directive used work using since computed field refer last item list may concepts correctly think cases would want get data component code instead markup", "num": "68", "d": "2/2014"}, {"title": "add triple mustache verbatim html", "body": "essentially sugar vhtml", "num": "67", "d": "2/2014"}, {"title": "computed properties vrepeat", "body": "possible use computed properties vrepeats far tell way tell item rendered computed property also tried adding function property data item nt working either example data items number text one number text two template computed propercolor function item return itemnumber blue black", "num": "66", "d": "2/2014"}, {"title": "form inputs repeating element updating computed properties expected array mutated", "body": "using add objects array hooked template element contains form inputs appears newlycreated input elements bound way input elements created based initial data object provided instantiating vue instance newlycreated input elements correct value called typing nt cause property computed array change commit functional test demonstrates strangely test passes run casper fails browser tried safari chrome firefox", "num": "65", "d": "2/2014"}, {"title": "compatible shim", "body": "much issue question vuejs still functional shim used", "num": "64", "d": "2/2014"}, {"title": "misspelling getting started page", "body": "getting started page word actual misspelled actuall", "num": "63", "d": "2/2014"}, {"body": "nt forget register effect via vueeffect", "d": "2/2014"}, {"body": "javascript transitions renamed effects better differentiate css transitions css animations javascript effects need pass options name need specify effect html greet fixed fiddle docs", "d": "2/2014"}, {"body": "sure bug since actually working since data properties methods exposed vm instance avoid anyway", "d": "2/2014"}, {"body": "currently access extra properties bit verbose dev branch added access easily", "d": "2/2014"}, {"body": "nt want add custom properties passed view prototype", "d": "2/2014"}, {"body": "blacklist options nt get mixed also vm instances proxy access could potentially cause naming collisions conceptually anything vm instance nt start either data property bindable method", "d": "2/2014"}, {"body": "roger thanks", "d": "2/2014"}, {"body": "could also return created component guess could source confusion another approach explicit js vuecomponent form vuecomponent loginform extends form becomes horrible idea var form vueextend var loginform vueextend extends form", "d": "2/2014"}, {"body": "know option would confusing haha nt mention", "d": "2/2014"}, {"body": "maybe return new created objects static methods chaining necessary case imho", "d": "2/2014"}, {"body": "c style extend vue component form component loginform form loginform extends form", "d": "2/2014"}, {"body": "ok mistake returns new component written like", "d": "2/2014"}, {"body": "yeah registration methods return chaining however considering convenience syntax extending components see", "d": "2/2014"}, {"body": "would even useful could change delimiters underscore template example javascript templatesettings interpolate g var template template hello name template name mustache gt hello mustache", "d": "2/2014"}, {"body": "changing delimeters wo nt help case user still able call say break everything parse attributestyle directives user chance break anything", "d": "2/2014"}, {"body": "ahh sorry nt vigilant enough", "d": "2/2014"}, {"body": "hackish way monkey patching", "d": "2/2014"}, {"body": "bpierre yes great mustachestyle bindings also used node attributes example docs html hello name course strange user contain mustaches lol attribute example contain anything", "d": "2/2014"}, {"body": "true certainly break future release", "d": "2/2014"}, {"body": "new option", "d": "2/2014"}, {"body": "wow incredible speed man becoming framework dream thanks", "d": "2/2014"}, {"body": "want totally something similar vuejs necessary super heavy views want explicitly control lifecycle sub view better memory management cases compose everything together use display based view state", "d": "2/2014"}, {"body": "would nice could option tell vue subvue child therefore able dispatch messages catch broadcasted messages hierarchy vms", "d": "2/2014"}, {"body": "marfalkov good point internal compiler option occurred make public option example could get benefits access scope event communication etc", "d": "2/2014"}, {"body": "great", "d": "2/2014"}, {"body": "accidentally checked test file thanks noting", "d": "2/2014"}, {"body": "fixed thanks", "d": "2/2014"}, {"body": "triple mustaches see", "d": "2/2014"}, {"body": "bpierre said", "d": "2/2014"}, {"body": "ooops thanks", "d": "2/2014"}, {"body": "able access hook", "d": "2/2014"}, {"body": "example", "d": "2/2014"}, {"body": "fun", "d": "2/2014"}, {"body": "marfalkov nice one", "d": "2/2014"}, {"body": "works use directive bind function able get value available thisvalue", "d": "2/2014"}, {"body": "set called creating custom directive nt vue treat literal directive basically need access binding values even though called case also use html", "d": "2/2014"}, {"body": "definitely weird also available update hook defined useful think implicit literal directive udpate hook may little nonobvious", "d": "2/2014"}, {"body": "right make explicit options", "d": "2/2014"}, {"body": "also get initial value argument available", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "would think property containing string", "d": "2/2014"}, {"body": "might boolean options future limiting everything single string type feels less flexible", "d": "2/2014"}, {"body": "ok thanks", "d": "2/2014"}, {"body": "meant post faq apologies", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "intended simple inline data attribute value interpreted raw values instead binding child component already access parent data directly template actually share data use", "d": "2/2014"}, {"body": "see built better example see missed obvious solution case basically component like bind data property parent vm parent vm already property directly directly use ideally like bind component app way bind input value property first version base demo working using sync two properties events sake completeness finally version quick amp dirty directive order synchronize two properties without adding code like last one structures kept separated like think", "d": "2/2014"}, {"body": "thanks detailed examples totally make sense think something like could indeed useful also makes think lock mechanism prevent values circular triggering", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "thanks man removed forced layout tested single element worked browsers seems without force layout triggering becomes inconsistent revert change", "d": "2/2014"}, {"body": "ah stupid still need delegation", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "updated fiddle", "d": "2/2014"}, {"body": "jquery selector looks element dom element appended dom yet give jquery component element search context would work", "d": "2/2014"}, {"body": "thanks wrong way eg el baz jquery getting rusty", "d": "2/2014"}, {"body": "achievable via", "d": "2/2014"}, {"body": "could make fiddle", "d": "2/2014"}, {"body": "hellojosh component view model want access data parent either need combine directive go combine directive supply object parent view model latter probably bit cleaner example section documentation also shows", "d": "2/2014"}, {"body": "obsoleter thanks help duckbox fiddle shows something simple trying", "d": "2/2014"}, {"body": "hellojosh looks like bug fixed sometime works fiddle", "d": "2/2014"}, {"body": "hellojosh seems working latest version side note concept components vuejs instance nontrivial data logic view states use case seems partial would simpler", "d": "2/2014"}, {"body": "something like feels complicated javascript var foo vueextend template foo ready function var self attached function selfonattached methods onattached function consolelog know attached attached function consolelog attached run var new vue template components foo foo attached function broadcast attached appendto body var new foo appendto body", "d": "2/2014"}, {"body": "see fiddle attached gets called console logs attached", "d": "2/2014"}, {"body": "fiddle", "d": "2/2014"}, {"body": "see gets called second case", "d": "2/2014"}, {"body": "ahhhhhh ffs marfalkov apologize get saying explicitly setting child component attach event fire error design sure use created method instead attached get outcome looking", "d": "2/2014"}, {"body": "duckbox problem unfortunately use attached callback big mixed jqueryknockout datagrid build vue attached view", "d": "2/2014"}, {"body": "wondering use attached callback parent attached children", "d": "2/2014"}, {"body": "would clean keep relevant code module attached callback instead parent attached callback dynamically creating components based events", "d": "2/2014"}, {"body": "right one component needs attached callback imagine components attached callbacks would messy", "d": "2/2014"}, {"body": "true think solution broadcasting top level vm address next release", "d": "2/2014"}, {"body": "awesome", "d": "2/2014"}, {"body": "thought seems problematic recursively fire attacheddetached child components two events meant indicate component element relationship parentnode whether inside dom consistent behavior native dom mutation events use case something like", "d": "2/2014"}, {"body": "live broadcast one case would good could let say afterrendered callback", "d": "2/2014"}, {"body": "hook fired compilation done note component compiledrendered attached dom", "d": "2/2014"}, {"body": "fired view rendered nt", "d": "2/2014"}, {"body": "nope saying compilation less thing rendering hook fired means data bindings processed element stabilized", "d": "2/2014"}, {"body": "strange tried ready nt work case look thanks", "d": "2/2014"}, {"body": "provide fiddle illustrating problem ran would great closing", "d": "2/2014"}, {"body": "since using way nt really bother good point javascript var vm new vue created function var self consolelog self vm true", "d": "2/2014"}, {"body": "yes moment wondering purpose", "d": "2/2014"}, {"body": "amp", "d": "2/2014"}, {"body": "give example", "d": "2/2014"}, {"body": "using way", "d": "2/2014"}, {"body": "component use different methods pesca scarta", "d": "2/2014"}, {"body": "declare attributes components ca nt use whatever user writes attribute automatically", "d": "2/2014"}, {"body": "blacklist native attributes depending element type cumbersome whitelist approach explicit safer", "d": "2/2014"}, {"body": "think dataattributes bit misleading potential confusion datatset api perhaps bindattributes example seems odd whereas need rename binding key instance well dataqty seems messy", "d": "2/2014"}, {"body": "yes bindattributes also sounds misleading really binding starting value maybe", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "paramattributes feb pierre bertet notifications githubcom wrote elementattributes htmlattributes tagattributes domattributes attributes reply email directly view github", "d": "2/2014"}, {"body": "ah misthought whole binding part initial data follow absolutely paramattributes sounds perfect describe", "d": "2/2014"}, {"body": "dead simple attr", "d": "2/2014"}, {"body": "marfalkov already option hash attribute keyvalues added element", "d": "2/2014"}, {"body": "exact opposite maybe names could reflect something like", "d": "2/2014"}, {"body": "setattributes getattributes sounds good", "d": "2/2014"}, {"body": "nt think logical counterparts part element options component configuration option", "d": "2/2014"}, {"body": "makes sense", "d": "2/2014"}, {"body": "hmmm guess shorthand componentbased projects clarify spec", "d": "2/2014"}, {"body": "vuerequire works already called static way really ugly solution could require modules relevant plugins", "d": "2/2014"}, {"body": "yeah actually one reasons use component browserify let think", "d": "2/2014"}, {"body": "maybe dedicated plugin api could provided documented instead exposing internal components", "d": "2/2014"}, {"body": "could try commonjseverywhere", "d": "2/2014"}, {"body": "actually thinking shipping built versions npm instead would allow get rid emitter hack also split observer package", "d": "2/2014"}, {"body": "scrap browserify attempts parse requires inside throws compile time error", "d": "2/2014"}, {"body": "yup browserify attempts parse bundle making dynamic paths impossible likes utils static named module without define list modules packagejson etc fri feb pm evan notifications githubcom wrote scrap browserify attempts parse requires inside throws compile time error reply email directly view github", "d": "2/2014"}, {"body": "modules exposed plugins theoretically need plugins mess parts anyway docs updated together next release plugin spec mature", "d": "2/2014"}, {"body": "think may also true requirejs setup use almond shim", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "agreed option create directives implementation like since literal directives need data binding capabilities nt need method directive definition provide method data binding work skipped essentially makes literal directive using bad consequences fact avoid using quotes literal values makes directive expression requires lot internal work evaluate clarify docs better thanks", "d": "2/2014"}, {"body": "also documented", "d": "2/2014"}, {"body": "moving vuejsorg repo", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "sure approaching built comprehensive css animation library optimized animations use take find keep great work", "d": "2/2014"}, {"body": "thanks brandon vue animation transition support provide hooks custom css would provide flexibility actual css code developers wo nt bundled vue core would cool collection css animations used vue box", "d": "2/2014"}, {"body": "amp", "d": "2/2014"}, {"body": "hi brandon happy know vue working regarding question ideally want include much possible template initialization possible compile appended nodes really needed fiddle add append element however example remove input node associated bindings autodestroyed remain memory lot stuck like could cause memory leaks application think better solution including input template showhide", "d": "2/2014"}, {"body": "idiomatic implementation moment could result verbosity template complexity js code greatly reduced next version vue make able iterate object could help multiple fields need functionality", "d": "2/2014"}, {"body": "fun example breaking functionality component directive vuejs awesome", "d": "2/2014"}, {"body": "really nice obsoleter great use components", "d": "2/2014"}, {"body": "obsoleter use filters", "d": "2/2014"}, {"body": "thanks fast reply excellent examples", "d": "2/2014"}, {"body": "filipelinhares awesome thank must missed docs", "d": "2/2014"}, {"body": "definitely something interested could also used prerendering page server side initial speed seo way vue built assumes presence dom requires full dom simulation node like jsdom quite heavy probably mess around see much work would time moment focusing consolidating core api plugin spec", "d": "2/2014"}, {"body": "one thoughts came roadmap instead jsdom ran runtime would task would execute task dev compile manifest object data intercepted dom output bootstrap sorts initial load obviously would require vue plugin read manifest contents bind data prerendered markup", "d": "2/2014"}, {"body": "mistake changed way counting seconds nt fix filter nothing broken", "d": "2/2014"}, {"body": "listening events", "d": "2/2014"}, {"body": "root rootvm hello function msg consolelog someone said hello msg", "d": "2/2014"}, {"body": "rootvm compiled children compiled time attached listener ready hooks already fired order capture children ready event attach listener parent ready hook", "d": "2/2014"}, {"body": "nt seem work fireing inside grandready childready rootready", "d": "2/2014"}, {"body": "oops sorry meant parent created hook", "d": "2/2014"}, {"body": "yeahh thank", "d": "2/2014"}, {"body": "things hold json compliant values strings work raw nodes wo nt intended transform strings html situation seems looking partials register partial inside templates use partials converted documentfragments cached would efficient", "d": "2/2014"}, {"body": "aye right partials work fine fast went ballmer peak", "d": "2/2014"}, {"body": "thanks fixed initial data undefined inline value used", "d": "2/2014"}, {"body": "honestly sure causing perf difference vue firefox likely dom layoutrendering javascript optimization would nt say faster ff wrong far know pretty performant browser also note benchmark specific series operations reflect every aspect browserframework performance", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "thanks noticing fixed", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "hi guide doc also always pass additional data manually instantiate components", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "hi rudasn top level array changes vuejs nt rebuild whole list items example viewmodel associated removed piece data destroyed similarly add new elements array existing viewmodels unaffected index updated necessary amount work done vue linearly proportional amount changes data let know understood concerns correctly", "d": "2/2014"}, {"body": "thanks evan something wrong code trying loop object first converting array reset array property one objects changes order property ordered dictionary words resetting array causes rebuild everything apparently tried creating directive loop objects work directives eg component also defined thoughts especially appreciated feb evan notifications githubcom wrote hi rudasn top level array changes vuejs nt rebuild whole list items example arr pop viewmodel associated removed piece data destroyed similarly add new elements array existing viewmodels unaffected index updated necessary amount work done vue linearly proportional amount changes data reply email directly view github", "d": "2/2014"}, {"body": "give example data described think mapping object array use need serialize data map array back object data format also considering adding directive looping objects stay tuned", "d": "2/2014"}, {"body": "thanks phone atm ca nt provide data example object keys id child objects value child object child objects order property defines order display one object loop directive would greatly appreciated feb evan notifications githubcom wrote give example data described think mapping object array use vrepeat need serialize data map array back object data format also considering adding directive looping objects stay tuned reply email directly view github", "d": "2/2014"}, {"body": "ago might cause working though keep getting error", "d": "2/2014"}, {"body": "fixed think kind npm cache error", "d": "2/2014"}, {"body": "sorry found solution needed", "d": "2/2014"}, {"body": "add help event listeners specify methods without duplicate piece data", "d": "2/2014"}, {"body": "mizchi one thing note json compliant best practice exclude functions data objects putting functions always preferred want use custom vue constructor repeated items combine guide", "d": "2/2014"}, {"body": "use situation", "d": "2/2014"}, {"body": "great asked faq", "d": "2/2014"}, {"body": "hi started toying vuejs ran issue nesting data collections using repeat directives displaying data working fine however element subordinate vms destroyed bound data currently removed well hook afterdestroy listener example try clicking itemsremove n buttons unintended behaviour better approach use", "d": "2/2014"}, {"body": "interesting nt considered type usage maybe remove behavior", "d": "2/2014"}, {"body": "hey evan first think great job vue case pojos composability difference maker also speed ofc question done full time like angular guys eg google sponsored thanks", "d": "2/2014"}, {"body": "dyu thanks project moment started using new projects creative lab potential dedicate substantial part fulltime bandwidth future", "d": "2/2014"}, {"body": "think favour handle related data explicitly necessary thanks looking really enjoy using vue far", "d": "2/2014"}, {"body": "cmenke thanks thinking think suggestion makes sense originally added hook wanted allow users manually destroy repeated instances expressions seen example believe problematic general bad practice example manually destroying repeated vms proper way simply manipulate source data array latest patch reverted behavior", "d": "2/2014"}, {"body": "say words different better angular suited", "d": "2/2014"}, {"body": "charuru reasons use vue angular although might apply everyone vuejs flexible less opinionated solution allows structure app way want instead forced everything angular way interface layer use light feature pages instead full blown spa gives bigger room mix match libraries probably important distinction vuejs much simpler angular general learn almost everything really fast get productive vuejs better performance nt use dirty checking vuejs clearer separation directives components directives meant encapsulate dom manipulations components stand selfcontained unit view data logic angular lot confusion two also note vuejs relatively young project angular battleproven larger community want something large serious production app might want pick angular vuejs supports angular suppots", "d": "2/2014"}, {"body": "post would great wiki faq btw angular still beta att", "d": "2/2014"}, {"body": "hi evan week evaluating frontend framework use arrived angular react found must say really like clear style vuejs understand angular problem gets really slow creates lot watchers example ngrepeat found nice article says conventional wisdom angularjs says keep number databound elements wonder vuejs similar problem scaling databound elements fact vuejs nt use dirty checking winning factor angularjs use dirty checking", "d": "2/2014"}, {"body": "yjeroen angular gets slow lot watchers every time anything scope changes watchers need reevaluated vuejs nt suffer uses event based observing mechanism changes trigger independently unless explicit dependency relationships believe angular uses dirty checking support vuejs able get plain object syntax using features nt support hand dirty checking also benefit original data objects modified anyway vuejs converts object properties gettersetters", "d": "2/2014"}, {"body": "thank elaborate response disadvantage using change listeners changing original object something developer needs aware disadvantage taken care vuejs", "d": "2/2014"}, {"body": "yjeroen minor caveats observed objects see bunch gettersetters first define gettersetters data objects nt much problem data objects expected obtained plain json vuejs provides computed properties vuejs sometimes attach hidden properties data objects order observe developer accidentally overwrite properties would break rare run situations easy avoid nt set anything start data objects apart caveats use vuejs observed objects like normal objects loops work intended time nt even need worry", "d": "2/2014"}, {"body": "trying update array items vue data object tried using vmodel tried specifying handler specific assigning fromto neither one update look debugger method values evaluate would expect still nt seem update vm sure missed point", "d": "2/2014"}, {"body": "adamgd sorry one gotchas interpolate changes happen inside array elements propagate array data fact changed binding notified recommended log stringified data console instead outputting", "d": "2/2014"}, {"body": "adamgd example fiddle", "d": "2/2014"}, {"body": "hi evan wondering anything horizon release robust working example vuecomponent saw roadmap discussion routingpagejs curious anyone sample project incorporating routing page transitions etc using component really like way vue structured much angular trouble figuring structure app", "d": "2/2014"}, {"body": "mikegioia yes definitely part plan first step probably module probably watch keep updated", "d": "2/2014"}, {"body": "brandonpierce thank tested another fiddle dom mirroring data rather interpolation understand quirk interpolation rather something fundamental change watching initially thought response gotcha documented somewhere", "d": "2/2014"}, {"body": "ok thanks", "d": "2/2014"}, {"body": "adamgd documented interpolating objects pretty recent addition might changes later", "d": "2/2014"}, {"body": "recommended use inline default using instead set default value viewmodel option data considered source truth purpose reflect current state data", "d": "2/2014"}, {"body": "thanks reporting fixed", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "questions plugin interface usage param according mainjs example correct assume available use plugin choice returning function object containing keep design directives computed properties etc would like allow user configure plugin adding ideas idea configuration function issue solution disables usage shorthand idea add hook js myappjs var myplugin require myplugin would allow returns vueuse mypluginconfig foo bar configuration passed second param vueuse myplugin foo bar course directly called config vueuse myplugin vueuse myplugin global configuration mypluginconfig foo bar vueuse myplugin anothervueuse myplugin see last example still issue solution time called settings defined plugin object persist shared plugin instances solution could wrap magic javascript mypluginjs vueplugin ensures time config called new object created var vue require vue moduleexports vueplugin config function install function another problem could missing eg vue require detection code acceptable plugin interface really like second idea adds plugin concept think less concepts better also maybe missing super elegant solution already exists trying achieve sorry case think", "d": "2/2014"}, {"body": "thanks suggestions pierre original issue bit date require longer passed argument edited works expect exposes internal modules like etc allowing function convenience similar directive computed property apis configuration think need change implementation inside plugins plugins nt need options simply ignore options argument want plugins implemented without require vue easily mock vue test plugin", "d": "2/2014"}, {"body": "thanks answers", "d": "2/2014"}, {"body": "sure setup work example", "d": "2/2014"}, {"body": "figured source problem violates content security policy chrome app using exact error printed console refused evaluate string javascript unsafeeval allowed source script following content security policy directive defaultsrc self chromeextensionresource note scriptsrc explicitly set defaultsrc used fallback invalid expression metadata angularjs added ngcsp directive support apps extensions websites csp enabled believe default thoughts supporting something like", "d": "2/2014"}, {"body": "see think probably implemented optional plugin although sure time time soon could edit title csp specific keep open discussion thanks", "d": "2/2014"}, {"body": "able enable unsafeeval extension via manifestjson nt scriptsrc present defaults original secure settings granted enabling thing recommended get running solution cemented", "d": "2/2014"}, {"body": "chrome apps allowed relax csp google docs chrome extensions let relax default content security policy chrome apps", "d": "2/2014"}, {"body": "feross cripes thought extension good shout", "d": "2/2014"}, {"body": "one option seems avoid using anything simplest expressions parsed seems without use unfortunate", "d": "2/2014"}, {"body": "think csp support take quite time land meanwhile really want use vue chrome app could sandboxed architecture work ie running vue interface front communicate via message passing", "d": "2/2014"}, {"body": "sandbox approach could work keen adding additional complexity ie turning sync function calls property accesses async ones unfortunate chrome apps restrictive nt allow loosening csp meantime going use eventemitter hook events dom manually webtorrent nt think bad though csp support lands take another look using vuejs thanks", "d": "2/2014"}, {"body": "precompiling would another way approach see", "d": "2/2014"}, {"body": "good find feross", "d": "2/2014"}, {"body": "feross unfortunately essential vue current implementation data binding different handlebars uses also vue nt return static rendered string maintains live dom node really way precompile vue templates", "d": "2/2014"}, {"body": "fixed implementation really flexible enough leave userland", "d": "2/2014"}, {"body": "closing", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "resolved", "d": "2/2014"}, {"body": "yes thanks reporting caused build plugin fixed dev branch", "d": "2/2014"}, {"body": "seems fixed since", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "ah seems ie ignoring invalid inline css parsing html", "d": "2/2014"}, {"body": "ok see made tests looks like vstyle attribute tests results", "d": "2/2014"}, {"body": "exactly alas even still causing headache", "d": "2/2014"}, {"body": "reintroduced", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "awesome another vuerouter option tildeiorouterjs looks nice build things top", "d": "2/2014"}, {"body": "thanks suggestion feel tildeio implementation heavy size vue nt want enforce promises users", "d": "2/2014"}, {"body": "indeed sake completeness routerjs based lightweight", "d": "2/2014"}, {"body": "ah nice looks like valid choice", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "completely random would beneficial serverside compiler render relative vuejs view initial load first time speed seo etc sceanario vuejs would able read rendered markup establish state etc accompanied object rendered bootstrap something always wanted angular establish fully possible likes backbonehandlebars", "d": "2/2014"}, {"body": "something thinking currently react virtual dom probably mess jsdom see big effort would low priority unless someone wants work", "d": "2/2014"}, {"body": "would mind look future something like working degree would awesome", "d": "2/2014"}, {"body": "currently componentsdirectivesfilters registered global context accessible anyone local context accessible within scope current vue instance question bring expose reusable assets without cluttering global namespace example illustrate point fyi started reading vue mins ago shows great potential already possible happened miss done please disregard post thanks great work", "d": "2/2014"}, {"body": "bjornlll using vue module system eg component browserify assets simply module required needed general vue tries avoid imposing rules user organize hisher code somehow feel asset import functionality beyond scope vue", "d": "2/2014"}, {"body": "thanks replying good point much importing namespacing access particular component context would using vue together requirejs seen vue integrates commonjsamd loaders source assets require call points nt see avoid vue registering globally accessible context point import call would scope accessibility imported component within template scope said import call might solution example highlight point still wondering scope access registered component accessible within templates choosing read docs source", "d": "2/2014"}, {"body": "bjornlll", "d": "2/2014"}, {"body": "thanks could accomplish using function include privatedirectives requires patches modules privatedirectives var mycomponent vueextend directives include uivizgraph uilistablegrid filters components transitions partials", "d": "2/2014"}, {"body": "edited goals include preparations adopting future specs", "d": "2/2014"}, {"body": "typo please discuss plugin specific topics plguin repo address vue community", "d": "2/2014"}, {"body": "jiyinyiyong thanks fixed currently github community essentially also irc channel freenode vuejs although always active", "d": "2/2014"}, {"body": "another lightweight routing lib", "d": "2/2014"}, {"body": "using one vue", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "ohhh thanks good catch", "d": "2/2014"}, {"body": "fixed", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "hmm currently builtin way nt consider common use case also changing interpolation tags cause reusability issues components want use custom setup actually matter changing two regexps feel free fork adapt needs", "d": "2/2014"}, {"body": "sounds like good idea registered vuejs", "d": "2/2014"}, {"body": "active irc closing feel free nudge want moderate channel", "d": "2/2014"}, {"body": "thanks question overlook design update work returns list viewmodels associated array eg html", "d": "2/2014"}, {"body": "landed casper test coverage since nt checkin built files dev branches want try clone repo build otherwise probably merged master days", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "nt really understand trying achieve could please provide full example format code markdown put jsfiddle data objects must jsonstringifyable functions ignored", "d": "2/2014"}, {"body": "fiddle", "d": "2/2014"}, {"body": "hi dan use computed properties repeated items need give viewmodel constructors using details see guide another tricky thing fiddle attribute use mustache binding always get string value long property present button disabled even value empty string proper way deal write simple directive sets element property fixed example found", "d": "2/2014"}, {"body": "thanks updated fiddle docs great overall nt think would tried vue without nt really understand component part example useful", "d": "2/2014"}, {"body": "glad helps", "d": "2/2014"}, {"body": "thanks reporting fixed see commit message detailed explanation casper test case passes changed three fields event loop view updated next tick using latest values change field alone test fail modified test case account included commit", "d": "2/2014"}, {"body": "browsers already work since shims anything clone repo include shim see unit tests pass unfortunately work way shim objectdefineproperty plain javascript objects", "d": "2/2014"}, {"body": "thanks quick response project thinking using needs support ie sadly", "d": "2/2014"}, {"body": "fixed thanks", "d": "2/2014"}, {"body": "also fyi website repo would preferred open website related issueprs", "d": "2/2014"}, {"body": "landed", "d": "2/2014"}, {"body": "hold wait nightwatchjs release saucelab friendly version", "d": "2/2014"}, {"body": "looks like decent option works sauce labs cleaner syntax wd", "d": "2/2014"}, {"body": "original", "d": "2/2014"}, {"body": "duckbox think actual app", "d": "2/2014"}, {"body": "moved", "d": "2/2014"}]