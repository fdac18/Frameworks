[{"title": "docs published conflicts", "body": "", "num": "8739", "d": "8/2018"}, {"title": "set templaterendererpublicpath fly vueserverrender", "body": "problem feature solve case need set publicpath base runtime example need set publicpath base requesturl edit source code support wonder implemented officially btw webpack support set publicpath fly ref proposed api look like js const bundlerenderer createbundlerenderer serverbundle template clientmanifest runinnewcontext false request handler moduleexports async request response gt", "num": "8738", "d": "8/2018"}, {"title": "transitiongroups different tags vif velse read property vnode null", "body": "version reproduction link steps reproduce open console click button expected fact nt know would expect see error thinking maybe something wrong actually happening read property vnode null appears console", "num": "8737", "d": "8/2018"}, {"title": "vue js working safari ios", "body": "using vue js mozilla chrome browser work perfectly safari browser working perfectly environment vue js mobile iphone system version ios mobile browser safari showing code title datainfostitle desc datainfosdesc complete code business card datainfosrealname datainfosenglishname datainfoscompanyname datainfospositionname datainfoizonenum datainfosphone datainfoswxaccount datainfosfbaccount datainfosmail datainfosmdrtdtyear sdesc datainfosdesc experience itemscompany itemdtentrytime time itemdtquittime time itemsposition honor itemdtyear itemshonortitle ps introduced babelpolyfill still nt work anyone met problem could help explain little thanks", "num": "8736", "d": "8/2018"}, {"title": "vue treat every element attribute named like v something directive", "body": "version reproduction link steps reproduce run fiddle look console expected registered directive named vfake vue ignore attribute element actually happening vue treat every v something attribute directive regardless registered globally locally trying compute value v beginning attribute effect throws typeerror nt find property named like string passed attribute intentional information behavior vue docs however opinion ignore attributes", "num": "8733", "d": "8/2018"}, {"title": "input work dynamic type radio checkbox", "body": "version reproduction link steps reproduce generate input field dynamic type open project open console expected working radio checkboxes actually happening js error multiple definitions property allowed strict mode domprops value evalue value tmodel", "num": "8732", "d": "8/2018"}, {"title": "drop special logic enumeratedattrs", "body": "version reproduction link steps reproduce bind unsupported value attribute expected rendering element actually happening rendered reference vue html vue currently treat enumerated attributes values booleanlike enumerated attributes made behave like boolean attribtues actually attributes may two states extensible values example html corresponding idl attribute resolves instead present latest draft also defined possible values already accepted chrome remove logic otherwise developers ca nt leverage new features drop thing treat like ordinary attributes influence following cases sure regard breaking never documented usage binding resolved", "num": "8731", "d": "8/2018"}, {"title": "dev build console error using index key value vfor transitions", "body": "problem feature solve currently obvious way debug error including index value vbind key vfor using transitions causes erratic unexpected behavior transitions would suspect side effects untested feature would alert developer used index value place cause errors transitions example error example illustrate difficult determine vfor combined transitiongroup fails example uses vfor key one works fine nt include index key value uses index key ie vbind key index uses concatenated version vbind key item index note behavior thought bug lack documentation behavior console log entry would solved confusion instantly development instead hours debugging reporting proposed api look like check see index value used anywhere key check transition used display console error least warning proposal dev builds additionsexpansions api needed production builds", "num": "8730", "d": "8/2018"}, {"title": "antipattern computed property may cause performance issue", "body": "version reproduction link steps reproduce open code sandbox link click button use computed property filteredentities find cost lot time check call tree found code calls getter entities many times call function code leading thisentities length n getter called n times every time getter called call dependarray value thisentities array length n since dependarray iterate value depend function called n times totally found code reviewing someone pr original code use make another n times call getter easy avoid problem using array methods like call getter even cache value entities solve although easy avoid pattern still think dangerous original code obvious antipattern show performance issue array small may cause serious performance issue array large production environment expected read related source code think expected result observer system read chapter guide ensure mention sure whether need add todo computed property chapter actually happening described", "num": "8728", "d": "8/2018"}, {"title": "possible memory leak list dependencies grows computed getter", "body": "version reproduction link steps reproduce fiddle click results window multiple times notice modified vuejs follows expected frontend console logs update twice init one data update backend dependencyarray keeps size actually happening frontend console logs update every click backend dependencyarray grows fiddle notice frontend effects sure provide modified vuejs", "num": "8727", "d": "8/2018"}, {"title": "improve prop validator api", "body": "problem feature solve allows write validation logic depending multiple props allows provide custom validation messages proposed api look like example", "num": "8726", "d": "8/2018"}, {"title": "independent props validator", "body": "problem feature solve reduce packet size every component need reused validator want validate params nt need introduce another validator proposed api look like javascript const vue require vue defined customer validator vuevalidator function schema input run validator vuevalidate name type string age type number", "num": "8725", "d": "8/2018"}, {"title": "vmodel behaves inconsistently comparison docs", "body": "version reproduction link steps reproduce first docs claim using identical using behavior desktop chrome android behavior different using androidchrome model gets updated pressing space enter backspace unfocusing field maybe cases model update middle typing word however using model gets updated supposed seems like nt binding event android correct behavior achieved adding regardless whether used applies elements expected behavior expected platforms model update live every keypress actually happening chrome android model nt updated every keypress reproduced example inputs shown docs problem example creating list filtered live user input wondering whether bug documentation issue feel like bug since code different behavior different platforms", "num": "8723", "d": "8/2018"}, {"title": "event completely removed eventbus", "body": "version reproduction link steps reproduce one listener event evnets method delete event listener event events listens one listener ca nt remove event javascript one event listener var bus require vue bus eat func consolelog busevents eat func bus eat consolelog busevents eat func two event listener var bus require vue bus eat func bus sleep consolelog busevents log eat func sleep bus eat consolelog busevents log eat null sleep expected listener removed actually happening using method corresponding listener remove key events object", "num": "8722", "d": "8/2018"}, {"title": "property xxx exist type combinedvueinstance", "body": "version reproduction link steps reproduce use vuecli init ts helloworld project code like js import vue vue export default vueextend name helloworld props msg string data return wtf thisinitdata throw ts error property initdata exist type combinedvueinstance vue readonly lt msg string gt gt methods initdata return expected fix actually happening property initdata exist type combinedvueinstance", "num": "8721", "d": "8/2018"}, {"title": "\u76d1\u542c\u4e8b\u4ef6\u4e0d\u8d77\u4f5c\u7528\u4e86", "body": "version reproduction link steps reproduce \u6211\u5728\u7ec4\u4ef6\u5185\u76d1\u542c\u4e8b\u4ef6 \u7b2c\u4e8c\u6b21\u8fdb\u5165\u9875\u9762\u7684\u65f6\u5019 \u4e8b\u4ef6\u76d1\u542c\u4e0d\u4f1a\u751f\u6548 \u5728\u63a7\u5236\u53f0\u8f93\u51fa eventbus events\u5b57\u6bb5 \u540e\u9762\u663e\u793a\u7684\u662f\u7a7a\u5bf9\u8c61 expected \u5e0c\u671b\u89e3\u51b3\u95ee\u9898 actually happening", "num": "8720", "d": "8/2018"}, {"title": "vuecomponent doesnt except argument type", "body": "version reproduction link steps reproduce click repro link open testts see type errors uncomment vue type augmentation see errors disappear expected pass component actually happening type error adding following overload fix", "num": "8719", "d": "8/2018"}, {"title": "transitiongroup animates last element using index key", "body": "version reproduction link steps reproduce create vue app items displaying list add transition group vfor format like vfor item index items use index vfor vbind key like vbind key index add remove items data expected item removedadded transition applied actually happening last item list gets transition applied may old bug hunting solution problem ran may intended behavior using index key least warning message dev version vuejs explain perhaps searchable text documentation something like last item list animatingtransition applied solution found without thinking bug vuejs", "num": "8718", "d": "8/2018"}, {"title": "pass component instance async import", "body": "problem feature solve context multitenant site import templates based site site codes example componentssites sitecode topnavhomesearchvue webpackchunkname homesearch export default stuff components homesearch configsitecode complex scenario reactivity would awesome proposed api look like since config ends vuex application boot would nice instead componentssites vmsitecode topnavhomesearchvue webpackchunkname homesearch export default stuff computed mapstate sitecode state gt stateconfigsitecode use mapgetters components homesearch gt import components vm arg would third one backwards compatibility end feature request would look like could define function classically bind component context use like know scenario could import vuex store like general vm props data could used import function", "num": "8715", "d": "8/2018"}, {"title": "insert method get refparentnode patchjs nodeopsparentnode ref", "body": "version reproduction link steps reproduce note reproduction link \u7ed3\u679c\u53d1\u73b0\u4f7f\u7528 vif expected ref actually happening", "num": "8713", "d": "8/2018"}, {"title": "loosing reactivity", "body": "version reproduction link steps reproduce change value default input change value component input change value default input expected inputs keep reactive step actually happening component input stops reactive step ran issue trying compose generic form input component either input textarea wondering general misuse dynamic components found pretty convenient input textarea share lots styles props functionality refactor use vif instead", "num": "8712", "d": "8/2018"}, {"title": "modified options added extended component mixin applied super component", "body": "version reproduction link steps reproduce run code console open undefined logged comment mixin true logged late option persisted expected late option kept actually happening overwritten late option added extendoptions class function added extendoptionsoptions merge options uses late option included merge edit fix", "num": "8710", "d": "8/2018"}, {"title": "keepalive cache removed componentinstance nt destroy", "body": "version reproduction link steps reproduce cached amp amp current cached currenttag cached destroy function prunecacheentry cache key keys current var cached cache key cached amp amp current cached currenttag cached destroy cache key null remove keys key expected actually happening", "num": "8708", "d": "8/2018"}, {"title": "type checks typescript fail vuesetdelete", "body": "version reproduction link steps reproduce git clone cd vuesandbox yarn nodemodulesbintsc indexts error argument type assignable parameter type property length missing type vueset dataobj error argument type assignable parameter type property length missing type vuedelete dataobj expected type checks typescript succeed case actually happening type checks typescript fail case use number key object vuesetdelete yes create pr fixes typesvuedts", "num": "8707", "d": "8/2018"}, {"title": "", "body": "vue cached amp amp current cached currenttag cached destroy function prunecacheentry cache key keys current var cached cache key cached amp amp current cached currenttag cached destroy cache key null remove keys key", "num": "8705", "d": "8/2018"}, {"title": "prop type boolean default set false", "body": "version reproduction link steps reproduce make prop set expected prop would set actually happening prop setting prop type setting default value result prop type act way", "num": "8704", "d": "8/2018"}, {"title": "callback done nt work correctly transition", "body": "version reproduction link steps reproduce callback done nt work click step animation next step start animation end previous step check link click step animation end first step still visible screen vif step data step changed value expected expected click step see animation step step becouse use callback done animation step start animaiton step completly actually happening animation overlay animation end data vif changed elements still visible screen please tell bug something wrong", "num": "8703", "d": "8/2018"}, {"title": "csp issue compiling", "body": "version reproduction link steps reproduce compiling files compiled output file linked minimal reproduction using following used website block appjs file due new function comes directly vue file included compiling also tried step changing settings produces blank page view source shows raw html fine console errors either firefox chrome expected compile appjs without actually happening appjs producing please search file new function see culprit apologies linking anything better tried replicate using js bin joy nt think allows meta tags csp work correctly also tried set different domain got csrf token issue laravel using csp meta tags csp flags security risk tried use version set settings inside laravel guided friendly people laravelmix", "num": "8702", "d": "8/2018"}, {"title": "mark functional components dom thay displayed vue developer console", "body": "problem feature solve functional components displayable debugable vue developer console proposed api look like add additional property vuefunc htmlelement contains object basic information functional component eg context props etc property scanned vue developer tools displayed", "num": "8701", "d": "8/2018"}, {"title": "add support optional components using tag", "body": "problem feature solve currently using syntax component nt exist warning produced vue warn unknown custom element register component correctly recursive components make sure provide name option would like propose extension allow optional components wo nt provide warning component nt exist proposed api look like attribute prevent warning slot content rendered component found actually works documented would nice docs component found", "num": "8700", "d": "8/2018"}, {"title": "", "body": "", "num": "8699", "d": "8/2018"}, {"title": "transitionend event nt fired element inside leaving", "body": "version reproduction link steps reproduce open reproduction demo nonchrome browser attach listener component root el element nt matter transition child element listener callback nt fired expected transitionend event fired browsers actually happening transitionend event fired chrome use case allow use template therefore use javascript hooks regardless inconsistent behavior figured vue stopping propagation event somehow complete context use case read issue", "num": "8698", "d": "8/2018"}, {"title": "typeerror read property node undefined", "body": "version reproduction link steps reproduce npm install save add line import add code helloworldvue data expected successful call smart contract function actually happening error undefined processversionsnode xml vue work well vue packed app error", "num": "8697", "d": "8/2018"}, {"title": "new vue event bus nt delete events keys event removal", "body": "version reproduction link steps reproduce create global event bus new vue add event listener using eventbus remove listener using eventbus eventbusevents object still contain event name value null rather deleting event name property jsfiddle click add event listener remove event listener buttons events object displayed jsfiddle also javascript console adding removing listeners expected removing event listener expect event name removed global event bus vue events object actually happening event name still events object value null using lot unique event names although app tries clean events via eventbus event names still events object unless null properties get cleaned point appears memory leak", "num": "8696", "d": "8/2018"}, {"title": "get default value perent send null props", "body": "version reproduction link steps reproduce child component use default value parent send null props parent child export default props data type number default mounted consolelog data expected actually happening", "num": "8695", "d": "8/2018"}, {"title": "typescript related issues", "body": "must mainjs modified maints component import typescript component ca nt use symbol class inheritance use", "num": "8694", "d": "8/2018"}, {"title": "prop type array accept null", "body": "problem feature solve fathervue import child childvue export default components child want childvue accept prop foo etiher number null could one solution may like follow childvue export default props foo required true validator function val return typeof val number val null childvue export default props foo required true imagination type number null const simplecheckre stringnumberbooleanfunctionsymbol function asserttype value type function valid boolean expectedtype string let valid const expectedtype gettype type simplecheckretest expectedtype const typeof value valid expectedtypetolowercase primitive wrapper objects valid amp amp object valid value instanceof type else expectedtype object valid isplainobject value else expectedtype array valid arrayisarray value else valid value instanceof type return valid expectedtype first element number types array call function worked well second element null types array call function match expection param type function gettype function could work maybe easiest way solve feature extra judge null asserttype function proposed api look like", "num": "8692", "d": "8/2018"}, {"title": "component update updating components", "body": "version reproduction link steps reproduce begin typing either first two input boxes components third simple vanilla input box expected would expect vmodel update components like vanilla input actually happening updating either two components causes label vanilla input update eachother created workaround way expected behave however feel like vmodel component updating assumed mistake part looked examples vmodel components simply copy pasted component html surprised find indeed thing code codepens provided fact one sources thank advanced help", "num": "8691", "d": "8/2018"}, {"title": "install vuex subclass due missing static properties", "body": "version reproduction link steps reproduce open reproducer look console see errors expected vuex successfully installed vue subclass actually happening due dependency static properties copied errors thrown attempting use vuex component library without exposing outside boundaries library ran bug attempting install vuex globally subclass would specific library based code seems like intended one able call subclass plugin isolated subclass sure exactly considered bug patch made vuex using internally part public api copied subclass could also make vuex traverse inheritanceprototype chain reaches root vue class pull properties", "num": "8690", "d": "8/2018"}, {"title": "enumeratedattr currently base attribute feasible", "body": "problem feature solve hi happy use vue build app start read source code find html attributes isenumeratedattr exist think treat base attribute feasible although unreasonable maybe anyone help function use proposed api look like delete isenumeratedattr treat base attribute maybe", "num": "8689", "d": "8/2018"}, {"title": "weex create failed", "body": "version reproduction link steps reproduce weex create myproj expected r gt weex create myproj command need install weexpack installing project name myproj project description weex project r gt actually happening completing exceptions errors debug show error", "num": "8688", "d": "8/2018"}, {"title": "error render website created vue facebook app browser", "body": "version reproduction link steps reproduce share link facebook use facebook app click link shared please make sure use facebook app browser expected page display actually happening page blank display correctly image guess facebook browser render vuejs code", "num": "8687", "d": "8/2018"}, {"title": "global error handling vuejs applcation", "body": "hi every one im looking way catching errors globaly vuejs application mean use axios call service using catch method normally working catch ok work one method method three call method wirting catch method every method somehow annoying us im looking global error handling like global error handling implented", "num": "8686", "d": "8/2018"}, {"title": "vfor using functional component", "body": "version reproduction link steps reproduce first first issue created project take opportunity thank contributors maintainers awesome astonishing work vue thanks functional component trying use inside vfor produces error even using key fixable converting component nonfunctional one according understanding functional components way key works even functional components without state keyable nt related state component according chris fritz issue also present earlier versions expected vfor renders component without error actually happening vfor renders component error", "num": "8685", "d": "8/2018"}, {"title": "linting error props contains array", "body": "version reproduction link steps reproduce typescript build array props item expected boom contain linting error actually happening property hi exist type vue", "num": "8684", "d": "8/2018"}, {"title": "question vue single file typescript nt work well webstorm ide", "body": "version reproduction link link steps reproduce use vuecli create vuetypescript project open project webstorm expected webstorm throw warningerror something happened actually happening typescript vueclasscomponent error tip ca nt resolve file fact works typescript without vueclasscomponent vue typescript work expected webstorm mean use vscode get full support typescript new typescript appreciated got help", "num": "8682", "d": "8/2018"}, {"title": "offer option synchronous server rendering", "body": "problem feature solve benefit asynchronous server rendering offer argue little making function async guarantees oldest requests processed nt highest priority bad also leads memory usage rendering eight requests asynchronously simultaneously means nonblocking call requires eight requests resources held memory instead one time also bad offering simpler api would easier developers would guarantee requests prioritized order nt use resources next request finished last request would also decrease memory usage less overhead overall unnecessarily queueing tasks event loop less overhead overall per request proposed api look like import createrenderer vueserverrenderer const renderer createrenderer runinnewcontext false appget req res gt const markup rendererrendertostringsync new component resend markup", "num": "8681", "d": "8/2018"}, {"title": "cache access processenv", "body": "problem feature solve access slow systembound call react restructured project cache access performance improvement serverside rendering also done vue vueserverrenderer vuex anything accesses proposed api look like easy strategy might replace references reference singleton checks processenvnodeenv becomes isdevenvjs export default processenvnodeenv production foojs import isdevenv isdevenv isdevenv stuff", "num": "8680", "d": "8/2018"}, {"title": "property x exist type combinedvueinstance using typescript prop validator", "body": "version reproduction link steps reproduce use typescript build component expected component builds actually happening following error thrown property minvalue exist type combinedvueinstance remove validator prop error goes away remove data section error also goes away", "num": "8679", "d": "8/2018"}, {"title": "dynamic async import working", "body": "version reproduction link steps reproduce look minimal reproduction link see iconvue built dynamic component dynamic svgs get loaded svgs loaded svgloader see implementation vueconfigjs expected loading correct file showing icon actually happening build runs without errors creates js file every chunk perfect try import model another vue project use component following error appears icon loaded failed resolve async component function return n concat svg reason error loading chunk failed missing parses file right ca nt found code sandbox repo working component lib wanted show files iconvue vueconfigjs", "num": "8678", "d": "8/2018"}, {"title": "use vfor stateful component root element renders multiple elements", "body": "trying implement subcomponent task component another component tasklist vue returns error taskdescription use vfor stateful component root element renders multiple elements found", "num": "8677", "d": "8/2018"}, {"title": "diff nt work", "body": "version reproduction link steps reproduce register component directive methods change put component behind vfor list expected list render actually happening", "num": "8676", "d": "8/2018"}, {"title": "diff nt work", "body": "version reproduction link steps reproduce register component directive methods change put component behind vfor list actually happening", "num": "8675", "d": "8/2018"}, {"title": "make calls backend rest server part vue please", "body": "problem feature solve could please build similar functionality axios vueresource part vue framework vue usage client framework requires backend talk part vue natural place secondly one less third party depend future updates code reliability critical part data transmission performance reliability scalability like take opportunity thank team building awesome framework vuejs thank ben proposed api look like leave team know better fit api structure", "num": "8674", "d": "8/2018"}, {"title": "shorthand", "body": "problem feature solve would make repetitive declaration lot easier proposed api look like would make make extend", "num": "8673", "d": "8/2018"}, {"title": "use vbind style bind inline style autoprefixes invalid", "body": "version reproduction link steps reproduce expected width webkittransform translate transform translate webkittransition transform transition transform actually happening width transform translate transition transform", "num": "8672", "d": "8/2018"}, {"title": "weex vue ca nt create", "body": "hey guys command finished create project mean myproj created wrong see two line help please", "num": "8671", "d": "8/2018"}, {"title": "vue typescript \u5b50\u7ec4\u4ef6\u7684created\u65b9\u6cd5\u6ca1\u6709\u6548\u679c", "body": "version reproduction link steps reproduce expected \u6253\u5370consolelog actually happening \u6ca1\u6709\u6253\u5370", "num": "8670", "d": "8/2018"}, {"title": "auto bind object type von", "body": "problem feature solve javascript const clickobj click consolelog null window depent environment new vue el app data return clickobj template thisvonthis proposed api look like auto bind directive", "num": "8669", "d": "8/2018"}, {"title": "value watch array deep", "body": "version reproduction link steps reproduce watch array expected expect false actually happening get true", "num": "8668", "d": "8/2018"}, {"title": "jsx ref error", "body": "version reproduction link steps reproduce expected self refs array three menber actually happening", "num": "8667", "d": "8/2018"}, {"title": "vuetemplatecompiler line number", "body": "problem feature solve recently trying write webpack loader vue component came across package works perfectly except nt location info ast read something chinese see ast result compiler method originline indicate position tried nt get originline link sure already feature removed missing something options btw version vuetemplatecompiler using general direction would much apprieciated thanks advance proposed api look like return ast like ast originline xx", "num": "8665", "d": "8/2018"}, {"title": "vue component support selfclosingtag well", "body": "version reproduction link steps reproduce sorry example code running jsfiddle jsbin short access website quckly example code html file contains cdn link vue vue component regist code vue instance init code put nginx another webserver directly access html could see content component selfclosingtag missed change selfclosing common close way question like always use vue cdn build old project support build way develop expected content displayed autoclosingtag actually happening content missing change autoclosing way common way question fixed running chrome lastest version ie firefox may compatible question", "num": "8664", "d": "8/2018"}, {"title": "link video vuejs nt navigate anywhere", "body": "version reproduction link steps reproduce click created video link vuejs section expected web page video walk core principles sample project vuejs documentation actually happening page refreshes looking html looks like value set", "num": "8662", "d": "8/2018"}, {"title": "computed issue sorting", "body": "version reproduction link steps reproduce simple change vue jsfiddle stop working idea simple array json componen need sorted via computed function expected array elements sorted instead get error nothing shown actually happening seems infinite loop since set consolelog return statement computed function see many times called function stacktrace", "num": "8661", "d": "8/2018"}, {"title": "something like vbind also directives", "body": "problem feature solve cleaner template code especially libs like vuetify heavily depending bunch props directives proposed api look like", "num": "8660", "d": "8/2018"}, {"title": "\u5728 uiwebview\u548cwkwebview \u4e2d\u6ca1\u6709\u8d77\u4f5c\u7528", "body": "version reproduction link steps reproduce expected toast \u80fd\u591f\u4ece\u5e95\u90e8\u52a8\u6001\u6ed1\u51fa actually happening", "num": "8659", "d": "8/2018"}, {"title": "somone point component showing thank", "body": "import sidebar componentsglobalsidebarvue import navigation componentsglobalnavigationvue import footer componentsglobalfootervue export default components sidebar navigation created", "num": "8658", "d": "8/2018"}, {"title": "xss protection hook runtime vnode patching", "body": "problem feature solve following code vulnerable xss attacks xml web devs filtering application level via custom filters however problems application code could knowledge runtime running browsersweex might human errors eg newcomer dev group fails apply proper filter untrusted field really interests xss filtering renderer vnode level kept transparent application code proposed api look like called patching every vnode js const getattribute vnode attr gt const val vnodedata amp amp vnodedataattrs amp amp vnodedataattrs attr return val const setattribute vnode attr val gt vnodedataattrs attr val const getinnerhtml vnode gt const html vnodedata amp amp vnodedatadomprops amp amp vnodedatadompropsinnerhtml return html const setinnerhtml vnode html vnodedatadompropsinnerhtml html called patching every vnode vuevnodehooksprepatch vnode gt ignore components vnodecomponentinstance return remove onloadonerror string const onload getattribute vnode onload const onerror getattribute vnode onerror typeof onload string setattribute onload else typeof onerror string setattribute onerror redirect javascript href vnodetag const href getattribute vnode href typeof href string amp amp sjavascript itest href setattribute vnode href sanitize html const html getinnerhtml vnode typeof html string setinnerhtml vnode sanitize html", "num": "8657", "d": "8/2018"}, {"title": "allow components listen events", "body": "problem feature solve aware discussed previously resolution neither seem lead solution allows tightly couple two notnecessarily related components trying use datepicker component inside datatable component filter dynamic number datepicker components depending data piping datatable also integrating existing large codebase trying keep state local components vuex global vue data ex love datepicker generic date picker emit dataselected event date user selected wherever used application parent simply listen event take action case requerying data date filter right tightly couple datepicker datatable component fire datatable filtering sure seen coherent argument allowing parent listen events seen response seems singularly slots wo nt necessarily single element issue end rendering anything text plain element multiple nodes behavior unpredictable explained nt make sense add listeners nt always render single element different javascript triggered number child nodes proposed api look like allow component listen events emitted", "num": "8656", "d": "8/2018"}, {"title": "reload page redirects base url", "body": "nt know issue vue code reload page using ctrlw redirects route", "num": "8655", "d": "8/2018"}, {"title": "typescript template checking build run", "body": "version reproduction link steps reproduce clone git repo install dependencies run npm run build npm run dev expected template appvue use property test click handler image setting value click get error runtime preferably also compilation since error would nt show component nt enabled lead bugs found runtime problem correct usage typescript could solve also use property template gives error runtime though would also expect error compilation actually happening first example would expect get error runtime compilation get error right setting value click handler instead calling method would invoke error runtime method nt exist component second example would expect error compilation well nt get issues might related sure autocompletion ides eg intellij webstorm using typescript also nt great yet nt seem recognize template belongs class probably different issue thanks advance", "num": "8654", "d": "8/2018"}, {"title": "async method called vue template returns undefined", "body": "version reproduction link steps reproduce vue template calling methods render data methods console get value return template expected methods return value actually happening method returns undefined", "num": "8653", "d": "8/2018"}, {"title": "fix svg example", "body": "version reproduction link steps reproduce please open jsfiddle link use devtool show console expected warning actually happening following warning displayed console beginners see get confused fix set statid uuid use key", "num": "8650", "d": "8/2018"}, {"title": "transition working nesting component w render function", "body": "version reproduction link steps reproduce push button wait fade push button expected elements fade first click fade second click actually happening transitioning works fine transitioning transition classes applied rendering transitions child node controlled vif directive fail applied rendering controlled child components render function nt know expected behaviour overlooking something obvious feels like cases behave identical since documentation explicitly states vif implemented via js ifstatements within render functions", "num": "8648", "d": "8/2018"}, {"title": "event listener invalid working", "body": "version reproduction link steps reproduce form invalid state event handler called expected von invalid run handler function actually happening nothing", "num": "8647", "d": "8/2018"}, {"title": "", "body": "version reproduction link steps reproduce last release every cdn exaclty thing got changed updated version value expected release different actually happening release dist jsdeliver dist jsdeliver dist unpkg dist unpkg", "num": "8646", "d": "8/2018"}, {"title": "found problem used ref vfor", "body": "problem feature solve \u4f7f\u7528 ref \u548c vfor \u5bfc\u81f4 router \u62a5\u9519 vuerouteresmjs vuerouter uncaught error route navigation vuerouteresmjs typeerror read property undefined proposed api look like \u89e3\u51b3\u6b64\u95ee\u9898", "num": "8645", "d": "8/2018"}, {"title": "found problem used ref vfor", "body": "version reproduction link steps reproduce vuerouteresmjs vuerouter uncaught error route navigation vuerouteresmjs typeerror read property undefined expected \u4f7f\u7528rouerpush \u6b63\u5e38 actually happening vuerouteresmjs vuerouter uncaught error route navigation vuerouteresmjs typeerror read property undefined", "num": "8643", "d": "8/2018"}, {"title": "found problem used ref vfor", "body": "found problem used ref vfor dom fine use vfor dynamically render bind ref uerouter reporting error shown figure need help thank", "num": "8642", "d": "8/2018"}, {"title": "lookup vuex observed property containing many rows slow", "body": "hi trying render long list items number fixed cells home made grid around fixed rows scroll read different values vuex store data property around rows important understand create new cells rows created merely update content upon scrolling javascript javascript partial export default vueextend props rowno coldef rownovis data gt new mydata computed thevalue string let row storestaterowsprepared thisrowno return row lastname using vuex store property state called rowsprepared contains rows problem start scrolling read values cells rowsprepared vuex property dreadfully slow however read data standalone static non observed data object containing rows super fast reading observable vuex property slow way around done attach rowsprepared property store created observed indeed scrolling super fast however item changes value automatically tracked forced hacky refresh stuff meant done vue l help much appreciated", "num": "8637", "d": "8/2018"}, {"title": "wrong type option", "body": "version reproduction link steps reproduce clone repo expected typescript errors actually happening", "num": "8635", "d": "8/2018"}, {"title": "vue devtools recommendation shows chrome firefox", "body": "version reproduction link local dev setup steps reproduce run dev build open page firefox without vue devtools installed open devtools console expected devtools extension gets recommended actually happening recommendation shows chrome firefox logic twist used one code maybe could changed include firefox ua detection alternatively ua detection dropped link always shown users figure might switch browsers use devtools", "num": "8634", "d": "8/2018"}, {"title": "vue devtools recommendation shows chrome firefox", "body": "vuejs dev mode recommends installing devtools extension works firefox ht everybody involved recommendation probably shown firefox well line question would", "num": "8633", "d": "8/2018"}, {"title": "feature request tool allow preview document vue components", "body": "something like directly vue ui", "num": "8632", "d": "8/2018"}, {"title": "nt work vshow", "body": "version reproduction link steps reproduce run jsfiddle example expected documentation says works vshow single element expected works similar fashion vif like actually happening error thrown saying needs transitiongroup", "num": "8631", "d": "8/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u76f4\u63a5run expected \u6709\u6837\u5f0fbackgroundposition center actually happening \u6ca1\u6709backgroundposition center", "num": "8629", "d": "8/2018"}, {"title": "", "body": "", "num": "8628", "d": "8/2018"}, {"title": "module version browser", "body": "problem feature solve allow use based module without compile would allow mixed version use vue complex system example cms could use vue part gui using module website owner could include vuejs direct", "num": "8627", "d": "8/2018"}, {"title": "self closing element wraps following textnode", "body": "version reproduction link steps reproduce run fiddle expected closing element textnode actually happening textnode wrapped element", "num": "8626", "d": "8/2018"}, {"title": "vue typescript property exist type computed function", "body": "version reproduction link steps reproduce codesandbox seems support typescript code intelligense file code typescript import vue vue interface testinterface string export default vueextend props type object gt testinterface computed return expected typescript compiler complaint actually happening property exist type way solve problem", "num": "8625", "d": "8/2018"}, {"title": "input input attribute change caused keydown", "body": "version reproduction link steps reproduce device mac input text expected input text actually happening input text", "num": "8624", "d": "8/2018"}, {"title": "bug transitiongroup indexed animation", "body": "version reproduction link steps reproduce run jsfiddle vfor key index delete one item array animate last item change key error work properly give vue warn avoid using nonprimitive value key use stringnumber value instead vue warn duplicate keys detected object object may cause update error expected expected animate item removed like using error actually happening animating last item loop using index trying create one alert notification component", "num": "8623", "d": "8/2018"}, {"title": "locally registering components ignores name field favor imported object reference name specific cases", "body": "version reproduction link steps reproduce create component name includes titlecased acronym like locally register component importing naming reference something like including section expected component register imported component using name defined within component definition actually happening component defined name ignored instead name imported object reference component used instead converted name nt match component defined name aware naming imported reference something like works concern defined name ignored example demonstrates", "num": "8622", "d": "8/2018"}, {"title": "locally registering components ignores name", "body": "", "num": "8621", "d": "8/2018"}, {"title": "suggesion add support rest parameters within vfor", "body": "problem feature solve think would make template composition lot easier many cases particularly using scoped slots via renderless componetns example could vue rather vue proposed api look like changes api", "num": "8620", "d": "8/2018"}, {"title": "optimize comment regexp", "body": "version reproduction link steps reproduce find comment regexp find use maybe remove", "num": "8619", "d": "8/2018"}, {"title": "optimize comment regexp", "body": "find comment regexp find use maybe remove", "num": "8618", "d": "8/2018"}, {"title": "support use event custom vue event", "body": "version steps reproduce expected warning actually happening use event custom component shows vue warning chrome console", "num": "8617", "d": "8/2018"}, {"title": "duplicate dom vif change duplicates select tag change velsevelseifother vif", "body": "version reproduction link jsfiddle steps reproduce change select first b click second tab er select second still default value ar select second changed index first select furthermore change input first anything click second tab er input second blank ar input second black contains contents first tab expected select second still default value actually happening select second changed index first select add id class either container div make non identical wo nt happen", "num": "8616", "d": "8/2018"}, {"title": "nt escape html char codes mustache expressions", "body": "problem feature solve currently want html unescaped char codes must use directive since regular mustache expressions html gets escaped would possible escape html tags retain char codes mustache expressions would make injected text secure still allowing users put special characters need char codes could also escaped filter find inelegant especially since ca nt use certain features eg filters directives proposed api look like proposing next breaking release added vue mustache expressions default rendering could added option sort", "num": "8615", "d": "8/2018"}, {"title": "set computed nt work collections arrays object", "body": "computed collection somecollection template try smth like expected result change text input field console see set work thats mean set somecollection work real result see nothing console log set somecollection wo nt run change text input field", "num": "8614", "d": "8/2018"}, {"title": "processing style miss webkit profix", "body": "version reproduction link steps reproduce open jsfiddle use devtool inspect element expected style div element webkitbackgroundclip text actually happening style div element backgroundclip text chrome version ok using stylecsstext set style according use use property must prefix webkit think two way resolve ugly change vue setprop method case official document", "num": "8612", "d": "8/2018"}, {"title": "disabled validate type format", "body": "problem feature solve make app page mobile want get number type keybord set input type number want input input number blank like vue tell valid number clear input key point want get number keyboard want input number formatter like proposed api look like vue options valid input type", "num": "8611", "d": "8/2018"}, {"title": "null property", "body": "problem feature solve think nice feature like angular prevent errors like something like proposed api look like stops interpret expression", "num": "8610", "d": "8/2018"}, {"title": "select element binding initial value value vmodel causes different result", "body": "version reproduction link steps reproduce use value vbind value bind initial value select tag nt work code snippet please select itemname please select itemname expected initial value binding vbind set properly vmodel binding actually happening initial value binding vbind set properly", "num": "8607", "d": "8/2018"}, {"title": "\u52a8\u6001\u7ec4\u4ef6\u6e32\u67d3\u4e0d\u751f\u6548", "body": "version reproduction link steps reproduce code\u5982\u4e0b import pagelist componentspagelist const pagelisttotal const pagelisttabs const pagelistcomp pagelist name let lt pagelisttotal let compname msgtab pagelisttabspush compname pagelistcomp compname pagelist name compname export default components pagelistcomp template expected actually happening", "num": "8606", "d": "8/2018"}, {"title": "loop iview form error binding vmodel directly vfor iteration alias", "body": "errormessage binding vmodel directly vfor iteration alias able modify vfor source array writing alias like modifying function local variable consider using array objects use vmodel object property instead", "num": "8605", "d": "8/2018"}, {"title": "option nt work functional components", "body": "version reproduction link steps reproduce open pen see logs console expected empty object actually happening empty", "num": "8604", "d": "8/2018"}, {"title": "text select box vmodel time update value", "body": "version reproduction link steps reproduce try change dropdown value text displayed select box almost always stay today despite value changing though sometimes actually change correct value see actual value indeed changing even select box show expected options select based array value pairs text val text shown select val actually passed stored data object expect text change well value selecting option actually happening value changes every time text mostly stays unchanged text rarely change expected consistently showing wrong text right value would assume something wrong since infrequent sure would surprised something wrong going insane please savior", "num": "8603", "d": "8/2018"}, {"title": "newline compiler error", "body": "version reproduction link steps reproduce copy single html file open open dev console see print err info expected show normally actually happening dev console showed error uses windows newlines rn uses posix newlines n", "num": "8602", "d": "8/2018"}, {"title": "\u5b50\u7ec4\u4ef6\u4e0d\u80fd\u4f7f\u7528", "body": "\u5b50\u7ec4\u4ef6\u4e0d\u80fd\u4f7f\u7528 \u6709\u4ec0\u4e48\u5176\u4ed6\u529e\u6cd5\u5b9e\u73b0\u5417", "num": "8599", "d": "8/2018"}, {"title": "vuejs output different html expected", "body": "version reproduction link steps reproduce create add divs nested option tags inside expected vuejs output actual generated code even incorrect html actually happening corrects invalid dom output preventing browser seems unnatural since output vuejs different one major browsers raise issue knowing could easily closed", "num": "8598", "d": "8/2018"}, {"title": "vue \u4e2d\u662f\u7528webgl\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898", "body": "version reproduction link steps reproduce \u6253\u5f00 srcpageshomemap \u4e0b\u7684initviewjs\u91cc\u9762\u7684lazycreatemode true \u6539\u4e3afalse \u6216\u8005\u76f4\u63a5\u5207\u6362\u591a\u4e2a\u697c\u5c42 expected \u5e0c\u671b\u53ef\u4ee5\u77e5\u9053\u539f\u56e0 actually happening", "num": "8597", "d": "8/2018"}, {"title": "\u6709\u5173vue\u4e4bwatch\u7684\u95ee\u9898", "body": "", "num": "8596", "d": "8/2018"}, {"title": "scrolling fast android makes dom content disappear", "body": "version reproduction link steps reproduce happens android devices intermittent ive also tested browserstack could nt reproduce happening actual android devices load page scroll really fast sometime pieces dom images disappear scroll back back content might expected dom see constantly actually happening dom android nt rendering reason isolated android os issue problems ios desktop devices also tried upgrade latest version vue removed party dependencies point nt know vue problem something else figured would submit ticket see anyone else reported issue like", "num": "8594", "d": "8/2018"}, {"title": "use reusable transitions reusable transitions working", "body": "version reproduction link steps reproduce create app parents routes components routerview first route component create children route component routerview create reusable transition apply parent routerview childre routerview expected reusable transition would like use transition passage parent routing reusable transition would like another transition children routing actually happening one transition work add reusable transition parent routerview children routerview children transition work remove children transition parent transition work nt transition children try use transition parent routerview children routerview without use reusable transition tag case work", "num": "8593", "d": "8/2018"}, {"title": "\u5f39\u7a97\u540e\u6309\u952eesc error info", "body": "error error event handler runtimeonmessage typeerror read property isvisible undefined adefaultsharedinstanceaddeventlistenert foreache tdefaultdispatchevent fhandledispatchbroadcast fhandlemessage listener", "num": "8592", "d": "8/2018"}, {"title": "interact native vue engineering project", "body": "contrast title npm package smooth difference ios android good", "num": "8591", "d": "8/2018"}, {"title": "remove component element list", "body": "version reproduction link steps reproduce click second item click button expected second item removed actually happening last item removed", "num": "8590", "d": "8/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u65e0\u8bba\u4f7f\u7528 \u53ea\u8981\u8fc7\u6ee4\u5668\u542b\u6709read expected typeerror f function proxyeval eval createfunction vuerender vueupdatecomponent watcherget new watcher mountcomponent vue mount vue mount vueinit new vue actually happening error", "num": "8589", "d": "8/2018"}, {"title": "define slot scope props vm similar props", "body": "problem feature solve access slotscope props directly vm currently ca nt create computeds watchers slot scope prop vm access pass around arguments proposed api look like say list component current usage javascript evens evens somepropsitems odds odds somepropsitems new vue el app methods evens items return itemsfilter n gt n odds items return itemsfilter n gt n javascript evens evens odds odds new vue el app slotscope something like default items array computed slotitems return thisslotscopedefaultitems evens return thisslotitemsfilter n gt n odds return thisslotitemsfilter n gt n", "num": "8588", "d": "8/2018"}, {"title": "tunneling slots inside scopedslot triggers warning incorrectly", "body": "version reproduction link steps reproduce create renderless component passes data default scopedslot component uses renderless component root populates scopedslot template two components regular slots one tunneling passed content second slot slots different names affect issue like somehow force renderless component update expected warning shown actually happening triggers warning duplicate presence slot sep found render tree likely cause render errors found gt srccomponentsmiddlecomponentvue might also work incorrectly trigger additional unnecessary rerenders source code responsible showing warning probably meant detecting usage slots inside vfor loops however case seems called incorrectly since slot rendered reason might flag reset situation using renderless component tunneling outside scopedslot trigger error using scopedslots instead regular slots also trigger warning check skipped potentially related", "num": "8587", "d": "8/2018"}, {"title": "access vue instance another js file", "body": "problem feature solve need access instance vue another file exemple entrypointjs contains new instance vue would like access vm instance otherjs import vm entrypoint windowonload function consolelog vm error reason request able execute method view control external js proposed api look like didnt see documentation solution problem", "num": "8585", "d": "8/2018"}, {"title": "get code coverage vue files running project similar istanbul", "body": "problem feature solve business vue code write unit tests inefficient code needs coverage intanbul get coverage compiled js ugly wish supported proposed api look like vuetocoverageversioncode true return code contains extends code add get coverage data vueprototypegetcoveragedata gt return coverage data", "num": "8584", "d": "8/2018"}, {"body": "submit pr fix issue well thanks", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "note dug issue use vshows instead vif else works transitiongroup tag works even vifelse however practical case components transitiongroup children works", "d": "8/2018"}, {"body": "also thought nesting transitiongroups divs apply vifelse get error added code codepen", "d": "8/2018"}, {"body": "add attribute well remove error error nt appear indeed", "d": "8/2018"}, {"body": "posva thank workaround", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "imho think docs clear enough lookup good behavior makes debugging easier want add property want vue treat directive using data attributes instead", "d": "8/2018"}, {"body": "maybe would make sense resolve directive show error like value", "d": "8/2018"}, {"body": "posva guess could work", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "came open issue contenteditable couple states contenteditable reference", "d": "8/2018"}, {"body": "possible sometimes may want use index key really think open pr docs add note transitiongroup said issue", "d": "8/2018"}, {"body": "would never want use index key transition causes error demonstrated something wrong example showing error", "d": "8/2018"}, {"body": "yeah right nt think makes sense use index scenario transitiongroup sure easy add warning though", "d": "8/2018"}, {"body": "get point free time least look code able add kind thing perhaps dev object tracks features used render ie transition used index found ie template render would tracked well conflicts could found features used know easy say kind thing whole thing actually build high level dev theorize", "d": "8/2018"}, {"body": "tested using latest version vue count deps goes back array emptied memory leak", "d": "8/2018"}, {"body": "oh ok sorry misinterpreted deps array purpose", "d": "8/2018"}, {"body": "function returned stop rest code executing", "d": "8/2018"}, {"body": "fan adding prop argument think return string validator function let vue treat error counter proposal", "d": "8/2018"}, {"body": "removing feature breaking change wo nt reduce much packet size", "d": "8/2018"}, {"body": "talking components indeed explained different input vmodel please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "posva documentation talk per report input model immediately updated android typing plenty issues reported vue regarding specific use case already either documentation needs updated reflect vue internally handle better automatically picks correct way update element based input type nt particularly sound correct", "d": "8/2018"}, {"body": "search quite bit also agree least docs could updated unexpected inconsistency example text input docs reproduction link behaves differently androidchrome compared desktopchrome record angular issue regardless composition mode", "d": "8/2018"}, {"body": "see docs say languages require ime chinese japanese korean etc notice vmodel get updated ime composition want cater updates well use input event instead also happening english languages nt require ime ime autocompleteword suggestions disabling gives desired behaviour", "d": "8/2018"}, {"body": "events firing correctly keys removed object normal", "d": "8/2018"}, {"body": "seems intentional guess ca nt accidentally access computed properties via method edit", "d": "8/2018"}, {"body": "nt understand bad would happen access computed properties via method", "d": "8/2018"}, {"body": "nt exist yet", "d": "8/2018"}, {"body": "uh nt use property use function exist may turn instead native vue still friendly typescript maybe proficient vue anyway thanks helping", "d": "8/2018"}, {"body": "yeah know bit silly guess might done", "d": "8/2018"}, {"body": "hi please make sure follow issue reporting guidelines opening issue provide valid repro use thanks", "d": "8/2018"}, {"body": "type union type use type means function return vue constructor component options object think use concrete type return type", "d": "8/2018"}, {"body": "function loads components via webpacks requirecontext also esmodule type async comps hints component also vuecomponent overload foreach member type component union think problem typescript able check correctly", "d": "8/2018"}, {"body": "another indicator ts problem following works", "d": "8/2018"}, {"body": "well valid component", "d": "8/2018"}, {"body": "ofc point ts somehow finds correct overload ts type component typeof vue componentoptions functionalcomponentoptions const first const firstcomponent component first vuecomponent first first ok vuecomponent firstcomponent firstcomponent ok const second functional true const secondcomponent component second vuecomponent second second ok vuecomponent secondcomponent secondcomponent ok const third vueextend const thirdcomponent component third vuecomponent thrid third ok vuecomponent thirdcomponent thirdcomponent ok declare function getcomponent component const final component getcomponent vuecomponent final final type error typescript problem ts seems like doesnt allow multiple overloads match final case requiring", "d": "8/2018"}, {"body": "plain typescript example demonstrating problem", "d": "8/2018"}, {"body": "see use case sure union type sometimes passes overload replace fallback overload method type", "d": "8/2018"}, {"body": "expected key controls vue reuses elementscomponents therefore crucial transitiongroup read guide", "d": "8/2018"}, {"body": "respect time please understand nt put bug report without looking answer first please respectful time nt dismissive found new error well search see example end search documentation searched documentation entirely either bug undocumented documented reasonable place search index transition guide looked every single instance could find read guide know unreasonable usually ask seriously looked everything even searching online found nothing topic provide link documentation search results index shows times transitions guide mention effects index transitions transitions section index shows times list rendering guide mention transitions index shows times api docs none reference context transitiongroup transitions updated example new error found found one example cookbook using index key fails worse example instead last item animating entire block fades inout example", "d": "8/2018"}, {"body": "using index key default behaviour propositions notes add docs open pull request proposal vuejsorg repository maybe transitiongroup page right place last example keys changing vue replacing every single li remember use forum discord server get quick feedback questions", "d": "8/2018"}, {"body": "megacromulent vue perspective used identify unique items list let give example assume rendered list array using keyed items indexes remove list telling vue item item item removed transition occurs elementcomponent got addedremovedshowedhide view last item transitioned", "d": "8/2018"}, {"body": "justineo thanks explanation certainly clears errors happening results look like errors documented anywhere could find easily found posva open pull request proposal vuejsorg repository nt even consider idea never done pr hope nt make mess thanks guys edit error vuejsorg cookbook", "d": "8/2018"}, {"body": "really nt preference implementation though arrow function would cleanest maybe splat operators could work idk", "d": "8/2018"}, {"body": "actually already computed property use attribute", "d": "8/2018"}, {"body": "awesome", "d": "8/2018"}, {"body": "posva please update code add return line", "d": "8/2018"}, {"body": "intentional", "d": "8/2018"}, {"body": "well remove arrow fn get errors found gt without", "d": "8/2018"}, {"body": "returns object fine though", "d": "8/2018"}, {"body": "works without arrow function declare property method computed property", "d": "8/2018"}, {"body": "need use modifier bound dynamic component done automatically binding input", "d": "8/2018"}, {"body": "thanks clarification", "d": "8/2018"}, {"body": "hi please make sure follow issue reporting guidelines opening issue list steps reproduce important make sure clean unecessary dependencies like vuex also provide simple jsfiddle codesandbox instead github repo using old version cli would make things much easier us test thanks", "d": "8/2018"}, {"body": "thanks version vue upgraded works well", "d": "8/2018"}, {"body": "nt object", "d": "8/2018"}, {"body": "using number key object recommended actual case identifier type number appreciate use number object", "d": "8/2018"}, {"body": "sure allowing implicit type conversion typings think enough convert id string using constructor", "d": "8/2018"}, {"body": "js conversion implicit want use strict typing cast number string js implicitly access thing said typescript allows without warning think support", "d": "8/2018"}, {"body": "note inverse true arrays ts const record false true const b boolean b false element implicitly type index expression type number b true could also go fully strict instead might annoy people ts declare function set object key k value const c record const boolean const e foo bar baz foo bar set c false set c false nope set c string nope set false nope set false set string nope set e false nope set e false nope set e foo string nope set e bar baz nope set e foo baz", "d": "8/2018"}, {"body": "thank comments fully understand behavior object also agree better use constructor since access object using number implicit use string project well ok close issue", "d": "8/2018"}, {"body": "nt close may add support", "d": "8/2018"}, {"body": "ok", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "expected behaviour convenience prop supposed boolean either present absent therefore true false", "d": "8/2018"}, {"body": "reason velocity calling callback pretty much question disguised issue want one visible make sure put everything transition change mode please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "hello eduardo look wrote forum nobody answer check use greensock gsap mode outin problem still next animation start previous end please give minute work time little help", "d": "8/2018"}, {"body": "please check", "d": "8/2018"}, {"body": "thank link apparently possible using laravel suggestions", "d": "8/2018"}, {"body": "pretty sure something like webpack laravel laravelmix maybe anyway google forums discord friends", "d": "8/2018"}, {"body": "thanks posva tried vue discord said try fix made worse guys suggested post thing laravel uses already uses ca nt upgraded guess going try work make use use standalone compiler", "d": "8/2018"}, {"body": "support functional components already making afaik mentioned vuejs sprint summary lately", "d": "8/2018"}, {"body": "believe already tracked akryum somewhere else akryum reopen really want track sides", "d": "8/2018"}, {"body": "devtools functional components displayed need merge able display props", "d": "8/2018"}, {"body": "could also lt component vif foo foo gt component found produce result", "d": "8/2018"}, {"body": "better achieved userland render function could also make sure component exists computed property returning component fallback example although nt know usecase behind seems really weird dynamic component use nonexistent component", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "\u624b\u52a8\u622a\u53d6\u4e0d\u5c31\u597d\u4e86", "d": "8/2018"}, {"body": "nt show chrome either windows adding fixes chrome firefox edge", "d": "8/2018"}, {"body": "weird works official build windows", "d": "8/2018"}, {"body": "seems related element removed dom", "d": "8/2018"}, {"body": "related vue also vue moment", "d": "8/2018"}, {"body": "thanks memory leak since properties arbitrarily added object control events added bus btw cleanup creating new object", "d": "8/2018"}, {"body": "hmm nt issue nt completely clean created", "d": "8/2018"}, {"body": "imagine would break quite things want default value pass instead", "d": "8/2018"}, {"body": "kaelwd said", "d": "8/2018"}, {"body": "kaelwd thanks give example", "d": "8/2018"}, {"body": "convert values pass prop nt produce nullable values", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "kaelwd thank much", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "\u4e00\u822c\u7528boolean\u7c7b\u578b\u53ef\u4ee5\u89e3\u51b3\u4f60\u7684\u9700\u6c42\u5427", "d": "8/2018"}, {"body": "already accept null", "d": "8/2018"}, {"body": "kaelwd easy know debuged asserttype function jsfiddle link snap", "d": "8/2018"}, {"body": "guess get githubbing phone", "d": "8/2018"}, {"body": "want accept null make either nonrequired use validator ps next time take time create small fiddle help us", "d": "8/2018"}, {"body": "posva must required use validator wrote knew validator one solution verbose think feature request", "d": "8/2018"}, {"body": "validator fine remeber prop validation happens development", "d": "8/2018"}, {"body": "nt sync inner value prop updates see correct example using nested", "d": "8/2018"}, {"body": "vuex meant apps libraries use injectprovide shared object sharing data lib", "d": "8/2018"}, {"body": "posva thanks advice ultimately issue using plugin depends public api provided vue successfully install subclass vue plugin happens vuex nt matter discussion could plugin maybe wants silence logging set public api intended usage unit test vue prove point able install plugin subclass without polluting root", "d": "8/2018"}, {"body": "nt understand explicitly talking vuex problem", "d": "8/2018"}, {"body": "talking fact properly subclass vue including static props making required know implementation details plugin implemented order use subclasses vue simple reproducer using hello world plugin made demonstrate", "d": "8/2018"}, {"body": "honestly nt understand wrote anything actionable maybe could use forum discord server discuss come back different formulation", "d": "8/2018"}, {"body": "related directly vue repro", "d": "8/2018"}, {"body": "please provide reproduction link source code probably caused facebook app browser webview supporting javascript features using make sure correctly set babel transpile javascript support older browserwebviews", "d": "8/2018"}, {"body": "thank response link website check websites used vue found issue", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "vue currently provides wellknown limitations probably addressed upcoming release see fits needs", "d": "8/2018"}, {"body": "actually deal vueloader data specifically key passed implicitly template could open issue nt exist yet writing js usually data contains attribute passed parent", "d": "8/2018"}, {"body": "believe belongs vetur repo", "d": "8/2018"}, {"body": "nothing related vue core", "d": "8/2018"}, {"body": "please read instructions provided issue helper issue list reserved exclusively bug reports feature requests means accept usage questions open issue conform requirements closed immediately strict usage questions please use following resources read docs watch video tutorials ask forums ask chat look ask questions stack overflow also try search issue may already answered even fixed development branch however find old closed issue still persists latest version open new issue using form instead commenting old issue", "d": "8/2018"}, {"body": "benefit asynchronous server rendering offer argue little primary reason async vue internal scheduler works async well making completely synchronous process without altering behaviour app nt really possible incomplete knowlde internals happy corrected making rendertostring function async guarantees oldest requests processed nt highest priority bad freely admit expert http request performance etc bad", "d": "8/2018"}, {"body": "possible see", "d": "8/2018"}, {"body": "typescript bug also removes error", "d": "8/2018"}, {"body": "kaelwd works", "d": "8/2018"}, {"body": "\u30c4 type signature idea try reproduce without vue open issue", "d": "8/2018"}, {"body": "codesandnbox image loaded nt exist error coming webpack btw makes sense closing webpack question unrelated vue import working make sure getting right thing", "d": "8/2018"}, {"body": "posva like said description codesandbox link fully working look gitlab repo original code add svgs assetsfalight make work already posted another issue webpack community", "d": "8/2018"}, {"body": "oh nevermind import svg used component however put data pass directive", "d": "8/2018"}, {"body": "posva know like described use svgloader webpack loader possible use component ca nt problem", "d": "8/2018"}, {"body": "posva tried using data without loader got error", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "repro work encapsulated behaviour component nt manipulate dom manipulated vue modifying even worse touching parent component please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "maybe wrong way operation two popular vue ui frameworks bug encountered accidentally triggered using iview modal elementui dialog component lifecycle mounted iview modal component directive scenarios operations may necessary avoid writing", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "truth need build anything specific use axios file export functions js import axios axios const contacts axioscreate baseurl export function getcontacts q return contacts get params q response gt responsedata export function getcontact id return contactsget id response gt responsedata framework agnostic allows easily mock things tests well", "d": "8/2018"}, {"body": "benhayat also always make something part vue adding instance property even official example access axios", "d": "8/2018"}, {"body": "thanks guys", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "prefixes apply necessary next time please provide steps reproduce like element look repro really complex", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "u need help go reactnative side ask rules creating issues", "d": "8/2018"}, {"body": "weex vue separate projects also feel free use whatever like nt really care", "d": "8/2018"}, {"body": "u sure somebody bad knowing proj search", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "\u9ebb\u70e6\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684 github", "d": "8/2018"}, {"body": "probably typo", "d": "8/2018"}, {"body": "posva say typo created fix", "d": "8/2018"}, {"body": "sodatea \u9ebb\u70e6\u5e2e\u5fd9\u770b\u4e00\u4e0b", "d": "8/2018"}, {"body": "footer \u7c7b\u6ca1\u6709\u52a0 \u88c5\u9970\u5668", "d": "8/2018"}, {"body": "sodatea \u8fd8\u8981\u52a0\u4e00\u4e2acomponent", "d": "8/2018"}, {"body": "sodatea", "d": "8/2018"}, {"body": "thanks proposal usually functions come methods arrow functions defined computed property function defined outside quite uncommon get much less could even achieved helper adapt specific needs times want use methods fat arrows besides prefer explicit behaviours app preferable", "d": "8/2018"}, {"body": "expected array modified", "d": "8/2018"}, {"body": "need add well property realising documented create pr", "d": "8/2018"}, {"body": "duplicate pr", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "limitation put debugger new vue get see vue receives template limitation nt exist string templates vue files", "d": "8/2018"}, {"body": "posva jacekkarczmarczyk thanks understanded", "d": "8/2018"}, {"body": "probably related closing duplicate however modifies original array create new one first work", "d": "8/2018"}, {"body": "probably looking arguments", "d": "8/2018"}, {"body": "unfortunately said looking something like vbind vbind vbind use props directives", "d": "8/2018"}, {"body": "need much dynamicity probably time use render functions js", "d": "8/2018"}, {"body": "ca nt reproduce ios amp webview app", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "eem sure happen kind website content completely provided users set whole href attribute instead similar case makes sense sanitize data applications one would never write link whole url coming nonverified user content adding special handling would negative impact performance specific use case people need developer responsibility say docs pretty much explicitly writing code leads xss nt see anyone would write code besides testing purposes think would make sense either add entry cookbook page xss docs cc chrisvfritz sdras", "d": "8/2018"}, {"body": "posva agreed possible performance impact try xss filter check compile phase meanwhile detailed xss explanation docs could great", "d": "8/2018"}, {"body": "posva opengg working security page speak", "d": "8/2018"}, {"body": "btw far upcoming security guide regarding specific issue url like potential security issue url sanitized prevent javascript execution using libraries sanitizeurl help note ever url sanitization frontend already security issue userprovided urls always sanitized backend even saved database problem avoided every client connecting api including native mobile apps unfortunately vue also help guarantee userprovided urls lead safe destinations feedback welcome", "d": "8/2018"}, {"body": "chrisvfritz mention maybe also occur security checks may impact performance possible checking development mode warning people potential xss vulnerabilities detected", "d": "8/2018"}, {"body": "really possible add warning development mode know data untrusted could warn find something like data means developer already aware see vulnerability closing since chris working documentation", "d": "8/2018"}, {"body": "opengg mention event attributes like", "d": "8/2018"}, {"body": "thanks interesting however nothing changes regarding existing arguments event always bound single elementcomponent looks like need pass function scoped slot let parent use function example unclear could done like could clarify exactly problematic trying write template", "d": "8/2018"}, {"body": "posva bare bones git repo trying suggestion using still ca nt get work wrong hoping achieve datefilter component emit event two dates selected start end user clicks apply button nt example datatable component listen event call server request new data date filters edit also apologize creating example renamed datepicker datefilter idea srcappvue import datatable componentsdatatablevue import datefilter componentsdatefiltervue export default name app components datatable datefilter srccomponentsdatatablevue table cell table cell table cell export default data return methods querydata eslintdisablenextline consolelog querying data server calling api endpoint etc srccomponentsdatefiltervue select export default data return", "d": "8/2018"}, {"body": "yeah solved using function check repository right could help codesandbox", "d": "8/2018"}, {"body": "posva sure understand solved tried recommended could nt get work even said response reopen get working solution", "d": "8/2018"}, {"body": "asking question closed asked forums discord server however offer help provide codesandbox", "d": "8/2018"}, {"body": "rationale allowing vue components composed almost like html elements yet able listen events way crux request create html elements vue components nest manner html also allow events work way javascript three issues still nt understand anything single multiple components slot html listen events number child elements ie works link link documentqueryselector div addeventlistener click function e epreventdefault consolelog clicked yet vue compose elements way ca nt listen event emitted way ie ca nt listen event emitted relationship still clearly since workarounds called listening parent still tightly couples two stopping us bubbling event slot parent keeping mental model events line html javascript codesandbox help would appreciated", "d": "8/2018"}, {"body": "posva open new ticket request request vue match event bubbling composition html since already similar", "d": "8/2018"}, {"body": "please nt open new issue precisely nt bubbling implicit leads problems mon aug ian notifications githubcom wrote posva open new ticket request request vue match event bubbling composition html since already similar receiving mentioned reply email directly view github mute thread gt eduardo san martin morote", "d": "8/2018"}, {"body": "posva help understand mean precisely nt bubbling implicit nt implicit mean bubbling happening level", "d": "8/2018"}, {"body": "posva hey guys anything could even link understand meaning seen event bubbling issue pop github stackoverflow vue forum spent days searching explanation finding anything makes sense precisely nt bubbling implicit leads problems mean", "d": "8/2018"}, {"body": "looking feature like", "d": "8/2018"}, {"body": "theianjohnson implicit refers default behavior proactively asked opposed explicit many cases would lead confusions gotchas eg javascript implicitly type conversions use operator true generally considered design flaw", "d": "8/2018"}, {"body": "fnlctrl appreciate explanation relate event bubbling listening vue specifically firing event component nt pretty explicit", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "let keep progress one place ts check would need add specific behaviour plugin typescript much vue", "d": "8/2018"}, {"body": "return value async function instance", "d": "8/2018"}, {"body": "hi return value async function instance use template modified fiddle suppose work", "d": "8/2018"}, {"body": "may want use vuepromised things like", "d": "8/2018"}, {"body": "justineo code work static given example data loops call method mounted", "d": "8/2018"}, {"body": "sodatea promise still returns empty object", "d": "8/2018"}, {"body": "help please sodatea could please ask issue creator issue resolved closing issue", "d": "8/2018"}, {"body": "filing bug report actually expected behavior issue closed maintainers nt ask permission justineo code work str static given example data loops items call method mounted loop make multiple network requests maintain resolved value local data array something vue take care decide organize application logic", "d": "8/2018"}, {"body": "javascript syntactic two snippets basically identical passing instance vue template engine calls underlyingly template interpolations get stated issue helper page issue list reserved exclusively bug reports feature requests usage questions please use following resources read docs watch video tutorials ask forums ask chat look ask questions stack overflow", "d": "8/2018"}, {"body": "sometimes using key intentional said docs thanks interest think example fine like warning includes link docs quite opposite confusing confusing would read x undefined undefined function", "d": "8/2018"}, {"body": "sometimes using key intentional said docs yeah right thanks fast checking", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "thanks pointing could nt find updated fiddle showcasing use cases really quite gotcha though feels little bit unfortunate transitions supposed optional use case highly decomposed components", "d": "8/2018"}, {"body": "also put transition inside component wrap root element prop provided", "d": "8/2018"}, {"body": "vuerelated event fired input element form element nt bubble works expected html submit export default name helloworld data gt msg validated yet methods handlesubmit thismsg submit event fired handleinvalid thismsg invalid event fired", "d": "8/2018"}, {"body": "true manually addeventlistener invalid form element works correctly", "d": "8/2018"}, {"body": "link vanilla working javascript", "d": "8/2018"}, {"body": "missing vue version", "d": "8/2018"}, {"body": "yeah posva beat works capture since event nt bubble thought solution first", "d": "8/2018"}, {"body": "perfect working expected thank", "d": "8/2018"}, {"body": "normal release fixed security bug affect ssr thus included client version vue", "d": "8/2018"}, {"body": "ok thanks sorry noise", "d": "8/2018"}, {"body": "\u8fd9\u662f\u4f60\u8fc7\u53bb\u534a\u5c0f\u65f6\u5f00\u7684\u7b2c\u4e09\u4e2a\u76f8\u540c issue \u8bf7\u4e0d\u8981\u80e1\u4e71\u586b\u5199 issue \u53cd\u9988\u8bf7\u5e26\u4e0a\u53ef\u4ee5\u590d\u73b0\u7684 demo", "d": "8/2018"}, {"body": "nt supply repro link description incredibly nonhelpful probably either vuejsvuerouter", "d": "8/2018"}, {"body": "\u8bf7\u4e0d\u8981\u80e1\u4e71\u586b\u5199 issue issue helper", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hey ca nt really help without runnable code look", "d": "8/2018"}, {"body": "know show firefox safari well znck akryum possible always display remote devtools something else need changed", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "already party tools like vueplay", "d": "8/2018"}, {"body": "work try put seconds transition see yes one element tag else need use works way example bind value element like use instead vif ca nt render elements time vshow technically even never going happen condition", "d": "8/2018"}, {"body": "maxirozay said", "d": "8/2018"}, {"body": "hi maxirozay posva stated observed used vif mode specified clearly moment one element exists place trying use vshow two different custom components simple example using transitiongroup apparent drawback layout clashing mode attribute supported reason trying use vshow use vshow prevent component destroyed keep component state tried use keepalive seems keepalive designed case make sense feature request support vshow suggestion keepalive needs sincerely", "d": "8/2018"}, {"body": "nt see keepalive would nt work would rather discussion forum discord server sure find way", "d": "8/2018"}, {"body": "posva thank look case", "d": "8/2018"}, {"body": "nothing deal vue please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "closed", "d": "8/2018"}, {"body": "\u8bf7\u67e5\u4e00\u4e0b", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "please see", "d": "8/2018"}, {"body": "yes thread refers file found undocumented development file latest version commitment part standard builds heart feature request also almost year ago last comment june thread looks dead also notice url provided implies file version build trust spend time testing long term expectations glad see topic discussed evan hope makes esm build official", "d": "8/2018"}, {"body": "pr still open", "d": "8/2018"}, {"body": "sure trying snarky dismissive feel way recommendations could help ensure feature gets attention often times reason feature produced people ask hate see die legitimate request dismissed without discussion feedback", "d": "8/2018"}, {"body": "going land", "d": "8/2018"}, {"body": "great news thank taking time reply evan guess ca nt get anymore authoritative response great day", "d": "8/2018"}, {"body": "remove vue demo still get result self closing tags xhtml syntax outdated never use see", "d": "8/2018"}, {"body": "please read following things make type inference works set compiler option annotate return type computed properties", "d": "8/2018"}, {"body": "thank", "d": "8/2018"}, {"body": "happens input bind text value text value never changes change keydown method like keydown keyevent thistext keyeventkey", "d": "8/2018"}, {"body": "guess attribute changes change invoke render element wanted attribute change vue well done demand demo", "d": "8/2018"}, {"body": "expected changing variable triggers rerender passed input vue set renders want keep changes use another property", "d": "8/2018"}, {"body": "expected need use unique identifier otherwise vue reuse different elements index change remove element array", "d": "8/2018"}, {"body": "normal naming comes name use option property used places like devtools", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "already works asking vueloader handling transformation done vueloader remember askedadded time ago", "d": "8/2018"}, {"body": "posva hmm tried adding appropriate buble vueloader options config looks like still ca nt make work", "d": "8/2018"}, {"body": "hi posva sorry pinging closed topic quickly feel nt get proper answer question spent half day trying solve problem tweaking vueloader config without success tell wrong functionality even supported sfc appreciate help time matter", "d": "8/2018"}, {"body": "recall correctly nt transpiled sfc works browsers support time remember seeing feature request vueloader yet could nt find", "d": "8/2018"}, {"body": "also ca nt find anything vueloader repo move discussions vueloader repo pin feature request label", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "work nt provide repro please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "works shows warning chrome console", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "screenshot error message reproduction", "d": "8/2018"}, {"body": "try reproduce jsfiddle behaves difference jsfiddle local pc nt show warning info jsfiddle", "d": "8/2018"}, {"body": "probably something different code please use forum discord chat", "d": "8/2018"}, {"body": "add reproducible reason think happens vue trying reuse reuse selected property get brought along", "d": "8/2018"}, {"body": "expected nt happen bind attribute use also use key nt need host variable", "d": "8/2018"}, {"body": "also anybody know html escape function vue source would like try modifying project mine", "d": "8/2018"}, {"body": "html escape talking similar keep mind js escapes need unescape specific set characters method pass may interested forum discord server stackoverflow get faster answers", "d": "8/2018"}, {"body": "posva know already know nt cut trying trying keep codebases clean neat without using hacks workarounds using highly inelegant especially considering lack features compared mustache expressions since nt want use could possibly point codebase html gets escaped way build version escape function", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "well diving looks like setting property using js breaks using csstext stylewebkitbackgroundclip works setting find reported bug webkit tracker", "d": "8/2018"}, {"body": "found issue list issue create issue", "d": "8/2018"}, {"body": "posva revisited issue seems style settings actually working though chrome providing wrong value attribute see fiddle actually works syncing value back cssom chrome got us devtools also got actually got change value like everything seems working expected seems something wrong within syncing process style idl attribute content attribtue", "d": "8/2018"}, {"body": "error throw like specified value valid number value must match following regular expression dddd ee", "d": "8/2018"}, {"body": "please provide runnable reproduction message comes browser sure related vue without reproduction", "d": "8/2018"}, {"body": "sorry find problem browser", "d": "8/2018"}, {"body": "also try babel plugin", "d": "8/2018"}, {"body": "intend introduce nonstandard js syntax vue template expressions", "d": "8/2018"}, {"body": "element actually set attribute elements", "d": "8/2018"}, {"body": "really want figure example vmodel work perfectly vbind nt think value input equal vmodel help appreciated", "d": "8/2018"}, {"body": "think value input equal vmodel components form elements behaviour adapted said select elements changed setting selected attribute options elements use forum discord server stackoverflow questions", "d": "8/2018"}, {"body": "\u8bf7\u63d0\u4f9b\u53ef\u8fd0\u884c\u7684\u91cd\u73b0", "d": "8/2018"}, {"body": "\u8bf7\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684 link", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "functional components work supposed pass attributes manually supported functional components", "d": "8/2018"}, {"body": "apologies one last thing literal object array component data object seems work fine use store mixin anything like retrieve object array issue persists", "d": "8/2018"}, {"body": "nt use template", "d": "8/2018"}, {"body": "nt fix problem though", "d": "8/2018"}, {"body": "problem comes comparing plain objects dates compared correctly looks like using function first option always one selected however pass whole object option", "d": "8/2018"}, {"body": "hmm okay yeah binding instead options works something vue source js thing ya figure going insane edit checked source yep thanks dude", "d": "8/2018"}, {"body": "sure intentional come back know", "d": "8/2018"}, {"body": "vuetifyjsvuetify stuckouttongue", "d": "8/2018"}, {"body": "loosequal implementation defect comment check two object shape b looseequal looseequal consistent model directive value type regexes sets maps array buffers typed arrays etc insane implementation looseequal must think twice acurate version complex", "d": "8/2018"}, {"body": "actually duplicate already submitted pr", "d": "8/2018"}, {"body": "tested code removing element ui worked fine ie", "d": "8/2018"}, {"body": "please see demo screenshot issue point binded expression newlines", "d": "8/2018"}, {"body": "keep sending jsfiddles nt work", "d": "8/2018"}, {"body": "sorry nt know parse html code editorso copy code single html file open", "d": "8/2018"}, {"body": "ok although think services work editor removing linefeeds pasting nt understand would someone write html file linefeeds instead regular also confused fails transforming html vues gets", "d": "8/2018"}, {"body": "thank maybe like issue points searched uses windows newlines rn uses posix newlines n", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "sodatea", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "justineo", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "probably delay rendering engine browser definitely related vue nt remove content page scroll", "d": "8/2018"}, {"body": "posva thats figured wanted make sure nt missing something thank response", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "using index key expected behavior", "d": "8/2018"}, {"body": "could tell best practice picking key compoent better make code jsfiddle work thanks", "d": "8/2018"}, {"body": "working expected need describe expected behavior clearly items list identical", "d": "8/2018"}, {"body": "justineo said steps reproduce section follow steps click second item click button thank", "d": "8/2018"}, {"body": "bigradish working example difference provided reproduction working example provided reproduction set splice vue removed item whose index working example set splice vue removed item whose essential always provided unique always represent exactly element", "d": "8/2018"}, {"body": "leopiccionia thank much perhaps key assigned elements defined data otherwise vue recognize", "d": "8/2018"}, {"body": "bigradish described docs default mode efficient suitable list render output rely child component state temporary dom state eg form input values binding loop indexes equal default mode identifying unique item according place list leopiccionia said items actually changed removing item recalculated identifying item new item item new item vue perspective knows item data changed item removed get expected result need specify truly stand uniqueness item data instead index", "d": "8/2018"}, {"body": "justineo thank information", "d": "8/2018"}, {"body": "\u89c1\u4ece vue", "d": "8/2018"}, {"body": "scoped slots functions slot scope filled different arguments time called use multiple component current component would expect point simply possible", "d": "8/2018"}, {"body": "looks like duplicate", "d": "8/2018"}, {"body": "problem occurs scope slot child node thought way add new render helper add function file srccoreinstancerenderhelpersindexjs js import renderslot resetrenderedflag renderslot export function installrenderhelpers target targetr resetrenderedflag newly added js function genscopedslot key string el astelement state codegenstate string elfor amp amp elforprocessed return genforscopedslot key el state const fn pay attention elif genchildren el state undefined undefined return originally wanted submit pr better way", "d": "8/2018"}, {"body": "use method right away import instance mount inside function please go vue forum chat chatvuejsorg need help closing", "d": "8/2018"}, {"body": "istanbul support source map nt think utilities implemented core library", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hi elaborate use case feature want make sure feature achieving maximum flexibility lacks real use case strongly recommend following rules custom tag names alllowercase must contain hyphen understand mentioning spec custom tag names actually want apply restrictions fact tell intention warning message already component names contain alphanumeric characters hyphen must start letter technically subset html still htmlcompliant applying extra restrictions like wo nt break standard", "d": "8/2018"}, {"body": "hi let explain cases working tax reporting software korea many items required tax reporting many terms used items korean first time tried translate terms english failed nt standard translation translation different meaning subtle difference meaning nt efficient translate therefore changed mind use korean terms new way works server side dbms perfectly also works plain javascript however vuejs nt support unicode names cases want make work think case rare case lots developers want use native language code especially developing software uses many complicated terms technically subset html still htmlcompliant applying extra restrictions like wo nt break standard understand right need fix improvement", "d": "8/2018"}, {"body": "funny page justineo faced problem well french projects used french terms things difficult translated difference ignore accents \u00e7 use plain letters", "d": "8/2018"}, {"body": "going could tell whether issue would accepted", "d": "8/2018"}, {"body": "closing due inactivity week please open new issue reference one follow information", "d": "8/2018"}, {"body": "closing due inactivity week please open new issue reference one follow information", "d": "8/2018"}, {"body": "closing due inactivity week please open new issue reference one follow information", "d": "8/2018"}, {"body": "guess happening expecting input update value current tick since using directive shortcut triggered neither ensuring component updated played codepen little bit got result componentupdated personally expected using one fix issue best workaround found wait nexttick directive", "d": "8/2018"}, {"body": "similar issue usingto step different part form next clicked increment step variable different part shows back button decrements step variable show previous page like stepwizard noticed uploaded files disappears dom still available local file variable data section back clicked guess take time go vuejs documentation nt miss vital details save trouble lesson learned", "d": "8/2018"}, {"body": "possible render functions instead templates may well side effects though worked use cases far something similar coincidentally used breadcrumbstyle ui", "d": "8/2018"}, {"body": "kyis vue currently nt allow slots rendered multiple times understand losing reactivity see", "d": "8/2018"}, {"body": "justineo thanks link makes sense document", "d": "8/2018"}, {"body": "convert static slots compiled functions like like scoped slots unify migration path isnt hard implement either replace slot property accessor dev mode triggers deprecation warning create scoped slot function", "d": "8/2018"}, {"body": "actually close proposing may recursively clone children well understand update nt breaking change library authors switch scoped slots slots cases also wo nt break using templates library authors also provide transparent updates users manually fallback using render functions", "d": "8/2018"}, {"body": "mean normal anyway dev history perspective retrospect scoped slot approach flexible need split approaches anymore work child component check deprecate altogether mirror properties cloning functions trigger deprecation trying use library author needs anything case except making release next major vue version deprecated stuff gets kicked", "d": "8/2018"}, {"body": "forgot say may want give look", "d": "8/2018"}, {"body": "posva zickat please try webpack miniextractcssplugin write css vue file index login appvue find problem document defined see content vuessrserverbundlejson document", "d": "8/2018"}, {"body": "error using also realized problem content inside", "d": "8/2018"}, {"body": "possible passing argument eg improving docs", "d": "8/2018"}, {"body": "sidenote commit also causes bugs component", "d": "8/2018"}, {"body": "tested works cases without double update maybe later write unit tests demonstrate", "d": "8/2018"}, {"body": "solution fixed vue", "d": "8/2018"}, {"body": "encountered behaviour started follow style guide thoroughly seemingly fill mixins methodscomputedhooks messy stuff like everywhere opinion unnecessarily hurts readability since adriangoransson said conflicts expected situation", "d": "8/2018"}, {"body": "got errors vue typescript fixed holding vue instance variable giving type ensures ts know vue properties instatiate using options object var vueapp vue var app new vueapp el app data return count methods initialize thiscount count work", "d": "8/2018"}, {"body": "posva one vue clientside script compiled babel something like works surface way specify build runtimeonly build used kenokabe said least nt make much sense usually module exported full build someone wanted scaled back build get useful workaround requiring appropriate opinion directory change", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "would willing bet file redundant code external libraries never recompiling external libraries bunching bundle file analyze bundle file make sure app proprietary code inside page template business logic routing logic state management logic see vue library set alarm bells always externalize vendor libraries server client everywhere another rule thumb npm run build takes longer seconds something wrong axe redundant code notice real app actually something along lines tops jsonparse back bearable speed", "d": "8/2018"}, {"body": "thanks analysis care ecosystem zeltice correct externalizing vendor libraries size goes amount reduction see use nt quite unfortunately decent brings us next big chunk file made sourcemaps disabling unsurprisingly gives us reduction first party code course also means ca nt debug disabling nt option important know nt code wrote running large website toplevel page components many features across pages although tolerable nt believe singlejsonfile approach scales well said time spent parsing json file reading perhaps lowhanging fruit optimize maybe using alternative serialization format maybe allowing sourcemaps file", "d": "8/2018"}, {"body": "regards source maps likely working two environments dev amp production dev never source maps enabled since js minified anyway therefore source map size bytes production build stage webpack creates separate file source maps never part js bundle unless misconfiguration remember source maps retrieved separate files separate http requests production source map urls hinted specialized commented hints minified packaged js css files regardless original problem slow development experience dev environment source map exist dev", "d": "8/2018"}, {"body": "thanks comment zeltice webpack combines source files single bundle uses loaders compile source templates styles js thus disabling source maps development would mean would get postcombineandcompile bundlespecific line amp column numbers stack traces instead sourcefilespecific line numbers making difficult identify source errors", "d": "8/2018"}, {"body": "see must source maps dev try cheaper still effective source map solutions going balance filesize speed company use source maps dev advice based experience years ago used cheapevalsourcemap good enough identify file line number problem yet fast enough second delay updates every code change", "d": "8/2018"}, {"body": "ok dont know another solution issue solved simple directive using like works fine android chrome android firefox", "d": "8/2018"}, {"body": "browser nt inform something typed inform something typed via standard event simplest workaround example adding input element issue", "d": "8/2018"}, {"body": "listed end data object", "d": "8/2018"}, {"body": "raised evernote web clipper disable extension make chrome get rid error", "d": "8/2018"}, {"body": "use version ok", "d": "8/2018"}, {"body": "closed via", "d": "8/2018"}, {"body": "try mycomponent app especially slot vfor", "d": "8/2018"}, {"body": "closing original issue expected behavior although theoretically improved something consider technically breaking likely make slots lazyevaluated like scoped slots", "d": "8/2018"}, {"body": "also feels little bit like typescript", "d": "8/2018"}, {"body": "come instead export default foo export default name foobar use component unless declare mainjs import want use get found error another component using loads fine", "d": "8/2018"}, {"body": "docs use components recursively inside components vue get confused one resolve first defining components mainjs ie components rendered get around problem components nt used recursively import usual", "d": "8/2018"}, {"body": "also get error tries bind dom configuration element set storeconfig via mutation function called root element mounted edit happens store strict mode", "d": "8/2018"}, {"body": "unfortunately tags inside svgs scoped svg element indeed global side effect nt think treat differently", "d": "8/2018"}, {"body": "doeke way get working hook glance nt seem like would", "d": "8/2018"}, {"body": "erikbjare could loop component check existance hooks personally went back catching exceptions manually components using send actual unhandled rejections analytics works chrome", "d": "8/2018"}, {"body": "probably mean caveats whenever call set array call set array call set item array reworked example make visual", "d": "8/2018"}, {"body": "still issue addressedfixed example parent component child component", "d": "8/2018"}, {"body": "resolve issue html submit area fixed default display none open dialog", "d": "8/2018"}, {"body": "sure whether still bug case attribute root element real dom still rendered hook miss time access existing attribute addremove class chrisvfritz", "d": "8/2018"}, {"body": "\u5f3a\u529b\u63a8\u8350vuenative", "d": "8/2018"}, {"body": "async lifecycle hook good implementation next major version", "d": "8/2018"}, {"body": "managed initialize nonreactive variables typescript need use vueclasscomponent import vue vue import component vueclasscomponent interface mycomponent myvar number component class mycomponent extends vue created thismyvar export default mycomponent note interface", "d": "8/2018"}, {"body": "angular aot compiler check template type also option think vue template compiler check template type ktsn may ask whether movement make possible", "d": "8/2018"}, {"body": "fyi", "d": "8/2018"}, {"body": "ktsn great job work vetur possible run vue cli lint", "d": "8/2018"}, {"body": "updates ran well", "d": "8/2018"}, {"body": "holding pr almost months since opened", "d": "8/2018"}, {"body": "would love see merged", "d": "8/2018"}, {"body": "imho would great template inheritance part vue core components inheritance mean js part nt template inheritance child vs parent template shortly becomes pain case extracted base components example editform child fields buttons save save amp continue cancel copypaste html code suggestion use parent separate component inside child template also nt work nt like want one child component levels script template", "d": "8/2018"}, {"body": "dts actually throw error vue app commit way anymore would need testing vuejs app google chrome using cypress want let test fail error change possible anymore would actually raise error happens inside vue component", "d": "8/2018"}, {"body": "context would helpful guess may able set error handler hook cypress letting exceptions escape usually ideal caught reported somewhere error handler", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "use vmodel foo integer bar boolean", "d": "8/2018"}, {"body": "matteogabriele ulivz agree everyone says behavior want override one attributeproperty mean provide properties said achieved behaviour props student type object default function return labels type object default function return computed mergedlabels function return objectassign billing billing firstname first name generalinfo general info middlename middle name lastname last name dob date birth gender gender placeofbirth country birth nationalities nationalities gradelevel grade level thislabels labelsfirstname mergedlabelsfirstname thislabels last argument otherwise value passed user overridden", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "tiagofelipe hi problem fixed day suffering include mean import store auth like webpack automatically understand import course last line perfect code write everything gon na fine hope somehow helped", "d": "8/2018"}, {"body": "stumbled upon design flaw wanted create accessible icon component would become first obstacle ca nt multiple root elements okay wrap span discovered class excluded way suppress rename attribute working ugly component follows export default inheritattrs false props xclass string alt string sronly boolean data function return tooltip thissronly null thisalt used like works needlessly complicated could use use regular attribute nt problem would also make jumping class definition component instance work editor nt even know class attribute yes could put span inside make one example", "d": "8/2018"}, {"body": "reopened freedom attach element want ca nt given freedom", "d": "8/2018"}, {"body": "yes agree option use vue context filter similar child components eg able access parent component nt see reason filters pure functions pipe syntax looks better readable method calling eg number formatting need access locale set parent component vs", "d": "8/2018"}, {"body": "thanks \u0634\u0643\u0631\u0627 lt", "d": "8/2018"}, {"body": "calendar vshow show \u6216\u8005\u8fd9\u91cc\u5199\u6210vif show showsync show export exportdate", "d": "8/2018"}, {"body": "nobody cares nt work", "d": "8/2018"}, {"body": "hello aware year since issue posted however could nt locate anything internet might point towards issue experience issue anyone insights matter might help basically ssr setup add block import eventbus apieventbusjs export default methods openhierarchy consolelog test eventbus emit openhierarchy click listener neither gets attached neither try alter accordingly like von clicknative", "d": "8/2018"}, {"body": "recently issue needed one event buses wrote wrapper around standard emit using ideas thread tidies api also allows single invocation promise per emit maybe best practice totally practical afaiac poc codepen publisher subscriber", "d": "8/2018"}, {"body": "directly contradicts similar question last year error event img tags deprecated", "d": "8/2018"}, {"body": "error event img tags deprecated working solution method", "d": "8/2018"}, {"body": "instead setting set prop value data use computed property uses data fallbacks data allows one single source truth rachelscodes css approach easier image fallback imo allows trigger custom js flexible", "d": "8/2018"}, {"body": "zeromaster viettranme another option detach element script vue initialization reattach vue init helpful two inline scripts depends js hello let script problemscript children detach new vue el app data item name vuejs problemscript append script", "d": "8/2018"}, {"body": "scottbedard struggling issue indeed found serious issue undermines basic usability solutions enforce field set blur event problem chrome wo nt trigger input change events upon adding content field however still update value target correctly hence try see works export default data return email null methods onblur event event amp amp thisemail eventtargetvalue thisemail eventtargetvalue", "d": "8/2018"}, {"body": "exact issue also happens chrome anyone workaround", "d": "8/2018"}, {"body": "feeling caused people using causes input rerender often cursor jumps simple solution would add trims event", "d": "8/2018"}, {"body": "facing problem antixrist describes initial post child component holds data among things contains whether visible mutabledisplaydatavisible child component wrapped inside arranged child unknown position parent might left might right depending status mutabledisplaydatavisible animated transitioned parent needs control child positioned transition must chosen according position transition needs parent structure looks simplified enter animation runs fine leave immediately removed dom think bug move vif directly would work know visibility child parent special case ideas achieve need", "d": "8/2018"}, {"body": "thank phablulo let hope gets merged soon mentioned pull request", "d": "8/2018"}, {"body": "agree something would super useful ctrl replaced cmd macos", "d": "8/2018"}, {"body": "defcc chance could get reopened", "d": "8/2018"}, {"body": "using expect number case returning empty string nonsense please reopen issue change behaviour thanks", "d": "8/2018"}, {"body": "value set empty string html input gives still allows people check input empty yes would js idiomatic would breaking change adopted vue considered vue locking becoming spam", "d": "8/2018"}, {"body": "callback way check cache hit", "d": "8/2018"}, {"body": "\u5173\u4e8e\u8fd9\u6837\u7684\u95ee\u9898error loading chunk failed\u5982\u4f55\u89e3\u51b3\u554a", "d": "8/2018"}, {"body": "behavior change jsfiddle op works like expected model become undefined versions works described op model become undefined similar problem code slightly different change model options well jsfiddle problem case model still set undefined even versions gt nt change values time problem example change model first second later change options via settimeout value become undefined similarly change options first change model second model become undefined expected behavior ps thank opening issue struggling days would never found changes model undefined", "d": "8/2018"}, {"body": "check whether written method methods", "d": "8/2018"}, {"body": "activated\u94a9\u5b50\u90fd\u6ca1\u6709\u88ab\u89e6\u53d1", "d": "8/2018"}, {"body": "definitly something worth mentioning glad finally found reason troubles getting mad", "d": "8/2018"}, {"body": "approach issue think pretty neat depending usage parent component appform component inline value basically saying input value static never change nt make sense using vmodel makes sense native html works attribute set input element meant changed question take priority inline value vmodel value set", "d": "8/2018"}, {"body": "aware issue closed wanted share approach case helps anyone case done big dynamically add input fields data const element test new vue el element data grabs component const el documentqueryselector element", "d": "8/2018"}, {"body": "progress feature", "d": "8/2018"}, {"body": "vuecommonjs means nothing try find occurred error", "d": "8/2018"}, {"body": "maxijp renders expected number dom elements change value number dom elements drops one demo", "d": "8/2018"}, {"body": "thinsoldier editing countloans vmodel input new value string number number easly deal using example computed property transforms value integer", "d": "8/2018"}, {"body": "seems work", "d": "8/2018"}, {"body": "try adding vif though cleanest method cleaner way define range component", "d": "8/2018"}, {"body": "mykeels update answer use check box radio input", "d": "8/2018"}, {"body": "annoying limitation using components ability override classes would nice", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "found issue debugging heck vue behavior data objects thinking", "d": "8/2018"}, {"body": "people like wondering roadmap evan says video map set support likely arrive may know", "d": "8/2018"}, {"body": "unfortunate issue tracker marked closed especially considering adding support near future follow progress feature another issue somewhere", "d": "8/2018"}, {"body": "wondering sake argument maybe wrong since track array mutation using mutation methods cant track array object logically complete dont get features implemented map ones want would pretty easily addressed especially using something like lodash", "d": "8/2018"}, {"body": "works perfect indeed boolean modifier would also nice addition", "d": "8/2018"}, {"body": "az wed aug jerry jacobs notifications githubcom wrote works perfect indeed boolean modifier would also nice addition receiving subscribed thread reply email directly view github mute thread", "d": "8/2018"}, {"body": "approaches listed dont solve problem using typescript without vueclasscomponent want store timeout handle component instance assigning variable beforecreatedcreated hook doesnt work typescript thinks isnt declared option like non reactive properties core appropriate generic typing would make nonclassstyle components much easier deal typescript one could say use class style components looking pretty sweet background lot hackyish stuff gets done wonder plan fully support class based components without reflecting class something like js class mycomp extends vue constructor super component options expressable via class constructs new mycomp mount app", "d": "8/2018"}, {"body": "kidbrazil looking debounce function adding lodash kind overkill standalone debounce function use debounce", "d": "8/2018"}, {"body": "cool guys trigger resize event manualy following code works fine jquery change pure js without jquery even tried make defined", "d": "8/2018"}, {"body": "might wrong place try asking stackoverflow", "d": "8/2018"}, {"body": "know closed issue future visitors mutationobserver api probably best way handle set mixin components need resized based size children", "d": "8/2018"}, {"body": "aidangarza nt respond element resized modified chrome already shipped resizeobserver best solution issue older browsers use polyfill try solutions like resizedetector fyi integration vuejs try vueresize component implement directive implemented vresize directive based resizedetector", "d": "8/2018"}, {"body": "years chance implementing feature", "d": "8/2018"}, {"body": "read comment", "d": "8/2018"}, {"body": "sorry terrible reader", "d": "8/2018"}, {"body": "still get better solution overcome issue", "d": "8/2018"}, {"body": "still could fixed", "d": "8/2018"}, {"body": "using password manager called lastpass issue happening anyone knows quick fix", "d": "8/2018"}, {"body": "problem removed friends baang worked", "d": "8/2018"}, {"body": "zealotrahl please see answer question", "d": "8/2018"}, {"body": "anybody know also works combination vuex explained want input field little bit dynamic access scope dom element inside following code", "d": "8/2018"}, {"body": "vielhuber try use", "d": "8/2018"}, {"body": "hi vue question related topic dynamic vmodel directive implementing vue component dynamically control vmodel modifier etc example", "d": "8/2018"}, {"body": "consider vue components foreign elements", "d": "8/2018"}, {"body": "recommendation advice cleaning event listeners vue greatly appreciated", "d": "8/2018"}, {"body": "normally nt clean listeners manually element destroyed removed dom longer referenced javascript listeners also removed precisely longer referenced element thus able garbage collected guaranteed dom related vue cases passing references elements event listeners around accidentally create memory leaks retaining references nt need worry cleaning event listeners", "d": "8/2018"}, {"body": "fnlctrl worry code actual framework code cases sure something like vue usual piece code vue guarantee preconditions mentioned dom requires order remove listeners", "d": "8/2018"}, {"body": "yes otherwise would memoryleak bug rare would fixed", "d": "8/2018"}, {"body": "greetings use workaround trigger set computed property depend dummy property need recompute triggered elsewhere something like", "d": "8/2018"}, {"body": "adding recompute method datadriven nt expect core team implement ever especially consider evan already provided far easier understand solution second comment issue make sense understand vue datadriven dependency tree", "d": "8/2018"}, {"body": "also implemented userland plugin played around publish plugin soon show easy expand vue features really revisit way designing data never found need thing building vue apps points said sirlancelot true", "d": "8/2018"}, {"body": "could come uses vue internal mechanism though", "d": "8/2018"}, {"body": "pretty neat added separated option nt impact computed properties", "d": "8/2018"}]