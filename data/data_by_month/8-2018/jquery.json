[{"title": "sourcemappingurl since", "body": "description minified files nt contain sourcemappingurl comment looked looked distjqueryminjs file nothing found file old version include sourcemappingurl thing newer versions sourcemappingurl missing sourcemap actually exists address users want sourcemap supposed edit distributed minified file missing something link test case first couple lines first couple lines", "num": "4166", "d": "8/2018"}, {"title": "html hidden attribute elements made visible show toggle", "body": "description hidden element made visible still attribute apart semantics wrong rule stylesheet work uncomment rule codepen thus remove attributes elements link test case", "num": "4164", "d": "8/2018"}, {"title": "breaks string", "body": "description calling jquery like actually happens breaks error expect happen instead think either one two things loop string character character output sensible error something like incorrect parameter type string jqueryeach browsers affected firefox chrome throw error edge throws different error means safari throws another different error means suspect problem affects every browser link test case usecase eaching object expected sit data attribute element somehow undue circumstances let say data attibute longer rendered server valid json therefor passed code string throwing error describe novice developers might ignore error long nt look like error code excuse believe clear error messages expectable behaviour purpose helps everyone", "num": "4163", "d": "8/2018"}, {"title": "throwing gzip error west us central us south central us locations", "body": "seeing lot gzip errors west us central us south central us locations error message systemioinvaliddataexception magic number gzip header correct make sure passing gzip stream systemiocompressiondeflatestreamendread iasyncresult asyncresult microsoftvisualstudiotesttoolswebstressdatacapturestreamendread iasyncresult asyncresult microsoftvisualstudiotesttoolswebstresswebtesttransactionreadresponse iasyncresult result looks like cdn issue jquery version locations east us east us locations nt throw error message serves right content back please fixrefresh cdn issue jquery library thanks", "num": "4162", "d": "8/2018"}, {"title": "use visualviewport value window height", "body": "description recent chrome available get window size windowvisualviewport web apis mdn value follow address bar shrinking mobile browsers nt work well consider use possible ditto", "num": "4161", "d": "8/2018"}, {"title": "running results equivalent different jqueryminjs file", "body": "description expect happen hopping run repo without making change get exact distjqueryminjs actually happens getting equivalent distjqueryminjs different variable names different line separators cases extra parenthesis example checkedin min file produced min file notice new produced file parenthesis one less comma browsers affected none command give exact minified version would like make changes use official tools minify file expected get mostly output would make private code reviews easier approve", "num": "4160", "d": "8/2018"}, {"title": "jqueryajax method removal documented final release note", "body": "description jquery release removed documented final release note place find mentioned beta release note removed specialcase deferred methods jqueryajax please add change final release note timmywil", "num": "4159", "d": "8/2018"}, {"title": "unable query form input element name id", "body": "description unable query form input element name id gt returns input element gt returns form expected link test case jsfiddle used jquery v tested chrome v windows", "num": "4156", "d": "8/2018"}, {"title": "ios fails dimension svg tests", "body": "seems iossafari version ignores attribute used unlike width failing tests could easily updated put sizing attribute maybe also real bug worth fixing seems occur safari iphone see", "num": "4155", "d": "8/2018"}, {"title": "hover nt work multiple elements", "body": "example second javascript line fails html javascript consolelog div hover line works fine consolelog div span hover line throws exception jsfiddle documentation says returns true least one elements matches selector means work multiple elements example shows nt", "num": "4154", "d": "8/2018"}, {"title": "insert body element append method", "body": "description append method inserts specified content last child element jquery collection insert first child use prepend add dom elements childs either side sub dom p insert body element method showcasegif pic see click button three times inserted inside body element sure link test case", "num": "4153", "d": "8/2018"}, {"title": "getscript report parse failures via catch", "body": "description produces uncaught exception chrome probably reported rejected promise link test case", "num": "4151", "d": "8/2018"}, {"title": "make ajax understand acceptable data", "body": "send file formdata jquery brought lot stackoverflow think things better trying understand kind data sending without propose possible js jqueryajax url url method post data formdata typed arrays blob file without need processdata false contenttype false also jquerypost url formdata typed arrays blob file usually propose using fetch api instead jquery ajax something nt make easier developers quite opposite makes harder confusing things nt work", "num": "4150", "d": "8/2018"}, {"title": "position top calculated incorrectly", "body": "since upgrading lot issues top values many places web app property returns top value parent returned least places top value top page parent element testing position attributes anything special ca nt seem understand exact use case order create example switching definitely returning different values one place issue cross browser", "num": "4149", "d": "8/2018"}, {"title": "offset index returns error", "body": "description selecting eq variable inside return error try manipulate values link test case except happen array want select first grid class fourth inner class inside grid class hence eq starts subtract values array one nt selects second grid class fifth inner class inside second grid class like array nt actually happens subtracting array values one returns error line nt everything fine selects wrong one line", "num": "4148", "d": "8/2018"}, {"title": "added nonpassive event", "body": "hi deparated warning chrome found page instruction solution problem line jquery version change another problem set preventdefault line need test", "num": "4147", "d": "8/2018"}, {"title": "height give negative number", "body": "", "num": "4145", "d": "8/2018"}, {"title": "extend returns incorrect result string parameters", "body": "function call bug extend name john abc returns following b c name john return name john", "num": "4144", "d": "8/2018"}, {"title": "pseudoclass selected selects much edge", "body": "using edge returns select elements firefox correctly returns selected ones", "num": "4143", "d": "8/2018"}, {"title": "verbose reporting", "body": "comparing two nonequal objects prototype chain seems unnecessary report properties prototype chain know priori difference two objects wo nt found prototype object behavior discourages test driven development several failing tests quickly result insurmountable amounts lines logged generating html slows browser issue two legs section log prototypal properties know difference objects ca nt reside among prototypal properties b qunit log prototypal properties logging object example test gives output bare bone test prototype comparison ms expected add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z result add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z diff add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z", "num": "4142", "d": "8/2018"}, {"body": "related jquery plain javascript behave way browsers batch style updates effect classattribute changes performance reasons want force browser recompute styles middle changes need query something require browser recalculate styles case might better define complex animation please look help stack overflow though thanks", "d": "8/2018"}, {"body": "removed comment purpose see many problems including comment one different cdns use different file names comment would different different cdns kills security features like subresource integrity still attach map manually via devtools least chrome supports", "d": "8/2018"}, {"body": "thanks nt know chrome good day", "d": "8/2018"}, {"body": "whoa reminded never published note incorrect map file", "d": "8/2018"}, {"body": "thanks report amp one complex jquery cssrelated features lot scenarios handle especially connection elements visible hidden due default values inline styles conditions like attribute changes jquery tried make methods way simpler jquery basically relying inline styles alas nt work people expected called element hidden via stylesheets actually show element still nt think want complicate implementation modifying element attributes working elements hidden priority also scope unfortunately closing issue feel free elaborate thread", "d": "8/2018"}, {"body": "hm see calling inside switching hidden shown status would complicate implementation saying put back element called setting would sufficient saying removed element shown", "d": "8/2018"}, {"body": "one jquery design decisions validate input would otherwise get way larger amp slower want parameter validation consider using typescript contains jquery type definitions package users nt pay cost type information disappears compile time raised repeatedly past find duplicates request", "d": "8/2018"}, {"body": "nt think good design decision error obscure fix nt want add validation better error messages loop input expected say loop character like loop would", "d": "8/2018"}, {"body": "problem lots apis may behave unexpectedly blow provide incorrect input making fail helpful error messages would increase library size significantly especially jquery signatures really dynamic accept various parameter tuples said typescript flow friends want catch type errors earlier maybe community linters would catch sure whatever happens nt want send code endusers contained developers machines nt think able work anything like foreseeable future", "d": "8/2018"}, {"body": "keep nonminified version development version anyway still nt responded original alternate loop character", "d": "8/2018"}, {"body": "keep nonminified version development version anyway lots people import jquery npm bundle amp minify fan making production version different development one reason still nt responded original alternate loop character think likely mask errors someone mistakenly provide string instead array one string also iterating string letters common use case nt found useful much", "d": "8/2018"}, {"body": "thany please read docs description generic iterator function used seamlessly iterate objects arrays arrays arraylike objects length property function arguments object iterated numeric index objects iterated via named properties primitives strings objects", "d": "8/2018"}, {"body": "also iterating string letters common use case nt found useful much primitives strings objects fact matter strings iterable simple loop prove", "d": "8/2018"}, {"body": "talking javascript loops jquery method generally iterate string using method overkill think", "d": "8/2018"}, {"body": "using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error", "d": "8/2018"}, {"body": "hi dave error azure availability ping test web browser seems loading jquery without issues atleast computer east us looks like compressed version expected returned back cdn whereas uncompressed file returned issue seem started est nt exact bits got microsoft support cdn serving returning incorrect data precisely error indicates magic number gzip header correct make sure passing gzip stream first time seen odd errors cdns unfortunately issue request gzip file successfully returns response header states content gzipped actually look hex return however file compressed file compressed first two bytes return value supposed contain magic number gzip returned instead cdn uncompressed instead report error testing get file back header says gzip detect report error web browsers forgiving regard often ignore error occurs retry read text field therefore failed test affect web browser clients hope helps fri aug pm dave methvin notifications githubcom wrote using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error receiving authored thread reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "exactly issue chance solving issue", "d": "8/2018"}, {"body": "yes solve jquery update server return correct data gzip iisue codejquerycom cdn minutes ago awaiting moderation underlying issue cdn returning incorrect response header source server cdn queries quite easy see tool like fiddler query library pass gzip header upper case perfectly legal per rfc see response indicates zipped content compressed underlying problem example get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en returns ok date tue aug gmt connection keepalive acceptranges bytes contentencoding gzip contentlength contenttype applicationjavascript lastmodified fri oct gmt server nginx etag w cachecontrol accesscontrolalloworigin vary acceptencoding xhw noticed content returned plain text compressed gzip contentencoding specifies causes error mentioned original question return zipped promised source server fairly recent changeproblem past return data compressed fix ensure source cdn jquery server returning compressed data says cdn adding header content compressed gzip", "d": "8/2018"}, {"body": "query library pass gzip header upper case jsandersrocks could provide source claim header values case insensitive something work forwarding issue cdn provider", "d": "8/2018"}, {"body": "vchandrasn confirm test described also sends value uppercase know talking two different issues", "d": "8/2018"}, {"body": "hi michal could see ping test send acceptencoding header sends contentencoding header value gzip thanks chandra wed aug micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom wrote vchandrasn confirm test described also sends acceptencoding value gzip uppercase know talking two different issues receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "vchandrasn server send together response asking sending request server specifying", "d": "8/2018"}, {"body": "right sent response header information indeed sending acceptencoding header gzip deflate br value wed aug micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom wrote vchandrasn contentencoding server send together response asking youre sending request server specifying acceptencoding contentencoding receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "mgol absolutely open postman fiddler composer fiddler example send request following headers get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en inspect return see even though contentencoding indicates gzip reality returned plain text compressed ok compress return value however server must set contentencoding gzip header feel free email jsanders microsoft dot com need ps recent issue things worked fine also change request lower case gzip get correct value", "d": "8/2018"}, {"body": "mgol also working jsandersrocks looking section last paragraph states explicitly edit also found section referenced first paragraph section acceptencoding acceptencoding acceptencoding header field used user agents indicate response contentcodings section acceptable response identity token used synonym encoding order communicate encoding preferred content codings contentcoding values caseinsensitive ought registered within http content coding registry defined section used acceptencoding section contentencoding section header fields", "d": "8/2018"}, {"body": "debugthings thank follow request cdn provider", "d": "8/2018"}, {"body": "issue confirmed content coding values contents caseinsensitive per rfc codejquerycom sends response encoding response variants lowercase lack encoding also including transcripts comments added sh curl sv head c xxd trying connected codejquerycom port get host codejquerycom useragent accept lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentlength unencoded size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt cachecontrol public lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery unencoded response failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength compressed size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data response appears gzipped cf failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip unusual request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength size big unencoded response lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery nongzipped gt failed writing body closing connection", "d": "8/2018"}, {"body": "right supported chromeish browsers behavior would different across platforms one problem see fires resize event assume case addition using viewport user would need us use well order charade effective", "d": "8/2018"}, {"body": "thanks suggestion keep mind refrain using propagates browsers", "d": "8/2018"}, {"body": "thank opening issue use uglify minify jquery way uglify mangles variable names make file short possible top head sure could get completely idempotent minification process point right direction telling look uglify documentation disable certain optimizations", "d": "8/2018"}, {"body": "thanks quick response notice run multiple times row output always even run different computers pointing branch commit output files identical expecting point tag get output checkedin point available download jquery seems differences output file checkedin file improvement minification process like using less variables example pasted improvements coming dist files produces different npm packages improvements disabled command line option thank", "d": "8/2018"}, {"body": "files may match dependencies subdependencies used build minified files changed since release still within version range specified recent versions generate file retrieves exact versions used build increases odds get result however jquery old file committed time release provide", "d": "8/2018"}, {"body": "got thanks clarification", "d": "8/2018"}, {"body": "dmethvin latest jquery versions nt committed either various issues around crossplatform mismatches modified leaving repo dirty state etc", "d": "8/2018"}, {"body": "perhaps would nt bad idea add tags way people would able recreate build may matter peopleorgs wanting verify nothing bad sneaked compiled file", "d": "8/2018"}, {"body": "oh yeah forgotten whole mess seem like would handy tagged versions along note distribution repo explaining upsidesdownsides", "d": "8/2018"}, {"body": "still ca nt guarantee builds idempotent even even packagelock committed uglify", "d": "8/2018"}, {"body": "timmywil true understand randomness uglify build tag currently use different version due lack lockfile", "d": "8/2018"}, {"body": "fair enough would easy add lock file dist release", "d": "8/2018"}, {"body": "blog post highlights major changes constitutes major change matter opinion important part changes like removal methods deferred returned clearly documented jquery documentation change highlighted yellow think enough", "d": "8/2018"}, {"body": "also tested chrome version official build macos high sierra chrome version official build windows issue", "d": "8/2018"}, {"body": "thanks opening issue however due native browser behavior something fix recommend avoiding input names may conflict selectors input names become properties form element replacing native property generally bad practice", "d": "8/2018"}, {"body": "hi thanks recommendation please note name property value id form serialized key send backend replacing native property", "d": "8/2018"}, {"body": "tale old time sucom jquery see page see also", "d": "8/2018"}, {"body": "thanks got", "d": "8/2018"}, {"body": "decided fix test since occurs one old ios version purpose test", "d": "8/2018"}, {"body": "selector officially supported jquery work qsa path taken first example check team see aware bugs selector currently supported browsers might able add support tell testing hover tricky", "d": "8/2018"}, {"body": "discussed meeting agreed implementation selector pretty said plan rewrite sizzle way relies much heavily would provide support close covered sizzle roadmap", "d": "8/2018"}, {"body": "would nt support sizzle selectors like would nt work end story however selector entirely supported trivial make work multiple elements actually currently using customized version jquery solves problem completely bypass sizzle selector works", "d": "8/2018"}, {"body": "selectors like hover div would nt work end story actually rewrite would", "d": "8/2018"}, {"body": "thanks opening issue however actually references particular elements may may get cloned depending way element gets appended example valid usage fact shows byproduct implementation words nt try append element multiple places new element must created appendprepend accomplish want", "d": "8/2018"}, {"body": "timmywil thank reply look know references particular elements remove methods one element inserted method yet though pressed button many times", "d": "8/2018"}, {"body": "multiple one docs append say important one target element however cloned copies inserted element created target except last one code moving span around body never creates clone", "d": "8/2018"}, {"body": "thanks opening issue however works", "d": "8/2018"}, {"body": "thank issue however jquery automatically processes data query strings sent get requests likely still common use case besides changing defaults options would break lot code", "d": "8/2018"}, {"body": "sorry fail see something like could break nt even work first place nt mean change default settings processdata amp contenttype false meant check whatever data correct thing", "d": "8/2018"}, {"body": "default would changed nt want set since default however rather removing contenttype header completely could set appropriate default behavior try convert data string like long time could start adding exceptions probably would nt stop formdata breaking existing code comes plugins custom methods handle correct options types requests would simpler added magic needed ajax prettier eg besides seems going use may well use", "d": "8/2018"}, {"body": "could set contenttype appropriate multipartformdata nt set request header since boundary added something xhr fetch automatically setting content would break backend code know read boundary think set request content type data formdata let xhr handle default behavior try convert data string like long time well world changing think laking behind grate try convert everything string everything casted string becomes along blobfiledataview typed arrays could start adding exceptions think please nt add something like good enough ppl could stop write long version go back simpler sort version holding back please nt add something else blob file typedarrays also cuz would much handle put mind besides seems going use formdata may well use fetch talking nt use jquery longer get people want help fetch api always option since even fetch api microsoft still going support something follows rule even still today breaking existing code comes still nt see breaking changes would added functionality formdata instance avoid setting contenttype nt try process string simple would ever good default thing trying cast formdata blob typed arrays string never default thing type data might missing something nt used jquery couple years might give code example next major release see similar question like pop time send formdata objects ajaxrequests jquery sending multipartformdata jqueryajax use formdata ajax file upload", "d": "8/2018"}, {"body": "nt suggesting core method suggested said would plugin function user code answers questions indicate easily addressed without additions jquery core nevertheless since feel strongly feel free submit pr happy review otherwise likely stay wontfix probably ajaxprefilter rick suggested old ticket", "d": "8/2018"}, {"body": "go ahead answer still nt see breaking changes would added functionality would added functionality ca nt always predict change like affect millions lines code wild would actually result breakages nt know seen behavior changes affected users ways never expected extra careful definitely change behavior synonymous breaking change library lot users said sometimes deem necessary introduce change major version nt seem critical enough warrant change best way persuade core team code", "d": "8/2018"}, {"body": "nt suggesting core method suggested sendformdata said would plugin function user code ah misstake answers questions indicate easily addressed without additions jquery core imo like ask quest nt make easy played around prefilter easy cast error first thing happens guess need make core changes let slide js ajaxprefilter function args write potential fix never logs anything consolelog args ajax url method post data new formdata", "d": "8/2018"}, {"body": "right prefilters seem applied data converted following blocks could perhaps swapped ajaxjs line ca nt think reason would problem wonder jaubourg dmethvin mgol markelog might js convert data already string sdata amp amp sprocessdata amp amp typeof sdata string sdata jqueryparam sdata straditional", "d": "8/2018"}, {"body": "reopening investigate possibility prefilter least investigate possibility swapping blocks code enable user prefilters get data goes", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "discussed meeting open exploring first step swap blocks mentioned see tests break", "d": "8/2018"}, {"body": "ok able reproduce div testing inside table top value returned remove table returned top page switch jquery returned top page cases may cases produce issue tables", "d": "8/2018"}, {"body": "looks like issue still open", "d": "8/2018"}, {"body": "agreed addressed", "d": "8/2018"}, {"body": "please ask questions forum stackoverflow agree bug make issue", "d": "8/2018"}, {"body": "never asked question asked coding den near like forum", "d": "8/2018"}, {"body": "place report bugs jquery library look like bug library visit forum help understand happening", "d": "8/2018"}, {"body": "okay", "d": "8/2018"}, {"body": "handler requires use passive listeners appears slickjs jquery issue background passive listeners see please add comments", "d": "8/2018"}, {"body": "problem point get", "d": "8/2018"}, {"body": "value reported guaranteed accurate element parent hidden get accurate value ensure element visible using", "d": "8/2018"}, {"body": "oh ha missed display none says", "d": "8/2018"}, {"body": "guaranteed accurate imho difference reported height pixel case completely physical impossible", "d": "8/2018"}, {"body": "string parameter incorrect input params need objects first one also", "d": "8/2018"}, {"body": "yes string parameter incorrect instead throwing error returning first parameter unpredictable result example case extend name john true method return first argument object name john think fixed", "d": "8/2018"}, {"body": "jquery nt validate input public api get much bigger amp slower started care validation consider using typescript type definitions jquery throw error try use incorrectly", "d": "8/2018"}, {"body": "disregard notice may repost provide example", "d": "8/2018"}, {"body": "look like jquery bug report mean qunit", "d": "8/2018"}, {"body": "totally meant qunit", "d": "8/2018"}, {"body": "reminder still deterministically failing current master aug", "d": "8/2018"}, {"body": "issue passive added", "d": "8/2018"}]