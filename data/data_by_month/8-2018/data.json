[{"title": "app nt render mobile", "body": "want request feature report bug bug current behavior app renders nothing mobile browsers current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example app link render desktop mobile expected behavior app render normally versions react browser os affected issue work previous versions react mobile chrone browser samsung internet", "num": "13524", "d": "8/2018"}, {"title": "provide way throw error maybe asynchronous handled componentdidcatch", "body": "want request feature report bug feature request current behavior handle synchronous error expected behavior capability error boundaries handle asynchronous error error boundaries example docs similar asynchronous error handled react javascript class withasyncdata extends reactcomponent constructor props super props thisstate error null value null using componentdidmount instead componentdidcatch componentdidmount doasynchronousthing value gt thissetstate value catch error gt thissetstate error render thisstateerror return error occured return thispropschildren unfortunately new lifecycle aware synchronous error think good provide way throw error asynchronously like javascript class withasyncdata extends reactcomponent constructor props super props thisstate error null value null componentdidmount doasynchronousthing value gt thissetstate value catch error gt thisthrowerror error throwing error asynchronously render thisstateerror return error occured return thispropschildren network error handled single place networkerrorboundary component example", "num": "13523", "d": "8/2018"}, {"title": "running cpu async rendering demo fail", "body": "finished steps successfully according readmemd reactfixturesunstableasynctimeslicing run yarn start reported error like enviroment npm node forget dependences could give tips thanks lot", "num": "13522", "d": "8/2018"}, {"title": "access react component underlying dom tree", "body": "want request feature report bug feature current behavior form component form field children input checkbox etc validated custom rules form submitted validation works fine expected behavior form invalid would like scroll page first invalid element form submitted unfortunately components expose underlying dom three except via fiber object get ref component makes scrolling possible since nt dom reference trying avoid ref forwarding form field components would like form handle validation related code encapsulation purposes case want publish library instance versions react browser os affected issue work previous versions react react way achieve", "num": "13520", "d": "8/2018"}, {"title": "add dom fixtures", "body": "maybe missed nt see case dom fixtures seems important easy accidentally gloss stop syncing attributes edit bunch jsdom tests", "num": "13518", "d": "8/2018"}, {"title": "import component twice ensure life cycle functions different", "body": "current behavior import component twice father component change visible popover component componentwillreceiveprops execution twice want keep independent expected behavior import component life cylce functions independent functions belong", "num": "13514", "d": "8/2018"}, {"title": "nodeumd bundles broken master", "body": "see need remember fix one way cutting release", "num": "13512", "d": "8/2018"}, {"title": "updating component makes resource request triggers update warning", "body": "want request feature report bug bug minor annoyance current behavior tl dr updating component makes resource request trigger state updates causes warning displayed description based modified version example given component makes resource call triggers react updates js const someresource createresource fetchuserdata function userdetails props another component plugged resource calling read trigger setstate calls component const data someresourceread propsid return data resource requesting component mounting indeterminate component updates known functional component instances component called get return value difference known functional component renderer phase set calling function js mountindeterminatecomponent const value userdetails updatefunctionalcomponent setcurrentphase render const value userdetails setcurrentphase null phase set functional component get warning react current behavior bug please provide steps reproduce possible minimal demo problem demo modified add button navigate user details user page click user besides warning triggered data cached click button console warning updating existing state transition expected behavior warning versions react browser os affected issue work previous versions react master build", "num": "13510", "d": "8/2018"}, {"title": "relax tostring consistency guarantees", "body": "recently chatted related work eg sebmarkbage raised good point seems like overall treating consistently adding significant overhead implementation readability undoubtedly runtime overhead two separate issues warning invalid values ensuring output invalid values consistent eg functions always skipped conclusion came keep warning bad values long warn consistency necessary fine sometimes stringify function sometimes skip long always warn cases guiding principle invalid inputs handle least amount overhead runtime terms code size always handled way one exception probably symbols throw stringified seems like skipping actually desirable unless okay errors", "num": "13508", "d": "8/2018"}, {"title": "key warning", "body": "want request feature report bug bug current behavior react throws warning render arrays fragments component like jsx import component react class formcontent extends component render return thispropschildren export default formcontent use like jsx import proptypes proptypes import children component react import content formcontent import actions formactions class form extends component static proptypes title proptypesstring classname proptypesstring inline proptypesbool withoutwell proptypesbool disabled proptypesbool onsubmit proptypesfunc static defaultprops title classname inline false withoutwell false disabled false onsubmit gt render const children childrentoarray thispropschildren handlesubmit e void epreventdefault estoppropagation thispropsonsubmit e export default form warning tells unique key inside simply wrapped children class split future form component fix current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior show warning versions react browser os affected issue work previous versions react chrome version official build ubuntu lts", "num": "13506", "d": "8/2018"}, {"title": "getderivedstatefromprops responding change props", "body": "documentation states method exists rare use cases state depends changes props time however read appears way achieve checking props prevprops respond change copying props state appears directly contradict article derived state anti patterns say least bit confused documentation changed used responding changes props go ahead antipattern approach copying props state pls something missing tia", "num": "13505", "d": "8/2018"}, {"title": "reactdom amp amp panresponder bug", "body": "steps reproduce defaults copy appjs jsx import react react import animated panresponder reactnative export default class app extends reactcomponent constructor super thisstate pan new animatedvaluexy thispanresponder render return open srcappjs start working app changes make automatically reload shake phone open developer menu componentdidmount thispanresponder panrespondercreate onstartshouldsetpanresponder gt true onpanrespondermove animatedevent null dx thisstatepanx dy thisstatepany thisforceupdate draggable albeit slightly buggy textbox nt move still nt move behold moves", "num": "13504", "d": "8/2018"}, {"title": "previous render cleared state change", "body": "want request feature report bug bug current behavior state change occurs previously rendered page fully cleared leaving artifacts previous render current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior previous render fully cleared versions react browser os affected issue work previous versions react react safari version macos high sierra checked works previous versions react however issue specific safari issues chrome firefox", "num": "13501", "d": "8/2018"}, {"title": "angular react", "body": "way migrate existing angual app completely react", "num": "13500", "d": "8/2018"}, {"title": "number input breaks letter e entered", "body": "want request feature report bug bug current behavior input typenumber allows entering numbers letter e input native input input event called numbers letter e react event called numbers way catch e e even filled input controlled way think work around bug right use e e pressed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior pass anything filled input onchange handler break controlled component versions react browser os affected issue work previous versions react react chrome windows", "num": "13499", "d": "8/2018"}, {"title": "unknown component", "body": "react classname setting classname", "num": "13498", "d": "8/2018"}, {"title": "find module reactscriptspackagejson", "body": "happens use npm start npm run eject", "num": "13497", "d": "8/2018"}, {"title": "react code base coverage results appear incorrect", "body": "want request feature report bug bug current behavior order contribute react going coverage results find code needs additional testing noticed coverage results appear incorrect example file notice coveralls says branches covered actually function call ran jest workspace gave ifelse path missing line shown screenshot appears bug", "num": "13496", "d": "8/2018"}, {"title": "prevent encoding href attribute", "body": "want request feature report bug featurequestion current behavior react escapes everything inside href attribute belive cases undesirable using render emails sent sengrid sendgrid provides functionality inject links autogenerated preferences unsubscribe pages replacing placeholders within emails actual urls placeholders looks like problem react encodes placeholder becomes wondering solution doomed hack current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior way different avoid escaping versions react browser os affected issue work previous versions react", "num": "13494", "d": "8/2018"}, {"title": "efficent way using dangerouslysetinnerhtml set svg string", "body": "parsing markdown text string whose content svg file far seems way render svg string use wan na ask way inefficent efficent way react thanks reading issue looking forward awesome answers", "num": "13493", "d": "8/2018"}, {"title": "touch events nonbutton elements nt trigger react mouse event handlers mobile safari", "body": "touch events trigger simulated mouse events described tested using native event handlers worked described also works described react event handlers except nonbutton elements safari mobile want request feature report bug report bug current behavior touch events nonbutton elements trigger react mouse event handlers mobile safari trigger react mouse event handlers mobile chrome trigger dom event listeners mobile safari expected behavior touch events nonbutton elements trigger react mouse event handlers mobile safari versions react browser os affected issue work previous versions react ios safari android chrome reactdom", "num": "13492", "d": "8/2018"}, {"title": "consider keeping legacy context api nonstate usages", "body": "want request feature report bug feature request question according react docs ways avoid passing props many levels new context api composition inversion control using new context api consumer component must know explicitly import context raises quite big disadvantage comparing legacy context api component ca nt reusable different contexts unless making prop version component wrapping another one uses context directly fact means component ca nt contextual reusable different contexts time using composition many cases feels wrong solving quoting docs however right choice every case moving complexity higher tree makes higherlevel components complicated forces lowerlevel components flexible may want example component struggle understand import context javascript import react react import propstypes proptypes export class link extends reactpurecomponent static contexttypes navto propstypesany handleclick e gt epreventdefault const path thisprops thiscontextnavto path render const path props thisprops return already discussed answered apologize could nt find related issues", "num": "13490", "d": "8/2018"}, {"title": "question reconciliation", "body": "think understood reconciliation react however one thing would like clarify let say first render render duke key villanova key next render connecticut key duke key villanova key understood reconciliation correctly second render react check types eg keys first two items first second render match hence add new item key new output hence generate following result duke key villanova key villanova key however think react generate seems issue understanding especially bold part previous paragraph someone explain missed understanding", "num": "13489", "d": "8/2018"}, {"title": "reacttestrenderer possible test lifecycle functions", "body": "want request feature report bug question current behavior trying use notice lifecycles methods ex need fired manually solves problem reveals want use shallow render test component test api minimal rendering expected behavior expecting would support testing component reaction different lifecycles capable use rendering way use scenario better move another library like", "num": "13487", "d": "8/2018"}, {"title": "uiwebview access react", "body": "production environment browser access uiwebview access react react route follows deployed nodejs express issue accessing browser display normally access ca nt access passed test request enter appjs nt know issue express problem react nt know asking questions hope friends answer thank much", "num": "13485", "d": "8/2018"}, {"title": "getderivedstatefromprops called calling setstate", "body": "using version till hours ago things expected read made much sense far upgraded things stopped working mainly cause getderivedstatefromprops called calling setstate desired behaviour doubt cause props nt changed entire goal method unify props preprocessing logic new updated component unify way developers apply props state checked version setstate trigger getderivedstatefromprops", "num": "13480", "d": "8/2018"}, {"title": "input checkbox updating rerender", "body": "react version checkbox dom checked state change constructor props super props componentdidmount thissetstate checked thispropschecked render let checked console logging checked first render returns reactelement type input following props second render state change however app checkbox checked explicit set defaultchecked property true checked default statechecked true checked tried removing onchange listener suspecting may culprit current workaround constructor props super props feels messy", "num": "13477", "d": "8/2018"}, {"title": "us", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13471", "d": "8/2018"}, {"title": "nd", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13470", "d": "8/2018"}, {"title": "get keys reactreconciler", "body": "struggling implement reusable views mobile platforms make need get key values explicitly set generated reactreconciler match two different view trees somewhere outside react way achieve thanks", "num": "13469", "d": "8/2018"}, {"title": "purecomponent shallowequal", "body": "simple demo shows click event triggers render every time demo however according source code reactpurecomponent shouldcomponentupdate shallowly compares objects like following click event nt trigger render performs equality iterating keys object returning false key values strictly equal arguments returns true values keys strictly equal", "num": "13468", "d": "8/2018"}, {"title": "ability intercept syntheticevent", "body": "want request feature report bug think feature would like intercept event trigger order record events", "num": "13467", "d": "8/2018"}, {"title": "problem render smart tv", "body": "created app using createreactapp installed dependencies yarn install started yarn start tried open page smart tv samsung nothing rendered downgraded version react reactdom install start page rendered normally happens lg tv", "num": "13466", "d": "8/2018"}, {"title": "react onchange events bubbling unmount", "body": "want request feature report bug reporting bug current behavior attaching handler jsx element calling handler leads element unmounted event never bubbles dom means ca nt listen basically anything else element current behavior bug please provide steps reproduce possible minimal demo problem example code try open console click around bit notice single checkbox never changes position triggers listeners whereas checkboxes get moved lists trigger events expected behavior would expect event handled way event versions react browser os affected issue work previous versions react tested conditions react macos opera firefox dev edition chrome canary behaviour changed versions", "num": "13459", "d": "8/2018"}, {"title": "npm install error", "body": "hello", "num": "13458", "d": "8/2018"}, {"title": "potential performance issues using forwardref", "body": "want request feature report bug bug assuming potential drop perf counts bug current behavior setting rudimentary perf benchmark harness reactredux compare performance builds reactredux work version harness runs one benchmark apps headless puppeteer running capture fps values second time capture chrome trace reports automatically currently one benchmark app stock ticker type stress test measures fps using package relies rough show meaningful differences fps values swap different reactredux builds change number connected components benchmark two wip candidate prs reactredux initial testing showed pr almost fast existing version pr slower runs however initial push branch include use branch already added spent saturday adding couple pieces functionality branch reran benchmarks per ourcomments issue saw branch suddenly gotten slower removing branch sped things fps admittedly artificial stress test scenario also likely reactredux apps hundreds thousands connected components potential slowdown seems concerning current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example current perf benchmark repo uses umd builds reactredux easily switch build used several umd builds already committed root repo branch branch reproduced building respective branches prs handcopying umd build artifact reactredux clone benchmark folder renaming whatever seems appropriate clone repo install build run benchmark number connected components modified requires rebuilding harness determines umd build versions run based array around line expected behavior would minimal impact perf used wrap component hoc hoc used widely application versions react browser os affected issue work previous versions react testing puppeteer windows looks like locally installed version chromium current version react umd build reactredux umd expects react redux also global variables tested prior version react specifically targeting next version reactredux", "num": "13456", "d": "8/2018"}, {"title": "forwardref precludes use composite component test utils methods", "body": "want request feature report bug bug file new issue per current behavior using reacttestutils navigate trees composite components unable find instances components wrapped current behavior bug please provide steps reproduce possible minimal demo problem jsfiddle link hoc returns forwardref pretty much exactly like one written docs except using react context jsx const mycontext reactcreatecontext somedefault const withmycontext component gt class mycontextconsumer extends reactcomponent render const forwardedref rest thisprops return reactforwardref props ref gt withmycontext class myhocforwardedcomponent extends reactcomponent render return hello expected behavior would hope could still navigate tree able find rendered instance versions react browser os affected issue work previous versions react react everywhere believe thank time", "num": "13455", "d": "8/2018"}, {"title": "componentprototypesetstate callback receiving arguments", "body": "want request feature report bug bug current behavior callback receiving parameters though line states current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example please check console clicking button display empty array indicating nt get called parameters expected behavior comment mentions get updated state props context arguments versions react browser os affected issue work previous versions react checking behaviour react using chrome mac os high sierra also nt seem work previous versions though nt go back version history", "num": "13452", "d": "8/2018"}, {"title": "ancestor stoppropagation prevents controlled working", "body": "want request feature report bug bug current behavior react component mounted descendent dom element stops propagation event event react component occur current behavior bug please provide steps reproduce possible minimal demo problem html structure html react component reproduction codepen expected behavior works well like versions react browser os affected issue work previous versions react issue occurred react tested older react newest chrome firefox edge windows", "num": "13451", "d": "8/2018"}, {"title": "umd builds enabled unpkg", "body": "visiting displays cjs build umd build displayed instead also noticed issue reactdom assume packages need fixed please refer usage instructions bottom", "num": "13450", "d": "8/2018"}, {"title": "map render array elements", "body": "current behavior support return array components example render return export default arraydemo want map reactchildrenmap example import arraydemo xxxxxx reactchildrenmap arraydemo item index gt return span item arraydemo become single element reactchildrentoarray got expected behavior expected since react return array map sometimes want wrap element array versions react browser os affected issue work previous versions react missing something important thx lot", "num": "13449", "d": "8/2018"}, {"title": "tools endtoend testing", "body": "may question moreso feature request ca nt seem find answer around web seems people working small apps ignoring issue working large react application seeing issues endtoend testing webdriverioselenium setup seems rather common understand use tools click buttons type text etc find affected dom elements assertions however problem react synchronously perform operations read dom use various methods schedule work done asynchronously later time found tests assertions random see real dom still previous state rather new state results clicked button whatnot every large test run seen many posts internet even acknowledge issue one found suggests adding timeouts throughout tests however obvious reasons slow nondeterministic suggested way know react application finished performing scheduled work discussion happening somewhere", "num": "13447", "d": "8/2018"}, {"title": "element type invalid expected string builtin components classfunction composite components got object", "body": "want request feature report bug bug current behavior ed stateless functional components usual way actually component use causes error ed objects returned components properties like etc app breaks gives error message element type invalid expected string builtin components classfunction composite components got object check render method closer inspection initial error message console warning reactcreateelement type invalid expected string builtin components classfunction composite components got object check code line uses replace contents get error however error disappears comment object source problems looks like looks like immediately original definition inside component uses simplified component use get error import react react const companyiconinheader debugger export default companyiconinheader module uses react says check render method import react react import connect reactredux import createstructuredselector reselect import getcompanyname companyinfostateglobalcompanyselectors import companyiconinheader companyiconinheader const companyheaderpartwithoutstructure companyname gt companyname export default connect createstructuredselector companyname getcompanyname companyheaderpartwithoutstructure fruitless attempts get rid error undefined point get error take also remove use related imports also import still errors component turn uses connected even reduce point importing react returning without connecting error still thinking maybe go way tree disconnect everything maybe error disappear would nt solve problem wo nt go also get error point react ends error message check render method current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior error versions react browser os affected issue work previous versions react react redux reactredux get behavior react redux reactredux also reactredux react redux also redux react reactredux also old reactredux redux newest react app made createreactapp ejected", "num": "13445", "d": "8/2018"}, {"title": "link click fire click event witch bind window componentdidmount", "body": "page b bind event window page click change router b event triggered feels strange bind event b triggered event", "num": "13440", "d": "8/2018"}, {"title": "cache provider add hooks read preload dev mode", "body": "topic originally came discussion want request feature report bug feature current behavior package presently provide hooks understand pulled resource first time hit cache dropped something cache due due tools provide interface around cached resources makes debugging inspection harder expected behavior would great way expose callbacks events cache resource resolved idea would fire callbacks events existing switch statement mode information could reduxdevtools esque interface better understand data coming hitting cache dev mode tools like would also useful people new suspend api visually see resources transition various record states", "num": "13439", "d": "8/2018"}, {"title": "doubt behaviour using purecomponent", "body": "current behavior met strange behaviour using purecomponent normal unincrease number click add button follow shallowequal return true js class b extends reactpurecomponent constructor props super props thisstate count thisclick thisclickbind click thissetstate count thisstatecount render return thisstatecount doubt normal increase number using like follow link js click const state objectassign thisstate thissetstate count statecount option effect count thisstatecount count statecount nt know second way thanks replying", "num": "13438", "d": "8/2018"}, {"title": "suspense fixturedemo page scrolls top unnecessarily", "body": "open demo lives repo fixtures folder small screen tapping one rows bottom ex name causes page scroll top immediately means see inline loading indicator scroll top data loads", "num": "13436", "d": "8/2018"}, {"title": "react page returns ios wkwebview", "body": "react app following routes xyzcom xyzcompolicy try access ios app wkwebview rendering proper homepage try access nginx returns error wkwebview pages seems work normally mobiledesktop browsers accesslog accessing normal browsers accessing route ios app wkwebview accesslog like know issue react router prevents rendering content although sure problem content", "num": "13433", "d": "8/2018"}, {"title": "rendertostring supports html minify", "body": "think optionally minify html string returned believe possible current react think method placed document possible thanks", "num": "13432", "d": "8/2018"}, {"title": "feature request react element", "body": "angular element develop custom elements render external application like bellow js feature react", "num": "13429", "d": "8/2018"}, {"title": "host components outside setstate path sometimes unnecessarily diffed updated", "body": "extracted currently diff host node complete phase even bailed begin phase means little bit work necessary also observable effects particular would rare probably worth fixing made worse end committing update inputs another component fix filing posterity", "num": "13425", "d": "8/2018"}, {"title": "onchange nt fire input rerenders due setstate nonreact capture phase listener", "body": "extracting issue always react reproduce react however probably extremely rare practice nt worth fixing filing posterity minimal example js class app extends reactcomponent state value handlechange e gt thissetstate value etargetvalue componentdidmount documentaddeventlistener input gt comment line fix thissetstate true render return reactdomrender documentgetelementbyid container typing nt work unless comment call capture phase listener say input empty typing happens capture phase nonreact listener runs first rerendering due first empty input props still contain old value dom node value new equal set dom node value according props remember current value tries decide whether emit change event asks tracker whether value changed tracker compares presumably new set earlier stored also also updated changes update lost never get change event never actually get chance set correct state", "num": "13424", "d": "8/2018"}, {"title": "eslint ca nt find module error", "body": "want request feature report bug maybe bug current behavior clone react run eslint inspection fail due seems use wrong value npm support file sure change comments expected behavior error versions react browser os affected issue work previous versions react react repo master branch macos yes previous works", "num": "13418", "d": "8/2018"}, {"title": "small issue test ensure componentdidmount called", "body": "glancing tests get better handle update batching like noticed possible logic omission test case file moves looks like js call render component deleted gt var rendercount var componentb null truly intended check whether component mounted additional end test otherwise seems superfluous since never checked otherwise used test", "num": "13417", "d": "8/2018"}, {"title": "replace content", "body": "want request feature report bug feature current behavior use render replace body content got warning message warning render rendering components directly documentbody discouraged since children often manipulated thirdparty scripts browser extensions may lead subtle reconciliation issues try rendering container element created app creating whole website according better elements elements said better directly body example says content unique page use per page put directly inside ideally nt nested within elements think common case replace whole content current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior maybe remove warning versions react browser os affected issue work previous versions react reactdom", "num": "13415", "d": "8/2018"}, {"title": "fragments rendered strange elements", "body": "react reactdom trouble reproducing raising hope someone give clues cause large application using places like everything internet explorer renders expect html child child child child jsx child child child child reactcreateelement reactfragment think correct way symbol polyfill works react recognize something html tag even weirder happens sometimes two components app using fragments first one render may issue second may affected component rerenders rendered dom corrected nt found solid pattern yet fairly typical webpack babel setup using babelpolyfill symbol support really sure parts setup relevant please let know need extra info trying create reproduction outside application anyone offer clues meantime incredibly grateful", "num": "13414", "d": "8/2018"}, {"title": "umbrella chopping block", "body": "wanted create list things whose existence makes react bigger complicated necessary makes likely need deprecated actually removed future version clue happen recommended upgrade path nt take issue advice move away clear upgrade advice might make worse overlap seem longer term unsafe life cycles without unsafe prefix keep ones prefixed unsafe indefinitely original ones likely deprecated removed legacy context old context full edge cases accidentally supposed work way designed requires react code become slower support feature string refs requires current owner exposed runtime likely form owner remain particular semantics likely want rather two owners remove feature also requires extra field every reactelement otherwise needed module pattern components little used feature lets return class instance regular function without extending useful practice ecosystem moved around es class like usage language compiling js tries comply model well existence feature means nt know something functional component testing function extending instead extra feature testing every functional component also prevents us passing ref second argument default functional components without using since would nt valid class components uncontrolled oninput described support uncontrolled polyfilling event pretty invasive operations dom like attaching setters support imperative usage dom outofscope react setstate componentdidcatch currently support error recovery support might want consider deprecating old mechanism automatically first commits null semantics bit weird requires complicated code likely get wrong sometimes context object consumer right possible use context object consumer render prop artifact reusing object allocation documented want deprecate make provider instead gc unmounted roots likely wo nt come warning breaking behavior memory usage call component wo nt cleaned almost always cleaned anyway since least one subscription still holds onto arguably even breaking change unstablerendersubtreeintocontainer replaced portals already problematic since ca nt used lifecycles also add lots special case code transfer context since legacy context likely deprecated serves purposes x reactdomrender hydration already deprecated requires extra code requires us generate extra attribute html autoselect hydration people using reactdomhydrate instead need remove old behavior attribute reactdomserver", "num": "13413", "d": "8/2018"}, {"title": "keyboardeventrepeat normalized", "body": "want request feature report bug bug current behavior documentation syntheticevent claims react normalizes events consistent properties across different browsers documentation keyboard events lists supported field natively support react normalize event set keydown event repeats ie key held edge open bug course abandonware current behavior bug please provide steps reproduce possible minimal demo problem tab div repro hold key bug repeat alert appear expected behavior alert dialog showing repeat appear browser react supports versions react browser os affected issue work previous versions react current version react browser natively support ieedge particular chrome always supported ff since safari since unknown worked previous versions react", "num": "13411", "d": "8/2018"}, {"title": "investigate selectwrapperstateinitialvalue necessary", "body": "uncovered raunofreiberg select work ever assigned never referenced removed example would great someone could investigate figure removed", "num": "13410", "d": "8/2018"}, {"title": "createsubscription call getvalue constructor early", "body": "want request feature report bug bug current behavior made example show execution order lifecycle functions remounting component calls save result state called changes ignored remount component wrapped component something modify source value get wrong value new component expected behavior versions react browser os affected issue work previous versions react latest", "num": "13405", "d": "8/2018"}, {"title": "callback function setstate faster real dom render", "body": "hello dear problem project want get dom documentgetelementbyid password dom unrendered untill modal opened like bellow visible control modal display works well react using react tell addeventlistener function deal bellow works well like em nt know reason update react version thy reactdom find dom refs receive answer browser wish get answer u", "num": "13402", "d": "8/2018"}, {"title": "boolean dom properties coerce empty string false contrary html standard", "body": "kind space offshoot attempt better model react dom props flow tl dr react warn value passed known boolean dom prop want request feature report bug depends interpretation possibly bug definitely inconsistency worth mitigating imho current behavior react normalises values supplied known dom boolean props eg passing empty string falsy javascript results corresponding attribute omitted html output however html empty string truthy value context one values standard specifically allows boolean attributes potential source confusion react handling unknown attributes gives rise following hypothetical scenario new dom boolean attribute introduced people write jsx code uses passed html truthy later react adds internal whitelist minorpatch version starts processing boolean js falsy omitted html would technically breaking change people current behavior bug please provide steps reproduce possible minimal demo problem expected behavior definitely clash expectations interface js html coming js falsy treating boolean prop fine perspective current behaviour justifiable coming html might obvious react extra processing deviating clearly stated html spec perspective current behaviour surprising probably nt justification changing react actual handling least fear breaking code relies longstanding behaviour see version information perhaps warning ambiguity warranted la note warning wo nt fully mitigate worstcase scenario mentioned since ca nt warn prop nt know dom boolean least would give signal react version update code might expected thing anymore versions react browser os affected issue work previous versions react versions react far back probably way older process whitelisted boolean dom props way", "num": "13400", "d": "8/2018"}, {"title": "reacttestrenderer find render function reactnative component", "body": "want request feature report bug bug current behavior run tests render component using shallow function enzyme fails ca nt find render function typeerror thisinstancerender function current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example developing reactnative application running default jest command run tests happens ca nt reproduce small project expected behavior run tests versions react browser os affected issue work previous versions react using babelcore proptypes react reactdom reactnative babelcore babelcore babeljest babelpresetreactnative babelruntime enzyme jest jestfetchmock jsdom reacttestrenderer jest configuration jestconfigjs babel config babelconfigjs", "num": "13399", "d": "8/2018"}, {"title": "avoid reconciliation alternative component interface", "body": "hello want ask question way avoid reconciliation process today see following process component wants rerender component render method provides new virtual dom react diff library tries find nonoptimal way morph old virtual dom new one please fix wrong familiar react codebase see information docs worry exactly changes every update solution complexity n even worse user care changes sometimes user knows changed able provide log n even solution example working huge data list receiving information websocket morph list appendprepend remove swap items etc nt want render huge component list run reconciliation process mutation tell virtual dom morph efficiently way user provide morph method imagine api like render defined morph component componentappend else prependto componentfind key plans implement thank please feel free ask questions", "num": "13396", "d": "8/2018"}, {"title": "reactdom support solve problem", "body": "error message set undefined error line var labelsincurrentcommit new set anyone encountered problem solved", "num": "13390", "d": "8/2018"}, {"title": "createanewapphtml", "body": "createanewapphtml error word npx createreactapp myapp cd myapp npm start", "num": "13383", "d": "8/2018"}, {"title": "provide property facilitate context testing", "body": "want request feature report bug feature request current behavior provides property provide property allowing context tests expected behavior return object containing instance current context versions react browser os affected issue work previous versions react least", "num": "13382", "d": "8/2018"}, {"title": "reactcloneelement remove existing props", "body": "want request feature report bug feature current behavior element cloned reactcloneelement possible add new props modify existing ones remove existing props relevant code example works right desired behavior would great add way remove props passing value guess could use directly afaik also worry special attributes like rather mess internals versions react browser os affected issue work previous versions react think worked way react versions use case applying map transformation elements recursively need remove virtual props passing elements react render contrived example console shows want avoid", "num": "13381", "d": "8/2018"}, {"title": "reactchildrenmap incompatible reactchildrenonly function", "body": "return value reactchildrenmap incompatible reactchildrenonly function return error message invariant violation invariant violation reactchildrenonly expected receive single react element child", "num": "13380", "d": "8/2018"}, {"title": "npm install react nt run", "body": "hello everyone want install reactjs project created run command npm react causes error package json name reactlab version description lab sur reactjs main indexjs scripts test echo error test specified amp amp exit author orion wambert license isc dependencies bootstrap createreactapp expressjs jquery latestversion mobx reactredux reactrouter redux webpack", "num": "13371", "d": "8/2018"}, {"title": "try listening mouse keyboard event reactjs", "body": "anyway detect mouse keyboard event browser minimize need suggestion thank", "num": "13370", "d": "8/2018"}, {"title": "epreventdefault work safari later", "body": "want request feature report bug bug current behavior epreventdefault work safari later current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reproduction link steps reproduce page safari page safari beyond expected behavior page scrolled versions react browser os affected issue work previous versions react react browser safari os", "num": "13369", "d": "8/2018"}, {"title": "onchange triggered option changes even human", "body": "want request feature report bug bug current behavior consider options external data say b users could choose option say b since data outside possible later option b longer option automatically adjust display left option case yet triggered means unless users click choose option already displayed nt make sense internal state would nt able change correct perceived value current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example simulate external data input text commaseparated choices try following sequences events select option b element edit text box value changed displayed value current choice internal state still b expected behavior triggered internal state adjusted versions react browser os affected issue work previous versions react chromefirefox", "num": "13366", "d": "8/2018"}, {"title": "want use crypto module nodejs work", "body": "want use cryptocreatediffiehellman dh encryption react code followed error reactjs work fine nodejs followed code reactjs import react component react import logo logosvg import appcss import crypto crypto class app extends component constructor props super props thisstate text componentdidmount render return welcome react get started edit save reload export default app exception like", "num": "13365", "d": "8/2018"}, {"title": "reacteventlistener listen onclick events", "body": "listen onclick events need listen onclick events app get access reacteventlistener", "num": "13363", "d": "8/2018"}, {"title": "might time update package readmes", "body": "npm package get immediate access react without also requiring jsx transformer especially useful cases want browserify module using react", "num": "13359", "d": "8/2018"}, {"title": "ability use return value reactchildrenmap reactchildrenonly", "body": "stated docs shown return value incompatible function return error message invariant violation invariant violation reactchildrenonly expected receive single react element child used incompatibility causes fairly annoying restrictions however understand means ca nt edit properties component children runtime contain component requires single child eg ca nt dynamically set disabled prop child component parent believe due type differences parameter return value former valid element latter see like make request return type type fix quirks much intuitive separate static function converts return type type would also solve issue feels like sort fix order since broad strange restriction components use", "num": "13355", "d": "8/2018"}, {"title": "setstate unexpectedly update nonstate properties", "body": "nt know known issue intended feature found interesting problem know want render reactive value react put value state use setstate js constructor super thisstate counter thisincrementbuttonlistener e gt epreventdefault thissetstate prevstate gt counter prevstatecounter render return thisstatecounter clicked counter increments rerenders make field property render catch snapshot component created even incremented result displayed reactively render js constructor super thiscounter thisincrementbuttonlistener e gt epreventdefault thiscounter render return thiscounter clicked counter increments difference rendered right basic stuff however interesting occurence try fiddle around code keeps counter field property everything else intact difference going add js constructor super thiscounter thisincrementbuttonlistener e gt epreventdefault thiscounter add thissetstate pass object even empty thissetstate wo nt work render return thiscounter surprise surprise thiscounter update state time updates state assumption every time setstate called even empty object parameter render runs get recalculated thus incremented course wo nt reactive state property use case time would change click button put setstate listener would work state sure accepted behavior unexpected hack whether make use could anybody help elaborate fiddle want see behavior action comment bit line see difference", "num": "13354", "d": "8/2018"}, {"title": "persistent state storing parent", "body": "hi use reactvirtualize render list sub component row carries state state obviously gets reinitialized every remount store state parent object pass object tree props set object every time state update javascript constructor props super props thisstate propsstatecachechildstate thissetstate property gt thispropsstatecachechildstate thisstate", "num": "13352", "d": "8/2018"}, {"title": "bug lastest version getting images", "body": "hi page loaded lot errors getting images reactdom message like path file error react please fix tell please wrong", "num": "13350", "d": "8/2018"}, {"title": "reactcreatecontext singleton enforcement", "body": "want request feature report bug bit current behavior old context api involved components provided consumed context using shared string key words requirement communication components providing consuming context string key used side effect allowing easy communication via react context across packages ie separate nodemodules using shared context might one two forms entirely different components using context key perhaps spread around source code even nodemodules one packages importing context providingconsuming components another usage pattern line abstraction new api works much differently instead communication work correctly consumer provider must always come exact function call unlike old api means provider consumer imported another package implicit singleton otherwise separate instances think intuitive reasonable form work new api less form best way handling far best approach thought using peer dependencies enforce package calling never duplicated nodemodules potential drawback brought original reactcreatecontext rfc ca nt seem find reference limitation docs anywhere recommended way handling listed documentation caveat using way make less errorprone nt seem issue regarding already figured create one kick discussion expected behavior context communication work across package boundaries see note old context api versions react browser os affected issue work previous versions react concerns versions react api", "num": "13346", "d": "8/2018"}, {"title": "ca nt call findbytype instance reacttestrenderer", "body": "bug current behavior ca nt call findbytype instance typeerror instancefindbytype function expected behavior want get fieldmapper componen child fieldmapping peace code test testrenderer create versions react browser os affected issue work previous versions react react reacttestrenderer typescript typesreacttestrenderer", "num": "13345", "d": "8/2018"}, {"title": "rfc omit end tags possible reactdomserverrenderer", "body": "background lot instances defined html spec end tags omitted still maintaining valid markup examples li element end tag may omitted li element immediately followed another li element content parent element p element end tag may omitted p element immediately followed address article aside blockquote details div dl fieldset figcaption figure footer form header hr main nav ol p pre section table ul element content parent element parent element html element audio del ins map noscript video element autonomous custom element see utilizing rules think may possible reduce amount html needed initially downloaded user serverside rendering depending rendered could significant decrease html size example pulled table element utilizing rules difference bytes compared decrease size html tee electric powered rail car train functions abbreviated function control unit central station headlights interior lights electric locomotive operating sounds engineer cab lighting station announcements swiss caveats even though rules spec still feel like quirks probably browsertobrowser differences handled even handled react could see babel plugin something like good fit optimization like possible roadmap research end tags would stable omit roll optimization subset tags gauge realworld load time improvements continue adding omission cases everything looking good", "num": "13342", "d": "8/2018"}, {"title": "feature request unmount component", "body": "want request feature report bug request feature want able unmount component think life cycle could good maybe returning special value provided react render also good jsx class mycomponent extends reactcomponent rest render thisstateshouldunmount return reactshouldunmount", "num": "13338", "d": "8/2018"}, {"title": "imperative wrappers ca nt access current context value commit phase", "body": "sometimes imperative wrapper like js componentdidmount rendersomethingimperatively thisprops componentdidupdate rendersomethingimperatively thisprops render return null portals eliminated need regular dom jumps still need embedding renderers eg use cases like vue inside react crossrenderer embedding maybe could extend portals still imperative use cases crosslibrary rendering though one thing becomes annoying new context wo nt propagate imperative boundary nt maintain stack commit phase traversing flat linked list effects nt actually know context value current time fires friends means context host app accessible quite annoying could hack around something like neither obvious convenient anticipate contexts get used seems even less convenient imperative cases like vue inside react js componentdidmount rendersomethingimperatively thisprops componentdidupdate rendersomethingimperatively thisprops render value gt return seems like could use would put state use lifecycles maybe sufficient still means need explicit contexts want remember though wonder find better solution use cases", "num": "13336", "d": "8/2018"}, {"title": "excessive iteration multiple roots scheduled lifecycle", "body": "looking seemed suspicious consider case js class app extends reactcomponent componentdidmount let lt reactdomrender documentcreateelement div render return null reactdomrender documentgetelementbyid root profiling tells spend lot time searching root adding logging shows eg roots run loop iteration times first root times second root times third root etc oops surely bug", "num": "13334", "d": "8/2018"}, {"title": "bug onpointerup nt fire tablet pen input", "body": "example component current behavior onpointerup event fails fire using wacom tablets tested chrome mac windows past used reactpointable wrapped functions also longer works", "num": "13333", "d": "8/2018"}, {"title": "support crossrenderer portals", "body": "currently works within current renderer means want embed one renderer another eg option imperative render committime hook like outer renderer component fact exactly works today approach nested renderers like ca nt read context outer renderers similarly ca nt timeslice updates inner renderers update inner container host renderer commit time time originally discussed portals wanted make work across renderers could something like js super clear work renderers bundle incompatible fiber implementations whose implementation takes charge want figure something eventually filing future reference", "num": "13332", "d": "8/2018"}, {"title": "question rendering arrays components implementations behave", "body": "want request feature report bug possible bug though likely expected behavior misinterpreting current behavior say array components like render also want weave tags item example jsx const delimited props gt propsitemsreduce b gt b works however components array state forget state parent refreshes seems bad rewrite delimited component produces result inserting array items keep internal state jsx render items state retained parent refreshes const delimited props gt const results propsitems let resultslength gt resultssplice return results adding prop nt change outcome current behavior bug please provide steps reproduce possible minimal demo problem first click one toggle buttons click add toggled buttons retain state click use reduce renders buttons using repeat steps time toggle buttons forget state click add expected behavior seems like component getting remounted using updates existing component use loop nt implementations update existing component versions react browser os affected issue work previous versions react react chrome osx high sierra", "num": "13331", "d": "8/2018"}, {"title": "including css cdn react project", "body": "hi trying use react slick project unable import css provides documentation says something like cant dont know people get use kinda importing exactly wrote include styles cdn indexhtml like question including like cdn good bad react project effects react performance even effect react side project build css help webpack", "num": "13330", "d": "8/2018"}, {"title": "shouldcomponentupdate called thissetstate callback", "body": "want request feature report bug bug probably current behavior seems unintuitive fired callback way around callback feels like called immediately state updated actually method called callback fiddle open devtools see console trying say fiddle expected behavior believe callback called shouldcomponentupdate versions react browser os affected issue work previous versions react", "num": "13329", "d": "8/2018"}, {"title": "propschildren slot feature", "body": "feature request thinking need sort slot feature introduced inside propschildren existing feature proposal would allow use specific directive inside children markup let say jsx side would able write instead uniq syntaxe intent open discussion feedback eventual feature thx", "num": "13328", "d": "8/2018"}, {"title": "prop rendering element iif children render", "body": "want request feature report bug feature current behavior every react project worked always sort code looks like looks ugly scalable imagine mycomponent children instead knowledge way achieve intended behavior expected behavior prop nullifempty naming sugestions welcome defaults false specified true render element children looks better scales better keeps probably ocd ease", "num": "13327", "d": "8/2018"}, {"title": "using prototypes classes component src", "body": "browsing curiosity source code component saw actually use prototypes classes accurate missing something make decision", "num": "13326", "d": "8/2018"}, {"title": "event handler support get second param current instance", "body": "event handler support get second param current instance usually write component link follow write link follow babel transform js var component function react component inherits component react component reactcomponent event handler support get current instance second param nt worry write handler strict method compatibility old version", "num": "13324", "d": "8/2018"}, {"title": "error handling", "body": "difficult handle kind error difficult find bug whenever mistake use curly braces instead parenthesis console showing error able find file got error rather shows main building block file", "num": "13322", "d": "8/2018"}, {"title": "feature react behaves bad performance updating huge array", "body": "want request feature report bug feature current behavior bad performance want update small part array method causes method triggered every time update array entire array traversed array gets larger larger react takes resource computer especially cpu cases calling dom method feature react makes lot better performance react way however calling dom method lot react graceful solution come across scenario times example written pseudocode jsx class datalist extends reactcomponent constructor props super props thisstate datasourcelist getdata gt data fetched server piece data assigned variable say thissetstate datasourcelist deepclone thisstatedatasourcelist push newdata render return thisstatedatasourcelistmap v gt return getdatarendermapgetdata method however scenario costs lot cpu resource wrote streaming log component line log printed screen every time websocket receive message server one piece message renders counterpart component sometimes server sends hundreds thousands messages within one second causes method method triggered thousands times accordingly behavior even makes current web page occupy cpu computer got frozen updating process finished order solve issue use web api method mount dom node carrying messages directly dom node steaming log component wrapper solution avoids part complexity n n length array snippet pseudocode jsx class datalist extends reactcomponent getdata gt data fetched server piece data assigned variable say dataitem documentcreateelement div dataiteminnerhtml newdatavalue thiscontainernodeappend dataitem render return append improves behavior greatly always elegant solution possible react way update small part array pushing element array rendered current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example bug probably flaw react architecture expected behavior expected behavior may update array scenario original react api rather directly calling dom node method versions react browser os affected issue work previous versions react present version browser os work previous versions either", "num": "13316", "d": "8/2018"}, {"title": "test", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13315", "d": "8/2018"}, {"title": "profiler durations sometimes incorrect", "body": "working devtools profiler noticed durations sometimes incorrect seems vaguely related highlow priority state updates need track filing issue", "num": "13309", "d": "8/2018"}, {"title": "create form using json data reactjs", "body": "need create form using json data done creating run time textbox showing times need one times textbox select also print times need times anyone help renderform gt return mdmap", "num": "13308", "d": "8/2018"}, {"title": "someone else think hoc poor name", "body": "thought boggles mind like share see anyone feels higher order function function takes another function argument returns third function call hoc takes component returns component component function takes props returns nodeselements props nodes definition hoc take props return nodeselements higherorderwhatever component even define starting lowercase letter nt name pascalcase like actual components nt try use tag names jsx pretty sure hoc component call maybe component factory instead hoc would better name course term hoc widely used name confusing word component misused think", "num": "13307", "d": "8/2018"}, {"title": "umbrella releasing time slicing", "body": "let use track missing time slicing usable internally open source list probably incomplete feel free add initial release mvp core x decide recommended lowhigh pri split pattern x fix respected interactive event handlers reproducible fixture x fix provide workaround issue chain synchronous commits expiration reproducible fixture resuming offscreen api scheduler decide naming flarnie react core team adding support priority flarnie may involve bikeshedding iteration require changes react fiber scheduler add fixture showing using js scheduler react also external js better handle tab backgrounded flarnie improvements polyfill raf integrate dogfood internal fb products see internal task flarnie create final api rendererdependent make depend publish open source flarnie others internally related suspense umbrella", "num": "13306", "d": "8/2018"}, {"title": "warning tag unrecognized browser", "body": "want request feature report bug bug electron users current behavior running jest components containing webview element rendered warning rendered console many tests run output littered warnings current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior warning logged console versions react browser os affected issue work previous versions react react electron unknown worked prior versions react", "num": "13299", "d": "8/2018"}, {"title": "set static variable reactcomponent manage state global variable set context", "body": "import react react export class assigncomponent extends reactcomponent syncsetstate state gt const return new promise function reslove mesetstate state gt reslove mestate assigncomponentreducer import react react import assigncomponent src const actions function dispatch return async function actions dispatch actions export default class testa extends assigncomponent constructor props super props thisstate name xh age height thiscreatestore assger actions function assger action assign switch actiontype case return assign name cxh case b return assign age", "num": "13297", "d": "8/2018"}, {"body": "love reducing bundle size class prop changes welcome great work", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "attention form library authors", "d": "8/2018"}, {"body": "great", "d": "8/2018"}, {"body": "classname class fantastic others seems weird still etc", "d": "8/2018"}, {"body": "adopting major breakthrough making library friendly beginners congratulations", "d": "8/2018"}, {"body": "awesome curious move actually going work props seems like would initially present reserved keyword problem", "d": "8/2018"}, {"body": "fantastic news thanks gaearon", "d": "8/2018"}, {"body": "love every points except change seems downright contradictory goal points pursuing aligning dom api react binds dom properties html attributes even articulated first point dom element property named classname would named react", "d": "8/2018"}, {"body": "fantastic goal bundle size reduction", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "others seems weird still clippath htmlfor tabindex etc open discussion argue changes worth except maybe", "d": "8/2018"}, {"body": "think rewrite event system interesting aspect significant opportunity reduce bundle size ease community contributions let", "d": "8/2018"}, {"body": "wonder would worthwhile also work releasing jsx time people going need relearn handful things anyway maybe better relearn bunch one time rather things twice period time thought occurred read", "d": "8/2018"}, {"body": "love every points except classname change seems downright contradictory goal points pursuing aligning dom api react binds dom properties html attributes even articulated first point yet pass unknown keyvalue pair treated attribute since react already inconsistent also comment users wrong expecting react set attribute whether react api uses attribute name property name api compeletely orthogonal defended side argument years think friction worth gain anything letting people use negative effects except work destructuring migration cost everybody complains learn react think people expect case important pedantic since changing dom things anyway let batch together", "d": "8/2018"}, {"body": "long react fire blazing fast", "d": "8/2018"}, {"body": "changes fantastic way excited implications reacttestinglibrary particular events bound react root maybe even drop event delegation altogether may necessary modern environments anymore potentially removingrewriting synthetic events seriously improve implementation experience using tool love provide feedback implemented", "d": "8/2018"}, {"body": "maybe even drop event delegation altogether may necessary modern environments anymore considered think might oversimplification event delegation lets us avoid setting bunch listeners every node initial render swapping updates aspects ignored likely benchmarking done though", "d": "8/2018"}, {"body": "tannerlinsley unfortunately kill jsx object short hand notation would super super nice could finally take objects arrays btw next strings", "d": "8/2018"}, {"body": "goal bundle size reduction dropping third react dom would nice see hard say early best", "d": "8/2018"}, {"body": "wow enumeration almost design decisions mention people ask react cons love direction going", "d": "8/2018"}, {"body": "would upgrade path libraries use want support multiple versions react", "d": "8/2018"}, {"body": "gaearon maybe big deal today nice say props dom properties html attributes except classname one html name also like able copypaste svg wo minutes messing around attributes match react", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "feels like transition done carefully probably extended period time going cause lot issues ecosystem virtually every component need changed even trivial ones mostly fine code codemod dependent party libraries largely mercy maintainers rest changes seem relatively low risk ecosystem point view getting rid really cause lot pain seems like possible split separate issue release different schedule rest changes", "d": "8/2018"}, {"body": "agree felixfbecker everything sounds awesome would improve quality developers users classname change beeing able deconstruct properties one would certainly cause confusion harder explain new users need use classname class keyword clearly see misstake made colored differently working around class deconstructing requires introducing new syntax completely different way read specific property would work untill need use rest property creates many problems save four characters", "d": "8/2018"}, {"body": "felixfbecker could jsx js version would", "d": "8/2018"}, {"body": "great plan nice", "d": "8/2018"}, {"body": "awesome ca nt wait dig new stuff", "d": "8/2018"}, {"body": "drastically simplify event system react delegate handler custom elements without extending reactdom definition means react set custom handler custom element like gaearon plan", "d": "8/2018"}, {"body": "changes excellent biggest meta change size reduction opinion react mean dx fat enough downloading parsing average networks particular mobile problem could", "d": "8/2018"}, {"body": "would rewriting event delegation open door fixing events degrade perf node attached react means whole app also long shot considered synthetic dataset props able type allowable html props data leads ton bugs forwarding props dom nodes currently typed react components choose exact types props allowing data attributes", "d": "8/2018"}, {"body": "excited", "d": "8/2018"}, {"body": "ryanflorence bit offtop kinda sad one far know idea make htmlcsssvg jsx transfomer order ease migrations react many trivial changes map html attrs react props many manhours wasted perfoming mostly findandreplace", "d": "8/2018"}, {"body": "strange see following issue comments goal make react better aligned dom works classname class seems weird still clippath htmlfor tabindex etc direct counterparts dom apis argument nt pass muster defended side argument years think friction worth gain anything letting people use class negative effects except react always thin layer top js everything else besides jsx angle brackets js direct counterpart dom apis things directly related dom classname clippath htmlfor tabindex etc etc etc decision introduce react stops thin layer reserved word js breaks away declared goal compatible dom apis especially jarring see want migrate onchange oninput inconsistent dom become inconsistent dom migrating additionally opens full worms people demand already demanding changes parts comments use instead maybe valid js much like consistent dom apis nt change reserved word dom apis etc etc etc", "d": "8/2018"}, {"body": "yet pass unknown keyvalue pair treated attribute since react already inconsistent gaearon also reason react library scoring bad customelements everywhere interop test many issues asking change", "d": "8/2018"}, {"body": "may nonissue similarity react fire react fiber going confusing nonnative english speakers often thought newark penn station new york penn station train line nyc particularly cruel joke tourists real concern could call react flame still keep fire emoji", "d": "8/2018"}, {"body": "would rewriting event delegation open door fixing events degrade perf node attached react means whole app fixing form definitely something like see also long shot considered synthetic dataset props want commit something like bigger surface richer interface dom makes sense clear much want invest react dom versus higher level library gives richer dom api since changes cosmetic high surface area hold", "d": "8/2018"}, {"body": "react blazing", "d": "8/2018"}, {"body": "ryanflorence bit offtop kinda sad one far know idea make htmlcsssvg jsx transfomer order ease migrations react many trivial changes map html attrs react props many manhours wasted perfoming mostly findandreplace jxub", "d": "8/2018"}, {"body": "excited new changes humans facebook making history migration components migrated react fire test suites must tight lt", "d": "8/2018"}, {"body": "similarity react fire react fiber going confusing nonnative english speakers maybe hardofhearing folks conditions affecting word discrimination", "d": "8/2018"}, {"body": "thanks sharing gaearon amasing love see jsx release solving white space new lines issue occurs compile code babel typescript different issues opened tried contribute got told cause react team needs review everything around jsx issue relates dom anyway cause way translate jsx js allow says issue comment end", "d": "8/2018"}, {"body": "think ok let nt add insult injury", "d": "8/2018"}, {"body": "someone please clarify affects existing handlers stop reflecting input values value attribute react still controlled inputs accurate updates handlers affect reading values refs dom nodes", "d": "8/2018"}, {"body": "nickmccurdy affects see browser devtools", "d": "8/2018"}, {"body": "tomdale react ember", "d": "8/2018"}, {"body": "nice waiting see full list changes react believe new era reactjs", "d": "8/2018"}, {"body": "tomdale hmm yarn fiber fabric maybe another clothing related term could used", "d": "8/2018"}, {"body": "yet pass unknown keyvalue pair treated attribute since react already inconsistent gaearon also reason react library scoring bad customelements everywhere interop test reason custom normal elements completely separate code paths reason already old behavior nt want break backwards compat unless new behavior solid think would make sense tackle better custom element interop part umbrella similarity react fire react fiber going confusing nonnative english speakers internal codenames really carry significance projects completed react fire effort make react dom better time becomes productionready react dom react still controlled inputs accurate eventtargetvalue updates handlers affect reading values refs dom nodes yes property talking stopping updating attributes popular libraries afaik causes countless problems nt affect code unless relying css selectors value probably bad anyway nice waiting see full list changes react note committing ready might", "d": "8/2018"}, {"body": "nice see steady development good library like react make usability much better worth imo", "d": "8/2018"}, {"body": "gaearon custom normal elements completely separate code paths seems like something fix reason treat elements intention html dom specs", "d": "8/2018"}, {"body": "justinfagnani discussed previously reason nt time convention tell whether set property attribute risk using check risk making impossible web platform add new properties prototype think already sort consensus rfcs prs robdodson working probably pick", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "react fire also allow us apply clever performance optimizations inferno nt able apply breaking changes exciting times", "d": "8/2018"}, {"body": "lgtm", "d": "8/2018"}, {"body": "related proposed rename love property took array strings would save trouble lot string manipulation use classnames components think disadvantage prop would arrays containing strings order would cause rerender pure component string css classes would nt honestly though seems like minor issue think react devs already know tradeoffs arrays amp objects props", "d": "8/2018"}, {"body": "remove redux devtools extension see error probably want fix part make like nt support arguments", "d": "8/2018"}, {"body": "thank help try fast possible get back", "d": "8/2018"}, {"body": "still nt work", "d": "8/2018"}, {"body": "could remove reduxdevtools entirely", "d": "8/2018"}, {"body": "think might looking", "d": "8/2018"}, {"body": "sorry master broken moment roll back days wait land please", "d": "8/2018"}, {"body": "prevents getting ref field dom traversal", "d": "8/2018"}, {"body": "hi gaearon thanks prompt answer sure meant getting ref field component implementation form mean javascript class input extends reactcomponent inputref reactcreateref case trying avoid implementing validation related code field components trying delegate anything involves validation form since form recurses children check field values getting ref clone invalid field elements add couple validation props implemented posted question sure efficient way achieve need works", "d": "8/2018"}, {"body": "case trying avoid implementing validation related code field components trying delegate anything involves validation form proposing adding ref form feel free similar nt think need traverse react tree seems like simplest solution", "d": "8/2018"}, {"body": "job thanks", "d": "8/2018"}, {"body": "react rerenders children call nt problem code breaks code brittle ways hard say without understanding issue regardless bug better suited discussion forums", "d": "8/2018"}, {"body": "would possibly create following error test fixtures", "d": "8/2018"}, {"body": "reverting definitely fixed roll back commit triage dom stuff", "d": "8/2018"}, {"body": "b e fixed", "d": "8/2018"}, {"body": "fix try top", "d": "8/2018"}, {"body": "turn failing test", "d": "8/2018"}, {"body": "calling read trigger setstate calls component seems wrong result exactly warning open example plane wifi", "d": "8/2018"}, {"body": "create smaller repro one pretty involved", "d": "8/2018"}, {"body": "pared demo show file loading option controls whether function calls triggers warning called warning happens requests cache misses might need hard refresh toggling state", "d": "8/2018"}, {"body": "still lot stuff etc boil essence problem occurs synchronously leads think fine unsupported debugger hack demo meant used way however problem legit fix example happens nt reset current method throw", "d": "8/2018"}, {"body": "cleaned little bit think would lose functionality cut anything else guess boils resource fetcher performing side effects calls function triggers behavior discouraged really worried also side effect update works two react roots render root state update render phase lost case warning useful", "d": "8/2018"}, {"body": "nt understand fetcher synchronously calls see async call technically nt happen render means might react bug", "d": "8/2018"}, {"body": "never mind wrong missed promise constructor callback fires synchronously case behavior makes sense indeed render nt encouraged example hacky", "d": "8/2018"}, {"body": "bit perplexed symbol case maybe could call instead least might get rid concern stringifying symbols case think avoiding need ensure consistency would let us drop calls gettostringvalue would nice win", "d": "8/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources probably bug react hard say provide runnable snippet code instead get help reports like best thing reduce example smallest possible code still reproduces issue post site run eg jsfiddle codesandbox closing attempt treat bug", "d": "8/2018"}, {"body": "den ons aug skrev dan abramov notifications githubcom closed receiving subscribed thread reply email directly view github mute thread", "d": "8/2018"}, {"body": "lifecycle used absolutely need copy use case need react prop changes move code method component", "d": "8/2018"}, {"body": "lifecycle getderivedstatefromprops used absolutely need copy props state nt agree mean name derived state props ie want derive state props need react prop changes move code render method component need react change prop render differently based props let give simplified example use case jsx class tripmap extends reactcomponent state followregion true render return focus region need way setting back true region passed props changes indicates new dataset achieved causes unnecessary rerender triggers eslint rule exact reason afforementioned believe totally valid attempted usecase", "d": "8/2018"}, {"body": "thanks providing example ensures conversation nt going circles need way setting followregion back true region passed props changes indicates new dataset written blog post preferred alternative reset state key nt id property increment integer every time change something like mechanism suggesting automatically reset changes discouraged notion change often nt really make sense example might want update unrelated reason later without triggering state reset nt option components assume every object identity change reset nt want use recommended solution sure need keep better state nt contradict article solution explicitly mentioned less recommended plausible verbose usually unnecessary like hope helps", "d": "8/2018"}, {"body": "ca nt go cause full rerender expensive map component load async displays loader go storing state thanks beers", "d": "8/2018"}, {"body": "may also worth mentioning causing eslint complain unused state field referenced via param passed rather via ergo eslint ca nt tell referencing state field", "d": "8/2018"}, {"body": "although eslint issue already reported", "d": "8/2018"}, {"body": "sounds like something fixed eslint rule", "d": "8/2018"}, {"body": "guess using version change try later", "d": "8/2018"}, {"body": "confirmed", "d": "8/2018"}, {"body": "seems like browser painting issue react one try recreate demo without using react see unrelated", "d": "8/2018"}, {"body": "right unrelated react", "d": "8/2018"}, {"body": "sure please use links discussion thanks", "d": "8/2018"}, {"body": "browser behavior cause also validfloatingpointnumber set react throw warning give empty input", "d": "8/2018"}, {"body": "could experiment codesandbox still called empty value type e additionally type anything e send value properly believe happening string ending e valid number eg string e followed integer eg remember valid number pointed notice called empty value nonnumber string eg looks quite consistent", "d": "8/2018"}, {"body": "yurickh spot thanks type characters see three change events valid number believe everything behaving intended however please let know case missed also super confusing part inputs happy continue conversation anything else needs clarification missed something", "d": "8/2018"}, {"body": "thanks guys look getting never gets called input becomes uncontrolled believe bug native event gets called correctly", "d": "8/2018"}, {"body": "get called see console log input get empty string setstate react see diff input change", "d": "8/2018"}, {"body": "correct numbers start invalid chrome reports empty string numbers added value reports empty string change occurs", "d": "8/2018"}, {"body": "sorry clear asking think bug react please provide complete reproducing example snippet need help find cheers", "d": "8/2018"}, {"body": "run", "d": "8/2018"}, {"body": "escaping attributes important security perspective could solve issue using different placeholder eg running string replacement output note would safe output nt include usercreated content otherwise risk security issue", "d": "8/2018"}, {"body": "could solve issue using different placeholder nt control party library placeholders would safe output nt include usercreated content user created content", "d": "8/2018"}, {"body": "hello let try clarify gaeron suggested approach output simple string feed sendgrid templating engine order replace tags variables want problem hand need tag inside react encodes workaround issue use different tag like react code running replace feeding sendgrid receives tags expected make clear use react code get string replace instances string feed resulting string sendgrid way need change party library placeholder feel free correct misunderstood suggestion well gaearon", "d": "8/2018"}, {"body": "yep suggested totally able", "d": "8/2018"}, {"body": "thanks guys makes sense", "d": "8/2018"}, {"body": "performance problems careful make sure html string coming trusted source since otherwise create security issue", "d": "8/2018"}, {"body": "also use html parser avoid using", "d": "8/2018"}, {"body": "shipping html parser client parse pregenerated svg seems excessive would create performance issue unless compile time", "d": "8/2018"}, {"body": "gaearon yep valid point", "d": "8/2018"}, {"body": "intentional people write expect fire regardless whether apple engineers agree react normalizes behavior", "d": "8/2018"}, {"body": "hmm never mind misread post", "d": "8/2018"}, {"body": "component ca nt reusable different contexts unless making prop version component wrapping another one uses context directly exactly would suggest bold part nt see anything wrong fact means component ca nt contextual reusable different contexts time nt see disadvantage reusable different contexts valuable", "d": "8/2018"}, {"body": "maybe could provide information used old approach practice significantly convenient would need show code usage site well compare", "d": "8/2018"}, {"body": "elaborating want add one note understating one main problems new context api solves rerender problem legacy api problem irrelevant nonstate context callback functions actions exactly would suggest bold part nt see anything wrong wrong less flexible imo elaborating nt see disadvantage reusable different contexts valuable component would use contextual component practically becomes nonreusable different contexts javascript export class contextuallink extends reactpurecomponent render return navto gt export class loginform extends reactpurecomponent render return sign export class signup extends reactpurecomponent render return login loginbox signup reusable use contextual component would make configurable maybe passing link component prop version would feel like passing props levels legacy context api components reusable javascript export class link extends reactpurecomponent static contexttypes navto propstypesany handleclick e gt epreventdefault const path thisprops thiscontextnavto path render const path props thisprops return export class loginform extends reactpurecomponent render return sign export class signup extends reactpurecomponent render return login", "d": "8/2018"}, {"body": "give complete example reusing different context helpful", "d": "8/2018"}, {"body": "reusing within different apps mock app testing utilizing different routing implementations javascript export class extends reactpurecomponent navto path gt thissetstate path gt historypush path getchildcontext return navto thisnavto render const path thisstate return path login amp amp path signup amp amp export class extends reactpurecomponent navto path gt thissetstate path gt windowlocationhash path getchildcontext return navto thisnavto render const path thisstate return path login amp amp path signup amp amp test app window browser export class testapp extends reactpurecomponent navto path gt thissetstate path gt consolelog path changed getchildcontext return navto thisnavto render return", "d": "8/2018"}, {"body": "rendering different values undesirable", "d": "8/2018"}, {"body": "knew missing something see done wrong kept using reactcreatecontext high level modules instead low level modules thank", "d": "8/2018"}, {"body": "problem", "d": "8/2018"}, {"body": "kobiburnley could please elaborate understanding found thoughts pretty interesting thread sure follow last comment solve problem reusability previously describing thank", "d": "8/2018"}, {"body": "gbarthos sure start mentioning still find implicitly legacy api bit elegant crucial understanding wrong new api realized get result wrong conception use reactcreatecontext short always used nearby providers actual context data existed instead nearby consumers example consumer component link provider component app let say link separated module dependencies app top level module depends link module first done app module javascript import react react import link link export const consumer provider reactcreatecontext navto gt export class app extends reactpurecomponent service navto path gt thissetstate path gt windowlocationhash path render return link module javascript import consumer app export class linkio handleclick e gt epreventdefault const path navto thisprops navto path render const path navto props thisprops return export class link extends reactpurecomponent render const path props thisprops return navto gt clear break modularity app depends link link depends app think confused name createcontext tricked always put actual instance context actually create context name implies utility components provide consume contexts opposite link nt depends app javascript import react react export const consumer provider reactcreatecontext navto gt export class linkio handleclick e gt epreventdefault const path navto thisprops navto path render const path navto props thisprops return export class link extends reactpurecomponent render const path props thisprops return navto gt javascript import react react import link provider link export class app extends reactpurecomponent service navto path gt thissetstate path gt windowlocationhash path render return", "d": "8/2018"}, {"body": "complement explicit nature intentional problem implicitness old api start running name clashes different libraries different parts large app share namespace kind like global variables", "d": "8/2018"}, {"body": "ok clearer thank", "d": "8/2018"}, {"body": "react wo nt ignore node keys type react treat update resulting dom operations example would change text content li key change text content li key add list item key content specified keys stable nt would prepend first item without updating two specifying keys important", "d": "8/2018"}, {"body": "gaearon thanks maybe could explicitly stated relevant section docs also think author exactly correct suggesting react would also compare child node hence redraw thanks good luck ps ah basically docs comparing two react dom elements type react looks attributes keeps underlying dom node updates changed attributes changes attributes case happen children", "d": "8/2018"}, {"body": "maybe could explicitly stated relevant section docs open source prs welcome", "d": "8/2018"}, {"body": "gaearon ok thanks said previous comment docs state react update changed attributes case changed attributes happen child nodes right", "d": "8/2018"}, {"body": "recurse children section looking children case text nodes updated", "d": "8/2018"}, {"body": "nt need fire lifecycle hooks manually share example please", "d": "8/2018"}, {"body": "expecting reacttestrenderer would support testing component reaction different lifecycles capable use shallow rendering nt understand means test renderer shallow renderer two different renderers mean test renderer support shallow rendering complete example would help clear asking", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "gaearon example second test fails nt know get component updated state rerender possible get rerender state", "d": "8/2018"}, {"body": "think might misunderstanding test fails nt need call react already however inside test wo nt wait tests synchronous default asserting callback fired normally depending actually want test could mock mock data fetching layer something else", "d": "8/2018"}, {"body": "gaearon thanks understood exemplify real scenario call asynchronous function test succeeded need wait asynchronous execution sure mock could solves problem googling found examples using mocks want know way asynchronous test", "d": "8/2018"}, {"body": "fabricioffc handling asynchronous code tests responsibility test runner using eg jest mocha jasmine etc using jest check testing asynchronous code docs page", "d": "8/2018"}, {"body": "aweary must confusing something using function need get rerender version component think possible seems intended synchronous testing need test async function need mock turn synchronous sorry missing something know mocking solve problem want know alternative make integration test component data fetch layer", "d": "8/2018"}, {"body": "test renderer opinions whether code synchronous asynchronous like reactdom nt care using create function reacttestrenderer need get rerender version component think possible call component rerender reactdom test renderer", "d": "8/2018"}, {"body": "sorry nt seem related react use issue tracker bugs react welcome consult support resources", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "gaearon ok seems like works designed please rename misleading method name getderivedstatefromprops implies need derive state props", "d": "8/2018"}, {"body": "want write", "d": "8/2018"}, {"body": "derivestate", "d": "8/2018"}, {"body": "purpose method still derive state props call often prevent common bugs mean purpose method changed case likely using method without good reason please see blog post describe simpler alternatives", "d": "8/2018"}, {"body": "yeah kind need component remains screen new instance created props cause renders new object way getting props preprocessing props think issue fact order use method correctly forceassume developer would id able understand change need preserve prop state order know got new props let ask point making method static actually stateful pass prevstate method static manage component classes hierarchy implement method nt get yet see coming", "d": "8/2018"}, {"body": "please read existing conversation around method including blog post linked asking folks resay everything said already thanks", "d": "8/2018"}, {"body": "really appreciate guys responsiveness still disagree", "d": "8/2018"}, {"body": "component remains screen new instance created props cause renders new object way getting props preprocessing props way also force recreated providing key changes need reset state described preprocessing props also vague want calculate data based props nt need state instead calculate right use eg render method memoize necessary described point making method static actually stateful pass prevstate discourage people putting side effects mutating instance fields would defeat purpose introducing new method manage component classes hierarchy implement method nt use inheritance hierarchies react insist course figure manage", "d": "8/2018"}, {"body": "gaearon dude extremely patient appreciate posts detailed replies read lot also force recreated providing key changes need reset state described understand components controlled uncontrolled types everything custom checkbox object properties editor object type complex object tens fields also subeditors preprocessing props also vague get object editor might missing properties old version bug preprocessing initialize objects arrays editable properties assign default values purpose editor edit create object type discourage people putting side effects mutating instance fields would defeat purpose introducing new method thought nt use inheritance hierarchies react insist course figure manage luckily fair share hierarchy vs composition java developer years yes places need abstraction force commonality inheriting objects editors example another post problem parents rerender getderivedstatefromprops would also get called component example even react parent rerender would reset selection values though document id changed analytics call would also fire twice choice pass prop would act unique id case controlled component distinct new object render thanks", "d": "8/2018"}, {"body": "dude extremely patient appreciate posts detailed replies read lot haha thanks glad help get object editor might missing properties old version bug preprocessing initialize objects arrays editable properties assign default values purpose editor edit create object type might want check sounds relevant particular solve applying default values point need instead trying propagate upwards", "d": "8/2018"}, {"body": "maybe provide reduced runnable example trying accomplish could look refactoring", "d": "8/2018"}, {"body": "haha thanks glad help might want check sounds relevant comment particular solve applying default values point need instead trying propagate upwards point could definitely even move rendering method create one instance future use instance properties used children editor must managed parent thanks ton", "d": "8/2018"}, {"body": "maybe provide reduced runnable example trying accomplish could look refactoring nt understand difficult accept concept breaks barrier new props new state know mean", "d": "8/2018"}, {"body": "provide example still try look", "d": "8/2018"}, {"body": "help", "d": "8/2018"}, {"body": "try", "d": "8/2018"}, {"body": "think confused props state works want controlled parent remove local state try sync props state instead let component accept props parent owns state pass please read documentation lifting state similarly despite suggestion thread want use please read blog post hope helps", "d": "8/2018"}, {"body": "saying state change intended checkbox stays unchecked even value true proven console log state returns true checkbox unchecked checking checkbox state changes false checkbox state true parent pass every props every etc input props controlled parent capture changes inputs form component think form user create new edit edit populate form values passed parent set values form props else value never change user tries edit example state may updated value input always remain form mounted edit blank form default value needed props passed parent local state needed thisstate name age male false female false componentdidmount thispropsforms thissetstate thispropsforms thispropsforms name john age male true female false hope makes sense use workaround", "d": "8/2018"}, {"body": "state may updated value input always remain thispropsvalue normally parent would nt pass prop becoming hard discuss without runnable example create something codesandbox similar help otherwise afraid going keep talking past one another", "d": "8/2018"}, {"body": "sum components react either fully uncontrolled case custom would take prop pass dom state would inside component prop value would ever used component first rendered ignored parent would way force state become something else ever need reset input mount different key fully controlled case custom would receive props pass dom scenario would nt state instead would need manage state many inputs writing separate handler annoying use handler nt try mix controlled uncontrolled paradigms one component makes confused receive something prop nt try put state sync instead either keep fully uncontrolled lift shared state remove child hope helps", "d": "8/2018"}, {"body": "ca nt reproduce error codepen error went away try replicate yesterday love programming thanks great learning experience", "d": "8/2018"}, {"body": "describe plan use detail pseudocode examples would help", "d": "8/2018"}, {"body": "ca nt get keys react elements could make keys call something else pass props", "d": "8/2018"}, {"body": "async views react native application looks like normal one put list mobile app one nice features mobile views reused reason need ability match views different rows update carefully make work need keys specified source layout generation keys reconciler function nt help since need stable way generate thanks", "d": "8/2018"}, {"body": "purecomponent shallow equal related props state rerender props passed component shallowly equal previous ones nt check state values equal compare state however example would still nto work shallowly equal value new object every set", "d": "8/2018"}, {"body": "purecomponent shallow equal related props state correct doc says shallow prop state comparison src code", "d": "8/2018"}, {"body": "oops yes right p thinking clearly second point still holds shallow ly equal example", "d": "8/2018"}, {"body": "performs equality iterating keys object returning false key values strictly equal arguments returns true values keys strictly equal function shallowequal obja mixed objb mixed boolean obja objb return true typeof obja object obja null typeof objb object objb null return false const keysa objectkeys obja const keysb objectkeys objb keysalength keysblength return false test keys different b let lt keysalength hasownpropertycall objb keysa obja keysa objb keysa return false return true purecomponent shallow equal related state wrote demo prove also shallowequal like see source code", "d": "8/2018"}, {"body": "shallowly equal two different objects therefore shallow equality check fails", "d": "8/2018"}, {"body": "gaearon actually want know difference purecomponent shallowequal according src code", "d": "8/2018"}, {"body": "mean individual properties afaik compared using algorithm slightly different also handles nan", "d": "8/2018"}, {"body": "set documentlevel capture listener nt seem like needs done react also override element prototype", "d": "8/2018"}, {"body": "exactly web browsers running tvs react supports later equivalent may require polyfills depending environment", "d": "8/2018"}, {"body": "events fired order although recommendation click event fired change event try remove dom element click action place dom change event ignored moment event firing element part document dom wrote sample vanilla try safari chrome firefox current browser safari mac fires change click chrome fires click dynamically generated checkboxes chromes behavior actually expected behavior change event occur result click event fired afterwards", "d": "8/2018"}, {"body": "think unexpected behavior difference native elements caused fact react listens events trigger synthetic events better crossbrowser support behavior subject change one thing try work around attaching native event listeners event trigger dom update inside listener", "d": "8/2018"}, {"body": "thanks feedback sounds like best bet moment await outcome remove prop element try use native listeners instead element would longer controlled input would also problematic workaround moment trigger listen events instead cases would bubble happens external script outside react exists sigh tracking purposes", "d": "8/2018"}, {"body": "supported contribute react npm need use yarn", "d": "8/2018"}, {"body": "thanks run yarn build fails find module react", "d": "8/2018"}, {"body": "need run yarn first needs least yarn running yarn old", "d": "8/2018"}, {"body": "thanks much upgrade yarn build", "d": "8/2018"}, {"body": "paste comments cellog discord noticed behavior saturday pasting comments greg discord pm acemarke oh wow pm acemarke commits pushed way slower prior version pm acemarke think lot forwardref stuff pm acemarke dropped pm acemarke components pm acemarke could also implementation nt good pm cellog dammit pm cellog try removing forwardref see happens pm cellog speeds need add back withref pm cellog right pm cellog probably tell react team pm cellog huge issue performanceagnostic nt passing actual ref pm cellog ok running latest version uses forwardref withref set text forwardref catch folks using withref set true warn rely getwrappedinstance since nt exist pm cellog implementation better let see matches pm acemarke yeah thinking introduce new forwardref option something pm cellog ok pushed commit pm cellog version get slightly faster old one still fps slower pm cellog ballpark going rerun see change pm cellog disabling forwardref mine faster pm cellog fps pm cellog", "d": "8/2018"}, {"body": "clarify disabling forwardref unless explicitly asked fps doubled significant performance increase happened running large numbers stocks stocks performance patches fps performance hits occurred stocks also note showed fps measure chrome traces also generated benchmark app separate run turnaround time processing state updates double length milliseconds passed forwardref clarity important note refs actually passed benchmark app nt specific ref handling forwardref refs passed", "d": "8/2018"}, {"body": "benchmark use reproduces problem react react redux", "d": "8/2018"}, {"body": "sure redux part benchmark minimal needs stripped need post ready", "d": "8/2018"}, {"body": "good go run env variable forward set enable forwardref leave disable nt figured modify benchmark pass env variables perhaps nt needed since trace manually chrome version basically redux quite slow changed number components adjust make smaller", "d": "8/2018"}, {"body": "measuring record traces production build see versus kind difference referring", "d": "8/2018"}, {"body": "case measuring overall fps app running script print recorded fps puppeteer running benchmark well recorded chrome perf stats second run tracing enabled example kinds numbers seeing recently copied pasted issue ran another perf benchmark set connected components fps avg minmax chrome trace time split results one test runs fps scripting painting rendering general seeing wrapping components drops overall app fps several digits matter internal implementation using know best possible benchmark managed put together far", "d": "8/2018"}, {"body": "compare wrapping functional component instead forwardref", "d": "8/2018"}, {"body": "okay got benchmark numbers add builds order current build branch stuff added branch related changes previous using functional component instead previous wrapping exporting branch always using branch made optin build avg fps scripting rendering painting attaching zip file captured chrome perf traces reference note per benchmark repo avg fps chrome trace captured separate runs build trace capture nt slow fps react issue reactredux perf benchmark traceszip per branch results looks like using using functional component around rest slow things noticeably compared extra component wrapper bit slower functional component", "d": "8/2018"}, {"body": "think worth looking worse results add component layers eg wrap extra n extra n passthrough functional components show similar slowdown means application code thin even extra reconciliation layer starts matter case problem per se even optimize milliseconds still increase number rows find next spot adding reconciliation layer prohibitively high words arguing adding expensive enough shows bench might adding layer expensive point might well reconsider using react altogether part app consider using virtualization point ca nt add one component tree without going budget", "d": "8/2018"}, {"body": "yep weakness one benchmark app far measures one primary metric like get us set several benchmark apps well would run scenarios", "d": "8/2018"}, {"body": "yes part trying measure heavy reactredux stressful environment like stock ticker app little things naturally amplified benchmark helpful finding several unnecessary slowdowns also proved decisively using dramatic positive effect blowing performance water however highlight forwardref expensive situation think useful react perspective fact forwardref also expensive benchmark even refs present presents opportunity look whether necessary expense concluded better avoid forwardref unless user explicitly asks similar reactredux works anyways based learned conclude yes risk expense worth issue closed perhaps mark documentation issue want note library authors forwardref expense certain environments lots components updating rapidly", "d": "8/2018"}, {"body": "however highlight forwardref expensive situation think dan trying tease tho whether forwardref expensive thing slow result components forwardref fault may something optimize latter tho question may app complex enough approximate complex react app eg replaced every forwardref extra hoc would slow comparable", "d": "8/2018"}, {"body": "per benchmarks pasted bit earlier looks like bit expensive trivial functional component fps vs fps run vs fps neither", "d": "8/2018"}, {"body": "right assume forwardref expensive component life cycle weight yes", "d": "8/2018"}, {"body": "lifecycle weight expect roughly equivalent functional component way one get render function also means nt use lifecycles move rendering logic forwardref callback thus removing layer inside go back one layer", "d": "8/2018"}, {"body": "equivalent functional component would interesting profile makes different obvious", "d": "8/2018"}, {"body": "yeah problem class component absolutely needs lifecycle stuff try rerunning benchmark couple times obviously lot difference wrapping wrapping functional component implementationwise enough difference seems like actually something different", "d": "8/2018"}, {"body": "currently use lifecycle", "d": "8/2018"}, {"body": "hmm pr using outerinner component approach bulk work inner component outer component binding couple methods constructor pr connectadvanced greg pr huh okay also binding couple methods constructor pr connectadvanced cases class method given render prop context consumer bound safely access also memoized selector function created percomponentinstance selector reference saved instance field component actually lot nt immediately see way functional component", "d": "8/2018"}, {"body": "see suggesting way create perinstance cache functional component would happily convert toplevel component one use forwardref benchmark", "d": "8/2018"}, {"body": "ok tried way create perinstance cache outside class component figure wo nt work basically order prevent unnecessary rerender unimportant part state updating use something save state functional component ca nt ways solve api change future focusing getting something legacy apps use path migrate new api without complete rewrite", "d": "8/2018"}, {"body": "want release something works might help cases take months get", "d": "8/2018"}, {"body": "depends get comprehensive benchmark suite running pr follow still internal maybewillhappen", "d": "8/2018"}, {"body": "definitely happen nt expect definitely see pr end october", "d": "8/2018"}, {"body": "ok probably best pretend nt exist unless allowed give hint prepare code ready mysterious exciting releasing new iphone", "d": "8/2018"}, {"body": "think works expected component instance merely passes ref receives second argument nt know going happen ref example attached later gets attached way know could passed completely different child since component nt instance nt return anything understand annoying truth traversal utilities nt great general better traversal api test renderer react dom nt expose might want revisit part later", "d": "8/2018"}, {"body": "thanks gaearon afraid honest find utilities useful simply finding instance component asserting props passed finding difficult think may bypass using altogether recommended approach use mix enzyme shallow rendering raw thank", "d": "8/2018"}, {"body": "considered keeping original type attached property wrapped one search tests see difficulty", "d": "8/2018"}, {"body": "nt think might work sure completely understand mean try dive react internals application code suggesting something like attaching property object returned tree traversal methods use pick sorry already see referring", "d": "8/2018"}, {"body": "thinking something like jsx const withmycontext component gt class mycontextconsumer extends reactcomponent render return reactforwardref props ref gt type component call things like referring thanks time", "d": "8/2018"}, {"body": "sure spreading function like would work mean yes search type", "d": "8/2018"}, {"body": "gotcha spread function return object seems work fine thanks tip", "d": "8/2018"}, {"body": "ahh right object yeah", "d": "8/2018"}, {"body": "gaearon solution worked beautifully development oddly deployed production production build caused time worked instances component reliably time cases noticed called infinite loop debugging bit nt come anything concrete try put together fiddle next couple days really concerning worked well dev prod ran issues heard anything like one last piece info kept backup branch using react context mentioned earlier conversation used worked perfectly dev prod think related", "d": "8/2018"}, {"body": "mean used testutils production need reproducing case something work", "d": "8/2018"}, {"body": "sorry nothing testutils reactcontext hoc returns forwardref written first comment try repro worried difficult instances app nt work one nt work different need spend time figure replicate wanted raise case seenheard anything insight happens production build", "d": "8/2018"}, {"body": "aware issues latest version", "d": "8/2018"}, {"body": "digging little believe issue uglify maybe compression step use webpack setup prod build operates correctly run issues pinpoint exactly make one comment reference file", "d": "8/2018"}, {"body": "unfortunately uglify notably buggy input suggest always transpiling uglifying", "d": "8/2018"}, {"body": "branch longer maintained either switch terser fork branch uglify always use uglify mode", "d": "8/2018"}, {"body": "longer maintained webpack still using", "d": "8/2018"}, {"body": "branch uglify still maintained webpack still uses default semver concerns webpack change minifier used default nt know terser used least decouple uglifyjswebpackplugin direct dependency webpack core also", "d": "8/2018"}, {"body": "nt actually think true know experience shipping minified code nt changed default minifier imagine using branch minify code would nt work", "d": "8/2018"}, {"body": "yes still work happen hitting bugs uglify branch", "d": "8/2018"}, {"body": "comment likely outdated idea supposed provided", "d": "8/2018"}, {"body": "setstate calling updater callback among arguments parameter never gets passed point", "d": "8/2018"}, {"body": "record would like get new state parameter callback recompose library allow us access inside callback", "d": "8/2018"}, {"body": "looking right implementation shim right one like propose change react api include please feel free send pr removes comment comment seems wrong", "d": "8/2018"}, {"body": "thanks information", "d": "8/2018"}, {"body": "react binds events document level experiencing selects specifically react actually uses browser event selects inputs textarea currently uses event see exact issue inputs block event think close duplicate would solve", "d": "8/2018"}, {"body": "please see discussion intentional", "d": "8/2018"}, {"body": "antibeginner opinion standard unpkg urls point development builds breaking user expectations much worse default url literally error browsers support common js serve development build displayed react devtools extension anyway", "d": "8/2018"}, {"body": "way concern user knowing development build provided default would probably already know using unpkg packages unpkg redirects user full umd file path making path used default clear example redirects clearly unminified build development", "d": "8/2018"}, {"body": "antibeginner opinion react nt make choice antibeginner react antiperformance either way somebody unhappy see discussion educate developers differences builds way force choose one think drop script tag page without thinking whether dev prod build going keep seeing sites ship development versions production hurting user experience unpkg redirects user full umd file path making path used default clear read redirect result url standard unpkg urls point development builds breaking user expectations mean standard libraries libraries dev builds several times larger smaller like react dev build much worse default url literally error browsers support common js serve development build agree nt know attempts serve commonjs entry point stands instead would great served page suggested find proper umd build inside", "d": "8/2018"}, {"body": "unpkg could provide firstclass support multiple explicitly chosen umd versions example works versions since reserved wo nt cause clashes could work special fields eg packages opted unpkg could display better error page attempt load directly show disambiguating links right seems like best worlds", "d": "8/2018"}, {"body": "unpkg interested implementing could", "d": "8/2018"}, {"body": "still disagree using stopgap solution like suggestion unpkg way choose alternative entry points without knowing full file path maybe could even make obvious package nt default entry point development production crosspost issue", "d": "8/2018"}, {"body": "provide complete example please example codepen codesandbox", "d": "8/2018"}, {"body": "sorry familiar codepen view render really really sorry code find filteritem rendered filters component well position wrapped component example wrapped layout component like row col expected filters component fault good codepen sorry bother gaearon", "d": "8/2018"}, {"body": "ca nt access component renders using utilities might support something like future different api possible today", "d": "8/2018"}, {"body": "really appreciate taking time question thanks lot gaearon like", "d": "8/2018"}, {"body": "gaearon currently thought share us iirc write recursive walk tree util gist call get component renders thought problems new api similar", "d": "8/2018"}, {"body": "component wants receive element argument", "d": "8/2018"}, {"body": "however problem react synchronously perform operations read dom use various methods schedule work done asynchronously later time provide example far know current versions react perform work synchronously", "d": "8/2018"}, {"body": "sorry probably way familiar react mostly worked attended talks works internally however impression react use things like order schedule work actually goes modify real dom quick search shows methods used source code tests exist assert used though apologize take time see exactly used case actually modify real dom synchronously stateprop change", "d": "8/2018"}, {"body": "react currently use practice plans use optin", "d": "8/2018"}, {"body": "catdad tried using wait utility async operations may want wait specific changes making assertions using timeouts may still make tests flaky quick example using protractor api top selenium webdriver promise manager disabled javascript example let assume need get list names rendered link button clicked async function openuserlist let trigger await element somebutton return triggerclick async function getusernamelist ensure necessary root element available subsequent element queries await browserwait gt isuserlistpresent optional timeout continue necessary queries transforms let useritems await elementall userlist listitem let usernames await promiseall useritemsmap item gt itemgettext return usernames async function isuserlistpresent let userlist await element userlist return userlistispresent show user list async gt await openuserlist let usernames await getusernamelist expect usernames toequal liza ann", "d": "8/2018"}, {"body": "exporting react element component change js import react react const companyiconinheader export default companyiconinheader js import react react function companyiconinheader return export default companyiconinheader alternatively call site change words something like nt work", "d": "8/2018"}, {"body": "write deal nt think good way", "d": "8/2018"}, {"body": "hi use issue tracker bug reports feature requests react looks like question either react router dom apis question please check community support resources", "d": "8/2018"}, {"body": "muyunyun use copy values target object object anymore js const state objectassign thisstate thisstate state true safe use operator object since object anymore means mutating directly also would nt use use case since nt need copy values operation would", "d": "8/2018"}, {"body": "recommended way", "d": "8/2018"}, {"body": "yordis thanks reply much maybe want know little js const count const count true true known effect objectassign create another obj ok value count equal think value like value count problem operation", "d": "8/2018"}, {"body": "muyunyun already change state new version", "d": "8/2018"}, {"body": "aliast surprised understand thanks writen post issue chinese", "d": "8/2018"}, {"body": "hi sophie would nt mind picking issue thats alright local debugging seems like condition checking changed true scrolling top page instead checking either showdetail changed currentid changed", "d": "8/2018"}, {"body": "sure send pr guess current id change showdetail already true would want scroll top guess possible current ui though", "d": "8/2018"}, {"body": "seems like issue closed right", "d": "8/2018"}, {"body": "hi use issue tracker bug reports feature requests react react nt anything routing definitely unrelated react question react library please check community support resources", "d": "8/2018"}, {"body": "nt think output html safe minify plan later hydrate client example comment nodes text like important react hydrate correctly", "d": "8/2018"}, {"body": "gaearon hydrate used client check match checksum minify said unsafe including comment node learned lot thank much", "d": "8/2018"}, {"body": "react nt checksum comparisons since react emitted comments server expects find client", "d": "8/2018"}, {"body": "gaearon yeah comment earlier thank politely", "d": "8/2018"}, {"body": "sure", "d": "8/2018"}, {"body": "gaearon would love take one whats difficulty level", "d": "8/2018"}, {"body": "sure since always broken guess easiest one even sure solved nicely", "d": "8/2018"}, {"body": "gaearon solved passing input value moment along running setstate", "d": "8/2018"}, {"body": "maybe nt dived deep send pr", "d": "8/2018"}, {"body": "wat one else trying track", "d": "8/2018"}, {"body": "sorry ca nt figure another way add another snapshot argument ugly let", "d": "8/2018"}, {"body": "yarn version", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "close due resolved seems run rather", "d": "8/2018"}, {"body": "nothing nt think expect reason need reference call used line", "d": "8/2018"}, {"body": "sorry noise", "d": "8/2018"}, {"body": "problem appreciate filing issue", "d": "8/2018"}, {"body": "take recommendations grain salt single wrapping div wo nt make meaningful difference case rendering directly body fragile thirdparty scripts like google web fonts many browser extensions put stuff app break cases warning good reason absolutely must follow recommendation make html like render react app element", "d": "8/2018"}, {"body": "thanks also would like render better put inside", "d": "8/2018"}, {"body": "make root component render get appended nt show dom", "d": "8/2018"}, {"body": "possible load loaded one thinks symbol supported one thinks symbol nt supported would get sync lead confusing behavior see similar problem search checks bundles put logs verify agree whether exists", "d": "8/2018"}, {"body": "thanks reply getting somewhere deconstructing app bitbybit surprising cause appears google maps loading google maps javascript api script tag loading bundled app another script tab reverse works looks like google maps api includes symbol polyfill somehow confusing things still none wiser though looking lines code suggested even confused three instances see react libraries react reactdom reactis checking three say exist appear point function far tell corejs implementation google maps irrespective whether google maps loaded first last bundled application react libraries appear use corejs polyfill symbol issue mystery loading google maps first influence also since mentioned case google maps thing red herring pretty sure loading babelpolyfill everything else following webpack config far aware load polyfill anything else thanks", "d": "8/2018"}, {"body": "reduce reproducible example know something google maps take look", "d": "8/2018"}, {"body": "thanks think got bare bones able run look dom internet explorer see weird tag click update button component rerenders tag goes away reverse script tags indexhtml google maps loaded last weird tag never appears first place", "d": "8/2018"}, {"body": "thanks wo nt time dig close future leave somebody motivated", "d": "8/2018"}, {"body": "dealt issue instantsearchjs using preact fix", "d": "8/2018"}, {"body": "check though", "d": "8/2018"}, {"body": "problem corejs polyfill uses global symbol nt get polyfilled already defined gmaps however maps implementation symbol returns string correct implementations return actual symbol object possible check symbol returns value valid type quite hacky though sure whether check implemented corejs react", "d": "8/2018"}, {"body": "sanniassin pointed google maps polyfill causing return strings various places react code check typeof element often checking string types checking symbol eg", "d": "8/2018"}, {"body": "google maps polyfill causing symbol return strings jeez okay report", "d": "8/2018"}, {"body": "issue solved fixing version google maps tried example working fine", "d": "8/2018"}, {"body": "mean newer version fixes older one", "d": "8/2018"}, {"body": "unfortunately older one", "d": "8/2018"}, {"body": "seems issue symbol polyfill implementation closure compiler see sam saccone tweet", "d": "8/2018"}, {"body": "filed nt think adding bad symbol polyfill checks imo something gcc fix", "d": "8/2018"}, {"body": "according one workaround would ensure code run via executes earlier google maps bundle guess could load google maps api asynchronously assume loaded yet app code creating dynamic script tag hooking event", "d": "8/2018"}, {"body": "thanks ended bundled app first script run corejs gets install polyfill first adding google maps library also done loadgooglemapsapi library ensure done within polyfilled app parts app use works well thanks help", "d": "8/2018"}, {"body": "gaearon given documentation suggests works seems like bug feature request", "d": "8/2018"}, {"body": "craigkovatch see coming given pressure reduce react bundle size bar polyfilling something especially ie really high technically missing functionality tagged feature request fix small get complicated likely amend docs needs investigation fix", "d": "8/2018"}, {"body": "gaearon gotcha clear though ie also edge safari lt think significant surface area although sure browser support policy nonie", "d": "8/2018"}, {"body": "need look normalization would involve lot code think", "d": "8/2018"}, {"body": "nominating raunofreiberg nt want create work", "d": "8/2018"}, {"body": "want say artifact older defaultvalue handling selects", "d": "8/2018"}, {"body": "removing completely appears effect test suite", "d": "8/2018"}, {"body": "nhunzaker take one first time contributing react purely reading code seems like assessment initialvalue used seems correct happy investigate", "d": "8/2018"}, {"body": "go", "d": "8/2018"}, {"body": "hey nhunzaker raised pr change", "d": "8/2018"}, {"body": "fixed thanks kartiklad", "d": "8/2018"}, {"body": "createsubscription calls getvalue constructor save result state componentdidmount called changes ignored right however checks value changed case handled remount component wrapped createsubscription component something componentwillmount modify source value get wrong value componentdidmount new component provide live example demonstrating nt think fully understand clear example provided corresponds example actually uses would helpful", "d": "8/2018"}, {"body": "js const source new behaviorsubject status initial loading error aborted complete const controller load gt abort gt const subscription createsubscription class content extends reactcomponent componentdidmount initial aborted includes thispropsstatus controllerload componentwillunmount controllerabort render class container extends reactcomponent render return remount loading", "d": "8/2018"}, {"body": "rx could provide example could easily run eg codesandbox sorry extra work takes lot time look issues preparing runnable example greatly increases chances looking depth", "d": "8/2018"}, {"body": "gaearon tried make runnable example yesterday found umd version createsubscription npm gave joy take look codesandbox try make online example later", "d": "8/2018"}, {"body": "gaearon click remount button loading status hardcoded time see happened expected behavior componentdidmount get status aborted try reload current behavior componentdidmount get status loading incorrect", "d": "8/2018"}, {"body": "nt look like bug eventually gets right value guaranteed uptodate value inside happens child runs first time nt know outdated yet parent runs know value changed parent schedules state update however time child already run late hope props reflect update seems logic checks insufficient add similar check possibly also checking nt status avoid extra work every update sufficient", "d": "8/2018"}, {"body": "gaearon could aborted user eg clicking button labelled abort case nt try reload anymore remount component try reload even aborted user checking status enough detect whether aborted user", "d": "8/2018"}, {"body": "add another status may resolve problem makes code complex check check confusing", "d": "8/2018"}, {"body": "opinion main problem use createsubscription get value case check value something lifecycle render", "d": "8/2018"}, {"body": "mental model guarantees rendered value screen recent one subscription cleaned unmount think pull interface underlying value fact even sure guarantee called every intermediate value eventually latest one view nt great place async control flow mechanics trying implement think like final consumer async value want control already use rx sounds like moving outside component sort observables subscriptions combinators would make sense lets pull display latest values thispropsstatus stategetvalue status componentdidmount props latest pulled copy pull screen gets updated guarantee particular lifecycle reading recent value props rather guarantee end screen reflects latest value case value changes initial render mount second pull happen parent wrapper mounts cause child update", "d": "8/2018"}, {"body": "want control already use rx sounds like moving outside component sort observables subscriptions combinators would make sense difference two things imho ways rely lifecycle mount unmount check status something load abort difference get status createsubscription subject directly", "d": "8/2018"}, {"body": "anyway thanks detailed explanation", "d": "8/2018"}, {"body": "difference like eventually consistent pull mechanism unlike rx combinators guaranteed execute every value change happens", "d": "8/2018"}, {"body": "props latest pulled copy yes right problem createsubscription stand clear thanks", "d": "8/2018"}, {"body": "thanks repro cases helpful discussion", "d": "8/2018"}, {"body": "seems similar description ca nt response transition data changing comment", "d": "8/2018"}, {"body": "please provide complete example enough reproduce problem", "d": "8/2018"}, {"body": "raise example link work well js const modal button antd class app extends reactcomponent state visible false showmodal gt thissetstate visible true gt consolelog documentgetelementbyid test handleok e gt consolelog e thissetstate visible false handlecancel e gt consolelog e thissetstate visible false render return contents null contents contents reactdomrender mountnode link nt work project think setstate callback called untill dom rendered like get real dom directly get dom setinterval wait dom really rendered one get dom another get null", "d": "8/2018"}, {"body": "nt seem react issue example without antd using react portals see works expected therefore issue antd library works react please file issue library thanks", "d": "8/2018"}, {"body": "ok thank", "d": "8/2018"}, {"body": "another fun inconsistency noticed props eg treat truthy way html opposite props behave case since react earlier", "d": "8/2018"}, {"body": "maybe always warn passing string boolean attribute seems like always counterintuitive get", "d": "8/2018"}, {"body": "gaearon yeah definitely board way unify although thinking case newlyspecced html attribute looks like currently reliable thing behave whether react dom whitelist maybe one tentative argument blanket warning string values passed boolean attributes focusing actuallyambiguous cases instead", "d": "8/2018"}, {"body": "hmm lot searching found say might related jest babel create default reactnative project awesome project added packages create simple component render function returns run test render function error thrown", "d": "8/2018"}, {"body": "problem upgrading reactnative tests wo nt run done lot digging debugging found class components etc render method instance however make items stateless functional components render method exists instance expected removing going directly jest processor worked lost hoisting capabilities mocks nt work still unsure going", "d": "8/2018"}, {"body": "sorry nothing help react repository already said issue caused react define class method nt work problem transformation pipeline nt know problem react native preset definitely react issue people fix nt maintainers repository keep discussing wo nt see please file issues jest react native babel thanks", "d": "8/2018"}, {"body": "likely best place file issue react native repository issue likely related babel upgrade might version mismatch related babel preset", "d": "8/2018"}, {"body": "looked reproducing example able fix running particular issue project mistakingly pulled incompatible react native uses fix remove unnecessary wrong toplevel dependency check see remove least ensure version metro depends make sure nt see two different versions hope helps", "d": "8/2018"}, {"body": "sorry came online thanks help", "d": "8/2018"}, {"body": "thanks tip dan nt seem work case unfortunately created issue along repo highlights regression", "d": "8/2018"}, {"body": "diving deeper considered virtualizing list eg see reconciliation bottleneck sign might rendering items necessary", "d": "8/2018"}, {"body": "hello nt bottleneck today nt want receive tomorrow complexity n reconciliation gt n complexity gt n could nt ok createlistcomponentjs includes overcomplicated still returns element reconciliation process process still game", "d": "8/2018"}, {"body": "complexity n reconciliation gt n complexity gt n could nt ok think oversimplifying vs n nt matter practical sense talking something takes less millisecond either way takes n might large enough need worry things number dom nodes complexity calculating styles painting often affects performance significantly react reconciliation reducing n notation missing crucial details way juxtapose n also nt acknowledge differences deep shallow reconciliation significant practice react nt let skip shallow reconciliation tiny slice time would take deep reconciliation definitely skip deep one either something like caching react elements likely find skipping shallow reconciliation nt bring measurable benefits encourage ground discussion practical example experience n vs starts mattering reconciling eg list insertion point much significant ways optimize app either windowing technique bailing reconciling children hope makes sense", "d": "8/2018"}, {"body": "sorry simple example returns generic subtree components complexity could like generic data reconciliation take much millisecond result append single item move could take comparable amount time become issue could nt provide simple solution trap let consider stock exchange managing huge list stocks complexity best available amount server events huge mutations price changes position changes price change leads fast useless shallow deep reconciliation stocks price mutation could become issue time method could mutations windowing technique wo nt generic solution could nt select content ctrl hotkey use content search ctrl f hotkey print page etc wo nt possible fix native browser functionality requires dom elements sittings places ok countrystate selection autocompletes etc data important", "d": "8/2018"}, {"body": "say something like stock exchange pretty much worst case pick react everything updating time nt optimize react use case relatively uncommon apps significantly stable uis performancecritical piece might make sense completely skip react update text nodes manually using refs still use normal react data flow rest app optimize specific piece separately hard say whether even necessary without specific example become issue could nt provide simple solution trap still productive way discuss hypothetical performance problem build small stress test demonstrates many rowscolumns going many updates per second deep component tree think would take hours build artificially increase rendering time component simulate deeper tree worried look example discuss specific fixes could get trap purely theoretical consider tradeoffs case never want trapped best way ensure use library", "d": "8/2018"}, {"body": "seems scenario little like timeslicing demo dan shows talk btw nt use threejs corresponding react library rather plain react", "d": "8/2018"}, {"body": "sure provide later small example investigate react code bit provide better performance measurement wondering one interface react component method sure strongly connected reconciliation process nt want say process bad omitted every day saw issues reconciliation etc think react provide better abstraction around process give user chance provide custom reconciliation avoid sometimes", "d": "8/2018"}, {"body": "reconciliation moving nodes around upcoming features like time slicing suspense require lot internal coordination exposing even simple hooks userland leave us unable implement features efficiently common case ultimately custom mechanism hand use refs need component everything imperatively fact even combine approach portals continue declarative rendering parts trying skip", "d": "8/2018"}, {"body": "please check section docs need include polyfills older environments", "d": "8/2018"}, {"body": "error seeing", "d": "8/2018"}, {"body": "read source code could enabled reactfiberjs reacttestrendererjs", "d": "8/2018"}, {"body": "mean legacy context nt think want add apis supporting given new context api fully supersedes clear suggestion would work new context api single particular context component reads context uses think test component uses nt need test whether context works something already test inside react", "d": "8/2018"}, {"body": "hey gaearon thanks quick answer use case built provider wrapper around prebuilt components would like test provider actually passes context wrapped components example js const component renderercreate text let button componentrootfindbytype button expect buttoncontext tohaveproperty theme solution transform context prop inside wrapper", "d": "8/2018"}, {"body": "sounds like really testing react need plenty tests context want verify something context testing output presumably uses context somehow", "d": "8/2018"}, {"body": "hmm see point trying test implementation provider wrapper matter fact essentially react test", "d": "8/2018"}, {"body": "achieve using destructuring function example use following object could remove using jsx const demo key ref classname button button primary label click onclick gt consolelog button clicked const classname demo value key ref classname removed label click onclick gt consolelog button clicked however left unused var could also create function returns values interested jsx function removeprops key ref label onclick return key ref label onclick const demo key ref classname button button primary label click onclick gt consolelog button clicked const removeprops demo nt classname prop pass cloneelement function key ref classname removed label click onclick gt consolelog button clicked", "d": "8/2018"}, {"body": "guess could use directly reactcreateelement afaik also worry special attributes like key ref rather mess internals think maybe misunderstand tokland says props nt talking allow us define element control props nt need set something overrideremove something rather clone needs us provide nt agree tokland suggestion think need add judgement gaearon right dan", "d": "8/2018"}, {"body": "point view props removed even cloned element although seems logic href property undefined may also valid value use cases props also difficult even impossible follow clone cloned elements removed props reactjs users backward incompatible", "d": "8/2018"}, {"body": "another issue like reported first issue page please see tldr poorly named method really means something like error pass anything react element behavior want nt use", "d": "8/2018"}, {"body": "please try command npm react istead npm react", "d": "8/2018"}, {"body": "solved problem", "d": "8/2018"}, {"body": "cool going close hit issues take look support resources", "d": "8/2018"}, {"body": "nt think possible dom form know browser needs focus order fire events anyway react question going close issue", "d": "8/2018"}, {"body": "hey issue react caused recent movement browser vendors improve performance mobile devices events usually would fire scroll getting passive default google great article want know event passive call way browser render next frames scroll animation without wait javascript engine check comment mine talk way work around adding native nonpassive listener going close issue since track support passive event listeners feel free follow questions", "d": "8/2018"}, {"body": "browsers nt trigger change events programmatically change value observation see specific react pen consolidating value state single source truth value attempting set sync possible options", "d": "8/2018"}, {"body": "afraid nt really know consolidating value state single source truth anyone problem way workaround explicitly add invalid option means invalid option displayed users know must change something else however option dropdown way display state always sync", "d": "8/2018"}, {"body": "react javascript library influence code page works question seems using module clientside app since node module server side expect available frontend code image reason works webpack bundles kind polyfill polyfill might incomplete outdated please bring problem webpack related react thanks", "d": "8/2018"}, {"body": "use regular dom api want listen events app one place", "d": "8/2018"}, {"body": "help", "d": "8/2018"}, {"body": "thanks wanting help think good first step take look repository readme see reuse text packages open pr definitely iterate wording need perfect first try", "d": "8/2018"}, {"body": "agree current situation confusing thanks digging links see also attempt analyze behavior let keep open guess keeps coming suggestions work please file rfc discuss see way forward makes sense thanks", "d": "8/2018"}, {"body": "according docs reactchildrenonly reactchildrenonly kind test function filtering function expects single otherwise throws error assume name childrenonly confusing und sounds like filtering function returns valid child children would rename something like reactchildrenisonly reactchildrenischild reactchildrenisvalid reactchildrenissingle case expected result sounds like return value boolean function throws error case unexpected arguments better use conjunction componentdidcatch described error handling react", "d": "8/2018"}, {"body": "hi phiboi happening method called every time component updates happens update whenever props state changed like said catch snapshot property runs wo nt trigger rerender change call effectively trying update state triggers rerender method called taking another snapshot value updating view seems like state using properties like quite brittle tho would nt recommend go line hope got message across cheers", "d": "8/2018"}, {"body": "yurickh said right strongly recommend avoid code like easy break something changes keep state call explicitly ask update cheers", "d": "8/2018"}, {"body": "purpose duplicating need keep parent keep parent nt try sync state child parent leads complex hardtodebug code hope helps", "d": "8/2018"}, {"body": "pascalsenn future reference use issue tracker bug reports feature requests question please check community support resources", "d": "8/2018"}, {"body": "react nt load images see error like means rendered tag source url could nt load reason hope helps reproducing minimal example necessary us provide guidance", "d": "8/2018"}, {"body": "words requirement communication components providing consuming context string key used yeah upside easier share context intentionally big downside easy context clashes components nt actually want context best way handling far best approach thought using peer dependencies enforce package calling reactcreatecontext never duplicated nodemodules sounds reasonable like libraries already peer dependency react", "d": "8/2018"}, {"body": "hey aslanovsergey nt call instance returned call root example little confusing method renderer nt return test instance docs return instance corresponding root element available provides want returns root test instance object useful making assertions specific nodes tree hope helps", "d": "8/2018"}, {"body": "hi aweary thing root null typeerror read property findbytype undefined", "d": "8/2018"}, {"body": "react provide api", "d": "8/2018"}, {"body": "dan please say get documentation specific version react could nt find", "d": "8/2018"}, {"body": "documentations past versions starting sorry try looking likely missing test renderer new point documented yet case test renderer nt traversal api finding something type otherwise traversing hierarchy ca nt done without using private apis like enzyme", "d": "8/2018"}, {"body": "think point people wanted us xhtmlcompatible possible tried err side maybe nt really needed first place happy consider pr although promises whether going proceed would probably good could research past work eg somebody mentioned xml xhtml relation server rendering issues prs", "d": "8/2018"}, {"body": "sweet initial code already tinkering around idea spruce send", "d": "8/2018"}, {"body": "wo nt unmount component make render nothing cases equivalent want specifically unmount done parent rendering conditionally", "d": "8/2018"}, {"body": "solution always explicit upfront contexts going use", "d": "8/2018"}, {"body": "aside crossrenderer portals right implement render phase work", "d": "8/2018"}, {"body": "wo nt allowed sideeffectful things hard vue react thing", "d": "8/2018"}, {"body": "personal preference value gets automatically set like old one single values use one need hard conversation context abuse", "d": "8/2018"}, {"body": "vue react use case nt immediately use one probably want whole vue world access different contexts", "d": "8/2018"}, {"body": "sebmarkbage explicit amp transparent would pretty important able introspect set available contexts one example usecase vue react case building gutenberg components vue main reason context passing able use gutenberg builtins utilize context context usage party code work vue react library needs able either transparently pass contexts introspect contexts set pass", "d": "8/2018"}, {"body": "hacky workaround seems function could stand generalized javascript flow import react react import import settingsprovider settingsconsumer settingscontext todo react currently support seamlessly passing context portals therefore renderers including reactkonva canvas renderer see type props children reactelement barrierrender reactelement gt reactelement const contextbridge barrierrender children props gt gt settingsvalue gt barrierrender export default contextbridge usage example reactkonva javascript gt locale gt", "d": "8/2018"}, {"body": "whatever solution needs benchmark lt roots see tradeoff", "d": "8/2018"}, {"body": "hey danfessler adding native dom event listeners tried reproduce issue using html javascript without react pointer events fire case", "d": "8/2018"}, {"body": "appears indeed bug chrome tried suggestion vanilla js nt fire pointerup event either works firefox", "d": "8/2018"}, {"body": "post link jsfiddle anything found sometimes needed chrome behave properly", "d": "8/2018"}, {"body": "also tried adding touchaction manipulation div style nt help", "d": "8/2018"}, {"body": "check added makes event appear expected chrome using mobile emulation suggest chrome recognizing gesture thus firing pointer released work recommend register pointer capture see produces reliable result anyway seem bug react think issue closed", "d": "8/2018"}, {"body": "work tree structure changes example every time add another layer nodes move tree since types match react considers new mounts could fix using reversing order innermost item would still lose state essentially replacing yeah bug two examples equivalent one flat list another tree either outermost parent innermost child type depending reduce method use change type every add", "d": "8/2018"}, {"body": "including html work fine", "d": "8/2018"}, {"body": "hey dan found solution putting remember solved like always find go inside folder find folder inside find slick folder open create two seperate files names inside style folders project copy put newly created files import file using webpack like guessing getting ca nt resolve error cant resolve font error fact files used css self simple go inside newly created find lines slider slicklist slickloading amp background fff slickimageurl ajaxloadergif center center norepeat icons slickfontfamily slick fontface fontfamily slick src slickfonturl slickeot src slickfonturl slickeot iefix format embeddedopentype slickfonturl slickwoff format woff slickfonturl slickttf format truetype slickfonturl slicksvg slick format svg fontweight normal fontstyle normal comment", "d": "8/2018"}, {"body": "also stackoverflow question made ask question question says works add css indexhtml cdn rather avoid network call believe affecting rendering page initial load", "d": "8/2018"}, {"body": "called determine whether react rerender ca nt possibly run callback purpose give author opportunity prevent update altogether time callback fires late", "d": "8/2018"}, {"body": "lol sorry posting nt know exactly thinking thanks response gaearon", "d": "8/2018"}, {"body": "already slots", "d": "8/2018"}, {"body": "yes need special feature react ui elements firstclass entities pass around regular props fact nothing special prop except jsx containment uses elements like use content however technically equivalent something like also works", "d": "8/2018"}, {"body": "looks better aware precise semantics although sure either see last sentence paragraph look better somebody familiar operation need google means handles edge cases etc think case imposes much cost first example understood anyone familiar js basics react second example requires detailed understanding works many open questions example work passed custom component general suggestion avoid focusing much repetitive code like truly affect app scales completely local fact argue introducing extra abstraction scales better precise control happening need apply special rules guess behavior however could make bit simpler using fragment lets us remove first condition need wrapping element neither child exists dom nodes need emitted want take sure add abstraction eg js function nullifempty content wrap content content false content null return null return wrap content class mycomponent extends reactcomponent render return nullifempty thispropsfoo foo gt foo nullifempty thispropsbar bar gt bar nullifempty thispropsfoobar foobar gt foobar nt find much clearer like take js function omitemptychildren fragment fragmenttype reactfragment throw new error expected fragment const newchildren reactchildrenfilter fragmentpropschildren child gt typeof childtype function childpropschildren null amp amp childpropschildren false amp amp childpropschildren return newchildren class mycomponent extends reactcomponent render return omitemptychildren thispropsfoo thispropsbar thispropsfoobar fact even make component automatically think adds complexity worth wo nt handle advanced cases anyway like custom components hope helps", "d": "8/2018"}, {"body": "gaearon thank indepth answer like last solution nt polute render method much mine look better somebody familiar operation need google means handles edge cases etc well agree nomenclature could clearer new feature believe everyone would google logic many open questions example work passed custom component well came across need prop noncustom components think work normal prop passed custom component lets us remove first condition need wrapping element neither child exists dom nodes need emitted actually need element made clearer example bad almost markup small logics node childrentext render recursive like eg issue adds complexity worth agreeing statement perhaps help extending last snippet something achieves result javascript function omitemptynodes fragment fragmenttype reactfragment throw new error expected fragment class mycomponent extends reactcomponent render return omitemptynodes thispropsfoo thispropsbar thispropsfoobar mycomponent output nothing foo bar foobar falsy thanks attention", "d": "8/2018"}, {"body": "want keep outer div fragment useless remove change code check fragment instead strongly recommend writing code like brittle many edge cases handle well want imply future readers good idea might seem like simplifies code really obscures meaning sets future bugs debugging woes", "d": "8/2018"}, {"body": "right maybe overestimated need feature even though stubborn keep thinking way achieve without compromising mentioned thank insights much apreciated", "d": "8/2018"}, {"body": "think main reason seems brittle adapt code changes well happens extract header component way parent component know child empty rendering moved layer happens need wrap potentially empty div another div need remember apply logic levels accidentally render whole thing might want add component middle would break", "d": "8/2018"}, {"body": "food thought create tests concerns back without hopefully answers soon", "d": "8/2018"}, {"body": "back examples prop renamed something clearer would work examples possible returns render method mycomponent javascript base case outputs null children foo base case outputs null iff foo one false null undefined true foo base case nested outputs null iff foo one false null undefined true foo bar base case many children outputs null iff foo bar one false null undefined true edge case behave base case foobar render value complex viable performance assume custom components seen content simply treat means example would never output null simply passes named prop custom component implement sort like children prop extracting custom component gives render method implement omitifempty logic go something like initially thought nicetohave feature builtin components bic seek find generic solution bic clean repeated logic react projects seem around render methods actual builtin markup hope covered brittleness feature forgot anything please point eager hear thoughts", "d": "8/2018"}, {"body": "seems like maybe want js function createwrapper tag function wrapper props propschildren propschildren false propschildren null propschildren undefined return null const tag tag return wrapperdisplayname tagtouppercase return wrapper const createwrapper const createwrapper const createwrapper class mycomponent extends reactcomponent render return thispropsfoo thispropsbar thispropsfoobar guess still would nt work parent divs could also put special flag would check children", "d": "8/2018"}, {"body": "general main reason wary api proposing implementation complexity although likely easy creates spooky action distance one core promises react general component renders affect whether displayed proposal entire tree influences behavior also affects statefulness children clearly deeper issue react allow component pierce hierarchy necessary use cases like userland layout something keeping mind proposal hyperspecific version though unlikely go direction however might future work generic feature also allow something like aiming", "d": "8/2018"}, {"body": "well denying complex guess run workarounds cleaner solution comes appreciate time took dan thanks", "d": "8/2018"}, {"body": "want react work older browsers using classes letting babel compile make sense us output would worse written hand library matters", "d": "8/2018"}, {"body": "obvious useful know thanks dan", "d": "8/2018"}, {"body": "wait sec still use imports instead commonjs guess case babel compilation good enough", "d": "8/2018"}, {"body": "gkatsanos rollup bundling best babel used another syntax like arrow functions shorthand properties", "d": "8/2018"}, {"body": "using babel import statements", "d": "8/2018"}, {"body": "way react know instance pass event handler could passed many components feasible also somewhat confusing people expect class methods work javascript thanks suggestion though", "d": "8/2018"}, {"body": "sorry report nt details error seeing screenshots way help additionally sounds like error referring syntax error something react help provided details maybe able help", "d": "8/2018"}, {"body": "gaearon", "d": "8/2018"}, {"body": "yuqingc maybe reactvirtualized help rendering array item time surely cause problem", "d": "8/2018"}, {"body": "also use list items rendering lot list items frequently strong suit react also generally performant vanilla dom depending big list mentioned recommend using windowing technics render visible items via reactvirtualized reactlist similar", "d": "8/2018"}, {"body": "samundrak jquense thanks", "d": "8/2018"}, {"body": "another thing keep mind make inherit props shallowly equal rendering unchanged items skipped", "d": "8/2018"}, {"body": "anecdotally seems value underlying cause least cases unexpectedly long still digging minimal repro edit seems might always case least might caused delta fiber marked later recorded might unexpected either point", "d": "8/2018"}, {"body": "interestingly simplify test harder becomes reproduce started profiling full io suspense demo could triggered relatively reliably began stripping nonessential components reduce console noise became significantly harder edit might misleading observation reducing number fibers app reduced number possible bad measurements also made app faster maybe needed also reduce threshold logging error", "d": "8/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "8/2018"}, {"body": "yeah ship sailed", "d": "8/2018"}, {"body": "thanks creating would change figure needs priority api implement try priority api pick work next week", "d": "8/2018"}, {"body": "flarnie feel free edit", "d": "8/2018"}, {"body": "hi gaearon questions timeslicing react reactdom specific feature reason currently part reactdom api opposed another method eg", "d": "8/2018"}, {"body": "api placeholder removed imagine actual api end rendererindependent", "d": "8/2018"}, {"body": "special tags electron", "d": "8/2018"}, {"body": "looking docs seems tag", "d": "8/2018"}, {"body": "case mind adding whitelist send pr", "d": "8/2018"}, {"body": "beat punch thanks much gaearon philippspiess", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "nt understand asking want propose api change please see", "d": "8/2018"}, {"body": "lets set html html string ca nt interpolate function html string like", "d": "8/2018"}, {"body": "question react", "d": "8/2018"}, {"body": "emnn go back question", "d": "8/2018"}, {"body": "hey markerikson nt want disappoint tried github issues chats video calls still nt feel like discussion moving forward think mostly things sound abstract get better idea one needs play features substitute working hard getting features closer state usable enough start experimenting think important thing discussions without practical demos already seen tend go circles asking please give us time prepare ready publish examples detailed explanations behavior able see mean exactly case think try implement behavior eg redux see issues trying solve point discussion significantly productive point afraid nt offer yet sorry keep waiting", "d": "8/2018"}, {"body": "yeah think basically asking demos show difficult patterns explanations pain points etc got something concrete compare", "d": "8/2018"}, {"body": "something starting point add examples explanations gets solid", "d": "8/2018"}, {"body": "going close since ca nt help without reproducing case find one please file new issue thanks", "d": "8/2018"}, {"body": "still ca nt reproduce figure code throw error trust react info use styledcomponents next code maxwidth marginright fontsize textalign left later component renders symbol eth chrome devtools component looks like two assume problems hiding ca nt reproduce machine know errors happend next environment json browser name chrome version os name windows version nt versionname platform type desktop engine name blink browser name chrome version os name windows version nt versionname platform type desktop engine name blink idea try reproduce bug please let know thanks", "d": "8/2018"}, {"body": "guess either equivalent", "d": "8/2018"}, {"body": "seems right thanks lot", "d": "8/2018"}, {"body": "ca nt make work changing source want change build scripts target esm build", "d": "8/2018"}, {"body": "fyi working", "d": "8/2018"}, {"body": "clear exactly proposing ideas changes react apis feel free propose thanks", "d": "8/2018"}, {"body": "please create isolated example uses plain reactdomserverreactdom third party libraries demonstrates issue", "d": "8/2018"}, {"body": "nt understand reproduce cloned ran added log comment seeing provided data available consumer nt know expect see nt seem anything wrong context works confident issue reactrelated please try create focused example provide instructions reproducing actual vs expected behaviors thanks", "d": "8/2018"}, {"body": "closing per lack response", "d": "8/2018"}, {"body": "nt understand asking example would help", "d": "8/2018"}, {"body": "concerned make timings pretty noisy want send pr take look", "d": "8/2018"}, {"body": "hey dan gaearon nitpicking want figure said nt use new features nt want old patterns keep working would suggest code new react way old react eg could use life cycle methods way etc right however bvaughn says getderivedstatefromprops componentwillreceiveprops could called many times one update hence solution fetch data inside question seem ca nt use new react exactly way right afaik current react componentwillreceiveprops nt get called many times one update nt", "d": "8/2018"}, {"body": "giorgim yes lifecycle methods changing point suspense optin feature existing react render methods react rendering behavior work asis however opt adding tag part app begin using suspense approach indicating async data needs take advantage none happens nt add codebase", "d": "8/2018"}, {"body": "giorgim used instead", "d": "8/2018"}, {"body": "markerikson say bvaughn said getderivedstatefromprops called many times one update necessarily case nt enabled sorry asking questions popup time time nt find resource would cover ps bvaughn also nt mention optionality linked thread hence raised suspicion", "d": "8/2018"}, {"body": "method enqueueing asynchronous updates eg class components opposed rendererspecific added core checklist understanding updates fibers async asynchronous theory means would unnecessary however unstableasyncsuspense demo mixes synchronous update async update sure accomplished mode universal components", "d": "8/2018"}, {"body": "check list time slicing umbrella", "d": "8/2018"}, {"body": "support promise component type related heuristics lifecycles would get called children resolved including promise case means wo nt get called given promise never resolved immediate host children rendered", "d": "8/2018"}, {"body": "thysultan called commit phase ui tree fully rendered applied dom based understanding suspense think answer instance would never actually mount get resolved one descendants also attempted wait promise never resolves would never mount thus would never executed examples someone feel free correct assumptions wrong", "d": "8/2018"}, {"body": "yea execute commit phase executes whole tree resolved tree might include placeholders explicitly put depending whether something inside still suspends waited long enough explicitly render child without placeholder around never end situation ready", "d": "8/2018"}, {"body": "really looking forward able play even browsed lot source code figure nt put working version world wide web yet anything help get released", "d": "8/2018"}, {"body": "compile master wan na play see instructions", "d": "8/2018"}, {"body": "reproduce development build production builds devonly memory leaks temporary example render component nodes released", "d": "8/2018"}, {"body": "gaearon thanks", "d": "8/2018"}, {"body": "minimal repro js const react require react const reactdom require reactdom const jsdom require jsdom require rafpolyfill const jsdom new jsdom globalwindow jsdomwindow globaldocument jsdomwindowdocument globalnavigator jsdomwindownavigator consoleerror error gt throw new error error class bad extends reactcomponent componentdidupdate throw new error noo render return null mount function const div documentcreateelement div try reactdomrender reactcreateelement bad div reactdomrender reactcreateelement bad div catch e reactdomrender reactcreateelement div div crashes least interestingly nt crash move import jsdom initialization", "d": "8/2018"}, {"body": "going continue investigation part indeed fixed master another part nt", "d": "8/2018"}, {"body": "thanks brokentone repro case helpful", "d": "8/2018"}, {"body": "thank much minimal repro case gaearon actually spent hours stripping enzyme figure cases learned lot never got useful conclusion building far better idea use case elaborate initial concern", "d": "8/2018"}, {"body": "methodology remove imports one one noticed adapter causing issue noticed statement causing issue inside adapter import told order imports matters gradually got one file removed everything nt effect", "d": "8/2018"}, {"body": "reason bug reconciler assumed function reports errors never throws throws setup overridden throw", "d": "8/2018"}, {"body": "fixed", "d": "8/2018"}, {"body": "sebinsua calls thissetstate within commit phase eg componentdidmount componentdidupdate synchronous test base react local build asynchronous ie still alert bvaughn gaearon iirc suspenseasync render wo nt change setstate behavior commit lifecycle eg setstate async wo nt synchronous even asyncrender test local build react could give unit test case link thanks bvaughn createsubscription handles possible case checking value rendered sync latest value scheduling new render calling setstate ensures component nt display stale data hi brian little question ca nt response transition data changing eg event dispatcher dispatch foo dispatch bar dispatch receive end due want something missing action createsubscription nt data changing list internal value internal situation data still stale iam wrong please let know thanks way deopts deopting mean", "d": "8/2018"}, {"body": "nesmalltown test base react local build asynchronous ie still alert could wrong think meant synchronous nt suggesting think idea calling point guarantees state updating state flushed screen intention appears correctness quote bvaughn state updates scheduled processed synchronously flushed user sees ui update important certain use cases eg positioning tooltip measuring rendered dom element case describing means users application never even see temporary stale value react process new value synchronously yielding mean immediately calling updated way deopts deopting mean presumably deoptimises optimisation lost asynchronicity", "d": "8/2018"}, {"body": "sebinsua think idea calling setstate point guarantees state updating state flushed screen intention appears correctness even async mode state updating state flushed screen still applicable think correctness asynchronous synchronous always correct imo synchronous bvaughn want say commit phase method called suspend call synchronous contrast async rendersuspense suspendyield render phase method would cause methods called maybe call asynchronous mean immediately calling thissetstate thisstate updated yea thinks maybe need adjust description calls thissetstate within commit phase eg componentdidmount componentdidupdate synchronous little bvaughn gaearon wrong please let know thanks", "d": "8/2018"}, {"body": "guarantees user see previous state technically synchronous sense flushing synchronous sense flushed react exits toplevel javascript call stack", "d": "8/2018"}, {"body": "gaearon thanks clarification dan one question iirc seems toplevel javascript call stack call stack", "d": "8/2018"}, {"body": "sure mean saying nt exit top level frame committing", "d": "8/2018"}, {"body": "thanks clarifying dan wording little misleading guess state updates processed react finishes batch work gives browser time paint updates words never actually see ui original update call either ui state update results example js class example extends reactcomponent state count componentdidmount nt actually thissetstate count componentdidupdate prevprops prevstate thisstatecount amp amp prevstatecount nt actually thissetstate count render return count thisstatecount component render count user would never actually see calls", "d": "8/2018"}, {"body": "gaearon sorry fault mistakenly treat word top bottom understanding identical bvaughn yea batch update works think irrelative createsubscription asyncrender thread even react already batch update async render fiber chunk timeslicing expriationtime way could please answer second question comment thanks", "d": "8/2018"}, {"body": "confused recent comment nesmalltown example nt really anything batch rendering ever one state update queue time trying clarify state updates handled commit phase sure know second question referring", "d": "8/2018"}, {"body": "bvaughn yes multiple update time wrong description try describe thoughts clear sorry wasting time state updates componentdidmount componentdidupdate processed react finishes batch work gives browser time paint updates words never actually see ui original update call setstate either ui state update results mean imo executedcalled cdmcdu method know state change finally think ca nt batch work actually mean batch means work batched rather update batched work means fiber beginwork commitwork something else example code call setstate either ui state update results imo result special methods ie cdmcdu eg cwm cause render react merged state ie render method called ie return new state gdsfp cause result gives browser time paint updates imo console dom textcontent different final result see even ca nt perceive ui change never actually see ui original update think calling method whether commit phase reduce interval twothreefour updates reduce update timesmerge updates make browser paint quickly sure know second question referring sorry ambiguous try command f search key little question page", "d": "8/2018"}, {"body": "little trouble understanding asking sorry saying essentially calling either cause another render user see know react work synchronously finishing execution someone pointed react update synchronously call synchronously rerender component finished running", "d": "8/2018"}, {"body": "bvaughn think mean", "d": "8/2018"}, {"body": "yikes thanks", "d": "8/2018"}, {"body": "ok maybe need time understand thread thanks guys bvaughn gaearon clarification thanks", "d": "8/2018"}, {"body": "react issue see removing dependencies removing configuration section fixes must either jest babel issue likely advice relevant", "d": "8/2018"}, {"body": "looked reproducing example able fix running particular issue project mistakingly pulled incompatible react native uses fix remove unnecessary wrong toplevel dependency check see remove least ensure version metro depends make sure nt see two different versions hope helps", "d": "8/2018"}, {"body": "nt think good way fix side unless give putting warning getters say safari issue fix", "d": "8/2018"}, {"body": "tracking fix webkit", "d": "8/2018"}, {"body": "burg appreciate followup indeed deep traversal problem would trigger warnings define getters reachable one reason another", "d": "8/2018"}, {"body": "tracking fix webkit addressed show safari technology preview soon one yet continue see issues please nt hesitate send message file another webkit bug details", "d": "8/2018"}, {"body": "josephpecoraro thank much", "d": "8/2018"}, {"body": "gaearon looks like released days ago change aweary included reason intentional change missed", "d": "8/2018"}, {"body": "released security hotfix nt include changes except vulnerability fix avoid situation people ca nt upgrade due newly introduced bug next version include changes master", "d": "8/2018"}, {"body": "ah thanks update", "d": "8/2018"}, {"body": "sweet issue today glad fix incoming thanks", "d": "8/2018"}, {"body": "update available version downgrade avoid issue", "d": "8/2018"}, {"body": "documentlevel native handler sounds like solution nt understand point call means want reach top right regardless nt look like bug report like support question feature request try keep support outside repo check resources instead feature request follow nothing planned short term though", "d": "8/2018"}, {"body": "bug though dom works element technically different one unless missing something", "d": "8/2018"}, {"body": "indeed dom behaves normally issue touch events locked event occurs given touch event read spec mdn pretty good explanation issue note target element removed document events still targeted hence wo nt necessarily bubble window document anymore risk element removed touched best practice attach touch listeners directly target dan pointed issue rendering inside portal create new dom element since element different parent reconciler always create new element since original element longer attached document events bubble anymore vanilla example case since element moved instead recreated check example shows issue workaround probably add native event listeners dom node using componentdidmount remove touchendtouchcancel use pointer events suffer issue since target always latest intersection like mouse events make sure eventual polyfill handles correctly though", "d": "8/2018"}, {"body": "philippspiess action take react side considering closing wanted check first", "d": "8/2018"}, {"body": "nhunzaker nope think works intended", "d": "8/2018"}, {"body": "okay thanks giving fantastic break problem possible solutions close", "d": "8/2018"}, {"body": "thanks philippspiess detail much appreciated see work around dom behaviour end", "d": "8/2018"}, {"body": "right example moving dom element rather creating new one problem side point codesandbox great sharing things", "d": "8/2018"}, {"body": "also thanks following gaearon", "d": "8/2018"}, {"body": "linking historical purposes", "d": "8/2018"}, {"body": "want send pr", "d": "8/2018"}, {"body": "ca nt reproduce master likely fixed", "d": "8/2018"}, {"body": "sounds use case call return experiment deleted nt happy api implementation nt really anything offer right currently know order time commit late render unless willing always render two passes slow let keep open", "d": "8/2018"}, {"body": "actually going close duplicate", "d": "8/2018"}, {"body": "issue updating react", "d": "8/2018"}, {"body": "sorry even bug way fix somebody nt provide reproducing example going lock discourage comments nt helpful problem please file new bug reproducing example fix thanks", "d": "8/2018"}, {"body": "managed investigate", "d": "8/2018"}, {"body": "closing since followup", "d": "8/2018"}, {"body": "approach suggesting work yeah complicated also nt encourage often breaks encapsulation property usually readonly way currently used case fair want write possible ask change type writeable future nt maintain typings", "d": "8/2018"}, {"body": "sure create new issue question way forward context another renderer example trying implement custom render views reactnative want provide context main renderer like graphql client short way implement something like portals custom renderer", "d": "8/2018"}, {"body": "think best option right capture context need context boundary pass providers boundary", "d": "8/2018"}, {"body": "biggest problem works fine production builds disagree would big problem worked development builds nt work production builds current behavior actually safer highlights problem early reason problem enumerating generator mutation passing generator react forcing react perform mutation render phase bad async rendering cases sync rendering example js class container extends reactcomponent handleclick gt thissetstate render return function app return renderchildren function renderchildren let lt yield reactdomrender documentgetelementbyid container even production version show first render erase click erased first render consumed generator next render nt anything read think start trying detect pattern warning supported", "d": "8/2018"}, {"body": "agreed warning right solution", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "going start warning", "d": "8/2018"}, {"body": "seeing chrome native event target firefox document ca nt determine component clicked nt receive event", "d": "8/2018"}, {"body": "nt appear react issue seems like known inconsistency browsers macos nonreact test case html click", "d": "8/2018"}, {"body": "solved issue creating list hashes server sending client blob seems little unwieldy could far simplified one able access dataattributes ssr rendered markup sounds like good solution disagree proposed solution simpler encourages client server markup diverge ca nt tell intentional regardless like propose api change thanks", "d": "8/2018"}, {"body": "hectorcoronado feel free dig need research great", "d": "8/2018"}, {"body": "look coming days update accordingly thanks", "d": "8/2018"}, {"body": "quick checks using definitely still issue ios nt seem check whether particular strategy attaching every node click handler necessary checks click nt bubble root maybe", "d": "8/2018"}, {"body": "oh target element ancestors including explicit event handler set mouse events event handler may empty function explains works also means might get away setting root click delay grey overlay issue solved version support", "d": "8/2018"}, {"body": "also means might get away setting root click delay grey overlay issue solved version support give additional information grey overlay tap highlight shown element pressed ios safari safari detect interactive elements eg buttons tapable default adding handler also make noninteractive elements eg div tapable important ux wise respect proper granularity adding listeners otherwise tap highlight shown whole container source code back original topic realized tightly intertwined tap highlight color maybe feasible feature test would check browser supports maybe check webkittaphighlightcolor css property supported", "d": "8/2018"}, {"body": "hectorcoronado still want work issue try explore css property based featuredetection want see comment", "d": "8/2018"}, {"body": "philippspiess gaearon yes spend time work tomorrow report back seems beyond capabilities present thank", "d": "8/2018"}, {"body": "meant used top level similarly supported call container already part another react tree instead rendering child nodes managed react use state drive rendering js state currentbox left handleleftdrop e canceldefaultbehavior e thissetstate currentbox left handlerightdrop e canceldefaultbehavior e thissetstate currentbox right render return thisstatecurrentbox left amp amp thisstatecurrentbox right amp amp working example", "d": "8/2018"}, {"body": "come node attempting unmount rendered react toplevel container instead parent component update state rerender order remove component also stated inapplicable application developing nt know would applicable indeed source problem intended solution use state", "d": "8/2018"}, {"body": "nt feel like action item react intentionally using different events internally provide solid polyfill", "d": "8/2018"}, {"body": "posterity caused rather function definition invariant correct", "d": "8/2018"}, {"body": "agree problem sure reasonable solution also problem future props react may use internally could use attribute name directly common custom element attribute name custom elements nt think make exception custom elements unless already popular pattern need support using react custom elements may one small limitation", "d": "8/2018"}, {"body": "ever move ref element config object could", "d": "8/2018"}, {"body": "want pick one packages default minified bundle intended production declaring entry points packagejson software consumes library could know bundles published rather needing make assumptions directory structure nt think using array tools expect single string would toolfriendly anything likely break tools would likewise great react included es module entry point packagejson standard one would module sure issues tracking", "d": "8/2018"}, {"body": "gaearon sorry forgot ticket needed close earlier suggestions help continue exploring potential suspense amazing far gaearon aweary thank responses especially weekend guys amazing", "d": "8/2018"}, {"body": "opted include polyfill react dom avoid increase bundle size bother including features even say behavior defined unfortunate would increase bundle size huge amount something saying valid reason include bundle reason wanting increase bundle size nt transparent reason could applied literally existing feature react", "d": "8/2018"}, {"body": "see comment planned core features roadmap consider important add react given community recent complaints growing bundle size strict prioritising gets unfortunately means features directly roadmap require lot extra code tougher chance getting would increase bundle size huge amount something know define huge amount yes comparatively event polyfills already significant part react almost half currently afford grow part sorry frustrating gave talk core features working currently adding react hope watch see consider important polyfills given community focus bundle size sacrifice much polyfill please trust love polyfill events feasible", "d": "8/2018"}, {"body": "still bit perplexed understand idea controlled uncontrolled data got places want two examples code one using react react two intentions control button selected change object contents based form inputs react react intentions want make copy external prop value save internally equally want external changes overwrite internal state silly example cases always controlled however one want store copy object component state manipulate component view correctly updated publish changes parent component external prop changes let say another component updates object want changes overwrite internal state nt doubt probably antipattern react working like feel like lifecycle method still good thing include future updates amiable still trying understand implications antipattern new behaviour better", "d": "8/2018"}, {"body": "get chance read blog post", "d": "8/2018"}, {"body": "gaearon still wanting sweetness behaviour attempted something like warning mildly untested code ahead think pseudocode import memoize memoizeone export default class editobject getobject memoize propsobject stateobject gt propsobject amp amp propsobject stateobject return propsobject return stateobject render let useobject getobject thispropsobject thisstateobject problem finding nt want compare objects render changes always revert prob fault logic changes would perhaps use something like memoization locally store propsobject compare whenif changes wonder legal use memoised function realise written comment working stuff time modify codesandboxes play around get back", "d": "8/2018"}, {"body": "nt think use case memoization trying seems covered including fragile probably good idea", "d": "8/2018"}, {"body": "gaearon yeah approach definitely right idea however trying figure alternative wanting sandbox information may change due external sideeffects thought still relevant something like perhaps right idea well need figure right path", "d": "8/2018"}, {"body": "updated example works changes compared broken version posted removed unnecessary state fully controlled removed unnecessary instead mirroring state separated coming locally edited fields nt attempt sync instead merge render method want confirm edits send merged objects upwards parent component replaces state need reset switch different objects parent however mentioned blog post brittle comparing next previous props even solution nt work well need update object unrelated reasons reset form state instead added field objects reset state using uncontrolled component key approach hope helpful", "d": "8/2018"}, {"body": "gaearon helpful thanks update clear breakdown much appreciated use cool thanks taking time", "d": "8/2018"}, {"body": "gaearon anything react team warn users install newer gdsfp behaviour changes component fundamentals instance transition component reactspring hence get issues posted every instance one gdsfp assuming going called setstate used transition exitout transitions completed direct result old transitions stuck limbo new render pass begins", "d": "8/2018"}, {"body": "nt think serious enough bug deprecate way warn try use npm deprecations sparingly either security vulnerabilities guaranteed crashes otherwise people wo nt treat seriously sorry react bug affecting users one thing could cut major release raise minimal required react version least clear new users", "d": "8/2018"}, {"body": "maybe override behavior current one", "d": "8/2018"}, {"body": "development environment react uses trick caught exceptions thrown inside fake dom event makes reported react actually catches nt propagate case error boundary otherwise rethrown production errors caught error boundaries stay caught", "d": "8/2018"}, {"body": "see issue closed seems fairly relevant question like experiment exactly concept reactredux unstable likely feature changed removed future marked unstable shortly released first place", "d": "8/2018"}, {"body": "mostly know would useful libraries limited want release something relying yet", "d": "8/2018"}, {"body": "thing found last night callback apparently passed nt looked things carefully originally assumed passed instead makes things potentially lot complicated original train thought reactredux could kind default keys plain object changed bits calculation function allow user pass callback calculate changed bits something like immutablejs map current experiments using singleton entry created file way let end user customize behavior absolute immediate priority something like experiment potential perf optimization approach", "d": "8/2018"}, {"body": "useful decouple mind filing rfc proposed behavior justification", "d": "8/2018"}, {"body": "sure sure able give really detailed writeup least explain thinking skimmed relevant chunks code nt seem like would much change implement first glance reference currently stored context fiber calls references uses available see presumably given prop could pulled instead used", "d": "8/2018"}, {"body": "filed rfc looks like pretty simple addition possibly changed added loc", "d": "8/2018"}, {"body": "likely wo nt plans make consuming context convenient though", "d": "8/2018"}, {"body": "discovered reactcontextual think indeed nice functionality separate small package", "d": "8/2018"}, {"body": "gaearon hi dan could give info would change future look recent prsissues previous understanding react ca nt control behavior nt belong react except react provide new method something replace like react use ridc", "d": "8/2018"}, {"body": "stack reliable error far setstate visible stack nested update sure react takes js stack updates need synchronous trigger aa pg enqueuesetstate setstate onclose user code lt update htmldocumentthandledocumentclick user code htmldocumentd", "d": "8/2018"}, {"body": "test renderer support", "d": "8/2018"}, {"body": "nt please provide reproducing example", "d": "8/2018"}, {"body": "closing since reproducing case", "d": "8/2018"}, {"body": "close favor think real issue", "d": "8/2018"}, {"body": "gaearon reactart using nt think", "d": "8/2018"}, {"body": "nt support crossrenderer portals initial vision portals never implemented portals would mechanism put one renderer another", "d": "8/2018"}, {"body": "also filed bit concrete use case", "d": "8/2018"}, {"body": "component prepares array items within able render without keys using thanks ialexryan", "d": "8/2018"}, {"body": "somewhat related discussion also relevant", "d": "8/2018"}, {"body": "related sebmarkbage comment alternative might export something allows plugging custom reconciler reactdom renderer possible someone could create wrapper dom reconciler maintains idea component tree well passing everything underlying dom reconciler means representation component tree thirdparty developer rather inside react sure harder original suggestion depends bit coupled dom render dom reconciler", "d": "8/2018"}, {"body": "nt backport anything old majors except critical issues risky accidentally break havoc especially release process complicated two sidebyside codebases worth risk touching bug special quite regressions like hopefully fixed closing since reported fixed latest version react sorry could nt help", "d": "8/2018"}, {"body": "works thanks", "d": "8/2018"}, {"body": "seems working edge react still nt work react ie react edge react ie code sandbox example code sandbox editor nt support ie preview open ie", "d": "8/2018"}, {"body": "reopening track issue", "d": "8/2018"}, {"body": "quick tests indicate setting results loss behavior next thing want figure matters input attached page difference attributes attached adding dom", "d": "8/2018"}, {"body": "fixed", "d": "8/2018"}, {"body": "solution best offer nt think changing future", "d": "8/2018"}, {"body": "create reproducible example", "d": "8/2018"}, {"body": "future reference reproducing example js import react react import reactdom reactdom function index return reactdomrender documentqueryselector root splashes author referring occur click button click body several times quick succession", "d": "8/2018"}, {"body": "problem specific react also reproduces", "d": "8/2018"}, {"body": "polymer", "d": "8/2018"}, {"body": "hmm clearly issue testing appears codesandbox preview mode buggy need look previous conclusions might wrong", "d": "8/2018"}, {"body": "okay testing codesandbox really confusing code bundles think got minimal repro though js var btn documentcreateelement button btninnertext hi documentbodyappendchild btn documentaddeventlistener mousedown e gt etarget btn alert hi two things fix remove beginning flash gone change get even specific flash also gone seems like proper solution meantime probably work around adding mouse event listeners touch devices instead using touch event listeners sorry", "d": "8/2018"}, {"body": "seems minimal example reproduce issue strange happens whenever clickish seem work attached document add following css tap still grey even though button might turn red zooming also make disappear removing fix well gaearon pointed earlier try without codesandbox chrome using url downloading older ios versions see added", "d": "8/2018"}, {"body": "gaearon beat another workaround found", "d": "8/2018"}, {"body": "nt think would fix issue mount react app container big enough fill whole screen react apps probably add click listener container issue persists different non listeners though behavior always reproducible matter add use remove filed webkit issue behavior seeing seems inconsistent", "d": "8/2018"}, {"body": "want make client server space client performance issue nt good solution temporary mismatches sorry probably future", "d": "8/2018"}, {"body": "gaearon okay solved rendering root element child component ex instead component loading asynchronously", "d": "8/2018"}, {"body": "fixed biggest difference jumped differences dev eg react nt emit perf measurements default react fixed cost production get better next patch release includes presumably note general though nt recommend using many roots avoidable supported course makes react job difficult far see use method instead many calls performance significantly improves even version react currently published general think goal abstracting away react make difficult benefit reactspecific optimizations like time slicing future another thing consider thanks repro case", "d": "8/2018"}, {"body": "gaearon use createportal render method instead many reactdomrender calls react tests use calling many times use way test root component", "d": "8/2018"}, {"body": "difference significant enough matter tests", "d": "8/2018"}, {"body": "sorry closing nt think reason believe react encourage try vanilla dom apis react sets attribute broken reason nothing react fix", "d": "8/2018"}, {"body": "think paired react devtools issue", "d": "8/2018"}, {"body": "testing development version react representative production additionally react keeps reference previous tree one update released switching two views back guaranteed free tree however freed real application user click one checkbox many times reproduce memory leak production version complex scenario please file issue instructions thanks", "d": "8/2018"}, {"body": "going close nt seem like comes often", "d": "8/2018"}, {"body": "order siblings handled implementation detail suggest depend code", "d": "8/2018"}, {"body": "opening pr nobody minds", "d": "8/2018"}, {"body": "please go ahead", "d": "8/2018"}, {"body": "wow interesting bug digging minimal repro js import react component react import render reactdom class app extends component handlechange alert hi componentdidmount documentaddeventlistener click gt thissetstate true render return render documentgetelementbyid root", "d": "8/2018"}, {"body": "would fix nt think really solves underlying problem input tracking mechanism repro case uses regular inputs checkboxes js class app extends reactcomponent state value handlechange e gt thissetstate value etargetvalue componentdidmount documentaddeventlistener input gt comment line fix thissetstate true render return reactdomrender documentgetelementbyid container typing nt work unless comment call capture phase listener say input empty typing happens capture phase nonreact listener runs first rerendering due first empty input props still contain old value dom node value new equal set dom node value according props remember current value tries decide whether emit change event asks tracker whether value changed tracker compares presumably new set earlier stored also also updated changes update lost never get change event never actually get chance set correct state", "d": "8/2018"}, {"body": "reproduce going far back react", "d": "8/2018"}, {"body": "seem difference behavior though sure limited checkboxes inputs maybe different components", "d": "8/2018"}, {"body": "particular nt understand example end committing update even reconciling get complete phase expect bail maybe bail nt prevent complete phase running would explain wrapping fixes seems like generic problem fix js class counter extends reactcomponent state componentdidmount documentaddeventlistener click thisincrement true componentwillunmount documentremoveeventlistener click thisincrement true increment gt thissetstate render return hi class app extends reactcomponent handlechange val alert ok render return reactdomrender documentgetelementbyid container", "d": "8/2018"}, {"body": "split two issues generic issue existed forever probably nt worth fixing regression react causes happen often fix", "d": "8/2018"}, {"body": "particular regression fixed via get fix next patch", "d": "8/2018"}, {"body": "seems like address better", "d": "8/2018"}, {"body": "hydrating portals supported message nt make sense need investigate fix", "d": "8/2018"}, {"body": "gaearon purpose fix detects portal used hydrate throw properly error message invariant eg add test portal used hydrate throw error message right willing nt urgent planning ssr doc draft website repo familiar hydrate mechanism think investigation helpful plan", "d": "8/2018"}, {"body": "portals supported ssr even render nothing", "d": "8/2018"}, {"body": "seem like rendering nothing best see makes portal contents different consider worth server rendering likely come back together revamp server renderer suspense", "d": "8/2018"}, {"body": "portals conceptually clientonly components used things like modals one generally want render server also take dom element rendertostring dom see anything meaningful done server also see anything valuable throwing", "d": "8/2018"}, {"body": "used things like modals one use case also others like sidebars similar necessarily clientonly also take dom element right current design could change also see anything valuable throwing value throwing explicitly acknowledge portal wo nt work easily work around similar already kind checking determine whether get dom node point enough data choose emit portal", "d": "8/2018"}, {"body": "u dis", "d": "8/2018"}, {"body": "got lost discussion action item seems like question discussion stalled", "d": "8/2018"}, {"body": "think probably going overboard terms explanation specific issue seem like use case previous context api supported new nt said whole pattern could bad practice absolutely fine new api cover use case intentional change would good know case though", "d": "8/2018"}, {"body": "provide basic example old new api easier unless think really actionable issue", "d": "8/2018"}, {"body": "probably set value child tried initialisation valueupdaterinput component componentdidmount method would called every render surely valueupdaterinput would rerendered time nt understand part fires mount every render", "d": "8/2018"}, {"body": "sorry nt mean say rerendered meant initialised ie function create new instance component whenever called although writing thinking perhaps missing something react internals logic child inside parent render method would also reinitialised time render called", "d": "8/2018"}, {"body": "yeah literally answered already sorry taking time makes much sense coming back wisdom hindsight", "d": "8/2018"}, {"body": "haha problem yeah react create one instance element rendered place type key otherwise every single update would lose state every component", "d": "8/2018"}, {"body": "closing per nt seem like react could make choice", "d": "8/2018"}, {"body": "memorebolledo incorrect logo licensed creative commons attribution like documentation see also fb trademark guidelines hope helps", "d": "8/2018"}, {"body": "purpose requiring keys iterator array involved instance always exactly three children always order must react demand write", "d": "8/2018"}, {"body": "nt need three children write like jsx guarantees positions stable move react need keys case", "d": "8/2018"}, {"body": "react seems assumes arrays unstable need keys argue case example component may look react like unstable reality always constant true checkboxes want label checkbox false otherwise example optional trailing items example actually dynamic items ever added removed end would react need keys help update adding key component adds visual noise", "d": "8/2018"}, {"body": "ended overriding filter warning", "d": "8/2018"}, {"body": "qwertie confident array stable use exact mechanism suppress warning react uses jsx js export function label p return reactcreateelement label omit p labelattrs plabelafter pchildren labelspan p labelspan p pchildren warnings suppressed export function label p return reactcreateelement label omit p labelattrs plabelafter pchildren labelspan p labelspan p pchildren example actually dynamic items ever added removed end would react need keys help update adding key component adds visual noise sure next person working component idea constraint exists try avoid implicit assumptions react components silence warnings explicitly spreading children call know", "d": "8/2018"}, {"body": "sounds like browser bug sorry", "d": "8/2018"}, {"body": "aggridreact behavior problem cells", "d": "8/2018"}, {"body": "sorry never officially supported api reason starts", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "pass extra data apis say leave also recommend dispatching real browser events tests instead", "d": "8/2018"}, {"body": "fix", "d": "8/2018"}, {"body": "closing really portals focus reparenting issues", "d": "8/2018"}, {"body": "sorry post totally relevant another change causes inability use similar methods search tree composite components would recommend instead", "d": "8/2018"}, {"body": "sanfilippopablo see issue specific always explicit inheritance best method code reuse react already work functional components think something close spirit functional component sense makes sense work another change causes inability use scryrenderedcomponentswithtype similar methods search tree composite components mind filing separate issue take look sounds accidental", "d": "8/2018"}, {"body": "seems like leak", "d": "8/2018"}, {"body": "think asking existing tests reactdomserverintegration updated fail accurately testing happening serverclient identical behavior yep", "d": "8/2018"}, {"body": "hi everyone decided go first issue hope fine really happy take part small way first test demonstrates html output looks indeed mismatch branch referenced contains failing test maybe look result test timoruetten array generated html looks like server side invalid like client side believe two problems first timoruetten fully understand try insert invalid html parts children react nodes sure safe manipulate actual html tags rendered react rendered strings since string supposed inner html actually contain child nodes nt add whatever closing div tags missing string put react container need manipulate react use portals please correct wrong want give constructive criticism secondly think dangerous try parse incomplete html react react tries use prevent crosssite attacks client side seems html automatically cleaned end invalid html work safely make sense throw error html working properly hand html rendered serverside seems clean inner html could vulnerability crosssite attacks guess suggest either throw error make safer way client rendering gaearon define html generated end look attempt fix issue thanks lot", "d": "8/2018"}, {"body": "ooh completely missed inserted html invalid thank aliin explaining indeed unsupported ca nt possibly support client client nt construct html tree could nt work even wanted problem load html data database need replace special words real react components plan something like yeah nt think plan would work could instead leave special placeholders html eg js content content render second pass clientonly imperatively components comment node placeholders note need careful html never change client since otherwise next client update would wipe also need remember clean parent unmounts else get memory leak could consider format different html", "d": "8/2018"}, {"body": "sorry supported need keep parent type", "d": "8/2018"}, {"body": "jpkempf separate issue best something nt look like described issue title otherwise unsearchable thanks", "d": "8/2018"}, {"body": "gaearon sure problem created first issue hope everything fine", "d": "8/2018"}, {"body": "closing per lack follow", "d": "8/2018"}, {"body": "issue first creating dom node one document moving another one however react already bound event handlers first document react nt expect would move dom node documents something rendered would nt say bug react ca nt detect fix change code move node rendering something react like js class window extends reactcomponent constructor props super props thisstate win null el null componentdidmount let win windowopen windocumenttitle react portal window let el documentcreateelement div windocumentbodyappendchild el thissetstate win el componentwillunmount thisstatewinclose render const el thisstate el return null return reactdomcreateportal thispropschildren el", "d": "8/2018"}, {"body": "aweary mentionned synching issue field sync field blurred added consolelog figured etargetvalue etargetgetattribute value sync field blurred workaround add etargetsetattribute value etargetvalue force update value works expected", "d": "8/2018"}, {"body": "send pr look proposal", "d": "8/2018"}, {"body": "reported asynchronously since react correct reported synchronously looked test case tests fail use directly instead enzyme maybe enzyme issue reduce react please let know take another look", "d": "8/2018"}, {"body": "seems like got fixed", "d": "8/2018"}, {"body": "create deep copies nt expect using clone objects deeply deeply nested object models like might want consider using something like immer lets write code mutable manner using immutability behind scenes alternatively might want consider flattening object structure commonly called normalization good reasons example nt multiple copies data around keep flat cache like database tables hope helps", "d": "8/2018"}, {"body": "guess could specific benefits aside", "d": "8/2018"}, {"body": "get get delegation first place guess", "d": "8/2018"}, {"body": "fair enough curious going something particular", "d": "8/2018"}, {"body": "oh found analysing react code specific use case", "d": "8/2018"}, {"body": "ailrun thanks bringing created pr try seems work across browsers", "d": "8/2018"}, {"body": "garethsmall version issue using reactnative", "d": "8/2018"}, {"body": "sufficiently covered", "d": "8/2018"}, {"body": "think conceptual issue examples code works correctly one prop tree given time new registration name happens old registration removed wrong one ends removed tells problem using name registration key really want register unregister individual input individual name one solution could generate unique id input register input form pass unique id name unregistering importantly keep data form component keyed id rather name way order would nt matter even fields exists time input would read correct data actually need name eg form submission could enforce one field exist ignore first example even weird overlapping time new component mount old one nt unmounted yet mentioned unavoidable unlock future react features also reason nt recommend using especially mutations like mutations constructor also recommended alternative one thing could move registration way order one expect however first render field would data exists one way fix teach field something like first render would nt data parent yet read default data registration pass default data upwards thus registering form state seems like second solution line react works hope helps", "d": "8/2018"}, {"body": "current behavior intentional although escape hatches please see react expects rendered content identical server client patch differences text content treat mismatches bugs fix development mode react warns mismatches hydration guarantees attribute differences patched case mismatches important performance reasons apps mismatches rare validating markup would prohibitively expensive single element attribute text content unavoidably different server client example timestamp may silence warning adding element works one level deep intended escape hatch overuse unless text content react still attempt patch may remain inconsistent future updates intentionally need render something different server client twopass rendering components render something different client read state variable like set true way initial render pass render content server avoiding mismatches additional pass happen synchronously right hydration note approach make components slower render twice use caution remember mindful user experience slow connections javascript code may load significantly later initial html render render something different clientonly pass transition jarring however executed well may beneficial render shell application server show extra widgets client learn without getting markup mismatch issues refer explanation previous paragraph hope helps", "d": "8/2018"}, {"body": "bug please see explanation", "d": "8/2018"}, {"body": "thank clear", "d": "8/2018"}, {"body": "mainly due wrong importexport path change correct path error gone", "d": "8/2018"}, {"body": "yeah looks cause", "d": "8/2018"}, {"body": "fixed extra regression test", "d": "8/2018"}, {"body": "closing since nt seem come often also track docs issues", "d": "8/2018"}, {"body": "please direct api change proposals repository generally binding passing closure idiomatic way", "d": "8/2018"}, {"body": "seems like leak growth devonly expected", "d": "8/2018"}, {"body": "utilities general consistent also symptom lacking primitives features react typically solutions using flaws could implemented cleanly react allowed way call components say never willing change feels like backwards compatibility cost high clear worth compared creating idiomatic powerful ways address use cases speaking specific issue naming problem nt intended guarantee one child per se safe downcast intention arbitrary could use sure dealing element get runtime invariant handy cases component nt support dealing multiple children wants make explicit early case even passing singleitem array violation array might dynamic might discover length limitation deploying production handy able throw every array well anything else element gives perhaps would accurate name think ship sailed changing nt worth effort want provide better story fundamental flaws api eg ca nt see userdefined components unlike issue pointed ca nt worked around userland seem worthy address try avoid mistakes new apis though", "d": "8/2018"}, {"body": "recommendation something want unmount say pushing current timestamp last time object edited", "d": "8/2018"}, {"body": "meetbryce say one cancel code may potentially reference instance unmount instance timers network requests may reference component instance corresponding callbacks", "d": "8/2018"}, {"body": "hey pravi mentor issue exactly repro bug exactly fixed", "d": "8/2018"}, {"body": "still relevant point resuming add general resuming umbrella", "d": "8/2018"}, {"body": "nt block resuming nt think", "d": "8/2018"}, {"body": "restrictions like sound quite artificial note designed case one direct child component toggled work inside multiple conditional children requires one child rendered time try avoid introducing apis react work limited subset cases work others might seem nice first need change code little bit hit wall change whole approach instead prefer limited set apis work way circumstances learn apply techniques everywhere without tweak code whenever run limitation convenience shortcut approaches mentioned either lifting state parent component hidingshowing suffer limitations work regardless many children lifecycles also handled predictable way either get full unmount remount children state preserved parent children stay mounted way thus need special lifecycle calls consistent react works general require special behavior user switch pages pages refreshed status preserved sounds like recipe memory leaks keep components instantiated forever app keep eating memory navigate pages caching data alone would okay exactly react lets keeping component instances state sounds like would create problems app becomes complex point late fix app heavily relies pattern think want introduce apis encourage irresponsible memory usage react said definitely want make caching use case easier people rightly noted brining something like redux cache network responses overkill working something stay tuned announcements thanks everyone links discussion hope answer frustrating think react way might feel annoying used helper like also think used react bit appreciate explicitness control react gives case", "d": "8/2018"}, {"body": "fair enoughthank explanation gaearon understand everything trade offs", "d": "8/2018"}, {"body": "dev creates following component know think scenario dev nt fully understand tainting works would nt write code like tainting security hole idea tainting use key trusted inputs reason would trusted dev understood tainting wanted create reusable component accepts html prop would make accept object would consumer component specify object idea tainting able search codebase audit instance righthand side always safe nothing would guarantee would safe however safe object able pass around freely regarding react native gracefully degrade necessary dangerouslysetinnerhtml nothing sure see problem inconsistent inconsistency nt always obviously bad typically exposes fundamental problems api", "d": "8/2018"}, {"body": "think scenario dev nt fully understand tainting works always thought naming dangerouslysetinnerhtml bit heavyhanded nt mitigate developer incompetence decent developers understand injection let inexperienced andor bad developers make mistakes", "d": "8/2018"}, {"body": "let inexperienced andor bad developers make mistakes react needs accessible safe developers skill levels making easier less experienced developers introduce security issues bad users react community general", "d": "8/2018"}, {"body": "developers experience levels make mistakes especially data goes many layers hard say gets sanitized strong guarantees regardless let keep thread topic avoid turning debate usefulness scary naming", "d": "8/2018"}, {"body": "explain use case symbols useful keys", "d": "8/2018"}, {"body": "well kind simple really even na\u00efve perhaps since keys need unique application logic kind purposeless thought would nice using symbols always unique without even worry coming unique names", "d": "8/2018"}, {"body": "think misunderstanding purpose keys keys nt need unique globally need unique among siblings nt need unique avoid clashes something like need represent stable identity data iterating typically would come data customer id username see explanations need come unique names already available data every time iterate list something users rows items products comments posts able use ids items keys see practical use case allowing symbols except misunderstanding", "d": "8/2018"}, {"body": "another potential problem using symbols might obscure issues unintentional data duplication since two symbols never equal even value wo nt get useful key warning duplicate items even symbol inputs identical would also problematic users defined symbols keys inline would different every render would force react remount elementcomponent always use avoid problems would easy pitfall users", "d": "8/2018"}, {"body": "shipped", "d": "8/2018"}, {"body": "thank", "d": "8/2018"}, {"body": "thank", "d": "8/2018"}, {"body": "reference case helps someone got working adding note might nodejs installation filesystem owner indeed rather user perhaps root cause issue environment", "d": "8/2018"}, {"body": "calling npm commands sudo going get issues future instead need uninstall node reinstall making sure install sudo", "d": "8/2018"}, {"body": "next release", "d": "8/2018"}, {"body": "fixed slowyn", "d": "8/2018"}, {"body": "work around right calling hydrate remove amp reappend elements direct children head body bottom nodes sounds like workaround hesitant go specific proposal nt feel like fully understand pros cons however feel strongly right solution please file new issue pr detailed description heuristic work instead best worst cases nt think change behavior without comprehensive analysis", "d": "8/2018"}, {"body": "problem like application digging firefox console conclusion error came library reactdom method setvalueforstyles code seem code party library pass null argument nodestyle temporary solution add null checking code become like also min version still hand nt know build minfied version simple way", "d": "8/2018"}, {"body": "ported example react fiddle behaviour seems identical chrome safari firefox got confused mean worked correctly mean always worked incorrectly", "d": "8/2018"}, {"body": "versions incorrect behaviour", "d": "8/2018"}, {"body": "wonder could use one checks could something like however depends reporting number actually hard time figuring get number input accept commas even setting page language attribute suggestions", "d": "8/2018"}, {"body": "mistaken russian locale use commas maybe set system language russian", "d": "8/2018"}, {"body": "going start warning", "d": "8/2018"}, {"body": "made error message clearer thanks reporting", "d": "8/2018"}, {"body": "seems like issue think disable event emitter avoid situation reacttriggered change causes event triggers react change causes event etc maybe events still pass", "d": "8/2018"}, {"body": "seems like interaction tracking thing bvaughn building might better fit longer term", "d": "8/2018"}, {"body": "related links profiler rfc interaction tracking proposal profilerinteraction integration devtools profiler plugin", "d": "8/2018"}, {"body": "gaearon issue would possible beginner noticed good first issue label added difficulty medium love get involved react looks like great way want sure something would tricky first contribution", "d": "8/2018"}, {"body": "need access reproduce would nt expect bug complicated debugging pain", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "gaearon nt exist anymore fixed", "d": "8/2018"}, {"body": "going assume fixed since nobody followed", "d": "8/2018"}, {"body": "feel free grab nt know fixed worth checking", "d": "8/2018"}, {"body": "gaearon still open claim", "d": "8/2018"}, {"body": "krrishdholakia yes still grabs already fixed feel free start looking reach issues along way", "d": "8/2018"}, {"body": "checked earlier might wrong quite sure fixed earlier nhunzaker produces indicates symbols functions stringified still went ahead added warnings prop maybe useful", "d": "8/2018"}, {"body": "although seems behave differently sure intentionally functions get stringified appended text symbol crashes application reproducing", "d": "8/2018"}, {"body": "raunofreiberg thanks looking agree textarea behave", "d": "8/2018"}, {"body": "looks perfect thank much want followup task could work fix elements philippspiess mean working tag happy investigate well", "d": "8/2018"}, {"body": "whoops yeah select tag forgot escape html perfect thank", "d": "8/2018"}, {"body": "raunofreiberg remaining work know", "d": "8/2018"}, {"body": "input textarea select covered ca nt think form elements attributes might issue good", "d": "8/2018"}, {"body": "right thanks contributions", "d": "8/2018"}, {"body": "somebody please update attribute table run fixture save markdown file put folder", "d": "8/2018"}, {"body": "ack send new snapshot shortly", "d": "8/2018"}, {"body": "pr sent looks like ssr still needs covered textareas options", "d": "8/2018"}, {"body": "longer forked", "d": "8/2018"}, {"body": "appears fixed", "d": "8/2018"}, {"body": "hey guys still progress would happy take", "d": "8/2018"}, {"body": "benbakhar like please take look review see room improvement goes diegoborda isaacchien et al changes requested gaearon contributors love pass baton one", "d": "8/2018"}, {"body": "sorry dropped past months pretty intense", "d": "8/2018"}, {"body": "fixed", "d": "8/2018"}, {"body": "thanks worries glad officially done little bit make react better", "d": "8/2018"}, {"body": "seems like might browser issue closing someone reproduce consistently verified nt happen raw dom api please file new issue including code snippets tried", "d": "8/2018"}, {"body": "nt think release anymore", "d": "8/2018"}, {"body": "feel old", "d": "8/2018"}, {"body": "year ago", "d": "8/2018"}, {"body": "context latest thinking", "d": "8/2018"}, {"body": "looks like issue feel free report chrome", "d": "8/2018"}, {"body": "want kill hover events touch input ontouchstart trigger onmouseover stopimmediatepropagation cancels internal cascade could please provide example demonstrates", "d": "8/2018"}, {"body": "shuhei thanks great analysis", "d": "8/2018"}, {"body": "guess worked react inserted much derided comments around text nodes relied comments way hold onto node position even text node got replaced react nt care", "d": "8/2018"}, {"body": "nt think possible make react resilient arbitrary mutations scope resilient replacement text nodes maybe make work", "d": "8/2018"}, {"body": "posted proof concept", "d": "8/2018"}, {"body": "soo nt think fix react without making legitimate mistakes hard find making performance worse common cases talked google folks got issue filed affected please feel free star andor share details affects important get fixed finally workaround use fix error make app little bit slower try determine whether tradeoff worth equivalent react would fix react would nt better solution anyway workaround looks like js typeof node function amp amp nodeprototype const originalremovechild nodeprototyperemovechild nodeprototyperemovechild function child childparentnode console consoleerror remove child different parent child return child return originalremovechildapply arguments const originalinsertbefore nodeprototypeinsertbefore nodeprototypeinsertbefore function newnode referencenode referencenode amp amp referencenodeparentnode console consoleerror insert reference node different parent referencenode return newnode return originalinsertbeforeapply arguments run code rendering application note cause legitimate errors logged console opposed thrown sufficient work around issues google translate causing react google translate fixes gets traction hard tell able remove hack since nothing else see actionable closing hope helps", "d": "8/2018"}, {"body": "risk stupid nonperformant idea consider approach try normal insertbefore nt work check expected parent node contains descendant node confirmed step search tree ancestor element child expected parent node use element instead", "d": "8/2018"}, {"body": "welcome implement something like sure react overhead even small checks", "d": "8/2018"}, {"body": "ok see", "d": "8/2018"}, {"body": "epreventdefault worked synthetic events way works vanilla js native events believe issue would go away guess answer something synthetic events calling preventdefault synthetic event real event vanilla js calling synthetic event definitely call underlying native event difference react using event delegation attaches listeners document level", "d": "8/2018"}, {"body": "baharev quite confusing pushed workaround master cloned repository took figure need roll commits back reproduce", "d": "8/2018"}, {"body": "gaearon sorry apologies verdict issue", "d": "8/2018"}, {"body": "issue appears caused react using event delegation better performance attaching every handler example nodes see chrome respects event handler example using event delegation js html body width height lt p gt box width height margin touchaction none documentaddeventlistener touchstart e amp gt epreventdefault etargetremove documentaddeventlistener mousedown e amp gt etargetremove see chrome nt respect attached document might chrome bug please feel free file another report reproducing cases maybe intentional related nt fully understand browser intended behavior interesting attaching appears sufficient probably get resolved regardless workaround attach local event listener manually right spirit nt understand needs complicated react want touch dom manually use ref example fix using react ref api diff asrccomponentsappjs bsrccomponentsappjs const swallow e gt class tile extends purecomponent node reactcreateref constructor props super props thistoggle thistogglebind componentdidmount thisnodecurrentontouchstart thistoggle toggle e swallow e consolelog id thispropsid class tile extends purecomponent render return tile ref thisnode onmousedown thistoggle ontouchstart thistoggle ontouchend swallow gt note reused might confusing sometimes receives native sometimes synthetic event real code probably duplicate extract common logic outside hope helps close nothing directly actionable us workaround simple enough", "d": "8/2018"}, {"body": "gaearon perfect thank much detail explanation", "d": "8/2018"}, {"body": "yeah seems regression introduced", "d": "8/2018"}, {"body": "iamdustan end working around somehow", "d": "8/2018"}, {"body": "modern browsers including mobile versions support esm esm longer future module system current defactostandard please aware providing standardized module critical problem especially defactostandard web library typical code apply react libraries fact actually libraries imported instead party transpilers bundlers emulate import process slightly justified providing real esm since browsers supported native esm anyway obviously time time provide esm specified typical sample code", "d": "8/2018"}, {"body": "started working", "d": "8/2018"}, {"body": "trysound thanks contribution place grab test esm build", "d": "8/2018"}, {"body": "ready reactis package", "d": "8/2018"}, {"body": "trysound ok found branch built know meant looking forward", "d": "8/2018"}, {"body": "think react community discussed issue quite enough please decide official module specification publish soon", "d": "8/2018"}, {"body": "kenokabe way nt force us please easy", "d": "8/2018"}, {"body": "current plan migrating packages named exports change wo nt affect libraries code nt introduce breaking changes since docs uses named exports another packages need handle default named exports work differently various tools", "d": "8/2018"}, {"body": "trysound apologies nt mean since head mention topic ca nt quite easily nt really decided toplevel es exports would look like package example react bunch named exports also default export called react encourage people import better tree shaking day mentioned ago thought discussed react community wanted suggest decision would clear thanks", "d": "8/2018"}, {"body": "going start warning", "d": "8/2018"}, {"body": "good example might necessary interacting component interface provide way initialize values form component store input values state nt option callback returns jquery form object points iframe anyway way found initialize form manipulating inputs dom manually triggering react pick changes fwiw would agree problem reacthubspotform interface necessarily react leave thought provide context", "d": "8/2018"}, {"body": "meh think likely everybody using recent enough versions nt matter", "d": "8/2018"}, {"body": "cc gaearon happy try grabbing one yall still need someone work", "d": "8/2018"}, {"body": "sounds good looked yet proof concept would help conversation", "d": "8/2018"}, {"body": "wonderful putting queue ty quick response gaearon", "d": "8/2018"}, {"body": "likely wrong place ask question could nt get irc discord getting error running yarn root running node yarn went docs watched youtube video anyone point right direction getting project running machine osx", "d": "8/2018"}, {"body": "yarn sounds super old nt current version something", "d": "8/2018"}, {"body": "also using noscript tag project similar fashion stephenlast long page images lazy loaded ones lazy loaded coresponding noscript tag containing image tag target source google recommended way provide seo content lazy loaded images react hydration occurs looks like img tag within noscript tag gets executed image getting downloaded browser look network tab chrome see noscript wrapped images requested block react hydration rely ssr html noscript wrapped images get downloaded react components contain noscript tags attach child contents actual dom nodes", "d": "8/2018"}, {"body": "yes mere construction dom node causes browser preemptively download image download starts node even attached document therefore irrespective whether eventually become child element", "d": "8/2018"}, {"body": "adding case ssr fixture verified today jsx gt still works master jsx still broken way described unnecessarily downloads image also verified solution proposed comment adding indeed make second case work expected would still happy send pr including updated fixture might go ahead weekend better place discuss proposed solution", "d": "8/2018"}, {"body": "another case really annoying using material ui component renders nonnative mode want nothing selected immediately pops head instead nonintuitive time wasted petty little issues like really add sometimes find annoying major bugs like ernestopye suggestion would say ideal name prop rather input marked controlled even allow personally wish uncontrolled case optin via property", "d": "8/2018"}, {"body": "takeaway far changing semantics suggested comments thread reduce confusion think people come complaints valid ones thread unexpectedly treated differently obvious treating uncontrolled today confusing react today nt mean changing behavior make less confusing cost changing behavior high clear understandably frustrating agree core issue ambiguous clear means maybe one would like submit rfc prop alternative", "d": "8/2018"}, {"body": "nt use uncontrolled inputs struggling see ca nt changed comment sophiebits mentioned someone might use think safe say uncontrolled input defined afterall defaultvalue property mentioned uncontrolled components documentation gaearon scenarios think cause people complain gets changed use cases would break see facebook codebase somewhere", "d": "8/2018"}, {"body": "seems like solved concerns closing wrong please open focused rfc thanks", "d": "8/2018"}, {"body": "gaearon remaining question ambitious one deprecate ref prop entirely convinced unnecessary", "d": "8/2018"}, {"body": "think really considered important imperative escape hatch think necessarily tied host instances proposal completely removing refs custom components would need consider broad set use cases provide alternatives think proposal done", "d": "8/2018"}, {"body": "status one wish remove support reconciling iterables would include changes function", "d": "8/2018"}, {"body": "raunofreiberg want remove support treating functions iterables meaning literally function values iterator attached worked accidentally feel free pr", "d": "8/2018"}, {"body": "gotcha try start working thanks", "d": "8/2018"}, {"body": "fixed", "d": "8/2018"}, {"body": "sebmarkbage allowed direct access top hierarchy regardless component position either within hierarchy part separate packaged framework comparatively see problems slot solution solution assumes access position hierarchy ok bubble events definitely case components component frameworks assumes ok bubble events level hierarchy events still bubble slot position craigkovatch mentioned", "d": "8/2018"}, {"body": "also usecase probably similar ones already mentionned surface users select things mouse lasso basically widthheight root app use event surface also buttons open portals like modals dropdowns mousedown event inside portal actually intercepted lasso selection component root app see many fix problem render portal one step root lasso component convenient would probably need resort contextbased lib like reactgateway maybe slot system mentionned stop propagation manually inside portal root could lead unwanted sideeffects mentionned ability stop propagation react portals btw filter events come portal solution filter events js const approotnode documentgetelementbyid root const isinportal element gt isnodeinparent element approotnode clearly best solution us nice nested portals current usecase one currently works nt want add new context lib complex refactor solve wanted share solution", "d": "8/2018"}, {"body": "able accomplish blocking event bubbling noted elsewhere thread another seemingly thornier issue running syntheticevent bubble rather traverses common parent component component described means mouse pointer enters outside browser window every handler top dom component createportal triggered order causing sorts events fire never since nt bubble ca nt blocked portal level seem issue event respect virtual hierarchy sequence body content rather descended directly subtree anyone ideas prevent events propagating top dom hierarchy divert directly portal subtree please let know", "d": "8/2018"}, {"body": "reproduce think maybe clemmy missed using arrow keys part crucial reproducing", "d": "8/2018"}, {"body": "seems like browsers would better positioned nt mind taking pr kind way opt feel strongly though", "d": "8/2018"}, {"body": "seems like bvaughn upcoming devtools profiler help", "d": "8/2018"}, {"body": "sounds super interesting place progress followed", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "give idea widely supported", "d": "8/2018"}, {"body": "gaearon according supported major desktop browsers plans implement sure whether mark issue resolved nt use", "d": "8/2018"}, {"body": "thanks everyone still outstanding tests think close", "d": "8/2018"}, {"body": "condition looks like seems like addressed", "d": "8/2018"}, {"body": "johan right interesting little investigating looks like tests end depending whether testing input events level support safari chrome opera input events level support safari seems like react nt need distinguish purposes level test way go also level test seems bit fishy anyways", "d": "8/2018"}, {"body": "consider button sets disabled thisstatehassent onclick thisstatehassent null thissendmoney sendmoney sets hassent true product developer expectation onclick fire otherwise two fast clicks send money twice errorprone conceptual model example set disabled attribute checked flag onclick handler mean sufficient set disabled attribute also need check inside click handler prevent kinds click issues", "d": "8/2018"}, {"body": "thanks gaearon everyone learned lot following thread", "d": "8/2018"}, {"body": "fwiw since stopped using aggressive need instead use polyfill internally implemented top although conceptually still use idle work", "d": "8/2018"}, {"body": "ability set srcobject video element common webrtc applications sure even possible according docs mdn seems property object attribute html element proposal would mean react would add stream programmatically cool maybe bit beyond scope ui library cover", "d": "8/2018"}, {"body": "thanks seems like since solved improving message", "d": "8/2018"}, {"body": "craigkovatch someone working would probably post thread welcome propose solution outlined ideas maybe nt make much sense since looked somebody fresh perspective would probably make progress", "d": "8/2018"}, {"body": "think might plan try send pr soon", "d": "8/2018"}, {"body": "thanks dan sorry lack response proposal versed internals react nt feel competent comment", "d": "8/2018"}, {"body": "right merged fix think strikes reasonable balance giving control warning noise preventing accidentally swallowed errors specifically next react release likely wo nt log extra message three conditions true development mode dom environment error successfully caught error boundary called error custom event handler let unpack means adjust tests short summary new helper react starting react yet able suppress rendering errors tests using special helper variation technique put example wo nt generate warnings intentionally thrown errors use reactdom development mode jsdom environment however fail tests unintentionally thrown errors even silenced nested error boundaries helper sufficient reason eg using test renderer instead reactdom please keep mocking nothing wrong approach curious let guide works way current behavior react inclusively consider example js const react require react const reactdom require reactdom function darth throw new error father errors gt const div documentcreateelement div expect gt reactdomrender div tothrow father change older version jsdom one ships currently stable create react app output looks like pass srcapptestjs errors consoleerror error occurred component darth bad although warning bit annoying however still change gets worse update recent version jsdom jest update pass srcapptestjs errors consoleerror error uncaught error father reportexception lt gt promisethen processtickcallback consoleerror error occurred component darth see test still passing two annoying warnings let dig see emits warnings see two warnings first one coming jsdom second one coming react new jsdom warning great mimics browsers allows us report errors even accidentally swallowed component code example react error would swallowed react still surfaces user feature bug great jsdom good default tests especially application tests annoying libraries opt jsdom warning cases nt want see browsers opt calling custom event handler object js function onerror event note swallow reports unhandled errors use extreme caution eventpreventdefault windowaddeventlistener error onerror used extreme caution easy accidentally mute information important warnings granular approach use tests intentionally throw errors js const react require react const reactdom require reactdom function darth throw new error father let expectederrors let actualerrors function onerror e epreventdefault actualerrors beforeeach gt expectederrors actualerrors windowaddeventlistener error onerror aftereach gt windowremoveeventlistener error onerror expect actualerrors tobe expectederrors expectederrors errors gt expectederrors remember one error expected const div documentcreateelement div expect gt reactdomrender div tothrow father note using silence expected warnings however deeper component thrown error accidentally caught silenced test would still fail get extra unexpected error use approach make sure every call matching call intentionally put even test fails calls still always match alternative nt like use blocks test suite effectively silenced noisy jsdom warning still see component stack react pass srcapptestjs errors consoleerror error occurred component darth let see fix opt seeing react component stack note section work next react release likely still writing future reference component stack important print helps locate source error changed logic wo nt print stack error silenced described error handled error boundary example using error boundary see extra stack fix extracting method called uses error boundary js const react require react const reactdom require reactdom function expectrendererror element expectederror noop error boundary testing class testboundary extends reactcomponent constructor props super props thisstate diderror false componentdidcatch err thissetstate diderror true render return thisstatediderror null thispropschildren record errors let toplevelerrors function handletoplevelerror event toplevelerrorspush eventerror prevent logging eventpreventdefault const div documentcreateelement div windowaddeventlistener error handletoplevelerror try reactdomrender element div finally windowremoveeventlistener error handletoplevelerror expect toplevelerrorslength tobe expect toplevelerrors message tocontain expectederror suggesting copy paste helper every test probably best define project even put npm approach test simple js function darth throw new error father errors gt expectrendererror father mentioned beginning put helper feel free republish npm turn jest matcher etc conclusion hope helps sorry disappointing nt disable warning hope see rationale think extremely important prevent app developers accidentally swallowing errors even comes cost additional bookkeeping library developers want make assertions thrown errors finally approach nt work like clarify nothing bad mocking either time react suite written custom matchers assist perhaps want something similar lot tests around throwing errors react components cheers", "d": "8/2018"}, {"body": "banga done investigation conclusion far trouble worth point may revisit point later", "d": "8/2018"}, {"body": "stale", "d": "8/2018"}, {"body": "skrpk work updated reactrouter extra configuration", "d": "8/2018"}, {"body": "romeofolie hi looks like reactrouter bug related prop types working reactrouter stackoveflow reactrouter issue think jsx indexjs import react react import reactdom reactdom import provider reactredux import createstore applymiddleware redux import router browserhistory reactrouter import reducers reducers import routes routes const createstorewithmiddleware applymiddleware createstore reactdomrender documentqueryselector container jsx routesjs import react react import router indexroute reactrouter import app componentsapp export default works", "d": "8/2018"}, {"body": "nt seem like strong evidence react issue rather firefox bug something happens react nt happen vanilla dom please file another issue vanilla dom example demonstrating issue specific react thanks", "d": "8/2018"}, {"body": "filed issue firefox nt think react anything wrong browsers appear consistent even including jsdom", "d": "8/2018"}, {"body": "aweary know actively worked looks like could good first issue get teeth", "d": "8/2018"}, {"body": "worked sure", "d": "8/2018"}, {"body": "cheers gaearon able point right direction files looking error logging functions react uses etc problem look around", "d": "8/2018"}, {"body": "probably relevant", "d": "8/2018"}, {"body": "thought could reproduce past ca nt manage even close figure reproducing case please share thanks", "d": "8/2018"}, {"body": "hmm reproduce add pressure replacing html const component react const render unstabledeferredupdates deferredupdates reactdom let lastlogged class foo extends component constructor super thisbar thisstate thing onwheel e gt thisbar const bar thisbar deferredupdates gt thissetstate prevstate props gt lastlogged amp amp lastlogged bar throw new error oops lastlogged bar return thing mathrandom componentdidmount setinterval thisonwheel render return div style background red gt inner onwheel thisonwheel style height gt wheel real fast class inner extends component onwheel e gt epreventdefault thissetstate otherthing mathrandom thispropsonwheel render return div style width height background red onwheel thisonwheel gt thispropschildren render documentqueryselector container also reproduce nt manage reproduce recent versions assume got fixed whatever", "d": "8/2018"}, {"body": "going close nt sufficient details proceed issue isolated deprecated driver worst case scenario acceptable tradeoff better longterm stability", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "ca nt reproduce chrome emitting events outside window dom elements way get working handler top level ca nt make toplevel handlers react least currently without code examples hard understand issue discussed", "d": "8/2018"}, {"body": "nhunzaker found able create iframe use ref mount something onto however running issues submitted form form disappears unless disabled default action subsequent nt getting iframe submission messages sent help much appreciated", "d": "8/2018"}, {"body": "played around bit fixture awesome btw starting think need load completely new page instead using portal seems like something gets hung form submitted messes history think ideally use main fixtures page navigate back forth iframe contents totally different document might require deeper changes fixtures time wonder could vet idea creating static framehtml public directory pulled latest react umd modules", "d": "8/2018"}, {"body": "see give try mean fixture test would embedding actual iframe url fixture test somehow mount react form", "d": "8/2018"}, {"body": "mean fixture test would embedding actual iframe url framehtml fixture test somehow mount react form framehtml yes like could host document time anyway", "d": "8/2018"}, {"body": "confusing sentence still exists latest docs", "d": "8/2018"}, {"body": "send pr please", "d": "8/2018"}, {"body": "gaearon may send pull request", "d": "8/2018"}, {"body": "tested", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "current plan unify", "d": "8/2018"}, {"body": "nt see anymore react seems like works", "d": "8/2018"}, {"body": "acdlite createroot api close", "d": "8/2018"}, {"body": "warning warning happening avoid warning thanks", "d": "8/2018"}, {"body": "mqliutie ca nt help without reproducing case", "d": "8/2018"}, {"body": "likely means empty client empty server", "d": "8/2018"}, {"body": "gaearon thanks reply right fault", "d": "8/2018"}, {"body": "mondwan gaearon like grab one looks bit stale still needed love take crack", "d": "8/2018"}, {"body": "sure feel free look note obvious fix nt actually solve problem want extra steps production", "d": "8/2018"}, {"body": "seems like issue chrome made breaking change broke us workaround attach event listener directly node via ref example linked issue diff asrccomponentsappjs bsrccomponentsappjs const swallow e gt class tile extends purecomponent node reactcreateref constructor props super props thistoggle thistogglebind componentdidmount thisnodecurrentontouchstart thistoggle toggle e swallow e consolelog id thispropsid class tile extends purecomponent render return tile ref thisnode onmousedown thistoggle ontouchstart thistoggle ontouchend swallow gt attach listener manually would work longer term fix since workaround exists particular issue actionable us close favor would solve longer term", "d": "8/2018"}, {"body": "got feedback nt clear enough problem chrome made breaking change documentlevel listeners nt work anymore react binds events document level better performance react nt currently work work around attaching listener individual node level refs showed previous comment longer term plan change react attach events root container level instead document level anyway implement problem go away workaround ref manual listener work fine", "d": "8/2018"}, {"body": "indiesquidge believe still controlled component note still green hopefully everything saying correct difference function update component state inline function since nt middle step altering input fairly straight forward inline function understanding component holds state intent pass state submit eg form controlled component nt think using vs going provide much difference field going used say posting info server component state simply referencing part component state nt data stored state purpose uncontrolled component use instead uncontrolled component however functionality see losing using refs ca nt easily provide form validation onthefly probably benefits using controlled component aware well", "d": "8/2018"}, {"body": "please file issues documentation longer tracking main repository discussion read anyone team thank", "d": "8/2018"}, {"body": "anyone else experiencing issue nashorn would best make sure scriptengine invocation wrapped syncronized block avoid issues multithreaded access nashorn engine", "d": "8/2018"}, {"body": "dam dude worked", "d": "8/2018"}, {"body": "nt need workaround react later supports ref forwarding", "d": "8/2018"}, {"body": "object refs landed solve inconvenience cases", "d": "8/2018"}, {"body": "encountering today reactrouterdom links work fine back button broken ui nt change maierson solution fixed seems like bug needing documentation packages edit packages", "d": "8/2018"}, {"body": "discussion turning react router discussion issue react therefore lock avoid confusion problem react router please bring repository support forums use issue tracker bugs react", "d": "8/2018"}, {"body": "unfortunately webpackbin appears ca nt reproduce regardless seems like niche bug people report take look", "d": "8/2018"}, {"body": "gaearon bestpractice documentation somewhere code runs needs node attached document eg seems settimeout probably right approach actions taken ref callback instead", "d": "8/2018"}, {"body": "ref callback wo nt help either react manages dom respect container pass react point view moment dom attached container react job done react ca nt know node attached document something code thus control could attach calling react always document time ref callback fires could attach later imagine case one knows gets attached attaching best way add callback queue notify attach container hope helps", "d": "8/2018"}, {"body": "going close duplicate appreciate extra details issue include original issue", "d": "8/2018"}, {"body": "fixed", "d": "8/2018"}, {"body": "ca nt reproduce anymore whether react draft chrome bug seems like got fixed", "d": "8/2018"}, {"body": "came upon issue upgrading enzyme enzyme anyone experiences upgrading enzyme fixed disabling testing lifecycle methods", "d": "8/2018"}, {"body": "similar problem changed code change state input got replaced new one loosing focus old input problem wrote custom form component cloned child inputs via however suggested prop works fine still wonder solution could look like would keep eventual inputs place", "d": "8/2018"}, {"body": "case fetch content cms contains html forms forms displayed part react application inputs nt work issue html forms directly appended words iframe ca nt use iframe workaround react ignore attribute thank much help advance", "d": "8/2018"}, {"body": "nt understand displaying html react encounter issue share small example", "d": "8/2018"}, {"body": "sure nevertheless seems like something library use parse html content freezes input hand using method everything works perfectly know third party library maybe help get idea happening anyways fault saying code nt work issue sorry setting fire", "d": "8/2018"}, {"body": "nevertheless seems like something reacthtmlparser library use parse html content freezes input seems like nt use controlled attribute instead convert please file issue thanks", "d": "8/2018"}, {"body": "tried get around using state used class variable state would recreate children hence typing resulted superslow recreating children props change found good way get around problem using new valuescontext form field inside valuecontextconsumer recreate via clone props values changes", "d": "8/2018"}, {"body": "sorry hard understand problem short description solution helped without specific code examples confuse future readers see specific bug react please file new issue reproducing example lock avoid future confusion", "d": "8/2018"}, {"body": "anybody finding thread still problem react helpful comment related rfc seems exactly looking similar eliseumds proposing note current behavior keep current content content set different combination produces desired behavior already", "d": "8/2018"}, {"body": "long time updated description issue provide coherent description proposal", "d": "8/2018"}, {"body": "could comment reason close", "d": "8/2018"}, {"body": "hey ran problem google send instead stackoverflow everyone ending issue hope could help someone additional information problem number inputs", "d": "8/2018"}, {"body": "remaining issues sufficiently covered linked issues", "d": "8/2018"}, {"body": "removing fixed", "d": "8/2018"}, {"body": "experience please file new issue complete reproducing example commenting closed issue helpful nt track thank", "d": "8/2018"}, {"body": "going start warning", "d": "8/2018"}, {"body": "bvaughn could optional enhancement interaction tracking eg dev mode", "d": "8/2018"}, {"body": "sorry enhancement suggesting", "d": "8/2018"}, {"body": "could attach every time new work begins happens interaction lets us track stack trace things happened put break point render trace commits display stacks caused commit happen first place", "d": "8/2018"}, {"body": "ah suggesting could add stack field interaction dev mode make use info somehow sources tab integration seems tricky since might multiple interactions active update store interactions individual least assuming pr lands asis would nt good way knowing interaction caused render misunderstanding something", "d": "8/2018"}, {"body": "getting error quite frequently whenever component removedunmounted", "d": "8/2018"}, {"body": "said every comment thread error symptom another real error code swallowed code example due incorrect promise handling point say easiest way fix upgrade react react errorresilient point real error earlier code react going lock actionable items us", "d": "8/2018"}, {"body": "seems like nt fixed need figure thought fixed", "d": "8/2018"}, {"body": "might mismatch originally referenced issue focused password reveal icon", "d": "8/2018"}, {"body": "believe works edge still confirming need step away bit found setup fixture issue getting remember password flow made test fixture case associated diff holds true master react react additionally issue triggering password flow luisrudge example also see passwords saved manager", "d": "8/2018"}, {"body": "looks like already came conclusion work tracked issue", "d": "8/2018"}, {"body": "misterblblbl please file new issue problem still relevant tracking closed issues thanks", "d": "8/2018"}, {"body": "happening", "d": "8/2018"}, {"body": "shallow renderer nt supposed trigger method usually touches dom would nt work without dom", "d": "8/2018"}, {"body": "meh", "d": "8/2018"}, {"body": "yeah react bug think problem create synthetic event awaiting fix react devs", "d": "8/2018"}, {"body": "bug discussed avoid confusion locking issue experience bug react please file new issue reproducing example thanks", "d": "8/2018"}, {"body": "problem react", "d": "8/2018"}, {"body": "file new issue details please thanks nt track closed issues", "d": "8/2018"}, {"body": "believe correct behavior looks like html specification chrome adopted march source spec submitting detached form yields following warning speculate security reasons nt found definitive answer still attempted modern version react yield exact warning react presently appears consistent htmljs approach html specification closing please let know missed something", "d": "8/2018"}, {"body": "really better name reason compatibility js libraries automatically add dblclick events like ca nt use doubleclick zoom react nt allow property dblclick tag", "d": "8/2018"}, {"body": "think might confused something whether react uses specific event name nothing library would react uses event delegation better performance nt literally attach event listeners every node anyway file new issue runnable code example demonstrates problem happy look", "d": "8/2018"}, {"body": "locking prevent confusion experiencing problem related please file new issue runnable code example discuss thanks", "d": "8/2018"}, {"body": "far understand supported closing please let know missed something", "d": "8/2018"}, {"body": "got rid fbjs actually seem prefer scripts watching seems like might complicated pipeline maybe worth", "d": "8/2018"}, {"body": "fwiw mention using input type rather allows many benefits brings without many drawbacks illustrated using still allows mobile phones display number pad input little closer semantic truth text obviously still ideal way overcome usage", "d": "8/2018"}, {"body": "sure suggested already makes sense anyone however would make passing options natural way would also match addeventlistener schema", "d": "8/2018"}, {"body": "moving towards phaistonian suggestion would remove need handlers exist today", "d": "8/2018"}, {"body": "alexreardon really think option since plain js expression evaluates construction mean would require changing way jsx compiles js would breaking change doubt react team would go route opinions", "d": "8/2018"}, {"body": "regarding expression could done differently intention probably lot options options include js import handler react ontouchstart handler listener options", "d": "8/2018"}, {"body": "like idea passing object though either way needs solution", "d": "8/2018"}, {"body": "solution yet", "d": "8/2018"}, {"body": "solution yet classic respectively yep sucks", "d": "8/2018"}, {"body": "anyone update us progress nt see updates means updates agree would great solve write proposal work migration steps would would help move progress forward", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "gaearon would mind add tipsreasons explain", "d": "8/2018"}, {"body": "made codepen recapexplain going gaearon sophiebits let know forgot something", "d": "8/2018"}, {"body": "agree testutils limitations nt great encourage try something like reacttestinglibrary instead sorry nt better solution nt fully understand trying get dom node point getting react instance search dom node might well search input directly first dom node got something like regardless think might add better testonly traversal api reactdom point would solved probably worth adding churn current api replacement meantime reacttestinglibrary really nice might work better", "d": "8/2018"}, {"body": "fork fiddle used instead", "d": "8/2018"}, {"body": "nt necessarily want dom element coresponding custom editor like able find rendered component instance overview rendered row component instance cell sfc locate test api divcell customeditor component instance like able find div test api run assertions use locate inner customeditor component instance check props simulate event etc ui hierarchical expect able traverse like basic react test api built entire suit helpers similar reacttestinglibrary enzyme top works fine pretty fast thing keep fighting issue regardless thanks reply appreciate someone taking time look btw codepen gives right", "d": "8/2018"}, {"body": "indeed docs indicate expected behavior nt know sure historical context behind guess done maps intuitively engineers tend use events disagree rationale please file new issue change proposal close nt seem bug", "d": "8/2018"}, {"body": "resources allow setting use modern javascript modulesfeatures", "d": "8/2018"}, {"body": "leaving reference similar question nt get much attention took find discussion want crosslink edit nt seem happen long object state onelevel deep ie use js object contain class tsx import component react import react react export class app extends component render return class foo constructor text thistext text get value return thistext interface istate foo foo class main extends component lt istate state istate foo new foo componentdidmount thissetstate foo new foo react render consolelog thisstate return thisstatefoovalue", "d": "8/2018"}, {"body": "issues described collections iterated multiple times likely related react devonly validations nt frequently requested feature hesitant adding explicit support specific library data structures cost users pay even would better rfc like write formal rfc please thanks", "d": "8/2018"}, {"body": "however solve issue really want less hacky way passing controlled input", "d": "8/2018"}, {"body": "agree jimfb null items valid taken childrenmap function map function childrenmap function looping though specific children list apply function child map responsible rendering something formatting children list developers reactjs users may need render null children differently null children mean null doest always mean rendered may rendered differently forexample element valid element null element valid element valid element null element valid opinion bug works intended web developers take account design solutions accordingly example initial snippet yordis", "d": "8/2018"}, {"body": "agree value removing nulls remove nulls already use nt believe worth churn change given many people may code relies current behavior general nt see best practice going forward since hard make use without reimplementing lot rules react hand inevitably making apis nt consistently work expected going forward hopefully document alternatives like createcontext closing", "d": "8/2018"}, {"body": "never mind actually right function instance different pass null old one component new one nt read whole thing curious js engine leaked passing passed", "d": "8/2018"}, {"body": "reference problem cases like js class foo extends reactcomponent whenwehavethediv div gt divqueryselector foo something render return simply intuitive called per reference really need clean touching dom", "d": "8/2018"}, {"body": "trusktr nt read whole thing curious js engine leaked passing null null passed believe already filed two issues year ago responded long form explanation exact question add already said code example last comment seem like needs use ref callback use object refs introduced react lifecycle hook note would work element ref returned unconditionally render otherwise still use null checks ref unmounts hope helps", "d": "8/2018"}, {"body": "constructor props super props use", "d": "8/2018"}, {"body": "somebody please help understand problem strictly extra calls middle get incorrect value end", "d": "8/2018"}, {"body": "test fix attempt passes remove assertion number times called suppose issue extra calls", "d": "8/2018"}, {"body": "extra onchange calls getting incorrect value end seems like oncomposition problem", "d": "8/2018"}, {"body": "crochefluid create failing test similar tried test incorrect value", "d": "8/2018"}, {"body": "gaearon gon na try try test safari macios", "d": "8/2018"}, {"body": "node test encodes sequences captured different browsers devices please see source need add sequences failing", "d": "8/2018"}, {"body": "hit surprised find normalized react", "d": "8/2018"}, {"body": "possible normalize unfortunately viable approaches timeout based caveats failure cases probably marked similar really nt anything react practically generally avoid individual usecases app specific workarounds approach outlined generally works deal timeout", "d": "8/2018"}, {"body": "jquense ie least sets blur events fire wrong using available", "d": "8/2018"}, {"body": "craigkovatch interested topic pulled exactly trick recently make work ie basically uses ie otherwise", "d": "8/2018"}, {"body": "possible normalize unfortunately viable approaches timeout based caveats failure cases probably marked wontfix similar really nt anything react practically generally avoid sure need reiterate topic issue normalizing would impossible issue browser supporting trying normalize like obsolete versions firefox issue ie support problem react binds wrong event react listens events nt instead proper events request never asked react attempt polyfill something nt available asked react listen correct event already code targeting handle discrepancy gotten worse time knowledge firefox fixed issue implemented removing issue one browser supporting resulting browsers supporting however stuck around yet nt work react despite like browsers notable userbases supporting", "d": "8/2018"}, {"body": "well chrome input type date pop date selector produce correct valid date still get onchange event using version react", "d": "8/2018"}, {"body": "experience problem please file new issue reproducing example nt track closed issues enough open ones likely unrelated original problem creates confusion", "d": "8/2018"}, {"body": "locking stale many things thread might changed since issue filed welcome file new one long provide specific code example nt work browser details look try fix thanks", "d": "8/2018"}, {"body": "sounds like ended different model suspense cache context cache might get support subscriptions track remaining work suspense also provide subscription package isolated cases", "d": "8/2018"}, {"body": "issue closed need fix bug used ugly hack simulate synthetic event", "d": "8/2018"}, {"body": "devbazilio file new issue please describe problem detail thanks posting stale issues helpful", "d": "8/2018"}, {"body": "wanted add use case redux store data along data fetched error etc component requires error prop display error user data could nt fetched null data loaded successfully populated error", "d": "8/2018"}, {"body": "passing loader component nt want render loader pass afaik function return instead rendering anything passing value looks like correct way", "d": "8/2018"}, {"body": "ca nt first way", "d": "8/2018"}, {"body": "avoid breaking anything could", "d": "8/2018"}, {"body": "like know well case change state render called component child component invoke render parent componentdidupdate never fired file real dom actually changed fire postrender whether real dom changed fyi real dom change method never called inquiring minds want know", "d": "8/2018"}, {"body": "flyingace pointed clarification docs seems reverted issue reopened", "d": "8/2018"}, {"body": "issue documentation please file documentation repository somebody else address reading closed issues hard enough keep open ones feedback unfortunately going void thank", "d": "8/2018"}, {"body": "almost year new firefox esr old one still worth", "d": "8/2018"}, {"body": "probably worth current browsers fine", "d": "8/2018"}, {"body": "quantuminformation", "d": "8/2018"}, {"body": "tend agree using sin want support least give warning user", "d": "8/2018"}, {"body": "like using important makes feel like code important lol", "d": "8/2018"}, {"body": "trying use important background colors print using chrome maybe better way nt found \u30c4", "d": "8/2018"}, {"body": "nt want load full cssinjs solution minimal implementation codesandbox gist technique breaks certain input also would touch simpler modified wrapped element dom property using set apis rather target css allow inlinestyle overrides properties", "d": "8/2018"}, {"body": "like others ran trying build reactpowered widget used third party sites spent couple hours super confused one point styles would work soon threw disappeared frustrating", "d": "8/2018"}, {"body": "fine approach compared solution gaearon suggested js export default function checkbox props const setcheckboxref checkbox gt checkbox checkboxindeterminate propsisindeterminate return checkboxproptypes isindeterminate proptypesbool checkboxdefaultprops isindeterminate false", "d": "8/2018"}, {"body": "yes fine", "d": "8/2018"}, {"body": "simple", "d": "8/2018"}, {"body": "example person people share similar interfaces makes easier mix stateful stateless components means less work decide convert one type component yes often start stateless component function later find need convert stateful component class findreplace thisprops becomes bit tedious able write method component class using interface stateless component would super nice", "d": "8/2018"}, {"body": "see discussion left response understand inconvenient going address however use particular solution", "d": "8/2018"}, {"body": "mentioning probably related", "d": "8/2018"}, {"body": "update issue", "d": "8/2018"}, {"body": "update issue updates would issue please nt post nt anything meaningful add spamming everyone subscribed issue thanks", "d": "8/2018"}, {"body": "also raised issue dev sure going fixed fix unfortunately nt coordinated react team nt aware chrome ios sets property accidentally happened trigger change handler past versions nt intentional side support already made change removed behavior nt aware chrome started relying working browser adding reactspecific hack please make sure loop somebody react team", "d": "8/2018"}, {"body": "wanted", "d": "8/2018"}, {"body": "nt know still relevant able solve issue keeping track carat position updating necessary note may may compile asis pasted complex component whittled mostly bare essentials show works import react react class input extends reactcomponent static defaultprops shouldcommitvalue value gt true example disallowing certain types strings bet set value example limit input valid css selectors", "d": "8/2018"}, {"body": "think guys realized managed using react refs necessary use statefull component need use callback function updated state javascript class app extends component class custominput extends reactcomponent constructor props super props thisstate cursor", "d": "8/2018"}, {"body": "acusti possible resolved merger", "d": "8/2018"}, {"body": "yes indeed issues refers previous uses global objects", "d": "8/2018"}, {"body": "woooooo cheers closing year old issue", "d": "8/2018"}, {"body": "looks like issue still exist using tag nest issue fixed replacing container", "d": "8/2018"}, {"body": "experience something similar three years later original issue closed sure different unrelated issue please file new one nt keep track closed issues feedback unfortunately going void filing new issue please provide reproducing example using dangerouslysetinnerhtml tag nest sounds like browsers work ca nt nest react warns except case react ca nt validate", "d": "8/2018"}, {"body": "modernized version example given class bigbutton extends reactcomponent childhandleclick e gt alert big button clicked thispropsonbigbuttonclick render return class parent extends reactcomponent parenthandleclick gt alert parent clicked render return", "d": "8/2018"}, {"title": "router new redirect guard proposal", "body": "submitting current behavior currently following types guards fired shown order first activation guards check route may activated resolve guards fetch data route activated also option perform static redirect however dynamic redirect eg based fetched data options limited redirect inside resolve guard see action example however construction work deeplink redirect triggered well also resolve guard triggered navigating away thus example lead us luckily achieve better result performing dynamic redirect guard empty child route typescript const routes path resolve mydata mydataresolver children relative redirect either foo bar path canactivate myredirectguard see action example however feels cumbersome abuse guard due issue use hack lazyloaded modules also data initially loaded twice however redirect guard reuse yet resolved course redirecting inside parent component worst solution breaks back button navigation proposal guard feels like dynamic redirects inside route configuration really possible angular router resolve guards canactivate guards disadvantages proposal new type guard redirect guards run canactivate resolve use resolved data resolve guards may used componentless routes asynchronous example imlementations foo class mysimplerelativeredirectguard implements redirect redirect route activatedroutesnapshot state routerstatesnapshot string return class myasyncredirectguard implements redirect redirect route activatedroutesnapshot state routerstatesnapshot observable return thisperformsomeasynctaskpipe map gt class myresolveddataredirectguard implements redirect redirect route activatedroutesnapshot state routerstatesnapshot observable return", "num": "25773", "d": "8/2018"}, {"title": "get resolved custom renderer provided via di", "body": "submitting bug report current behavior standard ngmodule used instead ones provided via dependency injection expected behavior resolved custom resolved motivation use case changing behavior trying render angular moduleroot component nonhtml structure environment minimal reproduction problem instructions run code debugger use vs code source code available target commit custommodulerendererts appmodulets", "num": "25771", "d": "8/2018"}, {"title": "using http hit bootstrap typeahead", "body": "error find differ supporting object object object type object ngfor supports binding iterables arrays getting error code hits following component search text observable gt text pipe debouncetime distinctuntilchanged map term gt termlength lt thisengageservicesearch term subscribe emps gt empsfilter e gt eemployeenames thisengageservicesearch calling http get via service ngb template code ngbtypeaheadwindowhtml modify code get work way found far sticking api call loop goes alphabet times loads results array array reason loads duplicates api hits endpoint component loads absurd", "num": "25769", "d": "8/2018"}, {"title": "making service call developement server", "body": "using express server production making startup call serving static files saving data js file serving need angular developement server make service call using developement server way html loads save data idea approach problem angular angualar prod server express", "num": "25766", "d": "8/2018"}, {"title": "email validator single letter domain extension", "body": "submitting current behavior email validator process string aaa aaaa consider valid expected behavior single letter extension nt used considered invalid minimal reproduction problem instructions check console prints motivation use case changing behavior single letter extension nt used environment", "num": "25763", "d": "8/2018"}, {"title": "angular aio general setup missing instructions needed root", "body": "submitting current behavior current behavior conversion necessary symlinks chapter developing windows execution yarn following command yarn setup fails furthermore yarn docs command also fails error conclude problem arises generation documentation perhaps expected behavior steps given general setup guide authoring straightforward minimal reproduction problem instructions reproduce error following steps must carried copying current master branch creating suitable windows symlinks work general setup guide authoring motivation use case changing behavior ability test contributions pull request submitted environment", "num": "25759", "d": "8/2018"}, {"title": "embedding pdf docs inside angular component ie", "body": "submitting current behavior working component get pdf byte array backend store blob embed object using blob url html template works fine chrome however ie amp edge rendering blob ie support embedding blobs needed use navigatormssaveblob browser ie expected behavior would expect behaviour across browsers including ie well minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25758", "d": "8/2018"}, {"title": "collection issue improve search", "body": "submitting current behavior issue links variety issues related search behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25753", "d": "8/2018"}, {"title": "validatorchange triggers valuechanges emit even model stays", "body": "submitting current behavior control implementing interface informs forms infrastructure validator condition changes emitting time validator change called even model stays expected behavior emit underlying model value changes regardless validation changes minimal reproduction problem instructions motivation use case changing behavior emit model changing otherwise basic contract broken environment browser", "num": "25749", "d": "8/2018"}, {"title": "reintroduce ability replace component custom element tag components template", "body": "since angular shipped faced decision angular team replace functionality directives gone years kinda accepted personally lots devs resorted hacks like removehost directive get rid extra custom element tags generated markup problem extra tags opinion getting worse recent adoptions css flexbox lately css grid require working immediate children markup extra levels element tags brought use components agree great concept making use new css features really pita issue solved using attribute directives components mycomponent selector applied placeholder divs divs messing markup css flexbox grid issue solved degree applying classes component references like reality feasible maintainable long run also another issue exists rendering components act ui layout master pages components tied routes routing module classes applied issue sums problem wondering anyone angular team recognizes existance issues plans solve possibly bringing back replace functionality way seems give headaches lots devs around globe best", "num": "25748", "d": "8/2018"}, {"title": "patchvalue removes additional unmatched model values", "body": "submitting x feature request current behavior using patchvalue formgroup controls matched updated values passed additional values removed expected behavior keep values matched patchvalue model value passed future use minimal reproduction problem instructions formgroup created form intially values values updated using custom variable structure userdata resetpasswordmodel export class resetpasswordmodel email string newpassword string securityquestionrequired boolean hassecurityquestion boolean secretquestionid number string securityanswer string updating userdata values using post requests adding values calling patchvalue formgroup passing userdata fill control values like thisformgrouppatchvalue thisuserdata form controls updated additional values userdata like lost causing error showing view motivation use case changing behavior able patchvalue updating form controls without losing additional model values environment", "num": "25747", "d": "8/2018"}, {"title": "http client angular difference headers different browsers", "body": "submitting current behavior http client angular difference headers different browsers expected behavior headers must remain minimal reproduction problem instructions want capture origin angular prod header changes referer instead origin environment", "num": "25746", "d": "8/2018"}, {"title": "app module loading feature module", "body": "app module componentsmodules get loaded particular feature module import forms module app module use form components like ngmodel feature module able use right already imported app module loading instead throwing error import feature module working fine idea working former case", "num": "25745", "d": "8/2018"}, {"title": "animations elements leave transitions never cleanup causing memory leaks", "body": "submitting current behavior component leave transition dom element reference never removed transitionanimationenginestatesbyelement map causing detached dom nodes outofmemory crashes debugging seems show hasanimation flag preventing cleanup functions run see flushanimations elements never reenter function therefore triggered expected behavior transitionanimationengine successfully clean elements left page minimal reproduction problem instructions create listitemcomponent simple leave transition component decorator include component ngif toggle attached button main appcomponent trigger leave animation watch detached dom nodes grow transitionanimationenginestatesbyelement grow motivation use case changing behavior currently memory leak causing performance issues crashes dashboard monitor type applications run long time user input cause day grown elements environment", "num": "25744", "d": "8/2018"}, {"title": "angular giving error clicking page", "body": "submitting current behavior angular gives error clicking page functions onpage click uncaught typeerror read property recordclicktype undefined htmldocumentonclick onclick expected behavior give errors warnings minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25743", "d": "8/2018"}, {"title": "angular installation problem", "body": "newtreeoptimize function found rxjs error installing angular tried executing beow command npm install save rxjscompat added following line polyfillts window global window could please help regards guru malli", "num": "25742", "d": "8/2018"}, {"title": "feature request platformagnostic observable creation method comparable fromevent", "body": "submitting current behavior method rxjs allows developers easily register unregister dom events library maps observable behavior helpful depends dom rendering platform expected behavior angular heavily relies rxjs thus would helpful consider providing observable creation method comparable addsremoves event listeners via renderer proposal helper method could get rid passing renderer would even better way developer create event observable platformagnostic manner whereas creation method takes care using actual platformspecific method via renderer basic implementation method found demo posted feature request angular could way resolve renderer developer pass relatively easy implement rxjs support nodejquerystyle emitters library need dependency angular turn angular already rxjs sure feature could also provided separate npm module many observable helper methods testsasync pipeetc thought could worth discussion think minimal reproduction problem instructions motivation use case changing behavior better developer experience", "num": "25741", "d": "8/2018"}, {"title": "ngdirty class gets added change custom component value programmatically", "body": "submitting bug report change value custom component programmatically ngdirty class gets added behavior added stackblitz sample current behavior ngdirty class gets adding expected behavior ngdirty added minimal reproduction problem instructions stackblitz sample sample click button whichis appended sample see dirty class getting added motivation use case changing behavior nt match behavior environment", "num": "25738", "d": "8/2018"}, {"title": "router navigate working inside ngoninit", "body": "submitting current behavior calling routernavigate login inside ngoninit isnt working loading page instead getting blank page url changing expected behavior expect make home page secure user logged want navigate back login page minimal reproduction problem instructions homepagets workaround put thisrouternavigate login inside settimeout nt clean code nt always work using lazy loading modules motivation use case changing behavior environment", "num": "25737", "d": "8/2018"}, {"title": "multipart formdata fails upload file shows missing boundary multipartformdata post data error", "body": "submitting current behavior httpclient set boundary value multipart form data uploading file server throws error php warning missing boundary multipartformdata post data unknown line file uploaded never makes backend files empty content type header looks like contenttype multipartformdata expected behavior content type header something like contenttype multipartformdata boundary minimal reproduction problem instructions try upload fie server using formdata realise using laravel backend motivation use case changing behavior uploading file using multupart formdata environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx ie version xx edge version xx tooling issues node version platform mac others laravel php ubuntu later angular material fileupload package", "num": "25735", "d": "8/2018"}, {"title": "test fails calling httptestingcontrollerexpectone rxjs promise", "body": "submitting current behavior using rxjs operator promise interceptor unit test fails call test fails despite made request matching url remove use interceptor test passes expected behavior test passes minimal reproduction problem instructions repo issue clone see error interceptor test named others experiencing issue typescript test set authorization headers bearer token done donefn gt clientget lt test boolean gt subscribe done motivation use case changing behavior authzauthn npm packages angular services returning promises things like bearer tokens authentication state want attach bearer token one services outgoing http request want use interceptor get promise value observable pipeline need use want test interceptor makes sense use call makes request environment", "num": "25733", "d": "8/2018"}, {"title": "angular zone constantly runs functions passing values child parent", "body": "submitting current behavior angular runs functions component passing values child component trigger single function functions manipulating dom causes constant dom update unintentionally expected behavior specific triggered area invoked instead together invoked time constantly decreasing performance freezing code done minimal reproduction problem instructions following github repo minimal reproduction issue click cell see functions component invoked motivation use case changing behavior better overall performance environment", "num": "25730", "d": "8/2018"}, {"title": "unable find property first listed property component input", "body": "submitting current behavior angular recognize component property first property decorated input list properties making input name string description string input role string angular recognize name property since first input decorator hand fine switch description property nt tested decorators come across issue least separate occasions expected behavior able input property listed first first property minimal reproduction problem instructions create component add property name immediately following line component class name add input decorator beginning name try reference property view file see error console motivation use case changing behavior environment", "num": "25728", "d": "8/2018"}, {"title": "page js files loading full refresh", "body": "currently working angular projects page loading completely refresh browser please solutions problem", "num": "25727", "d": "8/2018"}, {"title": "suggest edit feature add link contributor instructions", "body": "submitting current behavior suggest edits pencil api reference pages directly opens editing window controls quickly create pr suggested change great repeat contributors help new contributors sufficiently expected behavior editing window link contributor instructions currently contributingmd explain important things need sign cla overall pr review acceptance process commit message guidelines etc minimal reproduction problem instructions go api reference page click suggest edits pencil icon upper right look instructions motivation use case changing behavior support new infrequent contributors better environment", "num": "25722", "d": "8/2018"}, {"title": "indicate deprecated apis package overview pages", "body": "submitting current behavior package overview pages indication exports deprecated seems like handy place let developers know avoid using expected behavior case entire package deprecated deprecated icon top clear note somewhere near top info link replacement case exports deprecated designed one option simply begin description deprecated minimal reproduction problem instructions example almost exports deprecated motivation use case changing behavior make easier developers make good choices avoid click export page see deprecated environment", "num": "25721", "d": "8/2018"}, {"title": "angular npm", "body": "submitting current behavior tag published repo releases made npm yet expected behavior release npm minimal reproduction problem instructions na motivation use case changing behavior na environment", "num": "25720", "d": "8/2018"}, {"title": "deliver contentchild parent child", "body": "submitting current behavior two components want input template parent content child component also ca nt get child component case appcomponenthtml parentcomponentts parentcomponenthtml childcomponenthtml expected behavior deliver child component minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25719", "d": "8/2018"}, {"title": "angular directive disable nonform elements ie div", "body": "builtin angular directive conditional disable nonform elements like custom component ptag div disable directive forms elements like input button etc example case div click event works certain condition meet achieve usingngif like want use div tag like ptag etc angular builtin directive nonform elements behaves angular buildin directive disabled works like submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25716", "d": "8/2018"}, {"title": "angular bug solution", "body": "submitting current behavior routes parameters work simple url id detail page followed whole document nothing works searched internet nothing would like report bug poorly written code shame market framework problems simple wrong seems days trying solve expected behavior would like work simple url ex http minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25714", "d": "8/2018"}, {"title": "bug route parameter solution", "body": "trying time make simple route angular pass parameters nothing anyone help error console", "num": "25713", "d": "8/2018"}, {"title": "bug route parameter solution", "body": "trying time make simple route angular pass parameters nothing anyone help error console", "num": "25712", "d": "8/2018"}, {"title": "time make multiple asynchronous request response data overwritten", "body": "sending multiple requests time first response request data second response request data tampering", "num": "25711", "d": "8/2018"}, {"title": "one component matched element error thrown using hot module reloading", "body": "submitting current behavior edit component used part another component also registered router get error prompts full refresh expected behavior component reloads using hmr full reload minimal reproduction problem instructions minimal repo repoduces problem found environment angular version browser x chrome desktop version official build tooling issues node version platform windows", "num": "25709", "d": "8/2018"}, {"title": "api index status filter apply viewing packages", "body": "submitting current behavior filter api reference index typepackage status filter nothing matter status filter option chosen packages displayed expected behavior options disable status filter clear nt apply typepackage entire packages status find way encode enable status filter behave way individual types package status derived exports use types determine package status sure one makes sense could imagine typepackage amp statussecurity risk returning every package least one export statussecurity risk minimal reproduction problem instructions go angulariodocs choose api left nav choose typepackage choose statussecurity risk packages listed choose statusdeprecated packages listed motivation use case changing behavior cause package list match selected filter settings environment", "num": "25708", "d": "8/2018"}, {"title": "moving away buffer constructor", "body": "submitting current behavior deprecated unsafe used one location would possible replace instance expected behavior used everywhere minimal reproduction problem instructions motivation use case changing behavior deprecation constructor environment nodejs", "num": "25707", "d": "8/2018"}, {"title": "angular header problems", "body": "submitting current behavior issue headers component getting header error reason cors header accesscontrolalloworigin missing using following code snippet servicets myfunction let headers httpheaders new httpheaders headers headersappend accesscontrolalloworigin headers headersappend accept applicationjson return pipe map result gt result expected behavior network get get getmarkets retrieving response objects perfectly however able get info service component minimal reproduction problem instructions servicets componentts comonent snippet ngoninit thisweatherdailyforcast subscribe res gt consolelog res trying make sure able get objects component motivation use case changing behavior developer wants submit get request api either cors issue authentication issue environment read solutions building proxies circumnavigate issue think better way", "num": "25706", "d": "8/2018"}, {"title": "combination deeply nested formgroupnameformarrayname", "body": "submitting feature request provide possibility write complex values formgroupname formarrayname cases absence make us add many extra divs break htmlcss example see show structure form data defining short typings category presents form data structure expect html something like user columns subcategories fields rules user selects subcategoryfield application displays corresponding fieldsrules currently handle case need put many extra divs formgroupname formarrayname directives second third columns seems awful", "num": "25705", "d": "8/2018"}, {"title": "clarify position aot compiler options notes future", "body": "submitting current behavior compiler options notes telling users optimal setting default setting example note recommended change option explicitly true option default true future expected behavior sure someone needs change setting update time creating new app find note right time notes still true future default values match expect future requirerecommend setting different value updating apps use older setting developers habit checking things update apps sure anyone see note creating new apps new apps compiled using notfutureproof setting help developers past state current state future state minimal reproduction problem instructions see motivation use case changing behavior give developers support making futureproof choices environment", "num": "25704", "d": "8/2018"}, {"title": "update events page upcoming events prominent past events", "body": "submitting current behavior events listed starting nov top first past expected behavior upcoming events prominent maybe divide page past upcoming links events preserved easier see coming soon minimal reproduction problem instructions motivation use case changing behavior first scan feels like page entirely date takes work reader see bottom table events still coming year help guide readers become engaged coming environment", "num": "25703", "d": "8/2018"}, {"title": "templateref ngmodel nt work nested ngif", "body": "submitting current behavior accessing using templateref nt work inside statement expected behavior work minimal reproduction problem instructions html item selectelbroken dirty motivation use case changing behavior need get state templatedriven form field inside environment pretty sure related", "num": "25700", "d": "8/2018"}, {"title": "injecting multi provider lazyloading", "body": "submitting current behavior providers numberprovider stringprovider registered multi provider navigate lazy result providers displayed instead provider lazy loaded injected compositeprovider injected lazycomponent use thisinjectorget providertoken compositeproviderget behavior way providers injected expected behavior stringprovider numberprovider injected compositeprovider minimal reproduction problem instructions environment", "num": "25699", "d": "8/2018"}, {"title": "angularcompilercli hairstyle version exported found", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment file angularcompilercli indexdts export srcngtoolsapi", "num": "25696", "d": "8/2018"}, {"title": "ngcc improve ngcc renderer tests", "body": "tests fragile changes renderer difficult understand maintain come cleaner way testing", "num": "25695", "d": "8/2018"}, {"title": "angular tour heroes step instruction missing", "body": "angular tour heroes step instruction missing submitting current behavior angular tour heroes tutorial step http following command needs executed tutorial work properly ng generate service inmemorydata moduleapp problem reported others stack overflow expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25693", "d": "8/2018"}, {"title": "tour heroes angular step breaks app", "body": "submitting current behavior launching app routes nothing appears blank screen however ng serve shows error running exact code tutorial expected behavior working tour heroes app routes minimal reproduction problem instructions copy paste tour heroes code step run motivation use case changing behavior working tutorial nice environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux others nothing", "num": "25691", "d": "8/2018"}, {"title": "angular unexpected value propdecoratorfactory imported module appmodule", "body": "hello working angular app firebase tried install fix errors angular calendar facing new error console uncaught error unexpected value propdecoratorfactory imported module appmodule please add ngmodule annotation files appmodulets import browsermodule angularplatformbrowser import ngmodule directive elementref input angularcore import angularfiremodule import environment environmentsenvironment import ngmodel formsmodule angularforms import draganddropmodule angulardraggabledroppable import resizeevent angularresizableelement import approutingmodule approutingmodule import appcomponent appcomponent import browseranimationsmodule angularplatformbrowseranimations tslint disablenextline maxlinelength import matbuttonmodule matcheckboxmodule mattoolbarmodule matsidenavmodule maticonmodule matlistmodule matgridlistmodule matcardmodule matmenumodule mattablemodule matpaginatormodule matsortmodule angularmaterial import layoutmodule angularcdklayout import sidenavcomponent sidenavsidenavcomponent import routermodule routes angularrouter import dashboardcomponent dashboarddashboardcomponent import tablecomponent tabletablecomponent import angularfirestoremodule import angularfirestoragemodule import angularfireauthmodule import coremodule corecoremodule import userprofilecomponent userprofileuserprofilecomponent import calendarcomponent calendarcalendarcomponent import resizablemodule angularresizableelement ngmodule declarations appcomponent sidenavcomponent dashboardcomponent tablecomponent userprofilecomponent calendarcomponent imports browsermodule resizablemodule input draganddropmoduleforroot approutingmodule coremodule angularfiremoduleinitializeapp environmentfirebase angularfirestoremodule imports firebasefirestore needed database features angularfireauthmodule imports firebaseauth needed auth features angularfirestoragemodule imports firebasestorage needed storage features approutingmodule matbuttonmodule matcheckboxmodule browseranimationsmodule layoutmodule browseranimationsmodule mattoolbarmodule matbuttonmodule matsidenavmodule maticonmodule matlistmodule matgridlistmodule matcardmodule matmenumodule mattablemodule matpaginatormodule matsortmodule exports routermodule providers bootstrap appcomponent export class appmodule import component angularcore import angularfirestore import firestore firebase import observable rxjs component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent items observable constructor db angularfirestore thisitems dbcollection items valuechanges calendarmodulets import flatpickrdistflatpickrcss import ngmodule angularcore import commonmodule angularcommon import formsmodule angularforms import calendarmodule angularcalendar import ngbmodalmodule ngbootstrapngbootstrapmodalmodalmodule import flatpickrmodule angularxflatpickr import calendarcomponent calendarcomponent ngmodule imports commonmodule formsmodule ngbmodalmoduleforroot flatpickrmoduleforroot calendarmoduleforroot declarations calendarcomponent exports calendarcomponent export class demomodule calendarcomponentts import component changedetectionstrategy viewchild templateref angularcore import startofday endofday subdays adddays endofmonth issameday issamemonth addhours datefns import subject rxjs import calendarevent calendareventaction calendareventtimeschangedevent angularcalendar import ngbmodal nodemodules ngbootstrapngbootstrap const colors red primary secondary blue primary secondary yellow primary secondary component selector appcalendar changedetection changedetectionstrategyonpush styleurls calendarcomponentcss templateurl calendarcomponenthtml export class calendarcomponent viewchild modalcontent modalcontent templateref view month viewdate date new date modaldata action string event calendarevent actions calendareventaction label onclick event event calendarevent void gt thishandleevent edited event label onclick event event calendarevent void gt thisevents thiseventsfilter ievent gt ievent event thishandleevent deleted event refresh subject new subject events calendarevent start subdays startofday new date end adddays new date title day event color colorsred actions thisactions start startofday new date title event end date color colorsyellow actions thisactions start subdays endofmonth new date end adddays endofmonth new date title long event spans months color colorsblue start addhours startofday new date end new date title draggable resizable event color colorsyellow actions thisactions resizable beforestart true afterend true draggable true activedayisopen true constructor private modal ngbmodal dayclicked date events date date events calendarevent void issamemonth date thisviewdate thisviewdate date issameday thisviewdate date amp amp thisactivedayisopen true eventslength thisactivedayisopen false else thisactivedayisopen true eventtimeschanged event newstart newend calendareventtimeschangedevent void eventstart newstart eventend newend thishandleevent dropped resized event thisrefreshnext handleevent action string event calendarevent void thismodaldata event action thismodalopen thismodalcontent size lg addevent void thiseventspush title new event start startofday new date end endofday new date color colorsred draggable true resizable beforestart true afterend true thisrefreshnext calendarcomponenthtml event action occurred action modaldata action event modaldata event json ok previous today next viewdate calendardate view viewtitle en month week day edit events add new title primary color secondary color starts ends remove delete ok tried remove appmodulets line stop working ca nt using angular latest cli npm os mac os x high sierra browser chrome", "num": "25688", "d": "8/2018"}, {"title": "initialized variables constants referenced decorators", "body": "receiving latest angular error srcservermodelappappts error template compile app initialized variables constants referenced decorators value variable needed template compiler pre pre references pre pre initialized typegooselibhooksts help greatly appreciated build prod ng build aot prod angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularflexlayout angularmaterial ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack applied usage decorator import pre prop typegoose typegoose import mongoose mongoose pre save next gt thiscreatedat thiscreatedat thisupdatedat new date next export class app extends typegoose export const model new app getmodelforclass app schemaoptions collection app import mongoosedocument mongoose import hooks hooksdata data type documentmethod init validate save remove type querymethod count find findone findoneandremove findoneandupdate update type modelmethod insertmany type classdecorator constructor gt void type hooknextfn err error gt void type predonefn gt void type typegoosedoc amp mongoosedocument type documentpreserialfn typegoosedoc next hooknextfn gt void type documentpreparallelfn typegoosedoc next hooknextfn done predonefn gt void type simplepreserialfn next hooknextfn gt void type simplepreparallelfn next hooknextfn done predonefn gt void type documentpostfn typegoosedoc doc typegoosedoc next hooknextfn gt void type modelpostfn result next hooknextfn gt void type postnumberresponse result number next hooknextfn gt void type postsingleresponse result typegoosedoc next hooknextfn gt void type postmultipleresponse result typegoosedoc next hooknextfn gt void type postnumberwitherror error error result number next hooknextfn gt void type postsinglewitherror error error result typegoosedoc next hooknextfn gt void type postmultiplewitherror error error result typegoosedoc net hooknextfn gt void type numbermethod count type singlemethod findone findoneandremove findoneandupdate documentmethod type multiplemethod find update interface hooks pre method documentmethod fn documentpreserialfn classdecorator pre method documentmethod parallel boolean fn documentpreparallelfn classdecorator pre method querymethod modelmethod fn simplepreserialfn classdecorator pre method querymethod modelmethod parallel boolean fn simplepreparallelfn classdecorator disable linter allow got proper code completion separating functions post method numbermethod fn postnumberresponse classdecorator tslint disablenextline unifiedsignatures post method numbermethod fn postnumberwitherror classdecorator post method singlemethod fn postsingleresponse classdecorator tslint disablenextline unifiedsignatures post method singlemethod fn postsinglewitherror classdecorator post method multiplemethod fn postmultipleresponse classdecorator tslint disablenextline unifiedsignatures post method multiplemethod fn postmultiplewitherror classdecorator post method modelmethod fn modelpostfn postmultipleresponse classdecorator const hooks hooks pre args return constructor gt addtohooks constructorname pre args post args return constructor gt addtohooks constructorname post args const addtohooks name hooktype pre post args gt hooksdata name hooksdata name pre post hooksdata name hooktype push args export const pre hookspre export const post hookspost thank feedback resolve constants pre seem initialized references", "num": "25684", "d": "8/2018"}, {"title": "please help problem", "body": "c usersnoargsdocumentsangularmyapp ng serve angular live development server listening open browser date hash time chunk main mainjs mainjsmap main kb initial rendered chunk polyfills polyfillsjs polyfillsjsmap polyfills kb initial rendered chunk runtime runtimejs runtimejsmap runtime kb entry rendered chunk styles stylesjs stylesjsmap styles kb initial rendered chunk vendor vendorjs vendorjsmap vendor mb initial rendered error ansihtml module parse failed unexpected character may need appropriate loader handle file type binsh basedir dirname echo sed e g failed compile terminate batch job yn n c usersnoargsdocumentsangularmyapp ng version angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25681", "d": "8/2018"}, {"title": "safari angular input file nt become valid uploaded file", "body": "submitting current behavior version angular reactive form templatedriven form input type file nt change valid uploaded file issue found safari behavior absolutely well chrome firefox expected behavior user upload file using input class nginvalid ngvalid ngpristine ngdirty minimal reproduction problem instructions made snippet reproduce problem please open safari see motivation use case changing behavior many users using safari mac os form submitted form validated affecting user experience use case environment", "num": "25680", "d": "8/2018"}, {"title": "pause route change navigationstart router event", "body": "submitting current behavior route change starts unable pause route change route change events like navigationstart etc expected behavior method pause proceed route change events minimal reproduction problem instructions redirect route navigationstart timeout still current route completed navigation route happen motivation use case changing behavior routes exposed node modules changes routes hence use canactivatecandeactivate started subscribing router events based condition redirecting user page environment", "num": "25679", "d": "8/2018"}, {"title": "keyvaluediffers angular", "body": "hey guys question simple kind angular code utilizes keyvalue class written angular version want replicate newer version angular get kind errors know new way changedetection works new versions angular want know use keyvaluediffers class detect changes lets say map object tried failed several times thank u", "num": "25675", "d": "8/2018"}, {"title": "feature request", "body": "probability use worker also use animations worker", "num": "25674", "d": "8/2018"}, {"title": "issue defining route children outlet specified", "body": "submitting current behavior route config ca nt activate component following link errors redirects happen active following config works expected expected behavior works route defined child route named outlet minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25673", "d": "8/2018"}, {"title": "angularanimations viewencapsulationshadowdom breaks angular animations", "body": "submitting current behavior title mentioned setting cause animations able run usecase building angular element conjunction angular animations see two play well together expected behavior setting encapsulation strategy work angular animations minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25672", "d": "8/2018"}, {"title": "keyvalue pipe wrong sorting result", "body": "submitting current behavior wrong order elements keyvalue pipe expected behavior return unsorted order object elements minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25667", "d": "8/2018"}, {"title": "excluding additional metadata localizing strings", "body": "submitting current behavior upgrading angular looks like additional metadata tags included xmb file generated example snippet xmb used look like angular example xmb looks like angular expected behavior interpolated string get output interpolation section minimal reproduction problem instructions annotate strings tags generate xmb file motivation use case changing behavior causing lot issues localization process write custom string parser runs every time remove additional metadata environment", "num": "25665", "d": "8/2018"}, {"title": "child holding reference parent array without changedetectionstrategyonpush", "body": "submitting current behavior parent passes child input array observable strings via template parent subsequently updates array pushing thing child view get updated either immediately child changedetectionstrategy onpush mataccordion panel expansion events child changedetectionstrategy onpush seems like child holding reference parent array seems like inputs circumvented la angularjs days expected behavior child never hold reference parent array thisthingslist nt input deep copy passed attributes minimal reproduction problem instructions stackblitz note faking async http calls return getthings addthing observables click add thing button eventually invoked parent child case child changedetectionstrategyonpush click add thing button simple mataccordion lists updated seems child holding reference parent array input circumvented child case child changedetectionstrategyonpush click add thing button expand mataccordion panel simple mataccordion lists updated seems child holding reference parent array input circumvented motivation use case changing behavior unexpected child maintained reference parent member array thisthingslist child list change even though input set never get triggered environment browser x chrome desktop version tooling issues node version platform macos sierra others", "num": "25664", "d": "8/2018"}, {"title": "open doc preview new tab window", "body": "submitting current behavior click mary poppins doc preview link pr preview doc replaces pr current window tab expected behavior click mary poppins doc preview link pr preview doc opens new window tab blank pr remains open original window tab minimal reproduction problem instructions motivation use case changing behavior reviewing documentation important see preview pr sidebyside compare preview conversation thread source mark source changes like see output etc environment", "num": "25662", "d": "8/2018"}, {"title": "invalid route config shows error read property loadchildren undefined", "body": "submitting x bug report current behavior invalid route config empty item array error message nt helpful understanding went wrong minimal reproduction problem instructions ng new myapp routing change route config line ng serve expected behavior app works shows error letting know routeconfig invalid empty node observed behavior ng serve angular live development server listening open browser date hash time chunk main mainjs mainjsmap main kb initial rendered chunk polyfills polyfillsjs polyfillsjsmap polyfills bytes initial rendered chunk runtime runtimejs runtimejsmap runtime kb entry rendered chunk styles stylesjs stylesjsmap styles kb initial rendered chunk vendor vendorjs vendorjsmap vendor kb initial rendered error read property loadchildren undefined \u2139 failed compile motivation use case changing behavior environment", "num": "25660", "d": "8/2018"}, {"title": "ngclass directive removes class duplicates", "body": "submitting current behavior ngclass directive removes class duplicates essential using css frameworks semanticui eg runtime convert right css modifier right floated rule missing expected behavior ngclass directive modify original class rules minimal reproduction problem instructions stackblitz github motivation use case changing behavior environment", "num": "25659", "d": "8/2018"}, {"title": "allow pass data routernavigate", "body": "submitting current behavior currently angular provide way passing additional data many use cases described related issues unjustly closed without fulfilment actually closed addresses part problem expected behavior example could work taken given accessible everywhere accessible target component resolvers etc environment angular version current additional information workaround hipparch", "num": "25658", "d": "8/2018"}, {"title": "indexhtml page responding", "body": "regression behavior used work stopped working new release bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior angular indexhtml page loading expected behavior indexhtml load correctly minimal reproduction problem instructions created build without error browsing indexhtml make browser responding found line culprit comment line open blank blank page means angular working motivation use case changing behavior environment angular version browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux others", "num": "25657", "d": "8/2018"}, {"title": "ngdocheck faster propagate change sibling custom form component", "body": "submitting current behavior app two custom form components component two drag drop list ngxdragdrop form control propagate change upstream component b map integration input property value component form value array used component b iterable differ let suppose get lists drag element element b right ab map component ab works fine reorder output lists momentarily list one extra duplicate element sure fault library issue raised reppnersngxdragdrop solved setting timeout elements array propage upstream correct list writevalue value length valuelength change appears propagated faster logged map component get log sequence even though nt get stops propagate comment nothing nt send value nothing expected behavior ngdocheck get value propagate upwards one value minimal reproduction problem instructions drag two elements list list b reorder elements list b like check logs motivation use case changing behavior environment", "num": "25656", "d": "8/2018"}, {"title": "handle conditional operator value template using", "body": "handle conditional operator value template using need break condition paymentmethodhistoryopned hide show history submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25655", "d": "8/2018"}, {"title": "match routes able find child routes", "body": "match routes error router config export const approutes routes path pathmatch full loadchildren pagesuserloginloginmodule loginmodule path dashboard loadchildren pagesdesktopdesktopmodule desktopmodule pathmatch full export const approuting modulewithproviders routermoduleforroot approutes export const desktoproutes routes path component dashboardcomponent pathmatch full children path component firstpagecomponent path admin loadchildren pagesadminadminmodule adminmodule export const desktoprouting modulewithproviders routermoduleforchild desktoproutes export const adminroutes routes path assignleads component assignleadscomponent export const adminrouting modulewithproviders routermoduleforchild adminroutes angularclijson name franchiseindia version scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrap corejs fontawesome jquery ngxbootstrap popperjs rxjs rxjscompat zonejs devdependencies angulardevkitbuildangular angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript", "num": "25654", "d": "8/2018"}, {"title": "ngupgrade breaking browser back button angularjs routes reloadonsearch false", "body": "submitting also reported ngmigrationforum repo angular router sees every change new history state since hybrid app click browser back button every query param change url anyway tell angular router changing url query params angularjs using", "num": "25653", "d": "8/2018"}, {"title": "material form issue", "body": "using material form angular cli version applying valediction form page stop working gives error command line please one help work new", "num": "25652", "d": "8/2018"}, {"title": "angular maxlength validation allows enter character chrome android", "body": "submitting current behavior angular maxlength validation template allows entering character chrome android trims extra characters blur event happens reactive form input element used formcontrolname works fine template form used ngmodel expected behavior prevent enter characters minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25651", "d": "8/2018"}, {"title": "compilerjs included bundle update", "body": "submitting current behavior compilerjs included ng build prod bundle expected behavior nt expect compilerjs code minimal reproduction problem instructions ng new foo using angularcli change angular versions delete packagelockjson nodemodules npm ng build prod statsjson webpackbundleanalyzer distfoostatsjson compilerjs shown analyzer change angular version delete packagelockjson nodemodules npm ng build prod statsjson webpackbundleanalyzer distfoostatsjson compilerjs shown analyzer code included look js bundles motivation use case changing behavior environment ng new proj using angularcli changes except angular version updates described", "num": "25645", "d": "8/2018"}, {"title": "incorrect imports added nginjectabledef bazel", "body": "summary building angular material bazel including angular source incorrect import statements written statements steps reproduce clone grab local snapshot angular debugging examine file note imports statement injected tokens imported wrong place cc igorminar", "num": "25644", "d": "8/2018"}, {"title": "update line inclusive", "body": "line documentation points mr iq ms universe nt really feel great", "num": "25643", "d": "8/2018"}, {"title": "cli dryrun used alternate case ignored", "body": "submitting current behavior using using dryrun command line parameter alternate case dryrun dryrun allow generated command execute files created expected behavior one two options error alternate cased parameter expected fail execute accept dryrun regardless case used minimal reproduction problem instructions happens used proper case motivation use case changing behavior hold hand developer mistyped command line environment", "num": "25642", "d": "8/2018"}, {"title": "unexpected behaviour ngif directive context child views retrieved via custom routereusestrategy", "body": "submitting current behavior component served router outlet component also previously retrieved cache via custom routereusestrategy ngif directive parent router outlet destroy component attempt reuse results insert destroyed view viewcontainer error expected behavior component restored via custom routereusestrategy reinitialised context component restored via custom routereusestrategy would sensible either component would destroyed ngif directive could reused without causing error component would destroyed reinitiated components words way use routereusestrategy conjunction ngif one parents minimal reproduction problem instructions see instructions replicate included page motivation use case changing behavior use case requirement show persistent components output router outlet outlet required shownhidden via parent ngif directive example would application highlevel filter results shows variety detail components navigated sidenav detail components persistent sidenav navigation changes say form input filtering detail component highlevel filter changed update data shown detail components want remove detail components display show loader instead environment", "num": "25640", "d": "8/2018"}, {"title": "types property canactivatechild incompatible", "body": "submitting current behavior trying implement route protection using canactivatechild thing worked fine earlier seems issue time throws error part code causing error error goes away remove field requirement playvidauthguardservice ts file even put inside childroute get error fix thank expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25639", "d": "8/2018"}, {"title": "component viewencapsulationshadowdom emulated component css inside shadow dom", "body": "submitting current behavior app emulated encapsulation components change one components shadowdom encapsulation inspect element inside generated shadowdom see style tags components app syntax one style really needed also inside shadow dom problem expected behavior one style tag current component inside shadow dom minimal reproduction problem instructions motivation use case changing behavior shadow root messy irrelevant styles might even apply styles applied environment", "num": "25638", "d": "8/2018"}, {"title": "useanimation ignores certain style declarations browsers nt support webanimations", "body": "submitting current behavior certain style definitions like position top right etc could others well reusable animations ignored browsers nt support webanimations used work fine angular earlier web animation polyfill used interestingly work fine defined directly transition non reusable manner expected behavior styles reusable animations work fine browsers used angular earlier minimal reproduction problem instructions open stackblitz example chrome another browser nt support webanimations click rectangle observe turns green browsers however applies properties chrome motivation use case changing behavior able use reusable animations properly regardless browser environment", "num": "25635", "d": "8/2018"}, {"title": "providedin root instantiate services documented", "body": "submitting current behavior provide service setting injectable providedin root service created never asked injected expected behavior provide service setting providedin root service created according docs provide service root level angular creates single shared instance heroservice injects class asks issue actually expected behavior edit docs explicitly point service instantiated injected least also suggest adding property injectable annotation toggle feature minimal reproduction problem instructions simply check browser console comment inout constructor appmodulets file environment", "num": "25633", "d": "8/2018"}, {"title": "title attribute nt accept safehtml", "body": "submitting current behavior providing trusted html title property angular replaces safevalue must use property binding even precalculcated expected behavior safe html outputted eg becomes minimal reproduction problem instructions see behaviour following stackblitz environment", "num": "25631", "d": "8/2018"}, {"title": "provide official way access moduleinjector route", "body": "submitting current behavior lazyloading modules router faces problem inject providers registered child module root service since providers lazyloaded modules added root injector implementation solves problem keeping reference lazyloaded module router config use lookup child module injector however capability kept internal router prevents apps requirement using consider app includes di tokens lazyloaded route definitions eg registered lazyloaded module global root module inject using root injector needs injector associated current route instead official way get hold expected behavior router provide official way access moduleinjector given would suggest running logic eagerly including resulting module property instance motivation use case changing behavior apps currently two options replicate logic rely internal property relying private apis good idea could change removed later version register providers root scope rather lazy module bloats root module defeats purpose lazyloading neither preferable official way get moduleinjector given route would solve problem environment", "num": "25630", "d": "8/2018"}, {"title": "aot compile build build prod fail single component class probably related publicprivate aot compile", "body": "submitting current behavior running serve nonaot builds catch following property devicename exist type locationdevicesettingscomponent type error expected behavior components catching errors including nested within templates minimal reproduction problem instructions motivation use case changing behavior well classic usecase nested template within another template displayed certain condition met environment component html error logs error srcappframeframeslocationdeviceslocationdevicesettingscomponenthtml property devicename exist type locationdevicesettingscomponent srcappframeframeslocationdeviceslocationdevicesettingscomponenthtml property devicename exist type locationdevicesettingscomponent srcappframeframeslocationdeviceslocationdevicesettingscomponenthtml property removeerror exist type locationdevicesettingscomponent like said setup works without aot nt work reason component behaves like odd three distinct component classes operating nesting level without bugs issues aot far literally changed properties methods public appcomponentts nt change result therefore sure reproduced guidance confirmation might continuance prior aot publicprivate bugs last years would great help thanks", "num": "25624", "d": "8/2018"}, {"title": "angularlanguageservice generates warning mock components used tests", "body": "submitting current behavior error misleadingincorrect using mock components unit tests supposed module apart module configure using never expected behavior warning present silenceable ideally angular language service would notice component used module would nt complain minimal reproduction problem instructions stackblitz shows use case nt think language service works stackblitz though note using spectator simplify testing boilerplate wraps api motivation use case changing behavior using host component unit tests another component environment", "num": "25623", "d": "8/2018"}, {"title": "events keyup keyupenter nt work together unless one particular order", "body": "submitting current behavior input keyup event keyupenter keyupenter receives varvalue method introduced appear reverse keyupenter receive empty varvalue expected behavior nt matter order events receive varvalue minimal reproduction problem instructions input something first input press enter text change accordingly second input text wont change edit sorry bad url motivation use case changing behavior environment", "num": "25622", "d": "8/2018"}, {"title": "appinitializer provider fails load library module production build", "body": "submitting current behavior defining library module library build fails error build error thrown function exported per docs import ngmodule appinitializer angularcore import mylibcomponent mylibcomponent export function mylibinit return gt consolelog hi exported function ngmodule providers provide appinitializer multi true usefactory mylibinit export class mylibmodule devprod alternatively also tried defining factory function using object method shorthand notation import ngmodule appinitializer angularcore import mylibcomponent mylibcomponent ngmodule providers provide appinitializer multi true usefactory return gt consolelog hi object method shorthand export class mylibmodule devproderror typeerror thisappinits r function error runtime expected behavior build runtime errors defining library module minimal reproduction problem instructions reproduction found motivation use case changing behavior allow libraries initialize providers app imports library module environment angular cli node os linux angular animations cli common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildngpackagr angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsupdate ngpackagr rxjs typescript webpack others related issue", "num": "25621", "d": "8/2018"}, {"title": "read property moduletype undefined", "body": "read property moduletype undefined serve aot webpack compile successfully getting error", "num": "25616", "d": "8/2018"}, {"title": "router able use modules nonexported components", "body": "current behavior module router able reference module b component though module b component private exported expected behavior angular throw runtime error minimal reproduction problem instructions create module create module b create base components modules export b component import module b module create router module import b nonexported base component hit route loads without issues motivation use case changing behavior angular behave consistently nonexported components modules nt able use modules private components angular normally throws runtime error occurs router violates policy error environment", "num": "25615", "d": "8/2018"}, {"title": "downgrade component nt forward errors exceptionhandler", "body": "submitting current behavior seems like errors occur component constructor resulting unhandled promise rejection error expected behavior instead logged zonejs nice forwarded angularjs exceptionhandler handled according project setup case custom logger service motivation use case changing behavior way errors would forwarded implementation log custom exception handler could tracked reported fix simple include dependencies add still using edit suggested change work correctly also return object noop method", "num": "25613", "d": "8/2018"}, {"title": "custom errorhandler nt work error thrown awaited promise", "body": "submitting current behavior bug discovery story project global custom errorhandler able centrally process errors everything good qa team started reporting missing errors thinking impossible investigation confirm indeed errors silently fail bypassing global errorhandler nasty surprise bug explanation error happens sync method everything ok error happens promise awaited everything ok error happens promise await everything ok error happens promise awaited promise callback declared everything ok error happens promise await promise callback declared fail error errorhandler example consider application party lib dependency used show spinner ui promise progress declare promise code pass shows spinner lib applies callbacks promise order implement inner logic business logic requires await promise error happens promise error errorhandler hence miss expected behavior errors happen inside application caught errorhandler either inside promise awaited callbacks etc minimal reproduction problem instructions motivation use case changing behavior central place errors could processed environment", "num": "25612", "d": "8/2018"}, {"title": "service worker invariant violated initialize latest hash null", "body": "submitting current behavior firstly unable get service worker register using use following maints test locally service worker registers fine deploy server service worker fails register following error uncaught promise error invariant violated initialize latest hash null known manifest driver generatornext fulfilled maybe recommended way register service worker fails although unsure nt get errors expected behavior service worker installed using angular cli setup without changes installed per documentation however nt work minimal reproduction problem instructions issue ca nt replicated locally little value providing code need understand production build works locally nt deployed environment", "num": "25611", "d": "8/2018"}, {"title": "angular injector documentation outdated", "body": "submitting current behavior documentation get function different top page actual documentation get function forgot front get expected behavior updated documentation minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25610", "d": "8/2018"}, {"title": "expressionchangedafterithasbeencheckederror ngclass used together form", "body": "submitting current behavior form validation run form submitted means use required formsubmitted multiple inputs also use ngclass add class input invalid form submitted following error thrown error error expressionchangedafterithasbeencheckederror expression changed checked previous value foo false current value foo true expected behavior error thrown ngclass addremove class based latest form state minimal reproduction problem instructions create form required input bound formsubmitted use ngclass checks inputinvalid small example press submit motivation use case changing behavior want show errors user submits form environment", "num": "25608", "d": "8/2018"}, {"title": "formarray expressionchangedafterithasbeencheckederror", "body": "submitting current behavior error error expressionchangedafterithasbeencheckederror expression changed checked previous value disabled false current value disabled true expected behavior error message minimal reproduction problem instructions using formgroup formarray get form valid state adding another input form change valid state form behavior normal trow errors ngoninit thisform thisfbgroup contacts thisfbarray get contactform return thisform get contacts formarray addinput const contact thisfbgroup name phone thiscontactformpush contact motivation use case changing behavior environment", "num": "25606", "d": "8/2018"}, {"title": "doesnt work", "body": "submitting current behavior html start editing see magic happen generate html html start editing see magic happen expected behavior html start editing see magic happen minimal reproduction problem instructions motivation use case changing behavior work component templates declarated environment", "num": "25598", "d": "8/2018"}, {"title": "unreachable code detection html via angular language service", "body": "submitting current behavior run unreachable code ts file e g throws correct unreachable code detect e g expected behavior would expect detection always false unreachable code template minimal reproduction problem instructions motivation use case changing behavior changing detection empty array happened forgotten part completely disappeared environment", "num": "25597", "d": "8/2018"}, {"title": "possible create library called", "body": "submitting current behavior whenever try create new library suffixed get error expected behavior create library called minimal reproduction problem instructions motivation use case changing behavior treat libraries feature modules follow angular guidelines able create library called environment", "num": "25596", "d": "8/2018"}, {"title": "documentation angularioguidebootstrapping working", "body": "submitting current behavior navigating leads console error expected behavior corresponding view renders properly motivation use case changing behavior working documentation page would awesome environment", "num": "25595", "d": "8/2018"}, {"title": "tutorial parts missing angulario website", "body": "two pages angulario tutorial pages working please check thanks", "num": "25594", "d": "8/2018"}, {"title": "unexpected behavior providedin services testbed", "body": "brought lot goodies angular world especially lazy loaded modules configurations testing side current behavior confusing unwanted isolation submitting current behavior providers loaded automatically testing module expected behavior test units isolation whilte testing would like providers configured automatically could see error forgot stub mock certain provider going change behavior least let add flag gives people opportunity configure fail manually configuring services minimal reproduction problem instructions look following project clear ajax request somewhere injection tree called open console see message motivation use case changing behavior imagine following realistic scenario write test main component isolating immediate dependencies component child components sometime future another developer adds dependency one child components side effect ajax request error change router etc take quite large scale app track specific reason bad part sneaky obvious failure usually come later soon possbie suggest ignore services testbed purpose least add flag allows achieve behavior sake test debugging time environment", "num": "25593", "d": "8/2018"}, {"title": "", "body": "please loook", "num": "25592", "d": "8/2018"}, {"title": "service http call constructor injected undefined httpinterceptor", "body": "submitting current behavior service executes http get request constructor service injected constructor component working injected constructor httpinterceptor undefined expected behavior instance service undefined injected httpinterceptor constructor minimal reproduction problem instructions open example highlights problem console motivation use case changing behavior assuming bug since nt found documentation stating preforming http request constructor service nt supported environment others bug reproducible stackblitz using latest version angular", "num": "25590", "d": "8/2018"}, {"title": "router cant navigate error within resolvers guards occurs", "body": "submitting current behavior observable throws error within guards resolvers routernavigate custom error handler fails routernavigate called ngzone navigation complete change detection called manually expected behavior router able navigate without manual change detection minimal reproduction problem instructions demo run demo click go feature see error console router doenst navigate error page click run change detection error page loaded motivation use case changing behavior navigating global error handler work environment", "num": "25589", "d": "8/2018"}, {"title": "animation trigger params wo nt work without value", "body": "following template component leave line animation use provided params use default params bug took quite figure angular", "num": "25588", "d": "8/2018"}, {"title": "trigger validate function input changes custom validation directive", "body": "created validation directive triggering input changes trigger validate function input changes directive selector uppercase providers provide ngvalidators useexisting rduppercasedirective multi true export class rduppercasedirective implements validator onchanges input uppercase uppercase export class rdvalidators", "num": "25584", "d": "8/2018"}, {"title": "angular service worker fetch errors", "body": "submitting current behavior struggling service worker related error accessing qa website via chrome site ca nt reached temp fix open dev console choose update reload bypass network checkboxes refresh page access site expected behavior service worker fetches caches files qa website accessible minimal reproduction problem instructions first access website host iis windows server may get chrome error stating site ca nt reached choosing update reload bypass network dev console fixes issue page refresh motivation use case changing behavior website must accessible first time accessing several hours environment one obvious thing noticed path indexhtml page wrong trying reference indexhtml domain root ie whereas reference perhaps problem ngsw config file", "num": "25580", "d": "8/2018"}, {"title": "put small image inside select tag", "body": "hi trying put small png image inside select option image appearing ui", "num": "25579", "d": "8/2018"}, {"title": "selectcontrolvalueaccessor overwriting nativeelement value using custom control value accessor", "body": "submitting current behavior using custom control value accessor usevalueasnumber reactiveforms select element default selectcontrolvalueaccessor angular overwriting values set usevalueasnumber problem seems following usevalueasnumber sets nativeelement value value set correctly method fired internally calls however controlvalueaccessor allowed per formcontrol fact selectcontrolvalueaccessor instance overwrites nativeelement value html correct value never selected expected behavior overwrite nativeelement value property order display correct value html minimal reproduction problem instructions motivation use case changing behavior environment browser x chrome desktop version", "num": "25578", "d": "8/2018"}, {"title": "feat common include http method httperrorresponse class", "body": "submitting current behavior used http method request raises error included instance expected behavior used http method included", "num": "25577", "d": "8/2018"}, {"title": "different behavior ie passing undefined attribute value", "body": "submitting current behavior ie passed attribute attribute stays unchanged expected behavior attribute removed element minimal reproduction problem instructions chrome click set value value attribute added input click reset value attribute removed ie click reset value nothing changes motivation use case changing behavior consistent behavior across browsers environment", "num": "25575", "d": "8/2018"}, {"title": "nullinjectorerror provider changedetectorref", "body": "submitting current behavior upgrade gt error expected behavior error minimal reproduction problem instructions environment browser x chrome desktop version xx", "num": "25574", "d": "8/2018"}, {"title": "test cases fail unrelated error messge", "body": "migrated angular app angular test cases fail following error message terminal shows success browser also sometimes test cases pass without showing error message say get following error times run ng test tried upgrading downgrading jasmine jasminecore packagejson anything else needed debug please let know ca nt upload test cases around refer", "num": "25573", "d": "8/2018"}, {"title": "angular reactive form change input field updating view value needs updated manually thisvalue etargetvalue inturn moves cursor", "body": "angular reactive form change input field updating view value needs updated manually thisvalue etargetvalue causing issue ie cursor position moves last typing", "num": "25572", "d": "8/2018"}, {"title": "angular lazy loading routeroutlet secondary working", "body": "submitting current behavior usercomponent personalcomponent displayed click personal section click usersection route updated personalmodule usermodule loaded expected behavior show usercomponent personalcomponent click click personal section click usersection minimal reproduction problem instructions motivation use case changing behavior use secondary routes lazy load environment already implemented lazy loading type another project making copy stackblitz similar use case able test features however work lazy load project copy project worked exactly would appreciate told missing hours seems find solution", "num": "25571", "d": "8/2018"}, {"title": "error could resolve module x failed compile real problem maximum length path", "body": "submitting current behavior updated angular latest version try run npm start receiving error could resolve module dworklumyslinskiappprojectsprojectc failed compile path shortened without telling module missing expected behavior tell module missing minimal reproduction problem instructions create new angular app path got characters motivation use case changing behavior environment solution put clientapp root path like clientapp everything working ok see attached print screen guess module like quite long paths", "num": "25570", "d": "8/2018"}, {"title": "ivy runtime performance", "body": "expected effect ivy renderer runtime performance excluding gains reduced bundle sizes see ideas like breaking renderer atomic functions directly called templates locality improve bundle size build times much harder see would help runtime performance seems things like wholeprogram analysis encoding directive information consuming templates would improve runtime performance surely angular first place removing would detrimental perspective curious get thoughts mhevery", "num": "25569", "d": "8/2018"}, {"title": "use class classselected together", "body": "submitting current behavior still beginner angular sure bug expected behavior set attributes changed ignored expected behavior still work even changed minimal reproduction problem instructions button change however ignored changing motivation use case changing behavior want add string classes boolean classes element environment", "num": "25568", "d": "8/2018"}, {"title": "generate component appmodulets file become chaos", "body": "created way ng new project skipinstall npm install ca nt continue running projects time", "num": "25567", "d": "8/2018"}, {"title": "issue viewchild lazy loaded module", "body": "submitting issue regarding viewchild returning undefined lazy loaded component current behavior import directive viewcontainerref angularcore directive selector entryhost export class entryhostdirective constructor public viewcontainerref viewcontainerref viewchild decorator passing directive returns undefined expected behavior returning", "num": "25566", "d": "8/2018"}, {"title": "changelog", "body": "submitting current behavior changelog changelogmd expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25565", "d": "8/2018"}, {"title": "browseranimationsmodule fail android android", "body": "submitting current behavior js errors occurs android typeerror read property trim undefined applykeyframeanimation read property split undefined removekeyframeanimation expected behavior works like angular minimal reproduction problem instructions try animate something gt click go two gt pick one try close popup motivation use case changing behavior works device type environment", "num": "25563", "d": "8/2018"}, {"title": "include json file ngpackagr build error", "body": "submitting error current behavior find module error find module translationsenusjson expected behavior vs code linter doesnt show issues expect module build without issues minimal reproduction problem instructions added typingsdts library directory tsconfiglibjson looks like extends tsconfigjson compileroptions outdir outtsclib target module moduleresolution node declaration true sourcemap true inlinesources true emitdecoratormetadata true experimentaldecorators true importhelpers true lib dom angularcompileroptions annotateforclosurecompiler true skiptemplatecodegen true strictmetadataemit true fulltemplatetypecheck true strictinjectionparameters true flatmoduleid autogenerated flatmoduleoutfile autogenerated exclude srctestts spects way import import enus translationsenusjson import plpl translationsplpljson motivation use case changing behavior need import translation files angular library generated angular cli using ngpackager json files needed ngtranslate module angular library environment mac typescript", "num": "25560", "d": "8/2018"}, {"title": "angular page snaps top clicking routerlink", "body": "submitting current behavior angular navigate via page snaps top scrolled change behavior assume related expected behavior expect navigate routerlink page scroll response click basing expectation used behave minimal reproduction problem instructions two stackblitz links first link shows new behavior second shows old behavior see change behavior following page click narco load details page scroll window bit dashboard button still visible window nt scrolled way top click dashboard button angular version page jump top version scroll position remain unchanged motivation use case changing behavior small jump site use scroll image pages jump makes jarring transition see environment", "num": "25555", "d": "8/2018"}, {"title": "abstractcontrol hasgeterror multiple classes errors", "body": "submitting current behavior currently functions abstractcontrol following signature however uncommon certain classes error result message especially behavior allowing optional selections proposal proposal would change following signature sense would able call could confirm least one errors applied another approach would create new functions namely equivalents maybe would implement behavior logical disjunction logical conjunction list passed parameters approach would change behavior existing functions like discussion since sure approach would best motivation use case changing behavior simplifying error state behavior custom components mostly components multiselection use two would result error message end user another use case custom input component multiple invalid states depending user input invalid format short long etc different error classes screens nt really care showing different message per error class others different error classes necessary result lot calls cases implement internal function simplified words motivation simply convenience thank environment", "num": "25553", "d": "8/2018"}, {"title": "map", "body": "submitting current behavior using map map expected behavior map work aot flag minimal reproduction problem instructions motivation use case changing behavior library user pass configuration one configuration map datatype since map nt work aot users able use library anymore environment windows", "num": "25551", "d": "8/2018"}, {"title": "ng update ca nt run ng commands", "body": "submitting current behavior ran ng command work inside angular workspace command seems work fine outside directory get following error particular json file points error depends command run confused error telling asking open file files exist completely updated node npm already blown away nodemodules folder reinstalled even ran expected behavior upgrading angularrelated modules would expect able run ng command still minimal reproduction problem instructions motivation use case changing behavior things environment", "num": "25550", "d": "8/2018"}, {"title": "outdated hosting ngforof plunker demo", "body": "submitting current behavior ngforof api docs still contains link outdated broken plunker demo apparently missed pr", "num": "25547", "d": "8/2018"}, {"title": "angular existing aspnet application", "body": "hi migrate existing aspnet application angular page pagehow implement angular aspnet web application mvc anyone help us submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25546", "d": "8/2018"}, {"title": "support type input output", "body": "submitting current behavior defined assign corresponding variable type type without getting error warning goes bindings assign type also nt get type informations inside html expected behavior would cool language service able check type show errors typescript minimal reproduction problem instructions assigns variable type type component type bound variable type show error motivation use case changing behavior using thirdpartycomponents codecompletion shows possible however types missing use search documentation online language service would provide type informations api thridpartycomponents would often clear documentaiton would needed environment", "num": "25545", "d": "8/2018"}, {"title": "dependency injection fails resolve token argument type union type undefined", "body": "submitting current behavior constructor arguments include union options angular longer detects injection token argument type throws error expected behavior would good union options would ignored even would trigger allow minimal reproduction problem instructions write constructor like typescript export class appcomponent constructor optional motivation use case changing behavior enabled would good mark optional injection dependencies make sure implementation cope dependency missing however workaround provide decorator environment", "num": "25544", "d": "8/2018"}, {"title": "fix typo reactive forms guide", "body": "submitting current behavior form control instance properties value untouched methods setvalue form control instance expected behavior form group instance properties value untouched methods setvalue form control instance minimal reproduction problem instructions move third paragraph", "num": "25542", "d": "8/2018"}, {"title": "add numbervalueaccessor rangevalueaccessor public api angularforms", "body": "think valueaccessor implementation accessable somehow special", "num": "25541", "d": "8/2018"}, {"title": "matching version found angularcli", "body": "hi friends new angular trying install particular particular version angular got message c usersdreams npm install g angularcli npm err code etarget npm err notarget matching version found angularcli npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err complete log run found npm err c", "num": "25540", "d": "8/2018"}, {"title": "target server could found project frontend", "body": "submitting current behavior hello working angular trying build application server side rendering several days list commands continuously facing error run c jetbrainsphpstorm c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs run build ssr scriptsprependnodepathauto frontend build ssr c usersmchampaneriaphpstormprojectsangularwinfrontend npm run build clientandserverbundles amp amp npm run webpack server frontend build clientandserverbundles c usersmchampaneriaphpstormprojectsangularwinfrontend ng run frontend server target server could found project frontend error target server could found project frontend architectgetprojecttarget c usersmchampaneriaphpstormprojectsangularwinfrontendnodemodules architectgetbuilderconfiguration c usersmchampaneriaphpstormprojectsangularwinfrontendnodemodules project c usersmchampaneriaphpstormprojectsangularwinfrontendnodemodules mergemapsubscribertrynext c mergemapsubscribernext c mergemapsubscribersubscribernext c tapsubscribernext c tapsubscribersubscribernext c mergemapsubscribernotifynext c innersubscribernext c npm err code elifecycle npm err errno npm err frontend build clientandserverbundles npm err exit status npm err npm err failed frontend build clientandserverbundles script npm err probably problem npm likely additional logging output npm err complete log run found npm err c npm err code elifecycle npm err errno npm err frontend build ssr npm err exit status npm err npm err failed frontend build ssr script npm err probably problem npm likely additional logging output npm err complete log run found npm err c process finished exit code expected behavior since project name frontend executing commands like following full document describe angular universal url minimal reproduction problem instructions motivation use case changing behavior change behaviors releasing angular environment", "num": "25539", "d": "8/2018"}, {"title": "wrong example doc page", "body": "submitting current behavior wrong example page last example simple copy previous example show nothing reattaching detached component expected behavior last example page right shows use reattaching component change detector properly", "num": "25538", "d": "8/2018"}, {"title": "routerlinkactive isactive value correct lazyload module", "body": "submitting current behavior ladzyloade module loaded view routerlinkactiveisactive value correct demo see demo page loaded first time link message root component routelinkactiveisactive true link message test component lazyload module routelinkactiveisactive false root component click link routelinkactiveisactive values correct components expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25535", "d": "8/2018"}, {"title": "docsinfra directive api template improvements", "body": "move classlike syntax stuff bottom remove usage notes heading move inputs outputs table", "num": "25530", "d": "8/2018"}, {"title": "error error staticinjectorerror uu e staticinjectorerror platform core e nullinjectorerror provider e", "body": "submitting error messege loadcomponent zunbqnmoduledobootstrap lt zunbbnmoduledobootstrap zunbbn tooling issues node version platform windows", "num": "25529", "d": "8/2018"}, {"title": "form contains disabled fields invalid", "body": "submitting bug report current behavior form contains two fields disabled containing form group becomes invalid expected behavior according google doc parent form group ignore disabled fields form nt contain fields valid hence form contains disabled fields valid well minimal reproduction problem instructions repro form contains two fields one disabled right away one enabled first point form valid three seconds field disabled well form becomes invalid", "num": "25527", "d": "8/2018"}, {"title": "angular missing translation files error", "body": "submitting current behavior currently using angular translating webpage different languages messagesesxlf file request ng serve configurationesus nt rollup messagesesxlf errors missing translation file message expected behavior esus request made messagesesusxlf file missing rollup messagesesxlf file display spanish web page minimal reproduction problem instructions step messagesesxlf srclocal folder step srcappappcomponenthtml session expired confirmed transactions saved need restart searches unfinished transactions start input step ng serve configurationesus note messagesesusxlf present srclocal folder output angular live development server listening open browser date hash time chunk main mainjs mainjsmap main kb initial rendered chunk polyfills polyfillsjs polyfillsjsmap polyfills bytes initial rendered chunk runtime runtimejs runtimejsmap runtime kb entry rendered chunk styles stylesjs stylesjsmap styles kb initial rendered chunk vendor vendorjs vendorjsmap vendor kb initial rendered error enoent file directory open userssreddytimeoutwarningmodallibsrclocalemessagesesusxlf \u2139 failed compile motivation use case changing behavior instead throwing error rollup default es locale consider messagesesxlf display spanish version might wrong sure angular supports feature environment", "num": "25526", "d": "8/2018"}, {"title": "", "body": "submitting current behavior custom elements b c angular components converted custom elements create new programatically injector inside append html code code includes markup create b b nt injector b template markup create c stopping point c inside angular template markup angular component fact declared custom element means handled created programatically reference remove starts destruction process starts destruction process error thrown error typeerror read property nativenode null removedebugnodefromindex nodemodules destroyviewnodes destroyview callwithdebugcontext objectdebugdestroyview destroyview viewrefpush nodemodules componentrefpush nodemodules zonedelegatepush nodemoduleszonejsdistzonejszonedelegateinvoketask error happens try destory c happens called twice c guess c custom element used inside angular template angular angularelements invoke destroy something like guess expected behavior throw worth noting even disable delay destruction stlll throws", "num": "25525", "d": "8/2018"}, {"title": "standardize name getting started aka quickstart", "body": "submitting current behavior toc getting started page title quickstart one word filename quickstart expected behavior toc matches page title page titles written words filenames minimal reproduction problem instructions motivation use case changing behavior consistency good many docs refer one crossreferences awkward inconsistent environment", "num": "25524", "d": "8/2018"}, {"title": "form contains disabled fields invalid", "body": "problem reproduced expected would expect form valid", "num": "25522", "d": "8/2018"}, {"title": "introduce ngonattachngondetach lifecycle hooks", "body": "submitting problem currently components detachedattached using custom routereusestrategy easy api execute logic component detachedreattached common case want refetchrefresh data whenever component beed reattached usually hook used since component reused fired also might want unsubscribe observables detaching fired simple stackblitz example want able startstop timer component attached note nativescript angular apps use custom default integrates native mobile navigation stack used cache native components cause confusion default web angular app default nativescript angular app proposed solution introduce two new lifecycle hooks fired whenever component attached detached component tree main difference attachdetach hooks called multiple times lifetime component new lifecycle hooks fired recursively child components attached detached parent state diagram components along events fired switching states ctor ngoninit ngondestroy gt constructed gt detached gt destroyed ngonattach ngondetach attached stakplitz example would able use hooks subscribe unsubscribe fact apps utilize custom events would equivalent good alternative use projects share code base web mobile using nativescript", "num": "25521", "d": "8/2018"}, {"title": "docs apply transtition ngif directive", "body": "submitting current behavior docs nt provide provide transition ngif directive also docs also ca nt find tutorial anywhere internet expected behavior docs provide tutorial providde transition ngif directive", "num": "25520", "d": "8/2018"}, {"title": "hello creating application admin panel student admin panel front side area like application run panel diffrent css js file copy student admin panel css angularjson file confilict comes", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25519", "d": "8/2018"}, {"title": "ngclass causes unnecessary css class mutation cases", "body": "submitting minimal reproduction problem instructions steps reproduce open devtools elements tab inspect content click button observe css class gets removed added current behavior css class removed added even set css classes nt change based model provided expected behavior unnecessary css class mutations motivation use case changing behavior current behaviour causes unnecessary dom access impacting overall performance also tip people using mutation observers reported environment angular version browser additional info happens giving new object cd differs assume new object might different shape removes classes old object probably smarter", "num": "25518", "d": "8/2018"}, {"title": "tree type supported", "body": "trying create new project getting error tree type supported angular cli version", "num": "25517", "d": "8/2018"}, {"title": "question dynamically add modules files browser", "body": "submitting x standard project structure angular cli modules standalone applications would like render package connect main application desired previous version angular possible example app bundle module bundle load scripts found second module inject dynamically first implementation behavior angular need create modules another application dynamically add base application via script tag example environment angular version angularcli", "num": "25516", "d": "8/2018"}, {"title": "docs security guide short url dead", "body": "submitting current behavior several angular software components error descriptions refer angulario security guide short url redirects url dead expected behavior short url point minimal reproduction problem instructions one example motivation use case changing behavior developers appreciate angular descriptive errors link dead helpful environment", "num": "25514", "d": "8/2018"}, {"title": "release notes missing", "body": "thanks hard work least us changelog mandatory asses risk associated updating angular please please add notes changes please note also along reason change release thanks", "num": "25513", "d": "8/2018"}, {"title": "catch http cancel error guard", "body": "submitting current behavior guards route one http request async sync go route guards running one first async sync time sync guard failed force async http request cancel ca nt catch cancelation error try interceptor catching error nt work stop interceptor run environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "25511", "d": "8/2018"}, {"title": "invalid source map path angularcommon bundle", "body": "submitting current behavior find sourcemap error cant resolve nodemodules angul expected behavior warning minimal reproduction problem instructions open file npm bundle end file motivation use case changing behavior fix bug build system environment", "num": "25510", "d": "8/2018"}, {"title": "add contenteditable support", "body": "many years still nt supported current workarounds focus ngmodel aspect working need able toggle contenteditable based certain variables ca nt still supported", "num": "25507", "d": "8/2018"}, {"title": "angular build time much much longer angular project expected", "body": "submitting current behavior project using angular angular material use angular cli create project run scripts use webpack build project see webpackcommonjs config file tsconfig files bottom issue tried upgrading angular following upgrade guide afterward tried first build took minutes headed get coffee came back minutes later finished compilation error inside angularupgrade project nt know long took total thought took long first build tried running minutes killed reverted angular angular unusable builds going take long major change need make webpack tsconfig files builds work properly angular expected behavior builds take less minute least performance angular minimal reproduction problem instructions build project angular motivation use case changing behavior environment windows visual studio code node webpack config configurations common environments var webpack require webpack var htmlwebpackplugin require htmlwebpackplugin var extracttextplugin require extracttextwebpackplugin var bundleanalyzerplugin require webpackbundleanalyzer bundleanalyzerplugin var helpers require helpers var glob require glob moduleexports entry point files define bundles one bundle generated entry point entry vendor srcvendorts polyfills srcpolyfillsts app srcmaints bundle angularjs files oldapp globsync appscriptsjs concat globsync appcomponentsjs compileroptions allowjs true target module commonjs moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom noimplicitany false suppressimplicitanyindexerrors true typeroots nodemodules types types node angular jasmine compileonsave true exclude nodemodules appbowercomponents aotts outdir build", "num": "25505", "d": "8/2018"}, {"title": "app work ipad", "body": "web application built angular always worked desktop windows mac mobile android ios updating node version intalling node modules related new version build application load ipad ios version script style ir render black page old packagejson changes new packagejson jsdom sass ive already tried modify polyfill getting cdn stopping calling custom scripts app error persists", "num": "25503", "d": "8/2018"}, {"title": "angular crashing completely using tablefilter", "body": "submitting current behavior created completely new application installed tablefilter npm install tablefilter save adding tablefilter application browser makes thousands requests localhost server crashes expected behavior minimal reproduction problem instructions minimal demo adding tablefilter inside app kill crash application makes thousands requests localhost server test click country iso year pop xrat ppp cgdp cc ci zimbabwe zwe component add nothing filterconfig nt matter app crashes anyway onclick motivation use case changing behavior environment", "num": "25502", "d": "8/2018"}, {"title": "angulardevkitbuildoptimizer uses typescript", "body": "submitting current behavior vendor file causes builds fail snippet failure running nodemodules angularclibinng build projectmemberdirect configurationtest error module build failed error debug failure false expression getjsdoctags revelclientsnodemodules according typescript issue opened issue fixed update ts build optimizer appears use version ca nt get app build long including code file expected behavior version ts file used everything motivation use case changing behavior hacking stuff together need upgrade something global environment", "num": "25501", "d": "8/2018"}, {"title": "unable generate output file outside project dir", "body": "submitting current behavior running relative output path outside project operation completes exit code file created use absolute path directory instead get result exit code output make change changing output path inproject location works expected creates expected behavior successful exit code mean file created successfully alternatively error shown explaining file created permissions issue procedure worked directories minimal reproduction problem instructions generate new cli project add component put tag template run output path outside project format motivation use case changing behavior use parse templates output wherever wish curious checkout stack question usecase environment", "num": "25500", "d": "8/2018"}, {"title": "submit post data api", "body": "post records api details issue please let know suggest import httpclient httpheaders httpparams angularcommon const headers new httpheaders contenttype applicationjson contenttype applicationxwwwformurlencoded insert url string const body new httpparams append name tostring thanks ambrish", "num": "25499", "d": "8/2018"}, {"title": "suggest reordering forms pages", "body": "submitting current behavior fundamentals forms order options templatedriven forms form validation reactive forms expected behavior order templatedriven forms reactive forms form validation minimal reproduction problem instructions motivation use case changing behavior even implied contents pages read reactive forms form validation page correct order environment", "num": "25497", "d": "8/2018"}, {"title": "angulario documentation reattaching detached component wrong example", "body": "submitting current behavior currently example provided last section duplicate previous section detach change detector expected behavior section reattaching change detection feature relevant code sample minimal reproduction problem instructions go observe duplicate sample relevant sample motivation use case changing behavior confusing documentation even minor issue environment na browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "25495", "d": "8/2018"}, {"title": "lazy loading working expected", "body": "submitting regression behavior used work stopped working new release x bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior loaded url match however actually loaded time expected behavior loaded url route handler minimal reproduction problem instructions clone project install dependencies run open see network detail browser loaded motivation use case changing behavior makes lazy loading useless environment bash angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router upgrade package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others", "num": "25494", "d": "8/2018"}, {"title": "anchor links scrolling correct position page refresh", "body": "current behavior upgraded angularrouter angularrouter anchor links project stopped working came across documentation stated need activate anchor links follows angular router works fine however refresh page anchor link page go back position anchor instead always scrolls little past anchor ngmodule imports routermoduleforroot routes anchorscrolling enabled exports routermodule expected behavior refreshing page anchor link eg mypagecom product take back exact scroll position anchor environment", "num": "25489", "d": "8/2018"}, {"title": "angular docs slow load", "body": "submitting current behavior angular docs slow load often nt load sometimes takes multiple refreshes get appear either visiting home page linking specific route docs expected behavior docs load instantly load offline thought offlineready pwa one point minimal reproduction problem instructions visited docs latest version chrome appears crossbrowser environment documentation string bottom page load says browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "25487", "d": "8/2018"}, {"title": "route multiple params firing subscribe prod flag", "body": "submitting current behavior compiled app using prod flag route two route params example subscribe ngoninit trigger update router link updates one values subscribe triggered expected behavior expect either updated would trigger subscribe paramsmap currently testing environment", "num": "25485", "d": "8/2018"}, {"title": "", "body": "cant get today netherlands even proxies world dont let site willem luijk", "num": "25484", "d": "8/2018"}, {"title": "exportexpose todate", "body": "submitting current behavior formatdatets internal method convertingparsing date used angular exported expected behavior exported commonts minimal reproduction problem instructions motivation use case changing behavior writing date pipe custom logic displaying yesterdaytodaytomorrow dates close like use parse incoming variable method exposed environment tooling issues node version platform others", "num": "25480", "d": "8/2018"}, {"title": "date datepipe", "body": "trying show date specific format spanish angular working properly code someone know make work", "num": "25477", "d": "8/2018"}, {"title": "documentation enhancements", "body": "sometimes read paragraph times understand mean angular documentation team written many things one line boring time consuming", "num": "25476", "d": "8/2018"}, {"title": "feature request rootinjectable", "body": "context please see earlier feature request markup replacement", "num": "25466", "d": "8/2018"}, {"title": "add new lifecycle hook afterviewinit first afterviewchecked", "body": "submitting current behavior dom elements view children nt guaranteed fully parented dom eg able traverse way occasionally useful know element fully finished rendering placed dom two workarounds add settimeout add code guard make sure runs see also neither workaround ideal expected behavior add new lifecycle hook fires element children fully created added dom minimal reproduction problem instructions motivation use case changing behavior occasionally components directives want able look information ancestry eg workaround environment browser x chrome desktop version official build chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "25464", "d": "8/2018"}, {"title": "template interpolation breaks using createembeddedview testing environment", "body": "submitting situation nutshell briefly describe example breaks testing environment runs fine normal environment bug report define template tag done loaded dynamically context bye bye class acomponent extends templateextractor templateextractor exposes one referenced via method component elsewhere different component contains template get hold ngcontainer also create immediately destroy instance extract templateref vc template result current behavior normal application mode produces following html expected produces following html html outer div test loaded dynamically interpolated bye bye html outer div test loaded dynamically expected behavior would expect html html outer div test loaded dynamically interpolated bye bye file javascript describe directive tableeditorcelldirective gt let fixture componentfixture beforeall gt testbedresettestenvironment testbedinittestenvironment browserdynamictestingmodule platformbrowserdynamictesting beforeeach gt testbedconfiguretestingmodule imports appmodule fixture testbedcreatecomponent appcomponent fixturedetectchanges describe dummy test gt dummy test fakeasync gt fixturedetectchanges tick minimal reproduction problem instructions could nt get test environment example work plunkr standalone repo hope sufficient motivation use case changing behavior writing test library writing porting angulartableeditor angular environment angular version chrome desktop version", "num": "25463", "d": "8/2018"}, {"title": "currency pipe able setchange default currency", "body": "submitting current behavior using currencypipe want show different currency us dollars set explicitly every time use pipe templates output output expected behavior able set root module default currency want use using currency symbol going show default currency specified template one defined loaded locale currency code example appmodulets componenthtml using output using output gbp minimal reproduction problem instructions motivation use case changing behavior developing application country locale use uses symbol us dollars every time use currency outputs us nt want use dollars lot currency outputs display local currency pesos found expliciting every place use best way go found way working around sure best option think feature request would suitable option change us symbol dollars way could without expliciting templates currency show code currencies locale esuy others issue associated request", "num": "25461", "d": "8/2018"}, {"title": "query params array dynamically added angular", "body": "const filtereddata empty array load page query parms stars value got url loading like kind fix filter got array filtereddata parsing queryparams unselect got empty array fix one add filtereddatalenght gt null filtereddata last filter value removed onstarchange const filtereddata thisrouternavigate relativeto thisroute queryparams stars filtereddata queryparamshandling merge", "num": "25460", "d": "8/2018"}, {"title": "ngifeventemitter memory leak", "body": "submitting current behavior detached dom nodes cleared child component removed using ngif change triggered child expected behavior detached dom nodes cleared cases avoid memory leaks minimal reproduction problem instructions since issue apparent stackblitz created demo repository steps reproduce clone repo install dependencies run ng serve open project chrome open chrome devtools navigate memory tab click collect garbage icon app click toggle button show title click hide devtools click collect garbage icon take heap snapshot verify nt detached nodes app click toggle button show title click close button devtools click collect garbage icon take heap snapshot observe detached nodes nt garbage collected issue seem happen ngif condition change triggered component ngif directive applied motivation use case changing behavior multiple web apps running appliances since bug causes constant memory leak eventually apps slow crash environment", "num": "25459", "d": "8/2018"}, {"title": "unit testing component debouncetime rxjs operator way hard", "body": "submitting autocomplete schools fakeasync gt spectatorclick spectatortypeinelement ba inputebfilter code uses spectator library wraps testbed api required test component autocomplete feature uses testing code uses operator difficult difficult mean wrap test advance time using wait fixture table finally docs make mention use fact says opposite fakeasync function enables linear coding style running test body special fakeasync test zone test body appears synchronous nested syntax like promisethen disrupt flow control", "num": "25457", "d": "8/2018"}, {"title": "typescript resolvejsonmodule feature broken compiling aot", "body": "submitting current behavior using new resolvejsonmodule feature typescript combination angular error read property symbol symboliterator undefined error raised compiling using aot flag without aot flag compilation sucessful expected behavior compiling aot flag using revolejsonmodul feature typescript fine minimal reproduction problem instructions instantiate new project angularcli add resolvejsonmodule configuration tsconfigjson create json file containing objet eg srcapptestjson import object appcomponent build angular app aot motivation use case changing behavior angular compliant typescript feature environment", "num": "25456", "d": "8/2018"}, {"title": "service worker error found", "body": "mon aug get error found mon aug get error found mon aug get error found mon aug get error found issues want start localhost serviceworker", "num": "25455", "d": "8/2018"}, {"title": "update exiting project locally", "body": "submitting current behavior hello downloaded project angular need update follow instruction expected behavior minimal reproduction problem instructions motivation use case changing behavior success success success run project computer affected want pathtoproject update affected project environment", "num": "25454", "d": "8/2018"}, {"title": "ca nt use trackby keyvaluepipe", "body": "submitting current behavior using like find differ supporting object object object type object ngfor supports binding iterables arrays error see stackblitz expected behavior possible use minimal reproduction problem instructions environment", "num": "25452", "d": "8/2018"}, {"title": "angular compiler requires typescript gt lt found instead", "body": "submitting current behavior angularcompilercli requires typescript lt found instead using version result undefined behavior difficult debug problems expected behavior compiler cli use newer version typescript minimal reproduction problem instructions run ng new myproject cd myproject npm savedev typescript latest ng serve open motivationuse case changing behavior tools use current stable versions tools making one steps back environment browser build problem tooling issues node version platform win", "num": "25450", "d": "8/2018"}, {"title": "angularanimations incoherent inconsistent behavior animating divs", "body": "submitting current behavior playing around animation package multiple points raise please look stackblitz link provided understand bottom example exact animation code different animation triggers item red ngfor item yellow without ngfor hit button first time item red move animation item yellow move animation hit button second time item red move animation beginning row current position gt lost position item yellow move animation current position new one gt lost animation note uncomment line method solved needed opinion since includes red item gt uncomment line method broke animation red item totally gt animation behave differently withwithout ngfor think problems mentioned fixed confirm problems nt open one issue per problem confirm needed expected behavior button click item yellow item red behave move horizontally animation minimal reproduction problem instructions check section instructions motivation use case changing behavior fixing package environment angular v gt stackblitz packagejson browser x chrome desktop version official build", "num": "25447", "d": "8/2018"}, {"title": "tutorial live example broken", "body": "submitting current behavior provides link link results expected behavior yeah expected get live example minimal reproduction problem instructions navigate click motivation use case changing behavior obvious environment", "num": "25446", "d": "8/2018"}, {"title": "angular refresh page one component component", "body": "navigation component dropdown value change dropdown componentpage refreshed two components child parent navigation component value change method set value localstorage needs checked components well page using local value render page oninit ngoninit var userlocation localstoragegetitem userlocation windowscroll value change dropdown able refresh page even though use route navigate page wont call ngoninit page already initialized way forcefully destroy route ngoninit get executed time navigate page way refresh page value change dropdown", "num": "25444", "d": "8/2018"}, {"title": "pwa ca nt cache resource space url", "body": "submitting current behavior resources assets directory filename includes space angularpwa service worker ca nt cache correctly expected behavior minimal reproduction problem instructions ng add angularpwa put image named bjpg assets reference html ng build prod open browser enable offline mode chrome devtools refresh page got motivation use case changing behavior environment", "num": "25443", "d": "8/2018"}, {"title": "cachecontrol assets breaking service worker", "body": "submitting current behavior moment asset header set break service worker throw error due mapping function expected behavior error minimal reproduction problem instructions set service worker config response header set motivation use case changing behavior nt breaking service worker invalidate asset", "num": "25442", "d": "8/2018"}, {"title": "feature request annotation replace providedin root injectable rootinjectable", "body": "x feature request words want service provided write", "num": "25441", "d": "8/2018"}, {"title": "validators template confuse reactive forms validation ngif used", "body": "submitting current behavior reactive form use required validation conditionally added template works unless remove input according expected behaviour required condition still active even input containing attribute removed setup removing control validation reacts condition condition true input removed flag remain regardless condition required validation seems lose connection condition expected behavior suggest adding validation docs template validation used reactive forms least conditional validation possible add warning dev mode better method add dynamic validation minimal reproduction problem instructions stackblitz check required wil become invalid uncheck required become valid uncheck ngif input fields hidden remains invalid expected according check ngif check required wil become invalid uncheck ngif input fields hidden remain invalid check ngif uncheck required remain invalid although become valid motivation use case changing behavior would like generate static validation constraints swagger model definition using cumbersome need know static validators removing dynamic validator thus wanted use static validators add dynamic validation template currently using conditional validator typescript export function conditionalvalidator condfn control abstractcontrol gt boolean validators validatorfn validatorfn validatorfn return control gt condfn control return null allows dynamic validation without adding removing validators nt solve swagger issue conditional validator added time static validators defined environment", "num": "25440", "d": "8/2018"}, {"title": "typo", "body": "typo screenpage tow types data binding ng two types data binding ok", "num": "25439", "d": "8/2018"}, {"title": "unable create new angular project", "body": "submitting current behavior npm install installing dependencies giving error saying unexpected end json input expected behavior npm install download dependencies without errors minimal reproduction problem instructions npm install g angularcli ng new sample prefix test motivation use case changing behavior unable create angular project environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform windows others", "num": "25437", "d": "8/2018"}, {"title": "router strict route validation lazyloaded modules", "body": "submitting current behavior contains canactivate guard get validation error however route lazyloaded module works perfectly fine expected behavior expect routes lazyloaded modules validation however wish validation rule less strict use canactivate guards dynamic redirects rule valid another way dynamic redirects componentless routes eg new type guard typescript const routes path redirect myredirectguard interface redirect redirect route activatedroutesnapshot state routerstatesnapshot string promise observable class myredirectguard implements redirect redirect route activatedroutesnapshot state routerstatesnapshot string return somedynamicurl minimal reproduction problem instructions uncomment first route appmodulets trigger error however featuremodulets works fine motivation use case changing behavior use guards dynamic redirects whenever need want trigger specific urls componentless routes construction user navigates automatically goes want able modules lazyloaded without need provide kind om dummy component environment", "num": "25431", "d": "8/2018"}, {"title": "allow route resolve single valueobservablepromise", "body": "submitting current behavior property must object containing resolvers expected behavior allow single resolver store resolved value right motivation use case changing behavior think adding separate resolver class stored separate file every single route fetching data cases single call service method perfect example overengineering sorry recently came interesting idea use page component classes route resolvers example ts interface post id number title string const routes route path post id component postpagecomponent resolve post postpagecomponent component selector apppostpage template title posttitle class postpagecomponent implements oninit resolve post post constructor private posts postsservice private route activatedroute async resolve route activatedroutesnapshot promise return thispostsget routeparamsid ngoninit thispost thisroutesnapshotdatapost injectable class postsservice async get id post id promise fetch post return id title foo ts class postpagecomponent implements oninit resolve async resolve route activatedroutesnapshot promise const author thisauthorsget routeparamsauthorid const post thispostsget routeparamspostid return author await author post await post ngoninit const author post thisroutesnapshotdata postpagedata thisauthor author thispost post course rename key case accessing look like bothers little propose allow property single value observable promise case resolved value stored right route contains static object merged data resolver environment", "num": "25430", "d": "8/2018"}, {"title": "angular deployment redirect request tomcat", "body": "submitting current behavior angular documentation provides list redirect samples different servers know meant full list every solution every server could provide namely apache apache tomcat small snippet apache tomcat would help lot developers think section expanded server types angular documentation tends far better explaining using samples actual server documentation", "num": "25429", "d": "8/2018"}, {"title": "resolve sideeffects", "body": "submitting current behavior sometimes convenient use resolve service make sideeffects happen route activated typescript route config path startup pathmatch full component startupcomponent resolve dowork doimportantstuff resolve service stuff component initialized injectable export class doimportantstuff implements resolve resolve route activatedroutesnapshot state routerstatesnapshot observable promise void important stuff example load user data session storage return void code really easy write time feels awkward use resolve service sideeffects implements generic interface type parameter weird routeconfig needs name void result weird route snapshot data property always undefined weird expected behavior add api similar resolve background work nt return value let call route initializers confused app initializers babies used route activated oh run typescript new interface interface onrouteactivated init route activatedroutesnapshot state routerstatesnapshot observable promise void extend route new interface interface route initializers onrouteactivated essentially still resolve without upsetting cqs purists motivation use case changing behavior sometimes difficult fit background work component method especially involves things parallel need initialization code multiple routes resolve service seems like good solution problems code feels awkward resolve expected return result fyi would look like new world ts route initializer service stuff component initialized injectable export class doimportantstuff implements onrouteactivated init route activatedroutesnapshot state routerstatesnapshot observable promise void important stuff example load user data session storage return void void promiseobservable route config path startup pathmatch full component startupcomponent initializers nt key nt return data one order nt matter preferably run concurrently initialize doimportantstuff", "num": "25428", "d": "8/2018"}, {"title": "router bug safari syntaxerror string match expected pattern", "body": "submitting current behavior really weird bug site throws error navigating second time another router link site works first url load works first link click routeroutlet stops working nothing shown works fine chrome firefox edge crashes safari desktop ios expected behavior standard working router safari minimal reproduction problem instructions beta version site deployed load site safari click link click another link navigating first route console shows error motivation use case changing behavior environment", "num": "25427", "d": "8/2018"}, {"title": "setting headers httpclient put method", "body": "submitting current behavior headers put method added like nt get applied get applied written like httpclient methods get post delete work either way expected behavior consistent behavior httpclient methods environment", "num": "25426", "d": "8/2018"}, {"title": "ca nt resolve ngfactoryjs aot serve update angular", "body": "submitting current behavior updating angular serve project aot need everything works fine refresh save example get lot errors like crash expected behavior append like minimal reproduction problem instructions create new project routing ctrl project file motivation use case changing behavior angular become unusable environment", "num": "25424", "d": "8/2018"}, {"title": "use reactive forms textarea could place caret midle text using setselectionrange", "body": "submitting use reactive forms textarea could place caret midle text using setselectionrange current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25423", "d": "8/2018"}, {"title": "fulltemplatetypecheck safe navigation operator nt work", "body": "submitting current behavior items accepted linter scope defined fulltemplatetypecheck items accepted linter scope defined fulltemplatetypecheck expected behavior scenarios work way environment tooling issues node version latest platform windows", "num": "25422", "d": "8/2018"}, {"title": "create custom elements existing components angular app", "body": "submitting current behavior documentation amp samples demo projects create custom elements existing angular components packing elements includes mainjs include entire application element would one implement exporting specific components inside existing application expected behavior export specific components required infrastructure whole app minimal reproduction problem instructions motivation use case changing behavior code reusability able use existing specific components apps instance minimal indexhtml loaded electron app functionality angular app code duplications environment", "num": "25421", "d": "8/2018"}, {"title": "droppable event working every time", "body": "hello drag drop functionality using jqueryuijs using droppable function times working times code component side code function connectedsortable sortable connectwith connectedsortable disableselection connectedsortable droppable drop function event ui consolelog event event", "num": "25420", "d": "8/2018"}, {"title": "ng build prod issue", "body": "app success run use ng build use ng build prod fail error error determine module class componentbase e add componentbase ngmodule fix determine module class buttonbarcomponent e add datetimecontrol ngmodbarbuttonbarcomponentts add buttonbarcomponent ngmodule fix sysbase abstract class componentbase abstract class component buttonbarcomponent component sysbase code import input component angularcore export abstract class sysbase input layout input value constructor abstract gettype string abstract setvalue value abstract getvalue componentbase code import input component componentfactoryresolver type viewcontainerref oninit componentref angularcore import activatedroute angularrouter import componentservice componentservice import sysbase sysbase component export abstract class componentbase extends sysbase implements oninit children array constructor protected route activatedroute protected comonentfactory componentfactoryresolver protected componentservice componentservice super thischildren ngoninit getcomponent type string return thiscomponentservicegetcomponent type gettype return component setvalue value thisvaluevalue thischildrenforeach c gt csetvalue thisvalue getvalue let data thischildrenforeach c gt objectassign data cgetvalue return data createchild lay parent viewcontainerref componentref return thiscreatechildbytype laytype lay parent createchildbytype type string lay parent viewcontainerref componentref let factoryclass gt thisgetcomponent type factoryclass let com thiscomonentfactoryresolvecomponentfactory factoryclass let section parentcreatecomponent com sectioninstancelayout lay sectioninstancevalue thisvalue thischildrenpush sectioninstance return section return null buttonbarcomponent code import component oninit input output viewchild viewcontainerref type eventemitter angularcore import componentbase basecomponentbase import buttoncontrol controlbuttonbuttoncontrol component templateurl buttonbarcomponenthtml export class buttonbarcomponent extends componentbase click eventemitter new eventemitter viewchild childbutons read viewcontainerref child viewcontainerref ngoninit superngoninit thisprocesslayout getvalue return private processlayout thislayout thislayoutforeach lay gt let buttonthiscreatechild lay thischild buttoninstanceclicksubscribe lay gt thisclickbutton lay clickbutton layout thisclickemit layout environment dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter progresskendoangularbuttons progresskendoangulardateinputs progresskendoangulardropdowns progresskendoangularexcelexport progresskendoangulargrid progresskendoangularinputs progresskendoangularintl progresskendodataquery progresskendodatemath progresskendodrawing progresskendothemedefault typeswebpack corejs rxjs rxjscompat zonejs devdependencies angularcompilercli angulardevkitbuildangular typescript angularcli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint ng information angular cli node os angular common compiler compilercli core forms http languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularanimations angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack node uses default configuration", "num": "25419", "d": "8/2018"}, {"title": "angular apps crash run googlebot phantomjs", "body": "submitting current behavior angular app generated angularcli works great chrome firefox safari try scrape googlebot however crashes tried simulate issue phantomjs sources indicate google uses get following console error typeerror undefined constructor evaluating new array headeroffset fill null nodemodules webpackrequire srcmaints webpackrequire webpackrequire checkdeferredmodules webpackjsonpcallback seems headless browser running getting confused nt know relevant line code expected behavior expect compiled app run properly phantomjs googlebot minimal reproduction problem instructions create new angular project serve project snapshot page phantomjs watch console messages var page require webpage create pageonconsolemessage function msg linenum sourceid consolelog console msg line linenum sourceid pageopen function pagerender googlebottestpng phantomexit motivation use case changing behavior people expect angular projects scrapable google turns googlebot phantomjs white screen environment", "num": "25416", "d": "8/2018"}, {"title": "create angular new project issues newest version", "body": "dear sirsmadams submitting issue company plan use angular web development installed new aguilar new version first time window enterprise bit machine installed successfully start create new project failed got warnings sample warn tar enoent file directory open c warn tar enoent file directory open c warn tar enoent file directory open c error warn optional skipping optional dependency fsevents nodemodulesfsevents warn enoent skipping optional dependency enoent file directory rename c c verbose enoent skipping optional dependency related npm able find file verbose enoent skipping optional dependency verbose stack error integrity checksum failed using wanted got bytes verbose stack transformon c program verbose stack emitnone verbose stack transformemit verbose stack endreadablent verbose stack combinedtickcallback verbose stack processtickcallback verbose cwd c verbose windowsnt verbose argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install quiet verbose node verbose npm error code eintegrity error integrity checksum failed using wanted got bytes verbose exit true attached log file tried install fix failed still please give instruction thanks chao current behavior expected behavior minimal reproduction problem instructions run command ng new hellow routing motivation use case changing behavior environment", "num": "25414", "d": "8/2018"}, {"title": "return value function interface different actual return value", "body": "submitting current behavior trying operations using ioperation interface strange error log operation values operation result problem try log interface get overwrited operation values result english good put code expected behavior console logs correct contradict minimal reproduction problem instructions motivation use case changing behavior think internal problem angular nt know fix environment", "num": "25412", "d": "8/2018"}, {"title": "eventemitter subscribe", "body": "ever really plan deprecate subscribe method true properly usage eventemitter emit events one component another", "num": "25411", "d": "8/2018"}, {"title": "lazy loading cdn", "body": "submitting like ask possible load lazy modules external server like upload resources onto cdn seems lazy modules loading nodejs server good", "num": "25410", "d": "8/2018"}, {"title": "change events fired reactive forms html", "body": "submitting current behavior currently seeing throughout entire application upgraded angular angular behavior works fine angular change events set html eg selecting new value dropdown list fire currently expected behavior change event fire dropdown selection changed example minimal reproduction problem instructions add change event forms dropdown list try change value list making selection eg code snippet onstoreselection never gets fired select value motivation use case changing behavior current behavior broken environment", "num": "25409", "d": "8/2018"}, {"title": "httprequest method field typing", "body": "submitting current behavior http interceptors httprequest object passed method public field field typed string literal possible http verbs instance could tsc compiler would catch compiletime bug expected behavior method field would typed like minimal reproduction problem instructions motivation use case changing behavior environment browser na tooling issues na others na", "num": "25407", "d": "8/2018"}, {"title": "angular service worker makes http requests offline", "body": "submitting current behavior angular app sw configured everything works fine axcept enable offline chrome dev tool navigating previosly visited pages back forward random routrips instead giving back cached data tries make actual request sand retrieves tried different configurations isame result requests pages see getsubpages request times comming sw third one trying real request idea expected behavior offline try call service motivation use case changing behavior pwa environment", "num": "25405", "d": "8/2018"}, {"title": "viewproviders override providers providers contain token viewproviders", "body": "submitting current behavior console prompts taken override contain token component contains console contains component contains console contains expected behavior component contains console contains component contains console contains minimal reproduction problem instructions motivation use case changing behavior provide different objects content view parts isolate viewproviders access outside environment browser", "num": "25404", "d": "8/2018"}, {"title": "submit fired nested inside another element click binding", "body": "submitting current behavior binding somewhere nested inside another element binding binding returns false implicitly explicitly submit called nested bindings however called expected expected behavior nested binding called even parent element binding returns false minimal reproduction problem instructions create div binding method logic returns nest form inside div submit button add binding stackblitz reproduction see click binding happens piece code last line returns false issue occurs motivation use case changing behavior assigning variable html template environment", "num": "25403", "d": "8/2018"}, {"title": "serviceworker never installs timer running", "body": "submitting current behavior registering service worker via serviceworkermoduleregister ngswworkerjs turns worker registered application considered stable turn determined checking outstanding macro microtasks application eg uses interval timer eg periodically refresh service worker never registered application never reaches stable state expected behavior would expect supported use timers intervals application cause service worker registered minimal reproduction problem instructions use empty angular app add service worker support via start timer constructor module result service worker never registered environment", "num": "25402", "d": "8/2018"}, {"title": "improve documentation httpclient generic typing", "body": "submitting current behavior documentation describes typechecking response using generic typing functionality introduced angular however section docs perhaps functionality general seems led lot confusion issue mainly manifests stack overflow questions op expects result calling method methods properties generic type specified types properties actually cast converted specified small subset questions angular json data map model methods http response object httpclient type safety seems ignore interface json class object angular angular proper way cast http response domain model work angular amp corenet rest webpack angular httpclient methods casting response type even expect invoke validation eg angular typed http response expected behavior think section name might misleading response nt type checked generic type allows code consuming response type safe assuming specific type supplied actually matches response shape think section would benefit warning boxout highlighting limits functionality seems obvious typescript ca nt nt exist runtime still seems surprise lot people example specifically shows converting raw jsonmatching interface domain class would probably helpful eg something perhaps something like describing response type ca nt write typescript correctly complains data object service property method parsed json server response anonymous type nt know shape object tell type response make consuming output easier obvious note typescript compile time tool implicit casting conversion validation type specify runtime avoid confusion recommended use interfaces containing basic json value collection types response type hints first define interface matches shape response server specify interface call type parameter service callback updated component method receives typed data object easier safer consume config config showconfig thisconfigservicegetconfig clone data object using known config shape subscribe data config gt thisconfig data minimal reproduction problem instructions motivation use case changing behavior nt want keep reading question environment", "num": "25401", "d": "8/2018"}, {"title": "aoi testing guide mover", "body": "submitting current behavior reads two mover versions expected behavior read two versions minimal reproduction problem instructions click skip paragraphs read paragraph stumble typo", "num": "25400", "d": "8/2018"}, {"title": "style guide provide explanation interface naming recommendations", "body": "style guide topic interfaces style mention following guidelines reference question say everything contained appends contributors angular guideline community use propose either include reasoning inside style guide remove topic", "num": "25399", "d": "8/2018"}, {"title": "form nt detect prefilled data onchange events", "body": "submitting current behavior form multistep event bound field first steps onchange event triggers fields next steps though already filled user shown null makes step invalid user needs either make change field particular step refresh form order proceed form steps expected behavior fields detect prefilled data show valid change event triggered motivation use case changing behavior blocked user decides fill multistep form goes back previous step changes field change event bound environment", "num": "25398", "d": "8/2018"}, {"title": "reset styles animating angular", "body": "submitting current behavior input field appears stretches animation time styles applied animation time removed width border input element become standard ones specified style object expected behavior input box appear stretch pixels wide remain position click closing cross minimal reproduction problem instructions motivation use case changing behavior animate search bar using angular animation ngif input field appears input animation ends applied styles reset width becomes standard border disappears happening fix environment", "num": "25397", "d": "8/2018"}, {"title": "feature ability pass default value optional", "body": "submitting current behavior way change value passed constructor di dependency resolved expected behavior ability pass arbitrary default values instead needed similar ts behavior declaring optional method parameter ability declare default value like get instead caller provided parameter motivation use case changing behavior issue obvious use case ca nt technically constructor signature like ts strict typing enabled must declare possible types could get issue expanding example due lack feature ca nt avoid using tsjs recommended many reputable references case team prefers addition declare possible type must either use notice double equlity instead triple one whenever want know whether actual value coerce immediately comes inability declare field constructor parameter private number undefined constructor optional number null null undefined instead awesome constructor optional undefined private number alternatives huge mess pain proposal able moreover consistency since ts provides missing optional parameters also make proposal also provide default instead since breaking change community feedback required part proposal even behavior providing instead inconsistent another aspect angular properties property binding specified template property would instead environment", "num": "25395", "d": "8/2018"}, {"title": "allow ngtemplateoutlet use templates provided via ngcontent", "body": "submitting current behavior parent component provides html content ngtemplate subcomponent includes ngcontent provided content rendered inside ngcontent tag subcomponent able use provided templates ngtemplateoutlet template rendered content expected behavior subcomponent able directly use provided templates done example template provided via ngcontent minimal reproduction problem instructions simple demo hellocomponent parent tabscomponent subcomponent demo also includes example using select attribute ngcontent see editor motivation use case changing behavior template available sub component provided parent component via ngcontent therefore work using select attribute ngcontent ngcontent component already allows specify selector using select attribute could used instead templates ngtemplateoutlet problem content gets always rendered even subcomponent uses ngif content test course added dom ngif used rendered automatically least want using ngif environment", "num": "25394", "d": "8/2018"}, {"title": "production build destroys pattern", "body": "submitting current behavior ng build prod removes back slashes pattern converted expected behavior destroy pattern minimal reproduction problem instructions use pattern project input field build environment", "num": "25390", "d": "8/2018"}, {"title": "ivy testbed missing features", "body": "things still implemented destroying debug nodes view destroyed x merge lot common code x duplicate use version browser dynamic platform see code today tests executed ivy mode testbed support ivy prior pr however enable testbed tests ivy lot failing features yet implemented ivy unexpected breaking changes ivy number failing test compiled ivy huge need implement strategy would catch regression number passing tests would error failing tests way make sure tests pass time fail remaining failing tests reference ie yet supported note template references yet supported ivy test ie edit ngfor spec change main execute implement new features fix existing ones might need update code fix issues chances need update add missing functionalities fix current version test changes change execute related prs", "num": "25389", "d": "8/2018"}, {"title": "formgroupdirective emit event addcontrol", "body": "submitting current behavior formcontrolname registers formgroupdirective statuschanges triggered expected behavior formcontrolname registers formgroupdirective statuschanges triggered minimal reproduction problem instructions check check check form statuschange keeps valid value form correct invalid state happens addcontrol method emit event environment angular version", "num": "25388", "d": "8/2018"}, {"title": "angular elements nt works use documentcreateelement page load", "body": "submitting current behavior angular elements nt works use page load expected behavior components works minimal reproduction problem instructions see indexhtml motivation use case changing behavior bug environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others vs code stackblitzcom", "num": "25387", "d": "8/2018"}, {"title": "formcontrolname ngondestroy remove validators formcontrol", "body": "submitting current behavior formcontrolname registers validators given formcontrol remove destroy expected behavior formcontrolname registers validators given formcontrol remove destroy minimal reproduction problem instructions check check check remove check form statuschange keeps invalid value form valid state happens ngondestroy formcontrolname removes directives list change corresponding formcontrol environment angular version", "num": "25386", "d": "8/2018"}, {"title": "deleting path route based condition", "body": "submitting current behavior want create specific build based condition nt want paths routes tried delete deleting code expected behavior final variable deleting career page still coming build environment", "num": "25385", "d": "8/2018"}, {"title": "ssr fails approot selector", "body": "submitting current behavior set first component appcomponentts selector body instead approot ssr render view user client side app never kick ng serve also work finding bug proves difficult expected behavior appcomponentts selector body instead approot ssr serve page client side app take minimal reproduction problem instructions download universal starter change approot selector body appcomponentts use command npm run build ssr use command npm run serve ssr motivation use case changing behavior bug environment browser tooling issues node version platform", "num": "25384", "d": "8/2018"}, {"title": "datepipe first day week changing corresponding set locale", "body": "submitting current behavior setting locale german datepipe nt switch first day week sunday monday also calendar weeks starting sundays mondays expected behavior transforming date eg march parameter w output instead minimal reproduction problem instructions take look motivation use case changing behavior implementation iso standard weekday number beginning monday ending sunday environment edit updated stackblitz", "num": "25380", "d": "8/2018"}, {"title": "child routes notified resolved data changes", "body": "submitting current behavior resolver rerun reload current url using child route components subscribed data changes notified expected behavior resolver rerun components lower route tree notified otherwise continue use display stale data minimal reproduction problem instructions open console note parentcomponent childcomponent receive resolved value change resolved value b click refresh note resolver run note parentcomponent notified change note childcomponent notified motivation use case changing behavior work towards making router resolve functionality usable realworld apps environment", "num": "25378", "d": "8/2018"}, {"title": "ngoninit fire changed route different parameter", "body": "submitting current behavior ngoninit fire changed route different parameter url like expected behavior ngoninit work minimal reproduction problem instructions export class documentationdetailcomponent implements oninit afterviewinit documentid number constructor private router router ngoninit alert ngoninit fire routing const routes routes path component documentationcomponent children path component documentationdetailcomponent path id component documentationdetailcomponent ngmodule imports routermoduleforchild routes exports routermodule export class documentationroutingmodule environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform windows", "num": "25376", "d": "8/2018"}, {"title": "wellsupport mixins", "body": "submitting current behavior within aot create anonymous class mixin behaviour components like issue expected behavior would great use mixins aot like working jit motivation use case changing behavior simplify complex logic avoid make much services composeduplicate methods plans make happens near future browser", "num": "25375", "d": "8/2018"}, {"title": "conditional providers angular module throws aot error", "body": "hi trying include provider module based condition works fine jit fails aot saying function call allowed decorator symbols allowed decorator use variables code throws aot error saying symbols allowed decorator const ie detectie const tempproviders array abcservice xyzservice ie tempproviderspush provide eventmanagerplugins useclass ieinputeventmanagerservice deps document multi true ngmodule gt continues case provider never gets pushed never gets active solve issue hope code clear trying achieve whats correct way valid scenario submitting regression behavior used work stopped working new release x bug report performance issue x feature request x documentation issue request support request gt please submit support request instead see please describe", "num": "25374", "d": "8/2018"}, {"title": "entire api unstable", "body": "exploring api select stable dropdown everything goes away everything marked experimental except api elements stable documentation browser broken submitting", "num": "25373", "d": "8/2018"}, {"title": "routeroutlet component stack", "body": "submitting current behavior routeroutlet component stack path transformed current route replace previous route instead hiding mobile side page switching directional either forward backward importantly returning previous page previous page retains previous state best example ionic ionnav think way implementation good hope routeroutlet support feature native expected behavior routeoutlet implement functions similar ionnav environment", "num": "25372", "d": "8/2018"}, {"title": "protractorwebtestsuite flaky", "body": "submitting current behavior protractorwebtestsuite bazel rule flaky sometimes fails seen ci locally expected behavior nt flake minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25368", "d": "8/2018"}, {"title": "windowlocationhref nt work angular service injectable", "body": "submitting current behavior application authentication ms active directory jwt openid connect user authenticated redirect windiwlocationhref microsofturlactivedirectory redirection component working fine component selector appdashboard templateurl dashboardcomponenthtml styleurls dashboardcomponentcss export class dashboardcomponent implements oninit constructor private oidcsecurityservice oidcsecurityservice private authenticationhelperservice authenticationhelperservice ngoninit thisauthenticationhelperserviceisauthenticated thisoidcsecurityserviceauthorize windowlocationhref trying redirect service nothing happen injectable export class gatewayservice constructor private http private authenticationhelperservice authenticationhelperservice createserviceget url string options requestoptions headers headers null observable thisauthenticationhelperserviceisauthenticated thisoidcsecurityserviceauthorize windowlocationhref expected behavior thisoidcsecurityserviceauthorize windowlocationhref redirection happen services well minimal reproduction problem instructions use windowlocationhref component injectable service nothing happen motivationuse case changing behavior environment", "num": "25364", "d": "8/2018"}, {"title": "calling platformbrowserdynamic second time silently ignores extraproviders", "body": "submitting current behavior js platformbrowserdynamic bootstrapmodule moduleone platformbrowserdynamic provide myvalue usevalue something bootstrapmodule moduletwo applications bootstrapped available would nt write code like single file may happen independent code calls expected behavior either make available bootstrapped module throw error saying call function twice throw error calling twice must arguments motivation use case changing behavior issue hard debug existing code broken newly added independent code new code calls earlier environment angular version browser browserspecific", "num": "25358", "d": "8/2018"}, {"title": "add ability detect activatedroute advanced", "body": "submitting current behavior ability reload route made available via however reloaded route query parameters basis component behavior eg search via observing applied anew upon reload nothing happens usually route advanced shallow equals conducted query params others see emitted values primitives workaround make sure least one query parameter values arrays passed router navigationreload expected behavior know advanced especially route reloaded motivation use case changing behavior ability observe property eg indicates advancing eliminate need forcefake query parameters changing happy take pr sure extent need educated implicationsscenarios advancing routes component activatedroute associated unloaded advancing occur well use case would nt want search rerun leaving", "num": "25356", "d": "8/2018"}, {"title": "viewencapsulationemulated html validity results", "body": "submitting current behavior without specifying viewencapsulationnone components html elements rendered ngcontentc tags company work relies validity webpage inserting source angular based webpage lot errors show example really like viewencapsulationemulated default functionality ca nt seem use adhere rules expected behavior output valid html im sure fixed tags starting data allowed could help html validity however might missing key point design strategy angular devs made decision case please let know minimal reproduction problem instructions compile angular app inspect generated html motivation use case changing behavior output valid html environment", "num": "25355", "d": "8/2018"}, {"title": "page scrolls top navigating page", "body": "submitting current behavior navigating page using page scrolls top expected behavior page remain scrolling position navigating page minimal reproduction problem instructions motivation use case changing behavior method provides good way update url parameters page using following way also happens using environment looking events received following output red arrow indicates moment page scrolls top investigation found related new router scroller feature introduced think disabled default since updating routermodule options fixed issue", "num": "25353", "d": "8/2018"}, {"title": "wait nested call api display array angular material pls help noob", "body": "submitting current behavior call api http service get users user call api entity http service get locations need associate locations return request user display array angular material mattab array empty duplicate user expected behavior need build array users locations print mattab minimal reproduction problem instructions component public userwithlocations ngoninit thisloaddata loaddata let get users subscribe alluser gt service users requests getallusers observable return observable return users motivation use case changing behavior young developer beginner angular try learn nested call api rxjs job environment", "num": "25352", "d": "8/2018"}, {"title": "angular triggering validation fields concern", "body": "submitting current behavior building form creator fields wrapper fields divided two groups visible always visible field async validator toggle visible field async validator visible one triggered expected behavior operation field trigger validators field example hide normal field replace validator triggered also drives problem example minimal reproduction problem instructions reproduction click hideshow button pending changing motivation use case changing behavior environment", "num": "25350", "d": "8/2018"}, {"title": "nt arialabel ngselect creates new input box placeholder", "body": "get issue wcag compliance tell add arialabel input box note already try attrarialabel", "num": "25349", "d": "8/2018"}, {"title": "disable debugger statement enableprodmode mode", "body": "still executing statement anyone please tell disallow disable statement production mode thanks", "num": "25348", "d": "8/2018"}, {"title": "angular universal using window scroll top issue", "body": "created application using universal angular building application facing one error called refrenceerror window defined reason using window change route page starts mid need implement want route page start top one solution regarding please help building project", "num": "25347", "d": "8/2018"}, {"title": "http response redirect problem", "body": "submitting current behavior make http call server redirects external authentication provider angular zonejs intercept response make redirect xhr call expected behavior angular zonejs handle redirect response browser responsibility minimal reproduction problem instructions make get request return redirect response go network tab browser get xhr get get zonejs xxxx case redirect url xhr environment angular version zonejs browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "25345", "d": "8/2018"}, {"title": "use global variable named global since update", "body": "submitting current behavior since update problem di indexhtml var named global error expected behavior work like minimal reproduction problem instructions demo environment tooling issues node version platform windows", "num": "25344", "d": "8/2018"}, {"title": "leverage guards hidedisplay content", "body": "submitting current behavior angular provides option add given route provide array guards run see user access page would nice way leverage guards route figure whether something display expected behavior currently guards come play run actually navigate route nt seem straightforward way leverage logic use outcome figure something displayed use case angular application multiple areas areas protected standard authguard makes sure logged logged navigate couple different areas within area navigate basically build navigation menu based current everything want notably guards available get stuck building navigation menu dynamically based values eventually get route requires extra layer permissions roles access route covered since got adminguard present within guards array however display link trying control nt access something canactivate returns false nt want link display would cool guard directive something available would act routes basically give array guards resolves fine link component matter would display otherwise would nt essentially think encapsulates functionality canactivate property route would extremely helpful minimal reproduction problem instructions stackblitz pull stackblitz click public portal see hits route fine click admin portal see nothing happens route guard returns motivation use case changing behavior better flexability configure route security environment", "num": "25342", "d": "8/2018"}, {"title": "angular app longer hosted domain name service worker survived", "body": "current behavior service worker hangs changing domain name deploy angular app foocom deploy backend api apifoocom django relevant test ensure everything works foocom service worker loads good test backend loads deploy move angular app appfoocom deploy move backend api foocom test ensure everything works appfoocom service worker loads good test backend wo nt load service worker hangs eventhough foocom django site expected behavior service worker needs automatically removed host longer serving angular application example swapped domains swap way make django site load flush browser cache minimal reproduction problem instructions problem django site bugged service worker follow steps reproduce motivation use case changing behavior service worker bring quality experience end user seem many corner cases prevent time environment", "num": "25341", "d": "8/2018"}, {"title": "service worker offline server", "body": "submitting current behavior running build app locally service worker functions exactly expected going offline site still loads even server stopped page still loads running exact build server nginx relevant service worker seems stop last tab site open closed site open one tab open another make second tab offline refresh app cached fact even open tabs go offline refresh go offline refresh works seems even whilst offline tab keeping service worker alive however soon tab using happens briefly whilst reloading service worker self destructs however one tab site open turned offline refreshed requests seem go service worker requests server fail get expected behavior even tab site open refreshing page offline display cached files service worker minimal reproduction problem instructions ca nt provide minimal reproduction works running locally motivation use case changing behavior makes angular service worker function properly serverwhatever causing issue environment", "num": "25340", "d": "8/2018"}, {"title": "candeactivate called null component refresh page", "body": "submitting current behavior candeactivateguard working properly lazyloaded component refresh page placed guard lazy load module works perfectly navigate page however refresh page try navigate says component null issue happens try navigate another lazy loaded page expected behavior guard work lazy loading page refresh minimal reproduction problem instructions pages lazy loaded routes modules lazy loaded page one app route create guard add guard one lazy loaded route module run app navigate main route page refresh page try navigate away see component value null nt refresh page try navigate page lazy loaded see behavior const routes path component canactivate authguard candeactivate candeactivateguard resolve ngmodule declarations imports routermoduleforchild providers candeactivateguard motivation use case changing behavior environment", "num": "25338", "d": "8/2018"}, {"title": "candeactivate called null component refresh page", "body": "candeactivateguard working properly lazyloaded component refresh page placed guard lazy load module works perfectly navigate page however refresh page try navigate says component null issue happens try navigate another lazy loaded page using angular cli node const routes path component canactivate authguard candeactivate candeactivateguard resolve ngmodule declarations imports routermoduleforchild providers candeactivateguard export class main route like path loadchildren data title page fix thank", "num": "25337", "d": "8/2018"}, {"title": "angular upgrade event fired angularjs", "body": "submitting current behavior upgraded directive hidden directive nt receive event expected behavior case angularjs condition changed event triggered minimal reproduction problem instructions add angularjs component injected subscribe event make using put condition initially trigger handler change hide upgraded component motivation use case changing behavior plugins like angularuibootstrap components use events dispose component components nt work properly event fired particular angularuibootstrap dropdown option append dropdown body angularjs container hidden component disposed properly hybrid mode node attached body disposed component nt receive event environment", "num": "25334", "d": "8/2018"}, {"title": "migrating getting build error unexpectedvaluetimported module appmoduleplease use ngamodule annotation", "body": "hello upgrade angular application getting build error unexpectedvaluetimported module appmoduleplease use ngamodule annotation packagejson name portal version license refer xcell software inc license agreement repository dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularupgrade typesnode bootstrap chartjs clipboardjs corejs css filesaver fontawesome jquery moment ngxbootstrap ngxmonacoeditor rxjs tether webanimationsjs zonejs devdependencies typeschai typesjquery typesmocha typessinon aspnetwebpack awesometypescriptloader babelcore babelloader babelpresetenv chai commander compressionwebpackplugin copywebpackplugin cssloader csvwriter exposeloader extracttextwebpackplugin fileloader karma karmachai karmachromelauncher karmahtmlfilereporter karmajquery karmamocha karmareadjson karmascsspreprocessor karmasinon karmasourcemaploader karmaspecreporter karmatypescript karmawebpack mocha mochatypescript nodesass pkginfo rawloader reflectmetadata sassloader sinon sourcemaploader styleloader svgurlloader tostringloader tsloader typescript urlloader webpack webpackexternalsplugin webpackhotmiddleware webpackmerge scripts webpackvendor node nodemoduleswebpackbinwebpackjs config webpackconfigvendorjs webpackvendorprod node nodemoduleswebpackbinwebpackjs config webpackconfigvendorjs envprod optimizeminimize webpackwatch webpack watch color test karma start clientappkarmaconfjs singlerun exportnpmpackageinfo node clientappnpmpackageinfoexporterjs exportednpmpackageinfo tsc tsc p clientapp appmodulets import ngmodule angularcore import datepipe angularcommon import currencypipe angularcommon import browsermodule angularplatformbrowser import routermodule router angularrouter import formsmodule reactiveformsmodule angularforms import httpmodule http xhrbackend requestoptions angular import chartsmodule import alertcomponent componentsdirectivesalertcomponent import appcomponent componentsappappcomponent import awsaccountmaintenancecomponent componentsadminawsaccountmaintenancecomponent import bottomnavbarcomponent componentsappbottomnavbarcomponent import blogmaintenancecomponent componentsadminblogmaintenancecomponent import confirmcomponent componentsdirectivesconfirmcomponent import onlynumber componentsdirectivesonlynumbercomponent import dashboardcomponent componentshomedashboardcomponent import dashboardsectionmaintenancecomponent componentsadmindashboardsectionmaintenancecomponent import fileselectdirective filedropdirective import gridbudgetmaintenancecomponent componentsadmingridbudgetmaintenancecomponent import griddashboardcomponent componentshomegriddashboardcomponent import gridmaintenancecomponent componentsadmingridmaintenancecomponent import gridclusterstatuscomponent componentssharedcomponentgridclustergridclusterstatuscomponent import gridclusterbudgetlistcomponent componentssharedcomponentgridclustergridclusterbudgetlistcomponent import loginpopupcomponent componentsdirectivesloginpopupcomponent import modalcomponent componentsdirectivesmodalcomponent import typetosearchcomponent componentsdirectivestypetosearchcomponent import organizationmaintenance componentsadminorganizationmaintenancecomponent import organizationmaintenanceservice componentsservicesorganizationmaintenanceservice import passwordcomponent componentsdirectivespasswordcomponent import gridoperatormaintenancecomponent componentsadmingridoperatormaintenancecomponent import taskrunnermaintenanceservice componentsservicestaskrunnermaintenanceservice import taskrunnermaintenancecomponent componentsadmintaskrunnermaintenancecomponent import topnavbarcomponent componentsapptopnavbarcomponent import usermaintenancecomponent componentsadminusermaintenancecomponent import usermaintenanceservice componentsservicesusermaintenanceservice import launchappmaintenancecomponent componentsadminlaunchappmaintenancecomponent import authguard componentsguardsauthguard import adminservice componentsservicesadminservice import alertservice componentsservicesalertservice import authenticationservice componentsservicesauthenticationservice import browserservice componentsservicesbrowserservice import errorservice componentsserviceserrorservice import forgotpasswordcomponent componentsloginforgotpasswordcomponent import forgotpasswordconfirmationcomponent componentsloginforgotpasswordconfirmationcomponent import userservice componentsservicesuserservice import csvservice componentsservicescsvservice import navigationlistservice componentsservicesnavigationlistservice import httpservice componentsservices import searchservice componentsservicessearchservice import mailservice componentsservicesmailservice import modalservice componentsservicesmodalservice import workspaceservice componentsservicesworkspaceservice import loginpopupservice componentsservicesloginpopupservice import gridclusterservice componentsservicesgridclusterservice import gridclusteroperatorservice componentsservicesgridclusteroperatorservice import gridmaintenanceservice componentsservicesgridmaintenanceservice import logincomponent componentsloginlogincomponent import registercomponent componentsregisterregistercomponent import codexapplaunchercomponent componentshomecodexapplaunchercomponent import proxyapplaunchercompontent componentshomeproxyapplaunchercomponent import shinyappservice componentsservicesshinyappservice import rconnectservice componentsservicesrconnectservice import sessionservice componentsservicessessionservice import launchapplicationservice componentsserviceslaunchapplicationservice import import userprofilecomponent componentshomeuserprofilecomponent import shinyappcomponent componentsadminshinyappcomponent import billingcomponent componentsadminbillingcomponent import navigationlist componentsadminnavigationlistcomponent import workspacecomponent componentssharedcomponentworkspaceworkspacecomponent import workspaceinfocomponent componentssharedcomponentworkspaceworkspaceinfocomponent import workspacewatchcomponent componentssharedcomponentworkspaceworkspacewatchcomponent import workspaceuploadcomponent componentssharedcomponentworkspaceworkspaceuploadcomponent import workspaceuploadservice componentsservicesworkspaceuploadservice import filelinkcomponent componentssharedcomponentworkspacefilelinkcomponent import inputdebouncedirective componentsdirectivesinputdebouncedirective import mousewheeldirective componentsdirectivesmousewheeldirective import refreshsessiondirective componentsdirectivesrefreshsessiondirective import tokenservice componentsservicestokenservice import dashboardcomponentservice componentsservicesdashboardcomponentservice import griddashboardcomponentservice componentsservicesgriddashboardcomponentservice import toggleswitchcomponent componentssharedcomponenttoggleswitchcomponent import healthstatuscomponent componentssharedcomponenthealthstatuscomponent import truncatepipe componentspipestruncate import validationservice componentsservicesvalidationservice import focusdirective componentsdirectivesfocusdirective import modalmodule ngxbootstrapmodal import monacoeditormodule ngxmonacoeditor import utcdatepipe componentsservicesutcdatepipe import customcolorpickercomponent componentssharedcomponentcustomcolorpickercomponent import colorpickermodule ngmodule bootstrap appcomponent declarations alertcomponent appcomponent awsaccountmaintenancecomponent blogmaintenancecomponent bottomnavbarcomponent confirmcomponent onlynumber dashboardcomponent dashboardsectionmaintenancecomponent filedropdirective fileselectdirective forgotpasswordcomponent forgotpasswordconfirmationcomponent logincomponent loginpopupcomponent gridclusterstatuscomponent gridbudgetmaintenancecomponent gridclusterbudgetlistcomponent griddashboardcomponent gridmaintenancecomponent modalcomponent organizationmaintenance registercomponent taskrunnermaintenancecomponent topnavbarcomponent typetosearchcomponent passwordcomponent navigationlist workspacecomponent workspaceuploadcomponent workspacewatchcomponent filelinkcomponent usermaintenancecomponent userprofilecomponent launchappmaintenancecomponent shinyappcomponent billingcomponent gridoperatormaintenancecomponent mousewheeldirective inputdebouncedirective truncatepipe focusdirective codexapplaunchercomponent proxyapplaunchercompontent refreshsessiondirective workspaceinfocomponent toggleswitchcomponent healthstatuscomponent customcolorpickercomponent imports browsermodule httpmodule routermoduleforroot path redirectto dashboard pathmatch full path dashboard component dashboardcomponent canactivate authguard path login component logincomponent path forgotpassword component forgotpasswordcomponent path forgotpasswordconfirmation userid component forgotpasswordconfirmationcomponent path register component registercomponent path organizationmaintenance component organizationmaintenance canactivate authguard path usermaintenance component usermaintenancecomponent canactivate authguard path blogmaintenance component blogmaintenancecomponent canactivate authguard path launchappmaintenance component launchappmaintenancecomponent canactivate authguard path griddashboard component griddashboardcomponent canactivate authguard path gridmaintenance component gridmaintenancecomponent canactivate authguard path gridoperatormaintenance component gridoperatormaintenancecomponent canactivate authguard path taskrunnermaintenance component taskrunnermaintenancecomponent canactivate authguard path dashboardsectionmaintenance component dashboardsectionmaintenancecomponent canactivate authguard path awsaccountmaintenance component awsaccountmaintenancecomponent canactivate authguard path gridbudgetmaintenance component gridbudgetmaintenancecomponent canactivate authguard path userprofile component userprofilecomponent canactivate authguard path shinyapp component shinyappcomponent canactivate authguard path billing component billingcomponent canactivate authguard path workspacewatch id component workspacewatchcomponent path codexapplauncher launchapplicationuuid component codexapplaunchercomponent canactivate authguard path applauncher launchapplicationuuid component proxyapplaunchercompontent canactivate authguard path redirectto dashboard formsmodule reactiveformsmodule chartsmodule modalmoduleforroot colorpickermodule monacoeditormodule providers provide httpservice usefactory backend xhrbackend defaultoptions requestoptions alertservice alertservice router router http loginpopupservice loginpopupservice tokenservice tokenservice gt return new httpservice backend defaultoptions alertservice router loginpopupservice tokenservice deps xhrbackend requestoptions alertservice router http loginpopupservice tokenservice authguard alertservice authenticationservice browserservice currencypipe datepipe utcdatepipe userservice csvservice adminservice errorservice loginpopupservice modalservice navigationlistservice mailservice validationservice searchservice gridclusterservice gridclusteroperatorservice gridmaintenanceservice shinyappservice rconnectservice sessionservice launchapplicationservice workspaceservice workspaceuploadservice tokenservice organizationmaintenanceservice taskrunnermaintenanceservice usermaintenanceservice dashboardcomponentservice griddashboardcomponentservice export class appmodule", "num": "25333", "d": "8/2018"}, {"title": "select multiple mat chips matchiplist without clicking back", "body": "submitting current behavior selecting option user click box click back see options order select another option user select another option without clicking using keyboard using mouse expected behavior user able select multiple options without click box clicking back minimal reproduction problem instructions current behavior reproduced motivation use case changing behavior need implement current project environment", "num": "25332", "d": "8/2018"}, {"title": "creating angular build refreshing shows found", "body": "angular creating app using command running build apache server build works fine refreshing shows found also creating htaccess file project root folder rewrite htaccess file", "num": "25324", "d": "8/2018"}, {"title": "browserplatformlocation pushstate replacestate use incorrect origin", "body": "submitting current behavior consider setup base url indexhtml different location document accessed see example angular calls pushstate replacestate routing server relative url ie starting without host domain ie origin case browser implementation historypushstate historyreplacestate construct absolute url using domain base tag usecase match window domain operation fails expected behavior angular use absolute urls pushstate replacestate use window origin document origin navigation happens window url document url minimal reproduction problem instructions configure indexhtml like html expose appbasehref like access application like motivation use case changing behavior motivation suppose custom domain efficient cdn front domain would like host heavy application binaries cdn desired hostname use domain navigation purposes like point url cdn entry point expose context root app via appbaseurl token angular preserve origin used navigate app environment", "num": "25323", "d": "8/2018"}, {"title": "routerevent url property ultimately undefined subscribed navigationend event", "body": "submitting current behavior retrieving router url subscribing navigationend routerevent event called multiple times ultimately leaving url parameter undefined console screenshot expected behavior url parameter reflect current route url instead undefined minimal reproduction problem instructions create new angular app cli routing two components eg sidebar amp posts main app component html contain reference sidebar routeroutlet tag routes setup default path goes posts component appcomponenthtml approutingmodulets const routes routes path component postscomponent sidebar component import router amp navigationend subscribe navigationend event retrieve current url sidebarcomponentts import component oninit angularcore import router navigationend angularrouter component selector appsidebar templateurl sidebarcomponenthtml styleurls sidebarcomponentscss export class sidebarcomponent implements oninit currenturl string constructor private router router routereventssubscribe navigationend gt thiscurrenturl url consolelog url ngoninit environment browser x chrome desktop version official build x firefox version tooling issues node version platform windows", "num": "25322", "d": "8/2018"}, {"title": "docs improve angular tutorial remove obsolete code", "body": "submitting current behavior binding annotation property hero herodetailcomponentts angular tutorial routes expected behavior binding hero property longer needed hero fetched hero service id binding annotation herodetailcomponentts obsolet inject annotation property hero anymore maybe add text explaining minimal reproduction problem instructions motivation use case changing behavior make tutorial better environment", "num": "25320", "d": "8/2018"}, {"title": "animation const expression spread operator working production build", "body": "submitting current behavior variables taken used function development seem work ok problem second const nt work silently production build spread operator used object literal seems reason replace code make work minimal reproduction problem instructions demo nt actually show problem stackblitz seems using aot build environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "25317", "d": "8/2018"}, {"title": "authentication", "body": "submitting current behavior box auth google facebook amazon azure etc expected behavior would nice see angularauth minimal reproduction problem instructions na motivation use case changing behavior tend look proper way angular help us authentication know doit interceptors authenticate set headers would really like see box way something like amazon auth azure auth facebook etc know set using angular comfortable great guys provide standard make easy like everything else angular", "num": "25315", "d": "8/2018"}, {"title": "router outlet mounts wrong component using route reuse strategy router outlet instantiated time route got activated", "body": "submitting current behavior using custom route reuse strategy router outlet instantiated time route got activated ie inside ngif previous activated component mounted expected behavior component currently activated route mounted minimal reproduction problem instructions editor url app url motivation use case changing behavior toolbar tool detail panel display currently activated tool component named router outlet clicking tool show tool detail component navigating tool auxiliary route want tool component destroyed switching tools use custom route reuse strategy also toggling already activated tool removes router outlet dom environment", "num": "25313", "d": "8/2018"}, {"title": "simple way reload route running guards resolvers", "body": "submitting seen different strategies reloading component running resolvers seem rather complicated unintuitive simple routerreload would simplest solution opinion run resolvers regardless runguardsandresolvers onsameurlnavigation etc eq nt want set runguardsandresolvers always onsameurlnavigation reload use case refresh button user use force refresh data page recent data server user clicks button want data reloaded using resolver defined component", "num": "25311", "d": "8/2018"}, {"title": "add remove ngonchanges ngforof breaking change changelog", "body": "hi quick note future reference removing breaking change directive inheriting implements calling parent breaks guess nothing right future reference thanks", "num": "25310", "d": "8/2018"}, {"title": "starting new application resulted vulnerabilities", "body": "whenever starting new application following command ng new vulnerabilities high priority prompt asking fix using npm audit fix also failed using force end question permanent way fix issue even old projects facing reported github", "num": "25308", "d": "8/2018"}, {"title": "serviceworker updating app", "body": "submitting current behavior using production fine notice updating app ngswstate page content ngsw debug info driver state existingclientsonly degraded due failed initialization hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork latest manifest hash last update check version clients idle task queue last update tick last update run task queue debug log error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest ignoring invalid request onlyifcached set sameorigin mode driverfetch cache onlyifcached mode nocors error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest error hash mismatch cachebustedfetchfromnetwork expected got cache busting error hash mismatch cachebustedfetchfromnetwork expected got cache busting prefetchassetgroupcachebustedfetchfromnetwork error occurred updating manifest expected behavior update app new version minimal reproduction problem instructions idea working environment", "num": "25307", "d": "8/2018"}, {"title": "", "body": "submitting current behavior event binding put console log events nt see anything happening could nt find anything documentation regarding usage events ca nt confirm whether bug expected behaviors expected behavior simply missing part documentation like see documentation update usage bug expected behavior print console events occurs navigating route minimal reproduction problem instructions open console log click link see component shows text nothing prints console motivation use case changing behavior nice listen events something also clear documentation usage events would help lot environment", "num": "25305", "d": "8/2018"}, {"title": "could find module angulardevkitbuildangular", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25304", "d": "8/2018"}, {"title": "module found typeerror read property contextinfo undefined", "body": "getting error updating angular cli webpack using ignoreplugin ignore lazy loaded module", "num": "25303", "d": "8/2018"}, {"title": "route resolve async call used app hosted iframe ms edge", "body": "submitting current behavior adding resolver fetching data via httpclient route breaks browser back button behavior ms edge angular app hosted iframe route navigate route resolver choice browser back redirects parent window iframe host last page angular app iframe loaded expected behavior back work edge way like works latest chrome firefox safari ie tested minimal reproduction problem instructions order reproduce behaviour created stackblitz example iframe pointing app deployed firebase hosting could nt point stackblitz stackblitz deployed app pushed github repo whole app one file comment resolve part routes definition return sync result ex back button work normally also everything works perfect iframe motivation use case changing behavior project adding new features iframe also know many companies way order avoid conflicts old new parts existing app would like support modern browsers environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx x edge version tooling issues node version platform mac virtualbox windows", "num": "25302", "d": "8/2018"}, {"title": "ivy incorrectly checks existence", "body": "submitting current behavior kara following bit code ivy checks view accessing used possible view nodes objects however refactoring array index also exists propertyindex hence check inaccurate expected behavior accurate way determining view vs container", "num": "25298", "d": "8/2018"}, {"title": "tooltip click bug", "body": "submitting current behavior desktop tooltip disappears clicking part chart tooltip activated eg pie chart slice afterwards longer appears untill pointer reenters part chart expected behavior desktop tooltip disappear click event minimal reproduction problem instructions go move mouse bar activating tooltip click bar tooltip disappears motivation use case changing behavior believe behavior intended addressed environment browser x chrome desktop version tooling issues node version platform windows", "num": "25296", "d": "8/2018"}, {"title": "ngfor stopped working ie", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25290", "d": "8/2018"}, {"title": "ca nt resolve zonejsdistzone", "body": "getting error error srcpolyfillsts module found error ca nt resolve zonejsdistzone c projectsmyprojectsrc", "num": "25288", "d": "8/2018"}, {"title": "production build stuck percentage", "body": "submitting current behavior ng build prod aotfalse global angular cli version greater local version local angular cli version used disable warning use ng config g cliwarningsversionmismatch false date hash time chunk polyfills kb initial rendered chunk main mb initial rendered chunk styles kb initial rendered chunk vendor mb initial rendered chunk inline kb entry rendered ng build prod global angular cli version greater local version local angular cli version used disable warning use ng config g cliwarningsversionmismatch false chunk asset optimization production build aot taking much time wait minutes still completed stuck please help deploy build server aotfalse parameter environment", "num": "25286", "d": "8/2018"}, {"title": "angular converts schemaorg properties lower case loading component via routeroutlet", "body": "first issue please let know anything missing submitting current behavior angular trying use schemaorg properties via rdfa microdata component selectors attribute values get converted lowercase example want markup product write code gets rendered following problem occurs loading component via expected behavior attribute values stay uppercase minimal reproduction problem instructions create app routing component behind route create configure route component change component selector schemaorg definition example open route look inspector see rendered source code motivation use case changing behavior altough google structured data testing tool recognises schema types linters knowledge schemas handled way environment", "num": "25285", "d": "8/2018"}, {"title": "service worker assets group installmode lazy updatemode lazy nt work expected", "body": "submitting current behavior installmode lazy updatemode lazy configurations service workers downloads assets expected behavior configuration installmode lazy expected service worker caches requests assets applications requests behavior described docs updatemode lazy expected service worker update cached files whole files minimal reproduction problem instructions configure assets way build run production service worker caches assets motivation use case changing behavior environment", "num": "25283", "d": "8/2018"}, {"title": "angularanimations fallback css keyframes generate prefixed properties correctly", "body": "submitting current behavior creating angular animation webkit prefixed property property incorrectly converted camelcase correct property string example angular animation generated output converted css keyframe animation expected behavior converted without starting property work exist minimal reproduction problem instructions find simple reproduction problem motivation use case changing behavior makes sense prefixed properties would supported css fallback environment edited add reproduction stackblitz", "num": "25282", "d": "8/2018"}, {"title": "request allow use services custom validators", "body": "submitting current behavior defining validators use plain functions validators often async validators need use services like right use define validator component difficult reactive form building interface similar could used make possible use service new one interface pass service expected behavior injectable export class mycustomvalidatorservice implements validator constructor private apiservice apiservice validate c abstractcontrol validationerrors null", "num": "25281", "d": "8/2018"}, {"title": "formarray valuechanges triggering wrongly ie", "body": "using form arrays form template user saving beneficiaries get beneficiaries service build form dynamically based many beneficiaries constructor code oninit method get number beneficiaries build form set values works fine ie valuechanges formarray triggered form building happens chrome firefox dont issue constructor thispageform thisfbgroup myforms thisfbarray ngoninit count build forms thisbuildforms data build set values ie basically pushing new forms myforms thispageformmyformsvaluechangessubscribe gt thisemitteremit changes code works fine chrome ff ie emit happens load ie seeing emit multiple times special code written ie wrap valuechanges inside settimeout timer value works fine ie workaround sure wrong ie", "num": "25280", "d": "8/2018"}, {"title": "tour heroes part herodetailcomponent decorator input useless", "body": "submitting current behavior tutorial part http herodetailcomponent class property hero decorator input expected behavior tutorial part http herodetailcomponent class property hero decorator input herodetailcomponent loads hero init property hero input parameter minimal reproduction problem instructions impact runtime motivation use case changing behavior new user may confused environment", "num": "25279", "d": "8/2018"}, {"title": "upon dev compilation local machine large project browser becomes unresponsive", "body": "submitting current behavior upon dev compilation browser freezes loading page chrome expected behavior upon dev compilation browser works fine minimal reproduction problem instructions create huge angular application compile motivation use case changing behavior ca nt browse internet compilation going environment windows node last version npm angular browser x chrome desktop version last tooling issues node version xx platform others", "num": "25278", "d": "8/2018"}, {"title": "minlength validator returns minlength error key", "body": "submitting current behavior validation false angular returns error key lower case expected behavior return function name creating custom form creator getting error message using code possible due case", "num": "25277", "d": "8/2018"}, {"title": "adding routes dynamically approutes appmodulets", "body": "hello developing web application like cms admin must able create new categories example web page following categories men tshirts kids shoes etc admin wants create new category called women mind following dynamically create new route called women want add app routes appmodulets appmodulets import appcomponent appcomponent import maincomponent mainmaincomponent import formsmodule angularforms import httpclientmodule angularcommon import routermodule routes angularrouter import logincomponent loginlogincomponent import signupcomponent signupsignupcomponent import tempcomponent temptempcomponent import dynamiccomponent dynamicdynamiccomponent const approutes routes path component maincomponent path login component logincomponent data title login path signup component signupcomponent data title sign path temp component tempcomponent ngmodule declarations appcomponent maincomponent logincomponent signupcomponent tempcomponent dynamiccomponent imports browsermodule formsmodule httpclientmodule routermoduleforroot approutes enabletracing true lt debugging purposes entrycomponents dynamiccomponent added providers bootstrap appcomponent export class appmodule used thisrouterconfigpush thisrouterresetconfig worked dynamically ie added temporarily close application restarted dynamically added route present anymore thinking storing dynamically added routes database reload whenever restart app unsure whether good practice thanks advance", "num": "25276", "d": "8/2018"}, {"title": "css scss less", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment variablesminxiextend need import every component file annoying use extend userselectnone style generated using method good", "num": "25274", "d": "8/2018"}, {"title": "identifier functionname defined passing function input causing intellisense errors compiles fine", "body": "submitting current behavior using component requires function passed input achieve creating property component function typing ngoninit bind method component works throwing intellisense error component html identifier functionname defined component declaration template variable declarations element references contain member expected behavior since app compiles fine logic works intellisense nt flag error stops intellisense working page show stopper pain ass minimal reproduction problem instructions use component input accepts function something like another component want use component pass function color somefunction calling component create local member type function somefunction function ngoninit thissomefunction thisdeterminecolorbind determinecolor value number return fff components html color somefunction intellisense error application still compiles fine method works motivation use case changing behavior avoid intellisense breaking rest page environment", "num": "25270", "d": "8/2018"}, {"title": "event handler return value", "body": "following link html works however following link angular template angular uses last statement handler return value behavior undocumented inconsistent html surprising suspect usually unintentional would consider bug want prevent default browser behavior", "num": "25269", "d": "8/2018"}, {"title": "service worker critical lib", "body": "submitting current behavior use critical lib use break angular service worker using critical logs network panel using critical logs network panel may know critical handle css script use replace css relative lines indexhtml using like preventing sw work issue go offline refresh nt work nothings seems cached sw expected behavior using critical sw ok minimal reproduction problem instructions use repo order issue use following command make app build prod apply critical script order classic behavior use following command make app build prod motivation use case changing behavior working stuff environment browser x chrome desktop version bits x chrome android version tooling issues node version platform macos android", "num": "25267", "d": "8/2018"}, {"title": "base href stops working hybrid angularjs route", "body": "submitting regression behavior used work stopped working new release x bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior set like completing hybrid angularjs angularroute angular routerlink angularjs href stop working open click go without error click go without error contains hybrid angularjs app click angular routerlink error get back click angularjs href two errors expected behavior error minimal reproduction problem instructions run script like open something like live server vsc review error locally motivation use case changing behavior hybrid app also work correctly environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "25266", "d": "8/2018"}, {"title": "angular css variables shared components unintentionally", "body": "submitting current behavior navigate two components component first loaded share css variables gets componentcss class change style component route reload page issue disappears navigate replicate time project intetional disabled css variables sharing components navigating fx mainblock component x also mainblock component expected behavior component default anyway use designated css file componentts file minimal reproduction problem instructions generate two different components ng g c pagex ng g c pagey create button class mainblock html components style mainblock css file pagex set routing pages use angularrouter set buttons route pagex x x load pagex url setup click button routes view pagey see button pagey class variable mainblock width button pagex reload pagey pagey button styled expected environment", "num": "25265", "d": "8/2018"}, {"title": "error eventservice primeng scheduler", "body": "trying use primeng scheduler following angular version trying create eventservice scheduler following code system throws following error find name httpclient export class eventservice constructor private httpclient getevents return get showcaseresourcesdatascheduleeventsjson topromise res gt import radiobuttonmodule keyfiltermodule dialogmodule dropdownmodule inputtextmodule schedulemodule tabviewmodule messagesmodule primengprimeng import httpclientmodule angularcommon import httpmodule angular import injectable angularcore angular version angular cli node angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router found piece code primeng website looks like code implemented angular http depreciated angular browser chrome reproduction try use http primeng scheduler node version platform windows angular working expected throw light help highly appreciated", "num": "25264", "d": "8/2018"}, {"title": "canload guard taking first value", "body": "submitting current behavior guard opposed guard taking value listens stream completion thus freezing navigation thing occurs expected behavior take first value add behavior docs minimal reproduction problem instructions motivation use case changing behavior current behavior unobvious environment", "num": "25262", "d": "8/2018"}, {"title": "ng serve open gives error", "body": "submitting current behavior newly installed ng serve open gives following error date hash time chunk main mainjs mainjsmap main kb initial rendered chunk polyfills polyfillsjs polyfillsjsmap polyfills kb initial r endered chunk runtime runtimejs runtimejsmap runtime kb entry rendered chunk styles stylesjs stylesjsmap styles kb initial rendered chunk vendor vendorjs vendorjsmap vendor mb initial rendered error ansihtml module parse failed unexpected character may need appropriate loader handle file type binsh basedir dirname echo sed e g wdm failed compile expected behavior app run browser instead showing get minimal reproduction problem instructions install new angular app versions follows node npm motivation use case changing behavior environment package version angulardevkitarchitect angulardevkitcore angulardevkitschematics schematicsangular schematicsupdate rxjs typescript browser chrome desktop version tooling issues node version xx platform others", "num": "25261", "d": "8/2018"}, {"title": "multiple angular apps routing", "body": "hello world submitting current behavior creating angular application multiple subapps commande ng new mainapp cd mainapp ng generate application ng generate application angular create two sub application folder projects motivation use case changing behavior sidenav header page main menu every sub application object discribe sidenav items want able update sidenav user click button go appx", "num": "25260", "d": "8/2018"}, {"title": "build aot mode upgrade", "body": "submitting current behavior build aot mode build made properly dev prod mode aot set false dependency ngtoolswebpack included expected behavior build made expected tooling issues node version platform linux others const aotloaders test ts loaders ngtoolswebpack exclude testts const jitloaders test ts loaders awesometypescriptloader exclude pathjoin dirname nodemodules const aotplugin new ngtoolswebpackangularcompilerplugin tsconfigpath pathjoin dirname tsconfigaotjson entrymodule srcappappmodule appmodule loaders added like", "num": "25259", "d": "8/2018"}, {"title": "router redirecting lazy child routes parent route ignores redirects", "body": "submitting current behavior setup app module lazily loaded child module app module also route default routes redirected child module single valid route defined ones redirected app root one navigates invalid route angular router correctly routes stops redirecting default expected behavior would expect angular route lazynotvalid default minimal reproduction problem instructions clicking bad link show default motivation use case changing behavior like invalid routes child module redirect back main page application environment", "num": "25254", "d": "8/2018"}, {"title": "resolvestart event activatestart events incosistent", "body": "submitting current behavior enabletracing routing activationstartend childactivationstartend events emitted per route level resolverstartend event emitted levels inconsistent might make wonder routing setup actually expected behavior resolvestartend also emitted per route level minimal reproduction problem instructions enable tracing open motivation use case changing behavior current behavior inconsistent", "num": "25253", "d": "8/2018"}, {"title": "opened error", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "25250", "d": "8/2018"}, {"title": "input properties recognized angularcli built component library extending component using barrrels", "body": "submitting current behavior base component child components child component overriding buildvalidators method components exist component library generated angularcli app use test library import module pathing projects everything ok however build project library import module dist folder app longer recognize input properties child component extended base component get following try build app aot errors show ide also see every input comes base model recognized environment", "num": "25249", "d": "8/2018"}, {"title": "non digest warning inside angular code thrown buildserve", "body": "submitting current behavior build code ng servebuild every configuration compiler throw warning inside angular code expected behavior warning thrown problem inside code understandable warning pointing code minimal reproduction problem instructions ca nt reproduce kind problem motivation use case changing behavior nt likes warnings like understand comes environment", "num": "25246", "d": "8/2018"}, {"title": "ngcontent bugging party functionality captcha etc", "body": "x bug report current behavior use several party libraries like kendo charts google maps google captcha ngcontent would see several random malfuctions like problems rendering google map tabs problems svg rendering charts doesnt work check stackblitz please please check included stackblitz expected behavior work correctly behavior ngcontent minimal reproduction problem instructions stackblitz", "num": "25245", "d": "8/2018"}, {"title": "dynamically creating formgroup", "body": "submitting regression behavior used work stopped working new release x bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior template obvezno polje createformgroup record record formgroup gt const formbuilder new formbuilder return formbuildergroup recvalue recordvalue validatorscompose validatorsrequired validatorsminlength validatorsmaxlength recnote recordnote validatorscompose validatorsrequired validatorsminlength validatorsmaxlength error expected behavior formgroup creating fly stored local variable recordform ngform motivation use case changing behavior line table editing form validation environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack others", "num": "25244", "d": "8/2018"}, {"title": "angular", "body": "developing application using angualr suppose one existing package github without commit nodemodules folder wanted clone package clone local server packagejson installing nodemodules folder dependency packagejson command install dependency packagejson please help asap", "num": "25243", "d": "8/2018"}, {"title": "adding html tags target translation nt work anymore", "body": "submitting current behavior angular html tags xliff tranlation file rendered html way place tags inside translated part generating xliff file reusing generated tags eg translation sometimes bad translated language needs tags nt source eg spanish good link fits topic english expected behavior way give translaters option put links line breaks bold text translation even though nt tags original html content minimal reproduction problem instructions works always desired html hello world output file messagesxlf translation file messagesdexlf let try add german translation let assume want add line break german tranlation longer text leave html untouched angular able import xlif file translation tool lokaliseco add german translation exporting got escaped messagesdexlf like angular rendered line break anyway angular shows escaped simple text attempt unescape messagesdexlf ng server error attempt use ng server error attempt use ng server error motivation use case changing behavior mentioned would like option use html certain languages source html mark something add links etc environment", "num": "25242", "d": "8/2018"}, {"title": "propertybindingtype exported angularcompiler bundle", "body": "codelyzer want use enum package exported production version source code bundles src directories contain exported lt versions submitting current behavior expected behavior property exists variable minimal reproduction problem instructions npm pack angularcompiler tar xzvf cd package grep expression js files grep rnw includejs e propertybindingtype file imports uses nowhere exported environment", "num": "25241", "d": "8/2018"}, {"title": "able use string containg dots search formgroup", "body": "current behavior variable string lets call key instantiate new form group add already existing form group following key trying find created form group key working even new form group attached already existing form group following key formgroupvar null expected behavior know caused dot notation splits objects inside abstract control structure would like search like would simple use something like would expect using get function string would search given string split parts make much sense minimal reproduction problem instructions motivation use case changing behavior able get abstract control form group key string may contain dots environment", "num": "25239", "d": "8/2018"}, {"body": "need return array object observable reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "ca nt post stackoverflow wo nt let says accepting account tried various different emails must detecting ip address", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "martibenj validator based spec email address understand email address bit general thing personal email address gmailcom example inside private networks use addresses still spec create custom validator wraps builtin one extend rules", "d": "8/2018"}, {"body": "mlcmlapis answer spoton", "d": "8/2018"}, {"body": "run root project first going folder running etc", "d": "8/2018"}, {"body": "tnvpandian think something angular responsible btw probably convert pdf encoding format server first ie", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "links groups today correct complete results search nt match phrases punctuation search keyword aio search matches pages nt contain search keyword enable literal search phrases improve search index animations package add inherited members key terms search recognizing results provide cues deprecated apis highlight search results page reduce steps execute search enable tab search browser address bar ux problem interaction site search field browser search field", "d": "8/2018"}, {"body": "allowing literal expressions quotation marks would one step alleviating", "d": "8/2018"}, {"body": "igorminar transferred consolidation presented yesterday issue per suggestion open issue work set single designeffort", "d": "8/2018"}, {"body": "pkozlowskiopensource observable actually emits whenever value recalculated necessarily changes true call value times get events observable name bit misleading intended work need new values add operator said nt seem necessary recalculate value validator changes technically need recalculate validation status perhaps would way forward though breaking", "d": "8/2018"}, {"body": "might good idea allow using components like", "d": "8/2018"}, {"body": "dawidgarus certainly would help", "d": "8/2018"}, {"body": "brgrz workaround ugly something like wrap component template ngtemplate render next host element detach host element", "d": "8/2018"}, {"body": "brgrz thnx opening issue good summary issues current model painfully aware limitations hostless components problems one questions banging head happen hostless component bindings event listeners directives let consider example usage introduce hostless components must able answer following questions happen handler happen tooltip directive questions got precise definitive answers current model obviously issues need careful design planning ex relation custom elements would like better understand replace option different using attribute selector practical issues encountering reallife example stackblitz would help get discussion going dawidgarus proposal suffers issues regarding event handlers directives described short much aware general problem lacking detailed description examples things causing grief practice please comment stackblitz need come design works correct selfconsistent", "d": "8/2018"}, {"body": "pkozlowskiopensource nt think issues ngcontainer approach ca nt bind events vanilla ngcontainer still would nt able ngcontainer component thing directives create directive ngcontainer still able edit every binding directive work way works ngcontainer intents purposes nt even know component well inject directive ofc", "d": "8/2018"}, {"body": "pkozlowskiopensource issue manifests use layout components called master pages various router outlets layout components also flex grid containers display grid display flex gets worse nesting components introduction extra elements level components level children may also components messes css styles applied correctly increases coupling markup css target elements either names apply additional classes happens many css frameworks instance zurb foundation using plain css display flex display grid features attribute directives solve difference custom element rendered placeholder div attribute directive issue type element custom div rather existance element one workaround use besides removehost hack move certain classes component host like import component oninit hostbinding angularcore component selector projlayout templateurl layoutcomponenthtml styleurls layoutcomponentcss export class layoutcomponent implements oninit markup layout component looks like would like better container markup like course issue extra useless component element rendered around using hostattribute solution actually use host element container meaning goes unused hth", "d": "8/2018"}, {"body": "dawidgarus currently using hostattribute workaround ideal nt bring styling component class however one way solving thanks stackblitz suggestion", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "trotyl thought pain frontend devs designers quite time know official angular solutionfeature coming anytime soon", "d": "8/2018"}, {"body": "thnx trotyl going close duplicate brgrz could please add usecase know official angular solutionfeature coming anytime soon would solid design first problems like directives outputs outlined css encapsulation discussed issues need evaluated sorted first anyway let centralise discussion", "d": "8/2018"}, {"body": "afaik referer origin header added browser", "d": "8/2018"}, {"body": "control headers need always origin header added request manklu mailto notifications githubcom sent friday august angularangular angular noreplygithubcom cc muzzammil hussainitlhr muzzammilhussain pgcedupk author author noreplygithubcom subject angularangular http client angular difference headers different browsers afaik referer origin header added browser receiving authored thread reply email directly view github mute thread", "d": "8/2018"}, {"body": "header added browser something angular control closing support request", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "problem library please report issue", "d": "8/2018"}, {"body": "use custom component error comes", "d": "8/2018"}, {"body": "kumaresansubramani please provide minimal reproduce scenario without dependencies need angularonly stackblitz able confirm issue framework", "d": "8/2018"}, {"body": "okay pkozlowskiopensource", "d": "8/2018"}, {"body": "kumaresansubramani form control powered controlvalueaccessor difference builtin custom normal library code", "d": "8/2018"}, {"body": "trotyl okay understand library code make component pristine state programmaticaly value changed please prvide idea import getvalue setvalue isnullorundefined angular form base module var formbase class function function formbase formbaseprototypepropagatechange function return formbaseprototypepropagatetouch function return tried like formbaseprototypengoninit function var self var origfunc thiscontrolmarkaspristine thiscontrolmarkaspristine function origfuncapply arguments consolelog marked pristine end formbaseprototypelocalchange function e var value echecked undefined evalue echecked thispropagatechange undefined amp amp value undefined update angular control thispropagatechange value formbaseprototyperegisteronchange function registerfunction thispropagatechange registerfunction formbaseprototyperegisterontouched function registerfunction thispropagatetouch registerfunction formbaseprototypetwowaysetter function newval prop var oldval getvalue prop thisproperties var ele thisinputelement thiselement oldval newval amp amp elevalue undefined elevalue return thissavechanges prop newval oldval setvalue prop isnullorundefined newval null newval thisproperties getvalue prop change emit newval formbaseprototypengafterviewinit function var used settimeout template binding refer link settimeout function istanbul ignore else typeof window undefined thisappendto thiselement var ele thisinputelement thiselement eleaddeventlistener focus thisngonfocusbind eleaddeventlistener blur thisngonblurbind formbaseprototypesetdisabledstate function disabled thisenabled disabled formbaseprototypewritevalue function value update control value angular thischecked undefined thisvalue value else typeof value boolean thischecked value else thischecked value thisvalue value null return formbaseprototypengonfocus function e istanbul ignore else thisskipfromevent true thisfocusemit e formbaseprototypengonblur function e thispropagatetouch istanbul ignore else thisskipfromevent true thisbluremit e return formbase export formbase tried like control abstractcontrol undefined able call markaspristine methoad", "d": "8/2018"}, {"body": "thing please tell generating angular components like render input tag angular convert please tell converting mean file", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "please provide minimal reproduction via stackblitz", "d": "8/2018"}, {"body": "seem using angular material fileupload package please report error first library author determines bug angular issue opened without party dependencies", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "try without see works", "d": "8/2018"}, {"body": "almost stuck day finally found issue could fix problem really set contenttype explicitly form data angular smart enough remove header processing contribute thirdparty library help fix well issue could easily handled angular believe", "d": "8/2018"}, {"body": "exactly problem case use followed switchmap making http call http call get canceled instantly think rxjs bug", "d": "8/2018"}, {"body": "ca nt reproduce need minimal reproduce scenario actionable closed", "d": "8/2018"}, {"body": "feel free close ca nt reproduced ca nt stackblitz time try reproduce know come across situation cases pulling hair flipped first property decorated input may something else missing issue may something keep eye thanks", "d": "8/2018"}, {"body": "stephenmiracle suspect something else play next time hit please try isolate bit", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "release npm sure still fiddling internal build bits push soon sorted", "d": "8/2018"}, {"body": "need explicitly pass anyway support request nt belong", "d": "8/2018"}, {"body": "thanks feel sorry", "d": "8/2018"}, {"body": "would disabled work elements native specification bet something going implemented ng team could easily make directive desired behaviour even publish npm feel could useful others edit click condition amp amp function", "d": "8/2018"}, {"body": "nt directive using native property element dom element nt expose propertyattribute effect special casing inputbutton etc ca nt special case anything else", "d": "8/2018"}, {"body": "shame documentation framework work simple parameterized route", "d": "8/2018"}, {"body": "useless open multiple issues question definitely bug say issue tracker suitable support questions please use stackoverflow gitter hint", "d": "8/2018"}, {"body": "sarunint thank", "d": "8/2018"}, {"body": "renatoprogramer could please close issues", "d": "8/2018"}, {"body": "closing based", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "ericmartinezr bug angular following documentation work like documentation work", "d": "8/2018"}, {"body": "fill template one completely destroyed provide reproduction also bug retrieves lot results google check", "d": "8/2018"}, {"body": "support developers successful framework want see time blazor dominate", "d": "8/2018"}, {"body": "clearly angular bug issue tracker bugs please use stackoverflow gitter support questions hint base href", "d": "8/2018"}, {"body": "nt know make difficult easy", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "please report library usage problem repo angular repo", "d": "8/2018"}, {"body": "petebacondarwin jbogarthyde igorminar fyi", "d": "8/2018"}, {"body": "far aware packages status states nt know one would compute state exports mixed within package eg exports could experimental others deprecated decide apply states packages whole implement first option given jenniferfell disable dropdown type filtered package", "d": "8/2018"}, {"body": "package deprecated angular wed aug pete bacon darwin notifications githubcom wrote far aware packages status states nt know one would compute state exports mixed within package eg exports could experimental others deprecated decide apply states packages whole implement first option given jenniferfell disable dropdown type filtered package receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "igorminar marked way source code", "d": "8/2018"}, {"body": "good news spec file shipped outside repository still easy fix though", "d": "8/2018"}, {"body": "mblackbourne cors serverside configuration thing ca nt lot client side hardcoded browser functionality socalled simple requests exception simple request look spec docs", "d": "8/2018"}, {"body": "mlcmlapis understand cors client side currently using docs sure exactly missing built different ways mostly tutorials documentation ended result", "d": "8/2018"}, {"body": "mlcmlapis full service import httpclient httpheaders angularcommon import injectable angularcore import map rxjsoperators import cors let headers httpheaders new httpheaders headers headersappend accesscontrolalloworigin applicationjson headers headersappend accesscontrolalloworigin const headers new httpheaders contenttype applicationjson injectable providedin root export class weatherservice constructor private httpclient dailyforcast let headers httpheaders new httpheaders headers headersappend accesscontrolalloworigin headers headersappend accept applicationjson return pipe map result gt result", "d": "8/2018"}, {"body": "mblackbourne simply true theme mentioned maybe hundred times issues gitter channel really first one hits understand cors client side", "d": "8/2018"}, {"body": "mlcmlapis certain first mistyped statement meant server side looking solution built docs nt work looking people issue may able help hence supplied code snippets still pretty new angular general many horrible variations solutions issue require proxyconfig others talking functions wrong others suggested wrapper call logic order make certain view aware service looking support feel free point gitter channel docs think may help spent hours searching decent answers applied least variations angualr suggestions heavily documented appear solution code straight docs import httpheaders angularcommon const headers new httpheaders contenttype applicationjson authorization myauthtoken maybe application wrong considering question public solution may help people", "d": "8/2018"}, {"body": "mblackbourne points ca nt directly modify existing headers within previous options object instances httpheaders class immutable use method instead returns clone current instance new changes applied ca nt use looking nonexisted way simply configure server request url different combination hostname port address loaded spa app cors security thing ca nt overwrite clientside way server configured cors owner nt want access way wants allow access config", "d": "8/2018"}, {"body": "many horrible variations solutions issue wrong cors issues exist one solution configure server correctly allow cross origin requests completely independent client framework use version even plain js would problems", "d": "8/2018"}, {"body": "findings indicate need need pass authentication need configure server allow cross origin thank", "d": "8/2018"}, {"body": "think note recommends nondefault setting futureproofing", "d": "8/2018"}, {"body": "alexeagle thoughts recommendations notes thanks default us nothing", "d": "8/2018"}, {"body": "jenniferfell would work issue maybe would make sense create two tables upper table still contains current events lower table already contains passed events", "d": "8/2018"}, {"body": "local vars like scoped view boundary case access inner vars outter view trying would equivalent js need rules templates keeping sync js function scoping guiding principle closing works designed", "d": "8/2018"}, {"body": "ok thanks explanation understand correctly impossible achieve described use example function scoping would possible use function variable save inner state something like javascript function outer let selectelbroken null function inner selectelbroken language angular templates something like html item selectelbroken dirty", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "fond issue", "d": "8/2018"}, {"body": "fond issue", "d": "8/2018"}, {"body": "setandbma would like make pull request issue otherwise would take issue specifically subchapter simulate data server http tour heroes", "d": "8/2018"}, {"body": "please take issue regards udayan banerjee tue aug frederik schlemmer notifications githubcom wrote setandbma would like make pull request issue otherwise would take issue specifically subchapter simulate data server http tour heroes receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "setandbma okay thanks", "d": "8/2018"}, {"body": "forgot say junior angular please nt rude personal project", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "nice nt really want deal foff really see work answer q built work way nt think q bug defined code problem act intended yes confused", "d": "8/2018"}, {"body": "duplicate without support control got value thus required validation failed always", "d": "8/2018"}, {"body": "closing duplicate thnx trotyl", "d": "8/2018"}, {"body": "thanks pointing solution case someone navigates", "d": "8/2018"}, {"body": "try navigate current url create special router like guard navigate want cancel navigation", "d": "8/2018"}, {"body": "dawidgarus sorry clear route user cancelnavigation also current route completed route cancelnavigation starts right api take sometime respond based response redirect user page", "d": "8/2018"}, {"body": "question", "d": "8/2018"}, {"body": "wo nt completed guard cancelnavigation guard always return false logic regarding whether cancel navigation event handler would redirect navigation canceling", "d": "8/2018"}, {"body": "lets say current route clicked b appcomponent subscribing route change events navigationstart called api decide whether proceed get positive response redirect user b redirect user c want put cancelnavigation", "d": "8/2018"}, {"body": "wo nt work check async like api call", "d": "8/2018"}, {"body": "yes problem able achieve canactivate couldnt use canactivate exposed routes node modules", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "nt think possible array sort function pipe uses nt perform stable sorting compare function always returns sort function treats items equal could really return items order could replace custom implementation performs stable sorting would nt matter javascript object nt remember order keys even define object literal iterate keys b come js works", "d": "8/2018"}, {"body": "alternative could use map write custom version keyvalue pipe nt sort looking source nt hard", "d": "8/2018"}, {"body": "fualt sat aug notifications githubcom wrote submitting regression behavior used work stopped working new release x bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior wrong order elements keyvalue pipe expected behavior return unsorted order object elements minimal reproduction problem instructions motivation use case changing behavior environment angular version xyz browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform windows chrome others receiving subscribed thread reply email directly view github mute thread", "d": "8/2018"}, {"body": "pipe uses method issue js pipe see docs src sort fn applied", "d": "8/2018"}, {"body": "thanks suggestions finally resolved problem adding order property object", "d": "8/2018"}, {"body": "momoadeli related explained", "d": "8/2018"}, {"body": "mlcmlapis seems condition case totally understand transpiring purely js perspective child reference array via parent since array reference change childs input nt triggered yet list child view get updated since still holding reference thisthingslist parent although sure anything done rather insidious", "d": "8/2018"}, {"body": "yes rightclick open link new window tab given almost time would save us step many times day implemented thanks", "d": "8/2018"}, {"body": "unfortunately github seem allow neither markdown html links tried also answer confirms alwayus ctrlclick instead rightclicking etc adds minimal overhead", "d": "8/2018"}, {"body": "could create chrome extension modified preview links adding", "d": "8/2018"}, {"body": "duplicate valid operation would normalize vanillajs behavior nothing angular", "d": "8/2018"}, {"body": "thnx trotyl confirming expecting bvdmitri trotyl pointed operation remove duplicates simply way expressing things like add remove first class others current browsers usage remove duplicates nothing angular definitively want use fast css class name manipulation one could imagine different implementation string manipulation instead would pretty inefficient memoryhungry ca nt angular absolutely want need use css framework requires duplicate css class names roll equivalent stop using bindings closing wo nt fix angular", "d": "8/2018"}, {"body": "funny looking today way could see pass data via route static router config created hacked solution works issue saw refresh screen persist data", "d": "8/2018"}, {"body": "earshinov tmburnell like idea passing arbitrary data think passed route params resolved via resolvers example want go page item details already item object navigate item id pass param resolver could use object params resolve data use id param download navigate error page thing take care situation user clicks refresh button browser params url lost edit think common use case would forms could easily create multi page forms use fill forms data already like navigate item details item modification form", "d": "8/2018"}, {"body": "dawidgarus also wanted try use url state would allow refresh could find api would allow work putting url something like ecommerce something restrictive dont want make deep linkable want force user come somewhere within app click link", "d": "8/2018"}, {"body": "guys looking ways persist state please follow task already progress hopefully feature available soon", "d": "8/2018"}, {"body": "earshinov nt think history state way go one state pages preserved navigate subpage example go foo set data history state could retrieved foocomponent attached route foo go foobar baz go back foobar foocomponent ca nt retrieve data data attached angular route", "d": "8/2018"}, {"body": "dawidgarus might mistaken widely accepted solution scenario storing state service provided foo component", "d": "8/2018"}, {"body": "earshinov wo nt scenario previous comment service destroyed navigate foobar baz", "d": "8/2018"}, {"body": "earshinov may want look comment", "d": "8/2018"}, {"body": "dawidgarus case would provide service root component module michaelz comment referenced persisting topic would prefer discussed solely brought ticket understand might missing whole picture hand like ticket neet tidy understandable focused one fairly simple scenario given ticket description", "d": "8/2018"}, {"body": "earshinov another bad idea could return previous page navigate page information reset ca nt go back foo saved data page root service lost bar foo", "d": "8/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide stackblitz reproducing problem describing difference expected current behavior use stackblitz template", "d": "8/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide stackblitz reproducing problem describing difference expected current behavior use stackblitz template", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "believe issue incorrect", "d": "8/2018"}, {"body": "please open respecting issue template", "d": "8/2018"}, {"body": "could reason run server bundle updating angular version receive error generate server bundles using command configuration server project file server builder angulardevkitbuildangular server options outputpath distserver main srcmainserverts tsconfig srctsconfigserverjson configurations production optimization false outputhashing media sourcemap false namedchunks false extractlicenses true vendorchunk false bundledependencies", "d": "8/2018"}, {"body": "traced specifically symbols compiler dependencies previously included via impact bundle size seems negligible referenced thus treeshaker remove along majority seems reporting relative sizes prior treeshaking gives misleading picture actually bundle", "d": "8/2018"}, {"body": "thanks tracking problem alex noticed first real world app difference main bundle disk file size jumped maybe dependencies crept well", "d": "8/2018"}, {"body": "alxhub please also share thoughts comment", "d": "8/2018"}, {"body": "fyi since looks like seeing size impact differences compared app using changes mainjs disk mb", "d": "8/2018"}, {"body": "good morning jponeill thank data point provide details building main bundle angular cli paste output version uglify installed thanks", "d": "8/2018"}, {"body": "using angular cli prod alex pasted ng version info uglify version bottom angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularmaterial ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularmaterial ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack npm view uglifyes uglifyes deps versions javascript parser manglercompressor beautifier toolkit keywords uglify uglifyes uglifyjs minify minifier javascript ecmascript async await bin uglifyjs dist tarball shasum integrity dependencies commander sourcemap maintainers alexlamsl alexlamsl gmailcom disttags latest published months ago alexlamsl alexlamsl gmailcom", "d": "8/2018"}, {"body": "think may fix least partial try reproduce see much improves things", "d": "8/2018"}, {"body": "mhevery please comment well", "d": "8/2018"}, {"body": "nt know good way around bazel environment currently run manner produces files available compilation units naturally correctly assumes depend files compilation units order produce output indeed works bazel rule creates npm packages however strips files publishing libraries angular usually built flags disable factory generation entirely dependencies factories available", "d": "8/2018"}, {"body": "npm package publishes involved look like", "d": "8/2018"}, {"body": "alexeagle difference rollup getting involved create npm package works fine nothing wrong referencing ngfactory files", "d": "8/2018"}, {"body": "means angular ever treeshakable providers would able build angular packages bazel mon aug pm jeremy elbourn notifications githubcom wrote alexeagle difference rollup getting involved create npm package works fine nothing wrong referencing ngfactory files receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "doc filename issue exists example referenced", "d": "8/2018"}, {"body": "good catch change", "d": "8/2018"}, {"body": "brandonroberts maybe little something next sprint", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "root second option", "d": "8/2018"}, {"body": "rlove nt realise opened issue wrong repo file issue angularangularcli instead", "d": "8/2018"}, {"body": "sure thing", "d": "8/2018"}, {"body": "looking correct repo issue duplicate", "d": "8/2018"}, {"body": "think part error message snippet documentation helpful according angular documentation regression", "d": "8/2018"}, {"body": "manklu quick question try changing route wrap square braces like believe canactivatechild requires array guards array thrown error giving single type", "d": "8/2018"}, {"body": "manklu destreyf guys right making work expected manklu sorry marking regression clearly mistake part", "d": "8/2018"}, {"body": "interaction works anything inside affected global tags means emulated component style would gone placed inside another shadowdom component copying tags required preserve component styles", "d": "8/2018"}, {"body": "ok still would nice styletagadding inside shadow dom done event emulated component load eg needed", "d": "8/2018"}, {"body": "working intended described trotyl", "d": "8/2018"}, {"body": "pfeileon nt reason new syntax introduced treeshakable services", "d": "8/2018"}, {"body": "mlcmlapis valid reason still explicitly pointed documentation tour heroes doc misleading suggested adding flag instantiate anyway something like", "d": "8/2018"}, {"body": "pretty sure behavior since like forever difference today service part final bundle treeshaking services nt work need injected somewhere always like add property service nt injected anywhere", "d": "8/2018"}, {"body": "ericmartinezr documentation still correct provide service root level angular creates single shared instance heroservice injects class asks service instance created nt asked first part sentence completely independent second would create instance service simply put root module never use code service still executed ides mark unused anyway main reason opening issue fact documentation misleading specific edit adjusted op removed bug report since behavior obviously intended simplified stackblitz code example", "d": "8/2018"}, {"body": "angular nt sanitize anything example please check console logs sanitization would produce warning attribute nt htmlaware pass html literal", "d": "8/2018"}, {"body": "trotyl mhm strange static output rendered expected foo amp bar angular something static text nt variable however also read title nt htmlaware minutes ago least standard close issue sorry bothered thank time", "d": "8/2018"}, {"body": "static output rendered expected foo amp bar escaping html sematic writing literal something angular", "d": "8/2018"}, {"body": "code referencing class named snippet posted class name makes wonder using html second place perhaps using nt public member named aot build last night without issues wonder potential overlap components", "d": "8/2018"}, {"body": "right fact two components pointed html file hence buildtime hickup many thanks pointer destreyf", "d": "8/2018"}, {"body": "per info filled issue worked previous version broke marked regression correct", "d": "8/2018"}, {"body": "yes correct app second form keyupenter keyup worked perfectly fine suddenly pressing enter nt receive anything method reversing solved nt know marked bug since workaround definitely something worked angular new version updated last friday nt work anymore edit oh sorry nt test app browser platform except hand rush tested users also compiling app either prod dev environments nt fix issue edit put wrong angular version", "d": "8/2018"}, {"body": "indeed expected behavior nt filtering handler meaning also response enter key given handler executed declaration template works please also provide working repro old version likely bug ever worked", "d": "8/2018"}, {"body": "oh ok makes sense since last keyup event enter already processed event next keyup enter empty value event ok thanks", "d": "8/2018"}, {"body": "according documentation function return value function", "d": "8/2018"}, {"body": "manklu link documentation referring blogs one one well angular uses internally looks factory function needs return function typically inner function returns promise appears returning promise optional", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "anyone interested stackoverflow answer meantime also found issue tracks inconsistent behavior defining factory function libraries vs apps", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "meant template selector matching dynamic components care related", "d": "8/2018"}, {"body": "trotyl pipes directives documentation says otherwise exports required abstraction used template list directive pipe importing module useexported declarations modules public api component another module use modules usercomponent imports module module exports usercomponentdeclarations private default module export usercomponent components within module use usercomponentimporting module automatically reexport imported module imports module b ca nt use ngif imported module imported commonmodule module b must import commonmodule", "d": "8/2018"}, {"body": "pipes directives mroutput true provide inject directive pipe normal service one could stop anywhere standard api creating imperative directive pipe possible directive future exports required abstraction used template true dynamiccomponent application eg embedding totally meaningless", "d": "8/2018"}, {"body": "trotyl behavior agrees statement stated docs seeing many angular projects seems people exporting incorrectly idea module use another module declarations though nt exported dumbfounding nt sound fundamentally broken module declares something owns complete authority declarations visibility enforced templates bad design decision opinion simply intuitive visibility conditional", "d": "8/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue create new issue sounds like would docs issue thorough description needs documented would help decide create new issue", "d": "8/2018"}, {"body": "fdim thanks issue needs reproduction use stackblitz otherwise likely get closed someone picks looked please go ahead create repro update issue description", "d": "8/2018"}, {"body": "thanks getting back looking code quite obvious error handling promise infamous occur example hand also see specific promise actual promise cases", "d": "8/2018"}, {"body": "error happens promise awaited promise catch callback declared everything ok works since await throws exception promise rejected error happens promise await promise catch callback declared fail error errorhandler normal local error handling catch exception process exception gone unless rethow maybe ask library author silently swallow errors", "d": "8/2018"}, {"body": "normal local error handling catch exception process exception gone unless rethow manklu ideology promises chain chain success callback fail callback much want terminate chain definitely normal behavior sure non party libs would apply promise maybe ask library author silently swallow errors manklu would doubles error every case", "d": "8/2018"}, {"body": "totally misunderstood promise chain call promise new promise created related previous one using even referenced promise created successful one unless rethrow error inside", "d": "8/2018"}, {"body": "trotyl seen repro confirm valid behavior could please explain fail case behave like mean remove errorhandler catch error happens fail case every cases depend whether added", "d": "8/2018"}, {"body": "already quite clear manklu promise generated error thus would caught shortcut", "d": "8/2018"}, {"body": "translated sample plain js see get similar results error happens promise awaited everything ok plain js error happens promise await everything ok error one message console uncought exception zonejs catches exception forward error handler error happens promise awaited promise catch callback declared everything ok plain js since await throws exception promise rejected error happens promise await promise catch callback declared fail error errorhandler plain js", "d": "8/2018"}, {"body": "besides direct copy paste console would enough question javascript work like please consider legit javascript support question channel", "d": "8/2018"}, {"body": "trotyl manklu make sense thanks help", "d": "8/2018"}, {"body": "sorry possible investigate without reproduction closing nonactionable happy reopen investigate provide reproduction", "d": "8/2018"}, {"body": "helpful unless provide replication discussion problem issue get closed explanation would cause error would helpful guess hope fixes", "d": "8/2018"}, {"body": "closing issue nt mean discussion idea might causing error afaict error never happen impossible browser bug ca nt investigate without reproduction regarding registration issue guess unrelated error possibly related ca nt really know without guessed reproduction grin happy continue discussion", "d": "8/2018"}, {"body": "problem two overloads one ignored likely issue docs app", "d": "8/2018"}, {"body": "looks like doc right top get method lower doc get token type injectiontoken notfoundvalue top abstract get token type injectiontoken notfoundvalue flags injectflags get method lower page abstract get token notfoundvalue", "d": "8/2018"}, {"body": "petebacondarwin jbogarthyde get chance take look determine doc content issue doc markup issue dgeni issue thanks", "d": "8/2018"}, {"body": "bottom detail view method missing type parameter probably dgeni issue", "d": "8/2018"}, {"body": "page could use better doc ca nt figure details works either version", "d": "8/2018"}, {"body": "fix also sneaks deprecated information overloads", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "yeah definitely issue already tracking thanks trotyl closing duplicate", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation code snippet posted seems probably missing build form model class reactive form directives nt use templatedriven validator directives like alone", "d": "8/2018"}, {"body": "found uses prefix angular browser ignore property", "d": "8/2018"}, {"body": "jasonaden think bug angular use native functions set styles agree please close issue", "d": "8/2018"}, {"body": "first report issue eg interestingly though extractheadingsafehtml contain call may chrome bug", "d": "8/2018"}, {"body": "people faced error unrelated projects could related ime necessarilly", "d": "8/2018"}, {"body": "maybe related well", "d": "8/2018"}, {"body": "one different see", "d": "8/2018"}, {"body": "please clarify unable open links something wrong example code please specify exactly post minimal reproduction read information", "d": "8/2018"}, {"body": "content except menu header footer pages browser google chrome latest version open tried browser online content appears guess may issue side", "d": "8/2018"}, {"body": "well interesting nt provide details like operating system version chrome build could also open browser console via see useful information maybe already related issue", "d": "8/2018"}, {"body": "using windows os chrome build version version build officiel bits see page console see page console screenshot screen first console error first link second one second link", "d": "8/2018"}, {"body": "closing duplicate", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "problem creation order service interceptor service creation finished interceptor created call http request service constructor interceptor instance created service creation extract http request method make call component", "d": "8/2018"}, {"body": "constructor service initiates async task need completed service ready would really great move http call components oninit least choice works cases except used httpinterceptor wrapping http call service settimeout also solves problem would still prefer avoid workarounds", "d": "8/2018"}, {"body": "duplicate title misleading circular dependency problem", "d": "8/2018"}, {"body": "behavior changes switch back old way providing services module opposed providedin root old way causes infinite loop new instance service created time interceptor intercepts new request new instance service fires new http request never stabilises exceeding max call stack size stackblitz example", "d": "8/2018"}, {"body": "error anyway usage valid error message could indeed improved", "d": "8/2018"}, {"body": "making http request service constructor supported case docs specify point maybe emitt error message service fail initialize injected also really inconsistent fails work service injected interceptor easily solved settimeout around http call", "d": "8/2018"}, {"body": "making circular dependency di supported nothing http", "d": "8/2018"}, {"body": "agreed something working hopefully resolving soon", "d": "8/2018"}, {"body": "cc matsko", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hard tell might root issue without actual minimal reproduction maybe need build using closing since actionable happy reopen investigate provide minimal reproduction either steps run create project demonstrates issue standalone repo check investigate", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "jasonaden nt think issue forms binding attribute", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked unfortunately pasting code github nt reproduction likely issue happening real bug reproduction stackblitz would allow us look fix", "d": "8/2018"}, {"body": "looks like suggestion stackoverlow fix please try update also need reproduction order accept issue produce repro today pull issue otherwise close issue support request without reproduction hopefully suggestion stackoverflow fixes", "d": "8/2018"}, {"body": "note reproduction single test nt need upload tests generally would nt accept anyway nt specific enough reproduction", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation kevinlllr type question best asked stackoverlow however think bug please make much simple example explain exactly happening example lots buttons lots components requires looking code detail see trying bug send reproduction exact pieces broken nothing else clear steps reproduce", "d": "8/2018"}, {"body": "question", "d": "8/2018"}, {"body": "slower wo nt big problem compared benefits", "d": "8/2018"}, {"body": "trotyl yes know agree however curious hear angular team intimately familiar ivy may changes unaware fact improve runtime performance beyond smaller bundles", "d": "8/2018"}, {"body": "matthewjh excited see community interest around ivy regarding question runtime performance really early speculate fact seldom good idea speculate need hard numbers initial testing seems like might faster compared current view large tree large table benchmarks wait meaningful comparisons till functionality covered inflight perforiented refactorings land go cycle perf measuring tunning happens speculation need ask patience till got work completed share meaningful numbers yeh generally speaking aim ivy least fast current view engine time tell good managed closing nothing actionable", "d": "8/2018"}, {"body": "nt right time publish design docs ivy outside core time real information basic build stones principal game rules reengineering source code guess beginning really wasting expensive time", "d": "8/2018"}, {"body": "thanks pkozlowskiopensource everything said makes good sense looking forward seeing numbers including bundle size reduction using ivy", "d": "8/2018"}, {"body": "ngclass", "d": "8/2018"}, {"body": "duplicate expected behavior", "d": "8/2018"}, {"body": "closing per", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "closing per", "d": "8/2018"}, {"body": "dup check branch still weird since logs master", "d": "8/2018"}, {"body": "good find changelog think changelogmd master updated", "d": "8/2018"}, {"body": "likely related issue", "d": "8/2018"}, {"body": "comment help", "d": "8/2018"}, {"body": "morzyns sure happening example much support request bug report though sent stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation think actual bug need send steps reproduce running reproduction use stackblitz submit new issue", "d": "8/2018"}, {"body": "dup see also", "d": "8/2018"}, {"body": "gah nt find right search term guess", "d": "8/2018"}, {"body": "actually reopening previous issue repro feel free close repro useful though", "d": "8/2018"}, {"body": "fixed released tomorrow release", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "8/2018"}, {"body": "jasonaden still need example problem problem try use msal microsoftauthenticationlibraryforjs map js object get serialized compile aot explained details github msal project issue stackoverflow thank", "d": "8/2018"}, {"body": "andersonferrari since issue closed please follow instructions create new issue feel repro", "d": "8/2018"}, {"body": "running fix problem", "d": "8/2018"}, {"body": "nt however anyway", "d": "8/2018"}, {"body": "reverted changes deleted updated outdated dependencies running individually things seem behaving better", "d": "8/2018"}, {"body": "demo still seems appropriate correct need move plunkr stackblitz plunkr deprecated angular doc examples", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "likely fix ivy", "d": "8/2018"}, {"body": "alxhub expected behavior typescript wo nt fixed jit support dropped", "d": "8/2018"}, {"body": "closed", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation said version nt exist latest version", "d": "8/2018"}, {"body": "knavaneeth version", "d": "8/2018"}, {"body": "apologies missed referencing cli", "d": "8/2018"}, {"body": "knavaneeth little history cli versioning previously nt match angular versioning prior cli version next earlier version would used angular said able use cli version angular version able possibly easier remembering version numbers", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation unfortunately reads like support request nt provide info reproduce issue however reproduce problem please submit new issue include reproduction shows working earlier version working", "d": "8/2018"}, {"body": "duplicates", "d": "8/2018"}, {"body": "thanks closing duplicate", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "example docs jbogarthyde pr", "d": "8/2018"}, {"body": "forgotten wanted remove usage notes heading seems like fairly standard across types forgotten directives different", "d": "8/2018"}, {"body": "reassigned petebacondarwin jbogarthyde ca nt make template style sheet changes linked pr sample docs added comp docsapi jira sync labels manage api template work easily thx", "d": "8/2018"}, {"body": "directives basically usage notes usage important general developers implementation syntax moving usage notes section syntax sections blend long description means nt need section heading serves way add topic headings within description", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "checked source code linked doc bit noticed following adding new status controls called disabled control either valid control passed validation checks invalid control failed validation check pending control midst conducting validation check disabled control exempt validation checks statuses mutually exclusive child controls disabled individually group control status disabled well group status always reduce children group valid children disabled example able verify become timeout completes therefore valid believe means working expected ie bug", "d": "8/2018"}, {"body": "yep barbiero mentioned validation statuses mutually exclusive print group status instead property see change closing works intended", "d": "8/2018"}, {"body": "issues need reproduction may get closed member team takes look reproduction attached want avoid please create repro using stackblitz", "d": "8/2018"}, {"body": "hello issue linked way angular cli outputs errors case error framework could open issue angular cli repository instead thanks", "d": "8/2018"}, {"body": "update looks like instance c gets created first instance one get created first one created inside b b component ref get created elements element use angular means creating b done angular create children b c c component angular create instance time browser see c tag name assign component instance phase detects web component triggers normal process element create instance c one dom element exists assigned component instances destruction destroy called twice first time ok time throw node removed", "d": "8/2018"}, {"body": "relates support using component angular templates exporting custom element app actually feature request nt designed supported yet", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template specifically please follow issue template requirement give steps reproduce please explain expect detail actually happening detail notice broken like expected validation type number value pass actual validation fails message string number something similar level detail", "d": "8/2018"}, {"body": "would also benefit content projection case like projected components created detached dom elements", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "select pemployee userid lilei hanmeimei", "d": "8/2018"}, {"body": "see related", "d": "8/2018"}, {"body": "hi use method class dynamically load module", "d": "8/2018"}, {"body": "build module cli load browser application crashed nt know build module correct loading browser webpack angular cli create window array name webpackjsonp module pushed array load append array two object name main app working", "d": "8/2018"}, {"body": "may look example different modules declared appmodulets", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "vinegrette thanks help modules need append appmodulets dynamically example declared compile app", "d": "8/2018"}, {"body": "jasonaden question think feature unleashes", "d": "8/2018"}, {"body": "firebase used strip nt seem based config firebase docs extension added redirect performed path without extension generally firebase hosting maybe redirects seems messed recently nt think anything angulario someone access account fix url ie remove extension", "d": "8/2018"}, {"body": "fixed short link definition redirect works correctly thanks", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "8/2018"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "8/2018"}, {"body": "actually issue see issue regards ngmodel mine explicitly states ngmodel need toggle contenteditable based certain criteria basically add contenteditable binding boom problem solved", "d": "8/2018"}, {"body": "need toggle contenteditable based certain criteria basically add contenteditable binding boom problem solved confused saying nt work figured avoid types misunderstandings following issue template still see bug please provide minimal reproduce scenario stackblitz similar", "d": "8/2018"}, {"body": "correct contenteditable binding use stated initial comment template really unnecessary since adequately explained issue current workarounds focus ngmodel aspect working need able toggle contenteditable based certain variables nt know would need entire template one line explains problem also like add trying come across rude honestly loaded template thought sum two sentences people nt scroll entire template assumed would make easier", "d": "8/2018"}, {"body": "kassimir could please provide minimal reproduce scenario problem stackblitz ca nt reproduce", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked issue would assume something specific project nt something generally reported general issue definitely would heard others said provide github repo building angular vs angular shows significant difference build time would help isolate issue seem", "d": "8/2018"}, {"body": "please provide minimal reproduction problem simply web application nt really help investigation case node version make difference whatsoever runtime used build project think problem lies elsewhere course might due one packages upgraded along node", "d": "8/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide stackblitz repository reproducing problem use stackblitz template", "d": "8/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide stackblitz reproducing problem describing difference expected current behavior use stackblitz template", "d": "8/2018"}, {"body": "hi angular devkit cli issues created cli repo", "d": "8/2018"}, {"body": "fixed cli", "d": "8/2018"}, {"body": "angular devkit cli issues created cli repo totally closing please recreate cli nt work thnx sarunint helping issues", "d": "8/2018"}, {"body": "pkozlowskiopensource sarunint thanks two ca nt tell amazing see number talented people behind software use day day appreciate", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "brandonroberts understand request correctly specific tutorial document request reorder primary toc forms validation comes introduction templatedriven reactive forms makes sense maybe make change release new forms intro", "d": "8/2018"}, {"body": "jenniferfell correct seems reasonable also", "d": "8/2018"}, {"body": "confirmed correct example section repeats example instead showing new example attaching quick summary options minimally need remove example duplicated incorrect section next loe see right example ready insert insert existing docregion see existing example insert becomes feature request new example", "d": "8/2018"}, {"body": "jbogarthyde hi see updated api doc changedetectorref july get chance could ask take look thanks", "d": "8/2018"}, {"body": "even try still scroll right position always way past anchor thisrouternavigate fragment location", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "8/2018"}, {"body": "seeing hard refresh supersmooth", "d": "8/2018"}, {"body": "potentially related", "d": "8/2018"}, {"body": "simplest workaround come create empty component route setup looks like solves issue parammapsubscribe firing param changed", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "8/2018"}, {"body": "please open material repo also seemed cleared cache got console cleaning cache", "d": "8/2018"}, {"body": "solved thanks", "d": "8/2018"}, {"body": "ocombe could please take look issue", "d": "8/2018"}, {"body": "enum localedatats enums localedataapits specially nice even though last one experimental use modify locale structures commonlocales merge product specific formats registering access enums make us bit flexible format structure changes", "d": "8/2018"}, {"body": "solved adding import registerlocaledata angularcommon import localees angularcommonlocaleses registerlocaledata localees appmodulets html", "d": "8/2018"}, {"body": "please leave support requests channels also close issue since done", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "paragraphs example would written less lines suggestions make better less boring less time consuming", "d": "8/2018"}, {"body": "eg paragraph two lines flat puts file srcapp instead folder moduleapp tells cli register imports array appmodule import ngmodule angularcore import commonmodule angularcommon ngmodule imports commonmodule declarations export class approutingmodule generally nt declare components routing module delete ngmoduledeclarations array delete commonmodule references configure router routes routermodule import two symbols angularrouter library add ngmoduleexports array routermodule exporting routermodule makes router directives available use appmodule components need approutingmodule looks like import ngmodule angularcore import routermodule routes angularrouter ngmodule exports routermodule export class approutingmodule reading flow paragraph seems tough read time form top page paragraph", "d": "8/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide stackblitz reproducing problem describing difference expected current behavior use stackblitz template", "d": "8/2018"}, {"body": "oleersoy benefits new decorator existing one", "d": "8/2018"}, {"body": "less verbose eliminates possiblity errors due typos etc also self documenting communicates design service better good complement would way design decorators cleaner semantics simpler easier understand example would longer need say documentation features helps tree shaking etc becomes irrelevant devs update usage annotations", "d": "8/2018"}, {"body": "think decorators meant express something semantic way eg something injectable provided matter configuration also typos possible since typescript prevents use something else", "d": "8/2018"}, {"body": "could debate length done thread think ask peers us would prefer write instead also typescript corrects typos still possible vscode autocompletes nt worry writing rest multiply productivity improvement million downloads month matters also implementation decorator smaller focused one simple task therefore less maintain need refactored easier refactor", "d": "8/2018"}, {"body": "plans simplify treeshakable providers form going close issue since something similar already roadmap", "d": "8/2018"}, {"body": "would need fully traverse dom trying achieve", "d": "8/2018"}, {"body": "case trying attach information dom elements components exposed angular elements retrieve basically poor man hierarchical di injector see info", "d": "8/2018"}, {"body": "better achieved readwrite dom queue pattern planning adding something like future version closing going take approach", "d": "8/2018"}, {"body": "ideas avoid issue maybe tweaking testing environment tdd possible right", "d": "8/2018"}, {"body": "yes really necessary writing every single template value currency brl nt seem like great solution", "d": "8/2018"}, {"body": "reiterate issue template told support request gt please submit support request instead see", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "also perhaps improve steps required automatically", "d": "8/2018"}, {"body": "case debounce time value app injected main module set run tests class debounce time value values many services simple way control tests", "d": "8/2018"}, {"body": "jpzwarte pr clear explanation use test example", "d": "8/2018"}, {"body": "ran problem show stopper side", "d": "8/2018"}, {"body": "like try tract maybe need", "d": "8/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide stackblitz reproducing problem describing difference expected current behavior use stackblitz template", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "seems like applying fixes issue", "d": "8/2018"}, {"body": "may looking old version angula website update may broken may stuck outdated version website update clear cache website meantime link live example", "d": "8/2018"}, {"body": "maybe cleared cache got result hmm", "d": "8/2018"}, {"body": "able see right results another computer surprising thank", "d": "8/2018"}, {"body": "thanks looks like resolved clearing browser cache worked doc correct live example goes stackblitz", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "valid issue problem config generator process file paths reported filesystem url defer due uri encoding generated entry sw tries match request fails", "d": "8/2018"}, {"body": "current behavior", "d": "8/2018"}, {"body": "angular examples seen done injectable providedin root export class todosservice injectable provided root default want provided somewhere else specify want", "d": "8/2018"}, {"body": "oleersoy actual syntax beginning angular would introduce breaking change unacceptable", "d": "8/2018"}, {"body": "mlcmlapis breaking change exact thing implement annotation make default convention configuration", "d": "8/2018"}, {"body": "oleersoy looks nt want understand anybody would differentiate state", "d": "8/2018"}, {"body": "annotation runs happens class loading service provided application dependency injection container zero difference first case decorator assumes want second case making explicit", "d": "8/2018"}, {"body": "oleersoy lazily loaded modules use cases need move lazily loaded modules reduce sizing time initial loading main app", "d": "8/2018"}, {"body": "oleersoy suggest changing behavior default actual syntax breaking change", "d": "8/2018"}, {"body": "ok suppose module loaded yet gets loaded loaded angular injects service annotated root application container missing", "d": "8/2018"}, {"body": "oleersoy actually services lazily loaded modules instantiated singletons instances modules level", "d": "8/2018"}, {"body": "want injected specifically module level container specify like words saying inject root level container words service lazily loaded module made available root container right", "d": "8/2018"}, {"body": "oleersoy still missing millions lines existing code written suppose instances created lazily loaded modules level root container ca nt suppose code changed first", "d": "8/2018"}, {"body": "oleersoy syntax nt exist", "d": "8/2018"}, {"body": "introduce make inject root container keep way million devs downloading angular month write additional unnecessary boilerplate whereas current lines code either stick framework way upgrade change annotation little bit time really matter whether exists root container want", "d": "8/2018"}, {"body": "massive deal introduce new annotation specifically says service injected root container", "d": "8/2018"}, {"body": "oleersoy back beginning simply nonacceptable change behavior way suggest new decorator like could way", "d": "8/2018"}, {"body": "cool suggestion", "d": "8/2018"}, {"body": "sorry really sure issue describing feature request please make sure opening comment issue describes feature requesting whoever triaging issues angular team nt read whole thread get gist lot go please submit new issue detailed description feature requesting closing one", "d": "8/2018"}, {"body": "looks like duplicate", "d": "8/2018"}, {"body": "yeah root issue needs discussion please track", "d": "8/2018"}, {"body": "duplicate pending pr", "d": "8/2018"}, {"body": "thnx joostk indeed duplicate pending pr going close issue mentioned pr approved merged", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "mentioned last lines log file verbose stack syntaxerror unexpected end json input parsing near ories dist sh verbose stack jsonparse verbose stack parsejson c verbose stack consumebodycallthenbuffer c verbose stack verbose stack processtickcallback verbose cwd verbose windowsnt verbose argv c program filesnodejsnodeexe c userssajuappdataroamingnpmnodemodulesnpmbinnpmclijs install verbose node verbose npm error unexpected end json input parsing near ories dist sh verbose exit true", "d": "8/2018"}, {"body": "agreed odd behavior relatively straight forward fix simply wiring validation lazy loading issuing warning incorrect configurations chance something would like create pr", "d": "8/2018"}, {"body": "yeah course try fix issue lazy loaded modules agree making validation less strict", "d": "8/2018"}, {"body": "proposal", "d": "8/2018"}, {"body": "like idea nt think something able get immediately something could work community please post interested helping mention", "d": "8/2018"}, {"body": "resolvers separate services component nt need created nested resolver redirect page parent components would created required note dependencies must present creating component instance dependencies activatedroute elementref navigation finished yet resolve", "d": "8/2018"}, {"body": "resolvers separate services component nt need created understand nt see value using separate service every single property resolved data nested resolver redirect page parent components would created required componentasresolver redirect creation component instance invocation constructor injecting dependencies cheap creation resolver instance right least components initialization logic methods constructor creation extra component instance nt issue note dependencies must present creating component instance dependencies activatedroute elementref navigation finished yet resolve understand deps like initiated nt need fetch component data actually issue using component resolver allowing provide single resolver instead resolverperdataproperty", "d": "8/2018"}, {"body": "understand nt see value using separate service every single property resolved data resolvers could reused components require different set data overlaping componentasresolver redirect creation component instance invocation constructor injecting dependencies cheap creation resolver instance right necessarily simple cases yes services created lazily injected might want delay needed also component level providers injected components might want create yet mixing dependencies resolver dependencies component edit remember services nt oninit hook initialization done constructor understand deps like elementref initiated nt need fetch component data need create component instance making change dependencies would ready use constructor break lot existing code simple example constructor place initialize instance properties moving would nt feel right actually issue using component resolver allowing provide single resolver instead resolverperdataproperty already like edit also note resolvers populate route data also property route config", "d": "8/2018"}, {"body": "resolvers could reused components require different set data overlaping reusing resolvers different routes requires route parameters name noticeable limitation necessarily simple cases yes services created lazily injected might want delay needed also component level providers injected components might want create yet mixing dependencies resolver dependencies component edit remember services nt oninit hook initialization done constructor issue constructor place initialize instance properties moving ngoninit would nt feel right properties require inputs initialized hook completely ok nt see reason spread properties initialization constructor ngoninit resolve postpageresolver renamed example looks like workaround real solution edit also note resolvers populate route data also data property route config quote main post nt insist usage component resolver technique works fine may work everybody propose summarized quite well issue title", "d": "8/2018"}, {"body": "let add usecase think adding separate resolver class stored separate file fetching data cases single call service method perfect example overengineering recently came interesting idea use page component classes route resolvers example ts interface post id number title string const routes route path post id component postpagecomponent resolve post postpagecomponent component selector apppostpage template title posttitle class postpagecomponent implements oninit resolve post post constructor private posts postsservice private route activatedroute async resolve route activatedroutesnapshot promise return thispostsget routeparamsid ngoninit thispost thisroutesnapshotdatapost injectable class postsservice async get id post id promise fetch post return id title foo ts class postpagecomponent implements oninit resolve async resolve route activatedroutesnapshot promise const author thisauthorsget routeparamsauthorid const post thispostsget routeparamspostid return author await author post await post ngoninit const author post thisroutesnapshotdata postpagedata thisauthor author thispost post course rename key case accessing look like bothers little propose allow property single value observable promise case resolved value stored right think solve problem well right stevenliekens", "d": "8/2018"}, {"body": "think understand saying would nt work routes also static data example would get lost resolve replaces whole data object", "d": "8/2018"}, {"body": "stevenliekens static data merged dynamic one", "d": "8/2018"}, {"body": "interesting idea would work except still generic type parameter wonder resolve generic anyway nt like least could default", "d": "8/2018"}, {"body": "generic default type set", "d": "8/2018"}, {"body": "found problem nt related router meta class seems like angular bug anyway least strange methods nt share results across platforms chrome firefox edge use tag nt exist ignored found helpful case service method removes every single possible meta tag could created component destroy always every route metas though example specify height tags components still use method service get rid safari r nt find tag angular crashes nt tested pretty sure happens", "d": "8/2018"}, {"body": "httpheaders immutable class way example made always add empty httpheaders object put request need order work assign return value call headers set function change existing httpheaders object rather create new one additional headers added expect behaviour use request methods httpclient see also", "d": "8/2018"}, {"body": "httpclient methods get post delete work either way seeing consistent behaviour across different methods documented currently angular", "d": "8/2018"}, {"body": "reproduce like said use hard need repo install angularcli", "d": "8/2018"}, {"body": "error one among lot project private push github point aot serve issue usage angularcli everything working use", "d": "8/2018"}, {"body": "issue issue angular cli also upgrade first thought changed project structure bit angular cli generated tried new empty angular cli project got error steps reproduce create new project using ng new used following command go folder start angular change file example appcomponentts adding new line similar save get following error result nt know important using yarn package manager node", "d": "8/2018"}, {"body": "tomvangreen exaclty talking", "d": "8/2018"}, {"body": "nt related pure ngc compilation produces following line like case imported another module", "d": "8/2018"}, {"body": "problem arrived cli however continue problem falling back yet pin point criteria starts failing", "d": "8/2018"}, {"body": "trying many different versions cli gave enabled reflect polyfill remove aot", "d": "8/2018"}, {"body": "also getting angularcli throwing error modules versions angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack", "d": "8/2018"}, {"body": "got error message lazy loaded module project upgrading angular angular cli already time error srcappappmodulengfactoryjs module found error ca nt resolve angularrouterngfactory tmpngissuesrcapp error srcappaccountaccountmodulengfactoryjs module found error ca nt resolve angularrouterngfactory tmpngissuesrcappaccount error srcappproviderprovidermodulengfactoryjs module found error ca nt resolve angularrouterngfactory tmpngissuesrcappprovider error srcappproviderregistrationregistrationmodulengfactoryjs module found error ca nt resolve angularrouterngfactory tmpngissuesrcappproviderregistration error srcapppublicpublicmodulengfactoryjs module found error ca nt resolve angularrouterngfactory tmpngissuesrcapppublic", "d": "8/2018"}, {"body": "confirm error angularrouterngfactory one interestingly appears second incremental rebuild initial dev build works first src file save works saving file boom", "d": "8/2018"}, {"body": "problem upgraded initial build works change anything save quote dcsmarremolt boom help", "d": "8/2018"}, {"body": "workaround downgrade hard code angular packages excluding cli one matter bug likely introduced", "d": "8/2018"}, {"body": "cheers dcsmarcremolt try currently making offline changes running changing something getting error message stopping running phew edit yep fixing packages works thanx dcsmarcremolt", "d": "8/2018"}, {"body": "need pin packages nt know one faulty one keep sync regular angular packages including seem upgraded safely", "d": "8/2018"}, {"body": "looks like", "d": "8/2018"}, {"body": "comes second consecutive incremental builds", "d": "8/2018"}, {"body": "think similar one connected router module packagejson npm start", "d": "8/2018"}, {"body": "zaphyre relied router modules yes happened second watch rebuild common point aot", "d": "8/2018"}, {"body": "mikastark okey fits happens even first run", "d": "8/2018"}, {"body": "euh everyone seems issue never first build second also lot dependencies may compatible angular use native angular utilities dependencies use potentials errors may find", "d": "8/2018"}, {"body": "one add list started getting errors updated latest cli p", "d": "8/2018"}, {"body": "mikastark yeah may switch angular utils working bother found webpackconfigjs change error gone erased nt know crucial still run app issues", "d": "8/2018"}, {"body": "toverux workaround worked well pin angular compiler compilercli", "d": "8/2018"}, {"body": "going back angular seems workaround seems like regression antiupgrade behavior need angular team fix", "d": "8/2018"}, {"body": "mikastark curiosity reason need serve aot problem serve without aot wondering might get trouble someday need serve aot well", "d": "8/2018"}, {"body": "mean serving developer locally machine", "d": "8/2018"}, {"body": "need serve translation projet huge lot countries supported must verify work directly translated content aot dynamically", "d": "8/2018"}, {"body": "three reasons aot default believe means recommended option generated code similar production code less like hit unforeseen bugs use one less polyfill", "d": "8/2018"}, {"body": "got problem upgraded tried downgrade remove every global modules still occurred fix meaning label ca nt work", "d": "8/2018"}, {"body": "mikastark downgrading angular cli useless need use pin two compiler components", "d": "8/2018"}, {"body": "thanks tried global modules", "d": "8/2018"}, {"body": "sorry didnt know going visible", "d": "8/2018"}, {"body": "issue fixed downgrading", "d": "8/2018"}, {"body": "confirm issue fixed downgrading angularcompiler guys updates", "d": "8/2018"}, {"body": "confirm bug also", "d": "8/2018"}, {"body": "downgrading nt resolve livereloading using aot lazy loaded modules", "d": "8/2018"}, {"body": "multiple commenters reported downgrading packages even downgrading packages solve issue among group able stop getting error downgrading rest packages time writing root problem uses project imports try find module module missing package causes module resolution error lower use need import module", "d": "8/2018"}, {"body": "downgrading case regressive attitude problem must fixed without workaround", "d": "8/2018"}, {"body": "looks like fixed angular", "d": "8/2018"}, {"body": "fixed angular thanks", "d": "8/2018"}, {"body": "fixed angular", "d": "8/2018"}, {"body": "sorry found issue reinitializing form working", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "phantomjs nt supported browser tried adding appropriate polyfills", "d": "8/2018"}, {"body": "thanks tip uncommented polyfills works phantomjs googlebot future reference anyone runs missing polyfill led error wonder something could enabled default obviously phantomjs nt common platform angular apps seems like could big impact peoples seo googlebot renders white screen", "d": "8/2018"}, {"body": "closing resolved believe polyffil included default please open issue cli repo btw got headless chrome phantomjs usage avoided", "d": "8/2018"}, {"body": "issue moved angularcli", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "yagizayer code interface final js code ts typing", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "owlstack code snippet looks like specifically issues material form components test without material components event fires expected looks like issue issue tracker replicate without material please open new issue minimal stackblitz repro", "d": "8/2018"}, {"body": "exists also constructor overload accepts method currently ca nt specific type", "d": "8/2018"}, {"body": "possible http verbs nt possible http verbs string value valid http method methods registered officially also define new methods specific domain", "d": "8/2018"}, {"body": "joostk ah hurry overlooked constructors thanks trotyl yes knew overlooked overloaded constructors thought type accordingly thanks", "d": "8/2018"}, {"body": "based log seems requests try hit network first served browser cache show would help could provide repo minimal reproduction grin", "d": "8/2018"}, {"body": "tried rebuild see debug information call network made redirect network exception see network activity like prev one time instead calling network attempts fails sure ok however changed anything navigate many times back forward want case reported issue could see network activity debug mode see failed gogle analytics requests behaviour correct yes idea started work working another tasks weeks btw imagination requests comes sw also ps topic way prvent google analytics calls offline", "d": "8/2018"}, {"body": "new behavior seems correct requests little gear front originate sw go network expected offline requests without gear made app handled sw returns response cache since network request failed expected going close since everything seems work expected grin regarding analytics nt know way avoid calls offline nt think reliable way know offline anyway", "d": "8/2018"}, {"body": "close ofcourse bahaviour befor demo rebuilding like times everything surprised stopped working guarantee would stop working", "d": "8/2018"}, {"body": "also reproduction directive selector hello providers provide view useclass simpleprovider export class supportdirective component selector hello template viewproviders provide view useclass viewprovider export class hellocomponent content simpleprovider view viewprovider content null view simpleprovider", "d": "8/2018"}, {"body": "returning false handler cancels event point view works intended", "d": "8/2018"}, {"body": "nt behave clickclick clicksubmit though", "d": "8/2018"}, {"body": "could give exact steps click expect happen demo lots buttons clear think happen button nt time reverse engineer intent", "d": "8/2018"}, {"body": "sure thought explanation issue would become clear bad part two elements one nested hence name inner outer click listener emits alert outer element listener also returns either true false null first part headline clicks simply two divs click listener click inner show inner alert outer alert expected outer listener returns false second part inner elements forms nt click listener submit listener part also works expected outer listeners return null andor true click submit listeners inner outer called third part outer listener returns false clicking submit outer listener called also returning false handler cancels event point view works intended let inner listener return false first part listeners called updated example bit explanation would expect case call listeners click inner element", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "thanks submitting issue taken look angular style guide prohibit using prefix guideline says consider meaning guideline generally followed neither must avoid makes sense app organization angular team offered recommendation angular built top typescript think reason sufficient possible angular recommends following typescript best practices however see point typescript describes guideline contributors typescript site thanks link chosen many team consistency feel free adopt team prescriptive guideline typescript community sites consistent neither prohibits prefix interface names sure angular style guide change necessary angular makes recommendation supporting link typescript said going let igorminar weigh", "d": "8/2018"}, {"body": "filename request provide information sentences consider naming interface without prefix typescript guidelines discourage prefix", "d": "8/2018"}, {"body": "possibly fix provided updatevalueandvalidity method formsjs run fields instead parent case onchange event", "d": "8/2018"}, {"body": "nehareeka nt enough information description investigate issue code think bug angular forms please file new issue minimal stackblitz reproduction closing nt actionable", "d": "8/2018"}, {"body": "look documentation especially difference states transitions", "d": "8/2018"}, {"body": "relates", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "rothsandro local references case work scoped given view ca nt expect defined one component view available another component view like local variables javascript available scope defined want reference external template pass explicitly closing invalid", "d": "8/2018"}, {"body": "look like angular issue please file cli issues angularangularcli tracker", "d": "8/2018"}, {"body": "dupe", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "worries making minimal production helps lot identifying problem", "d": "8/2018"}, {"body": "dupe", "d": "8/2018"}, {"body": "routes array needs analyzed aot compiler ca nt runtime checks consider routes array provided constant", "d": "8/2018"}, {"body": "please provide minimal reproduction create new angular cli project share repo link", "d": "8/2018"}, {"body": "usually would think would bit overkill reproduce change approot body pretty simple really", "d": "8/2018"}, {"body": "maidl could please add stackblitz make sure issue time zone", "d": "8/2018"}, {"body": "vicb updated original report opinion issue nt nt rely time zone matter many hours zoneshifted locale set european country first day week always monday", "d": "8/2018"}, {"body": "setting nt inherited children maybe best filed feature request would need evaluated whether something added way nt break current api adding child config without changes example works fine nt solve issue please file new issue feature request allow inheritance option complexity inheritance crossing lazyloaded boundary think could cause unexpected behavior allow inheritance across lazyloaded modules would need think bit work use cases", "d": "8/2018"}, {"body": "explanation nt make logical sense resolver nt declared child nt belong dozen child states thousand saying set every single one resolvers lower tree nt want run every navigation child state controlling lifecycle dependency declared parent suggesting uselessly blunt instrument total violation encapsulation furthermore resolver run demonstrated fact resolver executes parentcomponent gets updated value thought whole point resolvers single load share resolved value children different components different view resolved value runs completely contrary entire purpose resolves seems like whole resolve capability angular router cloned badly ui router without real understanding work appreciation real world usecases needed solve things stand would better rip entirely tell people use state management system like ngrx rather waste time trying use halfbaked solution limited misdesigned fundamentally broken", "d": "8/2018"}, {"body": "jonrimmer children get initial data child route components subscribed data changes notified", "d": "8/2018"}, {"body": "mlcmlapis initial navigation happens resolver runs resolved value supplied data collection parent activated route children depending setting controls whether data inherits empty child routes default child routes actually want time second navigation resolver runs new value supplied children basic flow boils initial navigation resolver runs producing value parent gets child gets second navigation resolver runs producing value b parents gets notified new value b child get notified make kind sense", "d": "8/2018"}, {"body": "jonrimmer understand correctly talking static snapshot data subscribed ones right exactly effect even component using snapshot data route like switching initially gets correct value updated route", "d": "8/2018"}, {"body": "mlcmlapis look stackblitz example supplied subscribing observable getting value snapshot crazy fact observable makes think would get updated right nt totally bizarre api design", "d": "8/2018"}, {"body": "jonrimmer ah see bug design problem exactly cover config right related already existing issues", "d": "8/2018"}, {"body": "mlcmlapis please read earlier posts thread including jasonaden replies", "d": "8/2018"}, {"body": "jonrimmer maybe working previous versions following post written without code", "d": "8/2018"}, {"body": "mlcmlapis post cover issue deals inheriting data initial navigation changes due resolver running second time", "d": "8/2018"}, {"body": "jonrimmer hmm right nt understand also principle applied subscribed observables logic also nt idea limited static data", "d": "8/2018"}, {"body": "rjitendra read doc first cases work component instance component destroyed recreated reason simple performance code able react available events reinit state without reinstantiation", "d": "8/2018"}, {"body": "rjitendra agree mlcmlapis checked ngondestroy wo nt trigger either need update something view try another approach suggest subscribe route also consider moving inside ngoninit finally use parammap instead params", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "8/2018"}, {"body": "already current behavior ivy lifecycle hooks determined runtime compiler one exception real lifecycle hook", "d": "8/2018"}, {"body": "question typo errors compile aot use standard ts tutorial welldescribed issue", "d": "8/2018"}, {"body": "andriididkivsky nothing angular want read write undeclared property need bypass typechecking", "d": "8/2018"}, {"body": "trotyl ok thanks lot thinking could fixed compiler level", "d": "8/2018"}, {"body": "providers need statically analyzable ca nt change way supported use instead", "d": "8/2018"}, {"body": "even case factory ie return object browsers return", "d": "8/2018"}, {"body": "stable rate actually packagespecific stats entire rate nt make sense basic concept angular labs detailed packages rate testing lib excluded packages total stable deprecated stability note common fns debug labs jit ssr experimental experimental bridge experimental bridge real stability high enough could elaborate think stable still experimental", "d": "8/2018"}, {"body": "showing api browser", "d": "8/2018"}, {"body": "api talking", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "nt idea mean", "d": "8/2018"}, {"body": "list appears empty pc phone wed aug trotyl yu notifications githubcom wrote image image nt idea mean receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "device name os browser name version console error plugin used remove retry service worker enabled clear retry basic info report web application issue", "d": "8/2018"}, {"body": "today working", "d": "8/2018"}, {"body": "try achieved similar functions", "d": "8/2018"}, {"body": "thanks generally agree list items address upcoming release unlikely make point idea allow many use cases dealing history including allowing treebased approach well allowing jump trees done mobile apps unfortunately nt think available months definitely radar", "d": "8/2018"}, {"body": "cc alexeagle", "d": "8/2018"}, {"body": "could provide reproduction stackblitz", "d": "8/2018"}, {"body": "source willing contribute sure desired behavior", "d": "8/2018"}, {"body": "one platform injector way works intended error would useful pr error would accepted", "d": "8/2018"}, {"body": "mhevery real problem browser nt see technical problem allowing moreover one different realms page even global variables shared", "d": "8/2018"}, {"body": "looking adding new observable apis router make type thing easier hopefully help resolve", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "validate manual copy paste runtime maintained dom via js sense", "d": "8/2018"}, {"body": "bad duplicate question however answers op question nt really enlightening enough unfortunately put differently way use viewencapsulationemulated default see added tags runtime elements tags nt allowed described rules mlcmlapis procedure validation html uri file direct paste sense explained im getting sense might trying accomplish something nt meant biggy possible use viewencapsulationnone configure css accordingly", "d": "8/2018"}, {"body": "way means native solution based specs", "d": "8/2018"}, {"body": "relies attribute achieve encapsulation effectively provides namespace component type nt built way thing without attribute angular compiler generates css like matched renderer applies attribute could override without hacking going break encapsulation achievable probably great idea think could possibly make configurable though use something like", "d": "8/2018"}, {"body": "mlcmlapis shadowdom option sufficient yet since support multi browser access robwormald great stuff thx indeed prefixing generated tags get rid validation errors stated earlier would nice configurable", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "fixed released tomorrow", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "oh understand", "d": "8/2018"}, {"body": "piernik use input wrapper still matching directive directive intended work element directive esp add custom accessor logic remove input put right path still problems setting form please try posting question stackoverflow using tag", "d": "8/2018"}, {"body": "kara issue thank much saved lot grey hair", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "anyone reply please", "d": "8/2018"}, {"body": "hi abhiron problem server unknown window object use block code run browser ts constructor inject platformid private platform object ngoninit isplatformbrowser thisplatform run browser specific code like windowalert run browser", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "zouyoushun writing way told inject platformid isplatformbrowser throwing error red underline", "d": "8/2018"}, {"body": "browser always follow redirect without javascript code knowing presumably way differently moment time could try use standard apis without framework library notice simply possible ever see redirection response mistaken wo nt even show separate network response subsequent request web inspector post suggests", "d": "8/2018"}, {"body": "joostk yes right browser redirect really happening browser rendering returned page know angular interpreting returned page response original request", "d": "8/2018"}, {"body": "joostk th point right direction debuging zonejs zones understand happening hood firts mistake made expecting different browser redirect xhr request said javascript nt know nothing redirect response fact zonejs never scheduled redirection request driving crazy fact angular end handling redirect response assumption due angular register xmlhttprequestaddeventlistenerload type redirection browser makes xhr received response", "d": "8/2018"}, {"body": "use name reserved reference object nt make variable named", "d": "8/2018"}, {"body": "yeah expected nogo var interface aspnet mvc app also hosting angular app check change name mvc site", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "article gives pretty good overview use case would go", "d": "8/2018"}, {"body": "ended actually pretty simple directive however two things nt like guards anything redirect change guard returns truefalse redirects page guard failure directive end redirecting instead hiding element thiselementrefnativeelementstyledisplay hasaccess block none better solution simple hide act like ngif nt even render element unless evaluates true implementation directive import directive elementref injector input oninit angularcore import activatedroute router angularrouter directive selector appguard export class guarddirective implements oninit input guards private readonly elementref elementref private readonly activatedroute activatedroute private readonly router router private readonly injector injector constructor elementref elementref activatedroute activatedroute router router injector injector thiselementref elementref thisactivatedroute activatedroute thisrouter router thisinjector injector async ngoninit promise const canactivateinstances thisguardsmap g gt thisinjectorget g const results await promiseall canactivateinstancesmap ca gt cacanactivate thisactivatedroutesnapshot thisrouterrouterstatesnapshot const hasaccess resultsfind r gt r false false true thiselementrefnativeelementstyledisplay hasaccess block none", "d": "8/2018"}, {"body": "update want differ running guard logic vs hadling redirects discussed first issue previous post check stateurl appears length running directive whereas someone actually hit page something array", "d": "8/2018"}, {"body": "reliable way sw know angular app served sw indeed unregister fetching results enough usecase provided api server appropriately configured furthermore browsers nt cache sw script hours default would cause sw get unregistered well sounds like something else going happy investigate provide minimal reproduction specific info indicating behavior described", "d": "8/2018"}, {"body": "gkalpak sw indeed unregister fetching ngswjson results exactly point websitescms may might redirect else instead", "d": "8/2018"}, {"body": "know like said possible sw guess backend grin able configure server return script unregisters sw script already provided even possible sw unregistered browser failing fetch file max hours fwiw understand inconvenient especially different usually handle removed moved scripts serviceworkers little special require specially handling", "d": "8/2018"}, {"body": "literally changed nothing local server work offline anymore", "d": "8/2018"}, {"body": "similar issue remote server get error fetching script bad gateway happens principly assets files files linked css via url tried making brand new project going back angularcli angularpwa nt help", "d": "8/2018"}, {"body": "sorry nothing without minimal reproduction happy investigate provide one btw might find useful sw debugging info", "d": "8/2018"}, {"body": "saw suggested elsewhere try get", "d": "8/2018"}, {"body": "probably means sw installed case ca nt indeed provide debug info", "d": "8/2018"}, {"body": "repro steps put image assets stylescss add copy content dist folder distant server apache case go site go offline reload background disapears gateway timeout image", "d": "8/2018"}, {"body": "gkalpak tried versions suggested well ones comment one works local nginx offline function got ngswstate work get following believe fixed first error hashing included case relevant", "d": "8/2018"}, {"body": "adnathanail fixed hash mismatch error nt see anything nt work expected far tell log posted andreylapchik different issue works use using absolute url instead relative one might break cases problem handles relative urls ie use relative url cli create toplevel use instead one assets since sw cache new image file available offline course update cache toplevel images would argue cli behavior breaks feel free open issue angularcli repo", "d": "8/2018"}, {"body": "gkalpak check updated aborted failed fetch part normal running service worker local server working fine nt anything ngswstate errors appear everytime go offline", "d": "8/2018"}, {"body": "offline seems case based log expected fetching files fails checking updates aborted", "d": "8/2018"}, {"body": "ok service worker fails job serve cached files instead get", "d": "8/2018"}, {"body": "ca nt tell without minimal reproduction grin", "d": "8/2018"}, {"body": "andreylapchik gave one earlier obviously minimal put real server issue", "d": "8/2018"}, {"body": "explained andreylapchik issue something different", "d": "8/2018"}, {"body": "ahh sorry ok quite long open go offline dev tools killing refresh works fine upload build server serve preferably nginx like go url server go offline refresh http open url new tab make either tab offline refresh serve cached files implying open tab maybe keeping service worker alive something nt really know service worker works", "d": "8/2018"}, {"body": "tried something similar seems work fact works using one http server breaks another indication something wrong nginx configurationsetup publicly accessible deployment nginx reproduces error", "d": "8/2018"}, {"body": "mean like link", "d": "8/2018"}, {"body": "yes", "d": "8/2018"}, {"body": "mind email", "d": "8/2018"}, {"body": "nope", "d": "8/2018"}, {"body": "future reference adnathanail able figure offline ftp client replacing newlines caused contentbased hashes served files match expected hashes computed old newlines", "d": "8/2018"}, {"body": "temporary fix apply solution", "d": "8/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "8/2018"}, {"body": "closing issue follow issue template please file new issue follows template gives team information needed investigate", "d": "8/2018"}, {"body": "normally event triggered jqlitejquery used angular removing element nt see reason trigger event meantime augment trigger event use class instead upgraded components ts import upgradecomponent angularupgradestatic export class augmentedupgradecomponent extends upgradecomponent ngondestroy superngondestroy elementtriggerhandler destroy demo", "d": "8/2018"}, {"body": "reason trigger root element captured nested elements something like working cases gives another error fails inside angularjs block understand triggers second scope dispose fails property set something also wrong way angular upgrade disposes scopes", "d": "8/2018"}, {"body": "llrandom provide minimal demo showing failing usecase extend demo", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "nomanahmedkhan issue angular material component please file angular material repo", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "suggestion address allow appbasehref absolute url", "d": "8/2018"}, {"body": "issue makes sense please provide github repo stackblitz would show problem running app something would like help community contribution", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "hi trotyl would nice nt blunt issue referenced version closed year ago guide material following learn angular using code worked author digging seems due event filtering working expected code code fires events even though asking navigationend event workaround checking event instance navigationend case issue angular apologies posting issue early new angular amp typescript", "d": "8/2018"}, {"body": "mattrobins", "d": "8/2018"}, {"body": "trotyl mentioned", "d": "8/2018"}, {"body": "maartentibau sorry due github autocomplete popup", "d": "8/2018"}, {"body": "trotyl aha smile probs bit confused", "d": "8/2018"}, {"body": "thanks mwalter docs longer receiving updates issue fixed latest version docs pr lands closing duplicate", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "looks code component instance written able reinit requesting destroying actual component instance creating new one symptom rethink concept probably look case way applying route like changing route also nt create new component instance", "d": "8/2018"}, {"body": "written component destroy subscribes data resolver suggest reload data resolver route change", "d": "8/2018"}, {"body": "ok expected fine requesting simple syntax reload guards resolvers reroute route probably global default setting would apply routes right", "d": "8/2018"}, {"body": "routes possible want able control case per case", "d": "8/2018"}, {"body": "oh ca nt see sense could set global level right option route level would suggest concretely exactly need right", "d": "8/2018"}, {"body": "method routereload could call code problem would solved set runguardsandresolver always resolver component run always whether want run", "d": "8/2018"}, {"body": "options could use first two use standard different query param could timestamp need", "d": "8/2018"}, {"body": "ok\u00e9 timestamp url timestamp pretty live", "d": "8/2018"}, {"body": "pr merged based already knowingly breaking change note", "d": "8/2018"}, {"body": "trotyl probably aware comments agree technically breaking change public api guarantees exclude usecase", "d": "8/2018"}, {"body": "joostk yes either requesting changelog documentation public api scope extension would valid fyi known fact nt", "d": "8/2018"}, {"body": "trotyl nt understand aggressiveness nt prs issues indexed head known might others protip also true way around setting facts straight think go changelog", "d": "8/2018"}, {"body": "shlomiassaf issue nt fill template follow contribution guide aggressiveness even really public api still valid issue related knowing prs", "d": "8/2018"}, {"body": "trotyl turning argument nothing nt like attitude filled issues repo nt feel one required verbose template message clearer way especially technical thing anyway think think different fine good luck", "d": "8/2018"}, {"body": "setting facts straight think go changelog shlomiassaf agree documentation request nt want bother fill issue template could please least update title prevent misunderstandings regards", "d": "8/2018"}, {"body": "trotyl amp shefalisinha let keep civil follow intended subclassed hence nt consider breaking change sure anything actionable close ps sorry broke", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "venkateshreddypala nt look like angular issue think bug angular cli post issue tracker since looks like question stackoverflow best bet", "d": "8/2018"}, {"body": "error implies hash received file different hash computed build time basically contents different impossible tell causes could something modifying file hash computed server proxy modifying file fly using outdated file less likely case issue setupappbuild process ca nt investigate without minimal reproduction closing nonactionable still think bug feel free open new issue providing necessary info including minimal reproduction", "d": "8/2018"}, {"body": "gkalpak ok try investigate one question none situation mean one file ca nt updated whatever situation app nt update cache nt get updated guess nt update correct", "d": "8/2018"}, {"body": "yes correct hash mismatch even one file whole manifest aka considered invalid sw enters degraded mode serves existing clients previous good version app new clients served sw good manifest aka detected nt result hash mismatch errors", "d": "8/2018"}, {"body": "ahnpnl", "d": "8/2018"}, {"body": "mlcmlapis thank works nt know webstorm suggests use template instead think bit documentation events would bit helpful people wants use event binding events", "d": "8/2018"}, {"body": "ahnpnl", "d": "8/2018"}, {"body": "ah see guide documentation class thank", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "add repo reproduce", "d": "8/2018"}, {"body": "closing issue follow issue template please file new issue follows template gives team information needed investigate", "d": "8/2018"}, {"body": "yeah looks like missed moving array format quick fix", "d": "8/2018"}, {"body": "joostk fyi going close issue early keep track issues involving ivy implementation details github appreciate flagging problem move internal issue tracker", "d": "8/2018"}, {"body": "kara please also review following one", "d": "8/2018"}, {"body": "sorry issue caused angular please contact author project ngxcharts file issue issue tracker", "d": "8/2018"}, {"body": "yeah issue nt look like belongs repo please file ngxcharts", "d": "8/2018"}, {"body": "hmm mistake sure post ended sorry", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "enough information issue actionable please follow template believe broken", "d": "8/2018"}, {"body": "appear bit weird angular version thing going angular used nt think cause issue though seen stuck builds well running also windows weird thing changing file caused process restart finish successfully perhaps could try something similar", "d": "8/2018"}, {"body": "reported reproduce directly", "d": "8/2018"}, {"body": "looks like cli issue please open trotyl mentioned", "d": "8/2018"}, {"body": "joostk trotyl kara thanks reported angular cli", "d": "8/2018"}, {"body": "relates caused definitely bug attribute value always casesensitive ps related router", "d": "8/2018"}, {"body": "hi kara related anything relies also completely broken ivy per", "d": "8/2018"}, {"body": "fixed still issue latest version please open new issue providing necessary details including minimal reproduction", "d": "8/2018"}, {"body": "ok seeing fixed thx", "d": "8/2018"}, {"body": "piernik normally many custom validators wrapped default ones additional functionality need data structures returned errors one services validators call", "d": "8/2018"}, {"body": "closing duplicate please track existing issue", "d": "8/2018"}, {"body": "closing issue follow issue template please file new issue follows template esp regarding minimal repro stackblitz gives team information needed investigate", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "closed duplicate", "d": "8/2018"}, {"body": "exactly mean taking means", "d": "8/2018"}, {"body": "compilation webpack angular project without aot im reporting compilation takes seconds ca nt use browser", "d": "8/2018"}, {"body": "hmm using pure compiler jit sec means immediately size project relevant bigger smaller compiles incrementally per module", "d": "8/2018"}, {"body": "thank give try", "d": "8/2018"}, {"body": "browser freezes angular compiles templates browser dev mode", "d": "8/2018"}, {"body": "browsing sites upon compilation site im developing anyway thanks interest feedback try switch webpack tscngc", "d": "8/2018"}, {"body": "anyway fixed ivy jit appspecific types likely fixed view engine", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "piernik understand confusion discussed decided keep validator names sync native property names error messages sync native validation errors likely change given break many existing apps", "d": "8/2018"}, {"body": "closing issue follow issue template please file new issue follows template gives team information needed investigate", "d": "8/2018"}, {"body": "closing issue follow issue template please file new issue follows template gives team information needed investigate", "d": "8/2018"}, {"body": "idea passing function reference via sounds really strange looks like rethink logic certainly much angularic way get final goal", "d": "8/2018"}, {"body": "hi mlcmlapis completely agree gross third party component need use rather roll options limited anyways restarted vs code seemed remove intellisense error apologies tried first", "d": "8/2018"}, {"body": "return statement implied angular statements intentional since planning adding statement vocabulary", "d": "8/2018"}, {"body": "still disagree wrong thing behave much differently vanilla html fwiw angulardart gave feature least behavior documented", "d": "8/2018"}, {"body": "happens sw keeps list hashes known files including receiving file server compares stored hash hashed content see match hash based content critical modifying content hash computed hash mismatch currently working expected maybe could open issue cli add support way hook build process specific times ie generated hash computed workaround could run following command end recompute hashes might unexpected sideeffects nt thoroughly tested", "d": "8/2018"}, {"body": "error occurs running source codes seems check setting navigate includes makes error", "d": "8/2018"}, {"body": "yeah sounds reasonable think fixed confirm jounqin", "d": "8/2018"}, {"body": "duplicate fixed", "d": "8/2018"}, {"body": "please provide complete sample similar service", "d": "8/2018"}, {"body": "unless messed viewencapsulation component css applied locally using attributes", "d": "8/2018"}, {"body": "ca nt recreate stackblitz works intended odd app create webstorm issue must local issue", "d": "8/2018"}, {"body": "closing repro", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "sudhirkumart let primeng folks investigate first eventually open issue determined root cause angular side please open primeng repo thnx", "d": "8/2018"}, {"body": "duplicate already documented router guards require observable complete meaning emitted values", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "please help issue c usersnoargsdocumentsangularmyapp ng serve angular live development server listening open browser date hash time chunk main mainjs mainjsmap main kb initial rendered chunk polyfills polyfillsjs polyfillsjsmap polyfills kb initial rendered chunk runtime runtimejs runtimejsmap runtime kb entry rendered chunk styles stylesjs stylesjsmap styles kb initial rendered chunk vendor vendorjs vendorjsmap vendor mb initial rendered error ansihtml module parse failed unexpected character may need appropriate loader handle file type binsh basedir dirname echo sed e g failed compile", "d": "8/2018"}, {"body": "must say microsoft released products many systemic install problems would never hear end whether npm setting environment variables working powershell angular cli creating many issues really want shoot wasted hours hours stupid bugs caught least documented farkin frustrated crap", "d": "8/2018"}, {"body": "farhane missed basic fact angular primarily spa application extra cases run multiple angular apps one window case certainly case also angular elements based web components could used cases", "d": "8/2018"}, {"body": "yes want run multiple application separately want able route main application sub applications il project nt know possible", "d": "8/2018"}, {"body": "farhane sure nt create separate apps using term point see thing angular docs", "d": "8/2018"}, {"body": "embded main application", "d": "8/2018"}, {"body": "farhane please nt use issue channel question support channel use gitter channel instead", "d": "8/2018"}, {"body": "ok thank", "d": "8/2018"}, {"body": "farhane kind close issue", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "another test nt seem caused lazy modules happens upon redirection app root child route", "d": "8/2018"}, {"body": "splincode ericmartinezr trotyl updated issue able find information please review", "d": "8/2018"}, {"body": "add stackblitz example", "d": "8/2018"}, {"body": "splincode original repo private created temp one go", "d": "8/2018"}, {"body": "public", "d": "8/2018"}, {"body": "trotyl remove remove stylesscss", "d": "8/2018"}, {"body": "remove barrel usage library would work eg inheritance metadata extraction", "d": "8/2018"}, {"body": "trotyl ok anything done allow barrels future", "d": "8/2018"}, {"body": "ivy library would publish compilation results directly longer need recompiled app likely fixed nonivy code messy", "d": "8/2018"}, {"body": "trotyl thanks help updated title mention barrels also close issue like", "d": "8/2018"}, {"body": "guess also get updates latest version separate issue better error message valid ps part angular team", "d": "8/2018"}, {"body": "trotyl sounds good maybe", "d": "8/2018"}, {"body": "possibly make sense take gde first step goal totally offtopic", "d": "8/2018"}, {"body": "mhevery adding label mean able use barrels ivy", "d": "8/2018"}, {"body": "best guess trying judge error message using require statement somewhat like following try looking code external module use conform import method module resolution", "d": "8/2018"}, {"body": "nt see require statement code using find project regex got match pretty sure", "d": "8/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2018"}, {"body": "igorminar point issue warning message nt provides information issue ca nt provides information problem", "d": "8/2018"}, {"body": "sure related ca nt see problem describe better comment steps done reproduce problem waiting minute still also could dependent timing", "d": "8/2018"}, {"body": "mlcmlapis open stackblitz via link wait minute random happen everytime wait min click show button captcha works captcha component template ngcontent error unsupported browser", "d": "8/2018"}, {"body": "recaptcha used detached element nothing angular get exact behavior vanillajs", "d": "8/2018"}, {"body": "trotyl seen example work ngif ngcontent", "d": "8/2018"}, {"body": "understand detached element", "d": "8/2018"}, {"body": "removed dom still see difference ngif directly ngif component template ngcontent", "d": "8/2018"}, {"body": "detached means rendered document second case rendered first place", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "thank closing moving issue component author", "d": "8/2018"}, {"body": "another problem input filed type text changed value browser strange behavior angular expecting every thing property component class disappointed framework regards toma\u017e", "d": "8/2018"}, {"body": "think bad approach new instance created every change detection cycle would better bind component property specific error mention triggered trying bind underlying instance directive element directive selector excludes elements directive see reason template variable always null", "d": "8/2018"}, {"body": "mix reactive template forms ver remove mixing ngmodel", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "afaiu trying add html translated message supported use case see bug fix landed escaping bug", "d": "8/2018"}, {"body": "trotyl mentioned intended behavior", "d": "8/2018"}, {"body": "case since made const enum never emitted js symbol notice however compiler api surface considered private guess codelyzer recompiled also enum values substituted", "d": "8/2018"}, {"body": "joostk mentioned codelyzer using private close issue responsibility consumer handle changes nonpublic apis", "d": "8/2018"}, {"body": "unfortunately happening add control instance added flat key new control added using search using key separator start trying find control cz fail exist returning function expecting provide dotseparated string fix simply parse key name dots add control way something like nt tested code assumes nt duplicate key names chain", "d": "8/2018"}, {"body": "simply use", "d": "8/2018"}, {"body": "manklu thank something needed didnt know option using guess close issue", "d": "8/2018"}, {"body": "trotyl igorminar updated main post reproduction example", "d": "8/2018"}, {"body": "perform checking canactivate rather resolver case need make two requests post first one guard check existence second resolver actually request post even case mistaken wo nt able get want url page shown want redirect resolver let success wait next tick nt think ugly hack require adding additional logic page components handle empty data cases", "d": "8/2018"}, {"body": "telling angular nt provide easy way mimic behavior known server framework show requested url common rootlevel page", "d": "8/2018"}, {"body": "resolver meant provide unified data parameters invalid data way tell angular revert back previous url thought exactly situation quote however might always case example user lands page nt permissions might want application show target url message saying user nt permissions way user copy url perform refresh point would remain page difference want show page", "d": "8/2018"}, {"body": "please kindly tell known server framework redirect resolver thing resolvers server frameworks know resolver controller component rails controller example choice whether render template depending data get angular nt option return post resolver call input wrap component template case rendering exception try access properties use everywhere even worse", "d": "8/2018"}, {"body": "agreed sounds likes legit bug related cleared previous offtopic discussions", "d": "8/2018"}, {"body": "facing issue interestingly docs written exactly mind common use case would updating url early navigation fails show error message url failed hope see fixed soon quite crucial good ux", "d": "8/2018"}, {"body": "technically duplicate", "d": "8/2018"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "8/2018"}, {"body": "reverts rxjs back lock file bump unintentional thanks catch stevenliekens", "d": "8/2018"}, {"body": "added features nothing angular long feature removed compatible sarunint considering happens angular starts using features rxjs gets installed project still rxjs", "d": "8/2018"}, {"body": "gregmagolan thanks quick fix", "d": "8/2018"}, {"body": "bad nt understand question clearly back sorry confusions", "d": "8/2018"}, {"body": "tested build target question locally angular master latest builds fine looks like nodemodules date locally seen error elsewhere compiling older version typescript", "d": "8/2018"}, {"body": "gregmagolan thanks synched latest build works think commit solves issue see error commit even delete bazel caches think ci covered target nt understand passing failed local machine", "d": "8/2018"}, {"body": "trotyl believe feature treeshakeable imagination angular uses decorators store metadata key use set classes decouple interface providers set classes magic happens set classes used file select profile imports occur env files replaced compile time unused providers get removed final build aot profiles put bootstrap ngmodule decorator use environment file typescript environmentts per module providerprofileselectoruse reportmodule file default always included per app providerprofileselectoruse appmodule file providedin root services providerprofileselectoruse root file providedin root services service injectable decorator stores class metadata interface function class along profile eg way injection time constructing metadata providers injectable decorator select provider based profile select profile environment imports located env file", "d": "8/2018"}, {"body": "gagle achieve string token type reference like typescript import reportmodule import filereportservice providerprofileselectoruse reportmodule filereportservice without reference accessible", "d": "8/2018"}, {"body": "nt thing feasible trotyl pointed would break treeshaking imagination part crux closing implement", "d": "8/2018"}, {"body": "oh see title top heroes bit misleading", "d": "8/2018"}, {"body": "tried make understandable looking forward feedback", "d": "8/2018"}, {"body": "thanks good catch fixed", "d": "8/2018"}, {"body": "would suggest asking types questions stack overflow nt believe issue seeing framework issue try checking guide angulario routers details double check routes make sure route setup", "d": "8/2018"}, {"body": "igorminar trying load indexhtml partial page main mvc app already required tags main loaded page indexhtml loads mvc main page already loaded angular indexhtml tag containing htmlheadbody tags second time used work approot always generated first rest script files even without declaring approot body tag without body tag approot rendered scripts indexhtml loads partial view scripts find approot attaching couple pictures explain better mvc app loading indexhtml works fine angular src gt indexhtml content output build angular output build angular", "d": "8/2018"}, {"body": "also bigger angular projects written dedicating parts angular libs brings new features composite declaration tsconfig flags directive cases afaiu would bring even better experience", "d": "8/2018"}, {"body": "prs welcome", "d": "8/2018"}, {"body": "likely also wait tsickle supports typescript", "d": "8/2018"}, {"body": "close", "d": "8/2018"}, {"body": "krokofant look pr", "d": "8/2018"}, {"body": "issue closed pr merged", "d": "8/2018"}, {"body": "see pr closed merged looks weird see merged commits", "d": "8/2018"}, {"body": "cherrypicked tue aug krokofant notifications githubcom wrote see pr closed merged receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "started updated version happens aot", "d": "8/2018"}, {"body": "gkalpak see error thx link assetgroupsurls instead know working", "d": "8/2018"}, {"body": "guess remainder issue potentially resolved unless bugfix tag means something", "d": "8/2018"}, {"body": "correct closing resolved", "d": "8/2018"}, {"body": "thanks pr", "d": "8/2018"}, {"body": "problem thanks helping help", "d": "8/2018"}, {"body": "mlcmlapis helpful look like cool girl beautiful also think need prepare patiently conception thank understanding", "d": "8/2018"}, {"body": "looks like duplicate larger problem forms change detection needs design thought", "d": "8/2018"}, {"body": "closing dupe angular currently nt allow triggering directives property bindings limitation framework needs addressed", "d": "8/2018"}, {"body": "validators pattern email", "d": "8/2018"}, {"body": "project usually validation set validators mainly rules returned errors data structures built ones wrap maybe enhance concrete needs", "d": "8/2018"}, {"body": "validatorsemail accepting email id example gmail invalid without com end example gmailcom valid issue found solution issue accepting email id", "d": "8/2018"}, {"body": "email technically valid", "d": "8/2018"}, {"body": "valid email address answered many years application could use stricter rule business requirement wo nt change valid email", "d": "8/2018"}, {"body": "seems discussion issue closed", "d": "8/2018"}, {"body": "ponkys disagree gkalpak pointed current documentation lacks information current regexp also opinion current regexp needs tests current tests way ensure regexp works", "d": "8/2018"}, {"body": "maxkorz right tests agree terms documentation think angular team nt need explain everything takes search google understand valid email looking forward final decision", "d": "8/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2018"}, {"body": "typo body", "d": "8/2018"}, {"body": "typo routing child", "d": "8/2018"}, {"body": "hi thanks submitting issue may ask question clarification seems include steps example code snippets set things http backend mocked tests simulate interaction remote server also links live example downloadable code section uses angularcommon replacement deprecated angular offer specifics want see missing scenario missing", "d": "8/2018"}, {"body": "note related least one issue ensuring docs angularcommonhttp complete replacement apis clear deprecated angularhttp apis see also", "d": "8/2018"}, {"body": "testing post examples get testing examples", "d": "8/2018"}, {"body": "looks like resolution thanks link trotyl watch seems open question angular platform supports issue contains discussion believe documentation correct complete shadowpiercing descendant combinator deprecated support removed major browsers tools plan drop support angular deep gt gt gt ngdeep ngdeep preferred broader compatibility tools information replacement options publish", "d": "8/2018"}, {"body": "igorminar get chance assessment correct anything add documentation thank", "d": "8/2018"}, {"body": "good point definitely exact matches top list also need enable use literal strings literal word word phrases could search reflective case could search reactive forms get exact matches complete phrase instead matches every variant word reactive word form", "d": "8/2018"}, {"body": "would anyone like take create pr", "d": "8/2018"}, {"body": "anybody review code changes uploaded thanks", "d": "8/2018"}, {"body": "fixed via", "d": "8/2018"}, {"body": "went reproduction steps path locally test project upgraded could reproduce", "d": "8/2018"}, {"body": "makes sense fair enough plans support html preprocessors future", "d": "8/2018"}, {"body": "gregmagolan nt current entry packagejson sufficient think current entry patch would resolve way", "d": "8/2018"}, {"body": "igorminar types zonejs ship zonejs package stub definition pulls zonejs dep trouble ask types using without importing code bazel looks folder nt find definition sure proper solution postinstall workaround needed anymore maybe allowing folders added via attribute tslibrary ngmodule adding would allow types found installed location", "d": "8/2018"}, {"body": "cc alexeagle", "d": "8/2018"}, {"body": "gregmagolan according currently modulestypesdts toolstypesdts cases zonejs reference seems unnecessary tried compile two units without appeared work please verify removing two references getting rid patch sufficient solution problem rather make things complicated need thanks", "d": "8/2018"}, {"body": "igorminar build requires zonejs types remove fails", "d": "8/2018"}, {"body": "think typecheck emit nothing js output nt require", "d": "8/2018"}, {"body": "oops right missed references core package tested resolved seems follow regular node module resolution case tsc find dts file nodemoduleszonejsdistzonejsdts wonder nt seem work tsconfigjson", "d": "8/2018"}, {"body": "igorminar oh interesting must different bazel since nodemodules folder found generated lives typically number folders", "d": "8/2018"}, {"body": "alexeagle maybe need customize nodemodules resolution typescript uses typings rulestypescript tscwrapped solve issue properly well issue jeremy ran today", "d": "8/2018"}, {"body": "alexeagle free lunch first compile error hit error compiling typescript devmode packagescompilerclisrcngtscutil util failed exit error find module path import path path investigate typescript ca nt find bazel like outside bazel", "d": "8/2018"}, {"body": "yeah looked well would require zones published module tricky primarily need able load script module fixing nodemodule resolution bazel seems like something need anyway sooner later recommend", "d": "8/2018"}, {"body": "spent time debugging morning typescript attempting nodemodules resolution types first looks works bazel reference types like file since set found bazel tries secondary lookup using style would actually work even bazel nodemodules file group main workspace angular build nodemodules filegroup external workspace ca nt find nodemodules looks like proper fix override rulestypescript compilerhost reproduce primary lookup teach proper secondary lookup bazel attribute", "d": "8/2018"}, {"body": "fix tslibrary small change angularangular also required ngmodule work lands", "d": "8/2018"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "everyone talks angular support typescript question angularcli still install typescript new project ng new foo install typescript angular", "d": "8/2018"}, {"body": "closing feedback sachinsemlety please open new issue feedback later thanks", "d": "8/2018"}, {"body": "hi confirm ios datepipe make rendering webpage", "d": "8/2018"}, {"body": "little background seeing issue several documentation pages using chrome mac safari seems work ok pages run across far exhibit behavior error console well", "d": "8/2018"}, {"body": "thx extra info krcourville interestingly though extractheadingsafehtml contain call sounds like chrome bug", "d": "8/2018"}, {"body": "add docs", "d": "8/2018"}, {"body": "vicb issue place angularcore file corejs line const headerfiller new array headeroffset fill null would helpful unfortunately reproduce error new clean project generate cli", "d": "8/2018"}, {"body": "splincode thanks suggestions suggested injectable appuserservice actually original omitted initial comment ellipsis brief injectable declaration address underlying conflict bt angular di system concept extending classes typescript extends keyword works expected angular usage constructor arguments di precludes passing instance data attempt create new instances class negative critique angular choices di implementation seems like something addressed clearly docs looking solution ran across large number questions hinged point question bit old good example misconception pretty decent answer giving direction might called angular way use multiple instances service think discussion factory services might good solution", "d": "8/2018"}, {"body": "issue proved troublesome reproduce appeared related publicapis file issue seemed fix could narrow issue something reproducible said angular internal appinits array runinitializers either checking undefined instead throwing nonhelpful error described else code elsewhere angular rejecting problematic initializer nt shoving undefined array first place", "d": "8/2018"}, {"body": "matsko getting error ie object nt support property method fill line failing part angularcore", "d": "8/2018"}, {"body": "hello ajborn atdiff error apparently angular planned uncomment line case uncomment fix ie error globally based staff use uncomment required polyfill", "d": "8/2018"}, {"body": "mhevery well thank comment issue see particular objections aganst first suggested solution try prepare pull request", "d": "8/2018"}, {"body": "similar problem first post solved adding polyfills", "d": "8/2018"}, {"body": "hi tested using link added bug description wont able resolve problem could try test link thanks", "d": "8/2018"}, {"body": "hey yeah right nt solve actual animation probably different bug animation would throw error nt add polyfill sorry", "d": "8/2018"}, {"body": "hi someone workaround help solution use implementing animation thanks", "d": "8/2018"}, {"body": "looks like fixed thanks submitting closing", "d": "8/2018"}, {"body": "lot issue one raised tnicola fix elements initialization run ngzone change detection works still issue setting initial value nt fixed", "d": "8/2018"}, {"body": "hi schneidermk ardiadrianadri faced exactly problem working angularelements microfrontends angular shell problem angularelements zoneless default robwormald said one could think angular app change detection always work nt related change detection lifecycle angular app reasons ngif ngfor routing events dropped element zone cd wo nt work element order get change detection working need run element code ngzone instance pr opened meanwhile try remackgeek library works great cases", "d": "8/2018"}, {"body": "seems still issue time looking compared", "d": "8/2018"}, {"body": "betosalvador nt think anything wrong pre se desired behavior nt really supposed done query parameters trying accomplish relay information way simply stringify way javascript object represented way always come called object default implementation simply returns string order change behavior could add method object something meaningful gets added query params could use normalize adding params object point want object display like following parse display way example object like need write something like following parse appropriate flat representation query params javascript let result string const key obj objhasownproperty key const subkey obj key obj key hasownproperty subkey result resultconcat key subkey obj key subkey amp consolelog result get", "d": "8/2018"}, {"body": "much apparent cdn environments cloudfront redirected indexhtml support pathlocationstrategy scenario way force service worker unregister suggestion adamzr regards handling contenttype texthtml would fix issue use case", "d": "8/2018"}, {"body": "kwilliamscurago setup support specific urls easily serve sw script unregister sw described closing since reproduction originally reported issue works expected afaict", "d": "8/2018"}, {"body": "gkalpak thanks prompt response scenario impossible use ngswworker leads corrupt cache worker tries refresh manifest receives texthtml fails trying parse html json fetchlatestmanifest implementation able fail gracefully least wrapped try catch safety worker right solution manifest must invalidated every deploy means use service worker cloudfront pathlocationstrategy instead must serve contents safetyworkerjs url service worker script trying unregister must continue certain users successfully unregistered old worker sites means serve safety worker old service worker url forever", "d": "8/2018"}, {"body": "worker tries refresh manifest receives texthtml fails trying parse html json fetchlatestmanifest implementation able fail gracefully hm see mean would nt opposed would interested submitting pull request safety worker right solution manifest must invalidated every deploy means use service worker cloudfront pathlocationstrategy sure mean", "d": "8/2018"}, {"body": "sure interested see tackle weekend sure mean yeah sorry realize statement little confusing ended clients corrupt cache deploy guess occurred trying fetch old bundlejs cached indexhtml receiving texthtml try reproduce sure", "d": "8/2018"}, {"body": "issue well used rely updated model value thisformvaluechangessubscribe used work", "d": "8/2018"}, {"body": "yeah nt able get lot traction going yet wanted test waters see spent time make pr might actually merged least discuss acceptable approachcompromise seems like something like would immensely useful may try get pr cuz code speaks louder know angular team super busy gets tons tons issues really sure best way go sort thing", "d": "8/2018"}, {"body": "thanks cwspear taking forwardi eager see get behavior back rewrite bunch code make working nt prefer", "d": "8/2018"}, {"body": "workaround work", "d": "8/2018"}, {"body": "exactly effect makes updates happen next tick things happening asynchronously works okay user cases makes much harder test really start causing problems want things synchronously based changes", "d": "8/2018"}, {"body": "skimmed changelog nt realise implication changes noticed every second form application broken completely agree suggestions thread current behaviour absolutely undesirable", "d": "8/2018"}, {"body": "possible places update filename filename filename", "d": "8/2018"}, {"body": "ran issue well building webpack threw many object nt support property method matches errors page locked died adding polyfill work around", "d": "8/2018"}, {"body": "adnankamili mordka thank thank thank similar issue rather problem put methods service worker broke calls external api fixed mine similarly whitelist api urls opened changed automate fixing creating change", "d": "8/2018"}, {"body": "wisebird change detection works angular change value second time let say type previous value new value overwrite value immediately framework checking previous value new value sees change propagate hook never fires case want force clearing logic run next tick eg wrap", "d": "8/2018"}, {"body": "petebacondarwin remember notice site search animations package shows low api column search results issue", "d": "8/2018"}, {"body": "think problem", "d": "8/2018"}, {"body": "problem happens upgraded components use angularui components angularmaterial problem call triggers first second triggered zonejs", "d": "8/2018"}, {"body": "ran problem well tracked source error fixed outside angular zone called inside ran synchronously regardless issue still makes app way fickle opinion user runs single error seem live hidden cracks app app half dead user refreshes page going work us going monkey patch wrap trycatch using decorator setup reason wrap trycatch way help put together pr something", "d": "8/2018"}, {"body": "wrapping sgtm andrewrheingans submitting pr tht would awesome", "d": "8/2018"}, {"body": "sounds good try get pr ready tomorrow", "d": "8/2018"}, {"body": "sorry nt gotten yet hope soon", "d": "8/2018"}, {"body": "see adding html tags target translation nt work anymore similar issue translation tool used escaped html tags insert html translation original html content target translation working anymore helpful add line breaks bold text etc certain languages solution nt help case", "d": "8/2018"}, {"body": "team facing problem joshpcausey resolve issue", "d": "8/2018"}, {"body": "implemented similar solution like galtonova class javascript import defaulturlserializer urlserializer urltree angularrouter export class myurlserializer extends defaulturlserializer implements urlserializer serialize tree urltree string return superserialize tree replace ww g key part regex used function", "d": "8/2018"}, {"body": "updated issue title applies angularhttp package apis api reference pages need updated cross references replacement apis http guide", "d": "8/2018"}, {"body": "gkalpak repo download nt work move ngcli make repo support webpack", "d": "8/2018"}, {"body": "repo referring udayredi", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "content outdated archived ie updating downloadable broken fix locally definitely recommend trying first", "d": "8/2018"}, {"body": "vottens thanks failing workaround moving issue backlog prioritized right pretty headsdown fixes hopefully get pulled nottoodistant future", "d": "8/2018"}, {"body": "actually problem angular cli serverside rendering custom elements always use rather requiring polyfills compatible node currently angular cli always skip bundle packages forwarding umd bundles code nt fulfill custom elements requirement real type", "d": "8/2018"}, {"body": "rereport issue angularcli repo", "d": "8/2018"}, {"body": "think also question workflow angular elements rendered server side angular element normal custom element processed direcly browser angular say one used got rendered static html server consumed browser browser previous render result server treated content results certainly unexpected result opinion without perfect rehydration process serverside rendering never take angular elements consideration left browser also rehydration support custom elements likely impossible native element content projection process handled browser even future still problem rehydration support angular lands lots marker attributes clear existing content strategy applied angular elements", "d": "8/2018"}, {"body": "one additional note would like mention frameworks like ionic applications scrolling element default document body workaround setting parent elements body position static relative position absolute introduced problems eg modal dialogs backdrops scroll bar issues fixed elements different os different settings feature request possibility register another scrolling element handle multiple elements scrolling router outlets custom elements potential problems multiple nested router outlets possibility set get scroll position one note default scrolling element could parent element router outlet element would maybe need register another one async different router outlets scrolling position components finished loading building desired content perceived performance strikes note yes one could also resolve first data handle perceived performance maybe setting component specific position resolving data", "d": "8/2018"}, {"body": "feature breaks server side rendering asp net using window rendering server", "d": "8/2018"}, {"body": "quite clear way set scroll policy certain routes", "d": "8/2018"}, {"body": "problem inside routepreloader see exists cases empty causes stream hung", "d": "8/2018"}, {"body": "closing wontfix resolved via", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "frustrating angular projects utilize material unable use ts eta get fixed alxhub", "d": "8/2018"}, {"body": "latest angular build bazel angular built source merged building angular danwulff jelbourn working updating angular material well", "d": "8/2018"}, {"body": "gregmagolan tested angular problem still persists simply using generated line like module modulengfactoryjs imports module", "d": "8/2018"}, {"body": "mlcmlapis need make changes bazel build configuration angular guide help feel free post issues run issues", "d": "8/2018"}, {"body": "gregmagolan sure understand using pure compiler project aot compilation nothing else sure base installed npm angular packages direct bazel configuration", "d": "8/2018"}, {"body": "mlcmlapis oh see would different issue one issue specific building angular bazel please file new issue", "d": "8/2018"}, {"body": "gregmagolan ok file think main origin problem existence new code router package", "d": "8/2018"}, {"body": "gregmagolan checked case finally found way configure build path accept used even inside angular packages cases ngfactoryjs files produced compiler wo nt file new issue", "d": "8/2018"}, {"body": "gkalpak agree looks like issue resolved see clearly following filter setting correctly lists decorators", "d": "8/2018"}, {"body": "petebacondarwin resolved", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "wonder rxjs make release fix", "d": "8/2018"}, {"body": "issue aswell used code hlittle added polyfillsts worked like charm", "d": "8/2018"}, {"body": "totyl exact duplicate issue relates styles classes general", "d": "8/2018"}, {"body": "closing since nt enough actionable information please feel free open new issue repro", "d": "8/2018"}, {"body": "issue solve please help update rendering server update console error also setmeta working client side server side", "d": "8/2018"}, {"body": "could provide reproduce repo thanks", "d": "8/2018"}, {"body": "worked tks", "d": "8/2018"}, {"body": "related issue regarding package overview pages showing deprecated", "d": "8/2018"}, {"body": "gkalpak explanation exactly searching thanks taking time write would agree statement documented form even though testing hybrid app ideal state many teams including follow migration path instead rewriting ground experience process discoverytheblindleadingtheblind would loved documentation testing asis using text examples referenced going forward issue ended time errors would great reference issue", "d": "8/2018"}, {"body": "yes need feature load entry component name selector", "d": "8/2018"}, {"body": "angular fucken joke", "d": "8/2018"}, {"body": "must add contenttype allowed headers value nt applicationxwwwformurlencoded multipartformdata textplain see", "d": "8/2018"}, {"body": "manklu hit nail head thank much owe beer ever meet real life", "d": "8/2018"}, {"body": "daemonblade thank beer", "d": "8/2018"}, {"body": "seem hit issue well returning auth guard method angular rxjs", "d": "8/2018"}, {"body": "trying everything get resolved got finger pointing return vs code team clearly pointed address considered bug least feature request beyond clearly breaks limits use sachingacharya lazarljubenovic edit nt something easily configured relates erroneous setting", "d": "8/2018"}, {"body": "thank much help current solution data drivenis like react", "d": "8/2018"}, {"body": "got issue today error nodemodulesrxjsinternalsymbolobservabledts error declarations observable must identical modifiers angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack typesnode version help please", "d": "8/2018"}, {"body": "agnaveen remember missing symbolobservable addition declare global interface symbolconstructor readonly observable symbol symbolobservable string observable used interop export declare const observable string symbol", "d": "8/2018"}, {"body": "error today moved following combination works node angular rxjs typesnode", "d": "8/2018"}, {"body": "vicb ping", "d": "8/2018"}, {"body": "received error updating angularmaterial switching build received error could nt resolve original symbol commonbehaviorscommonmodule tfsrrdefenderngnodemodules angularmaterialcoretypingsindexdts pretty much resigned blow away nodemodules everytime update angular started receiving errors related actual project including circular reference able fix get running third update row delete contents nodemodules curious common", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "maybe vs code thing npm thing nt know somehow file paths symlinked modules direct paths added patientnodemodules spent quite awhile trying hunt issue apparently automated process rewrote file paths appmodulets overwritten file paths", "d": "8/2018"}, {"body": "got past problem mentioned totally makes zero sense", "d": "8/2018"}, {"body": "progress issue causes issues phantomjs tests", "d": "8/2018"}, {"body": "seems one cares issue temporary solutionworkaround prevent errors looks like component class appcomponent disable animations problematic browsers", "d": "8/2018"}, {"body": "janousek solved issue side polyfill added code last one fixing issue added futureproof", "d": "8/2018"}, {"body": "janousek fixed issue using noopanimationsmodule unittest", "d": "8/2018"}, {"body": "updates updated stackblitz reproduction latest angular problem still existing tested safari", "d": "8/2018"}, {"body": "try ng build prod optimizationfalse", "d": "8/2018"}, {"body": "thank much advice sadly able verify effect suggestion near future already changed repos reading comment igorminar promise find free time setup nonworking example try fix approach many thanks picking topic", "d": "8/2018"}, {"body": "closed almost identical issue way solve manually detect changes would nice know better answer", "d": "8/2018"}, {"body": "exactly issue please reopen ticket", "d": "8/2018"}, {"body": "hi guys time ago fix landed zonejs master branch fix issue mentioned please grab zonejs master branch check possible jfyi regards", "d": "8/2018"}, {"body": "looked think saying structure invalid bit harsh packages harm way webpack resolves sideeffects flag bit inconsistent normal resolution given resolution opposite normal module resolution understand implementing resolution module packagejson correctly would require extra machinery needed time recommendation ignore since angular framework packages side effect free component libraries one really needs declare certain paths package side effects done via main packagejson declaring array contains list entrypoints side effects eg see", "d": "8/2018"}, {"body": "update", "d": "8/2018"}, {"body": "closed", "d": "8/2018"}, {"body": "halfist helpful indeed except date value instead", "d": "8/2018"}, {"body": "alaind thanks pointing really depends clientserver contract example maybe want instead solution wanted mimic angularjs behavior need take look date auto convertion replicate even important safely handle reference types arrays work expected returns case objects functions probably objects auto conversion functions think may leave opinion overcomplicating", "d": "8/2018"}, {"body": "well since query params query body nt see point using objects arrays functions never met experience one directly used list parameters http request regarding date always need use current date datenow new date rather filter dates contract backend transferring date properties utc toisostring eg get collection dateproperty lower certain date", "d": "8/2018"}, {"body": "alaind let discuss points since query params query body nt see point using objects arrays functions feel good solution anything much bulletproof possible course wo nt ever treat function query parameter nt mean user software engineer case wo nt likely mistake point handle edge cases gracefully latest angular version allows use string array query parameter example could something like however since native implementation supports string arrays may problem number ones situation could another way pass colors example black white though since using nt care whether string number array conversion result contract backend transferring date properties utc case unix format conversion method works something like number gets converted string assumed user something similar pass plain converted reason mentioned types wanted show type supported course may proceed wanted solution flexible think makes sense rewrite little bit post updated version later", "d": "8/2018"}, {"body": "finally solution utilsservicets import isnil lodashisnil import isplainobject lodashisplainobject import httpparams angularcommon export class utilsservice static buildqueryparams source object httpparams let target httpparams new httpparams objectkeys source foreach key string gt let value source key isnil value return isplainobject value value jsonstringify value else value valuetostring target targetappend key value return target used two helper methods lodash", "d": "8/2018"}, {"body": "context", "d": "8/2018"}, {"body": "jasonaden indeed part platformspecific implementation anything platformindependent would consume abstract token rather provider user always provide different implementation", "d": "8/2018"}, {"body": "mischah thanks even though sure mean", "d": "8/2018"}, {"body": "skjelbek oops thanks corrected comment", "d": "8/2018"}, {"body": "thanks support onurinci really helps", "d": "8/2018"}, {"body": "seems exact problem occurs angular angular cli libraries remove references barrels make work angular cli angular", "d": "8/2018"}, {"body": "reproduced application field sending enabled disabled property another field validator triggering error angular cli node os darwin angular chrome browser", "d": "8/2018"}, {"body": "using dynamic forms library formly issue also using angular", "d": "8/2018"}, {"body": "another phrase really important ca nt matched aio site search ngtemplate actually given aio search go google search find right aio page google results inpage browser search within aio page", "d": "8/2018"}, {"body": "changing order icons nt fix putting faviconico top meta tag also nt fix adding cachecontrol also nt fix guess wait chrome fix bugfeature", "d": "8/2018"}, {"body": "clear sure consider bug feature", "d": "8/2018"}, {"body": "coundt agree manfredsteyer hash strategy suitable one much reasons described really would like strategy could configured already got problem", "d": "8/2018"}, {"body": "believe allow strategy focused version suited one ex app maybe source code production update version build files somehow maybe version packagejson go json file sw check version equals update cache think gkalpak alxhub", "d": "8/2018"}, {"body": "even use timestamp instead version number build new timestamp update cached one different", "d": "8/2018"}, {"body": "workaround think use build change line testing still work offline everything side trigger event every time hash change consequently notify user new version show message every new hash caused external events keep mind user notified new version versionapp think better keeping user old version gkalpak said happen even workaround dev check update event really new version app thing change hash checking version variable exists inside code gkalpak alxhub see sideeffect seeing", "d": "8/2018"}, {"body": "mentioned important sw reliably verify files actually correspond thinks violate sw really ruin app hardtodebug way workarounds proposed prone leaving sw inconsistent even corrupted state completely break app note check must local file way make multiple http requests atomic way example checking file build version wo nt work also mentioned ca nt think strategy computing hash build time embedding content differrent way eg content approach wo nt work file types", "d": "8/2018"}, {"body": "ok gkalpak thanks info maybe json file version timestamp good solution put service worker serviceworker keep files cache timestamp key buildtime line added clarify idea put sw swbuild swbuildjs var fs require fs var new date gettime var file distserviceworkerjs var data fsreadfilesync file read existing contents data var fd fsopensync file w var buffer new buffer const cacheversion fswritesync fd buffer bufferlength write new data fswritesync fd data datalength bufferlength fsclose fd serviceworkerjs tick make cache invalidate update cacheversion added build time const cacheversion const currentcaches readthrough readthroughcachev cacheversion selfaddeventlistener activate event gt const expectedcachenames objectkeys currentcaches map key gt return currentcaches key eventwaituntil cacheskeys cachenames gt return promiseall cachenamesmap cachename gt expectedcachenamesindexof cachename cache name nt present array expected cache names delete consolelog deleting date cache cachename return cachesdelete cachename selfaddeventlistener fetch event gt eventrespondwith cachesopen currentcaches readthrough cache gt return cachematch eventrequest response gt response entry cache eventrequest response defined return return response", "d": "8/2018"}, {"body": "sure problem suggestion addresses first sw implementation independent app content served cached files furthermore sw already stamping app version hash manifest file turn dependeds plus file contents", "d": "8/2018"}, {"body": "well question need hash file check changes hash comparison download unnecessary fileasset avoid use network potentially bad connection guess scenarios hash changed external events feature ca nt considered hash reliable maybe whatever reason hash compared lost purpose context trying see sw ca nt check new app version erase cache get new files without hash comparison least get different files without caring expected hash ca nt something dev choose fits scenario maybe missing something important", "d": "8/2018"}, {"body": "one reason conserve bandwidth might significant cache large rarelychanging files like images etc main reason far understand concept app version app version contains files comprise app info captured manifest file used sw find new app version note sw may serve different app versions different app instances eg different tabs sw guarantees app instance continue receive files correspond assigned version important user app open tab deploy new version updated asset might incompatible old app version eg new js script expects new layout breaks used old one nt want user suddenly start getting new incompatible asset still using old therefore important sw able tell asset file belongs specific version reliable way discussed far comparing content btw also browsers detecting modified serviceworker scripts example imagine deploy version includes asset sw detects new version starts downloading assets version meantime deploy version modified sw requests cache version receive new backwards incompatible version deployed server happily cache serve version rest app files version app would broken essentially sw needs able tell whether received file actually one belongs current version updating also lazily fetched assets complicate things even sure usecases general idea sw needs able tell whether files receives fetching specific app version indeed correspond files disk version build created verifying content reliable way come far via hash cheap way achive smiley", "d": "8/2018"}, {"body": "gkalpak description deserves part official tech explainer great job mate", "d": "8/2018"}, {"body": "hash mismatch happen currently keep user stuck old version without risk brokecorrupt app try resolve causing mismatch cases could even impossible allow hash mismatch happen clear cache update clientstabs avoid brokecorrupt app side refresh new version hash mismatch put hash comment file work file types least avoid mismatch text files thanks gkalpak time clarify behaviourissue", "d": "8/2018"}, {"body": "ok guys strugglin found fix hash mismatch problem solution issue anyway put help others problem infrastructure topology user firewall reverse proxy reverse proxy ingress kubernetes nginx web server nginx happening first reverse proxy using configuration rewrite automatically links http case using css lib commented http links page like case reverse proxy changing links onthefly content changed results hash mismatch configuration disabled hash mismatch issue goes away app updates successfully think cases issue hard thing bypass identifysolve even impossible hosted environment devs control unknow anyway thanks gkalpak time clarify behaviourissue", "d": "8/2018"}, {"body": "struggle seems must function return statement nothing menas variables functions used inside method works doesnt work storing object variable using function breaks build typescript public static forroot config itimoneertab modulewithproviders const output ngmodule tabsmodule providers provide applicationtabs usevalue config return output commit fixing timoneer good example routermodule", "d": "8/2018"}, {"body": "leonardochaia correct must completely static function including returns const", "d": "8/2018"}, {"body": "reading leonardochaia answer fixed error lib import removing statement method declaration", "d": "8/2018"}, {"body": "shared modules use data passed application context initialization handled trying solution suggested unsuccessfully scenario ng version angular cli node os angular animations cli common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildngpackagr angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularflexlayout angularmaterial ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsupdate ngpackagr rxjs typescript webpack import ngmodule modulewithproviders injectiontoken angularcore import commonmodule angularcommon import appsettingsservice servicesappsettingsservice export const appsettingsobject new injectiontoken appsettingsobject export function createappsettingsservice settings return new appsettingsservice settings ngmodule imports commonmodule export class appsettingsmodule static forroot config object modulewithproviders return ngmodule appsettingsmodule providers provide appsettingsobject usevalue config provide appsettingsservice usefactory createappsettingsservice deps appsettingsobject ng build myapp prod date hash time chunk runtimexxxjs runtime kb entry rendered chunk stylesxxxcss styles kb initial rendered chunk polyfillsxxxjs polyfills bytes initial rendered chunk mainxxxjs main bytes initial rendered error error template compile myappmodule function calls supported decorators appsettingsmodule called help", "d": "8/2018"}, {"body": "would suggest fix temporary overbearing bad looks sure help helped scenarios quite like call exported const variable export const appsettingsmoduleforroot modulewithproviders appsettingsmoduleforroot yourconfig imports appsettingsmoduleforroot make sure import put typing might work type variable", "d": "8/2018"}, {"body": "danielmhair thanks actually tried fix worked however discovered problem nt piece code fixes suggested rather different piece code way deriving object passed method importing problem mainmodulets angular amp lodash import browsermodule angularplatformbrowser import ngmodule angularcore import assign lodash application modules import coreconfig modulescore import userconfig modulesuser components import maincomponent componentsmaincomponent const appconfig assign coreconfig userconfig lt problem came ngmodule declarations maincomponent imports browsermodule applicationspecific modules appsettingsmoduleforroot appconfig providers bootstrap maincomponent export class mainmodule fix fix replaced mainmodulets ngmodule declarations maincomponent imports browsermodule applicationspecific modules appsettingsmoduleforroot coreconfig userconfig providers bootstrap maincomponent export class mainmodule appsettingsmodulets export const coresettingsobject new injectiontoken coresettingsobject export const usersettingsobject new injectiontoken usersettingsobject export function createappsettingsservice core user return new appsettingsservice assign core user ngmodule imports commonmodule export class appsettingsmodule static forroot core object user object modulewithproviders return ngmodule appsettingsmodule providers provide coresettingsobject usevalue core provide usersettingsobject usevalue user provide appsettingsservice usefactory createappsettingsservice deps coresettingsobject usersettingsobject trick seems ensure absolutely codeexecution necessary invoked executable code within factory method deal completely static values", "d": "8/2018"}, {"body": "ok spoke soon like peeling onion issue still completely fixed context keep referring previous posts thread actually part different library application within angular cli workspace working project investigate another issue temporarily updated point library application directly instead via folder original settings modified settings modified settings build works fine however revert original settings build fails created github repo illustrate problem clone repo run see error referring", "d": "8/2018"}, {"body": "thanks help samherrmann able get code working appears aotenabled compilation process problems dealing statements rely files inside directories firstly explicit export statement angular modules necessary within library file get rid error even directorybased import statements within library code rely files within directories export modules changed import directly module files ie change look details", "d": "8/2018"}, {"body": "runtime part pr", "d": "8/2018"}, {"body": "compiler part pr", "d": "8/2018"}, {"body": "regardly css files nt working expected locally till used viewencapsulationnone work locally selected component perfectly think way encapsulation works locally way", "d": "8/2018"}, {"body": "vandivier fwiw project working able import multiple styles flag ones become global could prove extremely useful currently resort declare inside files method flexible setup sense depending build configuration inheritance nature solution might want styles want replace styles something else completely without override individual properties could work well option using option nt look convenient work far concerned adding option would great addition", "d": "8/2018"}, {"body": "woble sorry chip multiple css maybe file name css classes names preferably call css wan na use along projects speficied compoent mostly run first want control specific css run component call component encapsule none", "d": "8/2018"}, {"body": "angular ssr serverts", "d": "8/2018"}, {"body": "updates big issue everybody", "d": "8/2018"}, {"body": "guys changes issue", "d": "8/2018"}, {"body": "maybe vs code thing npm thing nt know somehow file paths symlinked modules direct paths added patientnodemodules spent quite awhile trying hunt issue apparently automated process rewrote file paths appmodulets overwritten file paths", "d": "8/2018"}, {"body": "weird thanks looking would nice worked without using lots space duplicates standard package manager meanwhile see related issue succeed manner speaking pnpm instead npm option shamefullyflatten although even pnpm emphasized shamefullyflatten needed modules find paths right way something like", "d": "8/2018"}, {"body": "far nt able find information random basically unduckduckgoable function mentioned never imported explained docs", "d": "8/2018"}, {"body": "brandonroberts definitely looks typo nt", "d": "8/2018"}, {"body": "typo exposed guide source example", "d": "8/2018"}, {"body": "solution would also promote real reusable angular libraries angular library domain services want others org use currently configured like appmodulets issue settings need provided call server use problem forroot executed promise appinitializer provider finishes library get correct config someone angular team could comment priority item ifwhen radar implement would great", "d": "8/2018"}, {"body": "feature would useful implementing reusable services natural way injecting objectvalue tokens also one npm package domain services services receive base url endpoints token url comes fetch server currently way achieve fetching url angular boot creating extra provider pass bootstrap function instead using global variable workaround setup config function service called appinitializer make use async factory prefer first option cleaner problem forcing consumers fetch configuration angular news", "d": "8/2018"}, {"body": "problem trying provide configservice using appinitializer use configservice provide injectiontoken via usefactory dependency configservice problem inside usefactory get configservice resolved yet configservice config object ready use true way consolelog inside usefactory executed first comes consolelog inside appinitializer want finished configservice ready use config file provide injectiontoken via using configservice", "d": "8/2018"}, {"body": "current hitting problem doesnt work safari ios cant debug since cant see console", "d": "8/2018"}, {"body": "also experiencing issue uploading presigned aws", "d": "8/2018"}, {"body": "rewritten file build using nodejs", "d": "8/2018"}, {"body": "sorry late response sharikovvladislav would indeed nice better interoperability validity state although sure possible due differently validity handled two frameworks happy review pr still interested wink", "d": "8/2018"}, {"body": "closing igorminar feel free reopen think need tests nt mind time increase reference current job duration total spent sitemap urls tests part would increase", "d": "8/2018"}, {"body": "smoke tests sufficient thanks", "d": "8/2018"}, {"body": "en mi caso pas\u00f3 que la directiva ngswitchdefault estaba dentro de la etiqueta div que conten\u00eda la directiva ngswitch debes fijarte que dentro de ngswitch encierre ngswitchcase ngswitchdefault example", "d": "8/2018"}, {"body": "experiencing finding child modules lazyloaded modules instantiated multiple times event result leading odd behaviour", "d": "8/2018"}, {"body": "sure managed framework autofocus discovery feature detection spas see take similar issue react dwb article react autofocus summary fontfamily lato export class foocomponent implements afterviewinit viewchild backref input elementref ngafterviewinit thisinputnativeelementfocus thanks", "d": "8/2018"}, {"body": "issue appears fixed merged note fix needs enabled", "d": "8/2018"}, {"body": "awesome try", "d": "8/2018"}, {"body": "looks good give try", "d": "8/2018"}, {"body": "works like charm thanks closing issue", "d": "8/2018"}, {"body": "related example docs progress related issue directive templates", "d": "8/2018"}, {"body": "looks like duplicate", "d": "8/2018"}, {"body": "closing duplicate", "d": "8/2018"}, {"body": "short documentation push notifications angular would definitely help interested found article good first dive topic still dive code figure subtilities like fact notification payload needs wrapped object", "d": "8/2018"}, {"body": "problem still exists could investigate far controlvalueaccessorregisteronchange even called custom component bound ngmodel component ca nt notify ngmodel change", "d": "8/2018"}, {"body": "changed angular got odd case migrating subclass resolve sole injector parameter", "d": "8/2018"}, {"body": "implemented see componentdirectivesspec", "d": "8/2018"}, {"body": "thx villelahdenvuo hint thx dcsmarcremolt proof problem using fontawesomepro package includes commontypes package sure issue adressed fortawesome anyone running problem solution include scripts", "d": "8/2018"}, {"body": "way change default currency currency pipe takes us dollars default uruguay use symbol represent local currency uruguaian pesos us dollars represented us dot thousand separators comma decimal separator working project use local currency want show ten thousands fifty cents uruguaian pesos wmgdev sayed put every html currency esuy put currency shows us think default symbol currency nt us dollars default currency locale setted way achieve maybe missing something thanks", "d": "8/2018"}, {"body": "agusdutra nt set default currency symbol see comment documentation explains set currency symbol way define default currency symbol could open feature request since people requested already", "d": "8/2018"}, {"body": "satm billskate import cordovajs add code needed cordova use ie nt add code import cordova javascript windowaddeventlistener function eventtargetprototypeaddeventlistenerapply arguments windowremoveeventlistener function eventtargetprototyperemoveeventlistenerapply arguments documentaddeventlistener function eventtargetprototypeaddeventlistenerapply arguments documentremoveeventlistener function eventtargetprototyperemoveeventlistenerapply arguments documentwrite lt script", "d": "8/2018"}, {"body": "billskate works like magic expert angular sure impactsideeffect", "d": "8/2018"}, {"body": "problem factory providers gide minimal reproduction problem instructions click toggle button one many times test service created destroyed test service created never destroyed environment angular version", "d": "8/2018"}, {"body": "trotyl meby shit error ca nt say rtfm pile garbage", "d": "8/2018"}, {"body": "related issue please set max line length keep scannable amount text characters per line add white space around screenwindow wider", "d": "8/2018"}, {"body": "going close one duplicate since exactly issue discussion going", "d": "8/2018"}, {"body": "agree issue open issue proposal solve discussion around", "d": "8/2018"}, {"body": "agree issue open issue proposal solve discussion around sure still centralize discussion one place would mind coping suggestions digging topic would like info one place", "d": "8/2018"}, {"body": "status pr reason getting merged", "d": "8/2018"}, {"body": "looking fix still merged", "d": "8/2018"}, {"body": "talamaska given output data eg work", "d": "8/2018"}, {"body": "andrewtw thanks try", "d": "8/2018"}, {"body": "verify also happens edge", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "waiting official solution might interesting solution basically resolver subscribes injected service listens router navigation events router fires new navigation events resolver immediately cancel", "d": "8/2018"}, {"body": "kylehall thanks reporting findings finally found answer code never seemed work months ago first started angular xd", "d": "8/2018"}, {"body": "people downvoting dylan seems mad hours trying seriously downvotes nt help anyone", "d": "8/2018"}, {"body": "closed", "d": "8/2018"}, {"body": "could someone please provide link relevant section reading searching google searching angular website unable find documentation", "d": "8/2018"}, {"body": "blowsie yep descriptions missing reality trivial thing read main idea allow get components placed deeper tree", "d": "8/2018"}, {"body": "benbraou found challenge interesting challenging enough give try therefore come different approach clientside library free lightning fast url source see version handles future changes main file edit sure confused would like know though", "d": "8/2018"}, {"body": "dom hydration prerendered websites example ivy cover", "d": "8/2018"}, {"body": "actragschuster mentioned library using creating another folder facing issue library creating folder please suggest resolution problem overcome issue", "d": "8/2018"}, {"body": "madhuni specify libraries resolutions field main packagejson wo nt installed twice different versions see docs yarn works npm", "d": "8/2018"}, {"body": "also known problem occur several angular projects repository miss imports one components eg copying code one project actually tries import something angularcore project get error eg instead correct injectable angularcore", "d": "8/2018"}, {"body": "implement observable instead new different property something provides", "d": "8/2018"}, {"body": "update information bug compiler breaks returning null undefined false return compiler linter happy every page except home page works", "d": "8/2018"}, {"body": "addtion previous work around also using configuration jasonaden mentioned became necessary soon set router started encountering throttling history state changes prevent browser hanging warning", "d": "8/2018"}, {"body": "updates", "d": "8/2018"}, {"body": "another month passed progress", "d": "8/2018"}, {"body": "jlguenego works webpack console nt browser console webpackdevserver property needs devserver object still need solid solution workaround", "d": "8/2018"}, {"body": "workaround used webpackfilterwarningsplugin hide warning browser const filterwarningsplugin require webpackfilterwarningsplugin moduleexports plugins new filterwarningsplugin exclude systemimport", "d": "8/2018"}, {"body": "would also love see solution github also need see many people posting topic various locations good answers sometimes angular elements dymanicly loaded components routebased components nt work plugin architectures", "d": "8/2018"}, {"body": "nt think behavior expected empty route usually implies index default index without anything route imagine landing page modal use router outlet implement nt redirect someone index show modal", "d": "8/2018"}, {"body": "angularcli ngtoolswebpack nt rely code guess kind blind spot written compiler already write new compiler ivy run instead managing hole project least want leverage power bazel lets hope ivy works like typescript compile file file run diagnostics separate thread compile time comes done milliseconds instead seconds", "d": "8/2018"}, {"body": "news using vscode extension basically unusable lot errors everywhere", "d": "8/2018"}, {"body": "anyone looking solution found awesome one tinytranslator", "d": "8/2018"}, {"body": "product id details import activatedroute params router angularrouter export class productdetailscomponent implements oninit", "d": "8/2018"}, {"body": "mlcmlapis making default behavior giving people choice sacrifice performance simpler code think makes sense given use case comparison reusing component instance route params change actually best argument change easy react change hard react change eg user clicks menu item would also work keep component instance configure route issue duplicated params eg routeparams emit value multiple times user triggered behavior", "d": "8/2018"}, {"body": "west missed idea nothing changed want refresh", "d": "8/2018"}, {"body": "reviver enough want handle numbers high precision like would get value already converted number", "d": "8/2018"}, {"body": "preserved point meaningless manually inserted space entities wiped several guys around amazed never expect manually inserted space characters optimized angular default settings", "d": "8/2018"}, {"body": "petebacondarwin recent api work address remains", "d": "8/2018"}, {"body": "related comment", "d": "8/2018"}, {"body": "pr referenced put place ability sort thing need decide exact rules implement", "d": "8/2018"}, {"body": "ran issue new angular app service worker nt install rxjs used advised official documentation commented everything works expected sign official workaroundfix issue seems odd docs would recommend approach nt work seems like kind note docs warns behavior", "d": "8/2018"}, {"body": "sooooo ugly spent two hours find documentation recommending notworking solution fine running things outside angular zone nt even care whether workaround god sake ask people come issue day fix documentation better recommends nothing something known working since already half year", "d": "8/2018"}, {"body": "smnbbrv open issue regarding documentation also settimeout setinterval statements run outside zone given function run zone therefore affect app", "d": "8/2018"}, {"body": "ohjames since angular team delayed feature ivy use custom decorator create self personally using inheritance", "d": "8/2018"}, {"body": "turn existing angular app custom element angular elements throws following errors nothing gets rendered however include props entrycomponents bootstrap appmodulets everything works fine still throws errors entrycomponents mycomponent bootstrap mycomponent export class appmodule constructor private injector injector const el createcustomelement mycomponent injector customelementsdefine mycustomelement el ngdobootstrap issue different app think issue jwplayer post link stackoverflow hope someone insights fails", "d": "8/2018"}, {"body": "playground quite sure mean everything works fine throws errors otherwise error got fairly common custom elements error bit background custom element spec outlines classes may passed course still common serve due browser support people ship custom element classes likely case thing aware browsers natively support still expect classes take classes nt properly extend classes like htmlelement work around want use custom elements adapter webcompoments org ships compiling monkeypatch native implementation allow classes custom elements", "d": "8/2018"}, {"body": "issue", "d": "8/2018"}, {"body": "look stackoverflow answer maybe gon na help", "d": "8/2018"}, {"body": "trick use timeout delay", "d": "8/2018"}, {"body": "mpeguero facing issue using angularcli project able use given command could please tell resolve issue without angularcli way change buildoptimizer propertyi new angularyour help highly appericiated", "d": "8/2018"}, {"body": "problem reference provider provider check references ngmodule sent iphone aug dnyaneshwarshivbhakta notifications githubcom wrote mpeguero facing issue using angularcli project able use given command could please tell resolve issue without angularcli way change buildoptimizer propertyi new angularyour help highly appericiated receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "mpeguero migrating existing angular application angular angular working fine migration getting error nt know last week clueless error", "d": "8/2018"}, {"body": "upgrading sent iphone aug pm dnyaneshwarshivbhakta notifications githubcom wrote mpeguero migrating existing angular application angular time getting errori nt know last week clueless error receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "mpeguero tried removing every provider commenting one one luck nt know issue issue frustrates lot", "d": "8/2018"}, {"body": "updated example angular", "d": "8/2018"}, {"body": "easiest way get around declaring input format model see json use pipe transform data example converted dates string java spring returns dates using jackson offsetdatetime objects date objects use", "d": "8/2018"}, {"body": "problem persists angularserviceworker change issue title", "d": "8/2018"}, {"body": "managed fix error encountering issue ssr working fine build app locally docker container although connection containers working", "d": "8/2018"}, {"body": "found fixed issue angular app making local requests api different container docker container access localhost network resulting api requests made localhost server return http failure response unknown url unknown error although client requests succeeding since requests made client order allow access local network could simply replace localhost dockerformaclocalhost using docker mac info tl dr flow consists angular app uses resolvers fetch data wordpress api backend api url different development production stored separate environment files everything working correctly client side except point realized ssr version broken error issue title since clue error coming http error started adding routing module logging requests httpinterceptor point realized even though passing prod flag ng build command server making requests dev api url client correctly making requests prod api url strange right google searches found server use prod environment file client need pass environment name ng run server command add production configuration server angularjson packagejson angularjson although actually fix issue made realize different client server version angular application behaves able point server production api url remote host ssr worked perfectly realized culprit locally api url log angular container ping localhost realized searches docker containers container actually access host ping actually went container gotcha needed find way angular container access api container bit research found done multiple ways changing network mode host creating alias service network ended easiest way replace localhost dockerformaclocalhost actually alows access container localhost network", "d": "8/2018"}, {"body": "updates facing issue believe fix suggested gigadie merged till", "d": "8/2018"}, {"body": "would better someone could investigate possible named outlets remain activated navigating away", "d": "8/2018"}, {"body": "need anything help reproduce see simple animating cards application one day transitioning cards every ten seconds app crashes due memory usage debugging shows growing number detached nodes workaround use native css possible possibly also related include performance stats", "d": "8/2018"}, {"body": "caeruskaru link", "d": "8/2018"}, {"body": "tomcaserta webpackinclude comment working project webpack installed angular project changes webpack seems include support magic comments probably reason nt work outdated version webpack installed project started angular updated nt know could reason edit see angular using webpack guess solution upgrade get newest version webpack second edit yes seems work guess issue related angular", "d": "8/2018"}, {"body": "kara thoughts", "d": "8/2018"}, {"body": "ericmartinezr saved day", "d": "8/2018"}, {"body": "issue", "d": "8/2018"}, {"body": "sarunint command change rxjs imports linted ts files import namespace like however formatting fail test tslint added tslint new angularcli project tested creating new project angularcli nt onus angular cli team create tslint config complies coding standards rxjs", "d": "8/2018"}, {"body": "sarunint bad appears angularcli outdated tslint generated appear contain key", "d": "8/2018"}, {"body": "case multiple resolvers using wrong syntax putting around resolvers eg instead syntax", "d": "8/2018"}, {"body": "instead please try one", "d": "8/2018"}, {"body": "worked injectable providedin root", "d": "8/2018"}, {"body": "case someone needs additional info especially erros error error staticinjectorerror dynamictestmodule httpclient staticinjectorerror platform core httpclient nullinjectorerror provider httpclient helped added xyzcomponent file fact injection helps get rid injection helps get rid errors injection helps get rid notes angular angular material v angular cli also verified angular angular cli node npm macos chrome", "d": "8/2018"}, {"body": "one ways able solve issue add httpclientmodule existing angularcommon inside appmodulets file add httpcleint existing angularcommon inside componentservice typescript file wherein sending http requests", "d": "8/2018"}, {"body": "authguardts", "d": "8/2018"}, {"body": "update", "d": "8/2018"}, {"body": "came across issue update regarding polyline showing using", "d": "8/2018"}, {"body": "workaround milestone crucial project", "d": "8/2018"}, {"body": "waiting see ever get fixed", "d": "8/2018"}, {"body": "found reproduction looks like issue still exists angular jasonaden matsko reproduction nt import browseranimationsmodule multiple times suggested previously cause issue advice potential contributors looking help fix issue whether fixed pointrelease update seem fixed point release updated repro newer packages", "d": "8/2018"}, {"body": "problem", "d": "8/2018"}, {"body": "problem trying redirect inside global error handler", "d": "8/2018"}, {"body": "yes bundling aot dynamic routing fail silently error prompt console picture shows dynamically spawned routings based state name using simple loop routing array generated properly actually work injecting component matched router remove loop hard code btw interesting part experience forloop accepted routing bundling jit something like acceptable throw error", "d": "8/2018"}, {"body": "adwd could please tell thank", "d": "8/2018"}, {"body": "never mind found solution used findindex method abstract control", "d": "8/2018"}, {"body": "angular supports ts", "d": "8/2018"}, {"body": "jlowcs similar issue also compilercli could share fix issue", "d": "8/2018"}, {"body": "raizemm depends using compilercli end thing change use transformed files instead ngfactory files initial files instance appmodulets actually transformed compilercli nt previous angular versions", "d": "8/2018"}, {"body": "jlowcs way could private message", "d": "8/2018"}, {"body": "also belong implementation shall always platformindependent", "d": "8/2018"}, {"body": "interested well enterprise setups include pseudomicroservices ui backend rest different urls cors setup allow allmost requests ca nt assume endpoints always relative outside caller unable see results understood part security picture great help available box instead roll regardless easy might", "d": "8/2018"}, {"body": "hey rudyhadoux exactly works angular really need help relatively new angular first project need csrf control please share solve problem angular", "d": "8/2018"}, {"body": "rudyhadoux issue sanitizing image src direct url would nt go angular http services anyway works issue solved case relevant issue", "d": "8/2018"}, {"body": "rudyhadoux reply everybody interest since comment works angular confusing issue csrf limitation describes removed used techniques specific use case involve csrf good specific use case met avoiding csrf need csrf use cases issue still stands", "d": "8/2018"}, {"body": "question scope issue please let stop branch discussion leave issue back request removing xsrf limitation made point already people might able explore jwt based alternatives using xsrf discussing whether feasible varying use cases whether equivalent etc outside scope communicating angular team limitation builtin xsrf utilities provide choose use", "d": "8/2018"}, {"body": "hello say plan implement solution described behaviour gyoshev exists also angular created example stackblitz", "d": "8/2018"}, {"body": "experimenting many different approaches finally come simple solution problem nt require changes framework utilize current functionalities using flag enough check control value changed html resetting user changes one thing missing original value changed user user write select value back situation control still marked dirty may expected handle created simple directive typescript directive selector pristine export class pristinedirective implements oninit ondestroy input pristine value constructor self private ngcontrol ngcontrol private sub subscription ngoninit void thissub thisngcontrolvaluechanges subscribe value gt value thisvalue thisngcontrolcontrolmarkaspristine else thisngcontrolcontrolmarkasdirty ngondestroy void thissubunsubscribe use case maybe directive could added angular repo either way think issue closed", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "anyone know reasonsolution weird removed ngif parent element started working", "d": "8/2018"}, {"body": "aboutcode course inject interfaces injectiontoken export const authenticationprovider new injectiontoken authenticationprovider providedin root factory gt new cognitoauthenticationprovider injectable export class cognitoauthenticationprovider implements iauthenticationprovider injectable providedin root export class authenticationservice constructor inject authenticationprovider private authenticationprovider iauthenticationprovider private httpclient", "d": "8/2018"}, {"body": "atoddgeoplan would probably still prefer purely abstract classes interfaces di least particular ngmodule providers component providers would also likely choose abstract class treeshakable providers however see approach provide nice solution something bugs times treeshakable providers need make interface type depend particular default implementation see let assume using treeshakable providers premise comment would continue choose purely abstract classes interfaces transpiling purely abstract class javascript abstract class abstract methods uninitialized properties remains transpilation exported variable pointing empty constructor function empty function actually equal token constant exporting example advantage purely abstract class though nt need create separate injection token nt need parameter decorator injection target anymore angular derive token type metadata use class runtime token designtime type example ngmodule decorator export const iauthenticationprovider function export const authenticationprovider new injectiontoken examples implementation implements abstract class export class cognitoauthenticationprovider implements iauthenticationprovider nt need inject angular infer token type metadata injectable export class authenticationservice constructor private authenticationprovider iauthenticationprovider private httpclient mapping interface class implementation ngmodule provider case ngmodule providers provide iauthenticationprovider usefactory gt new cognitoauthenticationprovider export class appmodule treeshakable providers example still interesting respect treeshakable providers often situation interface type default implementation create dependeny concrete implementation via decorator declaration example requiring interface type know depend particular implementation looks bit strange know di interfaces work languages like java severe problem still choose override default implementation ngmodules provider nevertheless would desirable one could use implementing side well make implementation declare implements something like ts injectable providedin root export abstract class iauthenticationprovider injectable provideas iauthenticationprovider export abstract class cognitoauthenticationprovider implements iauthenticationprovider unfortunately nt possible though therefore find example interesting shows decouple interface particular implementation using treeshakable providers today see another example mean", "d": "8/2018"}, {"body": "aboutcode thanks taking time show another way approaches similar inbuilt tendency try use language constructs meant never really think compilation treeshaking want code representative also come net background heavily use interfaces di habit thing anything would probably stick interface disregarding approach absolutely fine", "d": "8/2018"}, {"body": "disregarding approach absolutely fine goes thank ideas", "d": "8/2018"}, {"body": "atoddgeoplan let add possible omit decorator thus make provider interface implementation less dependent angular framework diwise reason implementation type nt act injection token controlling instantiation factory decorator nt necessary make things work", "d": "8/2018"}, {"body": "another interesting thought web assembly sure might seem like good idea use interfacebased design compiling javascript javascript nt interfaces foresee typescript start compiling directly web assembly bypass javascript altogether point make sense make critical architectural decision based short term compilation target yagni probably says api developer might want consider interfacebased design long term solution course anyone webjs world thought long term", "d": "8/2018"}, {"body": "rhyous far requests related ts wasm compilation marked scope typescript team independent thirdparty experiments attempting compile ts wasm mostly use subset typescript webassembly nt meant replace javascript javascript certainly shortterm compilation target typescript making architectural decisions based vague assumption critical either using classes abstract nonabstract really going principles interfacebased design fact use class righthand side clause well see section classes interfaces typescript handbook", "d": "8/2018"}, {"body": "problem element disappear empty select selectrootelement explain", "d": "8/2018"}, {"body": "lslocum found fix issue", "d": "8/2018"}, {"body": "harshavardhanpvk able get production apt build work nt remember resolved issue sorry could nt help", "d": "8/2018"}, {"body": "nt know bad use client host function saveuser req res var params reqqueryparams consolelog params var user new user paramsname amp amp paramssurname amp amp paramsnick amp amp paramsemail amp amp paramspassword username paramsname usersurname paramssurname usernick paramsnick useremail paramsemail userrole roleuser userimage null userfindone email useremailtolowercase nick usernicktolowercase exec err users gt exe para ejecutar el calba err return resstatus send message error en peticion de usuarios users amp amp userslength gt return resstatus send message este usuario ya existe else bcrypthash paramspassword null null err hash gt userpassword hash usersave err userstored gt err return resstatus send message error al guardar el usuario userstored resstatus send user userstored else resstatus send message se ha registrado el usuario else resstatus send message rellena todos los campos", "d": "8/2018"}, {"body": "closing favor", "d": "8/2018"}, {"body": "angulolar", "d": "8/2018"}, {"body": "ideas best guard testing strategy", "d": "8/2018"}, {"body": "jasonaden problem update", "d": "8/2018"}, {"body": "finally found solution ts thisroutereventspipe filter event gt event instanceof resolvestart map event gt let data null let route event state root subscribe consolelog", "d": "8/2018"}, {"body": "record lost full day error polyfills must absolutely loaded first check first line", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "version still issue plan fix", "d": "8/2018"}, {"body": "updating one later point releases seems fix issue", "d": "8/2018"}, {"body": "selipso version angular using post enivornment info", "d": "8/2018"}, {"body": "alfonsoaranzazu stackblitz updated version numbers", "d": "8/2018"}, {"body": "eosimosu create minimal repro stackblitz video nt enough actionable information look", "d": "8/2018"}, {"body": "kara note ran issue project working ive tried reproduce minimal example", "d": "8/2018"}, {"body": "thanks linking repro case took look actually seems working expected select populate option text model value matches value option clear array model value select changed match value select project option populate discovered get behavior want setting model match option value like populate", "d": "8/2018"}, {"body": "kara would possible remove validators destroy form control think discussion point would remove validators newly added one", "d": "8/2018"}, {"body": "cschulz reactive form directives likes structure template source truth form control state form control element destroyed nt mean form control validation change appropriate hand required validators directive designed work templatedriven forms template drive form directive removal dom trigger validator removal form control", "d": "8/2018"}, {"body": "kara right think best way would remove template set validators keep existing validators set reactive form way mean far seen track validators somehow", "d": "8/2018"}, {"body": "hi tried create reproduction code register new issue based since found related issue provide related code related also japanese community reaction matter", "d": "8/2018"}, {"body": "anyone trying simplest solution far use", "d": "8/2018"}, {"body": "laurienicholas nt think see sandbox put together", "d": "8/2018"}, {"body": "dfenstermaker nt think see sandbox put together", "d": "8/2018"}, {"body": "update time early access program kicked enterprise users nt looking provide direct support right early version tsautodeps automatically createsmaintains build files subdirectories angular rules api documentation protractor rule available beginning serious design work making bazel part angular cli reminder alternative webpack imagine bazel layer sitting angular cli calls webpack avoiding redoing webpack work possible parallelizing webpack via dllplugin", "d": "8/2018"}, {"body": "jesus ca nt wait", "d": "8/2018"}, {"body": "trotyl toxicable igorminar mhevery added requestanimationframe requestidlecallback received angular react fiber", "d": "8/2018"}, {"body": "wow amazing thank", "d": "8/2018"}, {"body": "thank link sir good", "d": "8/2018"}, {"body": "nt even animations albeit harder workaround animations occur parent component sets property child updates hostbinding property", "d": "8/2018"}, {"body": "hello guys sure related whole issue one thing happening returning following first run given see first already set even though undefined second fo reproduction demo", "d": "8/2018"}, {"body": "sad use crutch get interceptors parent module", "d": "8/2018"}, {"body": "related current angular tags disappears applied ngcontainer issues spa platforms react fragments declaration suggestion updated per discussion original issue comments trotyl made think best way introduction new decorator new decorator allow object template reference properties currently decorator however would properties neither would property also decorators effect would host bounded could used needed assigned variable template assignment original could new property declaration like boolean another decorator propuse implementation suggestion update allow template attributes explicit set definition wo nt new component ever additional attributes declarations disallowed could reduce complexity asking additional attributes placed time would reduce usage really supposed used component declare reusable template original concerns styles classes names applied currently shadow dom emulation new attribute added children component could mean styles still developer declare styles component using pseudo selector would create new shadow dom styles applied asis declared angular try figure developer would want developer apply styles classes names fragment tag ignored cause element would disappear expected behavior fragment allow attributes declared properties effectively ignoring throwing valid attribute proposal syntax original comment input myfragmentfragmentts appcomponentts output", "d": "8/2018"}, {"body": "luck getting fix merged", "d": "8/2018"}, {"body": "updated ca nt believe developers live common thing style forms give users good ux kara saw commented angular agree major issue provide info dig maybe ppl help solution info best michael", "d": "8/2018"}, {"body": "example reactive forms moved stackblitz working", "d": "8/2018"}, {"body": "one way fix use interpolation instead property binding property binding problematic way change detection works change detection follows following steps update property bindings call child components directives update dom current component involves evaluating interpolation expressions perform cd child components directives call child components directives problem using property binding return validity state particular formcontrol updated first yields first validity yet checked triggered connects input field form triggering validation form field invalid angular nt really know display view initially already evaluated changed order elements cd performed view mentioned right beginning use interpolation instead evaluated child components directives initialized stackblitz solves issue one way probably ways solve something came seeing template issue nonetheless believe also work property binding would cleaner imho would require us think design little bit", "d": "8/2018"}, {"body": "thanks workaround works around", "d": "8/2018"}, {"body": "happy help also interested design forms api could properly fix sure interpolation binding best solution works evaluated later property bindings", "d": "8/2018"}, {"body": "update issue set attributes attrvalue myformget key value big forms approach looks cumbersome", "d": "8/2018"}, {"body": "lose autocompletion capabilites thus discoverability different response content types saltydh saying step backwards angular original module", "d": "8/2018"}, {"body": "pipec", "d": "8/2018"}, {"body": "must match attribute name setter property issue know mistake setter property name different", "d": "8/2018"}, {"body": "using responsetype authentication service able make work let httpheaders new httpheaders authorization myauthtoken headers responsetype blob subscribe data gt consolelog data err gt consolelog err const headers new httpheaders authorization myauthtoken responsetype blob data gt consolelog data err gt consolelog err parameter give argument type headers httpheaders responsetype string assignable parameter type headers httpheaders header string string string observe body params ht reason ca nt use latter myauthtoken changed", "d": "8/2018"}, {"body": "snippet typescript infer type requires object pass andor values specific types", "d": "8/2018"}, {"body": "missing something encountered error expect responsetype blob receive type error works fine wrong thinking ridiculous answer design really good answer looks like poor design create httprequest param works expected expect work everywhere taking docs nt mention hacky approach anywhere granted new typescript nt seem right resolve workarounds like typescript issue angular", "d": "8/2018"}, {"body": "spent better part day trying figure postman gave correct response nt thought using might work nt eventually found thread saw take use responsetype text text roddy suggested back last september read end post found still problem think fixed least documented far intuitive", "d": "8/2018"}, {"body": "actually second thought initial bafflement makes sense inserting literal notation alxhub mentioned somewhere", "d": "8/2018"}, {"body": "petebacondarwin jbogarthyde resolved recent inprogress api template work", "d": "8/2018"}, {"body": "related test doc pr", "d": "8/2018"}, {"body": "far docsinfrastructure concerned solved need content", "d": "8/2018"}, {"body": "problems miss call", "d": "8/2018"}, {"body": "progress", "d": "8/2018"}, {"body": "write dirty directive work around force update ts import aftercontentinit contentchildren directive input onchanges querylist simplechanges angularcore import routerlinkactive angularrouter directive selector routerlink export class routerlinkdirective implements onchanges aftercontentinit input routerlink string contentchildren routerlinkactive descendants true linkactives querylist ngonchanges changes simplechanges changesrouterlink amp amp thislinkactives amp amp thislinkactivesfirst thislinkactivesfirstngonchanges null ngaftercontentinit thislinkactiveschangessubscribe gt thislinkactivesfirstngonchanges null", "d": "8/2018"}, {"body": "actually think depends defined route defined routes resolve issue without needing define custom routereusestrategy", "d": "8/2018"}, {"body": "kherp think missed point works simple cases define children routing module big apps want split app features modules different routing modules style guide work", "d": "8/2018"}, {"body": "solution get rid issue", "d": "8/2018"}, {"body": "approutingmodulets write path component homecomponent", "d": "8/2018"}, {"body": "stonecourier", "d": "8/2018"}, {"body": "nt think duplicate disabling individual radios formcontrol affected bug realworld usecase combined together datepicker timepicker binding components one component becomes disabled", "d": "8/2018"}, {"body": "well name think allowed text fields form", "d": "8/2018"}, {"body": "update would really beneficial know status", "d": "8/2018"}, {"body": "deg answer amazing", "d": "8/2018"}, {"body": "would really like feature think solution would fit everyone add following classesinterfaces http client package additional metametadata property making requests export interface interceptoroption type export class interceptoroptiontoken extends injectiontoken implements interceptoroption type nt extend injectiontoken export class interceptormetadata constructor key value type key amp amp value thisput key value put key value type interceptormetadata todo store details map injector weakmap return get key type undefined return type custom interceptor option export const cacheinterceptoroptions new interceptoroptiontoken lt cache boolean gt cache injectable export class cacheinterceptor intercept req httprequest next httphandler observable const cacheoptions reqmetaget cacheinterceptoroptions cacheoptions amp amp cacheoptionscache would compile type check usage services components compiles meta new interceptormetadata cacheinterceptoroptions cache true meta new interceptormetadata cacheinterceptoroptions cache false error meta new interceptormetadata cacheinterceptoroptions foo argument type foo number assignable parameter type cache boolean error const new interceptormetadata mput cacheinterceptoroptions argument type assignable parameter type cache boolean note put chained also interested making pr edit pr ready", "d": "8/2018"}, {"body": "thanks toxicable solution works great angular", "d": "8/2018"}, {"body": "use jest got error importing jest setup file inverting two imports solved", "d": "8/2018"}, {"body": "issue", "d": "8/2018"}, {"body": "one solution", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "might trick typescript import directive afterviewinit contentchildren querylist angularcore import ngmodel angularforms directive selector someselector export class somedirective implements afterviewinit contentchildren ngmodel public fields querylist ngafterviewinit consolelog thisfieldsfirstvalueaccessor elementref", "d": "8/2018"}, {"body": "issue please consider", "d": "8/2018"}, {"body": "solve forgetting add self forgetting provide component level problems following sufficient time keep moving protect bad cutandpasting remove service created method service must called immediately constructor component method checks see service instance ever initialized suggesting forgot provide locally methods service fail nt called clever enough used create rule like rule says", "d": "8/2018"}, {"body": "add params following lines return headers headers params fromdate abc", "d": "8/2018"}, {"body": "update issue experiencing issue trying make nested reactive forms", "d": "8/2018"}, {"body": "add seeing tests seeing issue form validity changed level components ie level lower would add control validators form valid adds control empty string validator making form invalid cause instead made sibling throw error formvalid changes false able use workaround scenario placing around", "d": "8/2018"}, {"body": "try example thu aug marc whitbread notifications githubcom wrote still broken latest versions remove lazy loading entirely relative routing never supported receiving commented reply email directly view github mute thread anthony p", "d": "8/2018"}, {"body": "bug hits ca nt believe going fixed something fundamental relative navigation left broken", "d": "8/2018"}, {"body": "trying replicate upload project seem get error error receiving fri aug wolffseb notifications githubcom wrote bug hits ca nt believe going fixed something fundamental relative navigation left broken receiving commented reply email directly view github mute thread anthony p", "d": "8/2018"}, {"body": "guess alternative right continue use practical", "d": "8/2018"}, {"body": "since issue pr nt seem going anywhere workaround seems working easily removed ifwhen actual fix released caveats ymmv sure raceconflict update state host element although update sources setting identical values based anyway even proper fix guessing suboptimal terms changedetection due use method call every changedetector pass", "d": "8/2018"}, {"body": "still issue update solve", "d": "8/2018"}, {"body": "may similar error sure issue using subjecterror function subjectnext works expected error block triggers component ui detecting changes node npm angular rxjs", "d": "8/2018"}, {"body": "hi slavafomin case datepicker component change date programmatically inside form ngdirty class getting added added behaviour case set element pristine state manually idea formbasets code import eventemitter elementref docheck angularcore import getvalue setvalue isnullorundefined import controlvalueaccessor abstractcontrol angularforms angular form base module export class formbase implements controlvalueaccessor docheck public value public checked boolean private skipfromevent boolean use like second method sows error like find pristine undefined", "d": "8/2018"}, {"body": "basically issues angular jquery really needs point right solution llhm incase find solution kindly share", "d": "8/2018"}, {"body": "still issue tried sorts workarounds works first time subsequent triggering result error status", "d": "8/2018"}, {"body": "facing issue tried everything seems issue arises one way data flow trying update selectedwoids problem solves error arises private setselectedwoidscount thisisselectallwoids thisselectedwoids thisallwoids", "d": "8/2018"}, {"body": "break rendering pipeline angular", "d": "8/2018"}, {"body": "rafaas answer", "d": "8/2018"}, {"body": "hi facing exact issue mentioned issue environment tried add comment got issue way resolve issue", "d": "8/2018"}, {"body": "still happening see", "d": "8/2018"}, {"body": "additional problem given following template following xliff file generated would refactor variable name id icu message changes hash text content mistaken problem us upload xliff file saas app translation team agencies translating makes really difficult translate would option actually sign ids icu messages parent key plus suffix something similar xliff file would look like", "d": "8/2018"}, {"body": "probably would nt help saas app nt support think separate property links parent id probably better probably something like xliff spec", "d": "8/2018"}, {"body": "nt think problem saas stated docs use keys everywhere otherwise new keys generated icu ca nt set keys big problem", "d": "8/2018"}, {"body": "still observing issue angular version", "d": "8/2018"}, {"body": "trick wo nt fire paste event unless element workaround make hidden contenteditable element listen ctrlv hidden element fires expected", "d": "8/2018"}, {"body": "updates issue official solution problem workaround mentioned petebacondarwin works thanks", "d": "8/2018"}, {"body": "though understand nt breaking change would great create api address issue extensively using route data drive page specific changes example page titles page specific changes header footer components subscribe routerevents navigation change check data set state seeing bugs work around issue also wrapped routersevents replaysubject like wingnod replaced routerevents subscriptions subscriptions subject would great perhaps different property something like routernavigationendevents backed replay subject eliminate issue otherwise anyone depending use route data create replaysubject ensure routing data getting updated", "d": "8/2018"}, {"body": "related make title area code snippets visual impactstyle singleexample tabbed examples related soften visual impact code area titles nt overwhelm overall page structure subheadings", "d": "8/2018"}, {"body": "issues amount boilerplate injecting services currently angular testing guide recommends setting tests require listing dependencies four times made library reduce single list code name spyring contains group spies get yeah keep day job sure whether release spyring separately suggest incorporated angular somehow hoping describing get feedback lists suggested guide follows variable declaration service calling jasminecreatespyobj service listing service provider testbedconfiguretestingmodule assigning service variable value testbed using spyring beforeeach block section guide would instead look like let masterservice masterservice guide let spies new spyring class valueservice methodnames getvalue beforeeach gt spiesreset internally calls createspyobj spy described spyring ctor testbedconfiguretestingmodule providers masterservice concat spiesgetproviders longer need list spy still flexible masterservice testbedget masterservice need assign spy objects access tests via eg gives object doc add services add line constructing spyring course still setup spies methods mock return values etc address enough boilerplate identified issue interest incorporating part angular would look like", "d": "8/2018"}, {"body": "javascript import directive oninit ondestroy input componentfactoryresolver viewcontainerref changedetectorref angularcore import routeroutlet childrenoutletcontexts angularrouter directive selector namedoutlet exportas outlet export class namedoutletdirective implements oninit ondestroy public outlet routeroutlet input public name string constructor private parentcontexts childrenoutletcontexts private location viewcontainerref private resolver componentfactoryresolver private changedetector changedetectorref ngoninit thisoutlet new routeroutlet thisparentcontexts thislocation thisresolver thisname thischangedetector thisoutletngoninit ngondestroy thisoutlet thisoutletngondestroy use page template", "d": "8/2018"}, {"body": "hoofa try format code", "d": "8/2018"}, {"body": "korenb workaround case need call api matcher resolved", "d": "8/2018"}, {"body": "feature would useful", "d": "8/2018"}, {"body": "application need information user remote source determine route use load user login time cache service well storing global reference angular injector matcher imports injector finds user service returns cached user synchronous bit hacky works short route needs asynchronous matcher would need preceded route nt initial route would need get remote information via resolver service injected component workflow nt give opportunity preload data could route presents loading screen distinct url async request redirect route async matcher", "d": "8/2018"}, {"body": "got error test suite component imports configured call referencing component test code got rid error", "d": "8/2018"}, {"body": "progress totaly agree application infinite loop angula rproblem run error ngfor comes server sometimes server sends starting receive inifinite error loop know issue server imagine secret bug appears breaks structure causes browser hang really think happen", "d": "8/2018"}, {"body": "running well extended builtin exceptionhandler decorator errors", "d": "8/2018"}, {"body": "bugging get behavior template errors using ngzone custom error handler order error handler always show imagine problem would occur toast component want show frontend error post suggest using ngzone works errors causes behavior templaterelated errors", "d": "8/2018"}, {"body": "imperfect workaround anyone else landing still get small blink previous route since returning false url replaced case good enough components route example never history due customers see intended route url contents component instead locationreplacestate docs guard ts import injectable angularcore import activatedroutesnapshot routerstatesnapshot router canactivate angularrouter injectable export class myaccessguard implements canactivate constructor private router router canactivate route activatedroutesnapshot state routerstatesnapshot boolean const hasaccess hasaccess receiving component route ts import component oninit angularcore import location angularcommon import activatedroute angularrouter component selector appnoaccess templateurl noaccesscomponenthtml styleurls noaccesscomponentscss export class noaccesscomponent implements oninit constructor private activatedroute activatedroute private location location ngoninit const replaceurl thisactivatedroutesnapshotqueryparams url replaceurl thislocationreplacestate replaceurl", "d": "8/2018"}, {"body": "using solve problem observable longlived observable may emit initial value later emit nonnull value example could data stream coming web socket firestore document come hacky workaround problem using give observable works way dmitrysteblyuk would like call makes observable hot causes multiple subscriptions shared note hack cause problems since changes data stream emitted observable example changes value receive call rather first nonnull value emitted observable using context component take care used effectively solve problem dmitrysteblyuk describes anyhow agree wrong async pipe return value yet emitted observable perfect example value separate values js despite common confusion two means value assigned variable specific value assigned variable case observable emitted value yet wrong return value unwrapping async pipe proposed solution would remove need hack like suggested makes proper use unlike current implementation", "d": "8/2018"}, {"body": "also would say issue mischaracterized original poster feature request rather bug report subsequently mislabelled vicb rather perhaps sitting around months without addressed may subtle bug affect many people fact async pipe returns value value actually emitted observable simply incorrect behaviour corrected vicb please consider relabelling", "d": "8/2018"}, {"body": "issue love issues make sense haha solution turned tuurbo btw thanks much daniel posting answer saveadayhero reason angular nt like peace everyone good luck never forget one", "d": "8/2018"}, {"body": "also problem imported components wrong package", "d": "8/2018"}, {"body": "crossrt would love see code input control using formcontrolname syntax directive thedirective element running problem formsmodule imported shared module holds directive im using angular ideas missing", "d": "8/2018"}, {"body": "stguitar using think import instead kindly check", "d": "8/2018"}, {"body": "crossrt yes confusing actually placed reactiveformsmodule formsmodule imports module could post working plunkr stackblitz would amazing appreciate response help", "d": "8/2018"}, {"body": "case helps anyone never able inject ngcontrol however inject controlcontainer use api get given control give formcontrol object case idea officially supported etc seems work fine", "d": "8/2018"}, {"body": "update still reproduce latest version", "d": "8/2018"}, {"body": "hey place track andor help tasks worked ones working tag", "d": "8/2018"}, {"body": "updates time frame releasing beta version runtime", "d": "8/2018"}, {"body": "marcelnem ca nt find comment iirc ocombe mentioned runtime merged ivy likely test beta ivy flag", "d": "8/2018"}, {"body": "runtime part done compiler part means ca nt test yet ivy", "d": "8/2018"}, {"body": "hi working angular working multilanguage meaning followed cookbook current implementation using aot generated messagesxlf file messagesptxlf everything working fine run ng serve configurationpt get texts translated expected feel like something wrong way works probably missing something far understood everytime add new string translated mark attribute need regenerate messagesxlf file running ng update manually messagesptxlf xlf file also holds line number source looks like changes row also need regenerate file manually update pt file nt look smart give lot extra work keep working understand concern missing something know angular big update ivy incorporated wait best regards fabio ps really hope topic feel please give least direction asking example link might answer doubts", "d": "8/2018"}, {"body": "fabiopcarvalho one thing realized wise use custom ids every single translation make easier keep track changes html layout yes need routinely update translations file", "d": "8/2018"}, {"body": "fabiopcarvalho use xliffmerge help merge translations", "d": "8/2018"}, {"body": "perfect used tool worked great also using ids help thanks reply thursday august pedro romero notifications githubcom wrote fabiopcarvalho use xliffmerge help merge translations receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "petebacondarwin jbogarthyde handled recent inprogress api changes", "d": "8/2018"}, {"body": "believe", "d": "8/2018"}, {"body": "mhevery since talks production mode would nt say augury whatever issue argue disclosing version information considered harmful big parts security community", "d": "8/2018"}, {"body": "matiger nt think false security illusion real security based thinking unknown algorithm safer known one", "d": "8/2018"}, {"body": "probably giving developer option enabledisable makes sense", "d": "8/2018"}, {"body": "searching best practices unsubscribing observables angular decided share result searches review miss something see issue related decided comment instead creating question issue best practices regarding observables unsubscriptions inside angular components quote routing amp navigation subscribing observable component almost always arrange unsubscribe component destroyed exceptional observables necessary activatedroute observables among exceptions activatedroute observables insulated router router destroys routed component longer needed injected activatedroute dies feel free unsubscribe anyway harmless never bad practice responding following links unsubscribe angular http observables necessary unsubscribe observables created http methods rxjs unsubscribe easiest way unsubscribe observables angular documentation rxjs unsubscribing unsubscribing service kind pointless since chance memory leaks need unsubscribe observable completeserrorsout comment http observable collected best practices regarding observables unsubscriptions inside angular components share never unsubscribe observable unsubscribes cleans automatically observable unsubscription conditional consider effects subscribe callback run component destroyed case case basis know angular unsubscribes cleans observable true perspective resources tells half story let say talking directly calling within component response took longer needed user closed component handler still called even component closed destroyed unwanted side effects worse scenarios leave application state broken also cause exceptions code callback tries call something disposed however time occasionally desired like let say creating email client trigger sound email done sending well still want occur even component closed need unsubscribe observables complete error however harm use much possible automatically unsubscribes observable component destruction unsubscribe observables like subscribed inside nested added inside tpl component selector dynamic component may subscribed many times long parenthost component exists need unsubscribe scenarios mentioned quote routing amp navigation docs unsubscribe global observables shared components exposed angular service example may subscribed multiple times long component initialized need unsubscribe internal observables application scoped service since service never get destroyed unless entire application get destroyed real reason unsubscribe chance memory leaks note regarding scoped services ie component providers destroyed component destroyed case subscribe observable inside provider consider unsubscribing using ondestroy lifecycle hook called service destroyed according docs use abstract technique avoid code mess may resulted unsubscriptions manage subscriptions use package mentioned easiest way unsubscribe observables angular always unsubscribe observables like always unsubscribe observables service like unsubscribe every observable else memoryleak guard step angular docs explicitly tells us observables unnecessary unsubscribed check issue documentation rxjs unsubscribing open bonus always use angular ways bind events like angular cares well removing event listeners needed prevents potential memory leak due event bindings nice final tip nt know observable automatically unsubscribedcompleted add callback check gets called component destroyed", "d": "8/2018"}, {"body": "much disagree never unsubscribe http observable finite unsubscribes cleans automatically true perspective resources tells half story let say talking directly calling http within component http response took longer needed user closed component handler still called even component closed destroyed unwanted side effects worse scenarios leave application state broken also cause exceptions code callback tries call something disposed however time occasionally desired like let say creating email client trigger sound email done sending well still want occur even component closed point never say never consider effects subscribe callback run component destroyed case case basis may better unsubscribe may better run logic additional logic", "d": "8/2018"}, {"body": "simeyla thanks giving time review comment regarding observable agree edit comment include point view", "d": "8/2018"}, {"body": "matthewerwin upgraded verified still bug fact made blank project little functionality replicated issue authentication verification priority realize dev team back log hands security use case far fringe use case go app get blank screen write guard returned back observable false", "d": "8/2018"}, {"body": "darthmolen go bump pr hopefully get merged next sprint two also verify fix pr works follows", "d": "8/2018"}, {"body": "matthewerwin maybe check work pushed syntax error fixes test solution builds packagelockjson pointing fix angularrouter guard always returns false dropping route component still showing blank screen something else need guard comes back", "d": "8/2018"}, {"body": "darthmolen problem npm wo nt actually use registry probably still getting angular published version router suggest running npm command checking code correct looking nodemodules find word stopsearching correct build installed yarn works much better always pulling correct repository set yarnrc file like check registry first router going main npm packages", "d": "8/2018"}, {"body": "even yarnrc nt work finally ran following command yarnrc place got truthy test fix worked fall route", "d": "8/2018"}, {"body": "injectable export class authguard implements canactivate auth constructor private authservice authservice private router router canactivate user logged thisrouternavigate dashboard return true else thisrouternavigate login return false", "d": "8/2018"}, {"body": "plan working near future", "d": "8/2018"}, {"body": "write solution using angular strategies import urlserializer urltree defaulturlserializer angularrouter export class customeurlserializer implements urlserializer parse url urltree let dus new defaulturlserializer return dusparse url serialize tree urltree let dus new defaulturlserializer path dusserialize tree let patharr pathsplit patharr let joinseparator patharrlength gt path patharrjoin joinseparator return path provide urlserializer useclass customeurlserializer appmodulets providers", "d": "8/2018"}, {"body": "problem angular since made angular angular without fixed client conform backend api way around", "d": "8/2018"}, {"body": "elpik thanks solution ran tests found minor improvement solution", "d": "8/2018"}, {"body": "thank kara explanation especially following bit said disabled group array value never included parent form aggregate value parent form enabled plunker repro github issue parent form actually enabled form controls inside disabled also becomes disabled disabled group value contains values children including disabled ones add another control form form stays enabled see array value disappears expected best way handle situation form controls disabled best always pseudo form control displayed ui", "d": "8/2018"}, {"body": "case forgot put component error showed", "d": "8/2018"}, {"body": "originally reported issue solved issue starts accumulate info unrelated errors longer serving purpose going close anyone faces error future please open new issue following issue template thnx", "d": "8/2018"}, {"body": "welcome angular suggest vuejs reactjs lets face fuck likes typescript anyway", "d": "8/2018"}, {"body": "alfupe work", "d": "8/2018"}, {"body": "mattqs thanks lot answering please think app without dom tytskyi says", "d": "8/2018"}, {"body": "directive usually right choice dom operations example directive focus element rendered even conditionally rendered etc typescript platformservicets import isplatformbrowser angularcommon import inject injectable platformid angularcore injectable providedin root export class platformservice readonly isbrowser boolean constructor inject platformid platformid string thisisbrowser isplatformbrowser platformid typescript focusoncedirectivets import afterviewinit directive elementref angularcore import platformservice platformservice directive selector focusonce export class focusoncedirective implements afterviewinit constructor private readonly element elementref private readonly platform platformservice ngafterviewinit void thisplatformisbrowser return even create focus directive twoway bananainabox binding typescript import afterviewinit directive elementref eventemitter hostlistener input onchanges output angularcore import platformservice platformservice directive selector focuswhen export class focuswhendirective implements afterviewinit onchanges private isviewinitialized boolean false private get isrendered boolean return thisplatformisbrowser amp amp thisisviewinitialized input focuswhen shouldbefocused boolean output focuswhenchange focus eventemitter new eventemitter constructor private readonly element elementref private readonly platform platformservice ngonchanges void thisupdateelementstate ngafterviewinit void thisisviewinitialized true thisupdateelementstate hostlistener blur onblur void thisfocusnext false hostlistener focus onfocus void thisfocusnext true private updateelementstate void thisisrendered return stackblitz demonstrating focus directives", "d": "8/2018"}, {"body": "note others wanting background reading", "d": "8/2018"}, {"body": "obsolete option removed since", "d": "8/2018"}, {"body": "really helpful", "d": "8/2018"}, {"body": "earliest version angular fixed problem", "d": "8/2018"}, {"body": "issue still present thanks solutions hans", "d": "8/2018"}, {"body": "anybody please provide info solved", "d": "8/2018"}, {"body": "fixed ivy", "d": "8/2018"}, {"body": "work angular instead mocking renderer try hijack componentspects", "d": "8/2018"}, {"body": "token use arbitrary deps already need instead need inject individually modulelevel injector asynchronous route configuration orthogonal request achieved appinitializer", "d": "8/2018"}, {"body": "karlxol still makes sense create templateurl yournewhtml extends", "d": "8/2018"}, {"body": "karlxol still makes sense create templateurl yournewhtml extends lot cases markup comes backend ex lesson content many different exercises changes often via separate admin dashboard", "d": "8/2018"}, {"body": "add routertestingmodule configuretestingmodule testcase gt import routertestingmodule angularroutertesting beforeeach gt testbedconfiguretestingmodule imports routertestingmodule lt providers declarations", "d": "8/2018"}, {"body": "case importing noopanimationsmodule browseranimationsmodule like switch order browseranimationsmodule first", "d": "8/2018"}, {"body": "closed", "d": "8/2018"}, {"body": "thanks trotyl", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "8/2018"}, {"body": "djidel approach worked problem needed refresh pipe new data added example array filtered via pipe takes string ex filtering currently visible push array showing frontend still see pipe refreshed solution new data added example array following first make sure changedetectorref imported pipe html code makes pure pipe refresh new changedetectorref code added see frontend let know worked", "d": "8/2018"}, {"body": "agreed works misses point need inject changedetectorref every component uses pipe miss pipe nt work properly dry also nt good separation concerns component know pipe requires force detect changes change inputs", "d": "8/2018"}, {"body": "actually discussing pipe injected service triggers changedetection internally external args external changedetectorref call pure pipe trigger new render phase know one pipe instance pure thinking two cases examples user roles changes could disableenable button emits new permissions user language changes could show correct label emits new language code value community solutions resolve two different ways impure pipe know performance memory issues related impure approach see pure pipe trigger arg nt want add complexity templates see know official solution way change languages runtime sad story", "d": "8/2018"}, {"body": "dzmitryshylovich answer yes called shared nt answer question concept sharing may imply wo nt need import already shared second explanation however good thank time", "d": "8/2018"}, {"body": "update", "d": "8/2018"}, {"body": "done without subscribing router events", "d": "8/2018"}, {"body": "usecase solution would include way reparent control use customized order detach views rearrange based screen width nt want recreate every time since contain state andor videos excuse probable misuse correct terminology annoying find could nt automatically inherit parent injector confusing wondering even happen control reparented underneath another injector case box contained within group screen resized new groups created existing boxes moved consume injected group service constructor box would change later case injection even really make sense nt choice use input parameter update new group sure scenario related ca nt currently sometimes think know want nt quite make sense", "d": "8/2018"}, {"body": "duplicate fixed", "d": "8/2018"}, {"body": "simuler issue factory providers gide minimal reproduction problem instructions click toggle button one many times created destroyed created never destroyed", "d": "8/2018"}, {"body": "fixed ivy tsickle longer matters", "d": "8/2018"}, {"body": "update folks", "d": "8/2018"}, {"body": "rahulzwasnik waiting someone angular team review pull request made fix igorminar requested review kara back may nt seen activity since", "d": "8/2018"}, {"body": "note issue also affects latest version safari ie", "d": "8/2018"}, {"body": "still issue angular redirect loop crashes whole pc chrome imo router quit detectsshould detect loop", "d": "8/2018"}, {"body": "fixed ivy", "d": "8/2018"}, {"body": "forroot fn never evaluated aot ngc analyzes content fn get module ngc know first statetement consolewarn fixed ivy provider expression evaluated runtime would enough", "d": "8/2018"}, {"body": "restricted mobx receiving latest angular help greatly appreciated build prod ng build aot prod angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularflexlayout angularmaterial ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack", "d": "8/2018"}, {"body": "really need fixing makes things like using params tracking purposes impossible ended removing setting component preserve params like really nt necessary though", "d": "8/2018"}, {"body": "formgroup allowed attribute value making attribute dashed lowercase thought would formgroup apparently error pops try", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "pkozlowskiopensource ok agree logic however far use case may one betterdifferent way today im ears use case situation around host bindings want directive apply css host directive modifying dom bit info directive structural want wrap original input control div apply bonus styling etc think requires structural directive far understand directive wrap input div better visuals original input original input element using formcontrolname directive properly binding data formgroup containing component tell need leave original input dom keep data binding right want hide move view user interact outter div directive wrapped input solution right use normal css project rule hide input control directive doesnt worry would nice css contained within directive something remember add needed either globally per component markup using directive also able use bit eventually find input element question get formcontrol set styles directly felt janky side note see solutions use case way structural directive bind ngcontrol something read works shared module seem work perhaps directive able implement controlvalueaccessor like components seems logical structural div able apply css host element", "d": "8/2018"}, {"body": "stguitar relates", "d": "8/2018"}, {"body": "trotyl totally agree directly theory right maybe wrong though reason also understand use structural directive use maybe way via im talking though", "d": "8/2018"}, {"body": "stguitar question nonhost targets like target option", "d": "8/2018"}, {"body": "fair enough thanks", "d": "8/2018"}, {"body": "pkozlowskiopensource actually feasible aot jit long landed typescript glad help going revisited future", "d": "8/2018"}, {"body": "problem using custom form field component implementing see call want fresh instance conditions change registered function onchange callback called new fresh value makes custom component emit event callback since error function registered error thrown also solved nikitayaroshevich workaround using directive", "d": "8/2018"}, {"body": "curious impact dawidgarus solution performance improve directive overhead cancels benefits anyone get chance test", "d": "8/2018"}, {"body": "tonygutierrez possible use pure pipe like onerun binding rerun binded value changing would example language component property dynamic values like import pipe pipetransform angularcore pipe name fn pure true export class fnpipe implements pipetransform", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "would become error", "d": "8/2018"}, {"body": "nonlazy bug fixed closed", "d": "8/2018"}, {"body": "thanks comment", "d": "8/2018"}, {"body": "thank much fix markovy justsahid jacodv post guys best", "d": "8/2018"}, {"body": "hi jagdishhulsure would advice use gist next time want share logs long file would give url keep conversation easy read cheers", "d": "8/2018"}, {"body": "initi hooks called even component dom called ngondestroy aswell see logic shall unsubscribe observable author component prevent component behavior able detect component used ngifed component transcluded component isnt bad design component acts diametrally differently environment", "d": "8/2018"}, {"body": "instance still exists instantiated destroyed relation host also lifecycles controlled host component instance placed", "d": "8/2018"}, {"body": "mlcmlapis well makes sense actually instance abc instance thats said however argument component case abccomponenthtml created component x condition false point view abc owner component consistent question benefits design obvious behaves behave like", "d": "8/2018"}, {"body": "exactly component x generally template component abc contains reversed transcluded content like instance component created moment instance component abc kept regardless conditional logic applied inside template abc generated js code defined angular compiler html templates compiled aot jit runtime", "d": "8/2018"}, {"body": "mlcmlapis typo first abc component x text problems encoding editor sorry understood written still overcome solve problem component used ngcontent creaing components connected view init lyfecykle hooks existence dom works like every situation works different way gt lifecykle hooks done yet component nt exist dom course fix scenarios lends adding ngif component look thinks correct way", "d": "8/2018"}, {"body": "lifecykle hooks done yet component nt exist dom exactly angular inner abstraction model applied dom necessary true model contains information dom also reason absolutely wrong way touch dom parts control angular course fix scenarios lends adding ngif component necessarily important understand difference cases really massive transcluded content suitable count memory consumption timing also new renderer way see added area especially relation dynamic behavior", "d": "8/2018"}, {"body": "lifecykle hooks done yet component nt exist dom angular application entirely bootstrapped detach element living component detach element node still valid case", "d": "8/2018"}, {"body": "mlcmlapis got however strictly abstract dom relative common scenario need call external party library like create map element native element place wan na make afterviewinit right however afterviewinit called aree dom fail wish make code safe manipulating dom directly afterviewinit triggered dont needed elements dom encountered problem ngcontent captcha ngcontent google map mattab graph librabry mattab", "d": "8/2018"}, {"body": "angular application entirely bootstrapped detach element component must assume host elements mounted wanted robust case require attached component guard", "d": "8/2018"}, {"body": "yep right third party libs able work nodes dom add custom logic control invoke relation node nt dom", "d": "8/2018"}, {"body": "angular application entirely bootstrapped detach element thats good point basically afterviewinit hook definition lifecycle hook called angular fully initialized component view component view pov dom browsermodule native ui nativescript etc take afterviewinit hook takes place component view dom native component tree even exists use sure something dom native component tree nativescript", "d": "8/2018"}, {"body": "dom representation detached element totally valid dom thing dom descendant node", "d": "8/2018"}, {"body": "one element angular abstraction model thing implements dom possibilities ssr web workers totally ai environments hundred variants", "d": "8/2018"}, {"body": "trotyl mlcmlapis well helped lot thank", "d": "8/2018"}, {"body": "experiencing issue latest angular design directive used single element ie onetoone onetomany", "d": "8/2018"}, {"body": "use google search select place enter mose click code call formgrouppatchvalue inputs filled view rendered view rendered something browser even click angular v please look attached screens help", "d": "8/2018"}, {"body": "wanted abstract crud", "d": "8/2018"}, {"body": "russoturisto requirement wrapping material form components see solution works well us", "d": "8/2018"}, {"body": "solution problem hitting application performance badly working application", "d": "8/2018"}, {"body": "think somehow issue flew radar angular team since nt responded long time would say try bring attention hopefully get fixed sooner asked extra information angular amp ngrx gitter someone also opened thread far official comments", "d": "8/2018"}, {"body": "significant performance issues build simply navigate around app thinking may relevant", "d": "8/2018"}, {"body": "yes issue angular framework fixed years advise switch projects react jsnative putting hours learn incredible nt doubt react soon foundation new internet applications", "d": "8/2018"}, {"body": "lol hours sounds like really hard work", "d": "8/2018"}, {"body": "gabrielalack would recommend investigate released might observables cleaned something else keeping references memory tab chrome dev tools extremely useful easily show diff heap snapshots references kept", "d": "8/2018"}, {"body": "fdim js heap builds never decreases ondestroy deallocate heap memory even mentioned solution setting objects null destroying perfect fix memory still allocated mlcmlapis bad app pages across tabs counting onboarding pages aws lambda backend took months designbuild angular designs layouts set take couple weeks rewrite react native already see big difference performance reacting button presses tab switches", "d": "8/2018"}, {"body": "mobile app finally angular optimized bundled code bit faster react code seems talking different platform react native probably need compare angular nativescript get comparable numbers", "d": "8/2018"}, {"body": "ya mobile app performance touches nt big enough difference important though noticeable memory leak issue thread left angular use project number pages many components page js heap piles app becomes unusable navigating around", "d": "8/2018"}, {"body": "worked several enterprise big projects using angular alot modules features even heavy dom manipulations etc never experienced performance problems projects blazingly fast amp responsive trying advocate anything thinking loud something outside angular per se causing kind problems particular pattern lib something", "d": "8/2018"}, {"body": "likely reason cleaning observable subscriptions component destroyed observable retain handle subscribers instantiate one component subscribes particular observable thousand times without unsubscribing thousand instances component still retained memory", "d": "8/2018"}, {"body": "benelliott use observables know exactly issue lol pinpointed hours devtools every object created remained heap memory forever", "d": "8/2018"}, {"body": "updating original demo app version soon retest issue honestly nt seen memory leak problems quite biggest issue found previously memory allocated service properties cleaned even destroying entire app believe fixed issue still best practice ensured service holds props bad way manage app state lead problems solved ngrx", "d": "8/2018"}, {"body": "problem started using customroutereuse strategy components wanted reuse navigating away component page returning component page see memory getting built without releasing tue aug pm notifications githubcom wrote benelliott use observables know exactly issue lol pinpointed hours devtools every object created remained heap memory forever receiving commented reply email directly view github mute thread", "d": "8/2018"}, {"body": "suggest close issue nt issue let others open new issue per case eg particular usage issue already goes offtopic nt possible tracking problem", "d": "8/2018"}, {"body": "retested issue ca nt reproduce anymore scenario navigating away components destroyed allocated memory cleaned", "d": "8/2018"}, {"body": "related note issue method services provided never called unsubscribing service ngondestroy eg observablerefcomplete would ignored could lead components views retained memory fixed beta", "d": "8/2018"}, {"body": "implemented asap way meant coded", "d": "8/2018"}, {"body": "interesting implementation open source software agpl", "d": "8/2018"}, {"body": "superseded", "d": "8/2018"}, {"body": "hey issue ca nt seem find anywhere else goal choose option call function ngmodelchange value bound case modelcategory accessed reassigned default value function expected behaviour element shows default value since bound modelcategory value user chose however even though modelcategory set display change shows option user selected case printing consolelog value modelcategory function shows default value expected behaviour element think issue setting value modelcategory eventcycle changed workaround reset value modelcategory asynchronously maybe using timeout function works fine", "d": "8/2018"}, {"body": "update issue behavior angular guide primary router example crisis center broken match userreported behavior described also appear match intended expected behavior crisis center examplestackblitz clicking simulated browser backforward buttons appear trigger candeactivate guard clicking button within app eg going trigger candeactivate guard selecting cancel eg discard changes works expected ie impact url history see app nt believe candeactivate guards used behavior broken accurate workaround angular guide example updated include least add known issues section describing users following tutorial see expected behavior", "d": "8/2018"}, {"body": "icesmith solution wo nt work named router outlets", "d": "8/2018"}, {"body": "injectable export class authguard implements canactivate auth constructor private authservice authservice private router router canactivate user logged thisrouternavigate dashboard return true else thisrouternavigate login return false", "d": "8/2018"}, {"body": "updates big issue everybody", "d": "8/2018"}, {"body": "quit working angular js year ago got tired problems false promises sat aug vytautas pranskunas lt notifications githubcom wrote updates big issue everybody receiving mentioned reply email directly view github mute thread regards fahad mullaji", "d": "8/2018"}, {"body": "dom hydration problem solved ather spa libraries mon aug pm fahad mullaji notifications githubcom wrote quit working angular js year ago got tired problems false promises sat aug vytautas pranskunas lt notifications githubcom wrote updates big issue everybody receiving mentioned reply email directly view github regards fahad mullaji receiving commented reply email directly view github mute thread", "d": "8/2018"}, {"body": "vytautaspranskunas every framework angular solved problem said might problem new ivy renderer released", "d": "8/2018"}, {"body": "makes think ivy renderer solve sunce found mentions solving introducing virtual doms ivy wonder angular team silent forcing people dissapointed tue aug patrickjs notifications githubcom wrote vytautaspranskunas every framework angular solved problem said problem might one new ivy renderer receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "ads think ad code nt initialize sever think would policy issue ad networksadvertisers including google adsense check include ad code browser check running browser import platformid angularcore import isplatformbrowser angularcommon private isbrowser isplatformbrowser thisplatformid constructor inject platformid private platformid adding ad code spa little tricky page making ajax request main content page depends completion request also wait request complete add ad code page otherwise ad code initialized ajax request completes contents populated would also cause ad network policy issue", "d": "8/2018"}, {"body": "yeah issue nt rendering ads server much trying make sure angular nt removeeditchange ssr element solution reattach ad dom server new dom created client problem ad detecting dom manipulation reason people want hydration ads since always faster replace ssr view csr view solutions made also keep element dom insertremove around element would require rewriting renderer keep track elements ivy render likely solve since choose elements want boot angular ignore ad elements", "d": "8/2018"}, {"body": "adds reason people want hydration hydration needed prerendering scenario page content fetched bootstrapping ssr flashing prerendered hydrations needed prerendered pages also sure ignoring solve problem ignore whole body content everywhere think best solution would something simmilar like react virtual dom checks parts changed update one", "d": "8/2018"}, {"body": "hydration lib stuff nothing tied view layer one already provide custom achieve clear existing contents implementationspecific behavior default provided", "d": "8/2018"}, {"body": "example custom implementation use", "d": "8/2018"}, {"body": "vytautaspranskunas article old easy migrate renderer rootrenderer", "d": "8/2018"}, {"body": "trotyl thanks however instead forcing users write renderers would benifitial angular renderer update dom parts changes comparing ssr prerendered dom new one day task want correctly keep ssr content know access ssr rendered content custom renderer comparison", "d": "8/2018"}, {"body": "yes feature request totally valid since might still need wait one made party library share public community inputs could also beneficial", "d": "8/2018"}, {"body": "found solution problem request payload chrome devtools also showing empty", "d": "8/2018"}, {"body": "islinkactive url boolean const queryparamsindex thisrouterurlindexof const baseurl queryparamsindex thisrouterurl thisrouterurlslice queryparamsindex return baseurl url template classactive islinkactive admin works", "d": "8/2018"}, {"body": "updates issue", "d": "8/2018"}, {"body": "finally getting back created codesandbox test angular simple async validators switchmap could get fail fork get failure thing absolutely must use switchmap validator subscribing validation output switches terminal observable see branches use feeling anything problem gets stuck looking seems like ways trigger problem nt research yet far wanted baseline start experiments anything throws error nt somehow trap cause problems nt give observable feed way", "d": "8/2018"}, {"body": "switchmap still nt fix using onpush change detection strategy repro", "d": "8/2018"}, {"body": "alrighty using change detection strategy onpush switchmap stable wondering path stream something nt call change detector ref reconcile", "d": "8/2018"}, {"body": "btw trickery lose externalized validate function created creation function setting validator passed detector ref stable always check self etc test within observable pipe tap debug values think defined actually know sounds obvious anyone less experienced reading thread find incredibly useful debugging techniques", "d": "8/2018"}, {"body": "dobrevad problem set detector strategy onpush change made internally state object programmatically need call changedetectorref see sample go onpush replaced inputs observable next methods inputs trigger changes automatically internal observables nt count", "d": "8/2018"}, {"body": "edit angular rxjs situation component using change detection strategy used trigger update javascript component selector wscreateform templateurl createformcomponenthtml styleurls createformcomponentscss changedetection changedetectionstrategyonpush export class createformcomponent implements oninit ondestroy input form formgroup destroy subject new subject constructor private cdr changedetectorref ngoninit thisformstatuschanges pipe takeuntil thisdestroy distinctuntilchanged subscribe gt thiscdrmarkforcheck ngondestroy thisdestroynext true thisdestroycomplete", "d": "8/2018"}, {"body": "yeah good idea sun aug thomas jiang notifications githubcom wrote situation component using onpush change detection strategy used changedetectorref statuschanges trigger update component selector wscreateform templateurl createformcomponenthtml styleurls createformcomponentscss changedetection changedetectionstrategyonpush export class createformcomponent implements oninit ondestroy input form formgroup destroy subject new subject constructor private cdr changedetectorref ngoninit thisformstatuschanges pipe takeuntil thisdestroy subscribe gt thiscdrmarkforcheck ngondestroy thisdestroynext true thisdestroycomplete receiving mentioned reply email directly view github mute thread gt ken rimple training mentoring services chariot solutions rimpleontech", "d": "8/2018"}, {"body": "using nt even emitting change detection would nt helped using complete observable sucks think fields able go invalid asynchronously without check triggered user input still problem also tried idea nt work debugging would subscribe console also set interval log console consistently got last thing emitted yet interval logging would log observable completed knew completing best still ugly imo solution define subject alter used template like", "d": "8/2018"}, {"body": "angular workaround solution given need implemented like", "d": "8/2018"}, {"body": "name observable also changed actually name suggests still misleading probably common use case", "d": "8/2018"}, {"body": "fixed issue closed", "d": "8/2018"}, {"body": "aburht rerun ng serve aot still issue angular cli repo caused installed globally angularcli different local inproject angularcli version", "d": "8/2018"}, {"body": "news", "d": "8/2018"}, {"body": "probably want feature angular would support inline closures like someone wants create pr would happy accept", "d": "8/2018"}, {"body": "mhevery try obvious problem typechecking anonymous function could make logic less reliable ref ref", "d": "8/2018"}, {"body": "recently ran well used lodash make sure values persisted using", "d": "8/2018"}, {"body": "skreborn thanks answer got hint problem comment making ajax call mouseenter passing true async parameter dopost changed false worked fine event handler called thank", "d": "8/2018"}, {"body": "sorry folks commit try pull request see fixes issue accidentally added closes tag sorry", "d": "8/2018"}, {"body": "change seems fix though cheers", "d": "8/2018"}, {"body": "hi status still run angular", "d": "8/2018"}, {"body": "also faced issue needed changed space", "d": "8/2018"}, {"body": "regarding mattrowsboats observation ran situation tried navigate following route outside angular angular truncating url url encoding redirect portion link fixed issue us", "d": "8/2018"}, {"body": "returns using angular windowlocationpathname reliable far", "d": "8/2018"}, {"body": "export helper use pipe", "d": "8/2018"}, {"body": "set router outlet name dynamically", "d": "8/2018"}, {"body": "problem removing import clearinterval timers worked", "d": "8/2018"}, {"body": "issue hybrid app angular idea fix", "d": "8/2018"}, {"body": "hey dariuszbasiak make sure pulling zonejs cordova patch require statement polyfills", "d": "8/2018"}, {"body": "still facing error importing commonmodule modulets component declared", "d": "8/2018"}, {"body": "think obsolete new symbol used ivy mhevery tracking issue", "d": "8/2018"}, {"body": "jeremd works feels hacky seems like elegant solution available even dirty without windowservice", "d": "8/2018"}, {"body": "find solution issue", "d": "8/2018"}, {"body": "got exact issue hostlistener window pointermove event component using everything fine components added dom application hang performance becomes bad", "d": "8/2018"}, {"body": "similiar issue candeactivate called twice using links second modal appear closing first one use routernavigate method candeactivate called returning observable instead promise fix anybody workaround candeactivate method candeactivate observable promise boolean thischeckifchangeshavebeenmade const confirmation thismsopen confirmationtmpl using angular router kemsky could provide us workaround nt understand explanation thanks", "d": "8/2018"}, {"body": "man glad read comment components messages sent added line providers dataservice components appmodulets removing line providers dataservice components job instance service loaded app module", "d": "8/2018"}, {"body": "zoechi understand inheritance supported time running issue please look", "d": "8/2018"}, {"body": "clear safely ignore warning messages app looks working correctly without workaround", "d": "8/2018"}, {"body": "swpalmer apparently think improved functionality desperately needed number one reason use hostbinding avoid adding another div adds tonnes headaches super confusing ways one problem parent may declared different module often probably complicates things miscellaneous posts seen believe changes may coming future going happen ivy renderer hoping addressed conclusively really hoping way component properties kind isolated shadow dom type behavior way link observable hostbinding simple way", "d": "8/2018"}, {"body": "runtime translations done merged ivy compiler side finished yet working icu expressions right nt started code dynamic translations yet service probably next thing icu expressions", "d": "8/2018"}, {"body": "use icu expression get solution implement", "d": "8/2018"}, {"body": "ocombe please clarify difference runtime vs dynamic translations", "d": "8/2018"}, {"body": "probably official denomination way see runtime translations resolved runtime meaning build like currently applies types translations templates code dynamic means know want translate runtime could nt build time mostly applies code translations using service guess could consider icu expressions dynamic sense depend variable still compute possible translations build time number cases finite", "d": "8/2018"}, {"body": "postponed adding support current project developing getting closer release idea final angular consider ways adding translations", "d": "8/2018"}, {"body": "andreitatar working perfectly since angular downsides code translations issue need use build aot recommended app built language separately since app built separately switching language reload page last two points could use ngxtranslate instead works differently angular built later update could take time polyfill update time probably breaking changes", "d": "8/2018"}, {"body": "ocombe handle conditional operator using angular feature paymentmethodhistoryopned hide show history", "d": "8/2018"}, {"body": "use ngswitch template messages attach individually hide show history use method lot get around missing dynamic translations given bit thought surprising amount text expressed way templates common pattern array messages use ngfor ngswitch template messages something like ts messsages first message second message html somewhat verboose works", "d": "8/2018"}, {"body": "thanks lot got idea fri aug david walther birk lauridsen lt notifications githubcom wrote use ngswitch template messages attach individually hide show history use method lot get around missing dynamic translations ggiven bit thought surprising amount text expressed way templates common pattern array messages use ngfor ngswitch template messages something like ts messsages first message second message html first message second message somewhat verboose works receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "implications setting vs", "d": "8/2018"}, {"body": "sgronblo afaik nt impression shorthand could wrong", "d": "8/2018"}, {"body": "least form bug still lives change fact order html affect behave tested latest angular", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "got work angular v kentoj example banging head wall working thanks", "d": "8/2018"}, {"body": "sounds like documented got another issue ponders technical solution problem going close", "d": "8/2018"}, {"body": "one easy workaround feature reality wrap subscription settimeout function way function body get evaluated necessary time update instance update different status booleans pristinetoucheduntoucheddirty order notify pristine create cold observable pass changes within settimeout guess another option done using functions rxjs nt like solution personally average running works fine end functionality relying vm manages process could end random unexpected issues use care edit lucasbasquerotto pointed workaround work completely works fine props properly updated", "d": "8/2018"}, {"body": "emoriarty nt think posted solution issue main problem see updating see old new value listening changes course use case may different way currently ca nt listen changes properties programatically typescript observable nt emit events pointless achieve declaring template html edit completely sure changes control value changing may trigger posted may work case case work", "d": "8/2018"}, {"body": "still issue angular", "d": "8/2018"}, {"body": "major pain point trying teach ng unit testing simplest terms possible people accustomed net mocking patterns anyone able provide little context happy spend time investigating diving fix", "d": "8/2018"}, {"body": "issue implementing dialog using angular material case others come across issue solved problem", "d": "8/2018"}, {"body": "issue project working using angular webpack windows iisaspnet project primary browser chrome issue randomly appeared rebooting pc loading dev environment code configuration changes managed resolve issue couple attempts starting project visual studio also browsing app url microsoft edge loaded find hard refresh chrome came good note manually start leave running webpack separate command window start actual application withing visual studio guess webpack crapped behind scenes needed time hard refresh browser get correctly compiled code browser", "d": "8/2018"}, {"body": "issue solution", "d": "8/2018"}, {"body": "tried extend formcontrol class add addvalidators method sketch functional class myformcontrol extends formcontrol private validators validatorfn constructor setvalidators val validatorfn validatorfn null thisvalidators normalizevalidators val supersetvalidators thisvalidators addvalidators val validatorfn validatorfn null thissetvalidators merge current added validators thisvalidators normalizevalidators val remove duplicity filter v gt aindexof v function normalizevalidators val validatorfn validatorfn null validatorfn val null return arrayisarray val return val return val see code also expands dirty value checking detect return pristine value", "d": "8/2018"}, {"body": "route guard actual way imho", "d": "8/2018"}, {"body": "still issue angular meantime dingweizhe solution works really well", "d": "8/2018"}, {"body": "offtop try null unicode", "d": "8/2018"}, {"body": "get fixed years ago though actually use null", "d": "8/2018"}, {"body": "still happening angular", "d": "8/2018"}, {"body": "update issue pending", "d": "8/2018"}, {"body": "ericmartinezr override", "d": "8/2018"}, {"body": "wondering status issue far get inside still nt work expected case using operator prevents error periodic timer still queue test case still failing also tried rvmladenov workaround nt help one working replacing iliavolk suggests", "d": "8/2018"}, {"body": "still facing issue anyone else", "d": "8/2018"}, {"body": "made slightly complex version directive also activatedeactivate sync feature passing boolean value useful example lot controls inside ngfor want activate sync controls", "d": "8/2018"}, {"body": "thanks brandonroberts works", "d": "8/2018"}, {"body": "project moment good know thank much helpresponse sun aug pm zelwyn notifications githubcom wrote thanks brandonroberts works receiving mentioned reply email directly view github mute thread", "d": "8/2018"}, {"body": "thanks much brandonroberts really works routerlinkactiveoptions exact true", "d": "8/2018"}, {"body": "vsavkin know author setting location state terms browser history api many cases nt want data would pass persisted done unconditionally history api really cover cases please reopen ticket", "d": "8/2018"}, {"body": "list tickets passing data routernavigate one actually location state currently tickets closed except addressed part problem issue still", "d": "8/2018"}, {"body": "works see link need add directive", "d": "8/2018"}, {"body": "almost year later barely movement still using kostyatretyak directive projectwide", "d": "8/2018"}, {"body": "updates global state affects data current route state changes components need refresh data would huge burden add code every single component listen state change reload everything opposed worked angularjs could routereload", "d": "8/2018"}, {"body": "expect create new components instances", "d": "8/2018"}, {"body": "mlcmlapis yes want functionality went different route came back current one routereload worked great angularjs much needed angular need refresh ui cached data already nt want actually reload window would take much longer overkill want rerender components see googling issue many people use case global state change occurs affects displayed information rerender everything nt actually need retrieve new data workarounds presented none good involve manually listening change invoking refresh function every component needs refresh ton boilerplate something simple likely produce bugs remember everytime write component whether listening global state change", "d": "8/2018"}, {"body": "describe closely pass global state components unclear related point view next reinitialization", "d": "8/2018"}, {"body": "mlcmlapis local data cache various components query cache data needed based component initialization components check global service current state nt want go much detail nt relevant issue angular router reload type method reloads current route", "d": "8/2018"}, {"body": "yep difference see problem others suppose beginning state could async thinking everything async fact beginning subscription state change means automatic reinitialization type reaction point view problem exists destroying recreating instances also performance hit course answer method like nt exist", "d": "8/2018"}, {"body": "mlcmlapis nt want implement feature ca nt understand need ticket backlog closed like devs stuck using angular nt used response angular nt work way switch react", "d": "8/2018"}, {"body": "talking current state understand priorities ivy renderer actually final decision yet happened feature issue waiting method also simplify programmatic reloading route keeps component instance could rerun guards resolvers", "d": "8/2018"}, {"body": "angular nt work apparently anymore however worked fine allows update individual style properties", "d": "8/2018"}, {"body": "yeah odd sure call made apply microsyntax seems like overkill nt see logic also change semantics ng example angularjs could simply ngrepeat ngfor sure reasoning", "d": "8/2018"}, {"body": "visual code restart needed updating packages", "d": "8/2018"}, {"body": "possible add directive wo nt appear dom need intersectionobserver api raises events elements enterleave viewport directive events element becomes visiblehidden certain components need use api internally nt want add extra div template following directive constructor injects normal dom element would operate node actually comment node check see comment go level nt going work situations fine believe ivy compiler may using comments anymore may break important thing single directive use dom nodes effectively fake hostbinding directive", "d": "8/2018"}, {"body": "really hoping possible add directives dynamically want able encapsulate lower level directives higher order abstract directives asked following question stack overflow wondering whether solution future", "d": "8/2018"}, {"body": "mhevery said need patient wait complete version ivy ng land apparently much easier implement ivy ivy must remind team important feature us dont forget", "d": "8/2018"}, {"body": "subscribing also need able dynamically attach directive component created resolvecomponentfactorycreatecomponent const componentfactory thiscomponentfactoryresolverresolvecomponentfactory componentitemcomponent const componentref viewcontainerrefcreatecomponent componentfactory componentrefinstance data componentitemdata componentrefinstance cssclasslist componentitemcssclasslist add directive new component componentrefadddirective somedirective", "d": "8/2018"}, {"body": "update ran another usecase using third party directive scenario need removeadd directive html element dynamically possible way yet pending solution", "d": "8/2018"}, {"body": "micronyks actually possible add directive dynamically wait ivy add possibility create feature", "d": "8/2018"}, {"body": "mlcmlapis plan ivy come version", "d": "8/2018"}, {"body": "micronyks angular schedule", "d": "8/2018"}, {"body": "guys let reasonable angular team trying hard work several huge features highly demanded pwas ssr ivy especially custom elements last one high priority feature could understand lot big enterprises like microsoft asking forever reason achieve efficient custom elements need ivy soon done ivy mhevery said engine allow dynamic directives easily meanwhile instead keep demanding feature also hopelessly need btw help angular team accelerate process testing betas reporting bugs helping docs etc let remember angular team even big dozen people trying make awesome framework everybody takes time", "d": "8/2018"}, {"body": "yep necessary bit patient wait till moment help ivy compiler completed detail design docs available", "d": "8/2018"}, {"body": "avatsaev agree everythinh said demand things explain issues dealing working angular nowhere near experienced angular developer things feel wrong explained clearly enough came across issue want encapsulate third party componentdirective without leaky abstraction part making possible dynamic directives suprises quite complicated achieve thing", "d": "8/2018"}, {"body": "peakseeker oncontentprintet also run events take look", "d": "8/2018"}, {"body": "list tickets passing data routernavigate one actually location state currently tickets closed except addressed part problem issue still", "d": "8/2018"}, {"body": "johnblair thank answer removing folders executing trick version version", "d": "8/2018"}, {"body": "also need closed ngfor evaluates expression time instead", "d": "8/2018"}, {"body": "error help thanks advance", "d": "8/2018"}, {"body": "update issue created component dynamically setting inputs using instance component seem give error console error comment error disappears", "d": "8/2018"}, {"body": "original issue resolved suggestions test prod mode use corejs polyfill moreover seems like esshim patched well going close issue problem originally reported fixed issue starts accumulate unrelated bug reports serves useful purpose nothing fix us angular", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "also works angular thanks", "d": "8/2018"}, {"body": "worked thanks", "d": "8/2018"}, {"body": "angular purpose actually blocks nested referencing dom elements save components overlapping components two options either go domsanitizer via viewencapsulation use dom sanitizer sanitize css simply apply angular variable template choose appropriate view encapsulation option per need viewencapsulationnone shadow dom therefore also style encapsulation viewencapsulationemulated shadow dom style encapsulation emulation viewencapsulationnative native shadow dom goodness viewencapsulationshadowdom native shadow dom restriction simply add component directive watch html getting styled hope helps understanding cheers", "d": "8/2018"}, {"body": "also facing similar issue saddest day life", "d": "8/2018"}, {"body": "happiest day life solved issue", "d": "8/2018"}, {"body": "use ngonit look like", "d": "8/2018"}, {"body": "look angular fixed probably future release default", "d": "8/2018"}, {"body": "used scrollintoview false element used scroll top nt work found way workaround issue hope help", "d": "8/2018"}, {"body": "best solution import component angularcore import router navigationend angularrouter component selector svapp template export class appcomponent constructor private router router", "d": "8/2018"}, {"body": "improving necessity run changes init self explanatory", "d": "8/2018"}, {"body": "add ngonafterconstruction call always prior ngonchanges ngoninit thus breaking change", "d": "8/2018"}, {"body": "another problem without solution case even use group nt trigger really miss react", "d": "8/2018"}, {"body": "started tour heroes tutorial today experienced issue removed data binding selectedhero made list function correctly somehow click event handler list item together data binding breaks course would also interested finer details exactly case", "d": "8/2018"}, {"body": "also autocompletion bug still present sincerely hope get addressed point someone could point fix locally even happy posting also since sure responsible", "d": "8/2018"}, {"body": "even decided allow underscores html template property autocompletes could someone point fix code image couple lines thanks much chuckjaz", "d": "8/2018"}, {"body": "jteplitz igorminar issue relevant", "d": "8/2018"}, {"body": "lot googling finally looking angular material sources got work need wrap component want test one implements interface dummy component", "d": "8/2018"}, {"body": "please nt forget laserus anchor tag without href loses cursor styling keyboard navigability presumably screen reader support unconfirmed styling easy fix browser understanding navigable element really important think", "d": "8/2018"}, {"body": "lacolaco super old thread figure way figured something similar eg get routes ssr bundle looking similar feature end component app may may static method like like parse bundle call static method collect return values long story short leads something similar lsroutes components", "d": "8/2018"}, {"body": "someone come solid proposal agree pr made implementing proposed solution", "d": "8/2018"}, {"body": "think fire blur event click happens inside form", "d": "8/2018"}, {"body": "non reproducable", "d": "8/2018"}, {"body": "problem create form async validator data populate form via async validator stuck state order bypass needed call request validation service finished", "d": "8/2018"}, {"body": "word one would huge would way emulate angularjs days", "d": "8/2018"}, {"body": "obsolete", "d": "8/2018"}, {"body": "fix feasible", "d": "8/2018"}, {"body": "mhevery see op original question question something want support handled differently maybe missed something please provide guidance handled link relevant discussion elsewhere readers learn longer supported angular", "d": "8/2018"}, {"body": "byrondover one fact external templates external styles inlined first step compilation moment externals", "d": "8/2018"}, {"body": "easy way absolute path mean thing runtime jit mode well compile aot time", "d": "8/2018"}, {"body": "thanks clarification finding thread future work around issue importing relative assets programmatically interpolate variables templates needed relies webpack resolve relative path build time injecting variables css styles even trickier also possible ugly workaround pollutes components require statements placeholder variables gets job done hoping improved solution future date", "d": "8/2018"}, {"body": "simple list component example dynamic ngtemplate", "d": "8/2018"}, {"body": "fix feasible", "d": "8/2018"}, {"body": "davideast imo using arguments nt need pass", "d": "8/2018"}, {"body": "still executing statement anyone please tell disallow disable statement production mode thanks", "d": "8/2018"}, {"body": "call enable prod maints appmodulets", "d": "8/2018"}, {"body": "using openmodal type method modal ngif condition set native element undefined native element created condition mentioned ngif becomes true way around absolutely use ngif using javascript event loop manipulation using settimeout promises sort callbacks example html code open modal ts code inside export component class showmodal boolean false openmodal function thisshowmodal true var settimeout gt thatshowhidemodal samplemodal show showhidemodal id showorhide id nativeelement modal showorhide wo nt get nativeelement undefined error even ngif work angularjs event loop basically ngif ensures modal id samplemodal comes dom native element boolean showmodal becomes true therefore command actually showing modal showhidemodal function given code must part next loop openmodal function running settimeout set calling function end loop ie current function call stack therefore also need pass context showhidemodal function run given scope use variable set execution context class defined pass thatshowhidemodal settimeout time settimeout executes callback function ngif condition become true modal present dom shown hidden showhidemodal function hope helped", "d": "8/2018"}, {"body": "amazing simple things cause much confusion angular", "d": "8/2018"}, {"body": "nt worry everyone else noticed well", "d": "8/2018"}, {"body": "jakeniemiec lame job troll one searching angularjs anymore", "d": "8/2018"}, {"body": "yes would expect people would need google angular tutorial desperation hence initial comment confusion nt worry check npm exact usage stats compare amount issues would really like see angular get better suspect vuejs pass distant future programmed highly recommend vue angular devs like angular without boilerplate", "d": "8/2018"}, {"body": "ok answer accepted perfectly fine stats imagine people using php india java whole world one would idiot use php large scale enterprise app use brain sometimes life better", "d": "8/2018"}, {"body": "jakeniemiec issues created mistakenly placed support knowledge issues fact fun required topics documented well official docs answers based knowledge javascript know people nt read docs deep enough", "d": "8/2018"}, {"body": "hostbinding confusing source error consider simple binding component property checked parent component change detection itowned perspective want think child component owning property seems like way component exclude properties checking case complicated parent component run add extra div child avoid error case child component simply changing background color never anywhere else complete description", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "guess happen section complete hopefully need taken consideration", "d": "8/2018"}, {"body": "ivy part", "d": "8/2018"}, {"body": "implemented decorator bind property observable companion property used angular input properties also property inspired decorator ohjames avoids possible problems caused type mismatches property getters setters using different property provide observable example typescript class myclass bindobservable public myprop string initialvalue public myprop observable const myinstance new myclass myinstancemyprop subscribe consolelog myinstancemyprop newvalue initialvalue newvalue console", "d": "8/2018"}, {"body": "still exists matinput today", "d": "8/2018"}, {"body": "hipparch due respect feels like hack problem common one would expect supported welltested solution built angular", "d": "8/2018"}, {"body": "vicb sure relates old router relates current router well please reopen ticket otherwise another ticket opened current router", "d": "8/2018"}, {"body": "list tickets passing data routernavigate one actually location state currently tickets closed except addressed part problem issue still", "d": "8/2018"}, {"body": "splincode think", "d": "8/2018"}, {"body": "simple list component example dynamic ngtemplate", "d": "8/2018"}, {"body": "usless really useless well fun angular experiment back reactjs", "d": "8/2018"}, {"body": "per track least something like throw error missing", "d": "8/2018"}, {"body": "hi calling switch api need login first postman using authorization type basic setting username ans password want implement code using angular please help get solution thanks advance tanaji", "d": "8/2018"}, {"body": "hi tries headersset authorization basic btoa username password regards", "d": "8/2018"}, {"body": "faced problem case toplevel component input property always undefined tried componentinteraction demo worked decreased angular version hoping version bug without success input started work changed parent componet template references child component suppose bug need fixed spent day trying make work still nt undestand first version nt work windows home version npm hoping info help fix bug thanks", "d": "8/2018"}, {"title": "memory leak using async components", "body": "version reproduction link steps reproduce load reproducer take memory heap snapshot searching heap find vuecomponents app container child async child click destroy button toggles vif remove child component thus asyncchild component well point page updated expected take another memory heap snapshot search heap vuecomponent see vuecomponents still exist expected destroying child component component asynchronously loaded child component destroyed memory freed actually happening vue holding context reference preventing components garbage collected happening due resolveasynccomponent logic located forcerender function line calling forceupdate contexts array cleared free references components able garbage collected later point time", "num": "8740", "d": "8/2018"}, {"title": "docs published conflicts", "body": "", "num": "8739", "d": "8/2018"}, {"title": "set templaterendererpublicpath fly vueserverrender", "body": "problem feature solve case need set publicpath base runtime example need set publicpath base requesturl edit source code support wonder implemented officially btw webpack support set publicpath fly ref proposed api look like js const bundlerenderer createbundlerenderer serverbundle template clientmanifest runinnewcontext false request handler moduleexports async request response gt", "num": "8738", "d": "8/2018"}, {"title": "transitiongroups different tags vif velse read property vnode null", "body": "version reproduction link steps reproduce open console click button expected fact nt know would expect see error thinking maybe something wrong actually happening read property vnode null appears console", "num": "8737", "d": "8/2018"}, {"title": "vue js working safari ios", "body": "using vue js mozilla chrome browser work perfectly safari browser working perfectly environment vue js mobile iphone system version ios mobile browser safari showing code title datainfostitle desc datainfosdesc complete code business card datainfosrealname datainfosenglishname datainfoscompanyname datainfospositionname datainfoizonenum datainfosphone datainfoswxaccount datainfosfbaccount datainfosmail datainfosmdrtdtyear sdesc datainfosdesc experience itemscompany itemdtentrytime time itemdtquittime time itemsposition honor itemdtyear itemshonortitle ps introduced babelpolyfill still nt work anyone met problem could help explain little thanks", "num": "8736", "d": "8/2018"}, {"title": "vue treat every element attribute named like v something directive", "body": "version reproduction link steps reproduce run fiddle look console expected registered directive named vfake vue ignore attribute element actually happening vue treat every v something attribute directive regardless registered globally locally trying compute value v beginning attribute effect throws typeerror nt find property named like string passed attribute intentional information behavior vue docs however opinion ignore attributes", "num": "8733", "d": "8/2018"}, {"title": "input work dynamic type radio checkbox", "body": "version reproduction link steps reproduce generate input field dynamic type open project open console expected working radio checkboxes actually happening js error multiple definitions property allowed strict mode domprops value evalue value tmodel", "num": "8732", "d": "8/2018"}, {"title": "drop special logic enumeratedattrs", "body": "version reproduction link steps reproduce bind unsupported value attribute expected rendering element actually happening rendered reference vue html vue currently treat enumerated attributes values booleanlike enumerated attributes made behave like boolean attribtues actually attributes may two states extensible values example html corresponding idl attribute resolves instead present latest draft also defined possible values already accepted chrome remove logic otherwise developers ca nt leverage new features drop thing treat like ordinary attributes influence following cases sure regard breaking never documented usage binding resolved", "num": "8731", "d": "8/2018"}, {"title": "dev build console error using index key value vfor transitions", "body": "problem feature solve currently obvious way debug error including index value vbind key vfor using transitions causes erratic unexpected behavior transitions would suspect side effects untested feature would alert developer used index value place cause errors transitions example error example illustrate difficult determine vfor combined transitiongroup fails example uses vfor key one works fine nt include index key value uses index key ie vbind key index uses concatenated version vbind key item index note behavior thought bug lack documentation behavior console log entry would solved confusion instantly development instead hours debugging reporting proposed api look like check see index value used anywhere key check transition used display console error least warning proposal dev builds additionsexpansions api needed production builds", "num": "8730", "d": "8/2018"}, {"title": "antipattern computed property may cause performance issue", "body": "version reproduction link steps reproduce open code sandbox link click button use computed property filteredentities find cost lot time check call tree found code calls getter entities many times call function code leading thisentities length n getter called n times every time getter called call dependarray value thisentities array length n since dependarray iterate value depend function called n times totally found code reviewing someone pr original code use make another n times call getter easy avoid problem using array methods like call getter even cache value entities solve although easy avoid pattern still think dangerous original code obvious antipattern show performance issue array small may cause serious performance issue array large production environment expected read related source code think expected result observer system read chapter guide ensure mention sure whether need add todo computed property chapter actually happening described", "num": "8728", "d": "8/2018"}, {"title": "possible memory leak list dependencies grows computed getter", "body": "version reproduction link steps reproduce fiddle click results window multiple times notice modified vuejs follows expected frontend console logs update twice init one data update backend dependencyarray keeps size actually happening frontend console logs update every click backend dependencyarray grows fiddle notice frontend effects sure provide modified vuejs", "num": "8727", "d": "8/2018"}, {"title": "improve prop validator api", "body": "problem feature solve allows write validation logic depending multiple props allows provide custom validation messages proposed api look like example", "num": "8726", "d": "8/2018"}, {"title": "independent props validator", "body": "problem feature solve reduce packet size every component need reused validator want validate params nt need introduce another validator proposed api look like javascript const vue require vue defined customer validator vuevalidator function schema input run validator vuevalidate name type string age type number", "num": "8725", "d": "8/2018"}, {"title": "vmodel behaves inconsistently comparison docs", "body": "version reproduction link steps reproduce first docs claim using identical using behavior desktop chrome android behavior different using androidchrome model gets updated pressing space enter backspace unfocusing field maybe cases model update middle typing word however using model gets updated supposed seems like nt binding event android correct behavior achieved adding regardless whether used applies elements expected behavior expected platforms model update live every keypress actually happening chrome android model nt updated every keypress reproduced example inputs shown docs problem example creating list filtered live user input wondering whether bug documentation issue feel like bug since code different behavior different platforms", "num": "8723", "d": "8/2018"}, {"title": "event completely removed eventbus", "body": "version reproduction link steps reproduce one listener event evnets method delete event listener event events listens one listener ca nt remove event javascript one event listener var bus require vue bus eat func consolelog busevents eat func bus eat consolelog busevents eat func two event listener var bus require vue bus eat func bus sleep consolelog busevents log eat func sleep bus eat consolelog busevents log eat null sleep expected listener removed actually happening using method corresponding listener remove key events object", "num": "8722", "d": "8/2018"}, {"title": "property xxx exist type combinedvueinstance", "body": "version reproduction link steps reproduce use vuecli init ts helloworld project code like js import vue vue export default vueextend name helloworld props msg string data return wtf thisinitdata throw ts error property initdata exist type combinedvueinstance vue readonly lt msg string gt gt methods initdata return expected fix actually happening property initdata exist type combinedvueinstance", "num": "8721", "d": "8/2018"}, {"title": "\u76d1\u542c\u4e8b\u4ef6\u4e0d\u8d77\u4f5c\u7528\u4e86", "body": "version reproduction link steps reproduce \u6211\u5728\u7ec4\u4ef6\u5185\u76d1\u542c\u4e8b\u4ef6 \u7b2c\u4e8c\u6b21\u8fdb\u5165\u9875\u9762\u7684\u65f6\u5019 \u4e8b\u4ef6\u76d1\u542c\u4e0d\u4f1a\u751f\u6548 \u5728\u63a7\u5236\u53f0\u8f93\u51fa eventbus events\u5b57\u6bb5 \u540e\u9762\u663e\u793a\u7684\u662f\u7a7a\u5bf9\u8c61 expected \u5e0c\u671b\u89e3\u51b3\u95ee\u9898 actually happening", "num": "8720", "d": "8/2018"}, {"title": "vuecomponent doesnt except argument type", "body": "version reproduction link steps reproduce click repro link open testts see type errors uncomment vue type augmentation see errors disappear expected pass component actually happening type error adding following overload fix", "num": "8719", "d": "8/2018"}, {"title": "transitiongroup animates last element using index key", "body": "version reproduction link steps reproduce create vue app items displaying list add transition group vfor format like vfor item index items use index vfor vbind key like vbind key index add remove items data expected item removedadded transition applied actually happening last item list gets transition applied may old bug hunting solution problem ran may intended behavior using index key least warning message dev version vuejs explain perhaps searchable text documentation something like last item list animatingtransition applied solution found without thinking bug vuejs", "num": "8718", "d": "8/2018"}, {"title": "pass component instance async import", "body": "problem feature solve context multitenant site import templates based site site codes example componentssites sitecode topnavhomesearchvue webpackchunkname homesearch export default stuff components homesearch configsitecode complex scenario reactivity would awesome proposed api look like since config ends vuex application boot would nice instead componentssites vmsitecode topnavhomesearchvue webpackchunkname homesearch export default stuff computed mapstate sitecode state gt stateconfigsitecode use mapgetters components homesearch gt import components vm arg would third one backwards compatibility end feature request would look like could define function classically bind component context use like know scenario could import vuex store like general vm props data could used import function", "num": "8715", "d": "8/2018"}, {"title": "insert method get refparentnode patchjs nodeopsparentnode ref", "body": "version reproduction link steps reproduce note reproduction link \u7ed3\u679c\u53d1\u73b0\u4f7f\u7528 vif expected ref actually happening", "num": "8713", "d": "8/2018"}, {"title": "loosing reactivity", "body": "version reproduction link steps reproduce change value default input change value component input change value default input expected inputs keep reactive step actually happening component input stops reactive step ran issue trying compose generic form input component either input textarea wondering general misuse dynamic components found pretty convenient input textarea share lots styles props functionality refactor use vif instead", "num": "8712", "d": "8/2018"}, {"title": "modified options added extended component mixin applied super component", "body": "version reproduction link steps reproduce run code console open undefined logged comment mixin true logged late option persisted expected late option kept actually happening overwritten late option added extendoptions class function added extendoptionsoptions merge options uses late option included merge edit fix", "num": "8710", "d": "8/2018"}, {"title": "keepalive cache removed componentinstance nt destroy", "body": "version reproduction link steps reproduce cached amp amp current cached currenttag cached destroy function prunecacheentry cache key keys current var cached cache key cached amp amp current cached currenttag cached destroy cache key null remove keys key expected actually happening", "num": "8708", "d": "8/2018"}, {"title": "type checks typescript fail vuesetdelete", "body": "version reproduction link steps reproduce git clone cd vuesandbox yarn nodemodulesbintsc indexts error argument type assignable parameter type property length missing type vueset dataobj error argument type assignable parameter type property length missing type vuedelete dataobj expected type checks typescript succeed case actually happening type checks typescript fail case use number key object vuesetdelete yes create pr fixes typesvuedts", "num": "8707", "d": "8/2018"}, {"title": "", "body": "vue cached amp amp current cached currenttag cached destroy function prunecacheentry cache key keys current var cached cache key cached amp amp current cached currenttag cached destroy cache key null remove keys key", "num": "8705", "d": "8/2018"}, {"title": "prop type boolean default set false", "body": "version reproduction link steps reproduce make prop set expected prop would set actually happening prop setting prop type setting default value result prop type act way", "num": "8704", "d": "8/2018"}, {"title": "callback done nt work correctly transition", "body": "version reproduction link steps reproduce callback done nt work click step animation next step start animation end previous step check link click step animation end first step still visible screen vif step data step changed value expected expected click step see animation step step becouse use callback done animation step start animaiton step completly actually happening animation overlay animation end data vif changed elements still visible screen please tell bug something wrong", "num": "8703", "d": "8/2018"}, {"title": "csp issue compiling", "body": "version reproduction link steps reproduce compiling files compiled output file linked minimal reproduction using following used website block appjs file due new function comes directly vue file included compiling also tried step changing settings produces blank page view source shows raw html fine console errors either firefox chrome expected compile appjs without actually happening appjs producing please search file new function see culprit apologies linking anything better tried replicate using js bin joy nt think allows meta tags csp work correctly also tried set different domain got csrf token issue laravel using csp meta tags csp flags security risk tried use version set settings inside laravel guided friendly people laravelmix", "num": "8702", "d": "8/2018"}, {"title": "mark functional components dom thay displayed vue developer console", "body": "problem feature solve functional components displayable debugable vue developer console proposed api look like add additional property vuefunc htmlelement contains object basic information functional component eg context props etc property scanned vue developer tools displayed", "num": "8701", "d": "8/2018"}, {"title": "add support optional components using tag", "body": "problem feature solve currently using syntax component nt exist warning produced vue warn unknown custom element register component correctly recursive components make sure provide name option would like propose extension allow optional components wo nt provide warning component nt exist proposed api look like attribute prevent warning slot content rendered component found actually works documented would nice docs component found", "num": "8700", "d": "8/2018"}, {"title": "", "body": "", "num": "8699", "d": "8/2018"}, {"title": "transitionend event nt fired element inside leaving", "body": "version reproduction link steps reproduce open reproduction demo nonchrome browser attach listener component root el element nt matter transition child element listener callback nt fired expected transitionend event fired browsers actually happening transitionend event fired chrome use case allow use template therefore use javascript hooks regardless inconsistent behavior figured vue stopping propagation event somehow complete context use case read issue", "num": "8698", "d": "8/2018"}, {"title": "typeerror read property node undefined", "body": "version reproduction link steps reproduce npm install save add line import add code helloworldvue data expected successful call smart contract function actually happening error undefined processversionsnode xml vue work well vue packed app error", "num": "8697", "d": "8/2018"}, {"title": "new vue event bus nt delete events keys event removal", "body": "version reproduction link steps reproduce create global event bus new vue add event listener using eventbus remove listener using eventbus eventbusevents object still contain event name value null rather deleting event name property jsfiddle click add event listener remove event listener buttons events object displayed jsfiddle also javascript console adding removing listeners expected removing event listener expect event name removed global event bus vue events object actually happening event name still events object value null using lot unique event names although app tries clean events via eventbus event names still events object unless null properties get cleaned point appears memory leak", "num": "8696", "d": "8/2018"}, {"title": "get default value perent send null props", "body": "version reproduction link steps reproduce child component use default value parent send null props parent child export default props data type number default mounted consolelog data expected actually happening", "num": "8695", "d": "8/2018"}, {"title": "typescript related issues", "body": "must mainjs modified maints component import typescript component ca nt use symbol class inheritance use", "num": "8694", "d": "8/2018"}, {"title": "prop type array accept null", "body": "problem feature solve fathervue import child childvue export default components child want childvue accept prop foo etiher number null could one solution may like follow childvue export default props foo required true validator function val return typeof val number val null childvue export default props foo required true imagination type number null const simplecheckre stringnumberbooleanfunctionsymbol function asserttype value type function valid boolean expectedtype string let valid const expectedtype gettype type simplecheckretest expectedtype const typeof value valid expectedtypetolowercase primitive wrapper objects valid amp amp object valid value instanceof type else expectedtype object valid isplainobject value else expectedtype array valid arrayisarray value else valid value instanceof type return valid expectedtype first element number types array call function worked well second element null types array call function match expection param type function gettype function could work maybe easiest way solve feature extra judge null asserttype function proposed api look like", "num": "8692", "d": "8/2018"}, {"title": "component update updating components", "body": "version reproduction link steps reproduce begin typing either first two input boxes components third simple vanilla input box expected would expect vmodel update components like vanilla input actually happening updating either two components causes label vanilla input update eachother created workaround way expected behave however feel like vmodel component updating assumed mistake part looked examples vmodel components simply copy pasted component html surprised find indeed thing code codepens provided fact one sources thank advanced help", "num": "8691", "d": "8/2018"}, {"title": "install vuex subclass due missing static properties", "body": "version reproduction link steps reproduce open reproducer look console see errors expected vuex successfully installed vue subclass actually happening due dependency static properties copied errors thrown attempting use vuex component library without exposing outside boundaries library ran bug attempting install vuex globally subclass would specific library based code seems like intended one able call subclass plugin isolated subclass sure exactly considered bug patch made vuex using internally part public api copied subclass could also make vuex traverse inheritanceprototype chain reaches root vue class pull properties", "num": "8690", "d": "8/2018"}, {"title": "enumeratedattr currently base attribute feasible", "body": "problem feature solve hi happy use vue build app start read source code find html attributes isenumeratedattr exist think treat base attribute feasible although unreasonable maybe anyone help function use proposed api look like delete isenumeratedattr treat base attribute maybe", "num": "8689", "d": "8/2018"}, {"title": "weex create failed", "body": "version reproduction link steps reproduce weex create myproj expected r gt weex create myproj command need install weexpack installing project name myproj project description weex project r gt actually happening completing exceptions errors debug show error", "num": "8688", "d": "8/2018"}, {"title": "error render website created vue facebook app browser", "body": "version reproduction link steps reproduce share link facebook use facebook app click link shared please make sure use facebook app browser expected page display actually happening page blank display correctly image guess facebook browser render vuejs code", "num": "8687", "d": "8/2018"}, {"title": "global error handling vuejs applcation", "body": "hi every one im looking way catching errors globaly vuejs application mean use axios call service using catch method normally working catch ok work one method method three call method wirting catch method every method somehow annoying us im looking global error handling like global error handling implented", "num": "8686", "d": "8/2018"}, {"title": "vfor using functional component", "body": "version reproduction link steps reproduce first first issue created project take opportunity thank contributors maintainers awesome astonishing work vue thanks functional component trying use inside vfor produces error even using key fixable converting component nonfunctional one according understanding functional components way key works even functional components without state keyable nt related state component according chris fritz issue also present earlier versions expected vfor renders component without error actually happening vfor renders component error", "num": "8685", "d": "8/2018"}, {"title": "linting error props contains array", "body": "version reproduction link steps reproduce typescript build array props item expected boom contain linting error actually happening property hi exist type vue", "num": "8684", "d": "8/2018"}, {"title": "question vue single file typescript nt work well webstorm ide", "body": "version reproduction link link steps reproduce use vuecli create vuetypescript project open project webstorm expected webstorm throw warningerror something happened actually happening typescript vueclasscomponent error tip ca nt resolve file fact works typescript without vueclasscomponent vue typescript work expected webstorm mean use vscode get full support typescript new typescript appreciated got help", "num": "8682", "d": "8/2018"}, {"title": "offer option synchronous server rendering", "body": "problem feature solve benefit asynchronous server rendering offer argue little making function async guarantees oldest requests processed nt highest priority bad also leads memory usage rendering eight requests asynchronously simultaneously means nonblocking call requires eight requests resources held memory instead one time also bad offering simpler api would easier developers would guarantee requests prioritized order nt use resources next request finished last request would also decrease memory usage less overhead overall unnecessarily queueing tasks event loop less overhead overall per request proposed api look like import createrenderer vueserverrenderer const renderer createrenderer runinnewcontext false appget req res gt const markup rendererrendertostringsync new component resend markup", "num": "8681", "d": "8/2018"}, {"title": "cache access processenv", "body": "problem feature solve access slow systembound call react restructured project cache access performance improvement serverside rendering also done vue vueserverrenderer vuex anything accesses proposed api look like easy strategy might replace references reference singleton checks processenvnodeenv becomes isdevenvjs export default processenvnodeenv production foojs import isdevenv isdevenv isdevenv stuff", "num": "8680", "d": "8/2018"}, {"title": "property x exist type combinedvueinstance using typescript prop validator", "body": "version reproduction link steps reproduce use typescript build component expected component builds actually happening following error thrown property minvalue exist type combinedvueinstance remove validator prop error goes away remove data section error also goes away", "num": "8679", "d": "8/2018"}, {"title": "dynamic async import working", "body": "version reproduction link steps reproduce look minimal reproduction link see iconvue built dynamic component dynamic svgs get loaded svgs loaded svgloader see implementation vueconfigjs expected loading correct file showing icon actually happening build runs without errors creates js file every chunk perfect try import model another vue project use component following error appears icon loaded failed resolve async component function return n concat svg reason error loading chunk failed missing parses file right ca nt found code sandbox repo working component lib wanted show files iconvue vueconfigjs", "num": "8678", "d": "8/2018"}, {"title": "use vfor stateful component root element renders multiple elements", "body": "trying implement subcomponent task component another component tasklist vue returns error taskdescription use vfor stateful component root element renders multiple elements found", "num": "8677", "d": "8/2018"}, {"title": "diff nt work", "body": "version reproduction link steps reproduce register component directive methods change put component behind vfor list expected list render actually happening", "num": "8676", "d": "8/2018"}, {"title": "diff nt work", "body": "version reproduction link steps reproduce register component directive methods change put component behind vfor list actually happening", "num": "8675", "d": "8/2018"}, {"title": "make calls backend rest server part vue please", "body": "problem feature solve could please build similar functionality axios vueresource part vue framework vue usage client framework requires backend talk part vue natural place secondly one less third party depend future updates code reliability critical part data transmission performance reliability scalability like take opportunity thank team building awesome framework vuejs thank ben proposed api look like leave team know better fit api structure", "num": "8674", "d": "8/2018"}, {"title": "shorthand", "body": "problem feature solve would make repetitive declaration lot easier proposed api look like would make make extend", "num": "8673", "d": "8/2018"}, {"title": "use vbind style bind inline style autoprefixes invalid", "body": "version reproduction link steps reproduce expected width webkittransform translate transform translate webkittransition transform transition transform actually happening width transform translate transition transform", "num": "8672", "d": "8/2018"}, {"title": "weex vue ca nt create", "body": "hey guys command finished create project mean myproj created wrong see two line help please", "num": "8671", "d": "8/2018"}, {"title": "vue typescript \u5b50\u7ec4\u4ef6\u7684created\u65b9\u6cd5\u6ca1\u6709\u6548\u679c", "body": "version reproduction link steps reproduce expected \u6253\u5370consolelog actually happening \u6ca1\u6709\u6253\u5370", "num": "8670", "d": "8/2018"}, {"title": "auto bind object type von", "body": "problem feature solve javascript const clickobj click consolelog null window depent environment new vue el app data return clickobj template thisvonthis proposed api look like auto bind directive", "num": "8669", "d": "8/2018"}, {"title": "value watch array deep", "body": "version reproduction link steps reproduce watch array expected expect false actually happening get true", "num": "8668", "d": "8/2018"}, {"title": "jsx ref error", "body": "version reproduction link steps reproduce expected self refs array three menber actually happening", "num": "8667", "d": "8/2018"}, {"title": "vuetemplatecompiler line number", "body": "problem feature solve recently trying write webpack loader vue component came across package works perfectly except nt location info ast read something chinese see ast result compiler method originline indicate position tried nt get originline link sure already feature removed missing something options btw version vuetemplatecompiler using general direction would much apprieciated thanks advance proposed api look like return ast like ast originline xx", "num": "8665", "d": "8/2018"}, {"title": "vue component support selfclosingtag well", "body": "version reproduction link steps reproduce sorry example code running jsfiddle jsbin short access website quckly example code html file contains cdn link vue vue component regist code vue instance init code put nginx another webserver directly access html could see content component selfclosingtag missed change selfclosing common close way question like always use vue cdn build old project support build way develop expected content displayed autoclosingtag actually happening content missing change autoclosing way common way question fixed running chrome lastest version ie firefox may compatible question", "num": "8664", "d": "8/2018"}, {"title": "link video vuejs nt navigate anywhere", "body": "version reproduction link steps reproduce click created video link vuejs section expected web page video walk core principles sample project vuejs documentation actually happening page refreshes looking html looks like value set", "num": "8662", "d": "8/2018"}, {"title": "computed issue sorting", "body": "version reproduction link steps reproduce simple change vue jsfiddle stop working idea simple array json componen need sorted via computed function expected array elements sorted instead get error nothing shown actually happening seems infinite loop since set consolelog return statement computed function see many times called function stacktrace", "num": "8661", "d": "8/2018"}, {"title": "something like vbind also directives", "body": "problem feature solve cleaner template code especially libs like vuetify heavily depending bunch props directives proposed api look like", "num": "8660", "d": "8/2018"}, {"title": "\u5728 uiwebview\u548cwkwebview \u4e2d\u6ca1\u6709\u8d77\u4f5c\u7528", "body": "version reproduction link steps reproduce expected toast \u80fd\u591f\u4ece\u5e95\u90e8\u52a8\u6001\u6ed1\u51fa actually happening", "num": "8659", "d": "8/2018"}, {"title": "somone point component showing thank", "body": "import sidebar componentsglobalsidebarvue import navigation componentsglobalnavigationvue import footer componentsglobalfootervue export default components sidebar navigation created", "num": "8658", "d": "8/2018"}, {"title": "xss protection hook runtime vnode patching", "body": "problem feature solve following code vulnerable xss attacks xml web devs filtering application level via custom filters however problems application code could knowledge runtime running browsersweex might human errors eg newcomer dev group fails apply proper filter untrusted field really interests xss filtering renderer vnode level kept transparent application code proposed api look like called patching every vnode js const getattribute vnode attr gt const val vnodedata amp amp vnodedataattrs amp amp vnodedataattrs attr return val const setattribute vnode attr val gt vnodedataattrs attr val const getinnerhtml vnode gt const html vnodedata amp amp vnodedatadomprops amp amp vnodedatadompropsinnerhtml return html const setinnerhtml vnode html vnodedatadompropsinnerhtml html called patching every vnode vuevnodehooksprepatch vnode gt ignore components vnodecomponentinstance return remove onloadonerror string const onload getattribute vnode onload const onerror getattribute vnode onerror typeof onload string setattribute onload else typeof onerror string setattribute onerror redirect javascript href vnodetag const href getattribute vnode href typeof href string amp amp sjavascript itest href setattribute vnode href sanitize html const html getinnerhtml vnode typeof html string setinnerhtml vnode sanitize html", "num": "8657", "d": "8/2018"}, {"title": "allow components listen events", "body": "problem feature solve aware discussed previously resolution neither seem lead solution allows tightly couple two notnecessarily related components trying use datepicker component inside datatable component filter dynamic number datepicker components depending data piping datatable also integrating existing large codebase trying keep state local components vuex global vue data ex love datepicker generic date picker emit dataselected event date user selected wherever used application parent simply listen event take action case requerying data date filter right tightly couple datepicker datatable component fire datatable filtering sure seen coherent argument allowing parent listen events seen response seems singularly slots wo nt necessarily single element issue end rendering anything text plain element multiple nodes behavior unpredictable explained nt make sense add listeners nt always render single element different javascript triggered number child nodes proposed api look like allow component listen events emitted", "num": "8656", "d": "8/2018"}, {"title": "reload page redirects base url", "body": "nt know issue vue code reload page using ctrlw redirects route", "num": "8655", "d": "8/2018"}, {"title": "typescript template checking build run", "body": "version reproduction link steps reproduce clone git repo install dependencies run npm run build npm run dev expected template appvue use property test click handler image setting value click get error runtime preferably also compilation since error would nt show component nt enabled lead bugs found runtime problem correct usage typescript could solve also use property template gives error runtime though would also expect error compilation actually happening first example would expect get error runtime compilation get error right setting value click handler instead calling method would invoke error runtime method nt exist component second example would expect error compilation well nt get issues might related sure autocompletion ides eg intellij webstorm using typescript also nt great yet nt seem recognize template belongs class probably different issue thanks advance", "num": "8654", "d": "8/2018"}, {"title": "async method called vue template returns undefined", "body": "version reproduction link steps reproduce vue template calling methods render data methods console get value return template expected methods return value actually happening method returns undefined", "num": "8653", "d": "8/2018"}, {"title": "fix svg example", "body": "version reproduction link steps reproduce please open jsfiddle link use devtool show console expected warning actually happening following warning displayed console beginners see get confused fix set statid uuid use key", "num": "8650", "d": "8/2018"}, {"title": "transition working nesting component w render function", "body": "version reproduction link steps reproduce push button wait fade push button expected elements fade first click fade second click actually happening transitioning works fine transitioning transition classes applied rendering transitions child node controlled vif directive fail applied rendering controlled child components render function nt know expected behaviour overlooking something obvious feels like cases behave identical since documentation explicitly states vif implemented via js ifstatements within render functions", "num": "8648", "d": "8/2018"}, {"title": "event listener invalid working", "body": "version reproduction link steps reproduce form invalid state event handler called expected von invalid run handler function actually happening nothing", "num": "8647", "d": "8/2018"}, {"title": "", "body": "version reproduction link steps reproduce last release every cdn exaclty thing got changed updated version value expected release different actually happening release dist jsdeliver dist jsdeliver dist unpkg dist unpkg", "num": "8646", "d": "8/2018"}, {"title": "found problem used ref vfor", "body": "problem feature solve \u4f7f\u7528 ref \u548c vfor \u5bfc\u81f4 router \u62a5\u9519 vuerouteresmjs vuerouter uncaught error route navigation vuerouteresmjs typeerror read property undefined proposed api look like \u89e3\u51b3\u6b64\u95ee\u9898", "num": "8645", "d": "8/2018"}, {"title": "found problem used ref vfor", "body": "version reproduction link steps reproduce vuerouteresmjs vuerouter uncaught error route navigation vuerouteresmjs typeerror read property undefined expected \u4f7f\u7528rouerpush \u6b63\u5e38 actually happening vuerouteresmjs vuerouter uncaught error route navigation vuerouteresmjs typeerror read property undefined", "num": "8643", "d": "8/2018"}, {"title": "found problem used ref vfor", "body": "found problem used ref vfor dom fine use vfor dynamically render bind ref uerouter reporting error shown figure need help thank", "num": "8642", "d": "8/2018"}, {"title": "lookup vuex observed property containing many rows slow", "body": "hi trying render long list items number fixed cells home made grid around fixed rows scroll read different values vuex store data property around rows important understand create new cells rows created merely update content upon scrolling javascript javascript partial export default vueextend props rowno coldef rownovis data gt new mydata computed thevalue string let row storestaterowsprepared thisrowno return row lastname using vuex store property state called rowsprepared contains rows problem start scrolling read values cells rowsprepared vuex property dreadfully slow however read data standalone static non observed data object containing rows super fast reading observable vuex property slow way around done attach rowsprepared property store created observed indeed scrolling super fast however item changes value automatically tracked forced hacky refresh stuff meant done vue l help much appreciated", "num": "8637", "d": "8/2018"}, {"title": "wrong type option", "body": "version reproduction link steps reproduce clone repo expected typescript errors actually happening", "num": "8635", "d": "8/2018"}, {"title": "vue devtools recommendation shows chrome firefox", "body": "version reproduction link local dev setup steps reproduce run dev build open page firefox without vue devtools installed open devtools console expected devtools extension gets recommended actually happening recommendation shows chrome firefox logic twist used one code maybe could changed include firefox ua detection alternatively ua detection dropped link always shown users figure might switch browsers use devtools", "num": "8634", "d": "8/2018"}, {"title": "vue devtools recommendation shows chrome firefox", "body": "vuejs dev mode recommends installing devtools extension works firefox ht everybody involved recommendation probably shown firefox well line question would", "num": "8633", "d": "8/2018"}, {"title": "feature request tool allow preview document vue components", "body": "something like directly vue ui", "num": "8632", "d": "8/2018"}, {"title": "nt work vshow", "body": "version reproduction link steps reproduce run jsfiddle example expected documentation says works vshow single element expected works similar fashion vif like actually happening error thrown saying needs transitiongroup", "num": "8631", "d": "8/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u76f4\u63a5run expected \u6709\u6837\u5f0fbackgroundposition center actually happening \u6ca1\u6709backgroundposition center", "num": "8629", "d": "8/2018"}, {"title": "", "body": "", "num": "8628", "d": "8/2018"}, {"title": "module version browser", "body": "problem feature solve allow use based module without compile would allow mixed version use vue complex system example cms could use vue part gui using module website owner could include vuejs direct", "num": "8627", "d": "8/2018"}, {"title": "self closing element wraps following textnode", "body": "version reproduction link steps reproduce run fiddle expected closing element textnode actually happening textnode wrapped element", "num": "8626", "d": "8/2018"}, {"title": "vue typescript property exist type computed function", "body": "version reproduction link steps reproduce codesandbox seems support typescript code intelligense file code typescript import vue vue interface testinterface string export default vueextend props type object gt testinterface computed return expected typescript compiler complaint actually happening property exist type way solve problem", "num": "8625", "d": "8/2018"}, {"title": "input input attribute change caused keydown", "body": "version reproduction link steps reproduce device mac input text expected input text actually happening input text", "num": "8624", "d": "8/2018"}, {"title": "bug transitiongroup indexed animation", "body": "version reproduction link steps reproduce run jsfiddle vfor key index delete one item array animate last item change key error work properly give vue warn avoid using nonprimitive value key use stringnumber value instead vue warn duplicate keys detected object object may cause update error expected expected animate item removed like using error actually happening animating last item loop using index trying create one alert notification component", "num": "8623", "d": "8/2018"}, {"title": "locally registering components ignores name field favor imported object reference name specific cases", "body": "version reproduction link steps reproduce create component name includes titlecased acronym like locally register component importing naming reference something like including section expected component register imported component using name defined within component definition actually happening component defined name ignored instead name imported object reference component used instead converted name nt match component defined name aware naming imported reference something like works concern defined name ignored example demonstrates", "num": "8622", "d": "8/2018"}, {"title": "locally registering components ignores name", "body": "", "num": "8621", "d": "8/2018"}, {"title": "suggesion add support rest parameters within vfor", "body": "problem feature solve think would make template composition lot easier many cases particularly using scoped slots via renderless componetns example could vue rather vue proposed api look like changes api", "num": "8620", "d": "8/2018"}, {"title": "optimize comment regexp", "body": "version reproduction link steps reproduce find comment regexp find use maybe remove", "num": "8619", "d": "8/2018"}, {"title": "optimize comment regexp", "body": "find comment regexp find use maybe remove", "num": "8618", "d": "8/2018"}, {"title": "support use event custom vue event", "body": "version steps reproduce expected warning actually happening use event custom component shows vue warning chrome console", "num": "8617", "d": "8/2018"}, {"title": "duplicate dom vif change duplicates select tag change velsevelseifother vif", "body": "version reproduction link jsfiddle steps reproduce change select first b click second tab er select second still default value ar select second changed index first select furthermore change input first anything click second tab er input second blank ar input second black contains contents first tab expected select second still default value actually happening select second changed index first select add id class either container div make non identical wo nt happen", "num": "8616", "d": "8/2018"}, {"title": "nt escape html char codes mustache expressions", "body": "problem feature solve currently want html unescaped char codes must use directive since regular mustache expressions html gets escaped would possible escape html tags retain char codes mustache expressions would make injected text secure still allowing users put special characters need char codes could also escaped filter find inelegant especially since ca nt use certain features eg filters directives proposed api look like proposing next breaking release added vue mustache expressions default rendering could added option sort", "num": "8615", "d": "8/2018"}, {"title": "set computed nt work collections arrays object", "body": "computed collection somecollection template try smth like expected result change text input field console see set work thats mean set somecollection work real result see nothing console log set somecollection wo nt run change text input field", "num": "8614", "d": "8/2018"}, {"title": "processing style miss webkit profix", "body": "version reproduction link steps reproduce open jsfiddle use devtool inspect element expected style div element webkitbackgroundclip text actually happening style div element backgroundclip text chrome version ok using stylecsstext set style according use use property must prefix webkit think two way resolve ugly change vue setprop method case official document", "num": "8612", "d": "8/2018"}, {"title": "disabled validate type format", "body": "problem feature solve make app page mobile want get number type keybord set input type number want input input number blank like vue tell valid number clear input key point want get number keyboard want input number formatter like proposed api look like vue options valid input type", "num": "8611", "d": "8/2018"}, {"title": "null property", "body": "problem feature solve think nice feature like angular prevent errors like something like proposed api look like stops interpret expression", "num": "8610", "d": "8/2018"}, {"title": "select element binding initial value value vmodel causes different result", "body": "version reproduction link steps reproduce use value vbind value bind initial value select tag nt work code snippet please select itemname please select itemname expected initial value binding vbind set properly vmodel binding actually happening initial value binding vbind set properly", "num": "8607", "d": "8/2018"}, {"title": "\u52a8\u6001\u7ec4\u4ef6\u6e32\u67d3\u4e0d\u751f\u6548", "body": "version reproduction link steps reproduce code\u5982\u4e0b import pagelist componentspagelist const pagelisttotal const pagelisttabs const pagelistcomp pagelist name let lt pagelisttotal let compname msgtab pagelisttabspush compname pagelistcomp compname pagelist name compname export default components pagelistcomp template expected actually happening", "num": "8606", "d": "8/2018"}, {"title": "loop iview form error binding vmodel directly vfor iteration alias", "body": "errormessage binding vmodel directly vfor iteration alias able modify vfor source array writing alias like modifying function local variable consider using array objects use vmodel object property instead", "num": "8605", "d": "8/2018"}, {"title": "option nt work functional components", "body": "version reproduction link steps reproduce open pen see logs console expected empty object actually happening empty", "num": "8604", "d": "8/2018"}, {"title": "text select box vmodel time update value", "body": "version reproduction link steps reproduce try change dropdown value text displayed select box almost always stay today despite value changing though sometimes actually change correct value see actual value indeed changing even select box show expected options select based array value pairs text val text shown select val actually passed stored data object expect text change well value selecting option actually happening value changes every time text mostly stays unchanged text rarely change expected consistently showing wrong text right value would assume something wrong since infrequent sure would surprised something wrong going insane please savior", "num": "8603", "d": "8/2018"}, {"title": "newline compiler error", "body": "version reproduction link steps reproduce copy single html file open open dev console see print err info expected show normally actually happening dev console showed error uses windows newlines rn uses posix newlines n", "num": "8602", "d": "8/2018"}, {"title": "\u5b50\u7ec4\u4ef6\u4e0d\u80fd\u4f7f\u7528", "body": "\u5b50\u7ec4\u4ef6\u4e0d\u80fd\u4f7f\u7528 \u6709\u4ec0\u4e48\u5176\u4ed6\u529e\u6cd5\u5b9e\u73b0\u5417", "num": "8599", "d": "8/2018"}, {"title": "vuejs output different html expected", "body": "version reproduction link steps reproduce create add divs nested option tags inside expected vuejs output actual generated code even incorrect html actually happening corrects invalid dom output preventing browser seems unnatural since output vuejs different one major browsers raise issue knowing could easily closed", "num": "8598", "d": "8/2018"}, {"title": "vue \u4e2d\u662f\u7528webgl\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898", "body": "version reproduction link steps reproduce \u6253\u5f00 srcpageshomemap \u4e0b\u7684initviewjs\u91cc\u9762\u7684lazycreatemode true \u6539\u4e3afalse \u6216\u8005\u76f4\u63a5\u5207\u6362\u591a\u4e2a\u697c\u5c42 expected \u5e0c\u671b\u53ef\u4ee5\u77e5\u9053\u539f\u56e0 actually happening", "num": "8597", "d": "8/2018"}, {"title": "\u6709\u5173vue\u4e4bwatch\u7684\u95ee\u9898", "body": "", "num": "8596", "d": "8/2018"}, {"title": "scrolling fast android makes dom content disappear", "body": "version reproduction link steps reproduce happens android devices intermittent ive also tested browserstack could nt reproduce happening actual android devices load page scroll really fast sometime pieces dom images disappear scroll back back content might expected dom see constantly actually happening dom android nt rendering reason isolated android os issue problems ios desktop devices also tried upgrade latest version vue removed party dependencies point nt know vue problem something else figured would submit ticket see anyone else reported issue like", "num": "8594", "d": "8/2018"}, {"title": "use reusable transitions reusable transitions working", "body": "version reproduction link steps reproduce create app parents routes components routerview first route component create children route component routerview create reusable transition apply parent routerview childre routerview expected reusable transition would like use transition passage parent routing reusable transition would like another transition children routing actually happening one transition work add reusable transition parent routerview children routerview children transition work remove children transition parent transition work nt transition children try use transition parent routerview children routerview without use reusable transition tag case work", "num": "8593", "d": "8/2018"}, {"title": "\u5f39\u7a97\u540e\u6309\u952eesc error info", "body": "error error event handler runtimeonmessage typeerror read property isvisible undefined adefaultsharedinstanceaddeventlistenert foreache tdefaultdispatchevent fhandledispatchbroadcast fhandlemessage listener", "num": "8592", "d": "8/2018"}, {"title": "interact native vue engineering project", "body": "contrast title npm package smooth difference ios android good", "num": "8591", "d": "8/2018"}, {"title": "remove component element list", "body": "version reproduction link steps reproduce click second item click button expected second item removed actually happening last item removed", "num": "8590", "d": "8/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u65e0\u8bba\u4f7f\u7528 \u53ea\u8981\u8fc7\u6ee4\u5668\u542b\u6709read expected typeerror f function proxyeval eval createfunction vuerender vueupdatecomponent watcherget new watcher mountcomponent vue mount vue mount vueinit new vue actually happening error", "num": "8589", "d": "8/2018"}, {"title": "define slot scope props vm similar props", "body": "problem feature solve access slotscope props directly vm currently ca nt create computeds watchers slot scope prop vm access pass around arguments proposed api look like say list component current usage javascript evens evens somepropsitems odds odds somepropsitems new vue el app methods evens items return itemsfilter n gt n odds items return itemsfilter n gt n javascript evens evens odds odds new vue el app slotscope something like default items array computed slotitems return thisslotscopedefaultitems evens return thisslotitemsfilter n gt n odds return thisslotitemsfilter n gt n", "num": "8588", "d": "8/2018"}, {"title": "tunneling slots inside scopedslot triggers warning incorrectly", "body": "version reproduction link steps reproduce create renderless component passes data default scopedslot component uses renderless component root populates scopedslot template two components regular slots one tunneling passed content second slot slots different names affect issue like somehow force renderless component update expected warning shown actually happening triggers warning duplicate presence slot sep found render tree likely cause render errors found gt srccomponentsmiddlecomponentvue might also work incorrectly trigger additional unnecessary rerenders source code responsible showing warning probably meant detecting usage slots inside vfor loops however case seems called incorrectly since slot rendered reason might flag reset situation using renderless component tunneling outside scopedslot trigger error using scopedslots instead regular slots also trigger warning check skipped potentially related", "num": "8587", "d": "8/2018"}, {"title": "access vue instance another js file", "body": "problem feature solve need access instance vue another file exemple entrypointjs contains new instance vue would like access vm instance otherjs import vm entrypoint windowonload function consolelog vm error reason request able execute method view control external js proposed api look like didnt see documentation solution problem", "num": "8585", "d": "8/2018"}, {"title": "get code coverage vue files running project similar istanbul", "body": "problem feature solve business vue code write unit tests inefficient code needs coverage intanbul get coverage compiled js ugly wish supported proposed api look like vuetocoverageversioncode true return code contains extends code add get coverage data vueprototypegetcoveragedata gt return coverage data", "num": "8584", "d": "8/2018"}, {"body": "submit pr fix issue well thanks", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "note dug issue use vshows instead vif else works transitiongroup tag works even vifelse however practical case components transitiongroup children works", "d": "8/2018"}, {"body": "also thought nesting transitiongroups divs apply vifelse get error added code codepen", "d": "8/2018"}, {"body": "add attribute well remove error error nt appear indeed", "d": "8/2018"}, {"body": "posva thank workaround", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "imho think docs clear enough lookup good behavior makes debugging easier want add property want vue treat directive using data attributes instead", "d": "8/2018"}, {"body": "maybe would make sense resolve directive show error like value", "d": "8/2018"}, {"body": "posva guess could work", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "came open issue contenteditable couple states contenteditable reference", "d": "8/2018"}, {"body": "possible sometimes may want use index key really think open pr docs add note transitiongroup said issue", "d": "8/2018"}, {"body": "would never want use index key transition causes error demonstrated something wrong example showing error", "d": "8/2018"}, {"body": "yeah right nt think makes sense use index scenario transitiongroup sure easy add warning though", "d": "8/2018"}, {"body": "get point free time least look code able add kind thing perhaps dev object tracks features used render ie transition used index found ie template render would tracked well conflicts could found features used know easy say kind thing whole thing actually build high level dev theorize", "d": "8/2018"}, {"body": "tested using latest version vue count deps goes back array emptied memory leak", "d": "8/2018"}, {"body": "oh ok sorry misinterpreted deps array purpose", "d": "8/2018"}, {"body": "function returned stop rest code executing", "d": "8/2018"}, {"body": "fan adding prop argument think return string validator function let vue treat error counter proposal", "d": "8/2018"}, {"body": "removing feature breaking change wo nt reduce much packet size", "d": "8/2018"}, {"body": "talking components indeed explained different input vmodel please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "posva documentation talk per report input model immediately updated android typing plenty issues reported vue regarding specific use case already either documentation needs updated reflect vue internally handle better automatically picks correct way update element based input type nt particularly sound correct", "d": "8/2018"}, {"body": "search quite bit also agree least docs could updated unexpected inconsistency example text input docs reproduction link behaves differently androidchrome compared desktopchrome record angular issue regardless composition mode", "d": "8/2018"}, {"body": "see docs say languages require ime chinese japanese korean etc notice vmodel get updated ime composition want cater updates well use input event instead also happening english languages nt require ime ime autocompleteword suggestions disabling gives desired behaviour", "d": "8/2018"}, {"body": "events firing correctly keys removed object normal", "d": "8/2018"}, {"body": "seems intentional guess ca nt accidentally access computed properties via method edit", "d": "8/2018"}, {"body": "nt understand bad would happen access computed properties via method", "d": "8/2018"}, {"body": "nt exist yet", "d": "8/2018"}, {"body": "uh nt use property use function exist may turn instead native vue still friendly typescript maybe proficient vue anyway thanks helping", "d": "8/2018"}, {"body": "yeah know bit silly guess might done", "d": "8/2018"}, {"body": "hi please make sure follow issue reporting guidelines opening issue provide valid repro use thanks", "d": "8/2018"}, {"body": "type union type use type means function return vue constructor component options object think use concrete type return type", "d": "8/2018"}, {"body": "function loads components via webpacks requirecontext also esmodule type async comps hints component also vuecomponent overload foreach member type component union think problem typescript able check correctly", "d": "8/2018"}, {"body": "another indicator ts problem following works", "d": "8/2018"}, {"body": "well valid component", "d": "8/2018"}, {"body": "ofc point ts somehow finds correct overload ts type component typeof vue componentoptions functionalcomponentoptions const first const firstcomponent component first vuecomponent first first ok vuecomponent firstcomponent firstcomponent ok const second functional true const secondcomponent component second vuecomponent second second ok vuecomponent secondcomponent secondcomponent ok const third vueextend const thirdcomponent component third vuecomponent thrid third ok vuecomponent thirdcomponent thirdcomponent ok declare function getcomponent component const final component getcomponent vuecomponent final final type error typescript problem ts seems like doesnt allow multiple overloads match final case requiring", "d": "8/2018"}, {"body": "plain typescript example demonstrating problem", "d": "8/2018"}, {"body": "see use case sure union type sometimes passes overload replace fallback overload method type", "d": "8/2018"}, {"body": "expected key controls vue reuses elementscomponents therefore crucial transitiongroup read guide", "d": "8/2018"}, {"body": "respect time please understand nt put bug report without looking answer first please respectful time nt dismissive found new error well search see example end search documentation searched documentation entirely either bug undocumented documented reasonable place search index transition guide looked every single instance could find read guide know unreasonable usually ask seriously looked everything even searching online found nothing topic provide link documentation search results index shows times transitions guide mention effects index transitions transitions section index shows times list rendering guide mention transitions index shows times api docs none reference context transitiongroup transitions updated example new error found found one example cookbook using index key fails worse example instead last item animating entire block fades inout example", "d": "8/2018"}, {"body": "using index key default behaviour propositions notes add docs open pull request proposal vuejsorg repository maybe transitiongroup page right place last example keys changing vue replacing every single li remember use forum discord server get quick feedback questions", "d": "8/2018"}, {"body": "megacromulent vue perspective used identify unique items list let give example assume rendered list array using keyed items indexes remove list telling vue item item item removed transition occurs elementcomponent got addedremovedshowedhide view last item transitioned", "d": "8/2018"}, {"body": "justineo thanks explanation certainly clears errors happening results look like errors documented anywhere could find easily found posva open pull request proposal vuejsorg repository nt even consider idea never done pr hope nt make mess thanks guys edit error vuejsorg cookbook", "d": "8/2018"}, {"body": "really nt preference implementation though arrow function would cleanest maybe splat operators could work idk", "d": "8/2018"}, {"body": "actually already computed property use attribute", "d": "8/2018"}, {"body": "awesome", "d": "8/2018"}, {"body": "posva please update code add return line", "d": "8/2018"}, {"body": "intentional", "d": "8/2018"}, {"body": "well remove arrow fn get errors found gt without", "d": "8/2018"}, {"body": "returns object fine though", "d": "8/2018"}, {"body": "works without arrow function declare property method computed property", "d": "8/2018"}, {"body": "need use modifier bound dynamic component done automatically binding input", "d": "8/2018"}, {"body": "thanks clarification", "d": "8/2018"}, {"body": "hi please make sure follow issue reporting guidelines opening issue list steps reproduce important make sure clean unecessary dependencies like vuex also provide simple jsfiddle codesandbox instead github repo using old version cli would make things much easier us test thanks", "d": "8/2018"}, {"body": "thanks version vue upgraded works well", "d": "8/2018"}, {"body": "nt object", "d": "8/2018"}, {"body": "using number key object recommended actual case identifier type number appreciate use number object", "d": "8/2018"}, {"body": "sure allowing implicit type conversion typings think enough convert id string using constructor", "d": "8/2018"}, {"body": "js conversion implicit want use strict typing cast number string js implicitly access thing said typescript allows without warning think support", "d": "8/2018"}, {"body": "note inverse true arrays ts const record false true const b boolean b false element implicitly type index expression type number b true could also go fully strict instead might annoy people ts declare function set object key k value const c record const boolean const e foo bar baz foo bar set c false set c false nope set c string nope set false nope set false set string nope set e false nope set e false nope set e foo string nope set e bar baz nope set e foo baz", "d": "8/2018"}, {"body": "thank comments fully understand behavior object also agree better use constructor since access object using number implicit use string project well ok close issue", "d": "8/2018"}, {"body": "nt close may add support", "d": "8/2018"}, {"body": "ok", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "expected behaviour convenience prop supposed boolean either present absent therefore true false", "d": "8/2018"}, {"body": "reason velocity calling callback pretty much question disguised issue want one visible make sure put everything transition change mode please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "hello eduardo look wrote forum nobody answer check use greensock gsap mode outin problem still next animation start previous end please give minute work time little help", "d": "8/2018"}, {"body": "please check", "d": "8/2018"}, {"body": "thank link apparently possible using laravel suggestions", "d": "8/2018"}, {"body": "pretty sure something like webpack laravel laravelmix maybe anyway google forums discord friends", "d": "8/2018"}, {"body": "thanks posva tried vue discord said try fix made worse guys suggested post thing laravel uses already uses ca nt upgraded guess going try work make use use standalone compiler", "d": "8/2018"}, {"body": "support functional components already making afaik mentioned vuejs sprint summary lately", "d": "8/2018"}, {"body": "believe already tracked akryum somewhere else akryum reopen really want track sides", "d": "8/2018"}, {"body": "devtools functional components displayed need merge able display props", "d": "8/2018"}, {"body": "could also lt component vif foo foo gt component found produce result", "d": "8/2018"}, {"body": "better achieved userland render function could also make sure component exists computed property returning component fallback example although nt know usecase behind seems really weird dynamic component use nonexistent component", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "\u624b\u52a8\u622a\u53d6\u4e0d\u5c31\u597d\u4e86", "d": "8/2018"}, {"body": "nt show chrome either windows adding fixes chrome firefox edge", "d": "8/2018"}, {"body": "weird works official build windows", "d": "8/2018"}, {"body": "seems related element removed dom", "d": "8/2018"}, {"body": "related vue also vue moment", "d": "8/2018"}, {"body": "thanks memory leak since properties arbitrarily added object control events added bus btw cleanup creating new object", "d": "8/2018"}, {"body": "hmm nt issue nt completely clean created", "d": "8/2018"}, {"body": "imagine would break quite things want default value pass instead", "d": "8/2018"}, {"body": "kaelwd said", "d": "8/2018"}, {"body": "kaelwd thanks give example", "d": "8/2018"}, {"body": "convert values pass prop nt produce nullable values", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "kaelwd thank much", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "\u4e00\u822c\u7528boolean\u7c7b\u578b\u53ef\u4ee5\u89e3\u51b3\u4f60\u7684\u9700\u6c42\u5427", "d": "8/2018"}, {"body": "already accept null", "d": "8/2018"}, {"body": "kaelwd easy know debuged asserttype function jsfiddle link snap", "d": "8/2018"}, {"body": "guess get githubbing phone", "d": "8/2018"}, {"body": "want accept null make either nonrequired use validator ps next time take time create small fiddle help us", "d": "8/2018"}, {"body": "posva must required use validator wrote knew validator one solution verbose think feature request", "d": "8/2018"}, {"body": "validator fine remeber prop validation happens development", "d": "8/2018"}, {"body": "nt sync inner value prop updates see correct example using nested", "d": "8/2018"}, {"body": "vuex meant apps libraries use injectprovide shared object sharing data lib", "d": "8/2018"}, {"body": "posva thanks advice ultimately issue using plugin depends public api provided vue successfully install subclass vue plugin happens vuex nt matter discussion could plugin maybe wants silence logging set public api intended usage unit test vue prove point able install plugin subclass without polluting root", "d": "8/2018"}, {"body": "nt understand explicitly talking vuex problem", "d": "8/2018"}, {"body": "talking fact properly subclass vue including static props making required know implementation details plugin implemented order use subclasses vue simple reproducer using hello world plugin made demonstrate", "d": "8/2018"}, {"body": "honestly nt understand wrote anything actionable maybe could use forum discord server discuss come back different formulation", "d": "8/2018"}, {"body": "related directly vue repro", "d": "8/2018"}, {"body": "please provide reproduction link source code probably caused facebook app browser webview supporting javascript features using make sure correctly set babel transpile javascript support older browserwebviews", "d": "8/2018"}, {"body": "thank response link website check websites used vue found issue", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "vue currently provides wellknown limitations probably addressed upcoming release see fits needs", "d": "8/2018"}, {"body": "actually deal vueloader data specifically key passed implicitly template could open issue nt exist yet writing js usually data contains attribute passed parent", "d": "8/2018"}, {"body": "believe belongs vetur repo", "d": "8/2018"}, {"body": "nothing related vue core", "d": "8/2018"}, {"body": "please read instructions provided issue helper issue list reserved exclusively bug reports feature requests means accept usage questions open issue conform requirements closed immediately strict usage questions please use following resources read docs watch video tutorials ask forums ask chat look ask questions stack overflow also try search issue may already answered even fixed development branch however find old closed issue still persists latest version open new issue using form instead commenting old issue", "d": "8/2018"}, {"body": "benefit asynchronous server rendering offer argue little primary reason async vue internal scheduler works async well making completely synchronous process without altering behaviour app nt really possible incomplete knowlde internals happy corrected making rendertostring function async guarantees oldest requests processed nt highest priority bad freely admit expert http request performance etc bad", "d": "8/2018"}, {"body": "possible see", "d": "8/2018"}, {"body": "typescript bug also removes error", "d": "8/2018"}, {"body": "kaelwd works", "d": "8/2018"}, {"body": "\u30c4 type signature idea try reproduce without vue open issue", "d": "8/2018"}, {"body": "codesandnbox image loaded nt exist error coming webpack btw makes sense closing webpack question unrelated vue import working make sure getting right thing", "d": "8/2018"}, {"body": "posva like said description codesandbox link fully working look gitlab repo original code add svgs assetsfalight make work already posted another issue webpack community", "d": "8/2018"}, {"body": "oh nevermind import svg used component however put data pass directive", "d": "8/2018"}, {"body": "posva know like described use svgloader webpack loader possible use component ca nt problem", "d": "8/2018"}, {"body": "posva tried using data without loader got error", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "repro work encapsulated behaviour component nt manipulate dom manipulated vue modifying even worse touching parent component please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "maybe wrong way operation two popular vue ui frameworks bug encountered accidentally triggered using iview modal elementui dialog component lifecycle mounted iview modal component directive scenarios operations may necessary avoid writing", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "truth need build anything specific use axios file export functions js import axios axios const contacts axioscreate baseurl export function getcontacts q return contacts get params q response gt responsedata export function getcontact id return contactsget id response gt responsedata framework agnostic allows easily mock things tests well", "d": "8/2018"}, {"body": "benhayat also always make something part vue adding instance property even official example access axios", "d": "8/2018"}, {"body": "thanks guys", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "prefixes apply necessary next time please provide steps reproduce like element look repro really complex", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "u need help go reactnative side ask rules creating issues", "d": "8/2018"}, {"body": "weex vue separate projects also feel free use whatever like nt really care", "d": "8/2018"}, {"body": "u sure somebody bad knowing proj search", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "\u9ebb\u70e6\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684 github", "d": "8/2018"}, {"body": "probably typo", "d": "8/2018"}, {"body": "posva say typo created fix", "d": "8/2018"}, {"body": "sodatea \u9ebb\u70e6\u5e2e\u5fd9\u770b\u4e00\u4e0b", "d": "8/2018"}, {"body": "footer \u7c7b\u6ca1\u6709\u52a0 \u88c5\u9970\u5668", "d": "8/2018"}, {"body": "sodatea \u8fd8\u8981\u52a0\u4e00\u4e2acomponent", "d": "8/2018"}, {"body": "sodatea", "d": "8/2018"}, {"body": "thanks proposal usually functions come methods arrow functions defined computed property function defined outside quite uncommon get much less could even achieved helper adapt specific needs times want use methods fat arrows besides prefer explicit behaviours app preferable", "d": "8/2018"}, {"body": "expected array modified", "d": "8/2018"}, {"body": "need add well property realising documented create pr", "d": "8/2018"}, {"body": "duplicate pr", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "limitation put debugger new vue get see vue receives template limitation nt exist string templates vue files", "d": "8/2018"}, {"body": "posva jacekkarczmarczyk thanks understanded", "d": "8/2018"}, {"body": "probably related closing duplicate however modifies original array create new one first work", "d": "8/2018"}, {"body": "probably looking arguments", "d": "8/2018"}, {"body": "unfortunately said looking something like vbind vbind vbind use props directives", "d": "8/2018"}, {"body": "need much dynamicity probably time use render functions js", "d": "8/2018"}, {"body": "ca nt reproduce ios amp webview app", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "eem sure happen kind website content completely provided users set whole href attribute instead similar case makes sense sanitize data applications one would never write link whole url coming nonverified user content adding special handling would negative impact performance specific use case people need developer responsibility say docs pretty much explicitly writing code leads xss nt see anyone would write code besides testing purposes think would make sense either add entry cookbook page xss docs cc chrisvfritz sdras", "d": "8/2018"}, {"body": "posva agreed possible performance impact try xss filter check compile phase meanwhile detailed xss explanation docs could great", "d": "8/2018"}, {"body": "posva opengg working security page speak", "d": "8/2018"}, {"body": "btw far upcoming security guide regarding specific issue url like potential security issue url sanitized prevent javascript execution using libraries sanitizeurl help note ever url sanitization frontend already security issue userprovided urls always sanitized backend even saved database problem avoided every client connecting api including native mobile apps unfortunately vue also help guarantee userprovided urls lead safe destinations feedback welcome", "d": "8/2018"}, {"body": "chrisvfritz mention maybe also occur security checks may impact performance possible checking development mode warning people potential xss vulnerabilities detected", "d": "8/2018"}, {"body": "really possible add warning development mode know data untrusted could warn find something like data means developer already aware see vulnerability closing since chris working documentation", "d": "8/2018"}, {"body": "opengg mention event attributes like", "d": "8/2018"}, {"body": "thanks interesting however nothing changes regarding existing arguments event always bound single elementcomponent looks like need pass function scoped slot let parent use function example unclear could done like could clarify exactly problematic trying write template", "d": "8/2018"}, {"body": "posva bare bones git repo trying suggestion using still ca nt get work wrong hoping achieve datefilter component emit event two dates selected start end user clicks apply button nt example datatable component listen event call server request new data date filters edit also apologize creating example renamed datepicker datefilter idea srcappvue import datatable componentsdatatablevue import datefilter componentsdatefiltervue export default name app components datatable datefilter srccomponentsdatatablevue table cell table cell table cell export default data return methods querydata eslintdisablenextline consolelog querying data server calling api endpoint etc srccomponentsdatefiltervue select export default data return", "d": "8/2018"}, {"body": "yeah solved using function check repository right could help codesandbox", "d": "8/2018"}, {"body": "posva sure understand solved tried recommended could nt get work even said response reopen get working solution", "d": "8/2018"}, {"body": "asking question closed asked forums discord server however offer help provide codesandbox", "d": "8/2018"}, {"body": "rationale allowing vue components composed almost like html elements yet able listen events way crux request create html elements vue components nest manner html also allow events work way javascript three issues still nt understand anything single multiple components slot html listen events number child elements ie works link link documentqueryselector div addeventlistener click function e epreventdefault consolelog clicked yet vue compose elements way ca nt listen event emitted way ie ca nt listen event emitted relationship still clearly since workarounds called listening parent still tightly couples two stopping us bubbling event slot parent keeping mental model events line html javascript codesandbox help would appreciated", "d": "8/2018"}, {"body": "posva open new ticket request request vue match event bubbling composition html since already similar", "d": "8/2018"}, {"body": "please nt open new issue precisely nt bubbling implicit leads problems mon aug ian notifications githubcom wrote posva open new ticket request request vue match event bubbling composition html since already similar receiving mentioned reply email directly view github mute thread gt eduardo san martin morote", "d": "8/2018"}, {"body": "posva help understand mean precisely nt bubbling implicit nt implicit mean bubbling happening level", "d": "8/2018"}, {"body": "posva hey guys anything could even link understand meaning seen event bubbling issue pop github stackoverflow vue forum spent days searching explanation finding anything makes sense precisely nt bubbling implicit leads problems mean", "d": "8/2018"}, {"body": "looking feature like", "d": "8/2018"}, {"body": "theianjohnson implicit refers default behavior proactively asked opposed explicit many cases would lead confusions gotchas eg javascript implicitly type conversions use operator true generally considered design flaw", "d": "8/2018"}, {"body": "fnlctrl appreciate explanation relate event bubbling listening vue specifically firing event component nt pretty explicit", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "let keep progress one place ts check would need add specific behaviour plugin typescript much vue", "d": "8/2018"}, {"body": "return value async function instance", "d": "8/2018"}, {"body": "hi return value async function instance use template modified fiddle suppose work", "d": "8/2018"}, {"body": "may want use vuepromised things like", "d": "8/2018"}, {"body": "justineo code work static given example data loops call method mounted", "d": "8/2018"}, {"body": "sodatea promise still returns empty object", "d": "8/2018"}, {"body": "help please sodatea could please ask issue creator issue resolved closing issue", "d": "8/2018"}, {"body": "filing bug report actually expected behavior issue closed maintainers nt ask permission justineo code work str static given example data loops items call method mounted loop make multiple network requests maintain resolved value local data array something vue take care decide organize application logic", "d": "8/2018"}, {"body": "javascript syntactic two snippets basically identical passing instance vue template engine calls underlyingly template interpolations get stated issue helper page issue list reserved exclusively bug reports feature requests usage questions please use following resources read docs watch video tutorials ask forums ask chat look ask questions stack overflow", "d": "8/2018"}, {"body": "sometimes using key intentional said docs thanks interest think example fine like warning includes link docs quite opposite confusing confusing would read x undefined undefined function", "d": "8/2018"}, {"body": "sometimes using key intentional said docs yeah right thanks fast checking", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "thanks pointing could nt find updated fiddle showcasing use cases really quite gotcha though feels little bit unfortunate transitions supposed optional use case highly decomposed components", "d": "8/2018"}, {"body": "also put transition inside component wrap root element prop provided", "d": "8/2018"}, {"body": "vuerelated event fired input element form element nt bubble works expected html submit export default name helloworld data gt msg validated yet methods handlesubmit thismsg submit event fired handleinvalid thismsg invalid event fired", "d": "8/2018"}, {"body": "true manually addeventlistener invalid form element works correctly", "d": "8/2018"}, {"body": "link vanilla working javascript", "d": "8/2018"}, {"body": "missing vue version", "d": "8/2018"}, {"body": "yeah posva beat works capture since event nt bubble thought solution first", "d": "8/2018"}, {"body": "perfect working expected thank", "d": "8/2018"}, {"body": "normal release fixed security bug affect ssr thus included client version vue", "d": "8/2018"}, {"body": "ok thanks sorry noise", "d": "8/2018"}, {"body": "\u8fd9\u662f\u4f60\u8fc7\u53bb\u534a\u5c0f\u65f6\u5f00\u7684\u7b2c\u4e09\u4e2a\u76f8\u540c issue \u8bf7\u4e0d\u8981\u80e1\u4e71\u586b\u5199 issue \u53cd\u9988\u8bf7\u5e26\u4e0a\u53ef\u4ee5\u590d\u73b0\u7684 demo", "d": "8/2018"}, {"body": "nt supply repro link description incredibly nonhelpful probably either vuejsvuerouter", "d": "8/2018"}, {"body": "\u8bf7\u4e0d\u8981\u80e1\u4e71\u586b\u5199 issue issue helper", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hey ca nt really help without runnable code look", "d": "8/2018"}, {"body": "know show firefox safari well znck akryum possible always display remote devtools something else need changed", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "already party tools like vueplay", "d": "8/2018"}, {"body": "work try put seconds transition see yes one element tag else need use works way example bind value element like use instead vif ca nt render elements time vshow technically even never going happen condition", "d": "8/2018"}, {"body": "maxirozay said", "d": "8/2018"}, {"body": "hi maxirozay posva stated observed used vif mode specified clearly moment one element exists place trying use vshow two different custom components simple example using transitiongroup apparent drawback layout clashing mode attribute supported reason trying use vshow use vshow prevent component destroyed keep component state tried use keepalive seems keepalive designed case make sense feature request support vshow suggestion keepalive needs sincerely", "d": "8/2018"}, {"body": "nt see keepalive would nt work would rather discussion forum discord server sure find way", "d": "8/2018"}, {"body": "posva thank look case", "d": "8/2018"}, {"body": "nothing deal vue please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "closed", "d": "8/2018"}, {"body": "\u8bf7\u67e5\u4e00\u4e0b", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "please see", "d": "8/2018"}, {"body": "yes thread refers file found undocumented development file latest version commitment part standard builds heart feature request also almost year ago last comment june thread looks dead also notice url provided implies file version build trust spend time testing long term expectations glad see topic discussed evan hope makes esm build official", "d": "8/2018"}, {"body": "pr still open", "d": "8/2018"}, {"body": "sure trying snarky dismissive feel way recommendations could help ensure feature gets attention often times reason feature produced people ask hate see die legitimate request dismissed without discussion feedback", "d": "8/2018"}, {"body": "going land", "d": "8/2018"}, {"body": "great news thank taking time reply evan guess ca nt get anymore authoritative response great day", "d": "8/2018"}, {"body": "remove vue demo still get result self closing tags xhtml syntax outdated never use see", "d": "8/2018"}, {"body": "please read following things make type inference works set compiler option annotate return type computed properties", "d": "8/2018"}, {"body": "thank", "d": "8/2018"}, {"body": "happens input bind text value text value never changes change keydown method like keydown keyevent thistext keyeventkey", "d": "8/2018"}, {"body": "guess attribute changes change invoke render element wanted attribute change vue well done demand demo", "d": "8/2018"}, {"body": "expected changing variable triggers rerender passed input vue set renders want keep changes use another property", "d": "8/2018"}, {"body": "expected need use unique identifier otherwise vue reuse different elements index change remove element array", "d": "8/2018"}, {"body": "normal naming comes name use option property used places like devtools", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "already works asking vueloader handling transformation done vueloader remember askedadded time ago", "d": "8/2018"}, {"body": "posva hmm tried adding appropriate buble vueloader options config looks like still ca nt make work", "d": "8/2018"}, {"body": "hi posva sorry pinging closed topic quickly feel nt get proper answer question spent half day trying solve problem tweaking vueloader config without success tell wrong functionality even supported sfc appreciate help time matter", "d": "8/2018"}, {"body": "recall correctly nt transpiled sfc works browsers support time remember seeing feature request vueloader yet could nt find", "d": "8/2018"}, {"body": "also ca nt find anything vueloader repo move discussions vueloader repo pin feature request label", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "work nt provide repro please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "8/2018"}, {"body": "works shows warning chrome console", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "screenshot error message reproduction", "d": "8/2018"}, {"body": "try reproduce jsfiddle behaves difference jsfiddle local pc nt show warning info jsfiddle", "d": "8/2018"}, {"body": "probably something different code please use forum discord chat", "d": "8/2018"}, {"body": "add reproducible reason think happens vue trying reuse reuse selected property get brought along", "d": "8/2018"}, {"body": "expected nt happen bind attribute use also use key nt need host variable", "d": "8/2018"}, {"body": "also anybody know html escape function vue source would like try modifying project mine", "d": "8/2018"}, {"body": "html escape talking similar keep mind js escapes need unescape specific set characters method pass may interested forum discord server stackoverflow get faster answers", "d": "8/2018"}, {"body": "posva know already know nt cut trying trying keep codebases clean neat without using hacks workarounds using highly inelegant especially considering lack features compared mustache expressions since nt want use could possibly point codebase html gets escaped way build version escape function", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "well diving looks like setting property using js breaks using csstext stylewebkitbackgroundclip works setting find reported bug webkit tracker", "d": "8/2018"}, {"body": "found issue list issue create issue", "d": "8/2018"}, {"body": "posva revisited issue seems style settings actually working though chrome providing wrong value attribute see fiddle actually works syncing value back cssom chrome got us devtools also got actually got change value like everything seems working expected seems something wrong within syncing process style idl attribute content attribtue", "d": "8/2018"}, {"body": "error throw like specified value valid number value must match following regular expression dddd ee", "d": "8/2018"}, {"body": "please provide runnable reproduction message comes browser sure related vue without reproduction", "d": "8/2018"}, {"body": "sorry find problem browser", "d": "8/2018"}, {"body": "also try babel plugin", "d": "8/2018"}, {"body": "intend introduce nonstandard js syntax vue template expressions", "d": "8/2018"}, {"body": "element actually set attribute elements", "d": "8/2018"}, {"body": "really want figure example vmodel work perfectly vbind nt think value input equal vmodel help appreciated", "d": "8/2018"}, {"body": "think value input equal vmodel components form elements behaviour adapted said select elements changed setting selected attribute options elements use forum discord server stackoverflow questions", "d": "8/2018"}, {"body": "\u8bf7\u63d0\u4f9b\u53ef\u8fd0\u884c\u7684\u91cd\u73b0", "d": "8/2018"}, {"body": "\u8bf7\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684 link", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "functional components work supposed pass attributes manually supported functional components", "d": "8/2018"}, {"body": "apologies one last thing literal object array component data object seems work fine use store mixin anything like retrieve object array issue persists", "d": "8/2018"}, {"body": "nt use template", "d": "8/2018"}, {"body": "nt fix problem though", "d": "8/2018"}, {"body": "problem comes comparing plain objects dates compared correctly looks like using function first option always one selected however pass whole object option", "d": "8/2018"}, {"body": "hmm okay yeah binding instead options works something vue source js thing ya figure going insane edit checked source yep thanks dude", "d": "8/2018"}, {"body": "sure intentional come back know", "d": "8/2018"}, {"body": "vuetifyjsvuetify stuckouttongue", "d": "8/2018"}, {"body": "loosequal implementation defect comment check two object shape b looseequal looseequal consistent model directive value type regexes sets maps array buffers typed arrays etc insane implementation looseequal must think twice acurate version complex", "d": "8/2018"}, {"body": "actually duplicate already submitted pr", "d": "8/2018"}, {"body": "tested code removing element ui worked fine ie", "d": "8/2018"}, {"body": "please see demo screenshot issue point binded expression newlines", "d": "8/2018"}, {"body": "keep sending jsfiddles nt work", "d": "8/2018"}, {"body": "sorry nt know parse html code editorso copy code single html file open", "d": "8/2018"}, {"body": "ok although think services work editor removing linefeeds pasting nt understand would someone write html file linefeeds instead regular also confused fails transforming html vues gets", "d": "8/2018"}, {"body": "thank maybe like issue points searched uses windows newlines rn uses posix newlines n", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "see", "d": "8/2018"}, {"body": "sodatea", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "justineo", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "8/2018"}, {"body": "probably delay rendering engine browser definitely related vue nt remove content page scroll", "d": "8/2018"}, {"body": "posva thats figured wanted make sure nt missing something thank response", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "8/2018"}, {"body": "using index key expected behavior", "d": "8/2018"}, {"body": "could tell best practice picking key compoent better make code jsfiddle work thanks", "d": "8/2018"}, {"body": "working expected need describe expected behavior clearly items list identical", "d": "8/2018"}, {"body": "justineo said steps reproduce section follow steps click second item click button thank", "d": "8/2018"}, {"body": "bigradish working example difference provided reproduction working example provided reproduction set splice vue removed item whose index working example set splice vue removed item whose essential always provided unique always represent exactly element", "d": "8/2018"}, {"body": "leopiccionia thank much perhaps key assigned elements defined data otherwise vue recognize", "d": "8/2018"}, {"body": "bigradish described docs default mode efficient suitable list render output rely child component state temporary dom state eg form input values binding loop indexes equal default mode identifying unique item according place list leopiccionia said items actually changed removing item recalculated identifying item new item item new item vue perspective knows item data changed item removed get expected result need specify truly stand uniqueness item data instead index", "d": "8/2018"}, {"body": "justineo thank information", "d": "8/2018"}, {"body": "\u89c1\u4ece vue", "d": "8/2018"}, {"body": "scoped slots functions slot scope filled different arguments time called use multiple component current component would expect point simply possible", "d": "8/2018"}, {"body": "looks like duplicate", "d": "8/2018"}, {"body": "problem occurs scope slot child node thought way add new render helper add function file srccoreinstancerenderhelpersindexjs js import renderslot resetrenderedflag renderslot export function installrenderhelpers target targetr resetrenderedflag newly added js function genscopedslot key string el astelement state codegenstate string elfor amp amp elforprocessed return genforscopedslot key el state const fn pay attention elif genchildren el state undefined undefined return originally wanted submit pr better way", "d": "8/2018"}, {"body": "use method right away import instance mount inside function please go vue forum chat chatvuejsorg need help closing", "d": "8/2018"}, {"body": "istanbul support source map nt think utilities implemented core library", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "hi elaborate use case feature want make sure feature achieving maximum flexibility lacks real use case strongly recommend following rules custom tag names alllowercase must contain hyphen understand mentioning spec custom tag names actually want apply restrictions fact tell intention warning message already component names contain alphanumeric characters hyphen must start letter technically subset html still htmlcompliant applying extra restrictions like wo nt break standard", "d": "8/2018"}, {"body": "hi let explain cases working tax reporting software korea many items required tax reporting many terms used items korean first time tried translate terms english failed nt standard translation translation different meaning subtle difference meaning nt efficient translate therefore changed mind use korean terms new way works server side dbms perfectly also works plain javascript however vuejs nt support unicode names cases want make work think case rare case lots developers want use native language code especially developing software uses many complicated terms technically subset html still htmlcompliant applying extra restrictions like wo nt break standard understand right need fix improvement", "d": "8/2018"}, {"body": "funny page justineo faced problem well french projects used french terms things difficult translated difference ignore accents \u00e7 use plain letters", "d": "8/2018"}, {"body": "going could tell whether issue would accepted", "d": "8/2018"}, {"body": "closing due inactivity week please open new issue reference one follow information", "d": "8/2018"}, {"body": "closing due inactivity week please open new issue reference one follow information", "d": "8/2018"}, {"body": "closing due inactivity week please open new issue reference one follow information", "d": "8/2018"}, {"body": "guess happening expecting input update value current tick since using directive shortcut triggered neither ensuring component updated played codepen little bit got result componentupdated personally expected using one fix issue best workaround found wait nexttick directive", "d": "8/2018"}, {"body": "similar issue usingto step different part form next clicked increment step variable different part shows back button decrements step variable show previous page like stepwizard noticed uploaded files disappears dom still available local file variable data section back clicked guess take time go vuejs documentation nt miss vital details save trouble lesson learned", "d": "8/2018"}, {"body": "possible render functions instead templates may well side effects though worked use cases far something similar coincidentally used breadcrumbstyle ui", "d": "8/2018"}, {"body": "kyis vue currently nt allow slots rendered multiple times understand losing reactivity see", "d": "8/2018"}, {"body": "justineo thanks link makes sense document", "d": "8/2018"}, {"body": "convert static slots compiled functions like like scoped slots unify migration path isnt hard implement either replace slot property accessor dev mode triggers deprecation warning create scoped slot function", "d": "8/2018"}, {"body": "actually close proposing may recursively clone children well understand update nt breaking change library authors switch scoped slots slots cases also wo nt break using templates library authors also provide transparent updates users manually fallback using render functions", "d": "8/2018"}, {"body": "mean normal anyway dev history perspective retrospect scoped slot approach flexible need split approaches anymore work child component check deprecate altogether mirror properties cloning functions trigger deprecation trying use library author needs anything case except making release next major vue version deprecated stuff gets kicked", "d": "8/2018"}, {"body": "forgot say may want give look", "d": "8/2018"}, {"body": "posva zickat please try webpack miniextractcssplugin write css vue file index login appvue find problem document defined see content vuessrserverbundlejson document", "d": "8/2018"}, {"body": "error using also realized problem content inside", "d": "8/2018"}, {"body": "possible passing argument eg improving docs", "d": "8/2018"}, {"body": "sidenote commit also causes bugs component", "d": "8/2018"}, {"body": "tested works cases without double update maybe later write unit tests demonstrate", "d": "8/2018"}, {"body": "solution fixed vue", "d": "8/2018"}, {"body": "encountered behaviour started follow style guide thoroughly seemingly fill mixins methodscomputedhooks messy stuff like everywhere opinion unnecessarily hurts readability since adriangoransson said conflicts expected situation", "d": "8/2018"}, {"body": "got errors vue typescript fixed holding vue instance variable giving type ensures ts know vue properties instatiate using options object var vueapp vue var app new vueapp el app data return count methods initialize thiscount count work", "d": "8/2018"}, {"body": "posva one vue clientside script compiled babel something like works surface way specify build runtimeonly build used kenokabe said least nt make much sense usually module exported full build someone wanted scaled back build get useful workaround requiring appropriate opinion directory change", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "would willing bet file redundant code external libraries never recompiling external libraries bunching bundle file analyze bundle file make sure app proprietary code inside page template business logic routing logic state management logic see vue library set alarm bells always externalize vendor libraries server client everywhere another rule thumb npm run build takes longer seconds something wrong axe redundant code notice real app actually something along lines tops jsonparse back bearable speed", "d": "8/2018"}, {"body": "thanks analysis care ecosystem zeltice correct externalizing vendor libraries size goes amount reduction see use nt quite unfortunately decent brings us next big chunk file made sourcemaps disabling unsurprisingly gives us reduction first party code course also means ca nt debug disabling nt option important know nt code wrote running large website toplevel page components many features across pages although tolerable nt believe singlejsonfile approach scales well said time spent parsing json file reading perhaps lowhanging fruit optimize maybe using alternative serialization format maybe allowing sourcemaps file", "d": "8/2018"}, {"body": "regards source maps likely working two environments dev amp production dev never source maps enabled since js minified anyway therefore source map size bytes production build stage webpack creates separate file source maps never part js bundle unless misconfiguration remember source maps retrieved separate files separate http requests production source map urls hinted specialized commented hints minified packaged js css files regardless original problem slow development experience dev environment source map exist dev", "d": "8/2018"}, {"body": "thanks comment zeltice webpack combines source files single bundle uses loaders compile source templates styles js thus disabling source maps development would mean would get postcombineandcompile bundlespecific line amp column numbers stack traces instead sourcefilespecific line numbers making difficult identify source errors", "d": "8/2018"}, {"body": "see must source maps dev try cheaper still effective source map solutions going balance filesize speed company use source maps dev advice based experience years ago used cheapevalsourcemap good enough identify file line number problem yet fast enough second delay updates every code change", "d": "8/2018"}, {"body": "ok dont know another solution issue solved simple directive using like works fine android chrome android firefox", "d": "8/2018"}, {"body": "browser nt inform something typed inform something typed via standard event simplest workaround example adding input element issue", "d": "8/2018"}, {"body": "listed end data object", "d": "8/2018"}, {"body": "raised evernote web clipper disable extension make chrome get rid error", "d": "8/2018"}, {"body": "use version ok", "d": "8/2018"}, {"body": "closed via", "d": "8/2018"}, {"body": "try mycomponent app especially slot vfor", "d": "8/2018"}, {"body": "closing original issue expected behavior although theoretically improved something consider technically breaking likely make slots lazyevaluated like scoped slots", "d": "8/2018"}, {"body": "also feels little bit like typescript", "d": "8/2018"}, {"body": "come instead export default foo export default name foobar use component unless declare mainjs import want use get found error another component using loads fine", "d": "8/2018"}, {"body": "docs use components recursively inside components vue get confused one resolve first defining components mainjs ie components rendered get around problem components nt used recursively import usual", "d": "8/2018"}, {"body": "also get error tries bind dom configuration element set storeconfig via mutation function called root element mounted edit happens store strict mode", "d": "8/2018"}, {"body": "unfortunately tags inside svgs scoped svg element indeed global side effect nt think treat differently", "d": "8/2018"}, {"body": "doeke way get working hook glance nt seem like would", "d": "8/2018"}, {"body": "erikbjare could loop component check existance hooks personally went back catching exceptions manually components using send actual unhandled rejections analytics works chrome", "d": "8/2018"}, {"body": "probably mean caveats whenever call set array call set array call set item array reworked example make visual", "d": "8/2018"}, {"body": "still issue addressedfixed example parent component child component", "d": "8/2018"}, {"body": "resolve issue html submit area fixed default display none open dialog", "d": "8/2018"}, {"body": "sure whether still bug case attribute root element real dom still rendered hook miss time access existing attribute addremove class chrisvfritz", "d": "8/2018"}, {"body": "\u5f3a\u529b\u63a8\u8350vuenative", "d": "8/2018"}, {"body": "async lifecycle hook good implementation next major version", "d": "8/2018"}, {"body": "managed initialize nonreactive variables typescript need use vueclasscomponent import vue vue import component vueclasscomponent interface mycomponent myvar number component class mycomponent extends vue created thismyvar export default mycomponent note interface", "d": "8/2018"}, {"body": "angular aot compiler check template type also option think vue template compiler check template type ktsn may ask whether movement make possible", "d": "8/2018"}, {"body": "fyi", "d": "8/2018"}, {"body": "ktsn great job work vetur possible run vue cli lint", "d": "8/2018"}, {"body": "updates ran well", "d": "8/2018"}, {"body": "holding pr almost months since opened", "d": "8/2018"}, {"body": "would love see merged", "d": "8/2018"}, {"body": "imho would great template inheritance part vue core components inheritance mean js part nt template inheritance child vs parent template shortly becomes pain case extracted base components example editform child fields buttons save save amp continue cancel copypaste html code suggestion use parent separate component inside child template also nt work nt like want one child component levels script template", "d": "8/2018"}, {"body": "dts actually throw error vue app commit way anymore would need testing vuejs app google chrome using cypress want let test fail error change possible anymore would actually raise error happens inside vue component", "d": "8/2018"}, {"body": "context would helpful guess may able set error handler hook cypress letting exceptions escape usually ideal caught reported somewhere error handler", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "use vmodel foo integer bar boolean", "d": "8/2018"}, {"body": "matteogabriele ulivz agree everyone says behavior want override one attributeproperty mean provide properties said achieved behaviour props student type object default function return labels type object default function return computed mergedlabels function return objectassign billing billing firstname first name generalinfo general info middlename middle name lastname last name dob date birth gender gender placeofbirth country birth nationalities nationalities gradelevel grade level thislabels labelsfirstname mergedlabelsfirstname thislabels last argument otherwise value passed user overridden", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "tiagofelipe hi problem fixed day suffering include mean import store auth like webpack automatically understand import course last line perfect code write everything gon na fine hope somehow helped", "d": "8/2018"}, {"body": "stumbled upon design flaw wanted create accessible icon component would become first obstacle ca nt multiple root elements okay wrap span discovered class excluded way suppress rename attribute working ugly component follows export default inheritattrs false props xclass string alt string sronly boolean data function return tooltip thissronly null thisalt used like works needlessly complicated could use use regular attribute nt problem would also make jumping class definition component instance work editor nt even know class attribute yes could put span inside make one example", "d": "8/2018"}, {"body": "reopened freedom attach element want ca nt given freedom", "d": "8/2018"}, {"body": "yes agree option use vue context filter similar child components eg able access parent component nt see reason filters pure functions pipe syntax looks better readable method calling eg number formatting need access locale set parent component vs", "d": "8/2018"}, {"body": "thanks \u0634\u0643\u0631\u0627 lt", "d": "8/2018"}, {"body": "calendar vshow show \u6216\u8005\u8fd9\u91cc\u5199\u6210vif show showsync show export exportdate", "d": "8/2018"}, {"body": "nobody cares nt work", "d": "8/2018"}, {"body": "hello aware year since issue posted however could nt locate anything internet might point towards issue experience issue anyone insights matter might help basically ssr setup add block import eventbus apieventbusjs export default methods openhierarchy consolelog test eventbus emit openhierarchy click listener neither gets attached neither try alter accordingly like von clicknative", "d": "8/2018"}, {"body": "recently issue needed one event buses wrote wrapper around standard emit using ideas thread tidies api also allows single invocation promise per emit maybe best practice totally practical afaiac poc codepen publisher subscriber", "d": "8/2018"}, {"body": "directly contradicts similar question last year error event img tags deprecated", "d": "8/2018"}, {"body": "error event img tags deprecated working solution method", "d": "8/2018"}, {"body": "instead setting set prop value data use computed property uses data fallbacks data allows one single source truth rachelscodes css approach easier image fallback imo allows trigger custom js flexible", "d": "8/2018"}, {"body": "zeromaster viettranme another option detach element script vue initialization reattach vue init helpful two inline scripts depends js hello let script problemscript children detach new vue el app data item name vuejs problemscript append script", "d": "8/2018"}, {"body": "scottbedard struggling issue indeed found serious issue undermines basic usability solutions enforce field set blur event problem chrome wo nt trigger input change events upon adding content field however still update value target correctly hence try see works export default data return email null methods onblur event event amp amp thisemail eventtargetvalue thisemail eventtargetvalue", "d": "8/2018"}, {"body": "exact issue also happens chrome anyone workaround", "d": "8/2018"}, {"body": "feeling caused people using causes input rerender often cursor jumps simple solution would add trims event", "d": "8/2018"}, {"body": "facing problem antixrist describes initial post child component holds data among things contains whether visible mutabledisplaydatavisible child component wrapped inside arranged child unknown position parent might left might right depending status mutabledisplaydatavisible animated transitioned parent needs control child positioned transition must chosen according position transition needs parent structure looks simplified enter animation runs fine leave immediately removed dom think bug move vif directly would work know visibility child parent special case ideas achieve need", "d": "8/2018"}, {"body": "thank phablulo let hope gets merged soon mentioned pull request", "d": "8/2018"}, {"body": "agree something would super useful ctrl replaced cmd macos", "d": "8/2018"}, {"body": "defcc chance could get reopened", "d": "8/2018"}, {"body": "using expect number case returning empty string nonsense please reopen issue change behaviour thanks", "d": "8/2018"}, {"body": "value set empty string html input gives still allows people check input empty yes would js idiomatic would breaking change adopted vue considered vue locking becoming spam", "d": "8/2018"}, {"body": "callback way check cache hit", "d": "8/2018"}, {"body": "\u5173\u4e8e\u8fd9\u6837\u7684\u95ee\u9898error loading chunk failed\u5982\u4f55\u89e3\u51b3\u554a", "d": "8/2018"}, {"body": "behavior change jsfiddle op works like expected model become undefined versions works described op model become undefined similar problem code slightly different change model options well jsfiddle problem case model still set undefined even versions gt nt change values time problem example change model first second later change options via settimeout value become undefined similarly change options first change model second model become undefined expected behavior ps thank opening issue struggling days would never found changes model undefined", "d": "8/2018"}, {"body": "check whether written method methods", "d": "8/2018"}, {"body": "activated\u94a9\u5b50\u90fd\u6ca1\u6709\u88ab\u89e6\u53d1", "d": "8/2018"}, {"body": "definitly something worth mentioning glad finally found reason troubles getting mad", "d": "8/2018"}, {"body": "approach issue think pretty neat depending usage parent component appform component inline value basically saying input value static never change nt make sense using vmodel makes sense native html works attribute set input element meant changed question take priority inline value vmodel value set", "d": "8/2018"}, {"body": "aware issue closed wanted share approach case helps anyone case done big dynamically add input fields data const element test new vue el element data grabs component const el documentqueryselector element", "d": "8/2018"}, {"body": "progress feature", "d": "8/2018"}, {"body": "vuecommonjs means nothing try find occurred error", "d": "8/2018"}, {"body": "maxijp renders expected number dom elements change value number dom elements drops one demo", "d": "8/2018"}, {"body": "thinsoldier editing countloans vmodel input new value string number number easly deal using example computed property transforms value integer", "d": "8/2018"}, {"body": "seems work", "d": "8/2018"}, {"body": "try adding vif though cleanest method cleaner way define range component", "d": "8/2018"}, {"body": "mykeels update answer use check box radio input", "d": "8/2018"}, {"body": "annoying limitation using components ability override classes would nice", "d": "8/2018"}, {"body": "", "d": "8/2018"}, {"body": "found issue debugging heck vue behavior data objects thinking", "d": "8/2018"}, {"body": "people like wondering roadmap evan says video map set support likely arrive may know", "d": "8/2018"}, {"body": "unfortunate issue tracker marked closed especially considering adding support near future follow progress feature another issue somewhere", "d": "8/2018"}, {"body": "wondering sake argument maybe wrong since track array mutation using mutation methods cant track array object logically complete dont get features implemented map ones want would pretty easily addressed especially using something like lodash", "d": "8/2018"}, {"body": "works perfect indeed boolean modifier would also nice addition", "d": "8/2018"}, {"body": "az wed aug jerry jacobs notifications githubcom wrote works perfect indeed boolean modifier would also nice addition receiving subscribed thread reply email directly view github mute thread", "d": "8/2018"}, {"body": "approaches listed dont solve problem using typescript without vueclasscomponent want store timeout handle component instance assigning variable beforecreatedcreated hook doesnt work typescript thinks isnt declared option like non reactive properties core appropriate generic typing would make nonclassstyle components much easier deal typescript one could say use class style components looking pretty sweet background lot hackyish stuff gets done wonder plan fully support class based components without reflecting class something like js class mycomp extends vue constructor super component options expressable via class constructs new mycomp mount app", "d": "8/2018"}, {"body": "kidbrazil looking debounce function adding lodash kind overkill standalone debounce function use debounce", "d": "8/2018"}, {"body": "cool guys trigger resize event manualy following code works fine jquery change pure js without jquery even tried make defined", "d": "8/2018"}, {"body": "might wrong place try asking stackoverflow", "d": "8/2018"}, {"body": "know closed issue future visitors mutationobserver api probably best way handle set mixin components need resized based size children", "d": "8/2018"}, {"body": "aidangarza nt respond element resized modified chrome already shipped resizeobserver best solution issue older browsers use polyfill try solutions like resizedetector fyi integration vuejs try vueresize component implement directive implemented vresize directive based resizedetector", "d": "8/2018"}, {"body": "years chance implementing feature", "d": "8/2018"}, {"body": "read comment", "d": "8/2018"}, {"body": "sorry terrible reader", "d": "8/2018"}, {"body": "still get better solution overcome issue", "d": "8/2018"}, {"body": "still could fixed", "d": "8/2018"}, {"body": "using password manager called lastpass issue happening anyone knows quick fix", "d": "8/2018"}, {"body": "problem removed friends baang worked", "d": "8/2018"}, {"body": "zealotrahl please see answer question", "d": "8/2018"}, {"body": "anybody know also works combination vuex explained want input field little bit dynamic access scope dom element inside following code", "d": "8/2018"}, {"body": "vielhuber try use", "d": "8/2018"}, {"body": "hi vue question related topic dynamic vmodel directive implementing vue component dynamically control vmodel modifier etc example", "d": "8/2018"}, {"body": "consider vue components foreign elements", "d": "8/2018"}, {"body": "recommendation advice cleaning event listeners vue greatly appreciated", "d": "8/2018"}, {"body": "normally nt clean listeners manually element destroyed removed dom longer referenced javascript listeners also removed precisely longer referenced element thus able garbage collected guaranteed dom related vue cases passing references elements event listeners around accidentally create memory leaks retaining references nt need worry cleaning event listeners", "d": "8/2018"}, {"body": "fnlctrl worry code actual framework code cases sure something like vue usual piece code vue guarantee preconditions mentioned dom requires order remove listeners", "d": "8/2018"}, {"body": "yes otherwise would memoryleak bug rare would fixed", "d": "8/2018"}, {"body": "greetings use workaround trigger set computed property depend dummy property need recompute triggered elsewhere something like", "d": "8/2018"}, {"body": "adding recompute method datadriven nt expect core team implement ever especially consider evan already provided far easier understand solution second comment issue make sense understand vue datadriven dependency tree", "d": "8/2018"}, {"body": "also implemented userland plugin played around publish plugin soon show easy expand vue features really revisit way designing data never found need thing building vue apps points said sirlancelot true", "d": "8/2018"}, {"body": "could come uses vue internal mechanism though", "d": "8/2018"}, {"body": "pretty neat added separated option nt impact computed properties", "d": "8/2018"}, {"title": "error read property idattribute undefined collection", "body": "description create new collection class extends backbonecollection define model property function returns instantiated model collection constructed error read property idattribute undefined thrown class methods property prototype used backbonecollectionprototypemodelid method expected behavior error thrown collection property model defined class method actual behavior error read property idattribute undefined thrown example environment backbone version additional build tools etc build tools important babel used works fine", "num": "4203", "d": "8/2018"}, {"title": "docs coreobject create appear api docs website", "body": "looks like jsdoc work done coreobject create nt appear corresponding docs page hard fix", "num": "16928", "d": "8/2018"}, {"title": "quest native classes", "body": "background issue tracking progress native classes ember task list actively used strike team keep track major tasks left officially ship feel free ask questions help original rfc tasks x decide native class constructor update rfc ultimately decides behavior native classes way write looks like emberobject deprecated removed framework need get final decision rfc move forward decided ship backports x feature finish bugfixes backports open issues could cause compatibility issues converting native classes need get merged backport versions ember intend support bugfixes classes onremovelistener observesremoveobserver interop backports na x write readonlyvolatile deprecation rfc clobberability antipattern volatile generally needed something necessary move forward resolves differences native getterssetters computeds ideally address quickly readonly rfc volatile rfc write decorators rfc decorators reach stage move forward codemod decorators addon fold ember soon stage potentially viable ideally would wait stage x address open issues emberdecorators x add computedreadonly computedvolatile need way access apis codemod x blueprints used general bug important shipping though since users want use generators probably ported ember x route queryparams support think may need class decorator given prototype placement object one instance said object ever created though maybe issue x filter array based another property need way access add properties computeds codemod ultimately unneeded x update decorators x update babel x update decorators use stage transforms upon discussion seems like stuck stage transforms typescript updates likely stage finish codemod stage x folder globbing types update guides blocked decorators rfc", "num": "16927", "d": "8/2018"}, {"title": "transitionto passing query params url link opened new tab", "body": "query params getting passed opening link new tab getting passed opening link tab", "num": "16925", "d": "8/2018"}, {"title": "mouse enterleave event firing jqueryintegration false", "body": "enterleave events nt always fire think something component child component linkto gif demo repo", "num": "16922", "d": "8/2018"}, {"title": "linkto model queryparams configured refreshmodel true causes error", "body": "link query params route definition throws error repro", "num": "16921", "d": "8/2018"}, {"title": "ensure ci fails yarnlock sync packagejson", "body": "probably able running", "num": "16920", "d": "8/2018"}, {"title": "dspromisemanyarray map unexpected behavior", "body": "happening use map change content inside data structure returns plain array expected behavior expecting map return data type example think behavior occurs use embera generate map response line", "num": "16918", "d": "8/2018"}, {"title": "exception partials used templatename", "body": "repro twiddle steps open devtools hit route hit route look console exception broken since ember works fine ember temporal fix change templatename use partial best regards", "num": "16915", "d": "8/2018"}, {"title": "integration test linkto component emit href attribute", "body": "repro twiddle relevant bit js module integration component mycomponent function hooks setuprenderingtest hooks test component rendering async function assert commenting following line test fails thisownerlookup route photosedit routersetuprouter lt test fail return null line present given routersetuprouter seems like private api hack actual solution problem recommended approach creating integration test references attribute anchor element created instance", "num": "16904", "d": "8/2018"}, {"title": "dotted object lookup changed", "body": "ember would prefer nested objects strings dots js let obj testdotted string object test dotted nested object emberget obj testdotted gt nested object however starting would return nt think necessarily great problem broke test made ember twiddle showing change", "num": "16901", "d": "8/2018"}, {"title": "something dynamic segments problem", "body": "hello new starter emberjs recently get problem like linkto cryptid show code anyone explain wrong fix emberjs version models cryptidjs import ds emberdata export default dsmodelextend name dsattr string cryptidtype dsattr string profileimg dsattr string sightings dshasmany sighting routes cryptedsjs import route emberroutingroute export default routeextend model return thisstorefindall cryptid cryptidshbs model cryptid linkto cryptid cryptidid linkto cryptidname else creatures routerjs routermap function thisroute sightings function thisroute new thisroute sighting function thisroute edit thisroute cryptids thisroute cryptid path cryptids cryptidid thisroute witnesses thisroute witness", "num": "16891", "d": "8/2018"}, {"title": "memory leak upon attaching action handler component", "body": "noticed memory leak upon attaching attaching action handler component repro steps created simple component correcponding template template click action handler defined created integration test component run test pass expected chrome dev tools memory heapshot notice class gets retained expected expected destroy completion test repository sample app repro root cause glimmer runtimejs retaining reference container instance believe object positionalarguments retains reference container test finished instance positionalarguments creates", "num": "16890", "d": "8/2018"}, {"title": "inelement helper working", "body": "inelement helper throwing following error uncaught typeerror parentinsertbefore function using ember version", "num": "16886", "d": "8/2018"}, {"title": "distemberprodjs multiple sourcemap declarations breaking sourcemap build", "body": "summary current npm version update issue remains contains file file contains multiple declarations form according source map spec one line form end file impact means file built embercli valid sourcemap file please see error bug erroneously closed issue assumed embercli embersource cause including multiple declarations causes issues fastsourcemapconcat libsourcemapjs since library removes first one valid behaviour since one declaration per file suggested fix remove extra lines references similar issues", "num": "16881", "d": "8/2018"}, {"title": "ember bracket components enabled default", "body": "code block could figure broke update noticed declared variable called option minimal reproduction works breaks change declaring iteration variable called option creates following error message error assertion failed use value component name component names must contain hyphen guess ember tries resolve option variable component working ember broken ember one could argue bad naming convention cause hard figure issue", "num": "16880", "d": "8/2018"}, {"title": "calling isempty instances objectproxy wrapping arrayproxy throws assertion failed attempted access property", "body": "working one projects encountered error managed boil following looks like regression caused utilisation getters worked ember breaks example", "num": "16878", "d": "8/2018"}, {"title": "missed old regression events metaissourcedestroying", "body": "used target event issourcedestroying state determined send event long lived object would receive events shorter lived object willdestroy changed nt mean afraid maybe another thing may make hard people update past", "num": "16875", "d": "8/2018"}, {"title": "allow routes named array", "body": "rwjblue commented making array reserved route name artifact things anymore robert please confirm summary correct add details feel free edit description directly wondering good issue new contributors", "num": "16872", "d": "8/2018"}, {"title": "update watchers component teardown", "body": "note sure able come concrete independent reproduction latest beta seeing error code works previous versions ember code question computed property component array components triggers error think component torn reasons nt clear switch using longer get error sure many instances use something odd must happening case ca nt quite ascertain yet thought would helpful open something case anybody ideas", "num": "16871", "d": "8/2018"}, {"title": "query params linkto destination wiped current url different query param", "body": "hi experiencing issue linkto specifying particular query param destination like linkto route different query param url myroute creatingtrue click linkto successfully taken query param seems wiped get around adding baz query params controller myroute like seems like bandaid fix larger problem nt entirely make sense relevant myroute team project currently version ember looked around similar issues posted could find anything apologies one missed somewhere thanks", "num": "16867", "d": "8/2018"}, {"title": "add actions logging debugger options", "body": "would useful option log called together arguments maybe would something hard add current ember infrastructure sure looks like one nice things redux able log actions state changes probably would harder emberdata", "num": "16866", "d": "8/2018"}, {"title": "disabledclass linkto component might work depending attributes order", "body": "component documented property supposed change class disabled link see marked private sometimes feature needed set value expect link class following code work expected expected link class fact class code works fine think works way classnamebindings contains disabled defined computed property without dependent keys setter returns first example setter property called changed default value", "num": "16864", "d": "8/2018"}, {"title": "quest mocha blueprints rfcs", "body": "background updated blueprints qunit reflect changes made rfc rfc embermocha implement blueprints mocha tests well desired behavior generating testing blueprints generate simplified mocha style tests supported host app several tasks extend blueprints support simplified mocha style blueprints alongside legacy embermocha blueprints tasks x dhaulagiri extend testframeworkdetectorjs support directory called simplified mocha blueprints live blueprint test folders eg decision use directory based host version add simplified mocha blueprints x dhaulagiri acceptancetest x dhaulagiri componenttest x dhaulagiri controllertest dhaulagiri helpertest initializertest instanceinitializertest x dhaulagiri mixintest x dhaulagiri routetest x dhaulagiri servicetest x dhaulagiri utiltest", "num": "16863", "d": "8/2018"}, {"title": "broken willchange arrayobserver arrayproxy", "body": "certain bug intended used observing using proxy would enter willchange method array actually changed occurs change see screenshots console logs shows seeing vs seeing btw continue dig code changes see intended wanted get case quick easy answer goal wasis able see relationship arrayproxy changing id like know exactly record removed version version", "num": "16862", "d": "8/2018"}, {"title": "sortyby emberarray longer returns emberarray", "body": "ember returns ember array returns another ember array implements ember returns undefined returns native array broke emberelsewhere possible broke apps addons", "num": "16861", "d": "8/2018"}, {"body": "related", "d": "8/2018"}, {"body": "yeh related linked demo repo fix merged", "d": "8/2018"}, {"body": "thank yes agreed think frozen lockfile trick", "d": "8/2018"}, {"body": "theseyi believe limitation router setup component tests perhaps reach forum slack see others stub routing behavior confirm href exists assert value", "d": "8/2018"}, {"body": "think ok expected using routes generate href want test behaviour setup router use object", "d": "8/2018"}, {"body": "pixelhandler thanks response see community solution mupkoo thanks solution works issue router private internal api could changed anytime", "d": "8/2018"}, {"body": "think router class private property route classes see point cases testing generation url testing href expect concern router would feel better mocking router service used component well", "d": "8/2018"}, {"body": "sketchk confirm actually exists addition usage questions posted development issues welcome ember slack channel ember discuss community find plus use qq local group welcome join us", "d": "8/2018"}, {"body": "nightire thank much join local group soon finally find problem round brackets code like wrote like", "d": "8/2018"}, {"body": "nightire means qq group number use search find nothing", "d": "8/2018"}, {"body": "sketchk group name emberjs help", "d": "8/2018"}, {"body": "dnalagatla curious difference behavior change", "d": "8/2018"}, {"body": "finally got work passing element computed property", "d": "8/2018"}, {"body": "indeed brought point rfc decided go forward anyway users get tripped since almost always want pass selector node", "d": "8/2018"}, {"body": "works element returned computed property computed property nt work nt know", "d": "8/2018"}, {"body": "downgrading fixes first version npm already exhibits bug happened somewhere", "d": "8/2018"}, {"body": "duplicate", "d": "8/2018"}, {"body": "yep totally correct longer need assert", "d": "8/2018"}, {"body": "actually issues fixed switching macro iirc nt updating certain circumstances", "d": "8/2018"}, {"body": "rate got recently upgraded ember noticed error cropping case noticed happens page navigate away navigate back error happens navigate back", "d": "8/2018"}, {"body": "danielraggs think expected behavior query params per routecontroller global app like would expected traditional server rendered html app see controller tracks param value url perhaps document expectation clearly", "d": "8/2018"}, {"body": "leooo yeah sound nice currently tools track promises flag enable logging every action fired action handled error thrown help perhaps create issue rfcs repo see small enough need pr rfc repo open issue feature request", "d": "8/2018"}, {"body": "pixelhandler created thanks", "d": "8/2018"}, {"body": "gendelflugansk use instead pr fix inconsistency", "d": "8/2018"}, {"body": "bekzod nt try believe using lead issues class name lines trigger setter property template positioned link receive disabled class instead value property", "d": "8/2018"}, {"body": "gendelflugansk thanks writing issue specific code examples looking docs seems use static dynamic seem nature using private api unpredictable perhaps another solution surrounding dom classname customize", "d": "8/2018"}, {"body": "embermocha newer apis landed point repo needed work ready think point best path make quest style issue checklist guidance generally speaking efforts move forward fairly quickly personally would love see updated blueprints land time current beta", "d": "8/2018"}, {"body": "rwjblue copied quest items qunit issue turn quest updating mocha blueprints let know plan seems sound little loop", "d": "8/2018"}, {"body": "issue", "d": "8/2018"}, {"body": "found commit way find explanation handy functionality longer exists still properly regular array arrayproxy thought act like array sugar top thanks help suggestions", "d": "8/2018"}, {"body": "arraywillchange happens proxy changes proxy backing array content supposed use content use objectat proxy general mistake observe one thing make assumptions regarding another thing changing", "d": "8/2018"}, {"body": "though looking closely example seem bug proxy supposed cache last observed state notifying change using proxy observer know something different thing changing expected keep working proxy keeping last observed state mmun", "d": "8/2018"}, {"body": "actually looking closer never accessed proxy state ever observed proxy surprised even fired change event", "d": "8/2018"}, {"body": "example test ember test suite issue nt log proxy still fires change event wrong info ideally would fire change event since proxy never used would match behavior computed properties", "d": "8/2018"}, {"body": "thanks attention krisselden actual environment proxy template observed little test written nt quite right pointed nt grabbed proxytoarray yet however still issue run snippet js environment still work reason toarray returning different result narrowed proxywillupdate proxy length instead proxy willupdate proxy willupdate length lengthdirty length different keep digging code find length providing value environment", "d": "8/2018"}, {"body": "sorry bug found library using changing length property arrayproxy mmpestorich removed lodash files app works expected somewhere must overriding length property gets defined", "d": "8/2018"}, {"body": "think fixed though nt dug confirmdeny", "d": "8/2018"}, {"body": "look tomorrow", "d": "8/2018"}, {"body": "still broken already includes far tell", "d": "8/2018"}, {"body": "sounds like bug perhaps next steps create failing test anyone task also anyone confirm fixes issue seems like test show issue", "d": "8/2018"}, {"body": "set browser variable name using emberobjectextend going dev minified otherwise", "d": "8/2018"}, {"body": "want name need still going guaranteed unique would suggest use map keyed constructor function", "d": "8/2018"}, {"body": "homeslicesolutions perhaps ask question forum ember community slack use issue tracker main bugs close perhaps form slack see", "d": "8/2018"}, {"body": "buschtoens believe original use case using application hosted root folder specific domain eg ember app transitions concerned path route ember app transitions track path ember app specifically pretty sure described intended design use nt think bug", "d": "8/2018"}, {"body": "borispetrov file still see warning make example app reproduces issue link", "d": "8/2018"}, {"body": "pixelhandler think warning comes thirdparty plugin namely actually issue opened case yes nt warn use code nt suppress issue plugins expected something apart waiting addon updated", "d": "8/2018"}, {"body": "actually lied also warns code something like gives warning please tell reproduce code try create full sample", "d": "8/2018"}, {"body": "confirm things behave strangely investigate", "d": "8/2018"}, {"body": "think jqueryintegration defaults true perhaps removed hash value exactly basically makes impossible distinguish jquery enabled default enabled explicitly rely distinction would say fix create pr agree rwjblue thoughts", "d": "8/2018"}, {"body": "simonihmig prefer fix suggested original post think would also work", "d": "8/2018"}, {"body": "borispetrov would also trigger deprecation user explicitly opted jquery setting true want prevent accordance rfc explicitly wants use jquery able including using without deprecations", "d": "8/2018"}, {"body": "simonihmig documentation deprecate specifies falsy values would trigger deprecation either would result equal trigger assertion value would result expression hence show deprecation missing something", "d": "8/2018"}, {"body": "jqueryintegration either true undefined would result emberenvjqueryintegration false true equal false trigger assertion want show deprecation flag undefined nt show either true user explicitly wants jquery false jquery available first place use whatever else comes jquery would break code anyway mentioned behavior way distinguish runtime user set undefined heshe explicitly set true", "d": "8/2018"}, {"body": "pixelhandler close workaround regression ember fixed", "d": "8/2018"}, {"body": "took managed track issue basically upgrading ember app nt upgrade underlying test helpers package forcing upgrade command works gets transitive deps embercliqunit yarn remove embercliqunit yarn add embercliqunit", "d": "8/2018"}, {"body": "exactly problem regular upgrading windows", "d": "8/2018"}, {"body": "poplevente herveseger able resolve issue clearing nodemodules directory help", "d": "8/2018"}, {"body": "pixelhandler solved last version far see issue known", "d": "8/2018"}, {"body": "maybe related dupe seeing downgrading fixes issue", "d": "8/2018"}, {"body": "could downgrading also worked see last version also fine", "d": "8/2018"}, {"body": "hi pixelhandler warnings gone checked today run times past weeks maybe dependency upgraded know warnings disappeared fact gone", "d": "8/2018"}, {"body": "issue last couple days well trying figure going changing fixed problem well throwing documentation issue", "d": "8/2018"}, {"body": "throwing documentation issue thanks sorry issue", "d": "8/2018"}, {"body": "rwjblue actually ables find evidence template lint rule exist somewhere else", "d": "8/2018"}, {"body": "cafreeman listed though rule", "d": "8/2018"}, {"body": "ah ca nt believe missed thank", "d": "8/2018"}, {"body": "idea guys ember array breaking alot places example using simple setobjects source array simple array input mostly input array initials arrays content sure going getting almost array functions following error uncaught typeerror methodapply function typeerror methodapply function sendevent arraycontentwillchange replaceinnativearray arrayreplace classreplacecontent classreplace source input reproduce within embertwiddle sure different application see alot issues sorting arrays returning array also array related issues someone else similar issues arrays workaround make deep copy object using", "d": "8/2018"}, {"body": "poplevente able reproduce issue example application link repo noticed mention workaround workaround make deep copy object using ask ember community slack forums see anyone similar issue", "d": "8/2018"}, {"body": "pixelhandler could reproduce sample application unfortunately yes workaround deep copy clone innitial array using ask community forums answer unfortuantely redirected", "d": "8/2018"}, {"body": "array coming created", "d": "8/2018"}, {"body": "nightire curious instead using using action helper work linkto go foo foo", "d": "8/2018"}, {"body": "pixelhandler yes traditional helper works", "d": "8/2018"}, {"body": "pgengler workaround robert jackson mentioned help see", "d": "8/2018"}, {"body": "seems like various addons hitting problem implemented workaround stopped hitting problem", "d": "8/2018"}, {"body": "deividkamui resolved issue yet please create reproduction issue perhaps bekzod mentioned link repo example application demonstrates issue", "d": "8/2018"}, {"body": "found answer yet asking ember community slack forum help get answers question found dialog post", "d": "8/2018"}, {"body": "never find satisfactory answer though post slack forum currently following component future may import properly remove lines", "d": "8/2018"}, {"body": "found", "d": "8/2018"}, {"body": "yea nice links found thread travels think idea future import directly eg similar unfortunate downside relying handlebars export functionalities via module api think kind waiting point", "d": "8/2018"}, {"body": "anchor tag references releasecookbookuserinterfaceandinteractionresettingscrollonroutechanges class btn emberview nt latest link beginner trying figure things", "d": "8/2018"}, {"body": "thanks reporting follow progress", "d": "8/2018"}, {"body": "root cause issue page question nt exist latest version guides nt exist exact place would encourage anyone opinion desired behaviour comment follow conversation see trying figure actually happen push button scenario would great get feeling community expecting", "d": "8/2018"}, {"body": "borispetrov yeah used change member array", "d": "8/2018"}, {"body": "think issue fixed closed", "d": "8/2018"}, {"body": "cibernox noticed mentioned fix also temporary workaround use instead seems regression link code example fix", "d": "8/2018"}, {"body": "like popup notifications disappear bit faster testing mode every single notification currently increases build time seconds would nice application instance initializer looks notification service changes setting testing true", "d": "8/2018"}, {"body": "lougreenwood also running issue ever figure issue", "d": "8/2018"}, {"body": "rwjblue followed steps posted worked ember installed however upgraded ember seemed like template application wrapper optional features stopped working repo showing issue", "d": "8/2018"}, {"body": "issue application running ember seems happen following scenarios user drags link text drops across another text end point less clear user selects text drags selected text drops somewhere page note could reproduce firefox reports occurring chrome well way got around disable drag events customevents const customevents dragstart null drag null dragenter null dragleave null dragover null dragend null const app applicationextend moduleprefix configmoduleprefix podmoduleprefix configpodmoduleprefix resolver customevents loadinitializers app configmoduleprefix export default app solution ideal seems like might solve issue bug fixed", "d": "8/2018"}, {"body": "created reproduction error getting error appears firefox interestingly problem appears styles applied app described reproduce", "d": "8/2018"}, {"body": "seeing well sentry logs fwiw events firefox occasionally also chrome", "d": "8/2018"}, {"body": "closing per triage policy feel free reopen would like discuss issue", "d": "8/2018"}, {"body": "seeing ember", "d": "8/2018"}, {"body": "case error printed console however work expected test test error printed nothing happen", "d": "8/2018"}, {"body": "experiencing issues demo repo", "d": "8/2018"}, {"body": "would mind opening new issue track", "d": "8/2018"}, {"body": "got well soon thought finished upgrading dont reproducable repo yet tho", "d": "8/2018"}, {"body": "rwjblue bug fixed makes service unusable", "d": "8/2018"}, {"body": "kevinansfield mixonic rwjblue linkto bug module unification app hbs linkto new post adminpostsnew ember emberresolver assertion failed attempted define pass parameters required generating dynamic segments read property defaulttype undefined", "d": "8/2018"}, {"body": "latest canary works doesnt get route get", "d": "8/2018"}, {"body": "news getting issue run tests ie checks values checkbox", "d": "8/2018"}, {"body": "jherdman help find way wrap native emberradiobutton", "d": "8/2018"}, {"body": "santanapaulo check prrepo example yapplabsemberradiobutton", "d": "8/2018"}, {"body": "melsumner resolved", "d": "8/2018"}, {"body": "thank cyk", "d": "8/2018"}, {"body": "problem using solution", "d": "8/2018"}, {"body": "also request want mimic behaviour number positional parameters depends presence resp absence block done ember code base linkcomponent using js file core team willing open request get help implement similar behaviour one regarding management params", "d": "8/2018"}, {"body": "another scenario nice like keep convenient way aid developer using component nt want erroneously force value block provided instead", "d": "8/2018"}, {"body": "workaround sometimes", "d": "8/2018"}, {"title": "restart reset rewind css animation jquery", "body": "description problem restarting css animation jquery work element removeclass animationfadein element addclass animationfadein needs inserted element get offsetwidth result works element removeclass animationfadein element get offsetwidth element addclass animationfadein would cleaner restartanimationfunction link test case", "num": "4167", "d": "8/2018"}, {"title": "sourcemappingurl since", "body": "description minified files nt contain sourcemappingurl comment looked looked distjqueryminjs file nothing found file old version include sourcemappingurl thing newer versions sourcemappingurl missing sourcemap actually exists address users want sourcemap supposed edit distributed minified file missing something link test case first couple lines first couple lines", "num": "4166", "d": "8/2018"}, {"title": "html hidden attribute elements made visible show toggle", "body": "description hidden element made visible still attribute apart semantics wrong rule stylesheet work uncomment rule codepen thus remove attributes elements link test case", "num": "4164", "d": "8/2018"}, {"title": "breaks string", "body": "description calling jquery like actually happens breaks error expect happen instead think either one two things loop string character character output sensible error something like incorrect parameter type string jqueryeach browsers affected firefox chrome throw error edge throws different error means safari throws another different error means suspect problem affects every browser link test case usecase eaching object expected sit data attribute element somehow undue circumstances let say data attibute longer rendered server valid json therefor passed code string throwing error describe novice developers might ignore error long nt look like error code excuse believe clear error messages expectable behaviour purpose helps everyone", "num": "4163", "d": "8/2018"}, {"title": "throwing gzip error west us central us south central us locations", "body": "seeing lot gzip errors west us central us south central us locations error message systemioinvaliddataexception magic number gzip header correct make sure passing gzip stream systemiocompressiondeflatestreamendread iasyncresult asyncresult microsoftvisualstudiotesttoolswebstressdatacapturestreamendread iasyncresult asyncresult microsoftvisualstudiotesttoolswebstresswebtesttransactionreadresponse iasyncresult result looks like cdn issue jquery version locations east us east us locations nt throw error message serves right content back please fixrefresh cdn issue jquery library thanks", "num": "4162", "d": "8/2018"}, {"title": "use visualviewport value window height", "body": "description recent chrome available get window size windowvisualviewport web apis mdn value follow address bar shrinking mobile browsers nt work well consider use possible ditto", "num": "4161", "d": "8/2018"}, {"title": "running results equivalent different jqueryminjs file", "body": "description expect happen hopping run repo without making change get exact distjqueryminjs actually happens getting equivalent distjqueryminjs different variable names different line separators cases extra parenthesis example checkedin min file produced min file notice new produced file parenthesis one less comma browsers affected none command give exact minified version would like make changes use official tools minify file expected get mostly output would make private code reviews easier approve", "num": "4160", "d": "8/2018"}, {"title": "jqueryajax method removal documented final release note", "body": "description jquery release removed documented final release note place find mentioned beta release note removed specialcase deferred methods jqueryajax please add change final release note timmywil", "num": "4159", "d": "8/2018"}, {"title": "unable query form input element name id", "body": "description unable query form input element name id gt returns input element gt returns form expected link test case jsfiddle used jquery v tested chrome v windows", "num": "4156", "d": "8/2018"}, {"title": "ios fails dimension svg tests", "body": "seems iossafari version ignores attribute used unlike width failing tests could easily updated put sizing attribute maybe also real bug worth fixing seems occur safari iphone see", "num": "4155", "d": "8/2018"}, {"title": "hover nt work multiple elements", "body": "example second javascript line fails html javascript consolelog div hover line works fine consolelog div span hover line throws exception jsfiddle documentation says returns true least one elements matches selector means work multiple elements example shows nt", "num": "4154", "d": "8/2018"}, {"title": "insert body element append method", "body": "description append method inserts specified content last child element jquery collection insert first child use prepend add dom elements childs either side sub dom p insert body element method showcasegif pic see click button three times inserted inside body element sure link test case", "num": "4153", "d": "8/2018"}, {"title": "getscript report parse failures via catch", "body": "description produces uncaught exception chrome probably reported rejected promise link test case", "num": "4151", "d": "8/2018"}, {"title": "make ajax understand acceptable data", "body": "send file formdata jquery brought lot stackoverflow think things better trying understand kind data sending without propose possible js jqueryajax url url method post data formdata typed arrays blob file without need processdata false contenttype false also jquerypost url formdata typed arrays blob file usually propose using fetch api instead jquery ajax something nt make easier developers quite opposite makes harder confusing things nt work", "num": "4150", "d": "8/2018"}, {"title": "position top calculated incorrectly", "body": "since upgrading lot issues top values many places web app property returns top value parent returned least places top value top page parent element testing position attributes anything special ca nt seem understand exact use case order create example switching definitely returning different values one place issue cross browser", "num": "4149", "d": "8/2018"}, {"title": "offset index returns error", "body": "description selecting eq variable inside return error try manipulate values link test case except happen array want select first grid class fourth inner class inside grid class hence eq starts subtract values array one nt selects second grid class fifth inner class inside second grid class like array nt actually happens subtracting array values one returns error line nt everything fine selects wrong one line", "num": "4148", "d": "8/2018"}, {"title": "added nonpassive event", "body": "hi deparated warning chrome found page instruction solution problem line jquery version change another problem set preventdefault line need test", "num": "4147", "d": "8/2018"}, {"title": "height give negative number", "body": "", "num": "4145", "d": "8/2018"}, {"title": "extend returns incorrect result string parameters", "body": "function call bug extend name john abc returns following b c name john return name john", "num": "4144", "d": "8/2018"}, {"title": "pseudoclass selected selects much edge", "body": "using edge returns select elements firefox correctly returns selected ones", "num": "4143", "d": "8/2018"}, {"title": "verbose reporting", "body": "comparing two nonequal objects prototype chain seems unnecessary report properties prototype chain know priori difference two objects wo nt found prototype object behavior discourages test driven development several failing tests quickly result insurmountable amounts lines logged generating html slows browser issue two legs section log prototypal properties know difference objects ca nt reside among prototypal properties b qunit log prototypal properties logging object example test gives output bare bone test prototype comparison ms expected add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z result add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z diff add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z", "num": "4142", "d": "8/2018"}, {"body": "related jquery plain javascript behave way browsers batch style updates effect classattribute changes performance reasons want force browser recompute styles middle changes need query something require browser recalculate styles case might better define complex animation please look help stack overflow though thanks", "d": "8/2018"}, {"body": "removed comment purpose see many problems including comment one different cdns use different file names comment would different different cdns kills security features like subresource integrity still attach map manually via devtools least chrome supports", "d": "8/2018"}, {"body": "thanks nt know chrome good day", "d": "8/2018"}, {"body": "whoa reminded never published note incorrect map file", "d": "8/2018"}, {"body": "thanks report amp one complex jquery cssrelated features lot scenarios handle especially connection elements visible hidden due default values inline styles conditions like attribute changes jquery tried make methods way simpler jquery basically relying inline styles alas nt work people expected called element hidden via stylesheets actually show element still nt think want complicate implementation modifying element attributes working elements hidden priority also scope unfortunately closing issue feel free elaborate thread", "d": "8/2018"}, {"body": "hm see calling inside switching hidden shown status would complicate implementation saying put back element called setting would sufficient saying removed element shown", "d": "8/2018"}, {"body": "one jquery design decisions validate input would otherwise get way larger amp slower want parameter validation consider using typescript contains jquery type definitions package users nt pay cost type information disappears compile time raised repeatedly past find duplicates request", "d": "8/2018"}, {"body": "nt think good design decision error obscure fix nt want add validation better error messages loop input expected say loop character like loop would", "d": "8/2018"}, {"body": "problem lots apis may behave unexpectedly blow provide incorrect input making fail helpful error messages would increase library size significantly especially jquery signatures really dynamic accept various parameter tuples said typescript flow friends want catch type errors earlier maybe community linters would catch sure whatever happens nt want send code endusers contained developers machines nt think able work anything like foreseeable future", "d": "8/2018"}, {"body": "keep nonminified version development version anyway still nt responded original alternate loop character", "d": "8/2018"}, {"body": "keep nonminified version development version anyway lots people import jquery npm bundle amp minify fan making production version different development one reason still nt responded original alternate loop character think likely mask errors someone mistakenly provide string instead array one string also iterating string letters common use case nt found useful much", "d": "8/2018"}, {"body": "thany please read docs description generic iterator function used seamlessly iterate objects arrays arrays arraylike objects length property function arguments object iterated numeric index objects iterated via named properties primitives strings objects", "d": "8/2018"}, {"body": "also iterating string letters common use case nt found useful much primitives strings objects fact matter strings iterable simple loop prove", "d": "8/2018"}, {"body": "talking javascript loops jquery method generally iterate string using method overkill think", "d": "8/2018"}, {"body": "using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error", "d": "8/2018"}, {"body": "hi dave error azure availability ping test web browser seems loading jquery without issues atleast computer east us looks like compressed version expected returned back cdn whereas uncompressed file returned issue seem started est nt exact bits got microsoft support cdn serving returning incorrect data precisely error indicates magic number gzip header correct make sure passing gzip stream first time seen odd errors cdns unfortunately issue request gzip file successfully returns response header states content gzipped actually look hex return however file compressed file compressed first two bytes return value supposed contain magic number gzip returned instead cdn uncompressed instead report error testing get file back header says gzip detect report error web browsers forgiving regard often ignore error occurs retry read text field therefore failed test affect web browser clients hope helps fri aug pm dave methvin notifications githubcom wrote using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error receiving authored thread reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "exactly issue chance solving issue", "d": "8/2018"}, {"body": "yes solve jquery update server return correct data gzip iisue codejquerycom cdn minutes ago awaiting moderation underlying issue cdn returning incorrect response header source server cdn queries quite easy see tool like fiddler query library pass gzip header upper case perfectly legal per rfc see response indicates zipped content compressed underlying problem example get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en returns ok date tue aug gmt connection keepalive acceptranges bytes contentencoding gzip contentlength contenttype applicationjavascript lastmodified fri oct gmt server nginx etag w cachecontrol accesscontrolalloworigin vary acceptencoding xhw noticed content returned plain text compressed gzip contentencoding specifies causes error mentioned original question return zipped promised source server fairly recent changeproblem past return data compressed fix ensure source cdn jquery server returning compressed data says cdn adding header content compressed gzip", "d": "8/2018"}, {"body": "query library pass gzip header upper case jsandersrocks could provide source claim header values case insensitive something work forwarding issue cdn provider", "d": "8/2018"}, {"body": "vchandrasn confirm test described also sends value uppercase know talking two different issues", "d": "8/2018"}, {"body": "hi michal could see ping test send acceptencoding header sends contentencoding header value gzip thanks chandra wed aug micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom wrote vchandrasn confirm test described also sends acceptencoding value gzip uppercase know talking two different issues receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "vchandrasn server send together response asking sending request server specifying", "d": "8/2018"}, {"body": "right sent response header information indeed sending acceptencoding header gzip deflate br value wed aug micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom wrote vchandrasn contentencoding server send together response asking youre sending request server specifying acceptencoding contentencoding receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "mgol absolutely open postman fiddler composer fiddler example send request following headers get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en inspect return see even though contentencoding indicates gzip reality returned plain text compressed ok compress return value however server must set contentencoding gzip header feel free email jsanders microsoft dot com need ps recent issue things worked fine also change request lower case gzip get correct value", "d": "8/2018"}, {"body": "mgol also working jsandersrocks looking section last paragraph states explicitly edit also found section referenced first paragraph section acceptencoding acceptencoding acceptencoding header field used user agents indicate response contentcodings section acceptable response identity token used synonym encoding order communicate encoding preferred content codings contentcoding values caseinsensitive ought registered within http content coding registry defined section used acceptencoding section contentencoding section header fields", "d": "8/2018"}, {"body": "debugthings thank follow request cdn provider", "d": "8/2018"}, {"body": "issue confirmed content coding values contents caseinsensitive per rfc codejquerycom sends response encoding response variants lowercase lack encoding also including transcripts comments added sh curl sv head c xxd trying connected codejquerycom port get host codejquerycom useragent accept lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentlength unencoded size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt cachecontrol public lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery unencoded response failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength compressed size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data response appears gzipped cf failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip unusual request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength size big unencoded response lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery nongzipped gt failed writing body closing connection", "d": "8/2018"}, {"body": "right supported chromeish browsers behavior would different across platforms one problem see fires resize event assume case addition using viewport user would need us use well order charade effective", "d": "8/2018"}, {"body": "thanks suggestion keep mind refrain using propagates browsers", "d": "8/2018"}, {"body": "thank opening issue use uglify minify jquery way uglify mangles variable names make file short possible top head sure could get completely idempotent minification process point right direction telling look uglify documentation disable certain optimizations", "d": "8/2018"}, {"body": "thanks quick response notice run multiple times row output always even run different computers pointing branch commit output files identical expecting point tag get output checkedin point available download jquery seems differences output file checkedin file improvement minification process like using less variables example pasted improvements coming dist files produces different npm packages improvements disabled command line option thank", "d": "8/2018"}, {"body": "files may match dependencies subdependencies used build minified files changed since release still within version range specified recent versions generate file retrieves exact versions used build increases odds get result however jquery old file committed time release provide", "d": "8/2018"}, {"body": "got thanks clarification", "d": "8/2018"}, {"body": "dmethvin latest jquery versions nt committed either various issues around crossplatform mismatches modified leaving repo dirty state etc", "d": "8/2018"}, {"body": "perhaps would nt bad idea add tags way people would able recreate build may matter peopleorgs wanting verify nothing bad sneaked compiled file", "d": "8/2018"}, {"body": "oh yeah forgotten whole mess seem like would handy tagged versions along note distribution repo explaining upsidesdownsides", "d": "8/2018"}, {"body": "still ca nt guarantee builds idempotent even even packagelock committed uglify", "d": "8/2018"}, {"body": "timmywil true understand randomness uglify build tag currently use different version due lack lockfile", "d": "8/2018"}, {"body": "fair enough would easy add lock file dist release", "d": "8/2018"}, {"body": "blog post highlights major changes constitutes major change matter opinion important part changes like removal methods deferred returned clearly documented jquery documentation change highlighted yellow think enough", "d": "8/2018"}, {"body": "also tested chrome version official build macos high sierra chrome version official build windows issue", "d": "8/2018"}, {"body": "thanks opening issue however due native browser behavior something fix recommend avoiding input names may conflict selectors input names become properties form element replacing native property generally bad practice", "d": "8/2018"}, {"body": "hi thanks recommendation please note name property value id form serialized key send backend replacing native property", "d": "8/2018"}, {"body": "tale old time sucom jquery see page see also", "d": "8/2018"}, {"body": "thanks got", "d": "8/2018"}, {"body": "decided fix test since occurs one old ios version purpose test", "d": "8/2018"}, {"body": "selector officially supported jquery work qsa path taken first example check team see aware bugs selector currently supported browsers might able add support tell testing hover tricky", "d": "8/2018"}, {"body": "discussed meeting agreed implementation selector pretty said plan rewrite sizzle way relies much heavily would provide support close covered sizzle roadmap", "d": "8/2018"}, {"body": "would nt support sizzle selectors like would nt work end story however selector entirely supported trivial make work multiple elements actually currently using customized version jquery solves problem completely bypass sizzle selector works", "d": "8/2018"}, {"body": "selectors like hover div would nt work end story actually rewrite would", "d": "8/2018"}, {"body": "thanks opening issue however actually references particular elements may may get cloned depending way element gets appended example valid usage fact shows byproduct implementation words nt try append element multiple places new element must created appendprepend accomplish want", "d": "8/2018"}, {"body": "timmywil thank reply look know references particular elements remove methods one element inserted method yet though pressed button many times", "d": "8/2018"}, {"body": "multiple one docs append say important one target element however cloned copies inserted element created target except last one code moving span around body never creates clone", "d": "8/2018"}, {"body": "thanks opening issue however works", "d": "8/2018"}, {"body": "thank issue however jquery automatically processes data query strings sent get requests likely still common use case besides changing defaults options would break lot code", "d": "8/2018"}, {"body": "sorry fail see something like could break nt even work first place nt mean change default settings processdata amp contenttype false meant check whatever data correct thing", "d": "8/2018"}, {"body": "default would changed nt want set since default however rather removing contenttype header completely could set appropriate default behavior try convert data string like long time could start adding exceptions probably would nt stop formdata breaking existing code comes plugins custom methods handle correct options types requests would simpler added magic needed ajax prettier eg besides seems going use may well use", "d": "8/2018"}, {"body": "could set contenttype appropriate multipartformdata nt set request header since boundary added something xhr fetch automatically setting content would break backend code know read boundary think set request content type data formdata let xhr handle default behavior try convert data string like long time well world changing think laking behind grate try convert everything string everything casted string becomes along blobfiledataview typed arrays could start adding exceptions think please nt add something like good enough ppl could stop write long version go back simpler sort version holding back please nt add something else blob file typedarrays also cuz would much handle put mind besides seems going use formdata may well use fetch talking nt use jquery longer get people want help fetch api always option since even fetch api microsoft still going support something follows rule even still today breaking existing code comes still nt see breaking changes would added functionality formdata instance avoid setting contenttype nt try process string simple would ever good default thing trying cast formdata blob typed arrays string never default thing type data might missing something nt used jquery couple years might give code example next major release see similar question like pop time send formdata objects ajaxrequests jquery sending multipartformdata jqueryajax use formdata ajax file upload", "d": "8/2018"}, {"body": "nt suggesting core method suggested said would plugin function user code answers questions indicate easily addressed without additions jquery core nevertheless since feel strongly feel free submit pr happy review otherwise likely stay wontfix probably ajaxprefilter rick suggested old ticket", "d": "8/2018"}, {"body": "go ahead answer still nt see breaking changes would added functionality would added functionality ca nt always predict change like affect millions lines code wild would actually result breakages nt know seen behavior changes affected users ways never expected extra careful definitely change behavior synonymous breaking change library lot users said sometimes deem necessary introduce change major version nt seem critical enough warrant change best way persuade core team code", "d": "8/2018"}, {"body": "nt suggesting core method suggested sendformdata said would plugin function user code ah misstake answers questions indicate easily addressed without additions jquery core imo like ask quest nt make easy played around prefilter easy cast error first thing happens guess need make core changes let slide js ajaxprefilter function args write potential fix never logs anything consolelog args ajax url method post data new formdata", "d": "8/2018"}, {"body": "right prefilters seem applied data converted following blocks could perhaps swapped ajaxjs line ca nt think reason would problem wonder jaubourg dmethvin mgol markelog might js convert data already string sdata amp amp sprocessdata amp amp typeof sdata string sdata jqueryparam sdata straditional", "d": "8/2018"}, {"body": "reopening investigate possibility prefilter least investigate possibility swapping blocks code enable user prefilters get data goes", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "discussed meeting open exploring first step swap blocks mentioned see tests break", "d": "8/2018"}, {"body": "ok able reproduce div testing inside table top value returned remove table returned top page switch jquery returned top page cases may cases produce issue tables", "d": "8/2018"}, {"body": "looks like issue still open", "d": "8/2018"}, {"body": "agreed addressed", "d": "8/2018"}, {"body": "please ask questions forum stackoverflow agree bug make issue", "d": "8/2018"}, {"body": "never asked question asked coding den near like forum", "d": "8/2018"}, {"body": "place report bugs jquery library look like bug library visit forum help understand happening", "d": "8/2018"}, {"body": "okay", "d": "8/2018"}, {"body": "handler requires use passive listeners appears slickjs jquery issue background passive listeners see please add comments", "d": "8/2018"}, {"body": "problem point get", "d": "8/2018"}, {"body": "value reported guaranteed accurate element parent hidden get accurate value ensure element visible using", "d": "8/2018"}, {"body": "oh ha missed display none says", "d": "8/2018"}, {"body": "guaranteed accurate imho difference reported height pixel case completely physical impossible", "d": "8/2018"}, {"body": "string parameter incorrect input params need objects first one also", "d": "8/2018"}, {"body": "yes string parameter incorrect instead throwing error returning first parameter unpredictable result example case extend name john true method return first argument object name john think fixed", "d": "8/2018"}, {"body": "jquery nt validate input public api get much bigger amp slower started care validation consider using typescript type definitions jquery throw error try use incorrectly", "d": "8/2018"}, {"body": "disregard notice may repost provide example", "d": "8/2018"}, {"body": "look like jquery bug report mean qunit", "d": "8/2018"}, {"body": "totally meant qunit", "d": "8/2018"}, {"body": "reminder still deterministically failing current master aug", "d": "8/2018"}, {"body": "issue passive added", "d": "8/2018"}]