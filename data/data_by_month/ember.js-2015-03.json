[{"title": "result root changed ember", "body": "short visit andthen function ember consolelog currenturl gt ember consolelog currenturl gt developing ember cli application betas today updated first beta try everything continued work except acceptance test assertions previously application returned returns empty string routes still returns string beginning run development believe code used get intest behaviour seems incorrect seemed infeasible make jsbin demonstrate since happening tests create small demonstration ember cli application verify still happening canary version trivial change tests look empty string instead intended behaviour let know update tests keep working betas", "num": "10784", "d": "3/2015"}, {"title": "ember warning triggered bound style value safestring", "body": "ember warns xss vulnerabilities using bound style propertyattribute inside handlebars template even property returned safestring warning triggered styles applied means expectation instances style attributes handlebars template employ additional helper documentation implies returning safestring computed property sufficient", "num": "10783", "d": "3/2015"}, {"title": "could someone release embersource gem", "body": "seems emberjs released great released rubygemsorg", "num": "10782", "d": "3/2015"}, {"title": "ember routerget url throws error", "body": "main code seems tries call geturl location property string ember ember works", "num": "10781", "d": "3/2015"}, {"title": "getting error attempted render found", "body": "running issue since upgrading regarding code changed using thisrender route using embermodals addon makes call thisrender route template name options specifying render template issue appendorphan gets called using thisrender seems like appendorphan expects call made impersonateanoutlet would set wasused value looks like impersonateanoutlet gets called using render helper", "num": "10780", "d": "3/2015"}, {"title": "emcomputedfilterby macro updating", "body": "stumbled upon confusing behavior working chains computed macros include isolated problem jsbin run jsbin first logged value expected swap compound property different object output still comment replace custom implementation provided jsbin value logged correct sure bug point view sure seems like one reading docs unable explain behavior able work around way needlessly reimplement filterby sorry sort pebkac note using properties observer function guessing using template already updated would issue maybe use case macros nt correct", "num": "10779", "d": "3/2015"}, {"title": "missing classnames classnamebindings docs", "body": "docs mention use properties listed bottom among properties remmember seeing pair intentional see support properties provided mixin refactored recently maybe docs nt list anymore", "num": "10777", "d": "3/2015"}, {"title": "query param flashing problem", "body": "hi issue using query params scenario think must fairly common nt seen lot discussion deal behavior route set reloading model query param change button route template toggles query param click button model reload also button flickers ideally button nt flicker filter problem understand route model controller lifecycle tied model template reload template well possible solutions keeping parent route controller dedicated managing query params filters child route model problem splitting query params route whose model filtering meaning convenient option longer sufficient reload model data change another strategy needed also seems violate agreement separation route concerns completely sure communication method would ideal allowing managing model controller pretty sure trolling proposing pretty sure moving towards componentonly application structure routes possess models done success problematic caveats well edit ember provide portion template reloaded model change responsible managing query parameters probably overkill necessary common enough problem maybe considered fundamental change could beneficial", "num": "10776", "d": "3/2015"}, {"title": "gemspec referencing deletedmoved folder", "body": "embersource gemspec references distjs directory nt exist anymore perhaps obsolete needs removed see scripts lib might related leave owner", "num": "10775", "d": "3/2015"}, {"title": "binding event attributes nt work expected", "body": "without getting securitybest practice debate curious current behavior template bindings event attributes correct seems counterintuitive hbs hardcoded works fine via binding nt work due emberhtmlbars propertyfirst rule normalized key exists dom object property set instead using would seem another exception norm similar svg etc example showing various behaviors", "num": "10774", "d": "3/2015"}, {"title": "allow passing null queryparams subexpression", "body": "would really great could pass query params subexpression today pass like end route subexpression expecting variable access current context common use case something like clearing search imagine implemented search query parameter want implement x clear search order use linkto clear query parameter put variable called context linkto clear query param address bar example jsbin showing issue described", "num": "10772", "d": "3/2015"}, {"title": "chrome ember bug", "body": "asked something emberjs forum suggested post repost posterity found weird bugcondition almost impossible goggle dropped looks like good place ask following great tutorial embercli nt set exactly like tutorial chose go separate ember front end rails backend tutorial getting good create page display data hbs tutorial uses emblem verified problem exists leads lead controller leadfirstname nothing displayed checked data ember inspector checked dom elements data showing page even leads part ok figured tutorial came questionable css nuked css styling went away stuff still missing viewing chromebook jumped mac still data screen thought give firefox try using chrome data appears safari ok problem chrome browsers desperation changed id leads id leeds fixed problem tried static html page course worked got something emberjs chrome possibly code tutorial could readily accept something really stupid used happening chrome maybe need start deleting chrome extensions common chromebook mac maybe could explain author put demo app nt see anything except orange header chrome safari see list firefox opera chrome safari use webkit rendering", "num": "10771", "d": "3/2015"}, {"title": "embersource gem actual", "body": "embersource following diff emberdebugjs hosted emberjscom causes issue seems embersource one applied could someone rebuild publish embersource might something diff emberdebugjs exportsdefineproperty defineproperty function obj keyname desc defineproperty function obj keyname desc var isnode exportsdefineproperty defineproperty function definepropertypolyfill obj keyname desc defineproperty function definepropertypolyfill obj keyname desc descget obj keyname descvalue var candefinenonenumerableproperties exportsdefineproperty defineproperty exportshaspropertyaccessors haspropertyaccessors exportscandefinenonenumerableproperties candefinenonenumerableproperties var tryfinally needsfinallyfix exportstryfinally tryfinally function tryable finalizer binding tryfinally function tryable finalizer binding var result finalresult finalerror return finalresult undefined result finalresult else exportstryfinally tryfinally function tryable finalizer binding tryfinally function tryable finalizer binding var result finalresult var trycatchfinally needsfinallyfix exportstrycatchfinally trycatchfinally function tryable catchable finalizer binding trycatchfinally function tryable catchable finalizer binding var result finalresult finalerror return finalresult undefined result finalresult else exportstrycatchfinally trycatchfinally function tryable catchable finalizer binding trycatchfinally function tryable catchable finalizer binding var result finalresult exportsguidkey guidkey exportsmetadesc metadesc exportsemptymeta emptymeta exportstrycatchfinally trycatchfinally exportstryfinally tryfinally enifed embermetalwatchkey exports embermetalcore embermetalutils embermetalplatformdefineproperty embermetalproperties function exports ember utils defineproperty properties exportsnativearray nativearray nativearraywithoutapply nativearray ignore nativearray nativearraywithoutapply nativearray ignore creates array like object nativearrayactivate function nativearrayapply arrayprototype exportsa function arr return arr function arr return arr ember default extendprototypes true ember default extendprototypesarray exports default nativearray exportsa exportsnativearray nativearray enifed emberruntimesystemobject exports emberruntimesystemcoreobject emberruntimemixinsobservable function exports coreobject observable", "num": "10770", "d": "3/2015"}, {"title": "regression binding elementid components", "body": "using components generate unique ids components markup boiled jsbin works nt work follow foo links", "num": "10769", "d": "3/2015"}, {"title": "unable call route action controller", "body": "nt possible call declared connected", "num": "10767", "d": "3/2015"}, {"title": "trouble template precompilation upgrading", "body": "hi guys getting following error trying upgrade using emberrails trying hunt revision inserted templates submit pr must admit overall flow using emberrails still bit maze someone point right direction happy digging", "num": "10766", "d": "3/2015"}, {"title": "radio button component longer working upgrading", "body": "radio button component stopped working upgrading internet explorer sure versions works fine chrome firefox working jsbin working jsbin console error unknown name file vendorjs line column vendorjs line prototypesetattribute function element name value elementsetattribute name string value", "num": "10763", "d": "3/2015"}, {"title": "render navigation wo nt render navigationhbs navigation view present", "body": "ember wo nt render view present rename view something else template rendered however need render template view situations app regression wanted effect viewsnavigation present uses file nt care template nav tagname specified view navigation name template rendered emberjs works expected view combined template ember specify make work expected", "num": "10760", "d": "3/2015"}, {"title": "compare custom ember objects sortablemixin", "body": "nt default compare method include case regular js objects compare getting result valueof actual issue described another user", "num": "10759", "d": "3/2015"}, {"title": "styleguide arguments vs rest parameters", "body": "seemed little bit contradictory would nt make sense always use rest parameters instead writing loop manually", "num": "10757", "d": "3/2015"}, {"title": "applicationloading named substate requires route entry", "body": "tried use named substate feature surprised discover good enough template named app must also explicitly define route named jsbin demonstrating designed", "num": "10756", "d": "3/2015"}, {"title": "required attribute added added", "body": "ember ember", "num": "10754", "d": "3/2015"}, {"title": "npm start error developing ember master linked locally", "body": "steps sh master jim jimhp dev git clone git githubcom emberjsemberjs master jim jimhp dev cd emberjs master jim jimhp emberjs npm link embercli master jim jimhp emberjs ember v version node npm master jim jimhp emberjs npm install npm warn packagejson ember repository field ember postinstall homejimdevemberjs bower install bower cached bower validate bower cached bower validate bower cached bower validate bower cached bower validate bower cached bower validate bower cached git githubcomjonkempqunitphantomjsrunnergit bower validate git githubcomjonkempqunitphantomjsrunnergit bower cached git githubcomjqueryqunitgit bower validate git githubcomjqueryqunitgit bower cached git githubcomjqueryjquerygit bower validate git githubcomjqueryjquerygit bower install backburner bower install routerjs bower install dagmap bower install emberdev bower install qunitphantomrunner bower install qunit bower install jquery bower install rsvp backburner bowercomponentsbackburner routerjs bowercomponentsrouterjs dagmap bowercomponentsdagmap emberdev bowercomponentsemberdev qunitphantomrunner bowercomponentsqunitphantomrunner qunit bowercomponentsqunit jquery bowercomponentsjquery rsvp bowercomponentsrsvp npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesbower requires rimraf load npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesrimraf npm warn unmet dependency version npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesquicktemp requires rimraf load npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesrimraf npm warn unmet dependency version npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulestemp requires rimraf load npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesrimraf npm warn unmet dependency version npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesemberclincp requires mocha load npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesmocha npm warn unmet dependency version npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesbowernodemodulesbowerregistryclient requires rimraf load npm warn unmet dependency homejimdevemberjsnodemodulesemberclinodemodulesrimraf npm warn unmet dependency version qunitextras nodemodulesqunitextras emberpublisher nodemodulesemberpublisher qunitjs nodemodulesqunitjs routerecognizer nodemodulesrouterecognizer chalk nodemoduleschalk ansistyles escapestringregexp supportscolor stripansi ansiregex hasansi ansiregex simpledom nodemodulessimpledom emberclidependencychecker nodemodulesemberclidependencychecker semver glob nodemodulesglob inherits wrappy inflight wrappy minimatch braceexpansion express nodemodulesexpress mergedescriptors utilsmerge cookiesignature methods cookie fresh escapehtml rangeparser contenttype finalhandler vary parseurl servestatic contentdisposition pathtoregexp depd qs onfinished eefirst debug ms etag crc send destroy ms mime proxyaddr forwarded ipaddrjs accepts negotiator mimetypes typeis mediatyper mimetypes github nodemodulesgithub rsvp nodemodulesrsvp htmlbars nodemoduleshtmlbars awssdk nodemodulesawssdk xmlbuilder sax bower nodemodulesbower isroot junk stringifyobject chmodr abbrev osenv archy opn rimraf bowerlogger lrucache bowerendpointparser gracefulfs lockfile nopt retry tmp q requestprogress throttleit chalk ansistyles escapestringregexp supportscolor hasansi stripansi shellquote arrayfilter arraymap arrayreduce jsonify bowerjson intersect deepextend gracefulfs semver fstream inherits pthrottler q mkdirp minimist promptly read bowerconfig osenv gracefulfs optimist fstreamignore inherits minimatch tarfs pump tarstream decompresszip nopt mkpath touch readablestream binary request caseless jsonstringifysafe foreveragent stringstream oauthsign tunnelagent qs nodeuuid mimetypes formdata bl toughcookie hawk glob inherits minimatch bowerregistryclient gracefulfs requestreplay lrucache async mkdirp request cardinal redeyed mout updatenotifier semverdiff stringlength latestversion configstore handlebars optimist uglifyjs inquirer figures mutestream lodash clicolor rx insight objectassign chalk async lodashdebounce osname toughcookie configstore inquirer embercliyuidoc nodemodulesembercliyuidoc gitrepoversion gitrepoinfo rsvp broccolimergetrees promisemapseries symlinkorcopy broccoliwriter broccolicachingwriter coreobject promisemapseries symlinkorcopy debug rimraf broccolikitchensinkhelpers quicktemp lodashnode yuidocjs gracefulfs marked minimatch rimraf yui emberjsbuild nodemodulesemberjsbuild coreobject jsstringescape broccolistringreplace broccoliusestrictremover gitrepoversion gitrepoinfo broccolifunnel coreobject walksync symlinkorcopy mkdirp minimatch rimraf broccolikitchensinkhelpers mkdirp glob broccolistew walksync debug minimatch fsextra optimist broccolifilecreator broccoliwriter broccolifilter broccoliwriter promisemapseries walksync mkdirp quicktemp broccolimergetrees promisemapseries symlinkorcopy broccoliwriter broccolifilter esperanto minimist chalk magicstring sander acorn broccoliuglifysourcemap sourcemapurl walksync symlinkorcopy mkdirp broccoliwriter uglifyjs broccolisourcemapconcat combinedstream mkdirp broccoliwriter broccolicachingwriter fastsourcemapconcat broccolidefeatureify defeatureify lodashnode broccolijshint chalk mkdirp findupsync jshint broccoli broccolislowtrees copydereference promisemapseries mime commander connect tinylr findupsync handlebars broccoliderequire derequire broccolijscs path embercliversionchecker minimatch broccolistaticcompiler jscs babelcore slash tofastproperties shebangregex trimright pathisabsolute fsreaddirrecursive leven private globals esutils estraverse convertsourcemap jstokens linenumbers commander chalk debug isinteger asttypes detectindent repeating outputfilesync acornbabel sourcemap sourcemapsupport corejs regexpu regeneratorbabel lodash embercliyuidoc gitrepoversion rsvp broccolicachingwriter yuidocjs error sh master jim jimhp emberjs npm start ember start homejimdevemberjs ember serve version convert symbol value string typeerror convert symbol value string regexptest native symbolhasownproperty settostringtag object modulecompile objectmoduleextensionsjs moduleload npm err linux npm err argv start npm err node npm err npm npm err code elifecycle npm err ember start npm err exit status npm err npm err failed ember start script ember serve npm err likely problem ember package npm err npm npm err tell author fails system npm err ember serve npm err get info via npm err npm owner ls ember npm err likely additional logging output npm err please include following file support request npm err homejimdevemberjsnpmdebuglog npm debug log ember serveember serve error exit status error failed ember start script ember serve error likely problem ember package error npm error tell author fails system error ember serve error get info via error npm owner ls ember error likely additional logging output verbose exit true", "num": "10749", "d": "3/2015"}, {"title": "unable find partial testing", "body": "defining dependencies component test ember cli following worked requiring partial template template named however fail error instead change needs definition slightly everything works expected ember normally behavior exists testing sure issue ember embercli showed upgraded ember", "num": "10748", "d": "3/2015"}, {"title": "initializer broken emberapplicationinstanceinitializers feature flag honored", "body": "seems feature flag correctly handling changes came conclusion discovering addon broken due initializer working correctly uses deprecated format inspect container find actually registry container initializer nt work supposed app crashes perhaps change wrapped feature flag tried fork emberjs make change see would work maybe even submit pr ca nt life figure use local fork ember app usually makes easy lost bower seems good guide find one somewhere missing using embercli ember ember data edit breaks well works fine", "num": "10744", "d": "3/2015"}, {"title": "method causing build fail", "body": "trying get local build running seems failing seen note use node yet running get error bash engelbert emberjs trentmwillis npm test ember pretest userstrentmwillisworkspaceemberjs ember build future versions ember cli support please update node iojs version could find watchman falling back nodewatcher file system events visit info build failed file containercontainerjs object method gettokenposbyrangestart typeerror object method gettokenposbyrangestart arrayforeach native objectjsfileiteratenodesbytype objectmoduleexportscheck null arrayforeach native stringcheckercheckjsfile stringcheckercheckstring jscsfilterprocessstring filterprocessfile npm err test failed see details npm err ok code", "num": "10743", "d": "3/2015"}, {"title": "debugcontainerkey hash contextual data", "body": "something like would enable ed get rid typekey look cc stefanpenner fivetanley", "num": "10742", "d": "3/2015"}, {"title": "api documentation alphabetical items alternate columns making scanningusing difficult", "body": "api docs two columns alphabetical order alternates column column line would much nicer minimum go back one column better break columns midpoint list show first half list first column second half list second column", "num": "10741", "d": "3/2015"}, {"title": "component helper race condition associated model", "body": "helper seems race condition causing problems surface tests writing usage like tests run failure occurs run instance change usage use static string rather model property like tests teardown fine leads believe caused model destroyed component resulting component type potentially related pr", "num": "10739", "d": "3/2015"}, {"title": "doc missing updated todomvcstyle guide", "body": "docs pretty good leadin small sample application covers good starting matter like ember opinion model view controller mean clientside world databinding model view directions read edit binding actions delete completed nonpersistent state concept controller proxy model manipulate infer data view routing data persistence layers fixtures inital template work vs moving real storage although expanding continue rest endpoint would even better particular impressive starts spec static mockup fits real world keeps whole thing firm context end goal docs nt seem pages something covering ground eg updated version app since simple example already cover lot angles raised issue per locks suggestion irc", "num": "10738", "d": "3/2015"}, {"title": "query params broken objectcontroller", "body": "query params seem work correctly ember using exact code functions using ember using replaced binding query param property controller input template editing text field nt update url setting url manually update text field examples broken working working know deprecated understand deprecationember strategy correctly everything still work correctly even still use", "num": "10733", "d": "3/2015"}, {"title": "ember promise undefined", "body": "getting following error trying load app code trying call following works properly chrome firefox etc", "num": "10732", "d": "3/2015"}, {"title": "support broken transpilation", "body": "compatibility broken recent pull requests adding features example destructuring input output javascript use strict var slicedtoarray function arr arrayisarray arr return arr else symboliterator object arr var arr var iterator arrsymboliterator step step iteratornext done arrpush stepvalue amp amp arrlength break return arr else throw new typeerror invalid attempt destructure noniterable instance function foo blah var blah slicedtoarray blah var blah var b blah example spread input output javascript use strict var toconsumablearray function arr arrayisarray arr var array arrlength lt arrlength arr return else return arrayfrom arr function doit foo blahapply undefined toconsumablearray foo examples show usage destructuring spread babel currently assumes present true", "num": "10730", "d": "3/2015"}, {"title": "issue binding immutable computed property", "body": "following jsbin beta would expect something like work component final id dom actually injected version computed property bind elementid directly string literal work", "num": "10728", "d": "3/2015"}, {"title": "coreview legacy creation needs hasdom check", "body": "nonbrowser environments fastboot fails attempting create view without container", "num": "10724", "d": "3/2015"}, {"title": "empty string parameter sendaction", "body": "thissendaction ontest thissendaction ontest null thissendaction ontest abc thissendaction pass empty string parameter", "num": "10723", "d": "3/2015"}, {"title": "keys values embermap", "body": "embermap keys embermap values private blessed way get values", "num": "10722", "d": "3/2015"}, {"title": "typeerror node undefined chainnodeprototypeunchain", "body": "transitioning views submitting form action helper targeted view click back button using linkto helper console indicates transitioned transition complete node undefined error view fails load happens chainnodeprototypeunchain apparently unbinds destroys event attachments minimize memory leaks inspected chainnode objects nt really see wrong wrapped process inside typeof node undefined app would stop throwing typeerror navigate back", "num": "10717", "d": "3/2015"}, {"title": "regression controller longer context handlebars helpers", "body": "found one regression ember regarding handlebars helpers previous versions definitely sure could huge deal rewriting handlebars helpers htmlbars version anyway nevertheless regression provide failing test jsbin later today", "num": "10714", "d": "3/2015"}, {"title": "guide issue use kind eventname style keypress keypress", "body": "input guide says event names must dasherized assigned action guide says general twoword event names like keypress become keypress confused", "num": "10713", "d": "3/2015"}, {"title": "second call render within template fails", "body": "please see code works current release ember current beta error given specific usecase rendering tabs contents requires two calls render thanks", "num": "10710", "d": "3/2015"}, {"title": "documentation issue", "body": "docs say rule thumb use resources nouns routes adjectives favorites verbs edit wanted point favorites noun adjective", "num": "10708", "d": "3/2015"}, {"title": "emberviewrender removes certain tags buffer", "body": "reason able use tags import ember ember export default emberviewextend looking dom chrome see creates divs rows cells however works import ember ember export default emberviewextend bug feature case feature common way work around view logic heavy ca nt handlebars alone", "num": "10707", "d": "3/2015"}, {"title": "test helper clicks work jquery", "body": "fighting click helpers tests seem work perhaps async perhaps work actions something really sure seems bug though would assume jquery click next button test helper click next button click button works would use jquery click everywhere instead helper jquery work phantomjs either using click helper wrong wo nt work case could include jquery clicks phantomjs somehow think inject jquery", "num": "10705", "d": "3/2015"}, {"title": "return promise always giving route instance fulfilled handler", "body": "ember ember data jquery ember simple auth use redirect route currently instead passing route instance fulfilled handler provides javascript object properties like queryparams", "num": "10704", "d": "3/2015"}, {"title": "block param description beta release blog confusing", "body": "syntax confusing opinion makes sense nt make clear refers exactly customer birthday component named properties order matter", "num": "10702", "d": "3/2015"}, {"title": "importing pod component requires additional path", "body": "component defined ember cli app created using component blueprint trying reuse extend component another component importing using following work instead path required following looking seems components template exported podspecific path suggest former intuitive nt see distinguishing pod nonpod components would beneficial", "num": "10698", "d": "3/2015"}, {"title": "replacing item bound array renders briefly without", "body": "got playlist artwork images click one old current track taking place therefore replace item array ember rerenders items brief moment replaced element disappears leads ugly effect everything repositioned made jsfiddle using jquery could nt reproduce behaviour see effect go click one three playlistimages simplified controller import ember ember export default emberarraycontrollerextend playlist null currenttrack null actions replaceitem function playlistreplace index selfget currenttrack template", "num": "10694", "d": "3/2015"}, {"title": "uncaught typeerror object function", "body": "js outercontextualelement function thisoutercontextualelement emberdeprecate render buffer expects outer contextualelement exist ensures dom requires context correctly generated tr svg tags defaulting documentbody removed future thisoutercontextualelement documentbody return thisoutercontextualelement error hard debug happens transitions try gather details soon", "num": "10693", "d": "3/2015"}, {"title": "wrong context custom handlebars helper", "body": "ember version relative links note code works fine ember work updating ember version got error canhelper nt call computed properties function debug found try search property controller override context using boundif helper helpers code next use embercli use standart emberhandlebarsregisterhelper appjs var get emberget isglobalpath emberisglobalpath normalizepath emberhandlebarsnormalizepath isbinding emberisbinding export default function permissionname property options var attrs context key path permission logic find amp create permission supplied attributes permission thisget container lookup permissions main get permissionname attrs permission instance emberobject computed property nt call ensure boundif uses permission context viewcontroller otherwise looks wrong place optionscontexts null thisunknownproperty function propname stop propname find stacktrace debugger bind together kickoff observers return emberhandlebarshelpersboundifcall permission options give information stacktrace debugger statement unknownproperty", "num": "10692", "d": "3/2015"}, {"title": "beta breaks embervalidations", "body": "wycats said issues reported ember validations using private api yet bump ember beta causing failures", "num": "10689", "d": "3/2015"}, {"title": "feature request dasherized attributes camelcased components", "body": "polymer bottom section makes sense since html uses dasherized attributes moving closer web components spec think convert camel cased attributes internal manipulation within component would accessed eg", "num": "10686", "d": "3/2015"}, {"title": "custom component creates empty dummy html tag including actual content", "body": "something like mycomponent embercomponentextend layoutname mylayout tagname p classnames whatiswrongwiththistechnology layout payload rendered html ember stuff payload tried remove tagname nt really need something else tragically broke decided dive sake sanity back displaced tagnamed component ideas get sheep back yard actually want manipulate child tags component ca nt thisget element returns empty dummy tag nasty ways hey century nt", "num": "10685", "d": "3/2015"}, {"title": "", "body": "jcttrll noticed using beta version ember test attempting fillin element exist page test hangs run tests previous versions helper would alert let know element exist fail test issue test alert element exist fail test thanks work awesome project", "num": "10676", "d": "3/2015"}, {"title": "image always fetched even guarded", "body": "upgrading application run bit ugly problem template rendering offending code follows found menu bar application values change depending membership student selected offending scenario start visiting membership false ergo snippet rendered next switch membership coach render snippet back membership without coach point following error javascript console verify snippet causing problem commenting image point error nt occur attempted issue play nt jsbin replicate yet attempt soon available screenhero anyone interested trying tackle", "num": "10675", "d": "3/2015"}, {"title": "typeerror convert symbol value string", "body": "tried build master got related closed", "num": "10674", "d": "3/2015"}, {"title": "position newly inserted element incorrect serialization time snapshot", "body": "problem present emberdata lets say post object contains array comments way order comments serializing list ids modelspostjs import ds emberdata export default dsmodelextend title dsattr string comments dshasmany comment async true serializerspostjs import ds emberdata export default dsrestserializerextend dsembeddedrecordsmixin attrs products serialize ids deserialize ids lets say controller want change position comment var comments thisget comments var thecomment commentsobjectat commentsremoveat commentsinsertat thecomment far good comment position position array thisget model save problem serialization time snapshot comment inserted position ends end array instead correct position problem present emberdata hack tried get correct behavior clear array comments insert back desired order instead removeat insertat operation however causes flickers screen rerendering", "num": "10666", "d": "3/2015"}, {"title": "model update put request result", "body": "emberdata updating model result put request anymore downgraded emberdata bug present version", "num": "10665", "d": "3/2015"}, {"title": "nested linktos cause broken active states beta canary", "body": "using nested linkto ala common omgusingbootstrap pattern causes broken states beta canary see regression broken seems compared states states still reflect state example seen variety manifestations including set stuck", "num": "10662", "d": "3/2015"}, {"title": "propagate controller component", "body": "demo js app emberapplicationcreate appindexcontroller embercontrollerextend myproperty zomg lol report function emdebug controller property change observes myproperty actions trigger function thisnotifypropertychange myproperty appfoobarcomponent embercomponentextend myproperty null report function emdebug component property change observes myproperty trigger controller action expect observers fire reality controller observer fires component", "num": "10661", "d": "3/2015"}, {"title": "update documentation deprecations around contextswitching blocks", "body": "ran probably still learning sample application template route model defined route trying transition contextswitching syntax following instructions thought update template find nothing rendered console errors given gist tried well solution grapho clued admit might due lack really grokking template route controller interact still think would helpful line x referencing controller named return value route model hook realize sounds like dumb thing pros really learning js along ember maybe additional alternative code block uses syntax", "num": "10659", "d": "3/2015"}, {"title": "root template ignored router", "body": "beta root templateview ignored route hierarchy images code let know clarify possibly change nt bisected though cc edward thoughts may cause happy provide details jump screenhero similar router routermap function thisresource exports function thisroute history export route rendertemplate function thisrender exportsroot export index route rendertemplate function thisrender exportsindex routes versions", "num": "10658", "d": "3/2015"}, {"title": "running destroy test teardown causes injected show isdestroying true", "body": "simple app invokes destroy using run loop tests like would expect example route class injected like inject func setup simple initializer like nt invoke destroy tests good try run gt test destroy seem kill injected class reference point sure true bug w way destroy works done something completely wrong initializer shown either way reproduce threw together simple embercli app branch console log injected class time test runs first time get normal class expect destroy runs get something else entirely test run", "num": "10656", "d": "3/2015"}, {"title": "item controller arraycontroller nt work", "body": "hello community issue item controller nt render attributes controller model template jsbin see see code project", "num": "10655", "d": "3/2015"}, {"title": "mismatched value computed property attributebound", "body": "use computed property property attributebound changed browser situation property become desynchronized browser value instance property component example let say value text box user blanks computed property set call occurs check blank return desired value ember decides cached value matches correctly returns property never goes back updates text box dom actually match text input still shows blank", "num": "10654", "d": "3/2015"}, {"title": "optionshelpername undefined makeboundhelper invokes viewhelper", "body": "noncli grunt ember app embertextfield view bound arrivaldate property viewhelper created emberhandlebarsmakeboundhelper function options helper checks navigatoruseragent changes hashtype input date using mobile device browser binds devices native datepicker ember htmlbars compiler change return emberhandlebarshelpersviewcall dateinputview options return emberhandlebarshelpersviewhelperfunctioncall dateinputview options viewcall method moved compile get options undefined happens ember viewhelper method references optionshelpername options optionshash hash missing properties like boundoptions onevent valuebinding helpername view contexts hashcontexts hashtypes types data obj different able set optionshelpername helper obviously set earlier resolver wires view seems like viewhelper input helper needs wrapped something else fill missing properties", "num": "10653", "d": "3/2015"}, {"title": "problem nested outlets amp named outlets", "body": "see navigate admin rolesandusers userroles edit userrolesedittemplate rendered dialog outlet userroles bug unintended usage outlets", "num": "10652", "d": "3/2015"}, {"title": "audio still playing audio tag removed dom second time", "body": "audio tag route transitioning route second time audio still playing bug appears ember tested version works well ember jsbin reproduce problem ember working reproduce need transitionto multiple times ember working", "num": "10651", "d": "3/2015"}, {"title": "helper update array mixin", "body": "seems helper update changes objects implementing array mutablearray mixin see", "num": "10650", "d": "3/2015"}, {"title": "injected service observed template renderered", "body": "pretty new ember likely missing something project working notification service basically wraps around list also notification area component notification service injected problem routescomponents add stuff notification service binding notification area nt get updated basically made js bin illustrating issue clicking add green nt anything visually although updates list inside service provide actual code samples necessary", "num": "10649", "d": "3/2015"}, {"title": "upgrading latest version ember beta broke backwards compatibility", "body": "upgrading ember ember app stopped working error liquid fire library see kind issue fix master version liquid fire understanding beta updates ember nt break backwards compatibility amp bugfixes sorry misunderstand wanted raise issue case useful others", "num": "10646", "d": "3/2015"}, {"title": "emberroutingnamedsubstates nt take account embercli resolver structures", "body": "would like use loading state instead believe valid template names", "num": "10645", "d": "3/2015"}, {"title": "emberroutingnamedsubstates nt work", "body": "trying get working looks like resolver created changed resolver embercli sets core resolver masked behind function", "num": "10644", "d": "3/2015"}, {"title": "async redirect causes entry added history", "body": "see repro example clicking link takes cat route performs async hooks route redirects route route click back app goes route redirects route instead sending user back route works correctly without async hook", "num": "10643", "d": "3/2015"}, {"title": "white spaces ember components nt preserved", "body": "white spaces ember components nt preserved tested chrome firefox safari behaviour ember ember beta ember canary think components behave way native elements specially new syntax", "num": "10642", "d": "3/2015"}, {"title": "emberlatestjs gone breaking every jsfiddle everywhere including docs", "body": "meaning every single jsbin jsfiddle referencing ember anywhere interwebs broken includes large swathes ember documentation rwjblue pinging think know builds anyone", "num": "10641", "d": "3/2015"}, {"title": "deprecate deferred mixin", "body": "cc chadhietala got time believe class drepacted mixin", "num": "10635", "d": "3/2015"}, {"title": "ember testing helper cleanup end test", "body": "trying build clean test helper pretender want able write test adapter makes correct api call function assert assertexpectajaxget path apisave query id name steve optional response headers go responsebody goes adaptersave assertverifyajaxcalls test helpers embertestregisterhelper expectajaxget function app expectation response add expectation list app setup pretender register expectation call comes add list app embertestregisterhelper verifyajax function app expectation response check actual calls expected calls lists app assert question test helper guarantee run end test clean clean verify called called leak memory worse mocked ajax future tests may fail", "num": "10629", "d": "3/2015"}, {"title": "able build windows bit copied debuglog", "body": "info worked ends ok verbose cli f nodejsnodeexe verbose cli f nodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli build info using npm info using node verbose node symlink f nodejsnodeexe verbose runscript prebuild build postbuild info prebuild ember info build ember verbose unsafeperm lifecycle true info ember failed exec build script verbose stack error ember build verbose stack exit status verbose stack eventemitter f verbose stack eventemitteremit verbose stack childprocess f verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid ember verbose cwd c usersuserdesktopembersrcemberjs error windowsnt error argv f nodejsnodeexe f nodejsnodemodulesnpmbinnpmclijs run build error node error npm error code elifecycle error ember build error exit status error failed ember build script ember build environment production error likely problem ember package error npm error tell author fails system error ember build environment production error get info via error npm owner ls ember error likely additional logging output verbose exit true", "num": "10628", "d": "3/2015"}, {"title": "ability augment properties object array", "body": "need augment models supplemental property data oldold school way managing cache objects applied content always get tricky requires good bookkeeping cache managing array changes works well debugging proxy issues fun old school way heard method going away also flexible enough support use case suggested way handle scenario", "num": "10626", "d": "3/2015"}, {"title": "test regression", "body": "component yields security check passes thus hiding content user allowed see tests passed fail error call without template compiler loaded please load prior calling code tried changing handlebars htmlbars get error right way test yield happened correctly simplereasiermore correct way found regression test shows content may activity function assert assertexpect creates component instance var component thissubject securityservice createmocksecurityservice true template emberhandlebarscompile appends component page var component thisappend assertequal componentfind div ifmaytestdiv length", "num": "10625", "d": "3/2015"}, {"title": "add wrapperclass component", "body": "seems like certain cases want wrap certain components div css purposes example like extend wrap css styling purposes specifically add arrow design currently template outside component would much nicer encapsulate component thoughts", "num": "10624", "d": "3/2015"}, {"title": "name route object", "body": "using ember cli ember want name route object nt work error message something seen realize object could reserved word want check jsbin", "num": "10623", "d": "3/2015"}, {"title": "rendering error ie edge ember", "body": "ember cli app using ember loading site ie edge mode getting following error fragment parent must boundary nodes order detect insertion full stack trace line col r line col ecreatemorph line col ecreatemorphat line col render line col render line col uprototypecreateelement line col r line col anonymous function line col iprototypeinvoke line col iprototypeflush line col rprototypeflush line col sprototypeend line col anonymous function line col line col sprototypedefer line col anonymous function line col p line col c line col h line col anonymous function line col anonymous function line col c line col hfirewith line col send line col ajax line col edefaultget line col anonymous function line col anonymous function line col c line col hfirewith line col line col line col send line col ajax line col edefaultget line col model line col line col deserialize line col f line col rprototyperunsharedmodelhook line col getmodel line col anonymous function line col line col sprototypedefer line col anonymous function line col hprototypethen line col nprototyperesolve line col n line col c line col uprototypetransitionbyintent line col uprototyperefresh line col refresh line col send line col ajax line col edefaultget line col actionsauthenticate line col send line col anonymous function line col sprototyperun line col l line col mregisteredactions r handler line col anonymous function line col", "num": "10622", "d": "3/2015"}, {"title": "beforemodel transitions order mixin used calls super without returning promise", "body": "noticed one production projects today little difficult track essentially noticed ajax calls firing order seems happen mixing multiple things override last mixin simply call must check see promise resolve jsbin replicate javascript appdelaymixin embermixincreate beforemodel function thissuper emberloggerlog start beforemodel return new emberrsvppromise function resolve reject settimeout function emberloggerlog resolve beforemodel resolve apppromisemixin embermixincreate beforemodel function emberloggerlog promise thissuper var promise new emberrsvppromise function resolve reject resolve appindexroute emberrouteextend appdelaymixin apppromisemixin model function emberloggerlog start model return red yellow blue swap works properly however nt expecting jsbin javascript appsuperpromisemixin embermixincreate beforemodel function emberloggerlog array var superpromise thissuper var promise new emberrsvppromise function resolve reject resolve brings another thought though think turning events nt make sure super called right way way currently could party library case change order operations regular application code", "num": "10621", "d": "3/2015"}, {"title": "input helper expand bound handlebars subexpressions", "body": "given helper concatenates strings following template ought render provided resolves helper invoked static strings input renders expected reproduction", "num": "10620", "d": "3/2015"}, {"title": "container deprecate camelcasedunderscored lookups", "body": "prefer dasherized talked ember data meeting making things loosy goosey place makes things confusing end wasting time trying debug things used wrong format model controller etc", "num": "10619", "d": "3/2015"}, {"title": "approuterrouter null", "body": "title says update nothing change log bug different way get router instance", "num": "10618", "d": "3/2015"}, {"title": "disconnectoutlet nt disconnet nested templates", "body": "doenst know version behavior changed ember click open layer gt open next layer gt close gt nothing happens error script error line click open layer gt close gt layer closed currently works close second layer bug change behavior", "num": "10617", "d": "3/2015"}, {"title": "use symbols route path", "body": "possible use combine another separator instead like", "num": "10614", "d": "3/2015"}, {"title": "outlet specified found", "body": "upgrading ran following issue router rendering templates hook property used default parent template following used work throws exception error goes away add property render calls property seems render function nt default property property specified", "num": "10611", "d": "3/2015"}, {"title": "assertion defining injected controller property noncontroller allowed fails objectcontrollers", "body": "seem unable use", "num": "10610", "d": "3/2015"}, {"title": "deep computedalias null property breaks query params", "body": "route whose controller something like prevent route loading successfully error error processing route index property set failed object path bar could found destroyed error property set failed object path bar could found destroyed example controller code jsbin", "num": "10608", "d": "3/2015"}, {"title": "reserved ember", "body": "upgraded app ember ember app kit ember embercli saw following behaviour breaks application prior ember working code testhbs value expected ember ember change param name something everything working like intended behaviour see jsbin", "num": "10607", "d": "3/2015"}, {"title": "regression disconnectoutlet ca nt reach across routes", "body": "disconnecting outlet used work even sub route element nt get removed dom modal nt get removed ember modal gets removed ember seems started change", "num": "10606", "d": "3/2015"}, {"title": "emberinjectcontroller nt work objectarray controllers", "body": "understand controllers going anyway soon think weird nt work objectarray controllers jsbin think either work expected update assertion message explicitly mention injection work basic controllers would happy work pr either", "num": "10605", "d": "3/2015"}, {"title": "amp fail input type search", "body": "issue using input helper setting type search results error metamorph code expected fallback normal input element possible failing test need add", "num": "10603", "d": "3/2015"}, {"title": "regression render helper targetable render", "body": "possible regression jsbin works release running issue function explicitly pass optional parameter", "num": "10602", "d": "3/2015"}, {"title": "morph null attrnode moving one containerview another containerview", "body": "got minimal jsbin reproduction issue run click load container dynamically create two new containerviews inside main container dummy child view get render show click move container move first generated containerview second containerview child ember tries render new dom crashes attrnodemorph null error console read setcontent null occurs previous value attribute written back attrnode value morph null", "num": "10601", "d": "3/2015"}, {"title": "library app already registered ember", "body": "issue library app already registered ember running tests running tests using embercli first test works second gives issue looks like teardown aftereach work import em ember import test emberqunit import startapp helpersstartapp var app module integration tests setup function app startapp visit teardown function emrun app appdestroy test post comment function assert", "num": "10600", "d": "3/2015"}, {"title": "ember beta input placeholder undefined", "body": "binding input placeholder property undefined value render placeholder string undefined work occurring betas tested", "num": "10595", "d": "3/2015"}, {"title": "ember cli addon upgrade fragment pushed buffer contains content", "body": "upgrading addon error shown problem related branch reproduced addon provides component used like call stack looks like coreview viewhelper helper appendchild createchildview childviewmorph bufferpushchildview emberhtmlbarstemplate render var domcreatemorphat contextualelement inline env context bsdatetimepicker date get env context return fragment", "num": "10594", "d": "3/2015"}, {"title": "create use embercontainer unit tests ember", "body": "unit tests show deprecation something like proceed going forward tests like", "num": "10593", "d": "3/2015"}, {"title": "move loglibraryversions initializer", "body": "would helpful show app version library version logger displayed app boots development done application init loblibraryversions function embercliappversion uses initializer register app version make available ember inspector info tab executed via initializer would possible use initializer property register app version called original request prompted lukemelia suggestion add initializer put together pr", "num": "10591", "d": "3/2015"}, {"title": "ember fails prototype extensions turn", "body": "see jsbin pretty selfexplanatory", "num": "10590", "d": "3/2015"}, {"title": "errorstack behaves differently", "body": "jsbin jsbin first shows errorstack second errorstack undefined probably difference handlebars htmlbars", "num": "10589", "d": "3/2015"}, {"title": "avoid deprecation using rsvphash route ember", "body": "simple route returns model codes like template use codes like boot app told use modelcodes instead codes deprecated use rsvphash ton like looking guidance avoid deprecation warning ember thank advance", "num": "10587", "d": "3/2015"}, {"title": "contentindex updated item removed arraycontroller ember", "body": "jsbin remove middle item array controller clicking rm button notice last item keeps original contentindex instead getting updated like ember expected behavior index get updated items addedremoved", "num": "10586", "d": "3/2015"}, {"title": "documentation example tests broken", "body": "example test helper jsbin broken nt pass tests", "num": "10581", "d": "3/2015"}, {"title": "testing assert two sequential promisesrunlaters skip waiting tests", "body": "hi asked stackoverflow first bounty expiring thus posting component button changes state state determines html classes text icon initially button state clicked goes state launches action action resolves promise button changes state launches cooldown timer timer triggers button returns state code js appfoobarcomponent embercomponentextend tagname button status ready revertstatusperiodms click function thisset status pending run function imitating timeconsuming ajax request return new emberrsvppromise function resolve emberrunlater function resolve updatestatus function statustext thisset status statustext code works fine unable test attempt js test clicking button set label function assert expect visit assertequal find button text trim ready initially ready andthen function click button assertequal find button text trim pending pending right click one fires late andthen function assertequal find button text trim finished become finished promise fulfills andthen function assertequal find button text trim ready eventually return ready state two problems unable test finished state seems waits promises finish want test intermediate state run assertion two sequential promisess times long tests take forever complete generally nt mind refactoring code better testability even agree include commands code detected tests refuse adjust times app based environment e g ms devprod ms test instead would prefer stub timer solution tried sinon failed mock timer never returns neither solutions helped jsbin sinon included", "num": "10580", "d": "3/2015"}, {"title": "async testing helper selectors resolve async actions resolve", "body": "previously reported emberqunit repository informed actually belongs recap issue async testing helpers wait routerbased run loop async actions resolve freely resolve actiontriggered async actions think behavior strange incorrect think async test helpers wait entire run queue empty resolving example wrote original post button reveals another button let say something like tests say get error found however wrap second helper works edit seemingly often works longer consider solution implies selectors resolved immediately actions resolved asynchronously seems wrong would expect selectors resolve part async action selector nt revealed yet long async helper would reveal reading right deliberate behavior would argue wrong", "num": "10578", "d": "3/2015"}, {"title": "query params nt work also used", "body": "currently working ember noticed query param option nt work option new history entry added assume due fact route hook refreshed expected bug jsbin showing issue commented works", "num": "10577", "d": "3/2015"}, {"title": "confusion childviews nested components", "body": "may bug also may misunderstanding array works views case using incorrectly like add documentation possible turned major time suck display issue jsbin works click item start editing parent component property called watches works great loop parent component template b snippet appears loop one line change failing version second version snippet loop isanyediting update actually blank upon check log two demos verify supposed content component uses loop seems unlikely found documentation gotcha", "num": "10573", "d": "3/2015"}, {"title": "sync routerjs", "body": "fixed devergo stuff likely also date", "num": "10571", "d": "3/2015"}, {"title": "input keypress action sending event object", "body": "send event object action named however sending current value keypress jsbin extend embertextfield works expected componentsgoodinputjs import ember ember export default embertextfieldextend keypress function e e event work yeah", "num": "10569", "d": "3/2015"}, {"title": "use proxymixin guide suggests", "body": "bug", "num": "10567", "d": "3/2015"}, {"title": "add browser support list", "body": "reviewing project page ember site nt know browsers latest stable version supports please list browsers one places says ember supports xp soon wo nt true according", "num": "10566", "d": "3/2015"}, {"title": "empty breaks rendering", "body": "accidentally block without condition prevented entire page rendered intentional may useful least log error", "num": "10565", "d": "3/2015"}, {"title": "possible share query params sibling routes", "body": "use case need shared time controls sibling routes structured like figured best way property controller query params child controllers reference query param like javascript reports controller time b controllers queryparams controllersreportstime time use query params model hook fetch specific ranges data works well page refresh always get default value controller regardless url transitioning routes works well issues realize problem probably something name query parameter direct look controller established design pattern sharing query params sibling routes unsupported use case ps one big wins get child controllers query params opposed controller sibling routes automatically call model hook time controls update nt set observers", "num": "10563", "d": "3/2015"}, {"title": "query parameters break manually rendered route", "body": "using specifying controller query parameters defined object array attempt manually entering query parameters address bar route fails never get route controller sure intended behavior documented quick jsbin show issue", "num": "10562", "d": "3/2015"}, {"title": "customevents handlers receive first argument", "body": "using customevents event argument passed handler others suppressed using integrate typeaheadjs component hard get rid jquery spaguetti code", "num": "10561", "d": "3/2015"}, {"title": "need new base jsfiddle", "body": "handlebars gone default little harder set repro step emberjs could someone sophisticated put placeholder jsfiddle config rest us copy file repro examples thanks", "num": "10560", "d": "3/2015"}, {"title": "action handler nt work svg safari", "body": "nt feel like isolated cause entirely hoping folks sort issue reproducible safari mobile safari guessing nt touch event problem adding action svg element cause fired clicked even desktop safari tried adding action tag tag none worked sure related tried replace action straight anchor discovered safari interprets svg spec pretty literally regarding href attribute rather xlink href attribute safari tag inside svg element nothing anchor clicked navigation occur firefox chrome need make happy except safari action still never fires instead browser navigates href notes cursor pointer workaround nt change behavior someone came jsfiddle different svg related problem fiddle works expected safari mobile safari", "num": "10559", "d": "3/2015"}, {"title": "valuebinding object causes http request undefined", "body": "got controller like import ember ember export default emberarraycontrollerextend currenttrack templatefile like reason causes ember send httprequest nt happen currenttrack string nt happen using currenttrack string prevent still us currenttrack object normally attributes left sake simplicity", "num": "10558", "d": "3/2015"}, {"title": "linkview active class always applied retried transitions", "body": "spotted odd issue login workflow new app started working last week user completed login process navigation link route came back active class applied reproduced issue jsbin see behavior click secret link log link appears route active class transition subsequently resumed click back index revisit secret route class applied correctly interestingly model hook retried transition returns promise resolved immediately issue occur reproduced canary see put together failing test", "num": "10557", "d": "3/2015"}, {"title": "observes working using pushobject observes working using set", "body": "", "num": "10555", "d": "3/2015"}, {"body": "change seems odd likely result boot process changes seem like intentional change demos", "d": "3/2015"}, {"body": "using quoted value results pass helper method makes final value following works without deprecation html demo", "d": "3/2015"}, {"body": "initialized application boots determine whether use historylocation hashlocation example", "d": "3/2015"}, {"body": "totally poweruser territory extremely careful using strongly instead recommend using injections although may require restructuringthinking problem result resilient code", "d": "3/2015"}, {"body": "believe duplicate issue regarding check us", "d": "3/2015"}, {"body": "seen issues related nt find anything exactly issues seemed related going", "d": "3/2015"}, {"body": "believe recreated issue couple jsbins ember ember", "d": "3/2015"}, {"body": "think intentional likely core functionality things moved mixins cycle add proper yuidoc decorators indicate mixins included simple adding comments docs", "d": "3/2015"}, {"body": "yuidoc decorators special syntaxconstruct used yuidoc mean needed placeholders document properties like", "d": "3/2015"}, {"body": "givanse something like", "d": "3/2015"}, {"body": "please share minimal reproduction case via", "d": "3/2015"}, {"body": "simple example failed replicate problem suggesting problem different initially thought try reproduce soon", "d": "3/2015"}, {"body": "dist committed repo included built gem", "d": "3/2015"}, {"body": "think need mixonic review chime", "d": "3/2015"}, {"body": "low hanging fruit wanted document ab using htmlbars", "d": "3/2015"}, {"body": "jayphelps actually surprised works assumption would act propfirst also create executable listener plan implement pattern would something like point action general expect devs use actions write javascript code htmlbars templates definitely inclined add support since would xss vulnerability", "d": "3/2015"}, {"body": "mixonic agreed potential xss vulnerability primarily discussing consistency expected behavior rather best practice perhaps specific case stuffing string assert unsupported unless used least htmlbarslevel basically comply expected behavior make strict assumptions ember", "d": "3/2015"}, {"body": "double curlies much work let raise case ok supporting triple curlies", "d": "3/2015"}, {"body": "mixonic nt lose cycles since obviously good idea ember devs almost every case noting posterity", "d": "3/2015"}, {"body": "use case app", "d": "3/2015"}, {"body": "needs requested upstream", "d": "3/2015"}, {"body": "subexpression defined ember codebase sure issue handlebars repo", "d": "3/2015"}, {"body": "yes handlebars parser needs support literals", "d": "3/2015"}, {"body": "mean time probably awkwardly define subexpressions", "d": "3/2015"}, {"body": "thank idea workaround much better jsbin action", "d": "3/2015"}, {"body": "pretty positive use adblocker try disabling load page worked chrome private mode ad blocking disabled idea blocked see css rule", "d": "3/2015"}, {"body": "yep hmm good sign newbie trying struggle learn ember tutorial adblocked main gt leads look like something would adblocked though", "d": "3/2015"}, {"body": "suggested structure tutorial perhaps could reach vic let know", "d": "3/2015"}, {"body": "oh boy nt think smiley thanks mixonic clarification", "d": "3/2015"}, {"body": "ugh sorry thank tracking get republished soon back computer", "d": "3/2015"}, {"body": "let know changed code works would better used first place still think regression nt happened", "d": "3/2015"}, {"body": "hey actions triggered currently active routes regardless controller triggered think issue calling action hook case seems route considered current yet start catching actions define action parent route application route action caught delay sending action next run loop action caught index route see sure bug intentional", "d": "3/2015"}, {"body": "ah see thanks teddy thought must possible observer triggered therefore assumed also already set hmm", "d": "3/2015"}, {"body": "regardless bugintentional controllers going away unlikely behavior change remaining releases june", "d": "3/2015"}, {"body": "possible gem packed incorrectly sha one tagged thinking perhaps built embersource gem tagged repo try confirm bit unless look embersource gem compare versions emberdebugjs embertemplatecompilerjs", "d": "3/2015"}, {"body": "hmm everything dist looks like right version string assets downloaded appends sha release version string generated", "d": "3/2015"}, {"body": "fyi able work around modifying vendored assets hand looks error build process", "d": "3/2015"}, {"body": "maybe downloading template compiler either way seems like issue emberrails would mind opening issue", "d": "3/2015"}, {"body": "checked seems embertemplatecompiler fact included whatever generating builds live appending sha end version string build files get generated", "d": "3/2015"}, {"body": "think extra colon attribute bindings attributebindings name type value checked checked disabled required works fine", "d": "3/2015"}, {"body": "kuzirashi sounds like regression simple reproduction emberjsjsbincom would helpful thanks", "d": "3/2015"}, {"body": "mixonic ok actually present stable mean earlier fault ember working fine ember bad gratis ember templatename specified view working fine also inside template rendered remove inside template seems like inside broken nt matter view template specified playlisthbs probably using components somewhat old code work edit started refactor musicplayer component playlisthbs works fine", "d": "3/2015"}, {"body": "think hit thing moving stable leveraging render helper switch component soon enough chrome canary better error", "d": "3/2015"}, {"body": "demos recreate hemp issue nested working ember nested working ember", "d": "3/2015"}, {"body": "problems", "d": "3/2015"}, {"body": "problem work around explicitly setting templatename view", "d": "3/2015"}, {"body": "also running issue like manufaktor finding explicitly specify etc appropriate longer issues", "d": "3/2015"}, {"body": "also bitten bug upgrade ember ember", "d": "3/2015"}, {"body": "confirmed broken unless templatename explicitly defined view works", "d": "3/2015"}, {"body": "issue", "d": "3/2015"}, {"body": "looks related addressed", "d": "3/2015"}, {"body": "thanks rwjblue expected behavior always define view change past behavior would automatically grab template based name view", "d": "3/2015"}, {"body": "davidpett yes questioning change made seems regression though solve issue try dig tonighttomorrow morning try fix issue break use case", "d": "3/2015"}, {"body": "rwjblue also seeing errors even defined view defined function", "d": "3/2015"}, {"body": "thanks rwjblue", "d": "3/2015"}, {"body": "rwjblue example error described previous comment", "d": "3/2015"}, {"body": "app totally broken already started using new component helper awesome btw chance patch release", "d": "3/2015"}, {"body": "far tell breaks trying find top level outlet nt stop finds adding undefined check seems fix function impersonateanoutlet currentview view name might hack method comment megahax make outlets inside render helper work kill behavior probably cant worse", "d": "3/2015"}, {"body": "adriaaaaan bug fix appear next point release fix lands master train train train please use previous release using", "d": "3/2015"}, {"body": "problem", "d": "3/2015"}, {"body": "objects mixin embercomparable class override compare method custom serialization object returns object unfamiliar semantics comparing objects doubt useful address something specific", "d": "3/2015"}, {"body": "nevermind seen plenty cases makes sense manually write order avoid loop necessary", "d": "3/2015"}, {"body": "seems odd since ember usually autogenerates things also odd using instead", "d": "3/2015"}, {"body": "looking comes line exploring found issue another required define path well regardless based jsbin comment rwjblue appears used work without defined route change nt appear designed", "d": "3/2015"}, {"body": "maybe looks like following would fix issue obviously good thing interesting nt insert within application template outlet ca nt tell intentional", "d": "3/2015"}, {"body": "think intro description wrong attribute added added jsbin jsbin", "d": "3/2015"}, {"body": "basically happening boolean attribute falsey value set something empty string false work properly", "d": "3/2015"}, {"body": "thank helped solve problem fixed description", "d": "3/2015"}, {"body": "going keep open give mixonic chance review may regression fix unsure", "d": "3/2015"}, {"body": "ok", "d": "3/2015"}, {"body": "discussion decided edgecase boolean properties likely low usage htmlbars templates look like html reality different beast specifically attributes simply set instead use prop first logic described bound properties blog post aim bound properties literal quoted values behave consistently blank string via behaves inconsistent see developers run may patch behavior deprecation first report closing revisit becomes wider problem thanks listepo", "d": "3/2015"}, {"body": "unsure shooting link embercli locally work ember error caused using newer node duplicate getting fixed tracked", "d": "3/2015"}, {"body": "looking work latest version cli amp latest version ember linked locally inside project git pull update use latest version project anyway thanks time", "d": "3/2015"}, {"body": "problem gist generally point folks using latest builds ember embercli project maybe help", "d": "3/2015"}, {"body": "smile trying follow aware node requirement thank amp keep good work", "d": "3/2015"}, {"body": "sorry disregard upgrading emberqunit fixed issue", "d": "3/2015"}, {"body": "wait maybe recent changes specifically nt see deprecation warnings app breaks", "d": "3/2015"}, {"body": "ianvs might help", "d": "3/2015"}, {"body": "addon actually overriding custom function generally good idea fact working due large refactor completely private container lookup system addon need accommodate changes believe ember bug reproduce without overriding private internal methods use jsbin baseline absolutely get fixed", "d": "3/2015"}, {"body": "rwjblue ok thanks expert figured report case indeed bug appreciate taking look", "d": "3/2015"}, {"body": "removed", "d": "3/2015"}, {"body": "used", "d": "3/2015"}, {"body": "someone flesh rfc", "d": "3/2015"}, {"body": "ember inspector uses breaking change update support new format beforewhen commit change inspector would also benefit since currently parsing value", "d": "3/2015"}, {"body": "also favor need done behind feature flag help us ensure tooling ready go think needs rfc since still considered private api underscored already", "d": "3/2015"}, {"body": "private used ed", "d": "3/2015"}, {"body": "know property internal handy leverage two items app work tracking user actions analytic events route controller component injected service turns really good category google analytics events also reopen emberactionhandler add record analytic event logging client side errorswarns something like logstashsumologic via api call logging mixin provides container leveraged also decorated logdebugwarnerror methods assume general value container key cases extra data hash might useful", "d": "3/2015"}, {"body": "pretty annoying also css column count property might good solution event believe close issue open one repo", "d": "3/2015"}, {"body": "created issue website project", "d": "3/2015"}, {"body": "possible provide repro demo maybe embercli app issue", "d": "3/2015"}, {"body": "trentmwillis issues well think core issue helper nt handle gracefully", "d": "3/2015"}, {"body": "related unsure move pr forward", "d": "3/2015"}, {"body": "got reproduction working seems initial assumption wrong actual usage like issue appears nested model properties reproduced repo fixture data", "d": "3/2015"}, {"body": "update applying solution given nt fix anything track failing boundcomponentview since nt quite understand streams read hoping accomplish sure offer fix note changing line fixes problem nt think correct solution", "d": "3/2015"}, {"body": "digging ca nt seem reproduce without using ember data models thinking probably open instead", "d": "3/2015"}, {"body": "believe appropriate repo issue", "d": "3/2015"}, {"body": "ah bother nt realize split want refile aware way migrate issues github", "d": "3/2015"}, {"body": "ah bother nt realize split want refile aware way migrate issues github refile unfortunately best option", "d": "3/2015"}, {"body": "done closing misfiled", "d": "3/2015"}, {"body": "process route index promise undefined would indicate nt somewhere", "d": "3/2015"}, {"body": "stefanpenner thank issue actually ie nt reload files appropriately", "d": "3/2015"}, {"body": "need revert usage destructuring spread fix build", "d": "3/2015"}, {"body": "danmcclain mentioned might time could take look", "d": "3/2015"}, {"body": "rwjblue dig", "d": "3/2015"}, {"body": "tracked ticket fixing babel similar issue using spread project", "d": "3/2015"}, {"body": "et nt know consider bug initially reported though issue somewhat morphed goal", "d": "3/2015"}, {"body": "pretty easy polyfill", "d": "3/2015"}, {"body": "wycats yes could polyfill considered imho framework mutating platform classesobjects", "d": "3/2015"}, {"body": "next major babel use instead rwjblue nothing related reported babelbabel", "d": "3/2015"}, {"body": "arr amp amp arrconstructor array believe nt cross realm safe although likely happens rarely", "d": "3/2015"}, {"body": "stefanpenner good point", "d": "3/2015"}, {"body": "ok next babel major enable loose mode transformers assume values arrays ignore iterables helpers wont used direct references instead ie becomes enough cover usecase", "d": "3/2015"}, {"body": "sebmck also informed available babel experimental minutes ago", "d": "3/2015"}, {"body": "sebmck thank understanding chatting stef opened issue point essentially issue reported sorry confusion", "d": "3/2015"}, {"body": "think nt worry polyfilling stuff like browser vendors think add api without breaking web certainly safe ember standard compliant enforcing principle extensions native objects extent benefits", "d": "3/2015"}, {"body": "also context issue occurs well updated example compatible simply ignore cp use autogenerated id", "d": "3/2015"}, {"body": "seems like may duplicate fixed confirmdeny", "d": "3/2015"}, {"body": "nt think one fixes also tested betacanary first jsbin rwjblue weird behavior also explicitly pass id vs set elementid component really trying achieve id set using cp though", "d": "3/2015"}, {"body": "seeing ever supported could wrong assume calling return plain string many many places believe nt bugregression simply something support favor documenting explicitly api docs around following jsbin shows way get dynamic value", "d": "3/2015"}, {"body": "closing think last comment addresses things show worked would make regression happy reopen", "d": "3/2015"}, {"body": "latest version problem already solved", "d": "3/2015"}, {"body": "johnathansantos quite sure think saying good close feel free reopen missed something", "d": "3/2015"}, {"body": "foreach add iterator support ember planned quite ready yet", "d": "3/2015"}, {"body": "ok thanks iterator support sounds good", "d": "3/2015"}, {"body": "opsb ya hopefully get soon", "d": "3/2015"}, {"body": "going close iterator support come eventually question bug report", "d": "3/2015"}, {"body": "getting familiar part code base interested trying reproduce issue obviously getting jsbin simple project reproduces issue would best anything else could share help", "d": "3/2015"}, {"body": "chainnodeprototypeunchain seems get called time every transition method gets node chain key tries unchain destroy chain key reference sorts properties native ember well properties projects implementation code project noncli app using grunt apistub upgraded ember amp htmlbars used book hotel reservations issue occurs filling guest info transitioning confirmation screen going back refresh go back works ok took closer look problem key undefined node always hotelreservations seems hotelreservations normally property needing processed way nt see console transitioning around somehow winds scope going back confirmation causes problems actually json object provided apistub routesjs used test reservation views nt know winds unchain process chains object case type contentchainnode modelchainnode matters difficult see pattern processing nodes chain key chains parent chainnodes seems little like linkednode every node reference nodes seems like way gets node chain key might recursively go child nodes finds case hotelreservations nt", "d": "3/2015"}, {"body": "hoping code could share otherwise pretty hard reproduce however saw mention hotelreservations property begin property capital letter key treated global object special behavior might able work around issue renaming property hotelreservations case definitely experiencing bug", "d": "3/2015"}, {"body": "context inside helpers changed various versions controller view helper context consistent number versions considered public api intentional change preparation htmlbars glimmer work", "d": "3/2015"}, {"body": "work around listed worked versions correct way go sorry caused troubles", "d": "3/2015"}, {"body": "rwjblue thanks explanation going close", "d": "3/2015"}, {"body": "sorry caused troubles worries nt huge deal good know nt considered public api", "d": "3/2015"}, {"body": "trying update app ember noted workaround suggested drogus nt seem work handlebars helper coffeescript comes", "d": "3/2015"}, {"body": "perlun always last argument case providing helper would need accept correct signature callback", "d": "3/2015"}, {"body": "ah see seems changed bit since coming try advice see get working right assuming way helper able access viewcontroller used done design used possible one clearly argue whether good", "d": "3/2015"}, {"body": "seems changed bit since nope way build helpers changed since context signature structure right assuming way helper able access viewcontroller used view used need controller", "d": "3/2015"}, {"body": "rwjblue thanks works fine smile could elaborate bit undefined statement forum discussion pr similar describes background bit detail example helper used component would one access component", "d": "3/2015"}, {"body": "jokery using attribute elementin actions use dasherized code use camelcased", "d": "3/2015"}, {"body": "appears issue beta correct", "d": "3/2015"}, {"body": "may related work", "d": "3/2015"}, {"body": "error message kinda silly case issue specified template name twice removing duplicate template fixes issue demo working version", "d": "3/2015"}, {"body": "far tell related changes fallout htmlbars appear unintended semantic change fix possible presumably render helper nt set template view class line normal outletdriven renders happen view class use let manage template otherwise use default view class set template", "d": "3/2015"}, {"body": "whole section needs reworked remove usage completely reopen issue", "d": "3/2015"}, {"body": "rwjblue created new issue", "d": "3/2015"}, {"body": "awesome thank", "d": "3/2015"}, {"body": "robertolicious ember views tags default first snippet pushing adding tag via permitted browsers html instead make view another permitted parent tag", "d": "3/2015"}, {"body": "thank exactly looking never found use case", "d": "3/2015"}, {"body": "click helper works many users additionally jquery certainly works least embercli absolutely included phantomjs test runs please see documentation question may better suited discuss stack overflow outline problem detail bug report reading things wrong would need know version ember working error bad behavior example complete test misbehaves also suggest looking blog post async test helpers feel free reopen issue missed something", "d": "3/2015"}, {"body": "mixonic jquery work phantomjs tells click function jquery included let use jquery click posted stack overflow one ember community responds unless configured something wrong appear bug check code run tests", "d": "3/2015"}, {"body": "mixonic post stack overflow update full test using ember helpers posted throws errors clicks appear nothing clicks work jquery either jquery click needs defined phantomjs ember click helper needs actually click things", "d": "3/2015"}, {"body": "mixonic issue use dispatchevent might nice include ember test helpers", "d": "3/2015"}, {"body": "sorry accidentally posted original question wrong place moved answer question never leaving route transition happening parent button create supposed transition child outlet clicked active route", "d": "3/2015"}, {"body": "mgenev syntax shipped debated rather extensively design feel free dig around discussion better understand motivations really good reads question might better stackoverflow irc though block params yielded nested scope layout layout component called improve docs repo place discussion thanks", "d": "3/2015"}, {"body": "thanks place report confusing incomplete docs ember", "d": "3/2015"}, {"body": "mgenev changes api docs prs repo changes guides website prs", "d": "3/2015"}, {"body": "mixonic actually justification rfc linked confusing syntax actually called confusing exact reasons citing never countered much clear example offered good extra attriubtes preceding blog example names fullname name differing order mattering else would match mentioned makes really confusing also fact confusing unreadable syntax shipped mean ca nt fixed bugs ship get fixed time", "d": "3/2015"}, {"body": "mgenev extensive good bikeshedding topic following decision made core team members implemented feature small number days shipping stable release syntax think appropriate point observe wild complaining particular juncture likely unproductive", "d": "3/2015"}, {"body": "moved embercli request trabus closing", "d": "3/2015"}, {"body": "actually seems fixed updating latest git version", "d": "3/2015"}, {"body": "sorry post issue wrong place ready move", "d": "3/2015"}, {"body": "context inside helpers changed various versions controller view guess context change causing error updating helper add controller fix issue", "d": "3/2015"}, {"body": "thanks information fact set context manually call needcontext params force setup need context understand message chenges nt vary behavior code inside helper function nt use call unknownproperty called whatever permission object permission property", "d": "3/2015"}, {"body": "internal bind method passed right context ember work simplestream instance var view dataview possible talk ca nt guess logic manipulation give proposal bound object current scope early possible thanks", "d": "3/2015"}, {"body": "current solution problem define unknownproperty contains logic find permission return value early work php ant magic method get hope find better way solve", "d": "3/2015"}, {"body": "lets wait see actually ember bug", "d": "3/2015"}, {"body": "landed back subsequently reverted issues helpers needed support dasherized camel cased properties different values example used action actual function called blur", "d": "3/2015"}, {"body": "definitely favor fixing flag issue conversation rest team", "d": "3/2015"}, {"body": "uhm nt deprecated components", "d": "3/2015"}, {"body": "kajafon version use seems working ember lolmaus components use layoutname wo deprecations ember know waswill deprecated", "d": "3/2015"}, {"body": "specifying component tag contain phrasing content take look jsbin plain html showing browser correcting invalid markup create extra elements", "d": "3/2015"}, {"body": "rwjblue thanks really surprising would never expected", "d": "3/2015"}, {"body": "oh html crazy", "d": "3/2015"}, {"body": "orkon heard somewhere issue queue tried google failed official deprecation page mention found understand correctly case opposite deprecated favor components please correct wrong", "d": "3/2015"}, {"body": "experience issue well seems fixed canary already", "d": "3/2015"}, {"body": "confirmed looking beta fails canary nt stall", "d": "3/2015"}, {"body": "fixes hanging test fixed master pulling commit beta marking closed", "d": "3/2015"}, {"body": "rwjblue thank", "d": "3/2015"}, {"body": "problem talked rwjblue irc said fixed latest builds continue see", "d": "3/2015"}, {"body": "jsbin replicating issue certainly save time trying replicate problem", "d": "3/2015"}, {"body": "unfortunately ugly hack wrap img tags blocks", "d": "3/2015"}, {"body": "one question already issue open nuke issue", "d": "3/2015"}, {"body": "nope issue", "d": "3/2015"}, {"body": "fixed", "d": "3/2015"}, {"body": "rwjblue plans release", "d": "3/2015"}, {"body": "awesome sure test", "d": "3/2015"}, {"body": "quaertym unlikely day", "d": "3/2015"}, {"body": "rwjblue failing test indicating nt solve working fix", "d": "3/2015"}, {"body": "dgeb sounds good keep eye", "d": "3/2015"}, {"body": "ca nt use node gt building repo issue embarjsbuild tracked", "d": "3/2015"}, {"body": "making progress upgrading deps upgrade ember fixing tooling issues go", "d": "3/2015"}, {"body": "sounds like ember data issue open instead sorry trouble", "d": "3/2015"}, {"body": "done", "d": "3/2015"}, {"body": "may want open issue", "d": "3/2015"}, {"body": "btecu correct open issue ember data repo instead", "d": "3/2015"}, {"body": "ok sorry", "d": "3/2015"}, {"body": "worries", "d": "3/2015"}, {"body": "jsbin might helpful makes distinction outer nested links underline inner nested links underlined see always click outer nested links correct behavior observed edit linked bin", "d": "3/2015"}, {"body": "duplicate", "d": "3/2015"}, {"body": "closing dupe", "d": "3/2015"}, {"body": "alternative solution", "d": "3/2015"}, {"body": "probably duplicate one closed irrelevant proposed solution", "d": "3/2015"}, {"body": "lolmaus workaround would great worked", "d": "3/2015"}, {"body": "really feels like work perhaps intentional seems weird probably called explicitly docs nt work", "d": "3/2015"}, {"body": "orkon thank suggestion like author question noted workaround smells boilerplate code believe addressed", "d": "3/2015"}, {"body": "grapho discovered works normally computed properties normal properties affected", "d": "3/2015"}, {"body": "appears nothing component consumes cp observers attempt merely observe state world force materialize working example", "d": "3/2015"}, {"body": "stefanpenner consumed component template", "d": "3/2015"}, {"body": "alexspeller hmm example consumes explicitly via get works suspect something funky template stream consumes mmun thoughts", "d": "3/2015"}, {"body": "stefanpenner even weirder original example property explicitly consumed via work case", "d": "3/2015"}, {"body": "comment removed due confusing issue", "d": "3/2015"}, {"body": "stefanpenner difference use computed property using noncomputed property causes example fail", "d": "3/2015"}, {"body": "exactly issue scare quotes misuse object system resolved new data model tl dr call property object existing value observers fired code also similar ways observers skip fired involving chain nodes etc sequence events hope helps debug future helper call executes foobar component created stream binding component begins initializing stream bindings connected stream binding calls note nt trigger observers objects never fire observers init phase set observers side sync value back forth component controller component finished initializing stream binding value context controller component finished instantiating called observers controller fire observer controller fires stream binding observer fires binding schedules sync queue omit details since relevant stream binding calls value nt changed observers component notified per tl dr", "d": "3/2015"}, {"body": "thanks much mmun detailed explanation really bug seems weird notifies changes property circumstances others works controller component bound unless computed property still would call bug whilst understanding implementation helps make sense seems inconsistent behaviour", "d": "3/2015"}, {"body": "mmun alexspeller understand right method works completely correct problem value myproperty actually change check propagate component right way deal update value using seems way case call really needed btw seems works computed properties computes properties return new object time work object returned computed property", "d": "3/2015"}, {"body": "really weird computed property cached return object previous example", "d": "3/2015"}, {"body": "alexspeller jsbin types comp properties yeah thought bug", "d": "3/2015"}, {"body": "oh explains causes computed property actually recalculate notifying observers changed actually updating property much implied docs", "d": "3/2015"}, {"body": "alexspeller controller working correctly firing observer controller well observer triggers binding synchronize bindings composed two parts path path case path points property controller path property component binding created observer added paths called controller triggers observer schedules synchronization binding run loop sync queue synchronization means call side value side precisely issue lies call becomes op value set previously case value always pojo", "d": "3/2015"}, {"body": "nt recompute anything specifically clears cache called key cp recursively calls cps depend key notifies observers listening key nt automatically get recomputed usually one notified observers end recompute value ideally recomputed asynchronously absorb churn", "d": "3/2015"}, {"body": "great makes sense look like bug make behave straightforward implementation something like objequals obj everything would needed guess personally hit issue months using emberjs think used workaround mentioned anyway maybe case needs emphasized ember guide", "d": "3/2015"}, {"body": "mmun adapted wording improve docs", "d": "3/2015"}, {"body": "made pull request add example uses model", "d": "3/2015"}, {"body": "also going put believe related", "d": "3/2015"}, {"body": "fix", "d": "3/2015"}, {"body": "solved thanks edward boat", "d": "3/2015"}, {"body": "also using emberjs beta plus embercli stable", "d": "3/2015"}, {"body": "trolling honestly took debugging passes realize fun puzzle thanks container closed overwriting results interesting unexpected interleavings instead keep separate use local remember poweruserprivate reference container even better nt put anything global make local module", "d": "3/2015"}, {"body": "wow detailed reply thank stef", "d": "3/2015"}, {"body": "problem explanation make sense", "d": "3/2015"}, {"body": "part nt yet understand shown assumption skip past mentioned final solution still source diving yet grok factory stuff", "d": "3/2015"}, {"body": "also curious emberinjectfactories overwriting overwriting keys emberinject api service controller unable find emberinjectfactories exposed source thanks quick answer original question", "d": "3/2015"}, {"body": "issues see technique mutating nonowned global bad ember could change way works future mutating good idea semantics monkeypatch rest factory validation class lookup time ensures missing collaborator errors call injected property example lookup find anything result computed property returns nothing found", "d": "3/2015"}, {"body": "implemented likely work fairly well imported userland addon code used inferred come ember open codebase months away remember coming new developer joins team realize nt ember feature try track api docsguides coming suggest something like following javascript apputilsinjectrepositiory import ember ember export default function name return embercomputed function propertyname var objectname name propertyname javascript import ember ember import injectrepository utilsinjectrepository var peopleroute emberrouteextend repository injectrepository person model function var repository thisget repository return repositoryfind", "d": "3/2015"}, {"body": "apputilsinjectrepositiory also lookup inject lacks construction time validation", "d": "3/2015"}, {"body": "rwjblue thanks insight see emberinjectxxxx factory validation would really like functionality curious emberinject api ever opened able add keysobjects injected one reasons liked monkey patch special import injection ember files would trying injection understand saying new developers confused first class emberinject api instead injection steer away emberinject rwjblue stefanpenner thank time", "d": "3/2015"}, {"body": "also curious emberinjectfactories overwriting overwriting keys emberinject api yet wink exactly point modify ember could completely breaking something could break app future revision global state mutation good", "d": "3/2015"}, {"body": "curious emberinject api ever opened able add keysobjects injected would like expose issued pull request shipped sure part api ready userland extension factory types one reasons liked monkey patch special import injection ember files would trying injection importing code wrote something avoid rather exactly thing embrace understand saying new developers confused first class emberinject api instead injection steer away emberinject saying using bad thing contrary think good feature saying though creating new different concept adding seem like ember feature confusing potentially cause problems future", "d": "3/2015"}, {"body": "rwjblue really excited emberinject api evolves especially exposed userland want clarify statement understand saying new developers confused first class emberinject api instead injection steer away emberinject reading response miscommunication part steer clear emberinject api stuff use function stefanpenner provided injection want fully embrace explore new emberinject api today future versions thank breaking part response answers", "d": "3/2015"}, {"body": "ahh gotcha see mean sorry miscommunication", "d": "3/2015"}, {"body": "found solution last live ok", "d": "3/2015"}, {"body": "hey think find setting extend rather solve problem keep template look something like proxy properties model like hope helps", "d": "3/2015"}, {"body": "sure fully follow throw together jsbin demonstrates use starting point need base jsbin", "d": "3/2015"}, {"body": "replicate issue remove value test textbox change zero first time remove zero replace zero instead go blank put new value keep repeating scenario agree issue test could submit replicates", "d": "3/2015"}, {"body": "calling another helper within helper really supported suggest changing setup tiny component would much future proof relies less internal privateish api demo", "d": "3/2015"}, {"body": "comment nt help please provide details preferably jsbin demonstrating issue happy reopen", "d": "3/2015"}, {"body": "party partner got us ember longer partner developed way amp apparently supported know everyone demoing things jsbin idea already rewritten dateinput component well happened blog says viewhelpers going away best things components seems figured much sat mar pm robert jackson notifications githubcom wrote comment nt help please provide details preferably jsbin demonstrating issue happy reopen reply email directly view github best regards bob van", "d": "3/2015"}, {"body": "changed version bit added outlets besides named outlets seem work better behaves strange navigating navigate away back eg thisandthat back see", "d": "3/2015"}, {"body": "added failing test see emberjsemberjs", "d": "3/2015"}, {"body": "issue may related", "d": "3/2015"}, {"body": "also believe related hijacking seems broken", "d": "3/2015"}, {"body": "duplicate", "d": "3/2015"}, {"body": "may browser bug", "d": "3/2015"}, {"body": "chrome firefox behavior", "d": "3/2015"}, {"body": "seeing issue reference many browser bug reports handle route work crude implementation", "d": "3/2015"}, {"body": "another workaround using component thoughts", "d": "3/2015"}, {"body": "duplicate though solution suggested work jsbin issue legit miguelmadero suggestions", "d": "3/2015"}, {"body": "issue apparently broader must something nt understand binding arrays different jsbin without service behaviour", "d": "3/2015"}, {"body": "ember observe call must use observable methods like docs working jsbins", "d": "3/2015"}, {"body": "bad thank", "d": "3/2015"}, {"body": "context helpers previously specified api changed number times throughout series initial htmlbars effort decided change helper context controller view around ember preparation implementing glimmer top htmlbars became clear could guarantee would always view instance change context chrism short context public api even though helpers relied upon change annoying sorry caused trouble necessary continued progress forward", "d": "3/2015"}, {"body": "rwjblue thanks always clear explanation issue reasons behind rolled back using ember fine amp means really able offer feedback beta testing version really excited glimmer fastboot many thanks hard work ember really incredible achievement", "d": "3/2015"}, {"body": "chrism issue got working pointing commit master", "d": "3/2015"}, {"body": "nevermind seems like ok organizational pain tons routes", "d": "3/2015"}, {"body": "changed mind using pods would like able following structure", "d": "3/2015"}, {"body": "timevans yes absolutely inclined believe resolver glitch investigate", "d": "3/2015"}, {"body": "stefanpenner thanks think nt handled think implementation named substates nt robust enough handle use case separate directories makes sense simplicity standpoint necessarily developer friendliness standpoint", "d": "3/2015"}, {"body": "correct path currently suppose could special case prevents anyone actual route seems fairly bad", "d": "3/2015"}, {"body": "actually disagree bad substates clientsloading means going add customization app explode number routes factor given level app around top level routes migrating ember builtin structures like make impossible figure rendered due difficulty finding file", "d": "3/2015"}, {"body": "ember removing termsnames use definitely good two ways make work prevent ambiguous would reserve route names absolutely backwards compatible many apps looked use global route named unrelated substate behavior perhaps could use instead think made framework level default series", "d": "3/2015"}, {"body": "rwjblue agree concerns making default series want make sure pain points naming scheme heard", "d": "3/2015"}, {"body": "perhaps could use instead make sense use since kinda follows existing naming schemes", "d": "3/2015"}, {"body": "work properly modules based resolvers due ambiguities resolver results check presence property resolver instance must make work globals scenario could set instantiating application something like definitely advised due conflicting paths globals resolver", "d": "3/2015"}, {"body": "illustrate problems encourage play removing configuration make named substates work specifically removing makes feature work", "d": "3/2015"}, {"body": "try take look demo app tonight", "d": "3/2015"}, {"body": "see problem template line breaks", "d": "3/2015"}, {"body": "canary build use located nt updated long time like midaugust last year removed theory could make sort redirect could used jsbin guides removed soonish update use embercli formatting guides", "d": "3/2015"}, {"body": "wrong timeline early november", "d": "3/2015"}, {"body": "hmm redirecting would good although misleading call latest would possible serve version ember prepended still worked nt used accidentally something regardless guides seems lot content removing breaks unfortunately", "d": "3/2015"}, {"body": "would possible serve version ember emberlatestjs prepended alert old version ember please update link still worked nt used accidentally something yes possible would problem eventually feel strongly add list things sure right path forward also canary jsbin older month ago already broken due missing ca nt really much fix highly likely jsbinsjsfiddle already broken making point right place alert ca nt fix", "d": "3/2015"}, {"body": "hmm guides rewrite guess old jsfiddles bins relatively minor especially broken nt massive complaints", "d": "3/2015"}, {"body": "questions better asked stackoverflow discourse likely stackoverflow much better venue issue tracker course exploring bug appears please feel free report back", "d": "3/2015"}, {"body": "actually trying run ember node window defined error rsvp read one forum resolved masters production help", "d": "3/2015"}, {"body": "nt seem like issue emberjs sounds like issues embercli please report issue please include os version npm version node version embercli version anything else might valuable", "d": "3/2015"}, {"body": "ah maybe trying build repo nt believe support windows builds yet project", "d": "3/2015"}, {"body": "suggested way handle scenario component purely view concern service asked given specific model returns bucket additional meta information especially information ephemeral", "d": "3/2015"}, {"body": "likely better ask stackoverflow nt forget link ideally provide one examples good suggestions made", "d": "3/2015"}, {"body": "reserved routeresource names object array basic application much better error message added beta released soonish error message says jsbin would prefer reserved words going close already much better messaging wise", "d": "3/2015"}, {"body": "see ok great thank rwjblue", "d": "3/2015"}, {"body": "reproduced going load ie windows using remote ie go click sign top right enter userpass bob error happen", "d": "3/2015"}, {"body": "site built using part makes narrowing tricky edit broc file like rebuild works great makes think eval something basically something variablefunction name munging breaks ie", "d": "3/2015"}, {"body": "get stack trace emberdebugjs", "d": "3/2015"}, {"body": "ideally isolate bug jsbin rule app code", "d": "3/2015"}, {"body": "oops realized nt happening minifyjs disabled seems bad", "d": "3/2015"}, {"body": "thanks quick response making jsbin would tough since using ember cli like noticed happens minified got everything checked private git let try stripping away bits see isolate issue identical version except minified", "d": "3/2015"}, {"body": "got minimal version site still stripping away much hopefully isolate error", "d": "3/2015"}, {"body": "code extremely stripped click button sign outin happens ie logging executes following code javascript var self token thisget token basic auth token thisset loading true ajaxhelperget apiaccountsauthenticate fmt token done function data textstatus response cookiehelperset email bob bobcom false cookiehelperset rememberme false true selfsend reloadaccount selftransitiontoroute index fail function response selfset loading false switch responsestatus case selfhandlefailure email password incorrect break default selfhandlefailure unknown error occurred processing request please try break reload account action picked application route triggers model function called example applicationhbs indexhbs using model could race condition sure full source basically bare bones ember cli project available", "d": "3/2015"}, {"body": "example familiar done emberrun blocks code need get fired run loop meant", "d": "3/2015"}, {"body": "necessary see using icajax", "d": "3/2015"}, {"body": "actually using simple wrapper wrote around ajax could issue", "d": "3/2015"}, {"body": "bsclifton sure related original issue code using runloop properly relies jquery promises runloop safe suggest guides runloop get make sure code correct ruled possible cause", "d": "3/2015"}, {"body": "awesome thanks heads smile lot learn javascript still cleaned ajax methods like replaced done always handlers tested seems make issue happen consistently latest version", "d": "3/2015"}, {"body": "full source available", "d": "3/2015"}, {"body": "project source fairly barebones updated code use icajax since embercliicajax included anyways default blueprints change going go ember source track", "d": "3/2015"}, {"body": "hard time finding exact source looks like morph used embermetalviews compiled emberjs debug prod source following lines happens enifed morphmorph exports function exports use strict var splice arrayprototypesplice error occurs inside ensurestartend function start always populated text dom element end always null", "d": "3/2015"}, {"body": "bsclifton thanks research really likely wrestling bug dom implementation like find time take look get release", "d": "3/2015"}, {"body": "could definitely keep mind error avoided setting minifyjs false brocfile definitely weird causes dom issue", "d": "3/2015"}, {"body": "expect apps want hooks run deterministic order making events would dodge problem needing care parent class replace another change parent class something subclass decide logic run parent pattern feels correct imo addon stomping parent addon bug going close since read like issue please let know questions feedback stuff little tricky", "d": "3/2015"}, {"body": "mixonic nt need run particular order however need model events run specific order beforemodel model aftermodel without able rely ca nt guarantee something put actually runs model make sense take look attached jsbin description see hitting model finished waiting promise", "d": "3/2015"}, {"body": "returns promise result disregard promise returned way guarantee things wait appropriately framework level mixins merged factory created way know functions async enforce run series automatically tldr override method async call must also chain return value avoid breaking promise finishes called updated jsbin", "d": "3/2015"}, {"body": "also clarify nothing last mixin rule applies time call async hook mixin", "d": "3/2015"}, {"body": "rwjblue yup makes sense got around problem would great beforemodel aftermodel simply events semantics around dealt within framework potential issue hidden behind addons abstraction example used simpleauth sure fairly widely used within community nt attempt deal async see documentation caught surprise eventhough makes perfect sense would behave way", "d": "3/2015"}, {"body": "submitted fix embersimpleauth async routing docs nt discuss calling think sort detail likely belongs api docs guides trek question maybe open issue see flesh guide details inheritance", "d": "3/2015"}, {"body": "thanks rwjblue appreciate jumping fixing simpleauth issue provide good example others looking forward team think getting away overrides move events already things like use within actions even use syntax see nt override init love abstract away issues something like even would give authors enough callback use letting ember handle around", "d": "3/2015"}, {"body": "talking removing details routable components rfc making events actions nt seem solve problem ordering hooks really matter cases suppose would ok also event nt seem like clear benefit", "d": "3/2015"}, {"body": "model hooks great performing route centric logic also means every mixin added route today uses hooks properly implement hooks calling super handling parents returned promises hooks events become agnostic mixins perform logic within event return promise ember coalesce returned values appropriately handle resolving returned promising continuing onto model pattern overriding init good practice think thing ember remove overriding methods encourage developers use events actions ensure later ember ecosystem grows conflicts removed hooks isolated mixins objects developers longer need call super handle results appropriately embers framework", "d": "3/2015"}, {"body": "aaronbhansen mentioned opposed nt see clear benefit think folks would amount issues regarding ordering since hooks often used authentication incorrect ordering could security concern today calling reiterate happy review pullrequest adds functionality discuss merits approach cons associated pretty sure never convince anything imaginary code", "d": "3/2015"}, {"body": "simplified removing loop mmun appears bound helper executed id passed second argument funky", "d": "3/2015"}, {"body": "details later issue class input helper", "d": "3/2015"}, {"body": "example see bound helper concats properly", "d": "3/2015"}, {"body": "fixed", "d": "3/2015"}, {"body": "yall best kissingcat", "d": "3/2015"}, {"body": "resolver resolvernormalize", "d": "3/2015"}, {"body": "cc tomdale likely related recent router app boot related refactorings", "d": "3/2015"}, {"body": "using injection get router may best bet", "d": "3/2015"}, {"body": "made work injection things broken given update try stable come", "d": "3/2015"}, {"body": "im assigning tom believe recent routerboot process refactoring may culprit", "d": "3/2015"}, {"body": "unsure accessing instance public api", "d": "3/2015"}, {"body": "unsure accessing routerjs instance app router public api nt believe people rely behavior sure alternative exists fix", "d": "3/2015"}, {"body": "imo worth always felt hackish better way get things guaranteed forever singletons", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "closing duplication", "d": "3/2015"}, {"body": "question probably better suited stack overflow unless reporting bug", "d": "3/2015"}, {"body": "ok thanks", "d": "3/2015"}, {"body": "afaik possible least way would like achieve would use one fragment like say thread use fragment deserialization hook router split fragment slug id would serialization hook model reverse process", "d": "3/2015"}, {"body": "jsbins illustrating issue works onwards nt work related", "d": "3/2015"}, {"body": "able solve issue adding name template outlet located", "d": "3/2015"}, {"body": "address", "d": "3/2015"}, {"body": "basically qp ca nt cp fundamental issue current qp system planned improved", "d": "3/2015"}, {"body": "understood thanks close keep things getting polluted around", "d": "3/2015"}, {"body": "fixed", "d": "3/2015"}, {"body": "also experiencing", "d": "3/2015"}, {"body": "experience controller triggering disconnect via triggeraction hits application controller fails temporary fix create function calls twice arguments", "d": "3/2015"}, {"body": "experience controller triggering disconnect via triggeraction hits application controller fails temporary fix create bugfixdisconnectoutlet function calls disconnectoutlet twice arguments actually turns needing call every time outlet rendered test click open layer click close modal closes fine test click open layer click open layer click close modal close click close modal closes close needs clicked n number times n number times outlet rendered", "d": "3/2015"}, {"body": "temporary fix", "d": "3/2015"}, {"body": "pr addresses mutewinter comment stacking multiple calls render original issue reported soliah regression still open", "d": "3/2015"}, {"body": "extended pr also close original issue", "d": "3/2015"}, {"body": "address", "d": "3/2015"}, {"body": "failing jsbin", "d": "3/2015"}, {"body": "related", "d": "3/2015"}, {"body": "sounds like dupe", "d": "3/2015"}, {"body": "mixonic one provides failing test", "d": "3/2015"}, {"body": "currently set way get work change render still nt hold parity latest release error", "d": "3/2015"}, {"body": "thanks putting together jsbin indeed regression rwjblue probably go milestone leave see fix kinda gross thorn side happy axe", "d": "3/2015"}, {"body": "sketch tack old behavior onto new infrastructure outlet view need notice occurrences helper ancestors probably looking finds one grab outlet state instead going next outlet router use inject appropriate outlet state inserted view", "d": "3/2015"}, {"body": "thanks", "d": "3/2015"}, {"body": "running issue since upgrading regarding code changed area using embermodals addon makes call thisrender route template name options specifying render template issue appendorphan gets called impersonateanoutlet get called sets wasused value think may impersonateanoutlet gets called renderhelper calling thisrender route issue addon setting things correctly regression details provide", "d": "3/2015"}, {"body": "drobannx please file new issue sounds like different problem", "d": "3/2015"}, {"body": "mixonic seems attrnode issue", "d": "3/2015"}, {"body": "get warning call easy reproduce happens", "d": "3/2015"}, {"body": "issue addon bug ember fix remove embercliappversion embercli app", "d": "3/2015"}, {"body": "seems related attrnode work flagging regression marking", "d": "3/2015"}, {"body": "seem ember cli related deep appears sync app something funky would suggest searching posting stack overflow help related issues need keep tracker focused ember cli bugd", "d": "3/2015"}, {"body": "one way might use embertesthelpers", "d": "3/2015"}, {"body": "cowboyd see warning mentioned falling back backwards compat nt sure way forward meaning beyond getting next deprecation warning", "d": "3/2015"}, {"body": "upgraded bit one well", "d": "3/2015"}, {"body": "cowboyd import syntax new", "d": "3/2015"}, {"body": "toranb hint likely nt bug rather question feel free cross link turns impossible considered bug", "d": "3/2015"}, {"body": "agreed thanks help guys", "d": "3/2015"}, {"body": "agreed thanks help guys", "d": "3/2015"}, {"body": "quick update anyone might find issue future able update simple container based projects like", "d": "3/2015"}, {"body": "taras think ecliappversions could guard runs per page", "d": "3/2015"}, {"body": "stefanpenner problem runs multiple times rather injected early enough included executed", "d": "3/2015"}, {"body": "ah", "d": "3/2015"}, {"body": "cc tomdale", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "random thoughtsfindings model hook returns array use arraycontroller basically arrayproxy controllermixin mixed model hook returns array arraycontroller automatically maintains alias property since arraycontroller arrayproxy expects implements model implement prototype extensions enabled fixed returning model hook jsbin tested following versions see version stopped working jsbins error error error logged async error logging broken error error works", "d": "3/2015"}, {"body": "fix", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "suspect fixed although someone confirm merge back ember", "d": "3/2015"}, {"body": "funny one basically setting object controller first enabling proxying behavior set controller falls back actually setting unless defined root controller solutions change controller extend instead add controller", "d": "3/2015"}, {"body": "thanks quick detailed reply rwjblue", "d": "3/2015"}, {"body": "explanation one major reasons removing case deprecation would idea model mutated add clearly intent", "d": "3/2015"}, {"body": "totally get never use objectcontroller default behavior actually forced proxy occur mentioned able get around add controller file declare embercontroller something adds value scenario see deprecation objectcontroller winwin", "d": "3/2015"}, {"body": "newer ember versions sure break old semantics tho", "d": "3/2015"}, {"body": "tried syntax mentioned index always undefined using", "d": "3/2015"}, {"body": "nt know enabled current beta work sure judging looking pr", "d": "3/2015"}, {"body": "interesting using stable beta release opt issue w nt valid index property inside loops update unless feature mentioned something turn thanks help", "d": "3/2015"}, {"body": "looks like quick bump embercli worked get index", "d": "3/2015"}, {"body": "like ember true see block params version approved", "d": "3/2015"}, {"body": "mmun thanks quick reply error correction stick w", "d": "3/2015"}, {"body": "weird releaseemberjs build jsbin contain embertemplatecompiler module produces add manually template compiler error gone", "d": "3/2015"}, {"body": "please post jsbin demo", "d": "3/2015"}, {"body": "think need ca nt quite get jsbin tests working tried copying docs gist failing demonstrate mean going take break first attempt call without template compiler loaded second attempt nothing handling action", "d": "3/2015"}, {"body": "think issue echoing sentiments stackoverflow post", "d": "3/2015"}, {"body": "solution post provides workaround well working jsbin workaround like see problem behavior action version workaround workaround removed", "d": "3/2015"}, {"body": "confident moment problem described issue believe bug best next step would create failing test embertesting suite", "d": "3/2015"}, {"body": "thanks guidance lukemelia way great talk emberconf visual paradigm like would want anything else try get failing test ember testing guide", "d": "3/2015"}, {"body": "also lukemelia explain technique ca nt find documentation controller returns response", "d": "3/2015"}, {"body": "especially wonder controllers return value request buggy solution", "d": "3/2015"}, {"body": "glad like talk flyswatter example workaround property set within standard part controller", "d": "3/2015"}, {"body": "yeah bad noticing make async helper work need know name promise controller way work someone test async actions controller", "d": "3/2015"}, {"body": "guide writing tests ember somewhere suspect write failing test file somewhere sure models controllers referenced loaded nt know controller add async method order test", "d": "3/2015"}, {"body": "lukemelia right revised jsbin testing meant corrected jsbin simplifies original example demonstrate meant yet test nt broken probably going drive insane", "d": "3/2015"}, {"body": "maybe really missing promises automatically added ember run loop", "d": "3/2015"}, {"body": "think need convention return promise action handler framework realizes async started test framework informed correctly rfc stackoverflow territory missing functionality really bug", "d": "3/2015"}, {"body": "maybe really missing promises automatically added ember run loop runloop nothing todo async test helpers waiting", "d": "3/2015"}, {"body": "runloop nothing todo async test helpers waiting nt async helpers know run loop completed nt tapping think need convention return promise action handler framework realizes async started test framework informed correctly totally agree basically ember goes asyncpromises road returning promises right thing default also feeling deeper deeper territory nt even figured ember test suite works submitting decisive rfc feels way core really informed", "d": "3/2015"}, {"body": "nt async helpers know run loop completed nt tapping runloop sync waiters checked router arbitrary promises held tests back tests would cause test pause forever", "d": "3/2015"}, {"body": "issue would like refreshmodel true replace true route queryparams see code using replace fine using refreshmodel true triggers refresh method return thisrouterrouterrefresh unclear expect nt propagate value replace causes issue", "d": "3/2015"}, {"body": "interesting part loop behavior broken may indicate computed property depending cached never recalculated requesting clarifications ember mainainers rotatinglight", "d": "3/2015"}, {"body": "nt meant observing overhead correctly maintaining observations complex scenarios quite high exists narrow path work general would strongly suggest taking different approach krisselden r", "d": "3/2015"}, {"body": "stefanpenner communication component block content always puzzling recommended way", "d": "3/2015"}, {"body": "latest ember children forward alternatively children report parents think actions bindings rather binding listening child modifications", "d": "3/2015"}, {"body": "stefanpenner ended setting editing property model list view representing works great way better approach felt odd setting property model nt database field", "d": "3/2015"}, {"body": "also childviews nt meant observing exactly thinking documentation think add submit pr", "d": "3/2015"}, {"body": "ran today though keypress work like keydown keyup created pull request", "d": "3/2015"}, {"body": "guess removed public api see example emberproxymixin undefined therefore working", "d": "3/2015"}, {"body": "btecu provide jsbin demonstrating also tell us version ember using well whether using handlebars htmlbars respective version thanks", "d": "3/2015"}, {"body": "shows nice assertion made canary believe assertion also", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "ca nt reproduce right may case errors swallowed somehow", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "jdmarshall", "d": "3/2015"}, {"body": "usually kept date bumped fiddle emberjsjsbincom usually updated shortly release going close", "d": "3/2015"}, {"body": "may wrong talking compatible jsfiddle nt peppered handlebars script tags edit yeah nt answer concerns", "d": "3/2015"}, {"body": "winnowed bit actions nt fire svg element xlink href means fine bit clicking dot works firefox chrome safari", "d": "3/2015"}, {"body": "workaround put clear rectangle front every sprite sure well scale", "d": "3/2015"}, {"body": "mean", "d": "3/2015"}, {"body": "yeah nt issue though initialize objectvalues least empty string", "d": "3/2015"}, {"body": "probably related", "d": "3/2015"}, {"body": "encountered problem recently likely related using embersimpleauth something similar caused based bug report retry transition router state nt updated link helpers comparing route wrong route info router state set called transition retried", "d": "3/2015"}, {"body": "thanks engwan issue manifested app using simpleauth well reduced testcase jsbin first post based investigation agree likely cause issue least related", "d": "3/2015"}, {"body": "watch instead", "d": "3/2015"}, {"body": "closed without explanation problem", "d": "3/2015"}, {"body": "clubajax believe use proper embertemplatecompiler matches ember version using", "d": "3/2015"}, {"body": "yes using wrong version embertemplatecompiler", "d": "3/2015"}, {"body": "azsam version use ember", "d": "3/2015"}, {"body": "benjaminhorn must use ships specific ember build", "d": "3/2015"}, {"body": "rwjblue thanks robert bad restart server works fine", "d": "3/2015"}, {"body": "emberconf project understand hopefully fix turns pervasive originally thought returning regular computed property cause data binding object lost", "d": "3/2015"}, {"body": "bumping participating feed", "d": "3/2015"}, {"body": "wagenet reproducible jsbin makdi prepared simplified reproduction embercli project reduced one route one template", "d": "3/2015"}, {"body": "talking core team sounds like nt something ca nt improve every case given removing globals support ember going close", "d": "3/2015"}, {"body": "thanks made clearer", "d": "3/2015"}, {"body": "martinthogersen ember looks generating controller used tweak default controllers project like assuming embercli adding controllers defined locations", "d": "3/2015"}, {"body": "rwjblue thanks may help look later order achive goal want either generate controller defined b modify queryparams controller initialized isnt possible right", "d": "3/2015"}, {"body": "issue using list view binding url href attribute inline template ill try build fiddle reproduces overview would controller template workaround worked aswell", "d": "3/2015"}, {"body": "fixed", "d": "3/2015"}, {"body": "came today actually recommend way guide testing components would use integration test helpers interact rendered component test behavior", "d": "3/2015"}, {"body": "confirm issue use multiple pollers makes use execute function periodically randomly stops executed restarted stopper poller executed changing solved problem moment", "d": "3/2015"}, {"body": "issue using type search failing jsbin", "d": "3/2015"}, {"body": "brief tour component syntax nt see way instantiating nested component directory preference would use traverse directories", "d": "3/2015"}, {"body": "relevant discussion", "d": "3/2015"}, {"body": "noticed well", "d": "3/2015"}, {"body": "topaxi believe dupe please reopen incorrect", "d": "3/2015"}, {"body": "proper way standalone way firing array change events removing dirty checking still relies point lots caches checked chain nodes streams views etc often local caches checked way notifypropertychange invalidate schedule recheck force dirty add obj standalone way fire arr force dirty cause dependent streams update cc mmun ebryn wycats", "d": "3/2015"}, {"body": "seeing error upgrading addon nt see helpers overrides mentioned repo shows error issue related function", "d": "3/2015"}, {"body": "gone", "d": "3/2015"}, {"body": "lots bugs chainsbindingsmeta destruction whole area needs revisited thoroughly cleaned likely something tackle postglimmer", "d": "3/2015"}, {"body": "bantic explored additional explanation going wrong", "d": "3/2015"}, {"body": "made addon component", "d": "3/2015"}, {"body": "subexp idea would work great could used like class name bindings syntax", "d": "3/2015"}, {"body": "fixed", "d": "3/2015"}, {"body": "thank reproduction mmun able track issue help solution fix land", "d": "3/2015"}, {"body": "thank rwjblue mmun best", "d": "3/2015"}, {"body": "believe getting well using latest embercli scenario follows master type route members filter one member click member go detail route click back get error import ember ember export default emberarraycontrollerextend primarymembers embercomputedfilterby model primaryflag true filtered function var model thisget primarymembers var searchterm thisget searchterm property primarymembers eachlastname searchterm pplsorting lastname asc gender desc sorted embercomputedsort filtered pplsorting limited function return thisget sorted slice property sorted eachlastname", "d": "3/2015"}, {"body": "error went away following instead filtered function var model thisget primarymembers var searchterm thisget searchterm property primarymembers searchterm", "d": "3/2015"}, {"body": "looks like angular typescript teams working together wycats get proper annotations specification see hope transpiled babel easily get real class support", "d": "3/2015"}, {"body": "annotations proposal proposal declarative properties going brought paris meeting march anticipate support babel pretty quickly assuming goes well smile", "d": "3/2015"}, {"body": "wycats also need jshint support annotations apply pressure", "d": "3/2015"}, {"body": "stefanpenner advanced proposal try get done", "d": "3/2015"}, {"body": "stefanpenner advanced proposal try get done get tooling pieces tee roll much quicker wycats need figure interop still", "d": "3/2015"}, {"body": "stefanpenner yeah proposal coming paris well make sure keep ember use case mind", "d": "3/2015"}, {"body": "stefanpenner yeah super proposal coming paris well make sure keep ember use case mind thanks keep loop gladly prototype something proposal", "d": "3/2015"}, {"body": "sure discussion overlaps react team looks mixins could expressed classes looks like could done solved annotation class point another use case outside ember", "d": "3/2015"}, {"body": "donaldpipowitch awesome good resource read shortly believe thing right expression desugars may clear", "d": "3/2015"}, {"body": "cc", "d": "3/2015"}, {"body": "thehydroimpulse future reference use notifications button issue get notifications without sending everyone message raisedhands", "d": "3/2015"}, {"body": "trek unfortunately watching project technically already subscribed issues nt get email notifications commenting unfortunately way around", "d": "3/2015"}, {"body": "thehydroimpulse go enable email notifications watched repos", "d": "3/2015"}, {"body": "rwjblue experiencing issue ember beta found issue looking functioning replace code fixed problem fix seemed registry stayed even", "d": "3/2015"}, {"body": "confirm running issue nt take care registry nt tested others", "d": "3/2015"}, {"body": "also hit", "d": "3/2015"}, {"body": "try look today", "d": "3/2015"}, {"body": "uses subexpressions used one register bound helper blocks", "d": "3/2015"}, {"body": "uses subexpressions used one register bound helper blocks would also like know", "d": "3/2015"}, {"body": "bound helpers blocks nt fit well old rendering model possible first class citizen glimmer lands", "d": "3/2015"}, {"body": "great boat", "d": "3/2015"}, {"body": "take look new helper get sense magic calls good uses support keybased diffing see", "d": "3/2015"}, {"body": "somewhat offtopic closely related use case idea would transpose handlebarsregisterhelper ewform options gt data optionsdata fn optionsfn view dataview context viewget context formview emberviewextend implementation removed emberhandlebarsviewhelperhelper formview options private even choose wrong approach try use still nt work like used basically empty exist forth use case basically register helper custom view even handlers like wireup helper template quite simple basic stuff block pointers ideas whatsoever resolve would extremely appreciated thanks", "d": "3/2015"}, {"body": "perlun default types block helpers use component caused make helper like instead component clear implementation", "d": "3/2015"}, {"body": "rwjblue nt write code first place discussed colleague technical design specific part details full code looks like btw handlebarsregisterhelper ewform options data optionsdata fn optionsfn view dataview context viewget context formview emberviewextend layout emberhandlebarscompile viewinline yield else yield emberhandlebarsviewhelperhelper formview options collection mix controllers reopening chief reason done helper rather component needs access context ie controller view used set validator questions rephrase ember approach mucking context helper work ember given moving towards direction routable components huge thanks advance", "d": "3/2015"}, {"body": "hey perlun try answer best use plain component handlebarshelper needed instead mucking context use dependency injection inject validator component components depending need aside code define class compile template every time helper called depending often may needlessly slow app ps sent email gmail still use ds", "d": "3/2015"}, {"body": "alexander thanks comment yes still use gmail nt replied email yet thanks smile problem multiple instances page validator scoped belongs contains list validators ie forms current context ie view controller child components set get touch closest parent register within validator used implement app sure dependency injection nt really solving problem specifically want connection one validator eg button within form disabled specific form invalid crucical words scope anything logically dom children key yeah know dynamic template compilation nt smartest thing world smile nt think sheer number instances big nt think performance impact bad case", "d": "3/2015"}, {"body": "ah okay perhaps could use wrappercomponent blockparams holding validator edit wrapper component yields validator turn passed child components argument bound property way form component hold shared validator instance", "d": "3/2015"}, {"body": "ah okay perhaps could use wrappercomponent blockparams holding validator please elaborate work core issue also used application framework use bunch application really nt want change public api ember minor entirely backwards compatible upgrade hint hint wink", "d": "3/2015"}, {"body": "anyone interested generic workaround issue came probably inefficient definitely upgradesafe monkey patch targets problematic xtian identified wraps property change notification although undoubtedly fragile observer solution solved problem one place whole app ymmv", "d": "3/2015"}, {"body": "proposed implementation flaw work properly used component used multiple times page middlepropertyname itemtree export default embercomponentextend displayvalue embercomputedindirect count itemtree countitemcount itemtree countitemcount think single shared instance indirect case sourcepropertyobserver lastsourceproperty variables also shared instances itemtree able solve using var computedindirect function middlepropertyname return function key value var sourceproperty thisget middlepropertyname", "d": "3/2015"}, {"body": "marsik right uses closed variable use variable instance update implementation add test soon probably tomorrow sometime thanks pointing", "d": "3/2015"}, {"body": "add another perspective solved problem various values solved really templates via follow helper would treat value given path path much reason dynamic form builderdata complex ago nt know approach would work latest emberbars even method prefer wanted validate path path use case", "d": "3/2015"}, {"body": "updated addon something similar marsik instead storing properties object used hashes module seemed better adding random properties object js import ember ember var sourcepropertyobservers var lastsourceproperties export default function indirect middlepropertyname return function key value var guid emberguidfor var sourceproperty thisget middlepropertyname property middlepropertyname", "d": "3/2015"}, {"body": "nice", "d": "3/2015"}, {"body": "also like see bake addon please nt take blanket never land core let kick around minor leagues see iteration needed locking api usage rwjblue writing something like yesterday theory reactive rendering work make technique overkill many cases light gordonkristan addon going close let know missed anything", "d": "3/2015"}, {"body": "afraid last version leak references memory primarily javascript developer correct wrong believe since nobody ever deletes keys sourcepropertyobservers lastsourceproperties cause references observer ember object closure reference kept memory forever", "d": "3/2015"}, {"body": "marsik true nt big deal people could cause issues creating lot objects way try think way around worse comes worst add properties object like", "d": "3/2015"}, {"body": "ksnyde track problem using bootstrap ca nt benefit plugin facing issue curious identify culprit may insight include running ember cli attempting get emberclirails work setup", "d": "3/2015"}, {"body": "jesuskwice matter removing aging emberclibootstrapsass plugin see loading bootstrapforember dependency problems typically compiler automatically matchup without issue guess offsheet template compiling maybe complicated good luck getting sorted", "d": "3/2015"}, {"body": "ksnyde nt really stringent limitations use case mainly trying get embercli play nice rails tried number different approaches avail still tinkering around bit drop hopes though thanks", "d": "3/2015"}, {"body": "also encountered perf issue currently looking possible workarounds see details jsbin demonstrating issue", "d": "3/2015"}, {"body": "jesenko although ready yet big effort aims address also yes nt workaround looking may time later week dig examples noone weekend feel free pester", "d": "3/2015"}, {"body": "stefanpenner great hoping glimmer would also improve initial render times waiting glimmer also one workarounds considering version used dbmonster app however performance issue still forked dbmonster repo added problematic component row initial rendering time rows went", "d": "3/2015"}, {"body": "tomdale wycats tests cases two", "d": "3/2015"}, {"body": "stefanpenner safest workaround would probably use raw handlebars templates pojo objects context rendering cells would make easier however guess implemented look able come something worth sharing extract addon", "d": "3/2015"}, {"body": "jesenko sounds good", "d": "3/2015"}, {"body": "pending glimmer may slightly change stream api", "d": "3/2015"}, {"body": "glimmer think wo nt need expose streams", "d": "3/2015"}, {"body": "stefanpenner thanks update new apis much simpler mmun sure statement currently creating streams helper figure way expose streams create lmk", "d": "3/2015"}, {"body": "timevans seems like could use tagless component plugs service", "d": "3/2015"}, {"body": "mmun would tagless component work statment ie", "d": "3/2015"}, {"body": "reference new ifelse helper looks like catching stuff though unsure could observe call time something additional required", "d": "3/2015"}, {"body": "timevans nt public api planned yet handle case glimmer helpers essentially pure functions wo nt manage streams similar bound helpers today concept keywords much powerful used internally implement many preglimmer helpers pretty much em keeping private collect enough use cases iron api suffice purposes please excuse typos typing phone", "d": "3/2015"}, {"body": "deprecation guide added", "d": "3/2015"}, {"body": "igort care take another look", "d": "3/2015"}, {"body": "issue longer exists latest stable beta canary hence closing", "d": "3/2015"}, {"body": "ran searching workaround", "d": "3/2015"}, {"body": "jackca nt tested final could work think ember version use test option try use phantomjs loads improvement maybe works", "d": "3/2015"}, {"body": "szines thanks tips clarify project original issue trying get onto nontrivial upgrade project size tried phantom appeared huge regression stability saw time using chromium test runner", "d": "3/2015"}, {"body": "jackca right nontrivial migrated first could try maybe better wait migrate still using old handlebar template compiler less hassle especially uses htmlbar bigger change", "d": "3/2015"}, {"body": "tomdale server side rendering great feature game changer estimate ready", "d": "3/2015"}, {"body": "yankovsky tomhuda said emberconf thing released june year keep tuned", "d": "3/2015"}, {"body": "closing believe attrnode gone glimmer world", "d": "3/2015"}, {"body": "emberrails fix", "d": "3/2015"}, {"body": "run", "d": "3/2015"}, {"body": "deploying heroku ended changing force expire assets get new templates going", "d": "3/2015"}, {"body": "bfcoder thanks yes tmp files issue make changes file error fixes figured next time update ember clearing tmp directory first", "d": "3/2015"}, {"body": "ditto givanse unclear instead", "d": "3/2015"}, {"body": "rauhryan go something like", "d": "3/2015"}, {"body": "noticed well", "d": "3/2015"}, {"body": "pretty sure got fixed outlet refactor please reopen still reproduced", "d": "3/2015"}, {"body": "verify works", "d": "3/2015"}, {"body": "ember released issue still present new timeline", "d": "3/2015"}, {"body": "wagenet might one people skimming code trying get understand goal might help", "d": "3/2015"}, {"body": "think come back tried achieve similar thing ictabs mentioned options registered order first time around subsequent registrations wrong order demo", "d": "3/2015"}, {"body": "hi rwjblue issue embercli version view code template code showing error console", "d": "3/2015"}, {"body": "think still problem related white spaces white spaces ember components nt preserved tested chrome firefox safari behaviour ember ember beta ember canary", "d": "3/2015"}, {"body": "came say seeing issue latest ember canary ipad though works ok iphone update actually affects iphone lt users using ipad ios mobile safari white screen death typeerror attempted assign readonly property ember infoversions", "d": "3/2015"}, {"body": "cjroebuck provide example app likely narrow extremely quickly", "d": "3/2015"}, {"body": "actually site right although beta version emberdata sent iphone mar stefan penner notifications githubcom wrote cjroebuck provide example app likely narrow extremely quickly reply email directly view github", "d": "3/2015"}, {"body": "take look afternoon really wish apple would fix bug", "d": "3/2015"}, {"body": "stefanpenner realising bug affects iphone lt users rolled back ember emberdata latest beta releases redeployed emberemberdata canary version still displaying bug loaded many thanks taking time look issue", "d": "3/2015"}, {"body": "cjroebuck sure actually users bug devices nt include iphone various ipads basically devices fine", "d": "3/2015"}, {"body": "confirmed crashing", "d": "3/2015"}, {"body": "looks like blowing around", "d": "3/2015"}, {"body": "appears issue different manifestation previous reduction nt replicate need run lunch continue investigation later someone help reduce problem would great", "d": "3/2015"}, {"body": "stefanpenner users complained app work iphone ipad running ios white screen unfortunately means debug issue looks similar one use ember though", "d": "3/2015"}, {"body": "orkon hmm seems likely bug rough silly apple", "d": "3/2015"}, {"body": "many false starts problem hilariously obvious use strict remover nt removing use stricts cc rwjblue thank mega massive yahoo app nearly runs canary p", "d": "3/2015"}, {"body": "ugh fix damned build", "d": "3/2015"}, {"body": "stefanpenner review output following builds canary copy bower copy modules containing definitely removed ever intend remove every module specific ones identified hit jit problem build system seems operating intended", "d": "3/2015"}, {"body": "builds app app contain use strict nt expect maybe interim build borked file annotation drop demonstrated app", "d": "3/2015"}, {"body": "stefanpenner yes correct something funky going", "d": "3/2015"}, {"body": "cjroebuck thanks bringing attention rwjblue see find someone ownchampion rigorous cross platform testing experience insure would caught know getting many apps work canary help catch issues make sure device included runs", "d": "3/2015"}, {"body": "see find someone ownchampion rigorous cross platform testing experience love general case apple needs fix stupid jit issue outstanding quite movement side rage", "d": "3/2015"}, {"body": "submitted fix latest round issues", "d": "3/2015"}, {"body": "fixed master", "d": "3/2015"}, {"body": "tested via travis anyone ci mobile devices", "d": "3/2015"}, {"body": "tested via travis anyone ci mobile devices needs tested device simulator wanted saucelabs style testing time lack champion move forward", "d": "3/2015"}, {"body": "running issue ember updates", "d": "3/2015"}, {"body": "facing issue bugs gets logged error works fine otherwise pagination pages change everything works fine edit using ember", "d": "3/2015"}, {"body": "seeing", "d": "3/2015"}, {"body": "facing issue gorandev logged compromise app flow workaround", "d": "3/2015"}, {"body": "hmm behavior trying implement able moment user type normally search box refreshes model route currently swallow transitionaborted errors typing ui nt respond well replace text box finished transition would prefer discard requests pile rather wait resolve javascript export default emberrouteextend queryparams q replace true refreshmodel true sort replace true refreshmodel true filter replace true refreshmodel true model function params return thisstorefind user params", "d": "3/2015"}, {"body": "trying use api get string templateview using ember got following error jsbin however string still rendered anything new consider", "d": "3/2015"}, {"body": "sorry wake back best practice seeing issue launching foundation modal action", "d": "3/2015"}, {"body": "running issue well benkiefer", "d": "3/2015"}, {"body": "remember correctly noticed difference click click right solved", "d": "3/2015"}, {"body": "click works occasionally ended solving answer question code looks like click modallaunchbtn andthen function waitfor function assertok find mymodal hidden runandwaitfor looks like basically means pause test take nap ideal least test drive modals", "d": "3/2015"}, {"body": "thanks benkiefer", "d": "3/2015"}, {"body": "behaviour also shown try observe array see comment method everything works expected", "d": "3/2015"}, {"body": "believe observable may stompable would probably cause land fix would like land glimmer branch pr radically changes much code got branch refactoring classnamebindings add test", "d": "3/2015"}, {"body": "believe classnames observable ah ok nt think nonobservable means error message stumbled upon today work seemed related least thought add input smile really curious glimmer ca nt wait seecode live action", "d": "3/2015"}, {"body": "see glimmer changed must fix", "d": "3/2015"}, {"body": "reviewed glimmer branch yet fixed checkbox still inherits despite registered container name", "d": "3/2015"}, {"body": "cc tomdale wycats", "d": "3/2015"}, {"body": "would like able sort array computed property item controller", "d": "3/2015"}, {"body": "array controller itemcontrollers deprecated go away nt believe fixing", "d": "3/2015"}, {"body": "moving asyncawait sync helpers really fix tooling side wip", "d": "3/2015"}, {"body": "running issue component say one place application create using handlebars another place create component programmatically inside foo component click call component created via handlebars everything works component created programmatically actions never occur correct way pass action programmatically creating component something else", "d": "3/2015"}, {"body": "think get around setting targetobject property sending component reference receiving component sure kosher solution worked past mar mikeazo notifications githubcom wrote running issue component say foo one place application create using handlebars foo someactiondosomething works fine another place create component programmatically foocreate someaction dosomething inside foo component click call thissendaction someaction component created via handlebars everything works component created programmatically actions never occur reply email directly view github", "d": "3/2015"}, {"body": "correct fix print targetobject handlebars created component targetobject set print programmatically created one null set manually everything worked", "d": "3/2015"}, {"body": "formtop actions actionchange formbottom actionchange actionchange fire actionchange event formbottom formtop way context shifting works nt problem anymore yielded block actions bubble lexically", "d": "3/2015"}, {"body": "foocreate someaction dosomething passing create also legit reopen example provided pain", "d": "3/2015"}, {"body": "stefanpenner saying newer versions ember nt set targetobject right", "d": "3/2015"}, {"body": "appear real issue sure closed", "d": "3/2015"}, {"body": "looks like issue revolves around basic used represent root controller view amp route classes ember controller amp view going away basic component resolved container revisit issue ember", "d": "3/2015"}, {"body": "taras yes attempt make sure reserved route name point specific plans remove requirement", "d": "3/2015"}, {"body": "howdy think run conundrum nested components let say play button component inside post component button component template looks like containing component simply calls passes audio context queue button clicked even propagates button component however following code within button component propagates containing post component impression pr calling child component would eventually bubble route however results error stating parent component lacks action handler action goalthinking reusable queue button component simply received audio object matter called directly template nested infinite components application route would eventually receive action act upon mentioned design assume referring behavior nested components bubble past parent component see changing ember allowing behavior approach described rethought", "d": "3/2015"}, {"body": "ran issue today simple menu component gets populated dynamically route controller need use generic template like problem found even breaking action component stopped app bubble transition actions application route wanted create generic solution instead explicitly setting action corresponding actions component created generic action component catches original action sends parentview template component parentview simply caught resent controller turn made follow normal behaviour bubble tree", "d": "3/2015"}, {"body": "unnfortunately issue little complex component nested two levels within components button nested within article nested within list articles level component trying avoid catching child components action parent component manually bubbling believe looking way force bubble component action way chain router instead caught parent component note directly using view components", "d": "3/2015"}, {"body": "really need land land improve actions yielded block params help address pain avoiding need bubbling entirely", "d": "3/2015"}, {"body": "interesting mixonic readlearn avoid need bubbling linearza forgot mention directly using controllers components property", "d": "3/2015"}, {"body": "joshlevinson improved actions rfc one place look gave talk new patterns components january video slides links jsbins ideas blocks us making official api landing glimmer refactor", "d": "3/2015"}, {"body": "joshlevinson understand also multiple nested components example menu component menu items also components case menu component parentview menu item component simply catch menu pass parentview menu case application view sends controller onwards route normal actions bubble agreed manual minimal solution unless hierarchy going change bad either stays within ember convention earlier used hackier solution also consider think bubbling better", "d": "3/2015"}, {"body": "linearza actually think may settle hackier solution time see temporary solution awaiting permanent fix whereas manual bubbling could appear less appreciate explanation think idea unless hierarchy going change bad actually goes ember convention components knowledge application hierarchycontext unless good reason example components action handled differently dependent context would want catch action parent component actbubble however say general rule component work matter entire reason chose build parts app building components reason unclear components nt bubble actions way application perhaps mixonic allusion work even better", "d": "3/2015"}, {"body": "hello guys condition statement changes get error reproduce problem click toggle button toggles boolean property", "d": "3/2015"}, {"body": "mupkoo fixed outlet refactor released soon", "d": "3/2015"}, {"body": "thank update rwjblue", "d": "3/2015"}, {"body": "possible issue rise", "d": "3/2015"}, {"body": "regression since canary fixed pwfisher post still seeing throws click rerender twice observe console logs", "d": "3/2015"}, {"body": "hey guys progress issue good workaround rerender full appview also needed change app locale", "d": "3/2015"}, {"body": "something like", "d": "3/2015"}, {"body": "adds extra elements sure issue could", "d": "3/2015"}, {"body": "also confirm skeleton bootstrap responsive grids work embercli current beta release ember nt time post js fiddle problem described every responsive grid attempted use", "d": "3/2015"}, {"body": "provide example", "d": "3/2015"}, {"body": "problem specify number args pass instead making helper capable accepting number arguments", "d": "3/2015"}, {"body": "aamirafridi expect land improved helper api better support going stuck handlebars function signature", "d": "3/2015"}, {"body": "continuing question ajax response like name john title mr salary name shawn title mr salary make json inside array ember object", "d": "3/2015"}, {"body": "need ember objects plan use observers suggest regardless question seems better suited stack overflow discuss site closed ticket thanks", "d": "3/2015"}]