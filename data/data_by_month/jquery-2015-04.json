[{"title": "jquery allows strings objects event handlers gt error thrown", "body": "click button make browser throw error function code checked var whatever value condition matches null strings objects allowed function course fail question reason types checked callback discarded happy submit pr fix issue", "num": "2248", "d": "4/2015"}, {"title": "forever loop selector argumen jquery", "body": "hi try nothing happened cpu usage increase browser hang forever loop produced code", "num": "2247", "d": "4/2015"}, {"title": "jquery already loaded", "body": "beginning file script checks jquery running write console log jquery instantiated already trying load jquery wo nt fix older versions help developers future", "num": "2246", "d": "4/2015"}, {"title": "click work firefox ie checkboxes added documentbody", "body": "chrome works ie click event dispatched firefox event dispatched checked property properly updated please take look least behavior consistent different browsers probably click work like chrome jsfiddle reproduce output firefox jqueryclick detached checkbox nt work jqueryclick checkbox works mouseevent click detached checkbox works mouseevent click checkbox works chrome jqueryclick detached checkbox works jqueryclick checkbox works mouseevent click detached checkbox works mouseevent click checkbox works ie jqueryclick checkbox works", "num": "2245", "d": "4/2015"}, {"title": "npm distribution missing cdn files since", "body": "comparing reveals latter include folder distcdn anymore main problem file distjqueryminjs includes sourcemap comment include file build without getting errors int browser tries load sourcemap might related", "num": "2244", "d": "4/2015"}, {"title": "isarraylike empty obj error", "body": "received error trying call like seems returns error works fine want check passing moving forward thanks function isarraylike obj", "num": "2242", "d": "4/2015"}, {"title": "addclass nt work svg tags", "body": "let following dom typing nothing typing work expected happens jquery amp jquery chrome windows tp", "num": "2241", "d": "4/2015"}, {"title": "attr checked work anytime", "body": "check radio button external label tag object using motif attr checked true work first time click try removeattr using attr js code il work everytime documentgetelementbyid motif checkedtrue see demo probleme", "num": "2240", "d": "4/2015"}, {"title": "isarraylike", "body": "objnodetype amp amp length return true useful nodelist nodetype", "num": "2238", "d": "4/2015"}, {"title": "position function reports incorrect left offset chrome", "body": "test chrome browsers see offset reported method incorrect chrome value offset chrome gap real left offset horizontally centered problem relates horizontally centered fixed calculating manually value element computed style gap maybe due possible bug design choice chrome also discussion stackoverflow think jquery supposed deal difference browsers", "num": "2237", "d": "4/2015"}, {"title": "multiple javascript errors jqueryminjs jqueryjs", "body": "enabled debug output seamonkeyfirefox browser number jqueryrelated errors mix version sure current version grep jquery tmpseamonkeylog sort uniq sort document loaded successfully document loaded successfully error loading url nsbindingaborted javascript error line error syntax error unrecognized expression nameusername javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property aresult javascript strict warning line referenceerror reference undefined property h javascript strict warning line referenceerror reference undefined property dattributes c expando javascript strict warning line referenceerror reference undefined property idisabled javascript strict warning line referenceerror reference undefined property jdelegatetype javascript strict warning line referenceerror reference undefined property meventtriggered javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property vstatus javascript strict warning line referenceerror reference undefined property kheaders javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property e u javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property vcache e vexpando javascript strict warning line referenceerror reference undefined property veventtriggered javascript strict warning line referenceerror reference undefined property vvalhooks javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property dshivcss javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable x redeclares argument javascript strict warning line referenceerror reference undefined property anodetype javascript strict warning line referenceerror reference undefined property aselector javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property fexpando javascript strict warning line referenceerror reference undefined property feventtriggered javascript strict warning line referenceerror reference undefined property fvalhooks javascript strict warning line referenceerror reference undefined property f javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property areturnvalue javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property cresult javascript strict warning line referenceerror reference undefined property c javascript strict warning line referenceerror reference undefined property isizcache javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property acache javascript strict warning line referenceerror reference undefined property dqueue javascript strict warning line referenceerror reference undefined property dtraditional javascript strict warning line referenceerror reference undefined property equeue javascript strict warning line referenceerror reference undefined property fajaxsettingstraditional javascript strict warning line referenceerror reference undefined property h j javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property jquerycache id name javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property elemnodetype javascript strict warning line referenceerror reference undefined property p javascript strict warning line referenceerror reference undefined property ret javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property event expando javascript strict warning line referenceerror reference undefined property jquerycache id name javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property elemnodetype javascript strict warning line referenceerror reference undefined property p javascript strict warning line referenceerror reference undefined property ret javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property event expando javascript strict warning line referenceerror reference undefined property anodename javascript strict warning line referenceerror reference undefined property h javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property aresult javascript strict warning line referenceerror reference undefined property dattributes c expando javascript strict warning line referenceerror reference undefined property e javascript strict warning line referenceerror reference undefined property idisabled javascript strict warning line referenceerror reference undefined property jdelegatetype javascript strict warning line referenceerror reference undefined property meventtriggered javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property anodetype javascript strict warning line referenceerror reference undefined property c b javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property aresult javascript strict warning line referenceerror reference undefined property ldelegatetype javascript strict warning line referenceerror reference undefined property neventtriggered javascript strict warning line syntaxerror strict mode code functions may declared top level immediately within another function javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property ausername javascript strict warning line referenceerror reference undefined property vstatus javascript strict warning line referenceerror reference undefined property ktraditional javascript strict warning line referenceerror reference undefined property najaxsettingstraditional javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property euibackcompat javascript strict warning line referenceerror reference undefined property n u javascript strict warning line referenceerror reference undefined property javascript strict warning line referenceerror reference undefined property thistimer javascript strict warning line referenceerror reference undefined property ejquery javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line typeerror variable redeclares argument javascript strict warning line typeerror variable b redeclares argument javascript strict warning line typeerror variable c redeclares argument javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property fexpando javascript strict warning line referenceerror reference undefined property j javascript strict warning line referenceerror reference undefined property fcache fexpando javascript strict warning line referenceerror reference undefined property fvalhooks javascript strict warning line referenceerror reference undefined property gtype javascript strict warning line referenceerror reference undefined property javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property areturnvalue javascript strict warning line referenceerror reference undefined property cresult javascript strict warning line referenceerror reference undefined property feventtriggered javascript strict warning line referenceerror reference undefined property nset javascript strict warning line referenceerror reference undefined property sdelegatetype javascript strict warning line syntaxerror test equality mistyped assignment javascript strict warning line referenceerror reference undefined property dcache javascript strict warning line referenceerror reference undefined property j k javascript strict warning line syntaxerror test equality mistyped assignment", "num": "2236", "d": "4/2015"}, {"title": "jqxhrthen returns string datatype json", "body": "according docs jqxhrthen equivalent jqxhrdone performing ajax get request datatype set json data arg done callback object data arg using always string", "num": "2235", "d": "4/2015"}, {"title": "pseudo selectors", "body": "using pseudo selector library jquery executes selector every element page even though given id element id inviewport causes inviewport executed every element page id inviewport obviously huge performance issue happen chrome likely browsers unfortunately expertise jquery determine exactly issue lies provide patch moment however would suspect would great performance optimization older browsers css selector given id first searches instead executing pseudo selector code tested windows also tested chrome gnulinux arch jquery version yes realize talking party add jquery think issue since method defined inviewport inviewport called different numbers times depending browser version gets called hundreds times elements one specified id chrome element specified id appears jquery handles id selectors use case site infinite stream items need something cards come viewport list ids cards iterate ids run inviewport pseudo selector list ids gets pared item entered view port ie performance abysmal running inviewport times nt terrible indeed nt unless", "num": "2231", "d": "4/2015"}, {"title": "selector class working parent element", "body": "", "num": "2230", "d": "4/2015"}, {"title": "add catch promise objects", "body": "suggested implementation", "num": "2229", "d": "4/2015"}, {"title": "deprecate jqueryunique", "body": "alias betternamed fact sorts surprised even team members deprecate favor need introduced", "num": "2228", "d": "4/2015"}, {"title": "visible hidden selectors unreliable", "body": "issue issue present version jquery happening inline elements wrapping block elements valid header image wrapped single anchor two issues arise different browsers report offsetwidthheight anchor differently example firefox would report one visible anchor example chrome report also highly depends css styles applied page issue discovered missing images displayed instead common missing image icon browser may report anchor invisible child elements still visible clickable inherit anchor properties example solution potential solutions come mind flaws loop child elements check visibility potentially harmful performance although selector already marked documentation check parent visibility probably enough report incorrectly anchor nt visible children", "num": "2227", "d": "4/2015"}, {"title": "explore possibility sorting results jquery find", "body": "deduping sorting", "num": "2226", "d": "4/2015"}, {"title": "expose jquerydommanip method", "body": "since get opportunity major version gon na label blocker", "num": "2225", "d": "4/2015"}, {"title": "expose jquerybuildfragment method", "body": "since get opportunity major version marking blocker", "num": "2224", "d": "4/2015"}, {"title": "anything wrong hasclass", "body": "value line always true works fine make mistakes", "num": "2222", "d": "4/2015"}, {"title": "selfclosing tag inconsistency", "body": "parses ok parses ok parses really ok", "num": "2221", "d": "4/2015"}, {"title": "removeattr resets selectedindex firefox", "body": "firefox fiddle shows selectedindex reset removeattr method called chrome safari ie remains shows nothing selected select box", "num": "2220", "d": "4/2015"}, {"title": "effects easingdefault", "body": "hi code execute methode argument move way access easing function nt set explicitly call nt work pr set default value keep consistent", "num": "2219", "d": "4/2015"}, {"title": "nested collapsible sets uicollapsiblecontent div created also creates blank lines", "body": "button brings popup containing nest collapsible set code works properly except appears blank line right beneath header list items code call log owner actions left word spoke person web inspector see blank lines right div created one uibodyinherit sure blank lines coming want make sure nt bug somewhere css looks like web inspector truly believe something wrong missing help would greatly appreciated", "num": "2216", "d": "4/2015"}, {"title": "problem animate scrolltop css overflowx hidden body amp html set width height", "body": "spent hours trying get bottom figured going trying implement animated scroll anchor links using animate scrolltop thing happened links broke completely found strange using previously functioning script older version jquery guess something broke recent update console shows errors tried many different versions animated scroll certain diagnosis think right area coffeescript something like works fine css either combined like also happened using party solutions see", "num": "2215", "d": "4/2015"}, {"title": "question behavior wrapping wrapped jquery object", "body": "big fan heavy user jquery got question searched stackoverflow found nothing helpful posted question jquery forum still got nothing noticed paragraph jquery api doc cloning jquery objects jquery object passed function clone object created new jquery object references dom elements initial one means already wrapped jquery object still unwrapandwrap element create new jquery object rather returns directly initially workmates supposed jquery needed requery selector keep modified dom tried codes found contained dom element proved nt requery thing finally confused return directly already jquery object purpose creating cloning new object", "num": "2214", "d": "4/2015"}, {"title": "depth selector", "body": "asking something similar found bug report feature request actually back times like reopen issue discussion really think would useful", "num": "2209", "d": "4/2015"}, {"title": "jquerymerge could shorter", "body": "works good might long use much variable cause much loop second big array maybe better var merge function first second var tmp firstlength stuff avoid arraylike puzzle still maintain first guys concern", "num": "2208", "d": "4/2015"}, {"title": "edge case selfclosing tag detection", "body": "automatically turns something like setting html broken found attribute eg turns jsfiddle", "num": "2205", "d": "4/2015"}, {"title": "stealthempty input replacewith leaves content place", "body": "eg noop", "num": "2204", "d": "4/2015"}, {"title": "feature methods submit get post page ajax", "body": "believe possible send get post data page let browser handle response normal form submit without preexisting tag feel like would useful addition core many people expect already available many questions internet wih jquery ie intuitively felt doable without plugins ajax jquery nt limit usefulness ajax applications believe makes sense pretty basic usecase methods might called whatever would sound sensible several ways implement one shown", "num": "2202", "d": "4/2015"}, {"title": "slower", "body": "hello made jsperf testing speed dom insertion operations results seemed strange times slower times slower innerhtml tried look code could find overhead come thoughts jsperf", "num": "2200", "d": "4/2015"}, {"title": "jquery class operations svg dom attributes", "body": "first jquery hugely helpful whole community thanks helpful fact spaces lacks end huge pain developers working jquery detecting svg hasclass addclass like groups path attributes huge pain growing community support svg plans jquery roadmap improve workflow thanks", "num": "2199", "d": "4/2015"}, {"title": "compatibility problem ajax supports well chrome browser", "body": "ie fit well chrome browser wellworking source code start ajax url data zipcode success function data weathertemp html data end", "num": "2198", "d": "4/2015"}, {"title": "jquery npm", "body": "would possible publish npm spits well", "num": "2197", "d": "4/2015"}, {"title": "wellformed soft error initial access xmldocument object firefox", "body": "jquery firefox initial find reference xmldocument object soft error wellformed firefox thrown captured released continuing execution soft error thrown jquery wellformed fiddlenet site wellformed open firefox monitor javascript errors javascript var xmlxmltxt temp alert parsexml xmlxmltxt find mytemp attr val", "num": "2196", "d": "4/2015"}, {"title": "val array assign values array different elements", "body": "using according docs last demo using array assign values array accordingly element returned selector however assigns instead see jsfiddle expect value instead value jquery actually workaround use slower", "num": "2195", "d": "4/2015"}, {"title": "slidedown slideup help", "body": "nt know place address issue anyone help whit question especially whit edit section trying use jquery slidedown slideup animate mine hidden div image fiddle sample linked thank", "num": "2194", "d": "4/2015"}, {"title": "break show hide toggle new module", "body": "lands cleave new module showhide could excluded needed", "num": "2193", "d": "4/2015"}, {"title": "toggleclass classname function", "body": "add new api first argument class name second function return boolean example surprised implemented yet almost methods accept second argument function", "num": "2192", "d": "4/2015"}, {"title": "element width opening page new tab chrome mac", "body": "originally thought chrome bug think could jquery related wanted post well need testing without jquery dependency sure using following code result inconsistent behavior opening page new tab using target blank example width timeout always correct output time chromium issue reference", "num": "2191", "d": "4/2015"}, {"title": "ajax calls wrong callback caused ajaxconvert false return", "body": "hi lately wrote code like found conole always outputs error even though request http status code nt calls success methord request ok", "num": "2190", "d": "4/2015"}, {"title": "incorrect object properties enumeration", "body": "affects objectprototype extended methods broken work try fix function replace lines", "num": "2189", "d": "4/2015"}, {"title": "ie", "body": "still working simplified sample ie iframe includes jquery library causes following unhandled exception throw javascript runtime error object nt support property method attachevent appears happen iframes ie may may tied edge mode may may tied external libraries underscore also included app repros issue lies line jquery source fix appears fairly simple changing check also check attachevent worked expected nt throw parent amp amp parentframeelement amp amp parentattachevent reopening old issue old bug system", "num": "2188", "d": "4/2015"}, {"title": "jquery ajax request headers", "body": "backbone application models sync server backbone app makes requests api needs add authorization token headers user logged system token allows api respond data present request respond debugging days backbone deemed jquery issue facing issue two routes application safari authorization header passed api server jquery backbone infact sending jquery output also tried changing ajaxsetup look like pass headers also give different result using safari get server however header place use safari safari seem happen using chrome firefox tue apr error pid client arrayn n host gt jcrawfordheytixcomn useragent gt macintosh intel mac os x khtml like gecko accept gt applicationjson textjavascript referer gt xrequestedwith gt xmlhttprequestn authorization gt token acceptlanguage gt enusn acceptencoding gt gzip deflaten cookie gt removed output connection gt keepaliven n referer tue apr error pid client arrayn n host gt jcrawfordheytixcomn useragent gt macintosh intel mac os x khtml like gecko accept gt applicationjson textjavascript referer gt acceptencoding gt gzip deflaten xrequestedwith gt xmlhttprequestn acceptlanguage gt enusn cookie gt removed output connection gt keepaliven n referer tue apr error pid client http get referer get chrome firefox tue apr error pid client arrayn host gt jcrawfordheytixcom connection gt keepalive cachecontrol gt accept gt applicationjson textjavascript xrequestedwith gt xmlhttprequest useragent gt macintosh intel mac os x khtml like gecko authorization gt token referer gt acceptencoding gt gzip deflate sdch acceptlanguage gt enus en cookie gt removed output referer tue apr error pid client arrayn n host gt jcrawfordheytixcomn connection gt keepaliven accept gt applicationjson textjavascript xrequestedwith gt xmlhttprequestn useragent gt macintosh intel mac os x khtml like gecko authorization gt token referer gt acceptencoding gt gzip deflate sdchn acceptlanguage gt enus en cookie gt removed output n referer see logging authorization token passed firefoxchrome safari second request", "num": "2187", "d": "4/2015"}, {"title": "paste events work correctly clipboarddata", "body": "html like content add paste event like using vanilla js alert paste text div however equivalent jquery version alerts paste text tested firefox safari working nonworking jsfiddle", "num": "2186", "d": "4/2015"}, {"body": "based previous experience console warnings people get really crazy get warning resolution fix coordinate work make resolution upgrade example jquery would make life better everyone sure practical would would really interesting explore", "d": "4/2015"}, {"body": "strongly valid uses warn", "d": "4/2015"}, {"body": "could see beneficial development build behind flag would upset jquery logging production build", "d": "4/2015"}, {"body": "deprecation warnings would okay feasible would request anything like present alternate build maybe chatty dev build could done active development notes", "d": "4/2015"}, {"body": "nt proposal jquery log browser detecting bad things perf perspective warning one jdalton gives regarding zepto good one", "d": "4/2015"}, {"body": "think explore nt want spam console method someone else called slow side note talk slow equal need prioritize user feels two hard parts detecting troublesome uses giving user realistic guidance action take thoughtful though serious thing drop warnings console yes basically feature request chromeffmicrosoft edgesafari devtools teams rather something jqueryjs implements", "d": "4/2015"}, {"body": "react kind expressive warnings amp errors really good learning curve upgrades love lots people spoken love think good habit really useful deprecation amp performance warnings educating users amp course occur production mode imo jquery completely failed educate developers far nonexplicit api amp missing occasions reducing api get close dom possible would time start insurance browser compat", "d": "4/2015"}, {"body": "imo jquery completely failed educate developers far sure means code nt education providing functionality via api docs provide guidance use apis jquery migrate plugin provides lot information practices apis nt recommended new code agree paulirish ca nt api bad feel bad message needs providing guidance fixing problems detected page runs", "d": "4/2015"}, {"body": "agree paulirish ca nt api bad feel bad message needs providing guidance fixing problems detected page runs yap agreed", "d": "4/2015"}, {"body": "mean polymorphic methods like instead amp makes difficult teach someone started frontend development jquery name amp code explicitly completely fuckedup value amp people introduced javascript jquery got easily confused conventions ecma standard methods amp jquery naming evolving convention like vs nt help people catchup spec instead adds confusion trying align dom spec naming amp returned values signature close possible educating people learn without jquery might dangerous hope ideally jquery longer necessary future offering people dom knowledge becomes necessity", "d": "4/2015"}, {"body": "nt want people use deprecate amp remove", "d": "4/2015"}, {"body": "kind info might also interesting devtools performance timeline tooling cc jsantell victorporof canuckistani", "d": "4/2015"}, {"body": "kind info might also interesting devtools performance timeline tooling cool thanks pinging may suitable depending complicated detection paulirish mentioned chrome may able measure time jank walk stack see jquery hidden checking", "d": "4/2015"}, {"body": "stucox general agree deprecatedremoved several apis years problem comes complex apis like behaviors edge cases cost us lot performance bytes andor confusing documentation want keep baby throw bathwater miketaylr definitely think devtools add value nt want spew console opinionated purityofcode reasons want give people better guidance something causing bad performance", "d": "4/2015"}, {"body": "thank opening issue passing first argument docs say handler function required passing object supported", "d": "4/2015"}, {"body": "timmywil yes know guard checks values strings objects seeing random errors js profiling tool caused whoknowswhatrandomexternalcode could avoided checks", "d": "4/2015"}, {"body": "talking", "d": "4/2015"}, {"body": "imho check would nt hurt performances events done right", "d": "4/2015"}, {"body": "case actually prefer error thrown make call going anything anyway general policy cases invalid input produce unexpected results thu apr albert casademont notifications githubcom wrote imho typeof string typeof object check would nt hurt performances events done right reply email directly view github", "d": "4/2015"}, {"body": "timmywil check falsy values perhaps remove check", "d": "4/2015"}, {"body": "agree tons party rubbish scripts browsers embed extensions virusestrojansmalware cause js profiling tools using errorception filled faux errors caused sorts external hacks afraid really ca nt control code example code guard check string value instead current code check would come handy", "d": "4/2015"}, {"body": "instead ps still sure separate case", "d": "4/2015"}, {"body": "acasademont function execute event triggered value false also allowed shorthand function simply return false couple usecases", "d": "4/2015"}, {"body": "point check presence function shorter nt really care guards sideeffect really supported either", "d": "4/2015"}, {"body": "nt see terrible thing lose bytes minified version mere bytes gzipped one polish edge cases already lots guard checks code choice thanks time", "d": "4/2015"}, {"body": "nt see terrible thing lose bytes minified version mere bytes gzipped one polish edge cases keep mind would multiply number fraction size public api never bytes already lots guard checks code guards invalid code rather support public apis parameter overloading", "d": "4/2015"}, {"body": "specific check api supports value shorthand check function part past perhaps illadvised retrospect attempts silently accept invalid combination arguments making enduser debugging difficult seeing random errors js profiling tool caused whoknowswhatrandomexternalcode could avoided checks random errors avoided way calls clearly made reason change would convert noops trying nt done lack error messages nt mean page working properly error messages may way diagnosing code trying", "d": "4/2015"}, {"body": "dmethvin thing error thrown event fired event binded makes hard debug tons events ca nt really know event bind caused bad param even code party script would fine exception thrown param function would ok instead silent fail", "d": "4/2015"}, {"body": "jquery ignore problem help debug wondering sets event element set conditional breakpoint looks non", "d": "4/2015"}, {"body": "dmethvin code happening ca nt using cool reporting tool catches js errors customers see one stack traces get clue stack bound event stack provides info calls led fire event hate error really ca nt much error time eventbinding would come handy", "d": "4/2015"}, {"body": "building custom jquery great add whatever want check bad values throw error also good monitoring errors best practices jquery discarding bad inputs ca nt throw error every misuse api takes many bytes", "d": "4/2015"}, {"body": "okay since question nt answered order clutter discussion open pull answer matter", "d": "4/2015"}, {"body": "precisely trying big fan custombuilt libs suggest changes upstream understand point end discussion thank markelog change consistent opinions posted noguardsifnotabsolutelynecessary policy bytes less minified version p", "d": "4/2015"}, {"body": "yeah goes infinity recursion execution since passed argument funarg jquery constructor feeling receive ticket like ca nt find though technically speaking function acceptable argument nt makes sense add guard sure timmywil", "d": "4/2015"}, {"body": "markelog already rejected", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "hmm sorry nt see issue try fun report", "d": "4/2015"}, {"body": "thank opening issue multiple versions jquery page recommended allowed like see logs versions jquery currently page think best done plugin something like", "d": "4/2015"}, {"body": "thank opening issue inconvenience regrettable two issues fact included mistake files meant npm bower sorry confusion fixed agree source map url however issue fixed wishing took source map url release missed regardless regret future releases include source map url", "d": "4/2015"}, {"body": "svenackermann note happens open devtools users affected developers inconvenience nothing serious", "d": "4/2015"}, {"body": "documentation jquerymap nt say method takes string passing one case method returns change pass correct type cases", "d": "4/2015"}, {"body": "change also breaks datatables following code", "d": "4/2015"}, {"body": "fixed plugin since never supported strings", "d": "4/2015"}, {"body": "nt disagree plugin fix incorrect usage minor point release jquery introduce backwardsincompatible change seeing breaks popular plugin countless codebases rely previous", "d": "4/2015"}, {"body": "drarok technically speaking semver describes relation public api versions talking undocumented behavior therefore semver nt apply unfortunately problems unavoidable people nt remember possible method signatures nt check docs every use leads sometimes relying undocumented behavior change make even patch releases may break invalid use cases always say semver hint test projects every library upgrade even upgrade newer patch release thus question broke plugin uses undocumented apis incorrectly guess almost always break something much impact breakage may eg popular plugin etc anyone reported issue patch pr likely update patch avoid issue done released amp rereleased make newest jquery amp datatables work two options work around jquery amp release new jquery versions amp fix datatables amp release new datatables version whatever happens need update one libraries anyway make work case rather datatables fixed incorrect use jquery api report issue public bug tracker could post link say work around amp release new patch update lot popular plugins relied behavior far know one imo fix side", "d": "4/2015"}, {"body": "well said mzgol would quite uproar us another patch release support undocumented behavior", "d": "4/2015"}, {"body": "posted problem forums see mostly paid product reinforces view fix", "d": "4/2015"}, {"body": "fix committed datatables nightly version date change passing string bug nt pick worked jquery nt notice completely concur change required jquery see mostly paid product reinforces view fix datatables mit licensed", "d": "4/2015"}, {"body": "datatables mit licensed sorry quick glance site enough apparently passing string bug nt pick worked jquery nt notice fully understand issues unavoidable unfortunately thanks quick reaction", "d": "4/2015"}, {"body": "hm add behaviour migrate", "d": "4/2015"}, {"body": "hm add behaviour migrate seems like good idea", "d": "4/2015"}, {"body": "would say care changes documented behavior", "d": "4/2015"}, {"body": "lot undocumented behaviour undocumented methods example", "d": "4/2015"}, {"body": "duplicate", "d": "4/2015"}, {"body": "changing attribute property dom element use info", "d": "4/2015"}, {"body": "thanks lot answer know difference attr prop helpfull", "d": "4/2015"}, {"body": "indeed removing lines nt break including ff tests added issue exist ff longer reproducible modern browsers would like sends us pr cc rwaldron", "d": "4/2015"}, {"body": "code still acts defense form aliasing either drop support add unit test", "d": "4/2015"}, {"body": "change fixing bug removing feature smilingimp variable aliased test case could nt use form element arraylike object iterate collection", "d": "4/2015"}, {"body": "variable aliased test case could nt use form element arraylike object iterate collection nuhuh check console", "d": "4/2015"}, {"body": "must missing something extra console logs", "d": "4/2015"}, {"body": "never supported usage fact always closed issues like see recent one", "d": "4/2015"}, {"body": "agree closing happy bug aliasing problem hard solve", "d": "4/2015"}, {"body": "fine removing", "d": "4/2015"}, {"body": "working around form aliasing hard especially general case possible length also matter fine nt merits wontfix mention analogous manipulation", "d": "4/2015"}, {"body": "position include margins kind reasonable margin part element ur example victim div locates left top left margin top margin border left top since asking position border victim", "d": "4/2015"}, {"body": "alburthoffman thank explanation though still concern different behaviors method different browser view using jquery shall exempt caring browser facing behavior method shows asymmetry mentioned api documentation case obtain correct result switching method method semantics act switching shows compatibility concern suggestion method reporting value browsers either subtracting margin value chrome follow chrome way cases", "d": "4/2015"}, {"body": "report value though need ignore margin body chrome really margin body chrome rationalize ignoring value set css", "d": "4/2015"}, {"body": "depends browsers tested chrome safari firefox left value different marginleft set require lots browser version checking function return value", "d": "4/2015"}, {"body": "seems like way pages would fix css reset normalize seems consistent firefox btw", "d": "4/2015"}, {"body": "alburthoffman think webkit based guess checking phrase webkit navigatoruseragent enough dmethvin honor official reply mentioned problem chromeonly margin ignored set chrome user comes side effect auto browsers like firefox interprets directly horizontally center div chrome calculating margin left drop auto give concrete left margin div firefox chrome reports left offset possible overload method example call ignore margin totally reports left offset left border see case left offset want know definitely gap left border div left boundary page excluding margin", "d": "4/2015"}, {"body": "suggesting set margin zero browsers works fine", "d": "4/2015"}, {"body": "dmethvin still see discrepancy result pane sufficiently wide even latest fiddle bug firefox marked cantfix side least twice", "d": "4/2015"}, {"body": "fixed firefox caused windowgetcomputedstyle ff function doesnot return caculated margins margins set auto one problem find way check margins set auto ff clues right", "d": "4/2015"}, {"body": "fixable another awesome hack style swap might big right instead may get even bigger almost certainly slower multiple reflows", "d": "4/2015"}, {"body": "awesome curious swap part need check margintop margintop auto right", "d": "4/2015"}, {"body": "yes course got carried away copypasta", "d": "4/2015"}, {"body": "guess favor aligning behavior swap unfortunate limit usage one case", "d": "4/2015"}, {"body": "also supportmarginauto calculated jquery starts nt need test every time position called", "d": "4/2015"}, {"body": "look like linter errors code tested via jshint warnings pasted restrictive jquery code base rules nothing wrong jquery applying custom restrictive linting rules may always report lots warnings project", "d": "4/2015"}, {"body": "hmm maybe comment could applied code", "d": "4/2015"}, {"body": "running jquery mode never force code strict mode nt tested jquery run strict mode firefox complaining prevents issues strictnonstrict mixing", "d": "4/2015"}, {"body": "nt know compiled seamonkey sources cflags cflags ddebug dndebug cxxflags cflags configure disableoptimize please could answer original bug report suggest mozilla developers drop habit", "d": "4/2015"}, {"body": "nt jquery bug even sure would report since nt test case jquery working properly browsers support custom compiled seamonkey nt working properly need debug report appropriate place", "d": "4/2015"}, {"body": "would suspect would great performance optimization older browsers css selector given id first searches instead executing pseudo selector code fact sizzle jquery selector engine unfortunately optimization disabled ie lt browsers broken methods return elements name attributes equal desired id still current behavior probably excessive opened sizzle issue address", "d": "4/2015"}, {"body": "bug selector inaccurate fixed version", "d": "4/2015"}, {"body": "fixed version mine", "d": "4/2015"}, {"body": "nope child selector without every cibled descends least edit indeed nt saved fiddle revamped apologies", "d": "4/2015"}, {"body": "thank selector gt works selector inaccurate wrote better selector probably divclick title click nt suppose direct descendants thank time", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "agreed", "d": "4/2015"}, {"body": "removed milestone since github issues nt distinguish closed fixed closed invalidduplicateetc need remove milestone invalid tickets incorrectly included changelog", "d": "4/2015"}, {"body": "personally usage side effect sorts collection usually end make clear people nt familiar side effect name change nice", "d": "4/2015"}, {"body": "sgtm", "d": "4/2015"}, {"body": "woot", "d": "4/2015"}, {"body": "thank opening issue correct behavior may unexpected selector working documented behavior differs firefox chrome chrome reports zero width zero height technically means visible according docs visible elements width height greater zero fact hidden elements visible content seem strange way chrome importantly cost working around would far greater willing deal nt think edge case selector behaves way unexpected would prefer keep selector simple possible let edge cases covered means", "d": "4/2015"}, {"body": "seems like chrome bug safari well", "d": "4/2015"}, {"body": "seems like chrome bug safari well yes", "d": "4/2015"}, {"body": "test case jsbincom browserstackcom moment", "d": "4/2015"}, {"body": "timmywil thank quick reply first like apologize file duplicate issue seems least one earlier issue reporting problem includes solution also nt seem strange visible elements bleed visible child elements edge case degree perhaps note documentation imo people use jquery get results different browsers matter may even realize selectors sometime behave differently", "d": "4/2015"}, {"body": "funny thought remembered issue like came play could nt find looking old tracker maybe crashing sites dunno selectors nt good idea make browser lot work determine answer layout changed many cases track information ways lot faster", "d": "4/2015"}, {"body": "dmethvin old shimonenator already found case comes mind soontobemerged uses getclientrects decide offset meaningful fact work particular leaves open redefinition", "d": "4/2015"}, {"body": "visible hidden selectors nt good idea make browser lot work determine answer layout changed many cases track information ways lot faster know love say much possible really helpful developers writing general purpose code performance problems irrelevant many use cases", "d": "4/2015"}, {"body": "fact work particular leaves open redefinition simple nt cost much let", "d": "4/2015"}, {"body": "scottgonzalez think meant following current implementation functional method would thus seems performant solution would fall onto either case always executed little complicated due old opera behavior", "d": "4/2015"}, {"body": "discovered another solution pr approved seems line current discussion performance additional consideration added", "d": "4/2015"}, {"body": "upon deeper analysis would behavior change makes strongly recommend git builds include defining essentially releases forward use logic like fix issue would refine released logic revert", "d": "4/2015"}, {"body": "less elements faster gets best perf increase big amount elements performance unnoticeable expansive call ie even without deduplication without sorting still sensitive difference worth please reopen objections", "d": "4/2015"}, {"body": "please post questions stack overflow jquery forums bug report", "d": "4/2015"}, {"body": "think native behaviour", "d": "4/2015"}, {"body": "elements closing tags", "d": "4/2015"}, {"body": "correct void elements therefore prohibited end tags", "d": "4/2015"}, {"body": "timmywil yeah like elements parses differently case incorrect html end result unpredictable", "d": "4/2015"}, {"body": "plaindom equivalent gives", "d": "4/2015"}, {"body": "weird caused preremoval boolean property setting rules around select elements boolean properties quite complex surprised see browser divergence maybe take special boolean treatment", "d": "4/2015"}, {"body": "yes already issue open", "d": "4/2015"}, {"body": "please ask help forums jquery irc channel", "d": "4/2015"}, {"body": "jsfiddle like way found bug ask fault plugin used realize fault jquery continue make issue google chrome directly try put nt works neither also work firefox bug occurs remove okay think", "d": "4/2015"}, {"body": "right submited issue chrome closing issue thanks", "d": "4/2015"}, {"body": "right submited issue chrome could post link issue people interested", "d": "4/2015"}, {"body": "wish could submitted browser help gt report issue menu nt give url issue tracking checked chromium bug list official build seems separate repo hear back update thread interested look stackoverflow thread infos google chrome bug tracking", "d": "4/2015"}, {"body": "wish could submitted browser help gt report issue menu nt give url issue tracking generally prefer submit bug reports manually builtin reporter mostly useful report bugs related purely official chrome build chromium webrelated issues generally concern whole chromium code base", "d": "4/2015"}, {"body": "btw found related question stackoverflow someone said call constructor simply expect get new object get reference one pass opinion sounds reasonable nt convince us consider constructor strict oo way object wrapper provide api entrance", "d": "4/2015"}, {"body": "set elements jquery object nt memory query produced success example would imply finally confused elem return elem directly already jquery object purpose creating cloning new object many things could done example explicitly say supported throw explicit error return original object return new set elements nt link original discussion last option chosen seems like perfectly cromulent choice really forum question since bug feature request", "d": "4/2015"}, {"body": "understanding always passing jquery instance special handling treated exactly array elements", "d": "4/2015"}, {"body": "recall discussion time whether passing jquery object valid talking api behavior choice implementation", "d": "4/2015"}, {"body": "dmethvin curious rationales behind choice especially zepto seems choose diff behavior", "d": "4/2015"}, {"body": "dmethvin thanks reply really forum question since bug feature request yes core development team answer question mentioned people jquery forum guess talking api behavior choice implementation problem current choice works fine wan na known reason choose current behavior", "d": "4/2015"}, {"body": "adding new custom selectors jquery performance better stay standard css selectors also see discussion original ticket positive votes idea however absolutely set using easily create plugin sizzle", "d": "4/2015"}, {"body": "thank opening issue think safely say get answers team best done plugin want add selector extensions sizzle part current future selector specs", "d": "4/2015"}, {"body": "dmethvin jinx", "d": "4/2015"}, {"body": "nice thought nt appear work arraylike reason merge function also avoiding implementation actually incurs twice", "d": "4/2015"}, {"body": "using quick test seems work chrome unless missing something course", "d": "4/2015"}, {"body": "may able rely vm trying using object quick untested thought", "d": "4/2015"}, {"body": "jaubourg code comment directly definition pushapply arraylike throws ancient webkit", "d": "4/2015"}, {"body": "question ancient", "d": "4/2015"}, {"body": "bad year ago still percent android", "d": "4/2015"}, {"body": "also phantomjs still trying kind support hopefully restrict jquery", "d": "4/2015"}, {"body": "sob", "d": "4/2015"}, {"body": "thanks lot see guys really appreciate answer", "d": "4/2015"}, {"body": "known issue addressable fixed meantime recommend escaping characters attribute values", "d": "4/2015"}, {"body": "real usecase since docs see may html string dom element array dom elements since would array dom elements bytesize perf hit", "d": "4/2015"}, {"body": "necessary intercepted html replaced empty string", "d": "4/2015"}, {"body": "ca nt use sure stackoverflow answer creating form element first place", "d": "4/2015"}, {"body": "well meant data stored javascript variables elements work nt think applied since elements serialize case challenge much getting string ready send actually send way handled ajax call real form submission ie response likely html page need rendered browser whichever url answer generates form order make native browser rather jqueryjavascript send data", "d": "4/2015"}, {"body": "would say scores seems much like plugin", "d": "4/2015"}, {"body": "see mean could certainly work plugin although would nt cause harm core either except admit hundred bytes probably around minimized insignificant know suppose main question generally useful let go points page require access jquery internals nt suppose jquery benefit unless course future functionality would use sort related dom operations actually acts way yield formdata control jquery back dom makes sense currently served official plugin although one could made change existing api nt go best practice afaik suppose reason came felt counterintuitive functionality cumbersome achieve creating form input elements faster cleaner way within jquery suppose plugin", "d": "4/2015"}, {"body": "inside plugin nobody sees cumbersome people need use plugin people nt need wo nt pay since nt build smilingimp", "d": "4/2015"}, {"body": "pretty bogus jsperf nt loops inside tests like jsperf looping get measurable test also lot code outside actual calls could taking time example work create string like know jsperf jquery performance post question forum stackoverfow", "d": "4/2015"}, {"body": "second request", "d": "4/2015"}, {"body": "thanks report svg support long listed wo nt fix document along links relevant discussions elaborate position", "d": "4/2015"}, {"body": "little disappointing position taken svg gaining widespread interest use though nt html dom svg attributes still accessible dom via vanilla js tickets shown years ago", "d": "4/2015"}, {"body": "years later might time reconsider jeresig thanks", "d": "4/2015"}, {"body": "exactly would like see added looked libraries like raphael designed support svg keep mind svg html despite fact look similar represented strings", "d": "4/2015"}, {"body": "detecting hasclass addingremoving classes would hugely helpful ux interaction boon yes know raphael snapsvg let say using different animation library add snap look classes add performant click events particularly already loading jquery feels painful redundant realize request might large scope yes svg nt html possibility jquery could add feature worth discussion everyday usage svg web fastgrowing adding kind support potential large payoff community", "d": "4/2015"}, {"body": "title request better svg support still super vague would pretty hard make pull request say large scope sounds like asking svg dom supported jquery methods asking class operations", "d": "4/2015"}, {"body": "better svg support overall would outstanding say might large scope anticipating could heavy jquery support yes thanks clarifying specifically asking add class operations svg attributes would huge ux boon change way could handle interaction svg moving forward", "d": "4/2015"}, {"body": "get board class manipulation fact recently updated sizzle guarantee shorthand class selection others said ecosystem different svg got added wontfix list", "d": "4/2015"}, {"body": "class manipulation svg elements", "d": "4/2015"}, {"body": "want class names draw line agree fewer concerns well two ways afaik one switch property attribute patchwelcome feature ticket approach idea switch docs use approach avoid forked code paths another support api would implemented parallel existing code since several currently supported browsers android still implement pr caitp declined land specifically concern svg scope creep someone asks svg support hey fixed support svg fix guilt trip gon na back us right smilecat eg much much", "d": "4/2015"}, {"body": "think valid concern performance classlist buggy implementations attribute approach lot simpler faster", "d": "4/2015"}, {"body": "ok sounds like best way switch classname class attribute cursory look tells references attributesclassesjs file would correct try let svg support snowball huge problem guys", "d": "4/2015"}, {"body": "dmethvin classlist supported svg nodes ie way make work use attribute full svg support might bloat jquery lot times hear people sth nt work jquery svgs classes attributes already sortof work right think nice support one thing planning patch nt found time yet", "d": "4/2015"}, {"body": "topic longer decline patches svg elements perhaps remove wo nt fix list otherwise say one thing opposite topic like case shadow dom support svg decrease performance increase size complicate code user operates svg elements js sooner later would need cssclasses use special libs appropriate way imho", "d": "4/2015"}, {"body": "topic like case shadow dom support svg decrease performance increase size complicate code markelog found actually case using idl attribute methods identical work vm fact property merely reflects attribute although reflection works differently svg noted nonnormatively html spec classname classlist idl attributes defined dom specification reflect class content attribute people might ask please use createelementns depending context something could incur performancecomplexity costs class api issue pretty easy fix series line changes swap classname getsetattribute adding svg cases class api tests", "d": "4/2015"}, {"body": "topic longer decline patches svg elements perhaps remove wo nt fix list otherwise say one thing opposite appears svg limited class support topic like case shadow dom support svg decrease performance increase size complicate code user operates svg elements js sooner later would need cssclasses use special libs appropriate way imho", "d": "4/2015"}, {"body": "please see caitp comment class operations large part ux interaction people need lot yes indeed using snap gsap enhancement seems within scope easy define boundaries", "d": "4/2015"}, {"body": "change simple enough probably wo nt hurt performance size simplicity wanted past concern users want svg supported across board going happen soon leave svg wontfix list jquery remain html dom library leave hard parts working svg elements libraries focus said ability work classes svg minor utility could provide disproportional benefits users nt need anything class manipulation would imagine happens pretty often", "d": "4/2015"}, {"body": "version jquery use seems basic example work everywhere need test case proceed", "d": "4/2015"}, {"body": "currently planned nt proper infrastructure place time first supported version npm versions thirdparty time took ownership npm package ca nt update instead nt encourage use outofdate versions migrating simple", "d": "4/2015"}, {"body": "tried ended getting stack overflows time july went using crashed worked fine", "d": "4/2015"}, {"body": "jquery supports experience issues please try create test case amp report bug us really need ca nt specify nt think want encourage using older versions library", "d": "4/2015"}, {"body": "proxy npm github links nogo try get small test case nt think able happened site lot happening keep source code vcs thanks response", "d": "4/2015"}, {"body": "guess could publish huge demand people fine upgrading great able find culprit timmywil think", "d": "4/2015"}, {"body": "agreed preferred route would fix issues", "d": "4/2015"}, {"body": "mzgol timmywil see reproduce error", "d": "4/2015"}, {"body": "duplicate jquerysizzle harmless already fixed upstream resolved next jquery release", "d": "4/2015"}, {"body": "invoked setter attempts apply argument element collection independently specifically affects checkboxes radio inputs select elements update boolean instead string based whether element value appears input workaround fact correct way pair array values elements collection created jqueryapijquerycom clarify documentation", "d": "4/2015"}, {"body": "see thanks clarifying nt quite clear docs although quite tired still reason implement behavior treat input types differently expect desired behavior would apply element array input rather inputs would cool also consistent edit sorry misunderstood reply current behavior different wanted bit convoluted docs could clearer said issue ca nt readily extended string inputs indeed tired", "d": "4/2015"}, {"body": "stackoverflow right place reporting jquery bugs clear repro case", "d": "4/2015"}, {"body": "understand position increase weight jquery much nt seen people complaining feature guess something many people wanted", "d": "4/2015"}, {"body": "function args every method nt really make code lot shorter easier understand use cases", "d": "4/2015"}, {"body": "dmethvin use everywhere need also think useful aurelioderosa think implement need lines code much", "d": "4/2015"}, {"body": "redexp nt think need wish nt requires code inside jquery worth also performance killer way defined example html function passed current html content may needed expensive retrieve", "d": "4/2015"}, {"body": "redexp rewrite jquery favor", "d": "4/2015"}, {"body": "know guys stuff without problems talking api consistency attr prop css", "d": "4/2015"}, {"body": "api consistency got mess something added api making operation easier api", "d": "4/2015"}, {"body": "well everybody think like close issue", "d": "4/2015"}, {"body": "defense redexp function core part nt normally function save lines everywhere many case user give function etc", "d": "4/2015"}, {"body": "yes complexity due mess support incredibly complex set input arguments runtime", "d": "4/2015"}, {"body": "bad thing concept pass function instead value one reasons love library", "d": "4/2015"}, {"body": "incorrect happens even without jquery test case sounds like bug chrome", "d": "4/2015"}, {"body": "unfortunately time try without using jquery document ready features place jquery could failing otherwise would chrome bug", "d": "4/2015"}, {"body": "works test case consistently reproduce becomes available revisit", "d": "4/2015"}, {"body": "timmywil test incomplete must open link new tab using target blank", "d": "4/2015"}, {"body": "link", "d": "4/2015"}, {"body": "jsfiddle poor site tests wraps everything iframe even lite mode jsbin better", "d": "4/2015"}, {"body": "think easy enough reproduce create simple html file locally fail thu apr pm micha\u0142 go\u0142\u0119biowski wrote jsfiddle poor site tests wraps everything iframe even lite mode jsbin better reply email directly view github regards mike", "d": "4/2015"}, {"body": "reproduce either jquery latest please make sure issue exists latest version jquery create test case jsfiddle jsbin", "d": "4/2015"}, {"body": "yes issue exists jquery sorry founding simulate ajax request list code click document ready function suggest click function alert hello ajax url apiechojson datatype json data dest hello success function data consolelog success error function data consolelog error apiechojson ajax request returns wright data even though wright json formate output error think confused jqueryajax document wrotes success type function anything data string textstatus jqxhr jqxhr function called request succeeds function gets passed three arguments data returned server formatted according datatype parameter datafilter callback function specified string describing status jqxhr jquery xml object jquery success setting accept array functions function called turn ajax event", "d": "4/2015"}, {"body": "request data must valid json request fail go error callback even http status could nt otherwise since jquery supposed deliver converted json success callback parameter example", "d": "4/2015"}, {"body": "ok tks dmethvin newer jquery read document function called request succeeds think success methord called request succeeds take http status code", "d": "4/2015"}, {"body": "nt add enumerable properties", "d": "4/2015"}, {"body": "thank", "d": "4/2015"}, {"body": "try jquery code nt exist good idea test latest version reporting bug chance might already fixed", "d": "4/2015"}, {"body": "happened backbone collection trailing url safari like issued found actual request made authorization code attached request headers removing trailing solved issue", "d": "4/2015"}, {"body": "jquery case looking normalized per docs use want original native event", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "closing lack input answer question reopen", "d": "4/2015"}, {"body": "", "d": "4/2015"}, {"body": "reason ever supported api", "d": "4/2015"}, {"body": "lodash hit lodash managed avoid naturally without targeting issue specifically switched checks helper function islength perf hit actually spoke soon seems lodash users mistaken reporting issue resolved", "d": "4/2015"}, {"body": "digging looks like solution simple storing doable workaround seems avoid uglifyjs transformations see", "d": "4/2015"}, {"body": "discussion decided go tweak approach remove concerns minifiers equation using helper produces function like", "d": "4/2015"}, {"body": "fyi fixed ios", "d": "4/2015"}, {"body": "chrome getting following error need something avoid", "d": "4/2015"}, {"body": "bug datatables code please report issue also see previous report issue", "d": "4/2015"}, {"body": "mzgol report issue also research asking question next time thanks", "d": "4/2015"}, {"body": "fix committed datatables nightly version date change apologies error", "d": "4/2015"}, {"body": "johnrodney would work positions", "d": "4/2015"}, {"body": "well right equals left width bottom top height maybe implement animation like firefox top bottom passed animate top given height topbottom seems annoying real issue animating css values nt initialized allows undefined behavior leads inconsistent browser interpretation far tell", "d": "4/2015"}, {"body": "hmmm imho bug timmywil something incoherent want first set element size right try put inner border side try put element large start left termine right incoherent remove border see bug zoom replace see bug outline inner oh crap nt test firefox saw tiny visual bug actually google chrome thought bug", "d": "4/2015"}, {"body": "issue difference behavior ff removing border nt alter behavior test case confirmed works reason adding right bottom values animation", "d": "4/2015"}, {"body": "per today meeting agreed like try changes see goes let nail places like see change", "d": "4/2015"}, {"body": "ie seems support credentials url tested locally seems true nt work ie chrome ff currently using set headers method well mitigate problem changes method get options however yes option let jquery set headers would nice maybe even default true nt work ie otherwise madlittlemods commit seems work think however function could achieved much simpler according mdn source", "d": "4/2015"}, {"body": "mattdimu clear nt make changes commits please look names replies anshuxlr posted link code", "d": "4/2015"}, {"body": "yeah sorry meant anshuxlr ofc", "d": "4/2015"}, {"body": "yes already couple places stopped guarding browsers missing one go well", "d": "4/2015"}, {"body": "updated title accuracy suggested implementation", "d": "4/2015"}, {"body": "sounds like blocker", "d": "4/2015"}, {"body": "cburschka issue whenever call toggle hiding aspect works fine however toggling back show hidden content inline style left causes content appear originally cburschka worked around explicitly resetting element back inline animation done", "d": "4/2015"}, {"body": "may silly question keep simple", "d": "4/2015"}, {"body": "niutech overwriting display style kill cascade foo display inlineblock lorem ipsum worse yet preexisting inline styles blowing away well lorem ipsum use different attribute managing visibility element state stays independent styles", "d": "4/2015"}, {"body": "well released update autofix well", "d": "4/2015"}, {"body": "right", "d": "4/2015"}, {"body": "issue sitting bit julianshapiro happen hook velocity jquery tests", "d": "4/2015"}, {"body": "discussed meeting sorting guaranteedunique collection nt seem high enough value justify degrading performance without realworld use case", "d": "4/2015"}, {"body": "change landed", "d": "4/2015"}, {"body": "would like add since nt see mentioned anywhere css height css width also rounding values yes caused code going special hook instead works disconnected nodes see quite lot code btw original issue mentioned hidden elements well code also works around number box sizing ie bugs", "d": "4/2015"}, {"body": "currently nt ie environment test", "d": "4/2015"}, {"body": "jsfiddle broke jquery edge urls apparently jquery compat edge amp jquery edge swapped see better use jsbin edit jsfiddle fixed", "d": "4/2015"}]