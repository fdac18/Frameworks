[{"title": "approutertrigger firing", "body": "approutertrigger route contactindex function consolelog triggered see", "num": "590", "d": "8/2011"}, {"title": "collectionadd affects mutiple instances", "body": "code two instances collection affected add method var model backbonemodelextend defaults data null var models backbonecollectionextend model model var collection backbonemodelextend defaults data new models var collections backbonecollectionextend model collection var new model data var new model data var new model data var new model data var new collection var new collection var data data consolelog data length data add data add consolelog data length guillaume", "num": "589", "d": "8/2011"}, {"title": "collections delegate model parse resetadd", "body": "backbone allows ability define parse function data loaded server however parse specified default noop occurs data loaded collections models entirety would make sense delegate model parse first entering collection", "num": "588", "d": "8/2011"}, {"title": "backbonemodelset invalid operand attrs line", "body": "error occured modelsave server return number value instead object think need check type attrs data processing ps sorry eng", "num": "587", "d": "8/2011"}, {"title": "option use sugarjs instead underscorejs", "body": "wondering might possible offer version backbone depends sugarjs instead underscorejs nt done real investigation easy might yet something would completely get way ie something underscore sugar nt", "num": "586", "d": "8/2011"}, {"title": "backbonejs backboneviewdelegateevents problem", "body": "use backbonejs project found problem delegate events soure code backbonejs thisel unbind delegateevents thiscid found unbind ca nt work lead event function binded repeated whenever render view event function binded without unbind first changed thisel unbind worked successfully confusing serious issue backbonejs thanks ps went jquerycom found namespace using unbind bind delegate like undelegate namespace", "num": "585", "d": "8/2011"}, {"title": "using backbone noconflict jquerynoconflict true", "body": "followup stackoverflow question since getting word thinking issue way achieve currently backbone include jquery hardcoded", "num": "584", "d": "8/2011"}, {"title": "model inconsistent state change attribute events triggered", "body": "assume model attributes b c currently backbone modelset method change attribute events triggered soon attribute changes case example attributes change following happen value attribute change event change triggered model value attribute b change event change b triggered model value attribute c change event change c triggered model events change change b leave model inconsistent state attributes changed yet model inbetween state previous new states assume bound function accessmodel event change model accessmodel needs access attribute c model case time accessmodel called event change triggered attribute changed attribute c yet changed obviously incorrect behaviour better alternative would trigger change attribute events changed applicable attributes", "num": "582", "d": "8/2011"}, {"title": "keypath based observable batmanjs", "body": "example major problem backbonejs moment various imperfect work arounds backbonejs assumes flat json structure allows observe changes single fields however document store backends becoming fashionable returned json heavily nested kind nested observer framework required", "num": "581", "d": "8/2011"}, {"title": "pushstate empty route back button breaks", "body": "using backbone got backbonejs application using pushstate one routes empty using back button application jumps correct route front route executed right corresponding route confirm latest chrome ff browsers tracked error line result matched route executed empty hash unexpected front route triggered clearly bug empty routes supported sure fix purpose fallback call dropped", "num": "576", "d": "8/2011"}, {"title": "collection remove function bug", "body": "code seems copied add code bug remove models part thisremove models l options could change statement smallest change change l thisremove models options remove model list models set pass silent avoid firing event every model removed remove function models options isarray models var l modelslength lt l thisremove models l options bug change thisremove models options else thisremove models options return", "num": "574", "d": "8/2011"}, {"title": "add save destroy set collections brainstorming", "body": "want bulk actions models proposal javascript collectionfetch var cfiltered collectionfilter function item return social itemget type cfilteredsave type socialmedia data sended two ways think array id data want change array model independent changes applied think", "num": "571", "d": "8/2011"}, {"title": "backbone nt work properly server without addition", "body": "please change line var rootjquery rootzepto var rootjquery rootzepto require jquery enable backbone server chek maurice", "num": "564", "d": "8/2011"}, {"title": "model save validation okmissing server fails new data present", "body": "save new data model validation success missing new data set model calling server fails new data saved model", "num": "563", "d": "8/2011"}, {"title": "backbonehistorystart store initial page", "body": "using found initial page stored backbonehistorystart used subsequent pages fine fix added thisiframedocumentopen close iframe added seems fixed", "num": "561", "d": "8/2011"}, {"title": "change event triggered always set value changes", "body": "proposal right selected attribute model set true call modelset selected true change event emitted set false think plain bad somebody sets field want know matter actual value changed least write clean code relying change events otherwise introduce events random fields set make sure change event emitted case implementing tabs backbone wanted user able click already selected tab whole thing broke backbone started comparing value existing value sending change events reminds mysql also nt return information updated row value set way ca nt figure row matching query select update insert instead update insert let know think", "num": "559", "d": "8/2011"}, {"title": "add extra arguements callback function bind", "body": "hi new backbone question var ships new backbonecollection shipsbind add function ship alert ahoy shipget name shipsadd name flying dutchman name black pearl example ship model collection ships would like know pass extra argument callback function something like shipsbind add function ship alert ahoy shipget name something using thanks", "num": "558", "d": "8/2011"}, {"title": "override tostring ie", "body": "order consistently enumerate properties browsers nt yet support objectgetownpropertynames need add code extend method methods enumerate var specialproperties constructor hasownproperty isprototypeof propertyisenumerable tolocalestring tostring valueof var specialpropertiesareenumerable tostring true propertyisenumerable tostring var inheritproperties function properties source destination add enumerable properties var p properties propertieshasownproperty p destination p properties p see", "num": "556", "d": "8/2011"}, {"title": "nt return value parent constructor call", "body": "inherits function proposed fix note return statement used current code vs proposed fix constructor function called without new never return value even users avoid return values constructors think least one bug might cause least one nice feature would allow code changed avoid return value example leverage inheritance backbone currently must extend backbonemodel collection view etc however wanted define minimal set classes extend object might try let anything extended objectextend backbonemodelextend namespace var acme define classes acmeperson objectextend acmewarrior acmepersonextend acmeninja acmewarriorextend instantiate var mary new acmeperson var new acmewarrior var john new acmeninja unit tests ok mary instanceof object amp amp mary instanceof acmeperson amp amp maryconstructor acmeperson ok instanceof object amp amp instanceof acmeperson amp amp instanceof acmewarrior amp amp willconstructor acmewarrior ok john instanceof object amp amp john instanceof acmeperson amp amp john instanceof acmewarrior amp amp john instanceof acmeninja amp amp johnconstructor acmeninja unit tests fail return statement used however remove return parent constructor call tests pass words change made also use backbone define simple class inheritance without using backbonespecific classes", "num": "555", "d": "8/2011"}, {"title": "event model validate completes", "body": "issue well feature request nt know post anyway unless im missing somewhere would really nice event fired model validate method completes im aware callers pass error callback options parameter model set method however im looking handy way letting model know validate completed im end validate method get behavior note need async validate returns otherwise attributes set validate function validate windowsettimeout thisvalidatecomplete thanks kim andersen", "num": "554", "d": "8/2011"}, {"title": "level abstraction top jqueryzepto", "body": "possible good idea add level abstraction top jqueryzepto dependency askingproposing nt want use jquery make backbone work instance ender kb provides almost api jquery provides functionality backbone requires problem backbone nt support way substitution jqueryzepto", "num": "551", "d": "8/2011"}, {"title": "proposed change backboneviewmake", "body": "create new view like backbone create new div element id someid already dom element id backbone would attach view someid think optimal behavior possible override el option someid available moment view object creation propose little change make method javascript make function tagname attributes content addition undefined typeof thisid var eelem thisid eelemlength gt return eelem end addition", "num": "550", "d": "8/2011"}, {"title": "bug model constructor", "body": "hi sure whether post post ggroup first confirm bug getting webpage error details user agent compatible msie windows nt net clr net clr net clr media center pc timestamp tue aug utc message object nt support property method line char code uri js code var app app models data global variable hold backbone objects approuter models collections backboneemulatehttp true appmodelsstudent backbonemodelextend initialize function bindall test productadd productfetch productfetchsuccess thisbind add thisadd thisbind change thistest urlroot datastudent error occurs fetch call whether pass options argument debugged problem error occurs ajax success callback backbonemodel constructor calls refers backbonecollection backbonemodel set method raises error call stack error occurs regardless ajax response json server ixstudent", "num": "549", "d": "8/2011"}, {"title": "maps collections", "body": "hi seems backbone collections currently supports arraylist models wondering collections could used allow maps instead one could reason using maps would keys could used look collections quickly instead use filter time thanks", "num": "548", "d": "8/2011"}, {"title": "chrome devm bbhistorystart error", "body": "throws following error uncaught typeerror object method bind auramodelitembackbonemodelextenddefaultsid took figure", "num": "547", "d": "8/2011"}, {"title": "nt wrap views using templates", "body": "problem methods end something like template like description template gets inserted default tend write templates fullyformed requiring extra wrapper elements presents problems wrapped div producing invalid markup another unneeded element events verbose instead one solution would exclude template backbone construct etc properties big benefit using templates mixed view logic write like normal html solution suggestion would new property appviewsasset backboneviewextend events click select template template assettemplate html present presumed template fullyformed wrapper elements created another option would ability assign template directly keeping event delegation working could missing something possible achieve unwrapped templates using backbone couple projects kept stumbling", "num": "546", "d": "8/2011"}, {"title": "c mvc", "body": "backbone nt controller object used called controller fact router fortunately renamed fact far see model collection view objects needed model collection objects contain data business logic know persistrestore data tofrom remote server local storage view object tied dom contains ui logic bound model andor collection controller fit sound like disappeared thoughts comments ps nt know github issues right place discuss right audience though", "num": "544", "d": "8/2011"}, {"title": "add type checking throw appropriate errors arguments passed backbone methods", "body": "particularly modelset please see comment issue seems common issue though actual issue jquery valid type checking within backbone would surely helped", "num": "543", "d": "8/2011"}, {"title": "possibility loadurl calling start pushstate true", "body": "seo reasons nice render whole page back end using first user starts navigate understand make call calling unnecessary particular case suggest maybe missing simple workaround", "num": "540", "d": "8/2011"}, {"title": "collectionpreparemodel validates stale attrs object model defaults", "body": "overrode method one models coerce values dates found validation failing tried fetch corresponding collection validates passed attributes rather getting fresh set model constructor passes new object set result changes made reflected original object validated relevant lines constructor think would work likely better solution test case javascript var mymodel backbonemodelextend defaults thedate null var model new mymodel thedate new date gettime consolelog modelget thedate date sat aug cst var mymodellist backbonecollectionextend model mymodel var list new mymodellist thedate new date gettime consolelog listlength", "num": "539", "d": "8/2011"}, {"title": "potential typeerror backboneeventtrigger execution", "body": "implementation backboneeventbind ev callback checked callback function callback undefined null type different function typeerror occurs calling backboneeventtrigger would enough add following check backboneeventbind", "num": "536", "d": "8/2011"}, {"title": "option backbone package data create update requests named scope enhancement", "body": "hi article explains ruby rails expects data create update restful calls scoped name resource example let say saving new book title author right backbone sending data would nice backbone could configured scope data name model like js noob change might look like wrote tests well makes sense make pull request thanks", "num": "534", "d": "8/2011"}, {"title": "default context eventsbind makes tests overflow stack", "body": "since commit run tests without getting infinite recursion errors chrome firefox rationale setting default context bind rather trigger", "num": "531", "d": "8/2011"}, {"title": "bind change array model", "body": "issues properly binding attribute array would like able bind change event seem picking change array grows size able get work adding another attribute changing whenever array changes seems rather dirty wondering better way", "num": "527", "d": "8/2011"}, {"title": "question handle scroll event window", "body": "sure", "num": "526", "d": "8/2011"}, {"title": "add validate collection", "body": "times model valid valid collection added although present handled model less graceful also significantly complex cases model part many collections", "num": "525", "d": "8/2011"}, {"title": "href template working", "body": "hi using backbone working fine expect one issue href tags templates nt work create template like works change template showlinktemplate javascript name value overwritten note changed template settings anyone help best regards migrate", "num": "523", "d": "8/2011"}, {"body": "nt jquery global ajax options satisfy request", "d": "8/2011"}, {"body": "hi guillaumebiton issue backbone clearly documented use reference types inside defaults object docs pertinent line remember javascript objects passed reference include object default value shared among instances", "d": "8/2011"}, {"body": "sorry nt read part thanks pointing quickly", "d": "8/2011"}, {"body": "problem", "d": "8/2011"}, {"body": "hey similar revelation recently luckily able handle logic needed conditional believe reason handling parsing collection instead model level fetched collection", "d": "8/2011"}, {"body": "use case wrote sweet version parse models goes recursively changes attributes backbone models defined current backbone app obviously could easily duplicate logic method seems silly since really effecting models seems make sense since data put models raw filter first know mean", "d": "8/2011"}, {"body": "well server supposed return json object attributes override parse method model return attributes object based integer returning something else", "d": "8/2011"}, {"body": "nope afraid javascript dynamic language pass wrong value function get error much like one glad hear able debug", "d": "8/2011"}, {"body": "", "d": "8/2011"}, {"body": "unlike zepto swapped jquery consequence sugarjs work box backbone would require manually changing library desire write wrappers get sugarjs work underscore fundamentally different sugar modify native prototypes something like might explain unfeasible backbone try work javascript underscore array function sugarjs array foreach function", "d": "8/2011"}, {"body": "sure thing sounds like fine idea feel free go fork naturally main backbone project wo nt offer thing would fundamentally incompatible existing projects everything used version", "d": "8/2011"}, {"body": "hi justok thanks reporting issue could provide reduced test case something like would greatly assist us assess issue", "d": "8/2011"}, {"body": "hi tbranyen thanks focus issue provide simple example explain problem later", "d": "8/2011"}, {"body": "test example see problem code thanks", "d": "8/2011"}, {"body": "maybe ca nt find problem download code compute run find problem thank much", "d": "8/2011"}, {"body": "issue", "d": "8/2011"}, {"body": "see", "d": "8/2011"}, {"body": "thanks filiptepper looking hopefully get jsfiddle accurately represents problem", "d": "8/2011"}, {"body": "tbranyen actually came solution though minor rewrite application required", "d": "8/2011"}, {"body": "oh wow absolutely problem long include backbone include underscore jquery add noconflict loading scripts fine", "d": "8/2011"}, {"body": "issue one projects", "d": "8/2011"}, {"body": "nope afraid scope backbone fancy querying observation deep json properties arbitrary javascript objects matter would require query language looking json objects based string handling arrays well objects deep equality comparison cycle detection every time feel free fire custom change events inner value changes", "d": "8/2011"}, {"body": "thu aug pm jashkenas lt reply replygithubcom wrote nope afraid scope backbone fancy querying observation deep json properties arbitrary javascript objects matter would require query language looking json objects based string handling arrays well objects bind change storebook title dochange gt pretty attractive deep equality comparison cycle detection every time incoming json unlike yaml cycles think would reasonable enforce require single documentsobjects cycles moment simple bit json returned foo b bar c b backbonejs wo nt allow add listeners fooa foo said current solution code class railsmodel extends backbonemodel initialize attributes gt set makenestedattr attributes false silent true makenestedattr attributes alltrue gt data k v attributes vconstructorname object data k new railsmodel v else data k v data parse attributes gt makenestedattr attributes true get field gt val first true p fieldsplit first val super p else allows returning undefined rather exception parent deeply nested node exist val val valget p else undefined first false val allow heirarchical setting objects example modelsetfield rootchild create path exist setfield field value silentfalse gt path fieldsplit node undefined val p fieldsplit node val val nodeget p val data val new railsmodel data p val nodeset data data data p value nodeset data silent test field trigger change field model value trigger change model perfect allows handle simple type cases example regards brad feel free fire custom change events inner value changes reply email directly view github", "d": "8/2011"}, {"body": "hi hiddendeveloper thanks taking time report issue backbone please provide reduced case something similar assess potential bug also within test please show expected outcome resulted fixed using patch tested remove using basic example unable trigger abnormal behavior", "d": "8/2011"}, {"body": "add items collection call remove collectionmodels items left remain remove using incremented index delete collection index left next index pointing position nothing deleted see", "d": "8/2011"}, {"body": "want remove whole collection right way problem special case remove works wrong think best way handle case add smth like", "d": "8/2011"}, {"body": "asan remove work correctly hiddendeveloper falling victim one fundamental javascript rules regarding reference types since funneling exact array removed causing wonkiness check open console find removed correctly", "d": "8/2011"}, {"body": "tbranyen looks like leaky abstraction fix without overhead imo better fix ofc models", "d": "8/2011"}, {"body": "thanks feedback also little bit reading regarding reference types", "d": "8/2011"}, {"body": "pretty simply rectified counting array rather backbonecollectionremove method forked proof concept", "d": "8/2011"}, {"body": "using backbone server fine without need disable ensureelement check views like set right require backbone nodejs", "d": "8/2011"}, {"body": "nt believe truly reusing backbone views server use jquery server render views short completely reusing complete mvc stack server way client backbonejs file current state comply commonjs jquery set server course needs require tbranyen wrote using backbone server fine without need disable ensureelement check views like set right require backbone nodejs reply email directly view github", "d": "8/2011"}, {"body": "morriz ca nt include jquery require load backbone", "d": "8/2011"}, {"body": "know use global variable donot want want customize thanks", "d": "8/2011"}, {"body": "found solution using bind pretty working", "d": "8/2011"}, {"body": "already case extra arguments provide trigger get forwarded listeners event javascript var object extend object backboneevents var callback function consolelog arrayprototypeslicecall arguments objectbind myevent callback objecttrigger myevent", "d": "8/2011"}, {"body": "rulfzid case nt calling backbonecollection code calling ca nt add arguments use options object pass extra data sure best solution options nt really meant sure better wrapping callback another anonymous function something like work javascript shipsbind add function ship collection options alert shipget name optionsfoo shipsadd name flying dutchman name black pearl foo bar", "d": "8/2011"}, {"body": "thanks guys almost shesek like var foo function ship foo bind foo myobj bar shipsbind add foo", "d": "8/2011"}, {"body": "thanks thanks nt think need junk backbone objects sort thing order help ie said feel need add objects feel free", "d": "8/2011"}, {"body": "cool though pretty easy write objectgetownpropertynames shim shown sounds like happy live incompatibility skin back", "d": "8/2011"}, {"body": "yep thanks help", "d": "8/2011"}, {"body": "sorry clear need attributes set handler ex validatecomplete called im looking event fires right model validate method completes", "d": "8/2011"}, {"body": "best bet far using underscore defer end validate one line simple readable", "d": "8/2011"}, {"body": "well view layer extremely lightweight copied backboneview code stripped comments got lines code constructor function linebyline generate unique id view attach special options model collection el id attributes classname tagname directly view object make sure dom element around set event delegation call initialize could easily write view class follows model even better come something new better need selector engine dom manipulation events believe find various subpackages ender js could mootools prototype even flavor words reasonably trivial swap jqueryzepto say really worth try introduce abstraction layer top current view system", "d": "8/2011"}, {"body": "rulfzid thanks explanation write view jqueryzepto used view also backbone sync history also need rewrite also really dont like rewriting whole objects approach require porting changes classes view history sync every new version backbone freeze version also really great actually think dead simple introduce abstraction one class domevents one class ajax default implementation forward requests jquery api order plug something different required write lines code think approach submit pull today enough time", "d": "8/2011"}, {"body": "right nt think sync history nt clear affiliation backbone use like think worthy project say time go nothing else interesting libraryagnostic fork backbone wild", "d": "8/2011"}, {"body": "think interesting worthwhile idea pursue backbone tied single library even one popular functional jquery others exist increases adoption backbone dogma personally think would best list dependencies currently exist jqueryzepto use criteria abstraction think backbone default bundling jquery adapter system adapters could swapped dynamically would slick", "d": "8/2011"}, {"body": "understand requesting would like use existing element dom matches currently undesirable simply provide selector thisel since specific case sure element exists feel current approach obvious happening instance developer would assume would perform kind magic hood perhaps would like create memory element nearly identical one currently dom perform simple going low prioritize simple workaround like others weigh kind change well", "d": "8/2011"}, {"body": "think woud better use someid append thisel append preserve existing content someid append generated backboneviewrender", "d": "8/2011"}, {"body": "oh issue would duplicate id dom set someid try append existing element id likely going cause trouble", "d": "8/2011"}, {"body": "hi figured sorry clutter problem backbonecollection def commented everything works", "d": "8/2011"}, {"body": "chrome nt like either", "d": "8/2011"}, {"body": "discussing irc chrome bug", "d": "8/2011"}, {"body": "var workspace backbonerouterextend routes test test new workspace backbonehistorystart", "d": "8/2011"}, {"body": "missing zepto event lib", "d": "8/2011"}, {"body": "support feature theory issue comes operations depend usage template contextdata passed template quite diverse across implementations current solution override method one possible solution facilitate use templates prevent redundant operations check defined initialization would created operations immediately depends would occur", "d": "8/2011"}, {"body": "handle nonwrapped thisels helper method backboneview uses template function define every view renders view replaces existing thisel newly rendered element uses view template fn app jquery templates therefore returns jquery object use render method", "d": "8/2011"}, {"body": "really like feature well perhaps simpler syntax though backboneviewextend el null take advantage document fragments somehow", "d": "8/2011"}, {"body": "terminology throwing try thinking templates views backboneviews controller prefer use templateview backboneviews usually tied specific dom element whatever floats boat", "d": "8/2011"}, {"body": "matter backbone definitely modeled mvc strict adherence much like django regard free set architecture meaningful way related project done projects nt use routers using views without dom definition must follow order use framework found using backbone find missing component need order satisfy architecture nt feel though concept controller necessary want something like one make constructor work", "d": "8/2011"}, {"body": "tbranyen sometimes use object orchestrate coordinate number views call controller nt particular pattern codified backbone regular js object nicely", "d": "8/2011"}, {"body": "protip javascript", "d": "8/2011"}, {"body": "thanks comments answers line mine put c wherever fancy", "d": "8/2011"}, {"body": "nope see", "d": "8/2011"}, {"body": "yep workaround simply rerender page content already rendered route check make sure rendering needs happen going", "d": "8/2011"}, {"body": "come two solutions check view looks exactly intends render nt rendering kind state holder tells first time app navigates nt rendering guess better solution mind checking rendering needed opinion mine pretty ugly compared simply telling navigate", "d": "8/2011"}, {"body": "three days consideration made ok next time make pull request instead", "d": "8/2011"}, {"body": "well seems simplest solution would change line preparemodel function would run validation attrs passed custom set functions", "d": "8/2011"}, {"body": "alternative solution nt involve futzing backbone core override parse javascript var mymodellist backbonecollectionextend model mymodel parse function response xhr return map response function attrs return new mymodel attrs would bypass validation preparemodel would receive preformed instances backbonemodel", "d": "8/2011"}, {"body": "agree good workaround think still bug proposed fix sounds good", "d": "8/2011"}, {"body": "seems like reasonable request mark bug", "d": "8/2011"}, {"body": "try bind undefined function callback error want see", "d": "8/2011"}, {"body": "would correct check anyway throwing exception function", "d": "8/2011"}, {"body": "really fan adding functionality support external unrelated component anyone using rails would benefit feature unless course following pattern case override app add functionality basically patch", "d": "8/2011"}, {"body": "maybe put much emphasis rails earlier think change could provide value backbone users example let say want create resource also send parameters related resource ex csrf authenticity token much cleaner placing resource data scope vs", "d": "8/2011"}, {"body": "better argument would one augment json prior sent without needing override", "d": "8/2011"}, {"body": "good question particular example authenticity token applied post put requests jquery achieved ajaxsend function javascript add authenticitytoken parameters submitted via ajax document ajaxsend function event request settings nothing get request rails nt need authenticity token ie converts request method post settingstype post settingstype post settingstype put settingstype put settingscontenttype applicationjson amp amp typeof json undefined apply authenticity token json requests requires library var originaldata settingsdata jqueryparsejson settingsdata originaldata authenticitytoken authtoken settingsdata jsonstringify originaldata else would guess js frameworks prototype etc similar function", "d": "8/2011"}, {"body": "solution could equally solution scoping model data saying could nt useful feature solution transparent say supported feature also disparity augment whether dynamic static always something sent payload latter could solved relatively easily handler static setting augmenting dynamic data something predicted across implementations example solution sending csrf token would typically header context grey data sent model part model schema vs data required validationauthenticationauthorization would extra data option passed corresponding crud request would access quite things consider feature like implemented", "d": "8/2011"}, {"body": "yes agree way nonschema data attached model requires thought enough experience backbone yet propose solution somehow nt feel right use purpose also raises question whether updating nonschema data trigger event", "d": "8/2011"}, {"body": "might missing something nt tojson functions model collection javascript var book backbonemodelextend tojson function return book clone thisattributes generally javascript var scopedmodel backbonemodelextend tojson function thisscope null thisscope undefined throw new error use scopedmodel without scope return thisscope clone thisattributes var scopedcollection backbonecollectionextend tojson function thisscope null thisscope undefined throw new error use scopedcollection without scope return thisscope thismap function model return modeltojson use scopedmodels make sure add proper scope property scope model data like seems want", "d": "8/2011"}, {"body": "solution", "d": "8/2011"}, {"body": "thanks closing ticket", "d": "8/2011"}, {"body": "reference saved early nt happen every event handler calls performance difference probably relatively minimal cleaner code still unsure would cause stack overflow", "d": "8/2011"}, {"body": "must poorly written test causing issue since using patch without issue know test culprit", "d": "8/2011"}, {"body": "nt time find yet especially since opening tests locks browser quite long time", "d": "8/2011"}, {"body": "seems affect model validation tests lot collection tests sure yet typical stack trace firefox performance paranoia rather desired semantics event system tempted revert", "d": "8/2011"}, {"body": "supply code shows using altering array directly", "d": "8/2011"}, {"body": "wrote really simple version explained ca nt reproduce issue tells definitely something else code thanks response closing ticket", "d": "8/2011"}, {"body": "assuming key bound window looks like work needs method view object think manually bind scroll event window javascript var example backboneviewextend initialize function var self loadmore function consolelog loading", "d": "8/2011"}, {"body": "first case view right", "d": "8/2011"}, {"body": "yes correct work", "d": "8/2011"}, {"body": "javascript class windowmainview extends backboneview el window events scroll render initialize gt bindall render render render gt consolelog scroll javascript routes welcome welcome gt new mainview loading main page appear console scroll scroll nothing happened", "d": "8/2011"}, {"body": "try removing code leave blank let make sure understanding method gets called page load explicit call method try removing code also think need replace line pretty unfamiliar coffeescript syntax perhaps implicit missed something else either case believe needs jquery object raw dom node object", "d": "8/2011"}, {"body": "yep works thanks", "d": "8/2011"}, {"body": "sounds fine feel free add function collections backbone nt going come functions outofthebox every use case collections need taken whole validated feel free", "d": "8/2011"}, {"body": "jashkenas file pull req would consider integrating one wo nt negatively impact folks avoid could really handy", "d": "8/2011"}, {"body": "fraid easy enough add backbonecollectionprototype", "d": "8/2011"}, {"body": "concerned nt really rocket science days github wondering worth effort general case sounds like", "d": "8/2011"}, {"body": "probably feel free ask question mailing list irc channel", "d": "8/2011"}, {"body": "route support regex could technically however agree general statement would probably helpful allow type thing", "d": "8/2011"}, {"body": "could use regex wont work", "d": "8/2011"}, {"body": "javascript var routertest backbonerouterextend initialize function options backbonerouterprototypeinitializecall options thisroute public public thispublic public function var hash backbonehistorygetfragment alert hash var newhash hashreplace hash newhash thisnavigate newhash true else alert done test new routertest backbonehistorystart testnavigate public true example show get working regex always prefered define route within router initialize method happy bonus allowing regex syntax", "d": "8/2011"}, {"body": "imo code makes sure always use version url reason add anything like said want could monkeypatch backbonehistory getfragment trim fragment applicationwide", "d": "8/2011"}, {"body": "thanks nowells snippet handling route pain shesek patch", "d": "8/2011"}, {"body": "amrnt welcome totally agree shesek real solution problem consistently link page patch backbone always strip add trailing slash desire leading slash never problem set proper root amrnt might want close issue help documentcloud guys keep handle open tickets", "d": "8/2011"}, {"body": "worth able reproduce chrome macintosh intel mac os x khtml like gecko still problem master branch please respond useragent specified qunit", "d": "8/2011"}, {"body": "hey underscorejs provides methods could pop unless defined comparator function pushes models onto collection push method probably unnecessary function looking adding beginning collection think adding model index shown example best way max size seems like fairly specific use case could nt store value attribute collection", "d": "8/2011"}, {"body": "max size yes created sub class collection others know done maybe aliases operations common look push pop want implement behaviour completely necesary makes life code much easier", "d": "8/2011"}, {"body": "root issue appears escaping contents tv show name would turn javascript would look like", "d": "8/2011"}, {"body": "yes would nice jslike customisable collectioncomparetwo function besides existing collectioncomparator function", "d": "8/2011"}, {"body": "jashkenas logic behind nt models collections nonjson object attribute model shesek patch ca nt fit project heavy making lightweight", "d": "8/2011"}, {"body": "could good idea would put backbonenested recursive tojson support thing think allowing set nestedmodel nestedcollection instead handle manually using defaults function far see pretty much use model properties appropriately features nt require fork added easily monkey patches", "d": "8/2011"}, {"body": "turadg ca nt speak jashkenas rationale nt anything attributes persist sure filter hacky instead using instance properties model instead", "d": "8/2011"}, {"body": "risk highjacking ticket think related common use case best practice using backbone rails nested models eg var task new model urlroot tasks best set steps collection loads task loaded right paths syncing", "d": "8/2011"}, {"body": "curious know intentional well worked around calling trigger reset fetch seems behave whether add true false perhaps could able paired silent false explicitly ask rerender", "d": "8/2011"}, {"body": "reverted issue discusses revert", "d": "8/2011"}, {"body": "mostly curious see discussion going somewhere like collectionadd idempotent model nt added twice already exists byid collection right achieving", "d": "8/2011"}, {"body": "second would almost like see something specify additions special viewoptions backbone uses would prefer way add array outside source backbone", "d": "8/2011"}, {"body": "issue refresh event changed reset", "d": "8/2011"}, {"body": "got issue firefox receiving ajax json callback invalid operand attrs break error thisidattribute attrs thisid attrs thisidattribute backbonejs line close issue", "d": "8/2011"}, {"body": "investigation found causes issue pass string instead object modelset case issue arose using jquerypost reason returns json object webkitbased browsers desktop chrome safari iphone ipad firefox returns string needed eval would good type checking inside modelset", "d": "8/2011"}, {"body": "try using serializeobject", "d": "8/2011"}, {"body": "afraid nt type checking make argument absolutely function javascript sounds like pointed directly line incorrect", "d": "8/2011"}, {"body": "supposed work sorting alphabetically string value", "d": "8/2011"}, {"body": "implemented feature made pull request anyone interested changes commit added version mataspetrikas original superclass events object gets overwritten gets shadowed prototype chain another backboneview subclass events object classes created extend simply merges properties two objects created using prototype chains interested google pseudo classical inheritance see ca nt use function like extend jqueryextend case implementation added walks prototype chain given view instance collects events objects defined along way end objects merged single events object used set event delegation", "d": "8/2011"}, {"body": "afraid nt agree change go prototype chains javascript actually work makes impossible view subclass ignore events parent view listens current situation possible create events hash choosing whereas automatically merged events parent way disable need something fancy call hash something call function set liking view backboneviewextend initialize function thisdelegateevents thisbuildevents", "d": "8/2011"}, {"body": "jashkenas trying ignore events superclass subclass means likely something wrong oo design nt extending superclass first place wrong level abstraction code superclass trying much however always override handler methods subclass wanted ignore certain events right easy way events extend subclass without fairly ugly workarounds completely duplicating events bad something like remembered developers use like mentioned calling delegateevents manually implementing scheme using another variable name remembered developers may looking documentation thinking works another way however one thing could see problem might automagical people easily recognize going events would inherited rather overwritten people probably nt extend past backboneview anyway leave decide may convenient developers decide implement provided method could overridden delegateevents collects events hash use method would simply return default implementation could overridden allow prototype walking implementation like mine btw implementation nt go prototype chains work actually takes advantage fact walkable chain unlike lexically scoped variables best greg", "d": "8/2011"}, {"body": "mirror current pattern model happens function call instead treating hash use super call merge parent events desired coffeescript class subview extends parentview events gt extend super", "d": "8/2011"}, {"body": "fixed", "d": "8/2011"}, {"body": "hmm unfortunately still requires developers remember something subclassing believe actually like extend workaround better function anyway would instantiationtime overhead create merged hash actually going memoize collectevents method created avoid overhead figured start simple first see merged changes best option really think point overridable method retrieves events instance changed first line call method retrieve events backbone could still ex delegateevents function events events events thiscollectevents return default overridable implementation collectevents function return thisevents would allow plugin override written anyone wanted events inheritance feature however think almost liking fact need workaround prototype explicitly says subclass events extending superclass events like workaround posted earlier problem newbies wo nt know perhaps adding something documentation says workaround want feature", "d": "8/2011"}, {"body": "", "d": "8/2011"}, {"body": "dalyons solution writesubmit something similar", "d": "8/2011"}, {"body": "pretty new backbone stumbled upon need well using collin proposed patch hoping makes master branch soon enough nextprev logic model much sense really make see models isolated objects never need know siblings nt exact purpose collections missing something", "d": "8/2011"}, {"body": "personally would nt want models sort thing use backbone often models one collection", "d": "8/2011"}, {"body": "yeah discussed online someone last night quite easy create new collection dupes resetting current collection duplicates", "d": "8/2011"}, {"body": "comes using ca nt run tojson", "d": "8/2011"}, {"body": "one way leaves burden right escaping smack shoulder developers would much rather prefer template engine deal knows template rendered escaping required perfectly like templating engine using model cache escaped values scale needs work way dev nt remember every time need escape something also exactly reasons rails django switched auto escaping template layer default", "d": "8/2011"}, {"body": "dwt simply always use instead never worry", "d": "8/2011"}, {"body": "one workaround always get escaped values ca nt easily decide template need unescaped value maybe stepping back bit proposal assumes hand real model object template right tend currently use tojson hand returned dict together patch template system changes autoescape default makes much shorter sweeter like retain", "d": "8/2011"}, {"body": "looked issue regarding validate working correctly todo demo tried worked saving letter word javascript windowtodoprototypevalidate function attrs consolelog attrs object content test done false order proto object object content test done false id order proto object modify code slightly javascript windowtodoprototypevalidate function attrs attrscontentlength lt return todo short need gt characters windowtodoprototypeinitialize function var init windowtodoprototypeinitialize return function thisbind error function model msg consolelog msg expected result console item added", "d": "8/2011"}]