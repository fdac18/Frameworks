[{"title": "use two versions react amp amp time", "body": "want request feature ask question faced dilemma using two versions react time problem occurs writing large projectcontainer react within download appwidgets previously written using older version react without changing old projects put respond old version react new projects put react example webpack solution something like example renames old version new one looking reverse solution settings", "num": "11719", "d": "11/2017"}, {"title": "typeerror attempted assign readonly property nodestore", "body": "folks following fairly standard component export const alert props message string type alerttype createagainbutton object gt code raises following react error error reported located react module output fails chrome safari nt tried browsers typeerror attempted assign readonly property validatechildkeys else isvalidelement node element passed valid location nodestore nodestorevalidated true else node var iteratorfn getiteratorfn node view compiled createelementwithvalidation fixed key warnings appear validtype var lt argumentslength validatechildkeys arguments type view compiled mountindeterminatecomponent warning false lt component appears render method nt extend reactcomponent likely cause errors change extend reactcomponent instead componentname componentname reactcurrentownercurrent workinprogress value fn props context react devtools reads flag workinprogresseffecttag performedwork view compiled performunitofwork reactdebugcurrentfibersetcurrentfiber workinprogress var next beginwork current workinprogress nextrenderexpirationtime reactdebugcurrentfiberresetcurrentfiber view compiled workloop nextrenderexpirationtime lt mostrecentcurrenttime flush expired work nextunitofwork null nextunitofwork performunitofwork nextunitofwork else flush asynchronous work deadline runs time view compiled callcallback nested call would trigger fake event handlers call higher stack fakenoderemoveeventlistener evttype callcallback false funcapply context funcargs diderror false view compiled invokeguardedcallbackdev errors trigger global error handler var evt documentcreateevent event evtinitevent evttype false false fakenodedispatchevent evt diderror didseterror view compiled invokeguardedcallback param args arguments function invokeguardedcallback function name func context b c e f invokeguardedcallbackapply reacterrorutils arguments view compiled renderroot var diderror false var error null invokeguardedcallback null workloop null expirationtime hascaughterror diderror true error clearcaughterror view compiled performworkonroot rootremainingexpirationtime commitroot finishedwork else rootfinishedwork null finishedwork renderroot root expirationtime finishedwork null completed root commit rootremainingexpirationtime commitroot finishedwork view compiled performwork nextflushedroot null amp amp nextflushedexpirationtime nowork amp amp minexpirationtime nowork nextflushedexpirationtime lt minexpirationtime amp amp deadlinedidexpire performworkonroot nextflushedroot nextflushedexpirationtime find next highest priority work findhighestpriorityroot view compiled requestwork todo get rid sync use current time expirationtime sync performwork sync null else schedulecallbackwithexpiration expirationtime view compiled scheduleworkimpl var root nodestatenode checkrootneedsclearing root fiber expirationtime requestwork root expirationtime checkrootneedsclearing root fiber expirationtime else view compiled enqueuesetstate next null insertupdateintofiber fiber update schedulework fiber expirationtime enqueuereplacestate function instance state callback var fiber get instance view compiled setstate componentprototypesetstate function partialstate callback typeof partialstate object typeof partialstate function partialstate null invariant false setstate takes object state variables update function returns object state variables void thisupdaterenqueuesetstate partialstate callback setstate view compiled anonymous function thispropsdispatch actionschange track attachments filename attachmentfilename responsedata thispropsattachmentsfilter attachment gt attachmentuploading length thissetstate uploadingattachments false catch error gt thispropsdispatch actionschange error errorresponse located piece code appears cause issues unclear use alert component two places firstly component called globalerror defined appears based global state code snippet seems root issue take away boolean logic display time problem goes away see bottom stack trace setting stateuploadingattachments wonder anything obvious wrong ideas phil", "num": "11718", "d": "11/2017"}, {"title": "usage react js", "body": "hello new react js got questions react js fitable static webpage also fitable dynamic webpage without using button commen combine react js another library instance jquery context react js recommended use also different tools instance jquery angular js bootstrap etc thank", "num": "11712", "d": "11/2017"}, {"title": "evaluate prop use samevaluezero comparison shallowequal prevent double render", "body": "want request feature report bug feature bug sure current behavior shallowequal function uses samevalue comparison aka objectis evaluated inside react anyway example comparison false second call see called twice expected behavior use samevaluezero comparison react component nt render second time versions react browser os affected issue work previous versions react browsers react gt change nt affect react users evaluates breaking change react breaking change fbjs alternatively nt evaluate inside react ready file pr soon realize proper behavior", "num": "11710", "d": "11/2017"}, {"title": "react map props dom internally", "body": "hi working library proxy svg elements mutate svg element loaded noticed added prop mutate component nt map properly javascript proper syntax code working lives wondering reactdom internally consistent api library support topic greatly appreciated thanks", "num": "11706", "d": "11/2017"}, {"title": "server rendering tag attribute value", "body": "want request feature report bug bug current behavior server render html instead using react node way render rather sure browsers treat", "num": "11705", "d": "11/2017"}, {"title": "investigate flow fails windows", "body": "could nt enable windows ci also remember seeing locally windows machine need investigate fails windows works macos", "num": "11703", "d": "11/2017"}, {"title": "reactdomcreateportal support fragment", "body": "hello maybe possible add support fragment createportal method example code add wrapper buttons javascript class formbuttons extends purecomponent constructor props super props thisel documentcreateelement span thisel best solution without wrappers componentdidmount const portalselector thisprops documentgetelementbyid portalselector appendchild thisel componentwillunmount const portalselector thisprops documentgetelementbyid portalselector removechild thisel render const submit reset submitting pristine thisprops return reactdomcreateportal thisel versions react browser os affected issue work previous versions react", "num": "11701", "d": "11/2017"}, {"title": "closed", "body": "close made mistake self", "num": "11700", "d": "11/2017"}, {"title": "reactdomserverrendertostaticmarkup gets stuck trying render portals", "body": "calling gets stuck loop trying static render current behavior behavior seen uncommenting line warning make tab freeze expected behavior return results throw kind error input valid", "num": "11692", "d": "11/2017"}, {"title": "remove support tapeventplugin", "body": "libraries relied kept impossible support forever given want make changes event system deprecate injection relies remove react migration path turn userland component something like hopefully somebody using work nt actively use", "num": "11689", "d": "11/2017"}, {"title": "reactdom production builds use supported", "body": "want request feature report bug bug current behavior production builds include new set supported ie ie supported browsers reported onwards current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior production builds use features available supported browsers versions react browser os affected issue work previous versions react reactdom nt noticed problem earlier builds", "num": "11688", "d": "11/2017"}, {"title": "reactdom ability access windowevent development", "body": "imported request gaearon want request feature report bug bug current behavior development mode react uses able catch errors without interrupting normal break uncaught exceptions feature devtools current implementation event created dispatched allows error handling without block unfortunately side effect overriding unable access within guarded callbacks running react development mode production mode works fine would like access windowevent superhuman able detect dom focus user point view usually documentactiveelement cases like blur event clicking two iframes focus end different place works fine production currently work around development mode overriding maintiaining reference event production mode use windowevent current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react development production cases would expect alert say development says expected behavior would like way access windowevent development happy somewhat obscure ideally would use secret internals make work versions react browser os affected issue work previous versions react development least probably", "num": "11687", "d": "11/2017"}, {"title": "sluggish scrolling rendering table large dataset react", "body": "creating application realtime streaming data table using react number rows shown time rather large rows situations occur scrolling behavior browsers desktop amp mobile really takes hit staggers attempting browse content anybody experienced kind scrolling behavior rendering large data sets table expecting react able efficiently drawredraw elements ease nt appear case tried using jsfiddle recreate scenario much success", "num": "11686", "d": "11/2017"}, {"title": "javascript exception invalid host", "body": "using releasing app android get error upon launching app even appear crashes believe may related javascript engine mobile ideas happening note application", "num": "11685", "d": "11/2017"}, {"title": "warning tag unrecognized browser", "body": "want request feature report bug bug current behavior chrome js console see warning tag supported browser current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react jsfiddle example expected behavior warning displayed versions react browser os affected issue work previous versions react react chrome ok react", "num": "11682", "d": "11/2017"}, {"title": "warning button calling super make sure pass props component constructor passed", "body": "version use typescript write react using object oriented inheriting package components write solve type problem ts editor passed type check react pass paneltsx typescript import react react export interface ipanelprop extends reactprops width number height number export interface ipanelstate export class panel extends reactcomponent public readonly props ipanelprop null public state ipanelstate public async constructor props super props \u7ec4\u4ef6\u521a\u521a\u6302\u8f7d\u65f6 public async componentwillmount \u7ec4\u4ef6\u5df2\u7ecf\u6302\u8f7d\u65f6 public async componentdidmount param props \u63a5\u53d7\u7684props public async componentwillreceiveprops props public async shouldcomponentupdate public async componentwillupdate public async componentdidupdate \u7ec4\u4ef6\u5c06\u88ab\u5378\u8f7d\u65f6 public async componentwillunmount public render return thisrendercontent public rendercontent return null typescript import react react import panel ipanelprop panelpanel import itreeprop itreestate itreeitem treeicontype treedto export class tree extends panel public props itreeprop public state itreestate treelist private index private style require assetsstyle old way used following way tsc wrong complex inheritance react typescript import react react export interface itextareaprop export interface itextareastate export class textarea extends reactcomponent public state public async constructor props super props \u7ec4\u4ef6\u521a\u521a\u6302\u8f7d\u65f6 public async componentwillmount \u7ec4\u4ef6\u5df2\u7ecf\u6302\u8f7d\u65f6 public async componentdidmount param props \u63a5\u53d7\u7684props public async componentwillreceiveprops props public async shouldcomponentupdate public async componentwillupdate public async componentdidupdate \u7ec4\u4ef6\u5c06\u88ab\u5378\u8f7d\u65f6 public async componentwillunmount public render return textarea", "num": "11681", "d": "11/2017"}, {"title": "react storages flow types", "body": "hi im trying understand flow resolves nothing called directory defined", "num": "11680", "d": "11/2017"}, {"title": "click event propagating elements created loop unique keys", "body": "react version code generates react dom like text click elements event propagating debugging found issue keys restrictions keys react like max length specific characters", "num": "11679", "d": "11/2017"}, {"title": "disabled button click event propagates", "body": "want request feature report bug bug current behavior clicking disabled button fires mouse event bubbles caught parent click event listeners event swallowednot fired major browsers current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior event fire bubble versions react browser os affected issue work previous versions react react", "num": "11678", "d": "11/2017"}, {"title": "resetting form containing focused controlled number input puts step state", "body": "fixture demonstrating issue first test case controlled number input within form containing reset button hitting enter trigger reset event causes focused input reset wo nt sync tracked value work blur number inputs avoid triggering validation warnings nt affect input types since tracked value updated immediately might viable tradeoff avoiding validation warnings sure actionable wanted least document future reference cc nhunzaker gaearon", "num": "11674", "d": "11/2017"}, {"title": "constructor props super props vs constructor super", "body": "know question asked many times still clear many people said pass props constructor want access thisprops one example answer oficial doc says class components always call base constructor props pass props still everywhere except also source code create element see adds regardless use main question react official doc says class components always call base constructor props really necessary current react doc wrong need call always", "num": "11671", "d": "11/2017"}, {"title": "add hooks reactdomserver support caching", "body": "want request feature report bug feature current behavior reactdom ssr performance could improved using serverside cache currently reactpartialrenderer currently accessible package desired behavior server would nice plugins could used improve render performance currently way would externally maintain renderer implementation however already contains behavior required support plugins little refactoring refactored created proof concept supporting plugins react server side rendering see reactpartialpluginrenderer fork comprised different commits strict refactoring addition exporting reactdom server package create extending refactored introduce plugin interface proof concept plugin implementations application example view instructions running example repo understand exporting exposes internal api far ideal scenario would made accessible package would plugin implementation similar required maintain forked maintaining plugin renderer repo nt problem would great plugins could used without needing maintain core server renderer thanks adam", "num": "11670", "d": "11/2017"}, {"title": "rfc drop isattributenamesafe check react", "body": "currently validate dom attributes client ignore ones invalid names check used important safety rendering client side anymore let call browser would throw bad attribute name check used run infrequently data attributes custom elements attributes follow code path since simple attributes names effectively treated unknown attributes even though cache result seems unfortunate work browser already us would breaking change go think remove check let browser throw make spreading props blindly bit dangerous warning visible", "num": "11667", "d": "11/2017"}, {"title": "eventphase property onclickcapture events wrong value", "body": "want request feature report bug assume bug current behavior register event handler click element inspect event property set equivalent currently rewriting tests use public api found problem current behavior bug please provide steps reproduce possible minimal demo problem codesandbox would expect alert way round expected behavior property set versions react browser os affected issue work previous versions react nt tried versions different testing done chrome", "num": "11663", "d": "11/2017"}, {"title": "another dependency use reactproptypes", "body": "use react another package use reactproptypes update another package search polyfill try write nt work import allreact react import proptypes proptypes allreactproptypes proptypes", "num": "11661", "d": "11/2017"}, {"title": "add bundle linting tests release script", "body": "ci currently lint bundles run development production bundle tests add first step linting bundles script called change ci command run finally add release script function note function already broken need replace since running longer works due custom config running work custom script never mind fixed verify changes run see whole workflow run successfully task requires understanding work", "num": "11660", "d": "11/2017"}, {"title": "move reactfibertreereflection reactreconcilerreflection", "body": "move exported entry point similar entry point set create flat bundle similar set change code imports directly instead make dependency ensure reconciler nt actually get bundled instead stays call interaction two packages actually tested run task friendly beginners requires understanding relationship different packages willingness research experiment build process set", "num": "11659", "d": "11/2017"}, {"title": "investigate ci failure possible race condition", "body": "looks like scriptscircleciuploadbuildsh curl could nt open file builddistreactdevelopmentjs scriptscircleciuploadbuildsh returned exit code action failed scriptscircleciuploadbuildsh happened two times random commits nt see pattern probably caused changing tasks distributed parallel nodes nt understand would try run build exists though happening", "num": "11657", "d": "11/2017"}, {"title": "deprecate testutilssimulatenative", "body": "sure ever intended part public api documented naming misleading actually nt simulate native event oops simulates react would received native event way tightly coupled event system internals unfortunate much better educate people dispatch actual browser events tests instead think deprecate removed tests relying leave test two deleted next major", "num": "11656", "d": "11/2017"}, {"title": "question react reconciliation", "body": "goal better understand react reconciliation created example simple timer component basically shows second passed class stateful extends reactcomponent constructor props super props thisstate componentdidmount let setinterval function thatsetstate function prevstate return timer render return thisstatetimer demo class understanding reconciliation class demo extends reactcomponent constructor props super props thisstate componentdidmount let settimeout function thatsetstate showwarning true render thisstateshowwarning return hoping would create new instance stateful component seconds reactdomrender documentgetelementbyid container showwarning statefulcomponent starting timer continued increase screen output basically second whereas expected show third second restart basically start etc miss reconciliation docs led believe feeling react docs misses highlight might missed something", "num": "11651", "d": "11/2017"}, {"title": "forceupdate recalls ref callbacks", "body": "want request feature report bug bug maybe current behavior calling forceupdate ref callbacks called forceupdate ref callback makes infinite loop current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior recall refs versions react browser os affected issue work previous versions react react chrome", "num": "11650", "d": "11/2017"}, {"title": "onclick callback simulating clicking elements triggers additional callback", "body": "link class normalloginform extends reactcomponent handlesubmit e gt epreventdefault consolelog click button \u6a21\u62df\u70b9\u51fb documentgetelementbyid div click render return lt button onclick thishandlesubmit gt log reactdomrender mountnode", "num": "11649", "d": "11/2017"}, {"title": "also lint untracked files", "body": "often would run would say lint passed changed files realize added file yet nt see file make include untracked files note file ignored git different matter shows untracked extremely likely want lint", "num": "11646", "d": "11/2017"}, {"title": "react roadmap document", "body": "want request feature report bug feature current behavior think many people would interested document would show futurelong term plans react features planned current behavior bug please provide steps reproduce possible minimal demo problem via similar bug expected behavior document link exists repo accessed see planned future versions react browser os affected issue work previous versions react na", "num": "11645", "d": "11/2017"}, {"title": "flowtype class inherit", "body": "problem react flowtype typings lets assume javascript foojs type propstype cool boolean class foo extends reactcomponent barjs import foo foo type propsbar temp string class bar extends foo test thispropscool error thispropstemp property found object type question pass additional props bar component", "num": "11643", "d": "11/2017"}, {"title": "radio box check box disabled checked dom structure lacks checked attributes", "body": "report bug radio box check box disabled checked dom structure lacks checked attributes browser structure css input checked color blue result checked failure", "num": "11642", "d": "11/2017"}, {"title": "react watcher bad practice inside alternatives", "body": "want request feature report bug feature js indexjs state num componentdidmount const numgenerator gt mathfloor mathrandom setinterval gt thissetstate num numgenerator render return say passed want component display haha haha haha haha want haha show flash js displayjs state showhaha false componentwillreceiveprops thissetstate showhaha true componentdidupdate thissetstate showhaha false setstate inside componentdidupdate bad practice right watch method like vuejs", "num": "11640", "d": "11/2017"}, {"title": "question workflow release new version", "body": "hello totally place asking sorry please close issue work german newspaper publishing smaller npm packages publically open source purposes privately currently quite sure workflow want learn best wondering manage publish new releases react see release sh scripts npm script basically builds package bumps version publishes lib npm far seems quite similar correct wrong also want publish new release someone runs npm script laptop seems somewhat unsettling feels like wondering care answer facebook", "num": "11628", "d": "11/2017"}, {"title": "add sugar simplify test assertions", "body": "made tests bit verbose might good time revisit write separate issues asserting warning messages verbose need dev block call normalize stack etc ideally wish higher level helper lets us push expected warning assertions validate happen handle component stacks automatically without copypaste normalization helper everywhere cases added actual duplication particular cases throw development nt throw production maybe need although hand pattern needs highly visible maybe extracting common code closure good enough", "num": "11626", "d": "11/2017"}, {"title": "rendertostaticmarkup incorrectly renders async attribute", "body": "want request feature report bug bug current behaviour async tag rendered value empty quotes like current behavior bug please provide steps reproduce possible minimal demo problem note fiddle adds async tag div script tags nt allowed behaviour exactly expected behavior async tag rendered quotes like using method async tag works expected method behaviour different versions react browser os affected issue work previous versions react latest", "num": "11624", "d": "11/2017"}, {"title": "createportal child ref callbacks called componentdidmount", "body": "want request feature report bug bug current behavior using new reactdom api adding ref callback portal subtree fired current component current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior expected ref callbacks children rendered portal like children fired parent component lifecycle method versions react browser os affected issue work previous versions react tested versions react current seem share behaviour", "num": "11621", "d": "11/2017"}, {"title": "include component stack invariants", "body": "iirc nt include devonly anymore maybe let start including errors often prominent warnings would great info", "num": "11619", "d": "11/2017"}, {"title": "investigate uncovered differences development production", "body": "follow one found two invariants function behind dev block nt think intentional need verify may use issue track preserves existing behavior", "num": "11618", "d": "11/2017"}, {"title": "yarn linc nt fail filehasnotchanged warning", "body": "saw modifying eslint config running usersgaearonpreacteslintrcjs warning file ignored default use negated ignore pattern like ignorepattern override problem errors warning lint failed changed files error command failed exit code info visit documentation command react treat particular warning error", "num": "11615", "d": "11/2017"}, {"title": "request", "body": "hello guys make request actually make request axios ie dont work response returns network error using fetch response returns access denied react axios async function makerequest endpoint method get params null headers const request axios method url baseurl endpoint data params headers return await request fetch", "num": "11613", "d": "11/2017"}, {"title": "unfork gcc", "body": "currently using fork gcc js version updated yet gcc version includes see new release js version includes pr remove fork", "num": "11610", "d": "11/2017"}, {"title": "undo operation text input throws exception", "body": "want request feature report bug bug report looks like unmounting text nodes undoing text input operations display value input rendered another component raises exception allow changes unmounted text nodes think issue anyway documented current behavior open change text first controlled text input start debugging developer tools press ctrlz undo text change raises exception setting nodevalue text label right input invalid arguments expected behavior versions react browser os affected issue work previous versions react affects using react also issue master issue springs reactdomjs think needs wrapper around text node see parent updating maybe something like feels like bandaid solution curious causing text node unmount beginwith", "num": "11609", "d": "11/2017"}, {"title": "change props child component", "body": "example want change prop parent component passes clicking button want controlled incident explicitly want make component independent callers need many parameters achieve twoway communication parent child components parent child good people", "num": "11608", "d": "11/2017"}, {"title": "issue input typenumber rendering decimal points", "body": "want request feature report bug would like report bug current behavior use issue displaying one additional decimal point noticed initial value state type end input displayed value state still remains type another end value disappears returns empty string instead current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react demo expected behavior expected behaviour either input performs built validation validation restrictive enough disallow second dot validation modified one must ensure second dot changes value back value without second dot versions react browser os affected issue work previous versions react affected react versions tried react tried google chrome tried browsers", "num": "11606", "d": "11/2017"}, {"title": "children option tags flattened select value", "body": "want request feature report bug bug current behavior following rendered string using reactdom get hydrating code get warning warning text content match server b client fiddle expected behavior get versions react browser os affected issue work previous versions react something reactpartialrendererjs ps browsing reactpartialrendererjs found code point props overwritten later", "num": "11602", "d": "11/2017"}, {"title": "ca nt access discuss react", "body": "know related react directly nt know turn one ca nt accesslogin discussreactjsorg quite time already get error page working discussreactjsorg currently unable handle request http error sometimes retry error sorry error authorizing account perhaps approve authorization", "num": "11601", "d": "11/2017"}, {"title": "dispatching input event element trigger onchange handler", "body": "want request feature report bug bug current behavior triggering native dom input event trigger onchange handler react dom versions current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react react dom react dom note alert appears fiddle expected behavior would expect onchange handler fired sure correct approach happy discuss options versions react browser os affected issue work previous versions react see fiddles chrome osx example", "num": "11600", "d": "11/2017"}, {"title": "investigate need feature check cancel close events", "body": "reactbrowsereventemitter checks browser support cancel close events attaching listeners curious necessary need like determine ramifications removing checks add comments lines checks necessary x maybe eliminate iseventsupportedjs needed check changeeventplugin", "num": "11598", "d": "11/2017"}, {"title": "componentdidmount fired dom mounted portal tree components", "body": "want request feature report bug bug current behavior components inside react portal componentdidmount fired dom mounted yet current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react demo expected behavior componentdidmount fired dom mounted versions react browser os affected issue work previous versions react problem exist react browser os des matter worked fine earlier react", "num": "11597", "d": "11/2017"}, {"title": "add warning hydrating output rendertostaticmarkup", "body": "want request feature report bug feature current behavior accidently generated ssr output using instead hydrated using led warning caused collapsed text nodes would added html comments warning got warning text content match server b client rendering would nice could detect executed output instead seems simple check attribute root element would suffice expected behavior would like kind warning along following lines versions react browser os affected issue work previous versions react due changes worked", "num": "11596", "d": "11/2017"}, {"title": "question automatize tests windows environment amp amp circle ci", "body": "hi everyone wondering makes sense implement react tests windows environment even test build task run master branch thinking using appveyor question migrate circle ci configuration questions make sense available implement", "num": "11595", "d": "11/2017"}, {"title": "warn thisstate set thisprops referentially", "body": "see example think probably reflects misunderstanding props state work detect warn see", "num": "11593", "d": "11/2017"}, {"title": "code coverage", "body": "found react good coverage working could really make impact", "num": "11592", "d": "11/2017"}, {"title": "inlineplaying element ios fire click events rendered react", "body": "want request feature report bug bug report current behavior rendered react autoplaying inline ios fire click events tapped even click handlers added using native dom example created without react fire click events autoplaying inline current behavior bug please provide steps reproduce demo code expected behavior click events fired versions react browser os affected issue work previous versions react issue appears react ios issue seen ios either version react", "num": "11589", "d": "11/2017"}, {"title": "onclick firing disabled buttons", "body": "hello react team found little event firing bug click icon element inside disabled button onclick div element triggered javascript gt delete", "num": "11588", "d": "11/2017"}, {"title": "add element", "body": "want request feature report bug like request feature current behavior create portal currently use function expected behavior", "num": "11586", "d": "11/2017"}, {"title": "move mousewheel event type detection browsereventconstants", "body": "think move wheel event support check browsereventemitter browsereventconstants runs check nice wheel scroll events eventually need attached locally filing part could happen master right less interested cutting overhead event listening much possible really low hanging", "num": "11585", "d": "11/2017"}, {"title": "part huawei mobile phone flashback render page android phones ios phones problem solve problem", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react part huawei mobile phone flashback render page android phones ios phones problem solve problem", "num": "11584", "d": "11/2017"}, {"title": "ie console error stopping render nexteffect", "body": "want request feature report bug bug current behavior page ca nt rehydrated probably rehydration issue happens use empty div instead console error seems equal set breakpoint point source current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react ca nt isolate bug provide minimal demo reliable reproduction steps without providing whole app spent day already still trying isolate issue removed randomly choosen components added render deep component fine defined rendered instead got error restoring various components makes react crash randomly looking points every refresh produces result though still report hope dev got idea could triggering keep looking meanwhile expected behavior errors page rendered versions react browser os affected issue work previous versions react react amp windows ie react working fine happening development production build", "num": "11583", "d": "11/2017"}, {"title": "elements key deduplicated", "body": "want request feature report bug bug current behavior elements key deduplicated unreasonable guess since duplicate keys undefined behavior however subsequent rerenders duplicate elements remain render tree way remove current behavior bug please provide steps reproduce follow instructions expected behavior elements key deduplicated behavior react least duplicate elements appropriately cleaned subsequent rerenders versions react browser os affected issue work previous versions react mac chrome react working", "num": "11582", "d": "11/2017"}, {"title": "controlled inputs nt work safari", "body": "originally thought issue around using upon digging appeared safari plain nt like controlled inputs whatever type appear input see action say worked around time leveraging instead allowed us stop event propagation safari sure affects safari looking older issues looks like solved problem safari nt ca nt confirm", "num": "11577", "d": "11/2017"}, {"title": "react reactrouter create component calls render component good without render crazy", "body": "link sandbox simple code like sidebarjs menujs uncomment component render method component called everytime change link menu component html code going loosing mind", "num": "11574", "d": "11/2017"}, {"title": "preparing", "body": "running list comprehensive things come nt want lose track cherrypick jquense license update changelog tag release release blog post test living heck", "num": "11573", "d": "11/2017"}, {"title": "reword unknown property warning less obnoxious", "body": "thought might cause knee jerk reactions practice think change phrasing neutral one potentially explaining prefer camel case", "num": "11570", "d": "11/2017"}, {"title": "read property reactinternalinstance null", "body": "super unhelpful error react improved ie hierarchy trace kind pointer", "num": "11569", "d": "11/2017"}, {"title": "react recognize prop dom element", "body": "want request feature report bug bug current behavior react recognize prop dom element though react recognizes open links check sandbox console react version warning displayed react version warning displayed sandbox console react version without warning message expected behavior recognized valid dom element attribute mentioned documentation versions react browser os affected issue work previous versions react tested reproducible latest versions chrome safari firefox macos x worked well react", "num": "11568", "d": "11/2017"}, {"title": "html entities rendertonodestream rendertostaticnodestream causing mismatch hydrate", "body": "want request feature report bug bug current behavior server started html entity anywhere within component jsx causes mismatch occur using hydrate expected behavior nt expect mismatch occurs rendertonodestream rendertostaticnodestream nt occur using rendertostring rendertostaticmarkup versions react browser os affected issue work previous versions react react chrome manjaro linux sure worked previous versions", "num": "11567", "d": "11/2017"}, {"title": "umbrella new algorithm resuming interrupted work", "body": "resuming ability reuse fibers interrupted higherpriority update take following scenario component updated normal async priority update finished processing higherpriority update scheduled let say synchronous though could also higherpriority async update sync update interrupts async update leaving unfinished sync update finishes go back processing interrupted async update possible even likely interrupted work nt touched sync work resumed without starting completely important optimization several async features mind including error handling blockers prerendering hidden priority used implementation resuming mostly worked bugs months ago spent time identifying bugs using fuzz testing fixing iterating existing algorithm eventually got version working passed tests even version nt features wanted algorithm seemed inherently flawed decided would best scrap existing algorithm revisit resuming future believe better idea resuming work going split work multiple prs use issue keep track progress apologies descriptions hard follow difficult describe without resorting jargon iterate issue work always reconcile current child set small refactor reflects already without resuming set reconcile always current set reverted resuming algorithm set reconcile sometimes workinprogress set code paths left implementation stash interrupted children cloning workinprogress fiber current already existing workinprogress interrupted stash interrupted workinprogress children corresponding fields case reuse later begin phase add additional check see incoming propsstate match interrupted propsstate bail reuse interrupted children interrupted children longer useful rerender parent overwrite unmounted fibers actually reused even rerender parent see next step gets us back functionality old resuming algorithm resume interrupted children come back priority originally rendered main limitation work lost parent rerendered higher priority need way distinguish workinprogress fiber previous current fiber pool unmounted interrupted children resume even parent rerenders higher priority fiber rerendered interrupted children could reused search interrupted children find ones unmounted nt alternate stash unmounted children separate set kept around indefinitely without overwritten set acts like pool children next time parent rerendered priority interrupted children check pool matches creating new fibers", "num": "11566", "d": "11/2017"}, {"title": "reacttestrenderer support portal", "body": "want request feature report bug report bug current behavior test javascript import react react import createportal reactdom import renderer reacttestrenderer const drop gt createportal hello thisdropcontainer test drop renders gt const component renderercreate const tree componenttojson expect tree tomatchsnapshot fails invariant violation drop nothing returned render usually means return statement missing render nothing return null test passes wrap createportal container javascript createportal hello thisdropcontainer expected behavior code without parent container works fine browser seems adding parent test pass believe support empty returns versions react browser os affected issue work previous versions react lastest", "num": "11565", "d": "11/2017"}, {"title": "introduction external pages dangerouslysetinnerhtml js fails", "body": "introduction external pages dangerouslysetinnerhtml js fails", "num": "11562", "d": "11/2017"}, {"title": "clicking radios fires change event unconditionally older browsers", "body": "may change agreed missed radio input clicks test fixtures fails safari ios safari chrome test fixture care figure way document", "num": "11560", "d": "11/2017"}, {"title": "react tag", "body": "looks like react tag never got pushed github cut new tag biggest annoyance release missing dropdown dom test fixtures append url huge deal seems low effort take care noone minds", "num": "11559", "d": "11/2017"}, {"title": "overflowx none", "body": "hi spent half hour realizing passing string none overflowx warnings logs jsx style passing invalid simply removed inline styles warnings errors would like send pull request react help add logging developers accidentally pass invalid string warn things like invalid even passing class browser barfing helped realize overflowx hidden valid attribute css value idea way log console invalid css attributes disappear jsx final inline style converted object would love logs invalid css attributes maybe configuration missing see logs react annoying try get overflow none invalid next time css something missing look mozilla manual thanks pointers annoying little bugger jsx", "num": "11556", "d": "11/2017"}, {"title": "something like emberobservercom", "body": "something like react world", "num": "11554", "d": "11/2017"}, {"title": "nonpassive event warnings component clicked", "body": "want request feature report bug bug current behavior following console warning emitted every time input clicked current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react steps new tab visit open browser console ensure messages unfiltered run code click either select fields page warning emitted every time either select field clicked selection need change expected behavior warning attached event listeners versions react browser os affected issue work previous versions react react chrome official build tested also ubuntu opera issue issue began appearing recent upgrade chrome using react first saw upgraded see issue resolved", "num": "11553", "d": "11/2017"}, {"title": "render root tag", "body": "mistake amp amp test want render div tag", "num": "11552", "d": "11/2017"}, {"title": "rendered ui react reactdom", "body": "code js import react react import reactdom reactdom import router route hashhistory reactrouter import archives modulesarchives import layout moduleslayout import featured modulesfeatured import settings modulessettings consolelog hi reactdomrender documentgetelementbyid app error browser", "num": "11551", "d": "11/2017"}, {"title": "add validation reactchildren helpers", "body": "currently helpers like validate passed elements things like missing keys go unnoticed see discussion deleted original tweet context", "num": "11549", "d": "11/2017"}, {"title": "stopimmediatepropagation available synthetic events", "body": "order call method access via awesome supported see prior issue use case sip nt required specific use case want kill hover events touch input trigger cancels internal cascade", "num": "11547", "d": "11/2017"}, {"title": "ignore system directories build script", "body": "noticed running gives error enotdir directory open usersgaearonpreactpackagesdsstorepackagejson error objectfsopensync fsreadfilesync readdirsyncfilterdir arrayfilter getpublicpackages ignore system directories", "num": "11544", "d": "11/2017"}, {"title": "nt get keys warning case", "body": "example generates buttons based state change nt get warning use keys class hello extends reactcomponent constructor props super props thisstate test thisarr componentdidmount settimeout gt thissetstate render return ps uncomment lines function get warning though nt get warning first case know without keys two buttons going rendered settimeout different", "num": "11540", "d": "11/2017"}, {"title": "input typecheckbox rendered correctly nested html atag", "body": "want request feature report bug bug current behavior peculiar problem using html tag react thing click directly checkbox tag checkbox rerender correctly state updated example given code render component click directly checkbox case showmap set false since set true constructor checkbox still checked html view however click tag directly checkbox state showmap updated correctly well view make work calling app scroll top page click tag example code import react react import render reactdom const styles fontfamily sansserif textalign center margintop class menu extends reactcomponent constructor props super props thisstate showmap true togglecheckbox event gt thissetstate showmap thisstateshowmap eventpreventdefault render return thisstateshowmap show hide show map const app gt render documentgetelementbyid root expected behavior press checkbox update visually versions react browser os affected issue work previous versions react react chrome windows", "num": "11539", "d": "11/2017"}, {"title": "make react resilient dom mutations google translate", "body": "coming search see workaround star issue want request feature report bug bug though decent chance chromegoogle translate one current behavior using google translate page using react certain code pattern produces javascript error rendered content changes current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react checked macos navigate chrome browser set language japanese right click page select translate english click checkbox error show source example found part code seems cause following two lines changing following fixes behavior google translate expected behavior produce error versions react browser os affected issue work previous versions react created identical example react following pages repeating steps outlined error produced seems affect react chromeonly feature affects chrome", "num": "11538", "d": "11/2017"}, {"title": "getting warning unique key prop despite added correctly", "body": "want request feature report bug bug current behavior reported using library react error demo steps reproduce go demo codesandbox try choose option see console error keys added work fine react expected behavior error keys added versions react browser os affected issue work previous versions react react worked fine react", "num": "11537", "d": "11/2017"}, {"title": "inline style decimal numbers", "body": "want request feature report bug bug current behavior style prop passed decimal number react converts dot comma resulting invalid css value suspect might due locale different english behavior irregardless user locale conversion correct use current behavior bug please provide steps reproduce possible minimal demo problem expected behavior decimal numbers always converted dot versions react browser os affected issue work previous versions react react version os macos browsers chrome safari firefox beta unaffected", "num": "11532", "d": "11/2017"}, {"title": "touched clicked component gets ghost mousedown event", "body": "deployed minimal trimmed app entire source code clicking touching either square make clicked touched square disappear square everything works intended desktop machine chrome firefox also shows correct behavior safari ios nt care ie edge following triggers bug chrome either android tablet desktop machine emulating handheld device reload app touch click top blue square squares disappear console log see clicked touched bottom green square received spurious mousedown event deleted appcss applied squares nt use would get following warning chrome emulating handheld device intervention unable preventdefault inside passive event listener due target treated passive see way deployed app warning goes away ghost mousedown event due bug code bug react bug chrome resolve issue looking workaround bug code", "num": "11530", "d": "11/2017"}, {"title": "add function name breakpoint tracing", "body": "want request feature report bug maybe feature current behavior interesting happen react fiber try use breakpoint trace react render function found call stack function name made captured picture current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react sorry expected behavior define function name versions react browser os affected issue work previous versions react react osx", "num": "11529", "d": "11/2017"}, {"title": "rfclarification asynchronous", "body": "quite tried understood asynchronous failing find answer past came conclusion historical reasons probably hard change however gaearon indicated clear reason curious find anyway reasons often hear think ca nt everything easy counter async setstate required async rendering many initially think render efficiency nt think reason behind behavior keeping setstate sync async rendering sounds trivial something along lines fact example allows synchronous assignments observables still respect async nature rendering async setstate needed know state rendered argument hear sometimes want reason state rendered state requested sure principle much merit either conceptually feels strange rendering side effect state facts today years old next year turn regardless whether owning component manages rerender year draw probably good parallel would nt able read last version self written word document printed would pretty awkward nt think example game engines give feedback state game exactly rendered frames dropped either interesting observations years nobody ever asked question know observables rendered question seems relevant often encounter cases knowing data rendered relevant case remember needed know pixel dimensions data layout purposes elegantly solved using nt really rely async either cases seem rare hardly justify design api primarily around done somehow suffices think doubt react team aware confusion async nature often introduces suspect another good reason current semantics tell", "num": "11527", "d": "11/2017"}, {"title": "transpilation freezes reactdomserver interface", "body": "initially reported attempting upgrade caused test previously working fail test using sinon stub results following error export frozen source frozen confirms result transpilation simply splitting report separate issue add reproduction soon plan submit pr follow", "num": "11526", "d": "11/2017"}, {"title": "disable form submission using onsubmit handler", "body": "want request feature report bug bug current behavior currently possible prevent form submission using handler current behavior bug please provide steps reproduce possible minimal demo problem sample code expected behavior never submit returns false every time versions react browser os affected issue work previous versions react react simplified code snippet nt load sandbox repro false gt", "num": "11522", "d": "11/2017"}, {"title": "react props frozen sealed", "body": "trying update application react getting error message chrome pseudo code currently like jsx const styles container fontsize fontfamily helvetica neue class mycomp extends component render gt let theme thispropstheme stylescontainerfontfamily themefont noticed error happens second time render run also test debugger inside render method getting return means frozen react state copied styles object second pass replaced frozen nt happen previous versions react react freezing properties", "num": "11520", "d": "11/2017"}, {"title": "consider including directory name stack trace files", "body": "see maybe file called pretty common directory structures include directory name short component stack trace", "num": "11519", "d": "11/2017"}, {"title": "unify linc lint build tasks", "body": "currently two tasks nt share code lint lint changed make share code using node api like currently move shared code", "num": "11516", "d": "11/2017"}, {"title": "bunch find module errors reactdom", "body": "want request feature report bug bug current behavior nt used version specific features react module failed transpile errors reproduce learn example react currently used react upgrade current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react versions react browser os affected issue work previous versions react react reactdom tested windows chrome browser browsers nt related meaningless yes worked react", "num": "11514", "d": "11/2017"}, {"title": "textarea falls error works fine", "body": "", "num": "11511", "d": "11/2017"}, {"title": "warn component proptypes rather proptypes", "body": "see feels like easy mistake make easy us detect", "num": "11510", "d": "11/2017"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11509", "d": "11/2017"}, {"title": "unnecessary rerendering bailedout components legacy context provider deep child updated batch", "body": "issue going start mostly theoretical still working make minimal repro case scenario one component return false bail child component still method called avoiding many details roughly jsx import react component react class extends component shouldcomponentupdate nextprops const result boolean nextpropsitem consolelog shouldcomponentupdate result return result render consolelog render thispropsitem return class b extends component state seconds componentdidmount thisinterval setinterval gt thissetstate seconds thisstateseconds componentwillunmount clearinterval thisinterval render consolelog b render thispropsitem return thispropsitemname thisstateseconds seconds export default case work expected seems direction errors seeing something taking place render cycle b rendered without reusing prop previous reconcile first question theories may happening explore using parent reading thing think fork original oss flux passing props naming collisions fairly certain performing mutations end manage pull repro case immediately post utter joy heart cc acdlite gaearon issue asking messenger recently", "num": "11508", "d": "11/2017"}, {"title": "formalize toplevel es exports", "body": "currently ship commonjs versions packages however might want ship esm future ca nt quite easily nt really decided toplevel es exports would look like package example bunch named exports also default export called encourage people better tree shaking currently exports class thus would start failing node converted default export", "num": "11503", "d": "11/2017"}, {"title": "iterators supported inside componentrender", "body": "current behavior provide list react components works provide iterator react components work works const app props gt elements const elements function yield yield yield nt work const app props gt elements const elements function yield yield yield unfortunately could nt make run jsfiddle maybe support iterators expected behavior render exactly version listbased one versions react browser os affected issue work previous versions react reactdom browserindependent tried firefox", "num": "11502", "d": "11/2017"}, {"title": "react renders differently server client", "body": "warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client come rendered different solution tried rendertostaticmarkup instead rendertostring working", "num": "11500", "d": "11/2017"}, {"title": "uncaught error thrown twice", "body": "problem mention issue unhandled error displayed twice error based gaearon comment context reason happens intentionally let browser interpret error uncaught rethrow understand thrown browser source file second thrown react source file added follow advice error add error boundary see error huge problem daytoday workflow fact nudges people add error boundaries nice case advice mentioned error get error thrown", "num": "11499", "d": "11/2017"}, {"title": "props set default parameter added component props property", "body": "want request feature report bug bug current behavior able render default value property contain explicitly set intended versions react browser os affected issue work previous versions react chrome", "num": "11498", "d": "11/2017"}, {"title": "react upgrade still looking reactjs even though nt exist anymore", "body": "want request feature report bug current behavior upgrading react means nodemodulesreactreactjs longer exists however watchingbundling files webpack webpack sometimes trips errors trying locate nodemodulesreactreactjs may well webpack issue react issue hoping someone help ca nt get bottom seems timing thing errors every couple file changes rebundles rest time works normally webpack config simple set true use babelloader presets expected behavior never look nodemodulesreactreactjs bundling webpack versions react browser os affected issue work previous versions react exists react problems previous versions", "num": "11497", "d": "11/2017"}, {"title": "setstate callback called component state updated react shallow renderer", "body": "want request feature report bug report bug current behavior call setstate callback test using react shallow renderer via enzyme callback gets called still old state edit seems limited componentwillmount current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react edit reproduce expected behavior setstate callback gets called access new state versions react browser os affected issue work previous versions react version worked enzyme edit think componentwillmount line causes render method shallow wrapper return early updates state", "num": "11496", "d": "11/2017"}, {"title": "add datareactroot back reactdomrender", "body": "want request feature report bug bug current behavior react added using current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior also tag tree root react detection purposes versions react browser os affected issue work previous versions react", "num": "11494", "d": "11/2017"}, {"title": "dom attribute datetime nt lowercased rendered string", "body": "want request feature report bug bug current behavior dom property nt converted lowercase attribute counterpart element element rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react const react require react const reactdomserver require reactdomserver const markup reactdomserverrendertostring reactcreateelement time datetime consolelog markup print expected behavior output versions react browser os affected issue work previous versions react react react dom node", "num": "11492", "d": "11/2017"}, {"title": "npm run build error", "body": "bug nodejs followed steps git clone npm install run script error js npm run build build usersucwebdocumentsgithubreact npm run versioncheck amp amp node scriptsrollupbuildjs versioncheck usersucwebdocumentsgithubreact node scriptstasksversioncheckjs building reactdevelopmentjs umddev typeerror read property specifier undefined think strange", "num": "11491", "d": "11/2017"}, {"title": "default browser android working blank access web build react", "body": "problem build web react tried access default browser android android working blank android wokring write es compile es working test android default browser working blank default browser android support es right someone help", "num": "11490", "d": "11/2017"}, {"title": "trigger simulated input value change react reactdom updated", "body": "trying trigger inputchange event react form outside react using pure js jquery reactdom able use simulated flag event object event pass note use react even though form trying trigger based react pure js jquery trigger input value change event original suggestion comment used work react release triggering input change event expected internal changes handles changes input data react believe point would give hint idea could", "num": "11488", "d": "11/2017"}, {"title": "text next element render page react", "body": "hello today spotted bug causes text next element render page react quick job search sure designed behaviour working perfectly react let know need information", "num": "11485", "d": "11/2017"}, {"title": "release script followup", "body": "x add timeout querying npm right publish x conditionally log post publish steps x maybe print readytopaste instructions cra prerelease testing x publish packages nt remove whitelist config x add v prefix release tags x nit seconds gt minutes long tasks", "num": "11481", "d": "11/2017"}, {"title": "let warn local yarn version support workspaces", "body": "want request feature report bug feature current behavior got error local yarn version think maybe upgrade yarn module land package folder upgrade yarn try exec command work current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior think would great throw warning ambiguous error versions react browser os affected issue work previous versions react react osx", "num": "11478", "d": "11/2017"}, {"title": "assignment jsx double circulation", "body": "want request feature report bug current behavior code js import react component react class app extends component export default app result print page expected behavior strange start versions react browser os affected issue work previous versions react", "num": "11476", "d": "11/2017"}, {"title": "pions", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11474", "d": "11/2017"}, {"title": "", "body": "", "num": "11468", "d": "11/2017"}, {"title": "use reactcloneelement original element key changed", "body": "use reactcloneelemen clone element found key changed add original key read doc cloneelemnt said key ref original element preserved miss thing code console message capture reactdom structure thanks", "num": "11464", "d": "11/2017"}, {"title": "rn nt receive events unknown tags", "body": "flow uncovered need verify return early process events case", "num": "11461", "d": "11/2017"}, {"title": "check length accessing characters", "body": "see comment although seems unlikely someone would pass onecharacter prop price least versions chrome right reported check first comparison please comment want take issue somebody already commented please let finish", "num": "11460", "d": "11/2017"}, {"title": "need implement n level expandable listview react native", "body": "basic query react native side menu n level expandable options categories subcategories amp make react native already research lot unable find significant solution thing help appreciated new react native basic knowledge may creating dynamic components done already implemented help lot something frequently needed development", "num": "11459", "d": "11/2017"}, {"title": "improve formatting errors building react", "body": "currently build fails eg due missing named export message pretty ugly would nice display relevant line inline syntax highlighting sort like babel maybe babel could helpful sure reproduce fail build removing somewhere run tip fastest way build might enough reproduce iterate error message relevant logic displaying build errors probably somewhere like work please comment nt many people working thing", "num": "11454", "d": "11/2017"}, {"title": "investigate dce regression", "body": "seems like started bundling persistent reconciler dom bundles maybe negated effect es modules even though net win need look happened", "num": "11450", "d": "11/2017"}, {"title": "fix command windows", "body": "currently fails windows depends grep find way make cross platform way eg node script", "num": "11444", "d": "11/2017"}, {"title": "ensure linted bundles exist", "body": "added validation built bundles however actually messed eslint nt running files invalid arguments fixed fail build glob patterns searching nt exist", "num": "11443", "d": "11/2017"}, {"title": "remove support cloneelement getmountedinstance shallow renderer", "body": "test added part shallow renderer rewrite understand tests take instance call pass result shallow renderer internally seems like misunderstanding api work need fix callsites read instead see test wrong change render different shallow renderer like js const shallowrenderer createrenderer let result shallowrendererrender expect result toequal foo bar const instance shallowrenderergetmountedinstance fail argument passing case proper react element actually mostly happens work react elements shallowrenderer instances code almost read anything else update path example hack needed think delete test fix internal callsites never intentionally supported prevents fixes shalllow renderer", "num": "11441", "d": "11/2017"}, {"title": "still yields error ssr rehydration feoffset filter", "body": "bug since regressions issues closed could comment gaearon current behavior navigate ssr page get rehydration error outputting svg expected behavior warnings versions react browser os affected issue work previous versions react version react gt browsers attaching svg thats causing error", "num": "11438", "d": "11/2017"}, {"title": "react complains onchange input type submit", "body": "confused error valueonchange makes sense would complain inputs types seems like bug show submit button docs states valid show text submit input docs react clearly show examples forms submit buttons piece button code code simple button component called like component renders like however get warning button nt submit form apart form object believe rendering readonly warning states anyone know happens", "num": "11436", "d": "11/2017"}, {"title": "release script followup items", "body": "today used new release script first time publish couple things noticed want followup pr x autoinstall update release script yarn deps running pr x script manually tagged release x postbuild test instructions show fullyqualified paths prevent accidentally verifying wrong build eg checkout release script running rather path x check handle packages one failed reconciler release bc expected matter probably x publishing stable release also update next release point", "num": "11435", "d": "11/2017"}, {"title": "react web app working ie", "body": "want request feature report bug report bug current behavior web app displaying black screen load current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react created demo app using createreactapp npm start application tried run ie displays black screen error saying expected identifier console expected behavior application displayed ie browser happening versions react browser os affected issue work previous versions react react reactdom reactscripts browser ie", "num": "11429", "d": "11/2017"}, {"title": "raising issue warning react depends requestanimationframe make sure load polyfill older browsers", "body": "want know suppress warning ie lt edge ie like could guys help thanks much", "num": "11428", "d": "11/2017"}, {"title": "class styles inside javasript styles", "body": "hi const styles theme gt return root borderradius themespacingunit boxshadow themeshadows padding insert style inside another class style like const styles theme gt return root borderradius themespacingunit boxshadow themeshadows padding", "num": "11425", "d": "11/2017"}, {"title": "ignore content client nt warn mismatches", "body": "react ssr amp lazysizes trying use noscript pattern lazy load images lazysizes seeing warning expected server html contain matching image component render method js render const cdn url width height thisprops react issue tags", "num": "11423", "d": "11/2017"}, {"body": "sure add demo clientserver mismatch jsfiddle", "d": "11/2017"}, {"body": "maybe create small project locally share", "d": "11/2017"}, {"body": "gaearon", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "sure add demo clientserver mismatch jsfiddle reference use umd build reactdomserver manually inject markup example reproducing issue", "d": "11/2017"}, {"body": "sounds like question module bundler react encourage use community support resources bug tracker general recommended use two versions react one project", "d": "11/2017"}, {"body": "nt see anything obvious may bug react need reproducing case look completely unrelated calling bad idea method nt side effects executed many times whenever necessary", "d": "11/2017"}, {"body": "ok yet got isolated code fragment pass testing suggests something passing button component central redux state regarding observation sure place scrollto call mapstatetoprops inside function wrapped connect hoc", "d": "11/2017"}, {"body": "react js fitable static webpage also fitable dynamic webpage without using button react primarily meant dynamic apps although solutions like gatsby make good way create static apps commen combine react js another library instance jquery common use react libraries however since takes care updating dom jquery typically becomes less useful react projects guide integration libraries context react js recommended use also different tools instance jquery angular js bootstrap etc nt understand question hope helps note bugtracker better places ask questions", "d": "11/2017"}, {"body": "help general react always uses convention", "d": "11/2017"}, {"body": "gaearon yeah understand jsx uses camelcase code react library mapping camelcase props javascriptdom elements look code pointed working real dom nodes way use react instead dom even better currently sure could", "d": "11/2017"}, {"body": "mapping dom events names kind scattered around library right easy snippet cut paste", "d": "11/2017"}, {"body": "gaearon point files defined", "d": "11/2017"}, {"body": "events get first letter capitalized added front find search code", "d": "11/2017"}, {"body": "gaearon thanks help quick question inline code like github docs describe functionality", "d": "11/2017"}, {"body": "sure browsers treat async true false react output correct html spec boolean attributes specifying attribute specifying value", "d": "11/2017"}, {"body": "difficult would use canonical name without value semantically identical maybe could save people bytes", "d": "11/2017"}, {"body": "gaearon thanks specifying attribute specifying value think mean specifying attribute value specifying aweary moment using result fine long browsers follow spec treat true", "d": "11/2017"}, {"body": "difficult would use canonical name without value happy review pr", "d": "11/2017"}, {"body": "see", "d": "11/2017"}, {"body": "nt understand report bug report feature request combined using inside working create isolated example feature request create target node clear react could guess insert items", "d": "11/2017"}, {"body": "gaearon example see createportal receive second argument domnode domnode new fragment ps close understand impossible", "d": "11/2017"}, {"body": "react distinction react elements dom elements typically app composed react elements however need render dom element typically render react dom container eg portals let render react element subtree different dom element example render question confusing target ca nt react element point portals render react tree different dom element dom element react element ca nt render thus ca nt target portal however would expect possible render dom element without portal hope makes sense", "d": "11/2017"}, {"body": "gaearon hello solved problem use createportal method fragment parentnode last sentence made think thought", "d": "11/2017"}, {"body": "nice work yeah keep mind react fact react nt use dom works react native etc", "d": "11/2017"}, {"body": "want dig happens expect error", "d": "11/2017"}, {"body": "seems enter loop inside stack keeps building elements indefinitely causing infinite loop familiar render loop could caused circular reference somewhere possible return markup kind error would expect", "d": "11/2017"}, {"body": "looks like returns false portals resolve reactpartialrenderer keeps returning portal element keeps getting pushed stack", "d": "11/2017"}, {"body": "think want throw false fail objects nt", "d": "11/2017"}, {"body": "oh used fail actually accepts portals guess need explicit check somewhere", "d": "11/2017"}, {"body": "expected behavior throw error trying render portal using", "d": "11/2017"}, {"body": "yes ca nt render anyway throw missing dom node ca nt dom node server supposed skip server code", "d": "11/2017"}, {"body": "fix", "d": "11/2017"}, {"body": "okay include fix hanging loop next release might take couple weeks common anyway since reproduce need server render client still use case currently unsupported need pass data components render portal case would also say super great use ssr renderer client brings extra bytes might well new div read", "d": "11/2017"}, {"body": "thanks way came across issue unit testing use enzyme render method generate static snapshots components compare previous snapshots tests ran browser using karma enzyme render calls hood", "d": "11/2017"}, {"body": "oh see thanks explaining context", "d": "11/2017"}, {"body": "using react interactive component events tap without delay long press two finger tap etc state styling touch interactions", "d": "11/2017"}, {"body": "think people would probably looking targeted api compatible replacement less exact port terms features component seems serve broader use case", "d": "11/2017"}, {"body": "docs need updating react supports polyfills file issue docs", "d": "11/2017"}, {"body": "filed", "d": "11/2017"}, {"body": "ok thanks clearing quickly", "d": "11/2017"}, {"body": "wan na send pr fix docs", "d": "11/2017"}, {"body": "seems fair open one", "d": "11/2017"}, {"body": "store immediately set back inside event", "d": "11/2017"}, {"body": "think would work want send pull request sent via superhuman tue nov pm dan abramov lt notifications githubcom gt wrote store windowevent immediately set back inside event receiving authored thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "yeah like", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "checked resources", "d": "11/2017"}, {"body": "hey gaearon yeah checked resources reactvirtualized unfortunately nt meet frontend needsusecases went custom table component coupled table solution reactlazyload get similar reactvirtualized effect still nt seem efficiently render", "d": "11/2017"}, {"body": "provide reduced test case shows problem", "d": "11/2017"}, {"body": "spacejamtda likely root issue trying inject modify many dom elements best bet implement element recycling strategy renders content view", "d": "11/2017"}, {"body": "please file react native repository thanks", "d": "11/2017"}, {"body": "gaearon thanks really react native issue crash happens react library seems something execution javascript", "d": "11/2017"}, {"body": "native code repository know says assure code nt exist", "d": "11/2017"}, {"body": "particular code react deals network requests", "d": "11/2017"}, {"body": "nt typo wrote instead", "d": "11/2017"}, {"body": "oh sorry thanks", "d": "11/2017"}, {"body": "note using inheritance overloading component renders recommended instead use composition covers use case fine apart reason get warning line never try initialize props object instead use props react passes constructor close question typescript react want aware vast majority cases inheritance solution react problems encourage experiment component composition", "d": "11/2017"}, {"body": "first thanks help favor extracting separate javascript module scenes still need inherited example state number common objects needs given child object bits example propsclassnamepropsstyle propswidthpropsheight appearances need specified externally repeated definition props difficult redundant typescript import react react export interface iuielementprop extends reactprops export interface iuielementstate export class uielement extends reactcomponent public props iuielementprop null public state protected process false public async setstate state return new promise resolve reject gt supersetstate state gt resolve protected async setprocess process boolean thisprocess process await thissetstate protected async setprocessing await thissetprocess true protected async unlockprocessing await thissetprocess false protected isprocess return thisprocess protected async processing handle gt promise return new promise async resolve reject gt thisisprocess false await thissetprocessing try await handle resolve catch error reject error finally await thisunlockprocessing else consolewarn \u88ab\u4e22\u5f03\u7684\u70b9\u51fb\u4e8b\u4ef6 protected getclassname classname string return classnamejoin public state public constructor props super props \u7ec4\u4ef6\u521a\u521a\u6302\u8f7d\u65f6 public componentwillmount \u7ec4\u4ef6\u5df2\u7ecf\u6302\u8f7d\u65f6 public componentdidmount param props \u63a5\u53d7\u7684props public componentwillreceiveprops props public shouldcomponentupdate public componentwillupdate public componentdidupdate \u7ec4\u4ef6\u5c06\u88ab\u5378\u8f7d\u65f6 public componentwillunmount typescript import react react import iuielementprop iuielementstate uielement uielementuielement import progressring progressbarprogressring import application coreapplicationapplication export interface ibuttonprop extends iuielementprop \u6309\u94ae\u7684\u5185\u5bb9 content string tooltip string \u662f\u5426\u53ef\u7528 \u9ed8\u8ba4\u4e3atrue isenable boolean style reactcssproperties \u70b9\u51fb\u4e8b\u4ef6 click gt promise export interface ibuttonstate export class button extends uielement public props ibuttonprop null public state ibuttonstate private style require style \u7ec4\u4ef6\u521a\u521a\u6302\u8f7d\u65f6 public componentwillmount \u7ec4\u4ef6\u5df2\u7ecf\u6302\u8f7d\u65f6 public componentdidmount param props \u63a5\u53d7\u7684props public componentwillreceiveprops props public shouldcomponentupdate public componentwillupdate public componentdidupdate \u7ec4\u4ef6\u5c06\u88ab\u5378\u8f7d\u65f6 public componentwillunmount public render return thispropscontent private async onclick thispropsisenable false true thispropsclick await thisprocessing async gt await thispropsclick", "d": "11/2017"}, {"body": "typescript", "d": "11/2017"}, {"body": "diokuz react kept inside flow repo", "d": "11/2017"}, {"body": "yes currently built flow might change future", "d": "11/2017"}, {"body": "please provide complete example clear diagnosed problem react", "d": "11/2017"}, {"body": "would mind also comparing behavior none react version helpful figure browser idiosyncrasy bug react", "d": "11/2017"}, {"body": "jquense seems like browser inconsistency bug react", "d": "11/2017"}, {"body": "could potentially get around checking target disabled letting event dispatch continue simpleeventplugin", "d": "11/2017"}, {"body": "pass props constructor still thisprops everywhere except constructor yes react sets anyway constructor runs still confusing work places others especially constructor methods call shared method reads avoid potential confusion recommend always calling also source code create element see createelement adds props regardless use super props relation question creates element instance read difference get back question technically necessary plan access constructor method call constructor however pretty confusing remember might know call next person team want access constructor surprised nt work easier always specify avoid problems", "d": "11/2017"}, {"body": "gaearon thank answer clear", "d": "11/2017"}, {"body": "nt think intend support sort extensible plugin architecture might support limited set hooks necessary eg caching propose specific api", "d": "11/2017"}, {"body": "gaearon take one nt mind", "d": "11/2017"}, {"body": "proposal actionable yet like consensus team first need wait next major soon", "d": "11/2017"}, {"body": "ohh okay well happy take time", "d": "11/2017"}, {"body": "sounds fine especially keep validation ssr edge case think far", "d": "11/2017"}, {"body": "need verify triggers bad attribute", "d": "11/2017"}, {"body": "especially keep validation ssr edge case think far pretty important leave added", "d": "11/2017"}, {"body": "nt realize removed innerhtml building neat", "d": "11/2017"}, {"body": "oh yeah sophiebits part", "d": "11/2017"}, {"body": "known issue see got open pr fixes need polish", "d": "11/2017"}, {"body": "thanks sorry dupe searching find old issue", "d": "11/2017"}, {"body": "temporary escape hatch create js const react require react const proptypes require proptypes reactproptypes proptypes put first import app imports work really file issue package still uses fork automated conversion script use ps nt use betas stable version months", "d": "11/2017"}, {"body": "nt sure looks like nt work got undefined object evaluating", "d": "11/2017"}, {"body": "enough information help sorry ca nt guess went wrong without full reproducing example also bug tracker please refer community resources support", "d": "11/2017"}, {"body": "take", "d": "11/2017"}, {"body": "sounds good", "d": "11/2017"}, {"body": "work one may need time study first", "d": "11/2017"}, {"body": "sure please nt disappear keep us updated", "d": "11/2017"}, {"body": "problem keep posted", "d": "11/2017"}, {"body": "add queue", "d": "11/2017"}, {"body": "gaearon think right track currently build process using rollup bundle imports single js file instead bundling together want dependency load using require bundling process notice reactfibertreereflection also used packages like reactdom reactnativerenderer etc mean need add dependency packagejson well may also need experiment external options bundlejs see correctly bundle using require statements", "d": "11/2017"}, {"body": "instead bundling together want dependency load using require bundling process yes may also need experiment external options bundlejs see correctly bundle using require statements think build process automatically treat something external commonjs builds think adding might enough fine use wildcard private package", "d": "11/2017"}, {"body": "gaearon reactfiberinstrumentation found trying run yarn testbuild making reactconciler dependency exists flat bundle loading reactnoop also convert another flat bundle export reactfiberreconciler", "d": "11/2017"}, {"body": "forgot one let remove import used debugging tool nt updated months anyway figure fix later", "d": "11/2017"}, {"body": "gaearon reactfiber reactfiberupdatequeue reactnoop make flat bundle fix direct imports", "d": "11/2017"}, {"body": "type imports real imports wo nt affect tests build", "d": "11/2017"}, {"body": "gotcha flows", "d": "11/2017"}, {"body": "fixed thanks rivenhk", "d": "11/2017"}, {"body": "think one would require experience circleci nt pointers start nt understand failing beginnerfriendly issue marked difficulty medium reason", "d": "11/2017"}, {"body": "another example", "d": "11/2017"}, {"body": "gaearon want work research circleci document nt find document said parallel test deployment sequence curious circleci deal parallel test deployment sequence think two situations parallel test finishes run deployment sequence true think wo nt cause current test error container runs deployment container test finished guess likely case sometimes passed node already built file sometimes failed node nt build file yet think maybe container run deployment node test finished situation come two solutions want keep current test flow try keep node builds time balance test first run test parallel reference link circle ci automaticbalancingwithmanualparallelsetup circle ci deployment", "d": "11/2017"}, {"body": "node full build nt understand deployment nodes could work", "d": "11/2017"}, {"body": "nodes share file system", "d": "11/2017"}, {"body": "think nodes share file system otherwise fail every time easier debug add log like current build time artifacts", "d": "11/2017"}, {"body": "would make sense change upload script run second node", "d": "11/2017"}, {"body": "yep think document ca nt ensure whether deployment stage triggered parallel test finished", "d": "11/2017"}, {"body": "put deployment command right test command benefit separating", "d": "11/2017"}, {"body": "think also workable may lead misunderstanding cause put build process test stage try use compile stage run compile stage promise stages needed file", "d": "11/2017"}, {"body": "interesting part regular tests nt need compilation compile stage run stages wait unnecessarily prefer single script everything buy circleci specific terminology unless buys us something real good eg parallelism useful maybe try", "d": "11/2017"}, {"body": "ok understand consideration think fix work tell anything help", "d": "11/2017"}, {"body": "cc ljharb sure folks use", "d": "11/2017"}, {"body": "nt see usage enzyme code however nt yet written might need method however grown think simulate event api enzyme actually huge footgun discourage use anyways fine deprecate", "d": "11/2017"}, {"body": "agreed simulate native generates fake event even dom event always confusing working event system internals would great get rid", "d": "11/2017"}, {"body": "react point view js lines inside condition type inner structure elements js outside elements type div contain single child type also type times react compares types nt care elements defined lines", "d": "11/2017"}, {"body": "gaearon hm yeah cases seems stateful key think somehow confused example different situation look right latter example react key buttons regardless fact whether buttons rendered using keys example right able differentiate value changes", "d": "11/2017"}, {"body": "react key buttons regardless fact whether buttons rendered using keys example right yes sounds right", "d": "11/2017"}, {"body": "react compares types nt care elements defined lines gaearon dan nt react using information lines example keying buttons using keys even though visible time nt case say assigning key first occurence code key second occurence code seems missing something gaearon aah think reason first case keys using inside return clause whereas second case two different return clauses right", "d": "11/2017"}, {"body": "yes sounds right think find easier understand compile jsx babel repl show jsx calls example occupy spots one structure otherwise holes missing", "d": "11/2017"}, {"body": "gaearon discovered another interesting thing know value changes still uses instance component nt key components like keyed buttons case different keys button ie render return thisstatetest renders different instances changes difference compared first example single operator", "d": "11/2017"}, {"body": "using babel transpiler site dan pointed transpiles whereas javascript render return thisstatetest transpiles react different structure diffing takes element position element position", "d": "11/2017"}, {"body": "consider every argument second one hole every hole gets implicit index hole gets filled cases two different holes get filled either", "d": "11/2017"}, {"body": "gaearon see though stuff explained docs would hurt though understand stuff goes beyond basics knowing needed anyway imho", "d": "11/2017"}, {"body": "always send doc prs balance hard cater broadest audience possible experience replying issues years people nt ready learn details learning react like could indeed benefit better explanation idea concisely express ideas send pr reconciliation page already marked advanced think fine add details", "d": "11/2017"}, {"body": "gaearon ok understand", "d": "11/2017"}, {"body": "fact refs called updates expected pass arrow function explained also mentioned ref documentation infinite loop sounds somewhat expected use ref callbacks setting fields settingclearing native event subscriptions unconditionally scheduling additional updates sounds like problem code like calling would problem trying solve", "d": "11/2017"}, {"body": "gaearon got thanks function reference works fine problem reacting dom element existing reactvirtualized windowscroller forceupdate called atom changes", "d": "11/2017"}, {"body": "nt think understand problem description ref callback anything setting field probably wrong place", "d": "11/2017"}, {"body": "line calling", "d": "11/2017"}, {"body": "one click caused actual click click caused call", "d": "11/2017"}, {"body": "click div click button triggers callback button", "d": "11/2017"}, {"body": "kunoky find chinese talk chinese", "d": "11/2017"}, {"body": "hi help one", "d": "11/2017"}, {"body": "sure", "d": "11/2017"}, {"body": "cool work send pr weekend", "d": "11/2017"}, {"body": "sent pr please let know looking", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "please report maintaining bindings said recommending use inheritance react components", "d": "11/2017"}, {"body": "yes changing props react elements nt change html output elements react like frameworks manipulate dom changes dom property attribute means css attribute selector wo nt work since changing luckily tho change css use pseudo selector instead", "d": "11/2017"}, {"body": "would nt using react lifecycle relying period time lifecycle methods flash text entirely problem state show long next example brevity javascript componentdidmount thiscyclestate const delay ms gt new promise resolve gt settimeout resolve ms async function cyclestate const num thispropsnums thissetstate text num await delay thissetstate text haha await delay nt flawless solution nt support changing props handling dismount etc", "d": "11/2017"}, {"body": "pretty much view source build publish scripts", "d": "11/2017"}, {"body": "thanks man", "d": "11/2017"}, {"body": "one proposal common case pattern string expects single warning array expects multiple warnings patterns normalized easy match component stack traces nice thing clearly scopes code supposed warn downside harder assert things throw warn wrap code twice else add new helper", "d": "11/2017"}, {"body": "another thing consider currently globally mock noisy could remove global mock every test throws inside react call stack would also log warning consumers open source maybe could solve extra matcher make configurable somehow fixed", "d": "11/2017"}, {"body": "break code boolean attributes emitted per spec far know", "d": "11/2017"}, {"body": "gaearon nt appear break code surely methods behave outputting boolean attributes feel free close unnecessary", "d": "11/2017"}, {"body": "afaik valid way write close feel strongly though feel free send pr removes empty quotes cases booleans think", "d": "11/2017"}, {"body": "ahh one user error typo reduced test case misunderstanding composition scenario thought ran first awesome far close", "d": "11/2017"}, {"body": "handled similar issue could try one try find invariants", "d": "11/2017"}, {"body": "sections code like", "d": "11/2017"}, {"body": "using code previous issue would also want add warnings lines amp", "d": "11/2017"}, {"body": "top level rendering component stack would nt useful inside component thinking", "d": "11/2017"}, {"body": "okay sweet implement component stack files implement change easy way determine inside component implement component stack every call files", "d": "11/2017"}, {"body": "easy way determine inside component look message says look examples invariant tests see something happens inside component", "d": "11/2017"}, {"body": "gotcha noticed invariants already component stack dev addendum lines remove dev put directly invariant", "d": "11/2017"}, {"body": "remove dev put directly invariant sounds reasonable", "d": "11/2017"}, {"body": "another difference development putting string ref functional component throws stateless function components refs production gives element ref specified string owner set", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hey would interested taking stab one", "d": "11/2017"}, {"body": "hey question nt seem related react making requests js generally try general support avenues documented like keep issue tracker feature bug reports react thanks", "d": "11/2017"}, {"body": "use issue tracker bugs feature requests please refer appropriate support resources asking questions thanks", "d": "11/2017"}, {"body": "reproduce either react react", "d": "11/2017"}, {"body": "reproduce webpackbin", "d": "11/2017"}, {"body": "tryingtoimprove seems related webpackbin put following line onchange method notice value always empty string fact try log event throws exception try example jsfiddle react template seems work ok", "d": "11/2017"}, {"body": "hey vamsiampolu thanks report long standing issue number inputs chrome fixed handful prs work shipped ultimately much number inputs invalid numbers report empty string tampering input validation could cause unexpected behavior however think current solution resolves critical edge cases nothing typing returning empty string browser fires change event number input reports value however newer versions react respect user input instead wiping away value user sees screen edge case missed please let us know otherwise feel free give version shot", "d": "11/2017"}, {"body": "would mind contributing failing test verifies case", "d": "11/2017"}, {"body": "sure hopefully tomorrow cet", "d": "11/2017"}, {"body": "seems working behind proxy", "d": "11/2017"}, {"body": "gaearon nt think first problem occurs soon click log button get first error described initial question confused recall correctly similar issue different pc double check", "d": "11/2017"}, {"body": "provide exact instructions reproduce screenshots", "d": "11/2017"}, {"body": "gaearon well step enter site scrn step click login button scrn step dialog generated step click reload button get scrn", "d": "11/2017"}, {"body": "sure helps go revoke try login", "d": "11/2017"}, {"body": "aywa nt help", "d": "11/2017"}, {"body": "issue", "d": "11/2017"}, {"body": "cc jquense keep recommendation case", "d": "11/2017"}, {"body": "nt know proper recommended way way tests probably expose helper maybe depends use case tho guess think generally trying get underneath react event system answer may dragons", "d": "11/2017"}, {"body": "think js const setvalue objectgetownpropertydescriptor htmlinputelementprototype value set const event new event input bubbles true setvaluecall node test nodedispatchevent event bad need make sure documented somewhere easy find", "d": "11/2017"}, {"body": "think count documented one first google answers trigger input change event react close", "d": "11/2017"}, {"body": "thanks gaearon jquense updated fiddles working solution react react also added detail stack overflow", "d": "11/2017"}, {"body": "assigning part greatly appreciate insight", "d": "11/2017"}, {"body": "nt think bug react react child always fires parents ensures parent ready contains children time mounts eg case needs measure example inside therefore runs expected seeing number time measurement code yet added node body yet therefore still detached tree fix could append body immediately creating would able measure child immediately child mounts", "d": "11/2017"}, {"body": "hey developer evangelist circleci took look current config nt look complicated nt difficult switch circleci ping help needed unless create completely custom docker image good start might docker ruby images variant include nodejs closest using would image runs ruby lts release nodejs", "d": "11/2017"}, {"body": "using appveyor experience pretty slow maybe fine run master something fails know investigate post factum", "d": "11/2017"}, {"body": "closest using would image runs ruby thanks hint maybe fine run master sure ok leave send pr", "d": "11/2017"}, {"body": "done thanks help", "d": "11/2017"}, {"body": "happy take edit instead working veekas get started contributing react", "d": "11/2017"}, {"body": "sounds good", "d": "11/2017"}, {"body": "new contributor working swyx currently trying figure catch user trying set tips currently looking putting warning something like following changes made far reference thanks help", "d": "11/2017"}, {"body": "discussing veekas nt sure one either two questions test set test best guess stick test inside lifecycle method execution earliest place check", "d": "11/2017"}, {"body": "ca nt check nt understand relevant best guess stick test inside componentwillmount lifecycle method execution earliest place check thisstate sure mean original direction veekas makes sense test react component methods right instance created fact find react calls constructor file check right", "d": "11/2017"}, {"body": "sure coverage referring unit tests flow issue sounds pretty vague close always welcome improve", "d": "11/2017"}, {"body": "may missing something feel like expected behavior easily fixed tweaking code", "d": "11/2017"}, {"body": "happen regular dom listeners", "d": "11/2017"}, {"body": "gaearon looks like onclick attached disabled button event nt triggered", "d": "11/2017"}, {"body": "sounds like expected behavior", "d": "11/2017"}, {"body": "fwiw checked firefox chrome safari onclick triggers chrome safari nt check ie", "d": "11/2017"}, {"body": "thanks guys yep though react problem like normal html dom behavior share simple solution hack behavior project javascript const buttonelement disabled return return buttonelement", "d": "11/2017"}, {"body": "nt think expected behavior fiddle shown using dom events trigger click icon within disabled button different clemdelp observed behavior", "d": "11/2017"}, {"body": "thysultan chance checking firefox check fiddle chrome safari see event triggered although may correct react issue", "d": "11/2017"}, {"body": "rstims observed fiddle chrome osx safari emits event device edit unsure spec defines correct behavior", "d": "11/2017"}, {"body": "browsers notoriously inconsistent generally disabled elements emit events probably prevent event direct target think spec bit unclear maybe legacy behavior case pretty dang certain browser difference react bug could wrong seeing click icon fire chrome mac way thysultan", "d": "11/2017"}, {"body": "extensions disabled case bc inline events get browsers chrome emit firefox emit chrome canary emit safari emit safari technical preview emit", "d": "11/2017"}, {"body": "definitely getting alert popping chrome sure difference observed behavior", "d": "11/2017"}, {"body": "replacing click works firefox chrome safari however like also nt emit firefox well machine chrome firefox different behavior safari firefox different behavior mouseup sure could causing difference jquense rstims chrome observations tried using instead inline events removing dependency thought could obscuring result pointerevents changes also yield results", "d": "11/2017"}, {"body": "either case tho nt see much evidence react related seems solely differences browsers treat disabled elements mouse events yeah", "d": "11/2017"}, {"body": "yes likely clemdelp also observed differences firefox example original post probably case", "d": "11/2017"}, {"body": "confirm react issue really browsers treat disabled element problem chrome amp safari", "d": "11/2017"}, {"body": "would like make pr may take sone time invesitigate test l", "d": "11/2017"}, {"body": "well first want definitely looks cleaner cons", "d": "11/2017"}, {"body": "agree reads bit better think mostly intended experimental api first turned necessary thought changed stable last minute nt quite fixed ergonomics however bigger issue portals featurecomplete ideally want add support server rendering way eg letting container string also wanted support crossrenderer portals thought point would move api namespace since would longer dom specific think overall agree needs done prefer time changes make nt think changes trivial though require discussion", "d": "11/2017"}, {"body": "marked good first issue event system beast happy walk interested contributor", "d": "11/2017"}, {"body": "hello nhunzaker like work issue files suggest looking two linked", "d": "11/2017"}, {"body": "totally curious main consumer reactdomfibercomponent asks reactbrowsereventemitter listen events events delegated document related dom element reactdomfibercomponent uses internal function finds document requesting event subscribed reactbrowsereventemitter figures events need attached particular event type react polyfils things like sets bunch normalization around change events inputs emitter enumerates event types need attached says already attached start listening gets change suggesting function aliasing event names different browsers think nt happen phase normalize ahead time assigning correct wheel event type might also able remove others might true let take one step time", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "fixed thanks cristidrg", "d": "11/2017"}, {"body": "nt know clear consider bug react general question please ask stackoverflow sure specific react please provide minimal reproducing case instructions take look", "d": "11/2017"}, {"body": "please provide reproducing project", "d": "11/2017"}, {"body": "mapset polyfill using seen problem bad polyfill", "d": "11/2017"}, {"body": "polyfillio ca nt pass whole project able isolate issue minimal code surely provide still working", "d": "11/2017"}, {"body": "try another polyfill give feedback", "d": "11/2017"}, {"body": "polyfillio expected fixed nt think anything wrong react although nt know fix nt help maybe getting old version somehow", "d": "11/2017"}, {"body": "yeah updating polyfill service job right react bug thank help nt able find linked issue via search bar google hope error issue title enough others find needed", "d": "11/2017"}, {"body": "intentional said behavior pretty much undefined case always key elements react warns nt", "d": "11/2017"}, {"body": "performance reasons makes correct case slower always check duplicates track", "d": "11/2017"}, {"body": "reproduce safari version", "d": "11/2017"}, {"body": "see", "d": "11/2017"}, {"body": "jquense issue nt affect number inputs inputs safari simplified jsbin example illustrate please reopen issue agree", "d": "11/2017"}, {"body": "bin still using number inputs", "d": "11/2017"}, {"body": "sorry trouble getting fiddle sites run safari expected behavior nonenumber controlled inputs behavior seen number ones least covered", "d": "11/2017"}, {"body": "jquense jsbin caching little aggressive snapshot exact changes moment getting intermittent jsbin ymmv", "d": "11/2017"}, {"body": "still seeing bin number input post code behavior seeing vs expect", "d": "11/2017"}, {"body": "jquense stand corrected thought seeing jsbin nt accurate expected probably due strange caching definitely covered apologies red herring confusion", "d": "11/2017"}, {"body": "hi johnunclesam mistaken expected behavior uncommenting inside render method render whatever returned render method see composing components react docs", "d": "11/2017"}, {"body": "thanks nt find anything related issue know fault wher fall miss react rerender time code simply component", "d": "11/2017"}, {"body": "could perhaps something like since looks like jsx duplicate sidebarjs import react component react import browserrouter router route navlink reactrouterdom import menu menu class sidebarexample extends component render return export default sidebarexample", "d": "11/2017"}, {"body": "use issue tracker react bugs feature requests looks like question please use appropriate venue support requests thanks", "d": "11/2017"}, {"body": "nt seem", "d": "11/2017"}, {"body": "huh release worked think cut new work ready merge stable", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "issue reopened", "d": "11/2017"}, {"body": "something simple along lines warning please use camel case property names mean tabindex", "d": "11/2017"}, {"body": "could take", "d": "11/2017"}, {"body": "nobody working could take imho warning please use camelcase property names rather html standardized ones natural work around js would straightforward", "d": "11/2017"}, {"body": "thomasyimgit working moment", "d": "11/2017"}, {"body": "issue resolvedtaken facebook told wait weeks inactivity asking honest seems like rewording good rewording nt sufficient elaborate bit refine", "d": "11/2017"}, {"body": "wrap topmost component using using remove cryptic errors print beautiful error message browser console easily debug read errorboundaries official react website", "d": "11/2017"}, {"body": "oh thanks nt realize thing already", "d": "11/2017"}, {"body": "specific cryptic error either bug react consequence real error app app swallowed catch block either case upgrading react solve issue", "d": "11/2017"}, {"body": "gaearon true react still error code since message cryptic hard understand comes thanks suggestions", "d": "11/2017"}, {"body": "enable break exceptions chrome debugger stop original error code let trace error actually happens catch block accidentally swallows", "d": "11/2017"}, {"body": "seems like removed intentionally", "d": "11/2017"}, {"body": "yes please see commit message details", "d": "11/2017"}, {"body": "mind creating small project demonstrating", "d": "11/2017"}, {"body": "gaearon created new ssr react app seems like html entities cause match error within component triggering match error wondering error caused whole function looks like nt taking account usage html entities super familiar code base could see would issue thought correct", "d": "11/2017"}, {"body": "issue encoding issue need either following http header", "d": "11/2017"}, {"body": "iamdustan works think accidentally deleted point firefox displays error screenshot chrome nt even come close", "d": "11/2017"}, {"body": "way could detect show better warning", "d": "11/2017"}, {"body": "gaearon sure super intimate library guess react could detect document encoding initial mount throw error log message specified initial document maybe react could possibly add encoding document default nt specified", "d": "11/2017"}, {"body": "want dig happens", "d": "11/2017"}, {"body": "gaearon would interested taking look alansouzati okay", "d": "11/2017"}, {"body": "sure ok want investigate let know need help", "d": "11/2017"}, {"body": "running problems testing portals cra project well different failure tried reproduction case nt sure alansouzati defined tried error getting fail srcdropspecjs drop renders drop renders separate issue something wrong", "d": "11/2017"}, {"body": "hello esturcke encountered issue hit error also tried using mock ref documented test renderer obviously needs remain separate reactdom think mocking createportal extending test renderer make easier mock createportal similar ref mocking sorry delay vacation", "d": "11/2017"}, {"body": "hi could please provide detail ability reproduce error", "d": "11/2017"}, {"body": "closing clear problem details", "d": "11/2017"}, {"body": "cc jquense aweary rush", "d": "11/2017"}, {"body": "browser versions supported cc sophiebits probably fix otherwise ignore guessing safari versions probably still supported", "d": "11/2017"}, {"body": "feel free push tag", "d": "11/2017"}, {"body": "done", "d": "11/2017"}, {"body": "nt think describing anything jsx syntax browser behavior silently dropping invalid style values validating proposed clear sensible way read past discussion", "d": "11/2017"}, {"body": "maybe one help", "d": "11/2017"}, {"body": "maybe", "d": "11/2017"}, {"body": "meh tangential try also ahfarmer created early stage", "d": "11/2017"}, {"body": "yep built javascriptstuffcom couple weeks ago people said useful still need lot feedback reactspecific lists components example apps starter projects tutorials things see people looking johnunclesam help looking", "d": "11/2017"}, {"body": "ahfarmer yes example ca nt find something like reduxorm", "d": "11/2017"}, {"body": "johnunclesam site nt exhaustive made lists think important plan making flux list though add reduxorm searching flux tools assuming nt actually searching reduxorm already knew reduxorm would nt need search", "d": "11/2017"}, {"body": "went ahead made state managersflux list making list realized ton reduxspecific utilities reduxsaga reduxthunk reselect name maybe next weekend make redux list", "d": "11/2017"}, {"body": "jimyaghi hi tried codepen chrome nt see issue console tied windows mac neither show", "d": "11/2017"}, {"body": "trueadm make sure check default levels verbose console believe related", "d": "11/2017"}, {"body": "skiritsis sure missed option thanks sure simple fix unless employ ideas", "d": "11/2017"}, {"body": "guys absolutely right looks like discussion around already sorry", "d": "11/2017"}, {"body": "make array instead remember specify key", "d": "11/2017"}, {"body": "thanks ahhh", "d": "11/2017"}, {"body": "code probably reading somewhere moved separate package", "d": "11/2017"}, {"body": "think sip method synthetic even would prozy since nt anything synthetic event system would change need implemented given components ever one handler per event anyway would nt opposed adding convenience think hides fact sip nt supported react browsers though maybe gone", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hican pick", "d": "11/2017"}, {"body": "hey like take look submit pr issue", "d": "11/2017"}, {"body": "hardikmodha first", "d": "11/2017"}, {"body": "gaearon pushed commit fix issue thank giving opportunity first little open source contribution", "d": "11/2017"}, {"body": "thanks sending fix", "d": "11/2017"}, {"body": "put elements specific holes statically known jsx structure react knows divs ca nt possibly reorder think would sort without changing code therefore safe implicitly key index", "d": "11/2017"}, {"body": "gaearon think got case react still attached keys though implicitly", "d": "11/2017"}, {"body": "kind whether react really attaches key implementation detail behaves keys set child indexes case safe knows never reorder", "d": "11/2017"}, {"body": "gaearon think got come back later though reasons could answer even read docs", "d": "11/2017"}, {"body": "docs nt really mention also bit obscure corner people nt often ask", "d": "11/2017"}, {"body": "gaearon yeah nt like take things granted rather understand really works ppl like would useful docs", "d": "11/2017"}, {"body": "always ask technically minded users always happy provide insight things really work", "d": "11/2017"}, {"body": "appears browser native behavior sure anything react additionally curious using anchor tag way used label prevents need prevent default action anchor tag using label ensures clicking show map activate checkbox also helps screen readers", "d": "11/2017"}, {"body": "yeah seem like react anything wrong", "d": "11/2017"}, {"body": "thanks replies noticed behavior used reactbootstrap solve way", "d": "11/2017"}, {"body": "thanks report also reproduce bug", "d": "11/2017"}, {"body": "could related", "d": "11/2017"}, {"body": "also reproduce bug app thanks report edit next comment also ended applying fix obviously hurts accessibility users still triggering error right clicking translate x chrome meta tag removes topbar translation suggestion", "d": "11/2017"}, {"body": "think isolate bug bit example output contents line", "d": "11/2017"}, {"body": "using two transforms development build library suitable development may produce false positive warnings babel documents consistently please remove development build library", "d": "11/2017"}, {"body": "thanks dan abramov", "d": "11/2017"}, {"body": "nice find definitely seems like bug", "d": "11/2017"}, {"body": "work react", "d": "11/2017"}, {"body": "like make pr fix bug reproduce mac locale value cvlmtg", "d": "11/2017"}, {"body": "gaearon sure react test found app started developing recently used react day one sjy", "d": "11/2017"}, {"body": "gaearon modified previous fiddle include react instead react seems bug still plus deprecation message passing value string", "d": "11/2017"}, {"body": "tried could reproduce macos chrome safari even changing locales suggested cvlmtg could high sierrarelated bug", "d": "11/2017"}, {"body": "regardless worth checking serialize string values google locale affect methods", "d": "11/2017"}, {"body": "oxlay could related os language rather browser config soon spare time try set browser config plain english see still bug", "d": "11/2017"}, {"body": "go related code csspropertyoperations seems problem nothing reactdom react besides found interesting issue electron reporting similar issue caused specific version chromiums decimals numbers styles formatted incorrectly guys report issue chromiun cvlmtg didt make reproduce issue please upgrade chrome try see case happens", "d": "11/2017"}, {"body": "reviewed relevant code well could nt find part may problematic however finally managed reproduce bug launching chrome cli thanks sjy findings led right direction tests looks like bug related os language setting rather lang environment variable set bug appear set instance nt try others bug appears could nt reproduce yet safari cvlmtg launching chromesafari cli confirm environment variable", "d": "11/2017"}, {"body": "sjy chrome already latest version oxlay yes lang set itit launch chrome cli run finder like app edited added fiddle simple code result looking issues linked sjy looks like chrome something value assigned style property even string passed formatted correctly seems issue related chrome react", "d": "11/2017"}, {"body": "tried write similar code without react determine reproducible dom apis", "d": "11/2017"}, {"body": "sorry nt beginner learning things free time", "d": "11/2017"}, {"body": "try handle nobody", "d": "11/2017"}, {"body": "bonusrk like help please try create reproducing case without react see react causing issue", "d": "11/2017"}, {"body": "gaearon already asked question stackoverflow someone tried reproduce bug jquery although attempts failed far however sure whether two approaches comparable failing reproduce bug jquery mean bug chrome", "d": "11/2017"}, {"body": "try repro vanilla dom api", "d": "11/2017"}, {"body": "thats found chrome also try mac needed chrome dev tools mobile issue starter made functions also made seperate know ontouchstart invokes events investigated invokes fast second event invokes current mouse position move mouse pretty fast block second block deleted touch first block se console second event invokes coords newblock appears time mousedown event get target delete prevent situation every actions function well cant say solution anyway stuff happens vanilla js issue starter said new made maximum basic code get collection divs const boxes documentgetelementsbyclassname box consolelog boxes click handler function onmousedown e epreventdefault wont stop double delete consolelog click target id gt etargetid click event info consolelog event type gt etype event x gt eclientx event gt eclienty const id etargetid link element delete documentgetelementbyid id remove ontouchstart handler function ontouchstart e epreventdefault stops double delete use touches object get touch event data consolelog touchstart target id gt etouches targetid consolelog event type gt etype event x gt etouches pagex event gt etouches pagex const id etouches targetid delete touch events documentgetelementbyid id remove add eventlistener click arrayfrom boxes foreach function item arr itemaddeventlistener mousedown onmousedown add eventlistener touch arrayfrom boxes foreach function item arr itemaddeventlistener touchstart ontouchstart", "d": "11/2017"}, {"body": "seems like react bug", "d": "11/2017"}, {"body": "yes assume even moreit chrome specific problem think", "d": "11/2017"}, {"body": "vanilla js solution behaves differently safari iphone react solution squares disappear safari js implementation whereas react solution works way wanted work strange", "d": "11/2017"}, {"body": "well known safari event flowyou need use make safari make thing way also seems browserspecific problem", "d": "11/2017"}, {"body": "bonusrk sorry completely lost point line comment react code call touch start move line comments code bug disappears sorry afraid understand something see equivalent vanilla js code line comments bug would longer reproducible vanilla js", "d": "11/2017"}, {"body": "commented let bug happens show bug appears vanilla js yes uncomment lines bug disappear", "d": "11/2017"}, {"body": "agree vanilla js code indeed demonstrates bug green square must receive events blue square bug chrome still confuses react code call touch start mouse event fire vanilla js code indeed stops bug react guess answer something synthetic events calling synthetic event real event vanilla js", "d": "11/2017"}, {"body": "problems man try investigate part reactbased code emulate vanila part", "d": "11/2017"}, {"body": "well represented everything could vanilla code placed public touchevent defaultprevented false mouseevent defaultprevented true see mouseevent captures event preventions toucheevent doesnt even tried event types prevention synthetic event nativeevent gaearon btw seems issue relations digging part reactdomdevelopmentjs", "d": "11/2017"}, {"body": "well say seems new chrome touch handling made performance improve makes fires delay makes uncontrollable inside native looks like walkaround even reactway think", "d": "11/2017"}, {"body": "think two things done vanilla javascript code prepared shows bug chrome bug wo nt fixed unless somebody submits bug report meantime workaround needed could expand idea code solve issue please", "d": "11/2017"}, {"body": "baharev updated example repo walkaround repo pretty ugly way wrote basic code add native event listeners like events like added native event killed saying best least clever solution works mac chrome chrome devtools mobile", "d": "11/2017"}, {"body": "great thanks ugly working solution still better beautiful working one question submit bug report chrome", "d": "11/2017"}, {"body": "baharev work nt try windows", "d": "11/2017"}, {"body": "bonusrk nt tried yet try windows linux might able try linux later week submit bug report chrome", "d": "11/2017"}, {"body": "baharev well think glorious explorer bug rights create get honor deserved", "d": "11/2017"}, {"body": "bonusrk ok bug report later week let know whether suggested workaround works linux android test windows sorry many thanks help", "d": "11/2017"}, {"body": "baharev try window evening let know platformspecific handling solution sure work everywhere", "d": "11/2017"}, {"body": "bonusrk confirm suggested workaround works linux firefox chrome iphone safari android tablet chrome think get away workaround thanks", "d": "11/2017"}, {"body": "bonusrk submitted bug report chromium project greatly appreciate help", "d": "11/2017"}, {"body": "baharev always welcome", "d": "11/2017"}, {"body": "happy take pr nt think important important functions named ca nt come non convoluted name callback though leave like", "d": "11/2017"}, {"body": "thanks quick reply btw plan implementation note fiber stack one awesome would great react team elaborate fiber", "d": "11/2017"}, {"body": "eventually unless somebody else writes us", "d": "11/2017"}, {"body": "waiting gaearon", "d": "11/2017"}, {"body": "kaybarax hey weekend", "d": "11/2017"}, {"body": "mweststrate oh bad cool", "d": "11/2017"}, {"body": "gon na go limb say batching multiple tick", "d": "11/2017"}, {"body": "going vacation next week probably go tuesday try reply monday", "d": "11/2017"}, {"body": "function enqueueupdate component ensureinjected various parts code reactcompositecomponents rendervalidatedcomponent assume calls render nt nested verify case called toplevel update function like setstate forceupdate etc creation destruction toplevel components guarded reactmount batchingstrategyisbatchingupdates batchingstrategybatchedupdates enqueueupdate component return dirtycomponentspush component componentupdatebatchnumber null componentupdatebatchnumber updatebatchnumber", "d": "11/2017"}, {"body": "mweststrate cents valid question sure agree would much easier reason state setstate synchronous whatever reasons make setstate asynchronous sure react team well compared drawbacks would introduce eg difficulty reason state confusion brings developers", "d": "11/2017"}, {"body": "mweststrate interestingly asked question", "d": "11/2017"}, {"body": "reproduction available", "d": "11/2017"}, {"body": "fix happy take pr", "d": "11/2017"}, {"body": "hope put pr together sometime todaytonight ran time last night", "d": "11/2017"}, {"body": "super happy solution seems easier maybe break longer term would encourage use mocking solutions nt require monkeypatching public apis possible would break node ships es modules react offers es module version anyway", "d": "11/2017"}, {"body": "thats valid point really appreciate understanding keep working time testing advocate caught eye static nature es module imports early really surprised nt seen concern js testing community likely tools like babel insulated things enough nt forced yet wrong way require pretty drastic changes testing approaches js projects keep testable expect dependency injection applevel coordination along lines ioc container become required nt seem momentum behind solutions yet outside angular nice see ecosystem evolve mature little bittersweet see current simplicity approachability testing js headed toward significantly complexity hope reasonable solutions emerge time react others start publishing versions cause current approaches longer valid thanks understanding helping get resolved time first contribution react pretty painless well thanks", "d": "11/2017"}, {"body": "expect dependency injection applevel coordination along lines ioc container become required nt seem momentum behind solutions yet outside angular case react people commonly use jest implements module system anything guess less helps problem agree expect people raise concerns time", "d": "11/2017"}, {"body": "fix", "d": "11/2017"}, {"body": "implements module system anything interesting tried since days really slow since pretty happy combination found solution mix handling truly static imports yet holding time found feature truly set apart managing module system keep static imports testable might feature thanks ton following mentioning heard yet investigate", "d": "11/2017"}, {"body": "nt make job epreventdefault gt", "d": "11/2017"}, {"body": "answer correct react support returning event handlers purpose please explicit trying stop propagation prevent default", "d": "11/2017"}, {"body": "please look syntax fontfamily helvetica neue see one extra", "d": "11/2017"}, {"body": "finally tracked issue trying upgrade similar issue case unit test trying stub using sinon see export frozen results following error thrown test frozen intentionally suggested work around testing", "d": "11/2017"}, {"body": "typo writing pseudo code actual syntax correct travi took figure deal spreads even strings copied reference frozen prevents future modifications destination object overall inspite may give performance gains think freezing takes adds react team thoughts", "d": "11/2017"}, {"body": "appears frozen source assume gets added transpilation", "d": "11/2017"}, {"body": "nt necessarily think issue described op issue related could please create minimal example reproducing definitely caused rollup transpilation fix changing server bundle entry points like default rather named export like reactdom check like great fix long term would work want send pr fix issue original post less clear need reproducing example one actually convinced bug react freeze props style objects would nt freeze individual props object containing unless somehow passing prop style object something need see whole code say", "d": "11/2017"}, {"body": "thanks quick response try get repro together tonight see follow suggestion well enough put quick pr together pretty sure follow look little deeper little time confirm since think unrelated would rather create separate issue simplify tracking one", "d": "11/2017"}, {"body": "since think unrelated would rather create separate issue simplify tracking one yes please", "d": "11/2017"}, {"body": "split", "d": "11/2017"}, {"body": "could nt reproduce issue fiddle created mine may caused something else investigate thanks far", "d": "11/2017"}, {"body": "think happening passing dom element case course allowed mutate later allowed mutate objects pass styles react style different rerenders hard debug common source bugs started freezing styles mutating styles deprecated react run sort code react warn mutating style wo nt work future version react react tightened hope helps", "d": "11/2017"}, {"body": "note comment freezing style objects new mutating deprecated earlier freezing props props frozen since react two years ago freezing nt work recursively objects get frozen objects put props exception objects end styles new behavior however people bumped converted code classes thus opted strict mode strict mode js engine throws mutation frozen object opposed silently discarding normally opt strict mode top file using babel currently always emits iirc using es modules per spec nt either convert code use classes opt strict mode methods makes silent failures visible", "d": "11/2017"}, {"body": "sure well would work love see example need change recall correctly", "d": "11/2017"}, {"body": "gaearon like work", "d": "11/2017"}, {"body": "sounds good", "d": "11/2017"}, {"body": "interested beginnerfriendly issue make pr asap", "d": "11/2017"}, {"body": "please review pr", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "guess updated please update packages restart development server", "d": "11/2017"}, {"body": "updated also reinstall also removed packagejson still get version reactdom correct react nt updated package version reactdom", "d": "11/2017"}, {"body": "try creating new project running get version nt might behind outdated npm proxy nt know ca nt update project version packages npm months please bring npm keep running issues correct react nt updated package version reactdom nt understand asking", "d": "11/2017"}, {"body": "gaearon thanks nt know reactdom also released new version every time reinstall reactdom npm gives installed manually works", "d": "11/2017"}, {"body": "sorry please delete issue mistake", "d": "11/2017"}, {"body": "hey take", "d": "11/2017"}, {"body": "mzubairahmed", "d": "11/2017"}, {"body": "could please guide start issue thank", "d": "11/2017"}, {"body": "search code read add check", "d": "11/2017"}, {"body": "got", "d": "11/2017"}, {"body": "done", "d": "11/2017"}, {"body": "taken mzubairahmed", "d": "11/2017"}, {"body": "child component leaving suspense", "d": "11/2017"}, {"body": "problem children get updated container shouldcomponentupdate return false nt happened", "d": "11/2017"}, {"body": "gespiton unfortunately helpful without reproducing example", "d": "11/2017"}, {"body": "gaearon code repo might seem complicated point every time type children rerendered log says open maincss toggle porject view see complete page would nice help", "d": "11/2017"}, {"body": "code looks odd", "d": "11/2017"}, {"body": "oh misunderstanding props state change later problem maybe make simplified repo", "d": "11/2017"}, {"body": "yes simplifying would great", "d": "11/2017"}, {"body": "going close certain tracked issue reactbroadcast reactbroadcast provides reliable way react components propagate state changes descendants deep component hierarchy bypassing intermediaries return false shouldcomponentupdate still appears subtle difference react react broadcast scu skipping utterly unable make minimal repro appeared one small edge case products", "d": "11/2017"}, {"body": "imho way go im opposed default export shouldnt used reexport stuff like example", "d": "11/2017"}, {"body": "shouldnt used reexport stuff like example technical reason aside two ways thing impression people would import use default would nt problems tree shaking since default would stay unused maybe overestimate rollup etc", "d": "11/2017"}, {"body": "questions probably best answered lukastaegert ai nt sure something changed since also rollup tree shaker webpack treeshaking algorithm worse one rollup usage probably way higher rollup tools excellent jobs ofc nt want offend anyone stating facts community help tools whenever", "d": "11/2017"}, {"body": "treeshaking going anything react case given everything preprocessed single flat bundle wonder primary import style react personally tend treat like default export eg occasionally named thing", "d": "11/2017"}, {"body": "gaearon already stated elsewhere size improvements case react expected minimal nevertheless advantages reactchildren might probably removed cases heard react hoisted top scope module bundlers support could remove quite bytes might also grant ohsoslight performance improvement main improvement would lie fact need another variable references every module one shared everywhere rollup usually also though guessing might reduce chance webpack moduleconcatenationplugin bailing static analysis react easier module bundlers also eg ides tools many tools already reasonable job cjs modules end lot guessing involved side modules analysis nobrainer kind exports course named export really provide benefit easy treeshaking unless use gcc might able little aggressive move maybe latest rollup really lucky question provide default export well difficult decide pro painless migration existing code bases eg jquense describes con since everything attached common object object included keys included defeats attempts treeshaking even gcc might hard time twoversion migration strategy might add default export next version compatibility purposes declared deprecated might even display warning via getter etc remove later version", "d": "11/2017"}, {"body": "also interesting case monkeypatching testing bit shady want conscious breaking workaround", "d": "11/2017"}, {"body": "came via twitter conversation clear correct answer question react reactdom export named exports objects contain state libraries mutate attach properties notwithstanding reason exist place put words namespaces imported also makes life easier bundlers neither course present breaking change people currently using default import transpiling lukastaegert probably right idea using accessors print deprecation warnings could removed version perhaps nt readymade suggestion though perhaps shipping esm would wait reason anyway case need worry deprecation warnings", "d": "11/2017"}, {"body": "people really come like convincing give might difficult guess bad even bit odd clarify need scope case namespace jsx transpiles could break jsx say depends global function instead imports would look like maybe okay huge change would also mean react umd builds need set suggesting instead well already overloaded okay qualifier without claiming global much tbh super excited either options think would probably best middle ground keep jsx transpiling default", "d": "11/2017"}, {"body": "confession always found slightly odd explicitly import order use jsx even though actually using identifier anywhere perhaps future transpilers could insert configurable sake preact etc encountering jsx nt already exist way need namespace import would taken care automatically", "d": "11/2017"}, {"body": "distant future maybe need make sure transpilers work module systems commonjs globals making configurable also hurdle splits community", "d": "11/2017"}, {"body": "richharris suggested inserting specific import jsx used easily done transpilers plugin community would upgrade course even existing setups would still work one adds file course need consider module systems nt seem like hard problem solve specific gotchas mind", "d": "11/2017"}, {"body": "course need consider module systems nt seem like hard problem solve specific gotchas mind know specific suggestion handle would default babel jsx plugin", "d": "11/2017"}, {"body": "people really come like people come forth may mock thee", "d": "11/2017"}, {"body": "lot pretty sure seen places", "d": "11/2017"}, {"body": "default moment reactcreateelement would pretty much stay problem assumes global already available scope think es modules basically standard way although yet adopted modules reasonable assume majority use vast majority already uses various build step tools create bundles even true discussion talking transpiling jsx syntax changing default behaviour jsx plugin auto insertion scope imho reasonable thing perfect time change babel coming soon ish recent addition babelhelpermoduleimports also easier ever insert right type import escjs file configurable bail today behaviour assuming present scope seems really like minor change configuration needed minority users improvement sure big one still majority", "d": "11/2017"}, {"body": "work", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "maybe fiddles may work modern browsers please compare results react working fine results react working properly", "d": "11/2017"}, {"body": "look working relevant code", "d": "11/2017"}, {"body": "okay checked detail result opinion bug first vs thing like reactdevelopment vs reactproduction thing unfortunatelly two jsfiddle examples used production modules example dev modules example use react production modules example also works reason react development module use createelement directly production module uses function called createelementwithvalidation instead details see createelementwithvalidation function uses local function called validatechildkeys iterates item arrayiterableiterator child check whether key attributes set properly details see iterator fully iterated contrast iterator aggregate aka iterable items external iterator rendered browser second time reactdom tries iterate iterator get results interested details check maybe google internal iterator vs external iterator personal opinion always bad idea pass iterators around directly though know unfortunatelly unnecessarily done quite often iterators always internal state modified iteration step less hidden side effect sooner later source trouble like issue someone uses iterators directly iterators used locally cases iterator aggregates used instead iterators iterator aggregates something like internal iteration state create new internal iterator time necessary means use javascript const elements function yield yield yield instead always use something like personally prefer use seq class specialized lazy sequencing filter map reduce etc allows things like", "d": "11/2017"}, {"body": "iterator fully iterated contrast iterator aggregate aka iterable items external iterator rendered browser second time reactdom tries iterate iterator get results oh get pretty subtle", "d": "11/2017"}, {"body": "thanks guys using method returns iterator instead list results discussion part official react documentation fill another issue would helpful see difference dev production modes see iterators supported workaround dev", "d": "11/2017"}, {"body": "possible us warn pass wrong thing somehow agree confusing hand good ends broken development mode least case notice would worse worked development broke production could document nt see good place ideas please raise docs repository", "d": "11/2017"}, {"body": "mcjazzyfunky could please provide source code class try develop filter map reduce etc seems easy", "d": "11/2017"}, {"body": "example seq implementation class seq constructor fn symboliterator fn let val val new map consolelog let v new seq valvaluesbind val consolelog v consolelog map let v new seq valvaluesbind val map num gt num consolelog v consolelog filter odd let v new seq valvaluesbind val filter num gt num consolelog v result", "d": "11/2017"}, {"body": "askoretskiy really like seq implementation also like see implementations asked look seq class facebook immutable library unfortunatelly afaik something like seqfrom function yet big deal add maybe could open feature request implement function like also implemented seq class important alpha state never used production part small library completely rewritten typescript soon time mean feel free copy code ideas seq implementation use directly small library part also please aware wanted seq class also useful pure programs without using transpiler like babel symboliterator method may seem little strange overcomplicated always use higher surely overkill way done example surely better solution also please aware implementation optimized seqs based arrays afaik facebooks seq classes optimized javascript create array undedfined elements const array new array following works work constant time optimization implemented yet array case const size seqfrom array count also please copy bind stuff solution surely much better using bind last least maybe interested following benchmarks show performance difference different ways iteration", "d": "11/2017"}, {"body": "mcjazzyfunky thanks may extend implementation new tricks yes one could write really lean code opts use", "d": "11/2017"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "11/2017"}, {"body": "see link error boundaries documentation next error directly likely link leads said think errors event handlers would still displayed twice little unfortunate nt prevent fixing", "d": "11/2017"}, {"body": "gaearon trying understand error thrown detected case thrown react browser consider error shown thrown browser", "d": "11/2017"}, {"body": "nt work facebook go ahead answer since know answer yes much intended think confusing destructuring assignment works component rendering local variables since destructuring props get new variables mdn destructuring assignment syntax javascript expression makes possible unpack values arrays properties objects distinct variables", "d": "11/2017"}, {"body": "right compiled code looks like nt local variable filled value possible react know component written way possibly fill props create element", "d": "11/2017"}, {"body": "reason webpack would look unless directly importing file somewhere library directly importing file somewhere configuration use disk caching solution disk cache corrupted stale please bring webpack provide reproducing project experience consistently", "d": "11/2017"}, {"body": "also probably would nt hurt good old delete nodemodules run npm install dance", "d": "11/2017"}, {"body": "haha yeah gaearon purged nodemodules startling number times nt expect react team much explanation figured post issue case anyone else happened run thing circle back findings thanks dan", "d": "11/2017"}, {"body": "yeah sorry running create isolated example consistently reproduces try look", "d": "11/2017"}, {"body": "thanks report note using setstate callback componentwillmount nt make lot sense use conponentdidmount instead", "d": "11/2017"}, {"body": "agree generally never use componentwillmount one reason see use componentwillmount lets share logic calls setstate parts component upgrading project react noticed places used issue could implemented different way feel like incorrect makes sense behave expected", "d": "11/2017"}, {"body": "yeah fair wan na take stab adding failing test fixing", "d": "11/2017"}, {"body": "think needs done instead calling methods immediately store field call finished mounting updating", "d": "11/2017"}, {"body": "yea take look may time finish today though sure important finish since hard use constructor componentdidmount instead feel like huge deal though especially patch release done already changed spots project breaking pretty easy", "d": "11/2017"}, {"body": "already cut seems okay since probably broken", "d": "11/2017"}, {"body": "hi gaearon bdwain taking look issue earlier might come test reproduce bug patch fix assigned bdwain want step shoes send pr happy push code guys take look maybe get insights ok", "d": "11/2017"}, {"body": "problem chance anything yet lets go", "d": "11/2017"}, {"body": "thanks bdwain sent pr", "d": "11/2017"}, {"body": "closed", "d": "11/2017"}, {"body": "always implementation detail think plan emit extra attributes aid developer tools try detect react page officially supported react devtools extension detect react recommend use purpose really want try looking nodes properties starting dom nodes managed react currently guarantee future", "d": "11/2017"}, {"body": "duplicate hesitant html caseinsensitive technically behavior correct even little surprising absolutely nothing wrong emitting attributes casing even would perfectly understood browsers difference would completely unobservable clientside code though potentially fix less surprising confident lead slight performance regression might worth need data people using ssr production tell would problem", "d": "11/2017"}, {"body": "think problem maybe rollup", "d": "11/2017"}, {"body": "think try use run yarn version support feature", "d": "11/2017"}, {"body": "yes nt support using npm development anymore please run", "d": "11/2017"}, {"body": "yes thank much fault", "d": "11/2017"}, {"body": "react supports browsers implement react also depends map set requestanimationframe described please make sure polyfill older browsers hundreds different browsers ca nt give advice specific ones hope helps verify android supports polyfilled map set raf still nt work please provide exact error messages look", "d": "11/2017"}, {"body": "sure flag even intentionally supported think used private marker never intended public api relied implementation details changed granted jquense suggested still nt think public api provide full isolated example trying maybe answer could helpful", "d": "11/2017"}, {"body": "thanks response full isolated simple example follows using react input using react input per example click submit button react value changed react works due use simulated dispatch event basically use pure js jquery without react access enter values input fields within form rendered react earlier form input fields rendered react formsite updated react pure js way simulating input value change stopped working looking quickly know trigger simulate input value update follows right dispatch event sequence method react unsure use reacttestutils simulate method injecting react reactdom standard scripts nt access original form react implementation prefer trigger html dom js guess unreliable wondering using reacttestutils standalone trigger input change work", "d": "11/2017"}, {"body": "basically use pure js jquery without react access enter values input fields within form rendered react expand need exactly clear constraints", "d": "11/2017"}, {"body": "interact react based website form proprietary web browser use external form browser limited access external scripts one legacy systems interact modern spa web page trigger form submission legacy system supports js jquery may deprecated really need figure trigger input value change worked past put inline js code possibly external js url refer external library use reacttestutils simulate method hoping situation trying resolve possible interim", "d": "11/2017"}, {"body": "call component instance renders input take different value", "d": "11/2017"}, {"body": "yep could using console outside react scope example codepen nt direct access react component global scope console used example outside react scope access edit", "d": "11/2017"}, {"body": "put reference component onto input example", "d": "11/2017"}, {"body": "yeah intended public api nt even intended make workaround prevent breaking change minor bump better story perhaps correct way work around outlined vanishingly usecases though need get underneath event system like suggesting nt one usecases would try almost anything else p since generally outside consider reasonable interop none react interactions", "d": "11/2017"}, {"body": "research react source code got hack method react notice hack", "d": "11/2017"}, {"body": "vchyzhevskyi please provide example reproducing issue along details ca nt reproduce issue latest beta", "d": "11/2017"}, {"body": "aweary hi brandon forgot mention use serverside rendering clientside rendering example seems works fine server returns html without text guess problem server side please let know ca nt reproduce issue setup blank repo code show necessary", "d": "11/2017"}, {"body": "vchyzhevskyi thanks clarifying version jsfiddle using reactdomserverrendertostring also nt reproduce issue setup blank repo code show necessary feel free ping consistent reproduction", "d": "11/2017"}, {"body": "need reproducing case pretty soon want fix release", "d": "11/2017"}, {"body": "aweary gaearon sorry issue abstraction layers upgrade time applied fix produces strange behaviour decided error react please close issue bug bad thank time", "d": "11/2017"}, {"body": "nit seconds gt minutes long tasks guess release script success level feedback getting", "d": "11/2017"}, {"body": "sounds good wan na think minimal version want support", "d": "11/2017"}, {"body": "yes glad warning phrases recommended", "d": "11/2017"}, {"body": "nt care strongly send pr discuss worth checking already similar thing unsupported node versions wording similar", "d": "11/2017"}, {"body": "right case node version maybe use engines field", "d": "11/2017"}, {"body": "maybe already nt remember", "d": "11/2017"}, {"body": "yarn respect warn app level great catch course older version yarn wo nt get warning bc added p", "d": "11/2017"}, {"body": "hi gaearon committed run automatically hooks miss something", "d": "11/2017"}, {"body": "jquense thanks reminding yarn engines awesome specify yarn version also need check node version executing command", "d": "11/2017"}, {"body": "found happens committed message execute yarn build command interesting ok remove backtick", "d": "11/2017"}, {"body": "fills toplevel array two references array object second iteration loop override values set first iteration", "d": "11/2017"}, {"body": "much spam", "d": "11/2017"}, {"body": "necessary correctly handle nested arrays elements different nesting levels receive different prefixes way even keys inside different nested arrays mapping still produce valid flat array equivalent behavior", "d": "11/2017"}, {"body": "gaeron like work", "d": "11/2017"}, {"body": "although seems unlikely someone would pass onecharacter prop price least versions chrome right reported gaearon curious documented somewhere", "d": "11/2017"}, {"body": "thanks posting prashantvv lot awesome resources find react native find awesome react native repo including tutorials components may suit need ca nt find anything feel free post question stack overflow going close issue since github issues reporting issues react", "d": "11/2017"}, {"body": "thanks stackoverflow reference future ref", "d": "11/2017"}, {"body": "like work", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "simple random comment create comment rest api", "d": "11/2017"}, {"body": "idea please nt use issues unrelated questions thanks", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "like work", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "xjlim please help checking whether works", "d": "11/2017"}, {"body": "work one else yet", "d": "11/2017"}, {"body": "opened pr regarding issue would nice could take look gaearon", "d": "11/2017"}, {"body": "thank much", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "bad whats happening upgrade react reactdom issues text nodes svg errors working expected", "d": "11/2017"}, {"body": "awesome thanks confirming", "d": "11/2017"}, {"body": "please ignore silly error part caused warning show", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "nt think really matters less matter need release another beta still use suffix", "d": "11/2017"}, {"body": "closed via", "d": "11/2017"}, {"body": "plashjindal already fixed pr waiting release affects reactdomdevelopment use reactdomproduction work edit pointed proper pr merged sorry mistake", "d": "11/2017"}, {"body": "working ie older versions working", "d": "11/2017"}, {"body": "plashjindal must ie mine js fiddle nt work ah wait also tried nt work either", "d": "11/2017"}, {"body": "maybe better link would js fiddle loading x", "d": "11/2017"}, {"body": "well running demo app production mode ran ie check project using java backend react frontend moreover webpack used deployment test accordingly production mode ie browser thank", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "gaearon hi tested using versions application still running ie giving error identifier string number expected", "d": "11/2017"}, {"body": "please give details line referring", "d": "11/2017"}, {"body": "file bundlejs line character", "d": "11/2017"}, {"body": "nt tell us much given nt bundle please prepare isolated project contains react reproduces issue", "d": "11/2017"}, {"body": "well created basic application using createreactapp tried run updating react reactdom modules ie giving error following steps note basic startup application generated using createreactapp", "d": "11/2017"}, {"body": "update react beta version suggested creating app", "d": "11/2017"}, {"body": "yes one thing update reactdom tell warning saying unmet peer dependency react reactdom npm warn reactdom requires peer react none installed", "d": "11/2017"}, {"body": "created new app installed version opened ie mode see errors followed instructions gave working app need information reproduced maybe publish project created", "d": "11/2017"}, {"body": "sure publish project check", "d": "11/2017"}, {"body": "updated fiddle work", "d": "11/2017"}, {"body": "myapp", "d": "11/2017"}, {"body": "updated codesandbox uses beta version works fine ie proof testing ie", "d": "11/2017"}, {"body": "gaearon nt work ie", "d": "11/2017"}, {"body": "well lol codesandbox nt run ie gaearon ran jsfiddle problem", "d": "11/2017"}, {"body": "gaearon maininfection please check working ie", "d": "11/2017"}, {"body": "plashjindal whole codesandboxio nt work ie", "d": "11/2017"}, {"body": "gaearon seems line problem", "d": "11/2017"}, {"body": "maininfection please try install project uploaded zip file npm install try run ie", "d": "11/2017"}, {"body": "wrote react requires map set polyfills please follow instructions include", "d": "11/2017"}, {"body": "gaearon fiddle check confirm", "d": "11/2017"}, {"body": "gaearon tried work either", "d": "11/2017"}, {"body": "looking zip sec", "d": "11/2017"}, {"body": "sure thanks gaearon", "d": "11/2017"}, {"body": "used configuration polyfills map set nt seem work maybe jsfiddle nt support giving error frame", "d": "11/2017"}, {"body": "yes verified jsfiddle broken nt test", "d": "11/2017"}, {"body": "plashjindal tested stuff ie works", "d": "11/2017"}, {"body": "verified zipped project works real instance via browserstack", "d": "11/2017"}, {"body": "sure running production environment", "d": "11/2017"}, {"body": "plashjindal unzipped see accessed worked fine", "d": "11/2017"}, {"body": "get error ie try run", "d": "11/2017"}, {"body": "plashjindal look modo de explorador set", "d": "11/2017"}, {"body": "maininfection yes working fine mistake running explorer mode ie", "d": "11/2017"}, {"body": "first import entry point react", "d": "11/2017"}, {"body": "okay appreciated thanks much gaearon", "d": "11/2017"}, {"body": "hey question nt seem like react specific since react builtin system inline styles aside provided html otherwords use prop add inline style html element add css class style cause nesting processing style assigned directly element add prop perhaps using library like jss glamor might want check support avenues thanks", "d": "11/2017"}, {"body": "think warning result client failing match server side rendered content tries hydrate html", "d": "11/2017"}, {"body": "ok tried removing adding simple via wrapper component get server encoded html client nt would", "d": "11/2017"}, {"body": "bug fixed master via released next update", "d": "11/2017"}, {"body": "gaearon thanks update fix ignore warning idea likely release next update", "d": "11/2017"}, {"body": "next week said times past", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "gaearon testing installed functional component mentioned previsously works longer see however maybe separate thing still seem issue using directly use see warning expected server html contain matching html ssr via view source html chrome devtools", "d": "11/2017"}, {"body": "please provide reproducing project", "d": "11/2017"}, {"body": "gaearon ok github rookie basic app using ssr tag difference see server generated html shown devtools tag closed page source devtools shows guess could devtools shows though", "d": "11/2017"}, {"body": "ok understand happens clear best fix workaround replace verified works warn reason see mismatch browser parsing content text react attempts hydrate real tree maybe react attempt hydrate anything", "d": "11/2017"}, {"body": "seems like earlier manifestation issue seems like past version completely broken instead warning produces false positive warning", "d": "11/2017"}, {"body": "spoke briefly sebmarkbage clear work currently generating elements client content meant element text content one possible solution treat like support text content would consistent browser treats would disallow pattern op post could implement support setting text content element resolve content since components return strings like generates string clear useful though probably support well perhaps even attributes like", "d": "11/2017"}, {"body": "gaearon thanks time investigating workaround suggestion keep global component app tags use rather makes sense treat browser like suggest", "d": "11/2017"}, {"body": "discussion settled warning contains child string since really supported", "d": "11/2017"}, {"body": "stephenlast might better use way opportunity escape needed less dangerous", "d": "11/2017"}, {"body": "guess browsers scripts disabled would nt parsed text content legit put elements issue happens client maybe client rendering ignore content completely ignore hydration errors nt quite fully understand use cases content used script enabled render use cases", "d": "11/2017"}, {"body": "sebmarkbage use get using produces warnings general issue thinking weekend agree sebmarkbage server react allow valid html text client react ignore contents completely content exists react nt way react nothing contents ca nt think use case react script use content tags client", "d": "11/2017"}, {"body": "gaearon spec nt say anything supporting string could explain little bit going stringonly direction", "d": "11/2017"}, {"body": "think maybe client rendering ignore content completely ignore hydration errors", "d": "11/2017"}, {"body": "take one", "d": "11/2017"}, {"body": "clemmy going issue", "d": "11/2017"}, {"body": "hey wojtekmaj backlog want work feel free unassign", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "confirmed updating fixes issue project", "d": "11/2017"}, {"body": "nt remember nt think obvious better could imagine case expect renders input uncontrolled value foo treating null controlled empty string would surprising also hostdom components treat null undefined identically right believe nt know want deviate", "d": "11/2017"}, {"body": "scope creep thread would nt generally use value controlled inputs defaultvalue uncontrolled guess nt see someone would use attributes element", "d": "11/2017"}, {"body": "allowing foo null without warning may strong argument case make sense input type using empty string represent missing number value feels counterintuitive aside would also nice able bind date objects value bring would make case even stronger", "d": "11/2017"}, {"body": "face issue often building controlled input rely record state slice immutablerecord via redux skip using something like defaultvalue input changes dispatch various actions update record components listen etc various selections calcs etc ultimately controlled value dependent value prop passed usually set record default value would great use null since tell without pristine flag field pristine simply edited based concept noted defaultvalue satisfies initial life cycle amp muddying two seems like extraneous step", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "states working except componentdidcatch import react component react class app extends component constructor props super props thisstate rerendered false someprops react lifecycle haserror false lol lol consolelog componentwillupdate nextprops nextstate consolelog componentwillmount consolelog componentwillunmount consolelog makeerror thissetstate lol null render consolelog thisstatehaserror return sorry else return componentdidmount consolelog consolelog changing state component thissetstate rerendered true componentdidcatch error errorinfo consolelog thissetstate state gt state haserror true componentdidupdate consolelog class componentb extends component constructor props super props componentwillreceiveprops nextprops consolelog componentwillupdate nextprops nextstate consolelog componentwillmount consolelog componentwillunmount consolelog render consolelog return thispropssomeprops see console componentdidmount consolelog shouldcomponentupdate nextprops nextstate consolelog return true componentdidupdate consolelog componentdidcatch error errorinfo consolelog export default app package", "d": "11/2017"}, {"body": "felansu componenetdidcatch trigger lifecycle methods render example try throw exception inside event handler makeerror documentation issue order understand internal opened may help", "d": "11/2017"}, {"body": "idhard", "d": "11/2017"}, {"body": "wrong fiddle componenetdidcatch triggered error happened render function event handler", "d": "11/2017"}, {"body": "idhard yes working", "d": "11/2017"}, {"body": "months ago decided would great idea copy reactjs reactdomjs node modules dist folder near indexhtml without ugly paths safe warm epic plan except nt update since rofl god feel stupid minimal example works going try update source code conclusion better conserve libs oldfashion manner pull nodemodules like ts guide example thanks time gaearon try careful next time closing issue", "d": "11/2017"}, {"body": "tell reconciler remove node hydrated dynamic imported corresponding component", "d": "11/2017"}, {"body": "code snippets explanations routes definition javascript import homepage bundlesbundles export default component homepage path exact true strict true bundlesjs used server side asyncbundlesjs used client side thanks normalmodulereplacementplugin webpack plugin able switch bundlesjs asyncbundlesjs server client rendering homepagejs component renders simple div html home page main wrapperjs renders routes html routesmap route index gt gt html generated serverside looks like html home page open chrome debugger timeline get flashing blank frame blank frame rendered html chunked rendered", "d": "11/2017"}, {"body": "fiber warning client side expect server html contain divhomepage divappwrapper removes rendering exact dynamic imported homepagejs", "d": "11/2017"}, {"body": "pattern never worked correctly react would still blow away server rendered markup replace client solution render thing client server side like using promises client side need wait resolve hydration easy problem outside scope react projects like help handling correctly", "d": "11/2017"}, {"body": "thanks looking another one", "d": "11/2017"}, {"body": "err default react dom escapes values embedded jsx rendering thus ensures never inject anything explicitly written application everything converted string rendered helps prevent xss crosssitescripting attacks \u4e2d\u95f4\u591a\u4e00\u4e2a\u7a7a\u683c default reactdom escapes values embedded jsx rendering thus ensures never inject anything explicitly written application everything converted string rendered helps prevent xss crosssitescripting attacks", "d": "11/2017"}, {"body": "well", "d": "11/2017"}, {"body": "saying quoted message probably coming docs space react dom react dom changed reactdom", "d": "11/2017"}, {"body": "nt really matter use reactdom talk entry point code react dom colloquial name renderer like react native also please file issues documentation thanks", "d": "11/2017"}, {"body": "event handlers likebutton pass onclick handler button one consider source one could possibly track guess may able kind tracking synthetic events implementation react talking without much knowledge source one would call handle function passed props would bubble error componentdidcatch would triggered level handle function created probably likebutton clarify bit without error boundaries would attempt save error trycatch inside likebutton childrens would make sense display errors level knowing source exception happen would merely debugging purposes", "d": "11/2017"}, {"body": "nt see could tracking", "d": "11/2017"}, {"body": "certainly neither weak concept react internals agree unified way handle exceptions event handlers worth effort could look deeper guidance would start looking somewhere however understand error boundaries though lifecycles methods may require refactoring support event handlers nt know enter scope personally think would improve overall development experience error handling certainly address issues techniques like trycatch printing errors manually", "d": "11/2017"}, {"body": "know react codebase well issue nt nt know start nt see implementing could possible first place without significantly changing react api long event handlers functions way us tell component defined", "d": "11/2017"}, {"body": "ok really appreciate time ticket looking source code helped understand bit underlying", "d": "11/2017"}, {"body": "way pretty catch error event handler catch block set state like causes rerender render block set rethrow", "d": "11/2017"}, {"body": "really looking forward componentdidcatch first test behaviour must admit rather disappointed since event handling big part app interface really irritating way handling globally primarily see componentdidcatch way present user workable explanation happened least providing kind catchall unhandled event error choose render error message user would great leap forward right event error handling must done locally tedious opens missing lot errors worst thing app instead displaying sensible state rendered working nonworking state really frustrating ux please reconsider changing behaviour componentdidcatch", "d": "11/2017"}, {"body": "discussion helpful people keep adding comments like please add nt reply actual questions work set problems want participate discussion please nt ignore suggest solutions", "d": "11/2017"}, {"body": "gaearon referring comment simply end user react technical insight inner workings react participate solutions issue simply stating current solution usable personally would great kind ui catchall could triggered whenever event errors happen display failed state user origin event least important know probably something make core disappointment current implementation also stems fact react team kinda sold react componentdidcatch best new thing since sliced bread released major caveat handle event errors kinda dive documentation find bit letdown sorry", "d": "11/2017"}, {"body": "simply end user react technical insight inner workings react participate asking knowledge internals saying nt see plausible way javascript without fundamentally changing api introducing confusion statement nothing react works technical constraints javascript api even us rewrite react scratch sake feature nt quite see could nt need know react works internally participate discussion try mind experiment think approach react clean slate could possibly work trying say comments nt attempt nt helpful saying please support disappointing nt move issue forward ask future posters refrain already explained seems tricky impossible us current api might wrong would happy learn solution engaging conversation instead repeat point already replied conversation goes circles understand might difficult think often difficult us case let keep discussion clean tidy case somebody else help us figure repeat points many times", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "got time today start working fixing thanks gaearon", "d": "11/2017"}, {"body": "close nt seem directly actionable although appreciate discussion specific ideas could improve specific projects please file followup issues projects react docs create react app", "d": "11/2017"}, {"body": "thankyou listening helping create threejs like example repository someone steeped reactnative ecosystem would contact", "d": "11/2017"}, {"body": "maybe related basically components writing class style must deal state enforce returning initial state class style instead", "d": "11/2017"}, {"body": "returning something constructor already different meaning javascript looking terse syntax use class properties nt define constructor", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "thanks report ca nt seem reproduce browser chrome version official build happen firefox well", "d": "11/2017"}, {"body": "hm weird reproduce times chrome version official build firefox click anywhere drop everything go back normal see order reproduce must first drop text move cursor around using arrow keys without clicking anywhere first please let know anything else demonstrate issue", "d": "11/2017"}, {"body": "tobiasandersen got looks like legitimate problem look", "d": "11/2017"}, {"body": "hey tobiasandersen wondering could still reproduce jsfiddle points ca nt seem reproduce anymore", "d": "11/2017"}, {"body": "tried fiddle still issue chrome version official build firefox wonder differently since reproduce times", "d": "11/2017"}, {"body": "along lines since react oneway nt worry happens render allow binding date objects straight input type seems like straightforward change although familiar react rendering code", "d": "11/2017"}, {"body": "effulgentsia like thoughts going bikeshedding names bit close option wrt ssr think ssr handled custom elements long react could respect attributes component mutates onto tracking posted gist earlier convenience essentially component applies attributes rendering server rehydrates client ssr web components possible solutions still discussed standards level may best wait part proposal", "d": "11/2017"}, {"body": "effulgentsia also like heading sophiebits gaearon yall thoughts direction tue oct pm trey shugart notifications githubcom wrote effulgentsia like thoughts going bikeshedding names bit might useful align naming domprops domevents something wrt option least backward compatible solves usecases coming around alternatives think ssr handled custom elements long react could respect attributes component mutates onto tracking posted gist earlier convenience essentially component applies attributes rendering server rehydrates client ssr web components possible solutions still discussed standards level may best wait part proposal receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "bikeshedding names bit domprops domevents like also brainstorming way make even idiomatic react replacing concept dom concept ref words since attaching props event listeners ref thought instead introducing new special names inside simply overload existing jsx attribute currently ref function called react component mounted unmounted allowed also object idea", "d": "11/2017"}, {"body": "really like approach", "d": "11/2017"}, {"body": "gaearon problem maybe opportunity say react rerender block otherwise roll back react", "d": "11/2017"}, {"body": "says documentation react expects rendered content identical server client patch differences text content timestamps treat mismatches bugs fix development mode react warns mismatches hydration guarantees attribute differences patched case mismatches important performance reasons apps mismatches rare validating markup would prohibitively expensive intentionally need render something different server client twopass rendering components render something different client read state variable like set true way initial render pass render content server avoiding mismatches additional pass happen synchronously right hydration note approach make components slower render twice use caution remember mindful user experience slow connections javascript code may load significantly later initial html render render something different clientonly pass transition jarring however executed well may beneficial render shell application server show extra widgets client learn without getting markup mismatch issues refer explanation previous paragraph hope helps", "d": "11/2017"}, {"body": "think clemmy work need update polyfill support multiple callbacks", "d": "11/2017"}, {"body": "gaearon knock knock said mention docs need change sure", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "another pr merged", "d": "11/2017"}, {"body": "two", "d": "11/2017"}, {"body": "wrote small analysis approached one tests", "d": "11/2017"}, {"body": "far tell taken please post free watch", "d": "11/2017"}, {"body": "merged two prs deal specifically took related tests please check try match style approach", "d": "11/2017"}, {"body": "gaearon rewrite test using public api see injecting default plugins reactdomjs reactdomclientinjectionjs simpleeventplugin enterleaveeventplugin changeeventplugin selecteventplugin beforeinputeventplugin exactly could inject testmocked plugin test functionality searched custom plugin found reacttapeventplugin check exactly custom plugins injected way inject plugins", "d": "11/2017"}, {"body": "fear way head anyone else wants give shot feel free", "d": "11/2017"}, {"body": "aqumus tricky guess first step would figure actually used right tap event plugin one sort still commit supporting conveniently right repo maybe add test specifically works also likely rn uses tests verifying rn events work nt know worth commenting different parts looking tests fail remove private api tests code already covered tests happen stress code paths make sense gdevincenzi sounds good remove assignment", "d": "11/2017"}, {"body": "also going away week please nt let stop continuing hope get submitted prs merged next week", "d": "11/2017"}, {"body": "take unfamiliar api seems like good opp learn advice welcome gdevincenzi", "d": "11/2017"}, {"body": "congratulations gordyd finishing rather complex one good example different code look testing essentially things figure code supposed searching references looking git history commenting different lines", "d": "11/2017"}, {"body": "received pr yet following users andrevargas tranotheron minerado swyx danilowoz morajabi dphurley reznord aqumus could please confirm started work people want help queue time would great give others opportunity work", "d": "11/2017"}, {"body": "andrevargas noticed discussion guess makes sense keep changes unified", "d": "11/2017"}, {"body": "please add queue gaearon", "d": "11/2017"}, {"body": "gaearon yes right confirm jeremenichelli working aware think update thread username pr link", "d": "11/2017"}, {"body": "please also add queue gaearon", "d": "11/2017"}, {"body": "gaearon started working planning either posting findings pr sometime week", "d": "11/2017"}, {"body": "gaearon begun working synthetickeyboardeventjs planning pr weekend", "d": "11/2017"}, {"body": "gaearon could also take tests case people originally assigned nt time required work", "d": "11/2017"}, {"body": "gaearon sorry long delay making wip pr update someone briefly explain rely private apis also nt know thanks gt function", "d": "11/2017"}, {"body": "gaearon sorry long delay working today ping doubts regarding", "d": "11/2017"}, {"body": "morajabi one potential way tackle look understand functionality provides user write code makes use functionality disable loading comment see breaks make sure something breaks code written first version test put test case enable loading make sure test passes optimise code", "d": "11/2017"}, {"body": "gaearon apology delay based suggestion tried commenting parts found alot test cases failing etc guess mainly uses defined although commenting line line none test cases failed test failed based guess already covered test suites conveniently right repo maybe add test specifically works nt understood meant suggestion could work rewrite using public api others sure broadcasted found kentcdodds video podcast react event code walkthrough ben alpert useful", "d": "11/2017"}, {"body": "sorry gaearon tried nt free time finish anyone else wants get issues feel free", "d": "11/2017"}, {"body": "danilowoz gaearon mind could take beforeinputeventplugintestjs", "d": "11/2017"}, {"body": "timjacobi replacement also disable disable loading selecteventplugin comment see breaks make sure something breaks", "d": "11/2017"}, {"body": "morajabi sure tackling right level could open wip pr far nt want pollute thread much", "d": "11/2017"}, {"body": "timjacobi ca nt nt committed anything new sorry pretty busy days someone take", "d": "11/2017"}, {"body": "seems like longer need cc minerado covered together changes", "d": "11/2017"}, {"body": "aqumus based analysis remove list think keep unit test particular internals good know actual logic covered tests", "d": "11/2017"}, {"body": "reassign working related test might easier together", "d": "11/2017"}, {"body": "morajabi gaearon could take look selecteventplugintestjs well", "d": "11/2017"}, {"body": "fyi rewrote", "d": "11/2017"}, {"body": "tests nt currently owner taken accordeiro taken madeinfree combined taken gordyd x taken skiritsis x taken timjacobi sorted perception difficulty queue timjacobi kwnccc skiritsis please could three let us know like take tests please specify one also pass let somebody else try note getting pretty complicated exactly beginnerfriendly mechanical replacements need understand test trying verify come equivalent public api test might look different take comfortable researching things similar gordyd fact gordyd would like take happy give one", "d": "11/2017"}, {"body": "skiritsis since interested reassign", "d": "11/2017"}, {"body": "like work reactbrowereventemittertestjs", "d": "11/2017"}, {"body": "gaearon thanks sorry responding time got busy work look rewrote understanding", "d": "11/2017"}, {"body": "take look", "d": "11/2017"}, {"body": "madeinfree let give days kwnccc reply first since already queue interested assign later", "d": "11/2017"}, {"body": "gaearon ok got thank", "d": "11/2017"}, {"body": "gaearon take look combining takers", "d": "11/2017"}, {"body": "sounds good thanks gordyd", "d": "11/2017"}, {"body": "way event tests got converted give idea code usually ends like", "d": "11/2017"}, {"body": "gaearon happy take well one else wants", "d": "11/2017"}, {"body": "madeinfree still interested please take keep us updated", "d": "11/2017"}, {"body": "gaearon ok would like take", "d": "11/2017"}, {"body": "got anybody want take remaining", "d": "11/2017"}, {"body": "help one", "d": "11/2017"}, {"body": "gaearon nt found time dive like thought would apologies hanging long grabs anyone wants", "d": "11/2017"}, {"body": "accordeiro got", "d": "11/2017"}, {"body": "gaearon really sorry nt get notified still tests take care please let know hope left something easy start", "d": "11/2017"}, {"body": "kwnccc wan na look", "d": "11/2017"}, {"body": "look needed help kwnccc writing test see file named write test", "d": "11/2017"}, {"body": "even slightly understood issue correct wrong means need switch reactportalcreateportal public api like reactdom reactdomcreateportal gaearon", "d": "11/2017"}, {"body": "gaearon really like try since started checking could even team needed", "d": "11/2017"}, {"body": "yeah sure kwnccc happy work queue", "d": "11/2017"}, {"body": "kwnccc getting one test error flow error run shall push code forked repo well work fail packagesreactreconcilersrctestsreactincrementalperftestinternaljs reactdebugfiberperf supports portals yarn flow yarn run node scriptstasksflowjs error const nextcontext getchildhostcontext context fibertype rootinstance nocontextt type incompatible expected param type v export default function config hostconfig hostcontext incompatible instantiation error const nextcontext getchildhostcontext context fibertype rootinstance nocontextt type incompatible expected param type v export default function config hostconfig hostcontext incompatible instantiation found errors flow failed error command failed exit code info visit documentation command", "d": "11/2017"}, {"body": "flow issue known problem windows unrelated need figure happens see kwnccc yes require thought think maybe point best temporarily move provide method like", "d": "11/2017"}, {"body": "one", "d": "11/2017"}, {"body": "gaearon moved reactportal shared directory tests pass need bit assistance implementing method taking inspiration written shall return thinking lines please let know right", "d": "11/2017"}, {"body": "gaearon code still wip wanted double check right track would really help could take quick look code clarify doubts approach taken correct assume tests need cover tags scenarios tested existing tests order maintain test coverage sure way generate components dynamically special formatting tags give pointers efficient way achieve sure test context part tag context test public api method istagvalidincontext used anywhere else except test file ideas", "d": "11/2017"}, {"body": "yes sounds right", "d": "11/2017"}, {"body": "anushreesubramani approach taken correct general yes want avoid duplication ideally turn series series custom function generates component asserts rendering produces warning sure way generate components dynamically special formatting tags give pointers efficient way achieve yes thinking something like go array take last item wrap current element parent corresponding tag way end end corresponding tree may written something wrong general idea also probably want put something like function right rendering otherwise warnings deduplicated ca nt reliably test sure test context part tag context test public api method istagvalidincontext used anywhere else except test file looking blame added point called outside tests point future longer used test mentions sever rendering function longer used server rendering either comment gather goal ensure never warn nt know ancestors however ca nt find code path would pass therefore probably always know ancestors current version say safe delete test altogether", "d": "11/2017"}, {"body": "gaearon created method prior also shifted file shared directory suggested please go code modifications additions need make shall", "d": "11/2017"}, {"body": "send pr please easier discuss review", "d": "11/2017"}, {"body": "nt seen anymore maybe messed something", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "gaearon hi dan everything working thank", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "gaearon hey seems actually botched fix shouldcomponentupdate longer called component still rerendered properly check done wrong clause sent another pr resolves please check apologies extra noise", "d": "11/2017"}, {"body": "aware technically done however project particular contents release package finding bsdpatents code still included several packages even supposed mit eg reactdistreactjs bsdp license header still methods like makeemptyfunction emptyobject similar cases exist dependency packages like createreactclass proptypes methods taken react fbjs code mit still labeled bsdp within js file headers show jsmap file therefore part distribution legal document published reference state reaffirm methods actually mit per root license file patents clause longer applies contradiction root license embedded headers could seen legal analysts invaliding one", "d": "11/2017"}, {"body": "acroyear methods coming fbjs also relicensed mit looks like version depends bsd licensed latest release mit nt know licensing changes work well know problem maybe sophiebits clarify", "d": "11/2017"}, {"body": "guess updated fbjs later released case let cut", "d": "11/2017"}, {"body": "fbjs reference npm distros depending npm package react createreactclass proptypes npm modules made parties invariant warning taking methods fbjs react still going find way override replace nt fault facebook others created dependencies using way easy create oneline exporting module similar reactaddonsperf exposes one method react fbjs module rather cloning thank attention", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "would great updates", "d": "11/2017"}, {"body": "updates would issue looking revisiting component api next year look different feature requests also think experience existing api much doubt implement specific suggestion described issue like make sure consider use cases", "d": "11/2017"}, {"body": "solves running bundle tests added real reconciler bundles means reactnoop commonjs build using reconciler package deleted fixture", "d": "11/2017"}, {"body": "ran similar issue dependency conflict part jest install installed version able resolve bumping version", "d": "11/2017"}, {"body": "make sure reacttestrenderer version react version nt documented anywhere nt documented npm page", "d": "11/2017"}, {"body": "documented form peer dependency install wrong version package manager warn supported react nt exact work version also major welcome submit pr documentation", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "tested react seems fixed reproducible usecases", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "hey gaearon works thanks", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "fixed inside cra", "d": "11/2017"}, {"body": "gaearon case also expected client render button click changes value different original ssr ui nt update", "d": "11/2017"}, {"body": "bit hard say without minimal repro case", "d": "11/2017"}, {"body": "cool", "d": "11/2017"}, {"body": "gaearon currently blocked upgrading application react due lack umd build testutils shall compile one submit pr", "d": "11/2017"}, {"body": "describe use case detail need umd build something intended testing", "d": "11/2017"}, {"body": "application nontrivially large module systems involve transpiling js unworkably slow used use webpack cut taking seconds plus every development build typescript well choice use umd nt want wait multiple minutes every time make script change development", "d": "11/2017"}, {"body": "markboyall said", "d": "11/2017"}, {"body": "ok sounds reasonable happy take pr", "d": "11/2017"}, {"body": "gaearon done", "d": "11/2017"}, {"body": "workarounds using tools like", "d": "11/2017"}, {"body": "create div call use directly", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "general recommend simulating real dom events instead using api example node document important per feedback issue add umd build testutils later versions", "d": "11/2017"}, {"body": "nt saw recommendation react docs thank", "d": "11/2017"}, {"body": "yep need document file issue doc repo", "d": "11/2017"}, {"body": "filed", "d": "11/2017"}, {"body": "ajanuragjain shinrinyoku either found clean refactoring work around issue", "d": "11/2017"}, {"body": "running hooking one component fire cleanup actionset flag reset part redux state tree showing another component also uses part state tree needs reinitialized render official docs explicitly recommend use hook cleanup probably break lot people unless changeddocs updatesome workaround recommended", "d": "11/2017"}, {"body": "goodmorninggoaway particular use case mentioned current workaround simply replace entire stack instead pushing popping individual items onoff means explicit cleanupteardown going replacement state works order calls deterministic lot duplication functionality imposes additional constraints components would nt call clean refactoring means", "d": "11/2017"}, {"body": "close works intended general recommend side effects documented api reference likely issues side effects future", "d": "11/2017"}, {"body": "regarding official docs explicitly recommend use hook cleanup probably break lot people unless changeddocs updatesome workaround recommended docs talking clean component level example listeners added component talking cleaning global state inherently messy get complicated welcome file issue pr docs repo clarify fire cleanup actionset flag reset part redux state tree showing another component also uses part state tree needs reinitialized render written code always regretted brittle recommend refactoring away patterns need easiest way reuse part tree way think components generally expected independent happens render two exclusive components time conflict nt seem like right component thinking understand code avoid patterns experence replacing single state tree branch object array enough example key id even dynamically generated one instead tearing old one time new component mounting point new component branch new id keeping old one alive eventually emit action cleans unused state branches leaves one recent id", "d": "11/2017"}, {"body": "gaearon good idea seems like simple refactor use something like object keyed id similar pattern used redux normalizing instead trying replacereuse array thanks nudge right direction", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "patrickmcdougle would interested taking look issue wanted make sure duplicating effort", "d": "11/2017"}, {"body": "pretty sure since patrickmcdougle wrote month ago go ahead please", "d": "11/2017"}, {"body": "encountering component use test javascript import react react const testselect placeholder options gt export default gt return yolo believe decent solution leave default option disabled check value field part form validation react native noticing value string react pretty sure number react native recall validation checking way maintain value unselectable options validator never let falsy value said currently annoying first option element default value form loads set option displays first option list default value example code default value set option displays first option list select option desired allows user select becomes truthy value must dealt easy workaround anyway validate function", "d": "11/2017"}, {"body": "amackintosh example seems work fine use defaultvalue selected default html spec says first nondisabled item default item nothing marked selected see info gon na close disabled options selected via normal react means either defaultvalue controlling value original error stems miscommunication defaultvalue index details", "d": "11/2017"}, {"body": "running similar issues mocha error behavior test hidden warning issue made somewhat worse fact override tests ensure react warnings cause test failures caused errors caught error boundary log even earlier cases removing overrides allowed see error output resolving newly revealed output brought back boundary logs anything could help far insight testing mocha related issue happy", "d": "11/2017"}, {"body": "running similar issues mocha error behavior test hidden warning clarify mean see warning test nt fail means code throwing somewhere error gets caught never reaches test stack frame unless intentionally testing error cases indicates bug code warning nt hide original error removed warning bug would completely invisible since something catches warning surfaces", "d": "11/2017"}, {"body": "see two separate issues error occurred message helpful test environment showing actual thrown hoping browser show jsdom nt browser maybe sort feature detection could determine whether show full message people might want disable error reporting tests altogether think general bad idea might legitimate reasons already provides escape hatch", "d": "11/2017"}, {"body": "would love listen chat discuss things", "d": "11/2017"}, {"body": "fixes ie edge longer prompt remember password controlled form", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "several tests need throw errors alert library users something wrong test logs full bright red escape hatch something like", "d": "11/2017"}, {"body": "started work nightwatchjs browserstack automate easy run test browsers cover flow would involve automated deployment integration url whenever pull request sent hook expose url pull request run automated tests url providing environment variable code able run automated test safari chrome firefox ie edge pretty neat browserstack even records test output nt cheap though went route would need automate automate mobile subscription yearly subscription still think promising way go could automate testing browsers", "d": "11/2017"}, {"body": "nhunzaker awesome thinking today wanted make time work maybe chat bit discord whatever fairly recently hooked selenium tests work app thoughts experiences might useful stack use browserstack vs saucelabs", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "reconciler nt currently use animation frames", "d": "11/2017"}, {"body": "fall issue upgrade react common similar things also match exist behaviour jsx like feature", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "render document fragment works thanks", "d": "11/2017"}, {"body": "happy confirm everything works thanks lot gaearon much appreciated cheers", "d": "11/2017"}, {"body": "going tackle", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "apologies seeing message yes issue resolved beta rc amp", "d": "11/2017"}, {"body": "please tell solution resolve issue getting error running app ie running perfectly fine ie react version using application prompt response really appreciated", "d": "11/2017"}, {"body": "update major version encourage read release notes otherwise wo nt know things broken release notes point new baseline targeting also dedicated page mentions hope helps", "d": "11/2017"}, {"body": "thanks dan already included babelpolyfill version react code still issue persists", "d": "11/2017"}, {"body": "probably included reactdom loads rather go code app entry point", "d": "11/2017"}, {"body": "worked thanks prompt response", "d": "11/2017"}, {"body": "somewhat related see similar errors using something like custom tags warning tag unrecognized browser meant render react component start name uppercase letter users experiencing legitimately likely minority sure", "d": "11/2017"}, {"body": "site says explicitly getting classless grid system means using nonstandards compliant totally working grid element cards use also totally noncompliant card element works fine cards meant used within grid great prevents standards actually introducing elements future since may break existing websites think going way support", "d": "11/2017"}, {"body": "oh completely understand implications wanted add note likely minority people may see directly related svg warning find since ranked google warning", "d": "11/2017"}, {"body": "accepts callback arguments see used reactdom hope helps", "d": "11/2017"}, {"body": "yes help thanks followup question continually calling frame following approach make sense based reactdom first call createcontainer store reference call via callback subsequent calls call directly via callbacks like flushsync", "d": "11/2017"}, {"body": "sounds reasonable although nt fully understand need call expect let components call causes updates", "d": "11/2017"}, {"body": "cool something bit beaten path finished extent demo good place bring discussion one foot two react renderers dom customwebgl state processed worker thread flow basically like input worker state elements sent frame tick react output output probably allows pushing async events input still working let ignore async events like conventional game loop way touch detection things done comparing input events coordinates state added benefit output handled declarative rendering state really sure totally wacky since something see commonly done eg components constantly renewed createelement tree generated single state also still early without big project prove wondering need call repeatedly rather set state inside components hope good excuse", "d": "11/2017"}, {"body": "interesting get working love take look", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "works great thank", "d": "11/2017"}, {"body": "renderers compute diff reconciliation sure meant fire reconciliation compute updates reconciliation commit yet makes possible split reconciliation across frames commit whole tree ready", "d": "11/2017"}, {"body": "filed", "d": "11/2017"}, {"body": "case replace", "d": "11/2017"}, {"body": "using issue still persists", "d": "11/2017"}, {"body": "pramodsvidyarthi eliminate possible whitespace also using react must using hydrate fn", "d": "11/2017"}, {"body": "using hydrate fn client side nt lint issue whitespace", "d": "11/2017"}, {"body": "mbryla reproducible without react see jsfiddle came across similar issue reactdatepicker imo able create workaround fixes issue narrow case way uncomfortable storing value actual dom elements referring relatedtarget event amp c curious anyone besides agrees seems safari issue really react issue also reproduction video", "d": "11/2017"}, {"body": "pmacmillan safari version test might right safari related issue especially recently upgraded version mine fiddles seem behave correctly without spurious events please try upgrade verify ticket closed", "d": "11/2017"}, {"body": "hmm feel like insane testing home personal laptop yes works correctly safari version", "d": "11/2017"}, {"body": "reproducible currently audience work apparently sigh", "d": "11/2017"}, {"body": "right confirm work laptop although know upgraded safari beta issue confident safari issue", "d": "11/2017"}, {"body": "reproduces version apply update reproduces version wonder os setting affecting", "d": "11/2017"}, {"body": "force click option available newer macbooks external trackpads disabling look amp data detectors causes issue go away", "d": "11/2017"}, {"body": "able recreate bug safari tech preview safari webkit released today safari disabling also prevents problem seen touch events ios ca nt seem recreate demo said react datepicker still breaks ios root cause could hard trigger fiddle touch", "d": "11/2017"}, {"body": "cliener nt create fiddle touch mind would add listeners touch events lack forcetouch capable device evaluate", "d": "11/2017"}, {"body": "wrote touch meant tap triggers blurfocus chain", "d": "11/2017"}, {"body": "testing seems particular problem unique safarimac ca nt reproduce event chain ios even constructing mobilefriendly version test", "d": "11/2017"}, {"body": "webkit bug macos", "d": "11/2017"}, {"body": "put together fix part borrowing pmacmillan work though unsure live inside react separate library assuming latter available implementation applying fix globally without knowing implications might well break current functionality importantly focusblur events throttled within first event type question likely happen", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "gaearon still problem react reactdom", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "afraid reading thread please reread reply warning correct fixed code issue null instead component stack message fixed", "d": "11/2017"}, {"body": "experience issues believe false positive warning please file new issue example", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "case gone", "d": "11/2017"}, {"body": "maybe interested animation tended focus fiber would make possible use cases seems shifted time probably good reason would interesting hear everyone likely knows post acdlite talked highlevel fiber section scheduling key points ui necessary every update applied immediately fact wasteful causing frames drop degrading user experience different types updates different priorities animation update needs complete quickly say update data store pushbased approach requires app programmer decide schedule work pullbased approach allows framework react smart make decisions react nt currently take advantage scheduling significant way update results entire subtree rerendered immediately overhauling react core algorithm take advantage scheduling driving idea behind fiber emphasis added last line talks explicitly animations says scheduling driving idea behind fiber watch intro fiber video say walk away thinking would way get animations react think fair actual engineering ran problems totally understandable sources ton exposure may good put something clarify take found impractical actually tried implement nt watch repo closely saw commits different priority levels figured still worked would make kind official announcement point see gaearon answer thomasjeepe regarding animations says use case still interesting us stress test react update model best way make something faster yes maybe diffing could faster want make use case work well might best way escape react usual model comparing leaf elements minimal work possible ie even compare things know dynamic something inferno explored templates separate static dynamic yet really make big difference dynamic applications experience component abstraction always components middle even optimize leaf node comparisons still got ta go components render optimizations host nodes work well contiguous blocks components get way looking compilation techniques like first make component inlining work end larger contiguous blocks host elements avoid diffing using bytecode similar glimmer idea leafs nodes escaped perked ears sounded like could awesome animated charts graphs sure follow nt work inferno would interesting reliable way js animations react think answer", "d": "11/2017"}, {"body": "sghall agree conclusion reliable way js animations react think answer though rephrase generally reliable way js animation depends browser dom speed scenegraph size etc etc react nt optimized animation inherently introduces overhead fine general ux use eats significantly cycle time budget nontrivial scenegraph ie react ca nt give maximal frame rate given specific scenegraph time series ie animation time lost ca nt regained prev note mentioned fundamental issue generally dynamic scenes react way first loses key information changed lost information must recovered via diffing avoid updating nodes takes time contrast open tweak firsthand info changed course whatever tweaked generalizes animations specific time series node positions etc information lost minimal work done modify dependent nodes tweak radius dom element virtual anything touched compared target nodes result whole thing keeps working even though undergoes changes example happens weird frp inspired experiment works whatever reactive streams simply idea react similar could efficiently make time lost due loss info changed first place info exists react even enters picture react way fine general ux lot stuff want close metal speed overall large dynamic scenegraph andor deep scenegraph dynamic leafs rendering resources significantly underutilized good fraction cycles go toward recovering info ofc react heuristically update things nt fit time budget prioritize etc strategies also workable leaner rendering methods think often mentioned dom slow anyway typically bottleneck speed difference nt matter ux currently correct browser makers eg mozilla team work new ways compositing rendering using well known techniques video game rendering render targets webgl react native opengl canvas etc infinitely faster current dom little overhead turn big overhead due amdahl law code paths improve", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "everything looks good end thanks", "d": "11/2017"}, {"body": "stumbled case app essentially renders tons anchor tags however post left case links inner text may updated etc whilst server sends html us isle wrecked hurricane power comms yes mean puerto rico post link points different location suggested inner text html us isle wrecked hurricane power comms yes mean puerto rico users obviously deeply confusing feels like kind failed reconciliation real issue moment seems way get around stop rendering links anchor tags server entirely force client render correctly rather removes benefit ssr though least case app much glorified collection links takeaway rendering lists links anchor tags ssr may leave links point different locations takes place could confirm intended behaviour please want sure nt misunderstood intention change case relevant app source code", "d": "11/2017"}, {"body": "react introduce differences whether text content anchor tags anywhere else components return different things client server react wo nt attempt fix difference expected return thing client server otherwise bug app react warns mismatches development fix see thread getting long nt think good place track new problems believe see might bug react please file issue behavior well documented going lock discusssion one prevent confusion", "d": "11/2017"}, {"body": "gaearon investigating pr found apparently nt fail macs windows linux running firefox", "d": "11/2017"}, {"body": "removed think ever publicly advertised using either tags except", "d": "11/2017"}, {"body": "cool", "d": "11/2017"}, {"body": "also problem necessary dealing browser focus know focus going end tick assume cases place currently documentactiveelement blur event relatedtarget click events iframe iframe even though current activeelement body easiest way look function overridden development seem mechanism get original value back react could hooking reacteventlisteners requiring directly loophole closed ideas", "d": "11/2017"}, {"body": "react could hooking reacteventlisteners requiring directly loophole closed ideas open separate issue details particular use case", "d": "11/2017"}, {"body": "also luck using attr cors enabled using", "d": "11/2017"}, {"body": "share repro thomasdavis", "d": "11/2017"}, {"body": "fyi nt think reopening intentionally", "d": "11/2017"}, {"body": "worries people still seeing probably okay reopen", "d": "11/2017"}, {"body": "problem tried crossoriginloading anonymous devtool set cheapmoduleevalsourcemap", "d": "11/2017"}, {"body": "things together using webpackdevserver running port add webpack config use cheapmoduleevalsourcemap work add script tag", "d": "11/2017"}, {"body": "using error thrown twice anyone know could", "d": "11/2017"}, {"body": "using error thrown twice anyone know could makes say error thrown twice referring dan describes chance", "d": "11/2017"}, {"body": "happening using using webpack errorboundary component happens nt set nodeenv production make sense since want run development mode", "d": "11/2017"}, {"body": "happens nt set nodeenv production make sense since want run development mode also referring dan describes facebookreact chance", "d": "11/2017"}, {"body": "bvaughn yeah read whole discussion previous comment answer kind basically nt set nodeenv development react app component errors thrown production right", "d": "11/2017"}, {"body": "basically nt set nodeenv development react app nt set development production app result app getting slower development build react development build react includes many helpful warnings useful development make react larger slower nt want use production component errors thrown production right errors occur development production modes duplicate console logging happens development mode though reasons dan mentioned issue linked", "d": "11/2017"}, {"body": "thanks bvaughn case bit complex nt set development app either production development mode trying see helpful warnings development however app works set production even want use development mode stated", "d": "11/2017"}, {"body": "however app works set nodeenv production even want use development mode stated understanding correctly nt know would maybe related another dependency project either way sounds like separate issue component stack stuff maybe file separately details", "d": "11/2017"}, {"body": "bvaughn looking app inside chrome extension odd environment react something related react chrome extensions specific issue project create separate issue maybe tutorial solve thanks", "d": "11/2017"}, {"body": "app inside chrome extension odd environment react sounds similar reactdevtools", "d": "11/2017"}, {"body": "bvaughn project buggy sorry flooding thread may concern minimal setup chrome extension using react redux reactdevtools error boundaries source", "d": "11/2017"}, {"body": "issue windows chrome webpack amp react webpackreact always throws tried others without eval tried tried tried crossorigin script tag nothing works", "d": "11/2017"}, {"body": "experiencing problem chrome nothing works dominikserafin mentioned error firefox", "d": "11/2017"}, {"body": "getting behavior two previous comments chrome", "d": "11/2017"}, {"body": "updated dependencies today started get issue tests sure project times faster rebuilds watch", "d": "11/2017"}, {"body": "aweary progress", "d": "11/2017"}, {"body": "aweary issue reproduced version issue ca nt duplicate might want reopen", "d": "11/2017"}, {"body": "update react reactdom packages run project using webpackdevserver get error error entry module found error resolve module reactlibreactcomponentbrowserenvironment", "d": "11/2017"}, {"body": "search string library using internal react module mentioned release notes issue never supported longer work locking issue rc released long time ago longer relevant problem please file new issue", "d": "11/2017"}, {"body": "nt know one still happening getting version", "d": "11/2017"}, {"body": "file new issue reproducing case please", "d": "11/2017"}, {"body": "hard keep track problems closed issues lock one", "d": "11/2017"}, {"body": "problem came bugsnug production site nt idea reproduce", "d": "11/2017"}, {"body": "let keep open ca nt anything without repro case", "d": "11/2017"}, {"body": "started seeing error production october stack trace points event listener window unhandled rejections pretty much confirms others pointed cause information gathered error browser firefox os windows use react raven route question nt know related also unable repro hope information helps", "d": "11/2017"}, {"body": "firefox mozilla split testing new security feature rare case", "d": "11/2017"}, {"body": "much gain scope hoisting react except maybe kb children helpers", "d": "11/2017"}, {"body": "main benefit es module option react able use native modules development avoid rebundling every change code ca nt use regular umd build case would also avoid rebundling", "d": "11/2017"}, {"body": "blocked deciding actually want export package form feel free comment proposals", "d": "11/2017"}, {"body": "react released please update use version let us know solved issue appreciate could test monday plan get", "d": "11/2017"}, {"body": "nt updated react yet probably wo nt able monday case found workaround use case conditional reassigning anymore", "d": "11/2017"}, {"body": "gaearon aweary happening running tests reproduce hopefully able also repro steps react amp reactdom use jest testing reactnative preset use enzyme mount function calling mount jest reactnative preset present make style property undefined without undefined node different depending preset reactnative preset node whereas without preset hopefully enough information start debug", "d": "11/2017"}, {"body": "please file new issue runnable project reproducing said nt understand using rn preset reactdom whether intended supported enzyme", "d": "11/2017"}, {"body": "gaearon sure reason want use one test command test reactdom rn components using jest project", "d": "11/2017"}, {"body": "confirm fix safari react version reactdom", "d": "11/2017"}, {"body": "sent pr", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "interested take look weekend", "d": "11/2017"}, {"body": "swyx awesome also look adding fixtures fragments well enable changing flag true see tests usage", "d": "11/2017"}, {"body": "ok reason im immediately jumping dont actually much experience ssr fragments matter nextjs spoiled lol nice way force learn guess", "d": "11/2017"}, {"body": "swyx thanks taking task please feel free ask need anything", "d": "11/2017"}, {"body": "ok take sebastian specified lot things implement incrementally hopefully supervision case go track surprisingly dont section reactjs docs dedicated ssr fact searching server side doesnt provide useful results need search hydrate order find probably good issue raise reactjs docs", "d": "11/2017"}, {"body": "proceeding extremely cautiously thinking eventually look like long page bullet points sebmarkbage laid first half spec originally thinking split tabs might confound ssr testing want confirm good understanding guys envision controlleduncontrolled fixtures see", "d": "11/2017"}, {"body": "hey swyx need help could bullet points want", "d": "11/2017"}, {"body": "yes would like help basically waiting someone help confirm right track supposed address sebmarkbage first bullet point want proceed complete rest first bullet point since fixture page lot examples also wondering put items tabs nt clutter page think may consequences regards ssr avoiding might good idea", "d": "11/2017"}, {"body": "thinking tab system query parameter define initial tab however nt think possible access url server current setup maybe stack single page make one page per bullet point sebmarkbage validated going right way begin second bullet point", "d": "11/2017"}, {"body": "tagging clemmy think right understanding flesh fixture main things want confirm laid pr gif useful fixture sebastian specified lot things tab system avoid super long page would bad idea trying ssr thanks", "d": "11/2017"}, {"body": "going vacation ca nt review ask somebody follow", "d": "11/2017"}, {"body": "took pass questions think great comparison standard format fixtures dom test fixtures example nt think necessarily prescribe approach take using state manage tabs would circumvent ssr tab system used urls hard page refreshes seems ideal select dropdown switches url load new page however would nt worry thanks taking", "d": "11/2017"}, {"body": "updated new proposed structure elements could try reach consensus format merge big picture structure split work bunch smaller issues prs make work stole dom test format wholesale think calls make whether cut extraneous tests gets little messy format excellent using good old anchors table contents system ssr fixture looks like webpage circa almost want rotating react marquee gif", "d": "11/2017"}, {"body": "pinging nhunzaker sec take look thanks", "d": "11/2017"}, {"body": "would great fixed point confused behavior especially saw chromium response saying everything works expected clearly nt move touchstart listener componentdidmount use normal dom api everything works thanks worked", "d": "11/2017"}, {"body": "hmm actually normal dom api solution nt work nt fix firefox android bug firefox triggers mousedownmousemovemouseup events following touchstart matter work around add flag touchstart handler simple return mousedown handler case nt matter add touchstart event listener via standard react way", "d": "11/2017"}, {"body": "sebmarkbage use controlled components nt need touch imperatively therefore wo nt hit edge cases ideally get away reading instead pass directly event handler imo losing access would regression like keep access element props useful access selection range props etc", "d": "11/2017"}, {"body": "error missing import statement corrected importing missing component", "d": "11/2017"}, {"body": "seeing error users ie kalpanaar find anything help solve", "d": "11/2017"}, {"body": "solves", "d": "11/2017"}, {"body": "like quastion execute command npm run build", "d": "11/2017"}, {"body": "verified works windows node close still needs solution keeping open nt care strongly somebody get working cross platform would great", "d": "11/2017"}, {"body": "ok hopefully nt become issue future run build tests ci sorry used problem", "d": "11/2017"}, {"body": "place vote", "d": "11/2017"}, {"body": "nt design apis based number votes would produce good design well aware feature request needs considered part larger component api redesign likely start thinking share ideas think something might viable direction", "d": "11/2017"}, {"body": "thanks dan sorry letting impatience seep", "d": "11/2017"}, {"body": "see comment proposed solution", "d": "11/2017"}, {"body": "xjlim wan na one needs approach", "d": "11/2017"}, {"body": "gaearon sure give try", "d": "11/2017"}, {"body": "done", "d": "11/2017"}, {"body": "hi sorry bump old issue nt example unsafe nt typechecking props using snapshot tests flow types testing components seems like changes defaultprops shallow snapshot purely noise button component example defined like jsx type props text string const button text props gt text buttondefaultprops text click menu component would fail typecheck ca nt think good counter example change defaultprop something breaking fail shallow snapshot test b would nt caught flow curious others think", "d": "11/2017"}, {"body": "ca nt think good counter example change defaultprop something breaking fail shallow snapshot test b would nt caught flow many projects nt use flow", "d": "11/2017"}, {"body": "lol fair enough think value projects least depending stack able exclude unspecified defaultprops shallow snapshot maybe usecase uncommon enough warrant custom enzyme adapter though \u30c4", "d": "11/2017"}, {"body": "think done everything planned gcc advanced still separate issue tracking plans share build process renderers", "d": "11/2017"}, {"body": "gcc", "d": "11/2017"}, {"body": "google closure compiler", "d": "11/2017"}, {"body": "great took hours find fixed second landed", "d": "11/2017"}, {"body": "malikgenius haha feel one things spend ton time figuring first time know fix forever note though react provides really good error messages helps read thoroughly", "d": "11/2017"}, {"body": "yeah message pretty much says likely forgot export component file defined", "d": "11/2017"}, {"body": "guess could amend add something like might mistaken default named imports", "d": "11/2017"}, {"body": "gaearon", "d": "11/2017"}, {"body": "reactshadowdomretargetevents module works problems correct picks native events shadow dom element directly calls react component event handlers onclick etc using native events instead synthetic events think stoppropagation work would nice see react team pick issue provide proper fix shadow dom gaining momentum thinking maybe would make sense attach global react event handlers element returned getrootnode instead document", "d": "11/2017"}, {"body": "think close since ship react", "d": "11/2017"}, {"body": "support take tools support use explicitly meantime hope react less stupid", "d": "11/2017"}, {"body": "recent issue", "d": "11/2017"}, {"body": "bbump would really nice auxclick react", "d": "11/2017"}, {"body": "jquense came regard activepassive events intervention came result something nt common react ecosystem probably fix however seems like something would relevant us probably follow along add another event", "d": "11/2017"}, {"body": "gaearon looks like bug back since react", "d": "11/2017"}, {"body": "case nt work properly please open new issue", "d": "11/2017"}, {"body": "guess main difference browsers use css class chrome may show cross inspector styles drops entire style attribute invalid think maybe dom show raw style applied chrome merely show struck like classes people know made mistake nt react jsx library maybe someone wants submit bug chrome best know browser ghosts bad css attributes react", "d": "11/2017"}, {"body": "confirm issue resolved react context original app thankyou great work release", "d": "11/2017"}, {"body": "gaearon wrap rendered element element context providing component provide example", "d": "11/2017"}, {"body": "styleguidist updatewebpack argv tools uses docker copy files container ramda ramda vs lodash ngreact github search syntax pending code review reviewrequested pr list reviews reviewedby pr find issue participated vscode showing underscore ubuntu commenter issue vscode", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "case react caused invalid html markup incorrect ending however html markup database assume dba always return correct html snippet handle issue finally decide use replace dangerouslysetinnerhtml work around works fine", "d": "11/2017"}, {"body": "seems like actually good place thanks bvaughn", "d": "11/2017"}, {"body": "feature needed render nonreact code example need render party js code something like js export default class thirdparty extends reactcomponent componentdidmount const rootel thisrootel init party code inserts html inside rootel shouldcomponentupdate return false componentwillunmount destroy party code render return documents page read following note future react may treat shouldcomponentupdate hint rather strict directive returning false may still result rerendering component happens code broken sure", "d": "11/2017"}, {"body": "use dragulajs react meteor one help", "d": "11/2017"}, {"body": "already noted problem react supported third party libraries remove nodes already managed react need third party library modify dom add dom node leaf neverchanging react node lifecycle hook anything guide dives detail", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "one possible solution need make sure multiple instances loaded indexhtml react getting added webpack bundle twice running using webpackdevserver htmlwebpack plugin fixed", "d": "11/2017"}, {"body": "issue also occurs dont import childthird party components use current component make sure imported components used current component", "d": "11/2017"}, {"body": "dylanpiercey able solve issue yes share pointers facing similar issue upgrading react", "d": "11/2017"}, {"body": "mgmn ultimately made sure server rendered output tricky dates unknown users also setup way catch error discard dom needed larger problem reason created issue react broken people used browser extensions cases believe fixed removed datareactid sorry help issue also pretty old perhaps fixed react", "d": "11/2017"}, {"body": "unfortunately presence nonpassive listener cause significant jank even userland handlers actually hooked chrome tell log levels toplevel handler added", "d": "11/2017"}, {"body": "mega one problem perfectly explained gaearon", "d": "11/2017"}, {"body": "removed react right going thing react native currently impossible require things like reactnative exact reason understanding", "d": "11/2017"}, {"body": "nt know react native problem describing might better ask rn community forum", "d": "11/2017"}, {"body": "closed got stale still relevant please submit new pr eg based one provide instructions test new behavior", "d": "11/2017"}, {"body": "reactaddonsperf working react version stackflow documentation stating otherwise rlg", "d": "11/2017"}, {"body": "curgery react reactaddonsperf supported please use browser profiling tools get insight components rerender", "d": "11/2017"}, {"body": "hmm realize issue old actually seems like work like first example original post something change found issue trying figure whether use inside proptypesshape thought ca nt behavior seeing right something like first example attributes marked actually required props still optional nt cause warnings passed proptypes", "d": "11/2017"}, {"body": "also remember working like wanted tried later also know would tested opening meh works works", "d": "11/2017"}, {"body": "hello flarnie think would nice draftjs think problem draftjs selectionstate updated mouseup keep mouse pressed paste write word see word part goes wrong place previous selectionstate reproducible draftjs homedemo page facebook status field macos chrome ff safari think good solution test added following code draftjs componentdidmount tests works maybe know unexpected effect sorry english thank", "d": "11/2017"}, {"body": "edit bad looked hjylewis thrashable cancel promises well still pattern imo small improvement none solutions cancel promises cancelled without extension absorbing foreverpending promise js function makecancelable promise let active true return cancel active false promise promisethen value gt active value new promise gt reason gt active reason new promise gt used const promise cancel makecancelable promiseresolve hey promisethen v gt consolelog v never logs cancel live may subtleties iron regarding gc coffee yet kick pattern ensures promise returned really cancelled made leak implemented past", "d": "11/2017"}, {"body": "pygy thanks reply unfortunately solution still nt allow garbage collection essentially rewritten istarkov solution uses conditional test easily dropping implementation trashable running tests garbage collection test fails implementation also fails properly handle errors", "d": "11/2017"}, {"body": "react stupid thing ever seen", "d": "11/2017"}, {"body": "gaearon react suggestion replaces info message warning believe one would need suggested", "d": "11/2017"}, {"body": "oh see somehow missed let address", "d": "11/2017"}, {"body": "okay merged include fix lets specify equivalent bundler warning silenced", "d": "11/2017"}, {"body": "going lock answer nt get lost still issue upgrading released days please file new issue", "d": "11/2017"}, {"body": "starting react tools catch new syntax support", "d": "11/2017"}, {"body": "issue needs reopened taken seriously think major deficiency react cases elements array sensibly assessed rerendering individually occurs change props state likely cause elements array inserted omitted reordered instead changed place cases appropriate simply regenerate whole array update compare corresponding subtree dom difference change whole subtree course avoided whenever possible sometimes sensibly avoided cases makes sense require expect keys elements array recommendation assuming array wrapped outer element allow prop atomic bool outer element indicate whole element children must updated whole part subtree changed implication children require keys often many elements array text major pain wrap text item element put key keys reality arbitrary useless facility recommend would allow react optimise sequences text items concatenating putting dom single text node", "d": "11/2017"}, {"body": "sure understand saying example would helpful occurs change props state likely cause elements array inserted omitted reordered instead changed place exactly case specifying keys important keys let react figure insertedmoveddeleted instead trying update everything place", "d": "11/2017"}, {"body": "apologies think nt explain well supposing spa elizalike program trivial psychologist simulation two areas page one text box allows user enter message second paragraph containing eliza reply reply sequence words forming plain english sentence words bold want declare function return reply given user message since words reply bold want able wrap bits text reply element class example return value might array ended variable might wrap thus get paragraph rendered react complains array elements must keys think would nonsense try put keys everything array case next time update presumably user typed new message reply completely different sequence words feel nt point react trying identify ones changed changed think case better update real dom rerendered children array without wasting time memory trying work changed suggesting could use get effect", "d": "11/2017"}, {"body": "think would nonsense try put keys everything array case therealdebater react nt require key text nodes need add keys elements example array elements totally static set key random value use simple counter alternatively api automatically key array elements reactchildrentoarray used map array elements array elements keys primary purpose api work mind create component want pass array unkeyed elements prop children otherwise keys get checked demo hope helps use case edit nt use like bug", "d": "11/2017"}, {"body": "much appreciate responses like idea component probably use technique would suggest however nt resolve fundamental issue sometimes component inappropriate react checking individually need update real dom subcomponents instead makes sense update whole subtree part changed suspect could save significant cpu time since react longer make updates individual subcomponents react would test changed added lost replace entire subtree suggested prop named atomic might make sense provide new react class called think could api would behaviour describe subcomponents changed replace whole subtree dom like suggestions guess one goes end list prioritised appropriate thanks attention", "d": "11/2017"}, {"body": "suggested prop named atomic might make sense provide new react class called atomiccomponent think could api component would behaviour describe subcomponents changed replace whole subtree dom key outer component update key every change would get behavior", "d": "11/2017"}, {"body": "aweary thought bug elements passed nt validated maybe misunderstanding something", "d": "11/2017"}, {"body": "clemmy yes discussed made comment came conclusion behavior skipping key validation bug therealdebater nt recommend using approach anymore keying parent component force reconciliation syranide seems like simplest solution want general therealdebater arraykey issue would suggest adding keys arbitrary values elements array available point afaik still need key elements using array right clemmy", "d": "11/2017"}, {"body": "ah got able something like nt think solves problem wanting use array without keying", "d": "11/2017"}, {"body": "supported", "d": "11/2017"}, {"body": "clarify still require key elements using dynamic array instead defining statically", "d": "11/2017"}, {"body": "oh yeah sorry nt make clear referring specifically comment", "d": "11/2017"}, {"body": "think release fragments excellent pretty sure making use nt quite resolve issue still way prevent react warning elements array iterator key still way indicate react nodes array component subtree assumed change together need individually replaced dom nt think would difficult invent function would take array nodes add key elements nt already key could invent class derived automatically create new prop eg alternatively could create function called added key necessary anyone see problem techniques recommendations think would nice react got one features added would establish interface implementation could subsequently optimised leisure", "d": "11/2017"}, {"body": "think reasonable use case alternatively could create function keyedchildren called reactchildren added key necessary uncommon enough nt think directly supporting especially since doable userland", "d": "11/2017"}, {"body": "released support new export associated syntax", "d": "11/2017"}, {"body": "far tell latest attempt requested changes nt addressed somebody wants pick probably want read discussion", "d": "11/2017"}, {"body": "anything want css react use backticks style tag example important render also lets weird stuff like hover focus know missing blink tag since got rid back react keyframes blink opacity opacity opacity", "d": "11/2017"}, {"body": "gaearon cool code tries change state component unmounted", "d": "11/2017"}, {"body": "found good solution js constructor props super props thisstate inputtext currenturl thishandlechange thishandlechangebind thisupdateurl thisupdateurlbind debounce thisupdateurl debounce thisupdateurl componentwillunmount thisupdateurlcancel flush case need fire handler immediately", "d": "11/2017"}, {"body": "believe react crash anymore even though produces false positive warning track warning", "d": "11/2017"}, {"body": "change event emitted chrome wrap inputs element", "d": "11/2017"}, {"body": "theres oninput event handler grab value input field changes", "d": "11/2017"}, {"body": "microdata", "d": "11/2017"}, {"body": "react supports arbitrary string attributes", "d": "11/2017"}, {"body": "cases really want break react model use uncontrolled components escape hatch show warning uncontrolled components limit basic html form elements soon need implement slider picker top div custom markup need make controlled case really want break react model use cyclejslike architecture declarative streambased events really wish disable warning", "d": "11/2017"}, {"body": "soon need implement slider picker top div custom markup need make controlled scabbiaza nt believe true clarify mean", "d": "11/2017"}, {"body": "scabbiaza nt believe true clarify mean uncontrolled component state controlled browser stored dom slider eg nt dom state state managed externally ca nt make uncontrolled div browser applies default behavior divs however emulate ui element div making controlled wo nt controlled exactly sense controlled architectural sense dom tied external data source arguing directly apply topic made counterargue quoted comment guess break react model use uncontrolled components always possible desired uncontrolled components limited builtin ui elements controlled components bubbling totally fine architectural patterns react nt favor screwed warning believe warning either point otherwise better removed personally see disturbing trend add warnings react parallel requests options disable particular warning false many cases belongs documentation area removed imo", "d": "11/2017"}, {"body": "wnr followed way let disabled isreadonly disabled disabled", "d": "11/2017"}, {"body": "causes issues css selectors depending checked selector write css selectors like wrong way approach problem browser nt guarantee attributes stay synced properties example instead use pseudoclass works expected toggled js including react", "d": "11/2017"}, {"body": "nice approach would even jsx could support something like natively used ruby templates jsx could look like", "d": "11/2017"}, {"body": "see lock issue jsx react hopefully links helpful", "d": "11/2017"}, {"body": "vmakhaev seeing error upgrading version enzyme find way suppress warnings jsdom", "d": "11/2017"}, {"body": "problems please file new issue nobody actively reads old issues requests help get lost", "d": "11/2017"}, {"body": "released", "d": "11/2017"}, {"body": "started new thread discuss move ecosystem stop depending break good eventually sophiebits suggested sounds reasonable folks depend create userland component instead others depend let discuss effort", "d": "11/2017"}, {"title": "angular httpclientmodule cause error csrf security", "body": "angular spring csrf security turn far using httpmodule request rest service server csrf enable http service take care automatically adding xsrftoken http request decided upgrade httpmodule httpclientmodule changed http httpclient suddenly start getting error current behavior httpclientmodule rest service returns expected behavior httpclientmodule work httpmodule use http service instead httpclient works fine environment windows browser x chrome desktop version xx x firefox version xx", "num": "20718", "d": "11/2017"}, {"title": "angular compiler parse errors", "body": "submitting current behavior wiki application inserts markup pages runtime markup passed thru compiler items like router link correct page navigation html clean life good html valid compiler throws error difficulty catching error displaying message user optional compilervalidate compilerparse function could use give feedback crash app expected behavior optional compilervalidate compilerparse function could use give feedback crash app minimal reproduction problem instructions plunker shows code directive sample directive html valid directive fails render output ok need get message user motivation use case changing behavior content management markdown editors dynamic html output environment", "num": "20717", "d": "11/2017"}, {"title": "component destroy proposal", "body": "submitting current behavior unable defer component destruction except declarative animations expected behavior able stuff component destroyed motivation use case changing behavior open incredible opportunities build modern composite animations using example declarative animation api thank guys", "num": "20713", "d": "11/2017"}, {"title": "confusion jasminedone vs async fakeasync", "body": "submitting current behavior jasminedone section testing guide found last two sentences confusing mention although using cumbersome sometimes required testing code involves ca nt called testing code expected behavior clear use use minimal reproduction problem instructions go look last two sentences motivation use case changing behavior documentation seems confusing tried looking considering formatted look like reference something specific could find nothing angular docs rxjs docs additionally ca nt used environment", "num": "20711", "d": "11/2017"}, {"title": "controlvalueaccessor formgroup empty string type something", "body": "submitting current behavior form implemented interface use one another component form group named briefly code looks like createeditstudentcomponentts export class createeditstudentcomponent implements oninit public studentdata formgroup input model student ngoninit thismodel thisroutesnapshotdata student new student createeditpersoncomponentts export class createeditpersoncomponent implements oninit controlvalueaccessor public form formgroup input model constructor private fb formbuilder debugging reasons put html code see model looks like point get correctly attribute inside gets empty simple empty string like type something form correctly becomes nonempty plain object filled data typed form id null person id null firstname test lastname null dateofbirth null addresses contact emails email phonenumbers phonenumber ps problem also happens init one person form controls like expected behavior whole form model fulfilled empty plain object initializes minimal reproduction problem instructions code described motivation use case changing behavior described attribute gets empty simple string fact whole form group several form controls inside could get nonnull plain object empty attributes could avoid extra verification check field nested form group empty environment", "num": "20709", "d": "11/2017"}, {"title": "missing space currency code value currency pipe", "body": "submitting current behavior currency pipe using default english locale set display currency code formats value way etc expected behavior according grammar rules space currency code value abovementioned values written like usd pln eur motivation use case changing behavior grammar correction environment", "num": "20708", "d": "11/2017"}, {"title": "fixturedebugelementquery bycss nativeelement working angular well", "body": "fixturedebugelementquery bycss always throws null saw fixed still face issue", "num": "20704", "d": "11/2017"}, {"title": "android bottom version system compatible", "body": "error follows", "num": "20703", "d": "11/2017"}, {"title": "error js file would overwrite input file", "body": "hey everyone due fact first angular project facing problems error seeing driving nuts none solutions mentioned similar issues seemed work need compile js file added allowjs tsconfig ever since error occurs also way compile correctly every time delete letter ng serve add letter ng serve file compiling correctly error shown terminal tsconfig file angularclijson file thankful help", "num": "20700", "d": "11/2017"}, {"title": "bug router routerisactive respect matrix parameters", "body": "submitting current behavior using routerlinkactive directive matrix parameters ignored considered active current route expected behavior route active current route false route also active current route like minimal reproduction problem instructions following unit test fails motivation use case changing behavior would like active router link correctly highlighted environment", "num": "20698", "d": "11/2017"}, {"title": "angular error activate already activated outlet named outlets used children", "body": "submitting current behavior stated stackoverflow routing configuration like navigating using link throws following error expected behavior expected behavior would navigates router populates named outlets new components taking internally care deactivationactivation outlets minimal reproduction problem instructions simple app routing named outlets configuration motivation use case changing behavior show stopper environment", "num": "20694", "d": "11/2017"}, {"title": "using unemitted leaks memory", "body": "submitting current behavior using private api creating angular programs unemitted leaks memory using emitted program exhibit behaviour expected behavior memory leak occur minimal reproduction problem instructions installed globally create new app open task manager observe memory usage nodejs programs trigger several rebuilds add repeatedly one processes use main process process start increase roughly save forked type checker exhibits memory leak motivation use case changing behavior angular cli uses forked type checker speed rebuilds forked type checker updates angular program runs diagnostics never emits desirable emit would take extra time resources effect environment heap timeline rebuilds captured chrome dev tools found timeline shows memory retained rebuild highlighted single rebuild looks like program contains previous one entirety suppose discarded emitting creating new program without emitting related cc mgol", "num": "20691", "d": "11/2017"}, {"title": "testing httptestingcontroller throws errors valid json", "body": "submitting current behavior throws exception valid json error see according valid json array object string number null truefalse expected behavior throw exception use value json response http call minimal reproduction problem instructions environment", "num": "20690", "d": "11/2017"}, {"title": "error write children url manually browse angular", "body": "try write children url browser enexplore deploying app http server return errors uncaught syntaxerror unexpected token lt uncaught syntaxerror unexpected token lt uncaught syntaxerror unexpected token lt uncaught syntaxerror unexpected token lt uncaught syntaxerror unexpected token lt uncaught syntaxerror unexpected token lt uncaught syntaxerror unexpected token lt uncaught syntaxerror unexpected token lt although write url manually localhost errors found write en localhost online manually page load without errors indexhtml file app route config tried use children routes problem nt want use hash routes htaccess file http server write children url manually online server load page correctly", "num": "20689", "d": "11/2017"}, {"title": "aot compilation javascript heap memory", "body": "submitting current behavior compilation ng serve aot error building modules modules active clientnodemoduleseventseventsjs lt last gcs ms marksweep mb ms allocation failure gc old space requested ms marksweep mb ms allocation failure gc old space requested ms marksweep mb ms last resort gc ms marksweep mb ms last resort gc lt js stacktrace js stack trace security context write nodemodulestypescriptlibtypescriptjs modulestypescriptlibtypescriptjs lt fatal error callandretrylast allocation failed javascript heap memory environment saw lot causes problem error needs investigation help many thanks", "num": "20687", "d": "11/2017"}, {"title": "proposal precompiled templates faster jit bootstrap", "body": "submitting current behavior jit really slow bigger app takes almost seconds load page desktop browser seconds mobile browser aot loads fast compilation really slow even angular watch mode take seconds recompile one file changes delay unacceptable development expected behavior angular jit compiler allow use precompiled templates increase bootstrap speed property could take precompiled template object value example also exist tool webpack loader convert template file optionally tool could weave translations templates compile time motivation use case changing behavior faster bootstrap jit", "num": "20686", "d": "11/2017"}, {"title": "animations wo nt trigger build", "body": "submitting current behavior animations work served via ng serve wo nt trigger served ng build expected behavior minimal reproduction problem instructions recreate error inside one simple file appcomponentts ng new animtest opened appcomponentts notepad pasted content modified appmodulets include browseranimationsmodule ng serve clicked chrome ff animate animation correctly ctrl c server stopped ng build prod basehref app copied content dist folder varwwwhtmlapp chrome ff opened animations nt work appcomponentts click expand collapse lorem ipsum simply dummy text printing typesetting industry lorem ipsum industry standard dummy text ever since unknown printer took galley type scrambled make type specimen book survived five centuries also leap electronic typesetting remaining essentially unchanged popularised release letraset sheets containing lorem ipsum passages recently desktop publishing software like aldus pagemaker including versions lorem ipsum styleurls animations collapsetrigger export class appcomponent collapsed true appmodulets motivation use case changing behavior environment angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "20685", "d": "11/2017"}, {"title": "call custom method dynamic control added form angular", "body": "hi working angular sharepoint would like call one method creating dynamic controls screen could please provide solution used code generate dynamic control pressing icon form typescript code follows want call method dynamic item added screen method want access control id operations could please one help regards philip", "num": "20684", "d": "11/2017"}, {"title": "flexlayout wrong host component container", "body": "submitting current behavior problem package problem host component related issue repo expected behavior could fixed issue improve host component", "num": "20681", "d": "11/2017"}, {"title": "datepipe formats incorrect time value", "body": "submitting current behavior displays displays displays expected behavior displays displays displays minimal reproduction problem instructions motivation use case changing behavior formatting time environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "20680", "d": "11/2017"}, {"title": "\u8de8\u5de5\u7a0b\u8c03\u7528\u6a21\u5757\u6216\u8005\u7ec4\u4ef6", "body": "", "num": "20679", "d": "11/2017"}, {"title": "feat router specify fallbackwildcard route auxiliary routeroutlet", "body": "submitting current behavior specify wildcard route auxiliary outlet applied route matches primary outlet expected behavior able specify default content auxiliary outlet matching route outlet wildcard route exists wildcard route used minimal reproduction problem instructions steps reproduce run plunk clicking members load members menu menu routeroutlet correctly expected result first loaded menu outlet section include public menu component specified wildcard path outlet menu actual result menu displayed default motivation use case changing behavior headers footers often large sections website change slightly specific sections fixing would make easy configure default navigation website also providing flexibility override particular child routes could lazy loaded example could website includes shop lazyloaded could specify different component routeroutlet could include things like shopping cart order totals would available within", "num": "20677", "d": "11/2017"}, {"title": "aot compilation nt work subpackage fonts", "body": "submitting x bug report might regression might bug uncovered browser vendor change current behavior run project build fonts nt show chrome firefox show correctly safari show correctly across modern browsers run without aot see project details expected behavior fonts display correctly run aot minimal reproduction problem instructions repo minimum case reproduction run observe home icons chrome firefox run observe placeholder icons url error dev tools console motivation use case changing behavior providing demo application within monorepo hosts components used across many applications environment angular version browser x chrome desktop version x firefox version", "num": "20676", "d": "11/2017"}, {"title": "supporting animation directives", "body": "animations work component code inside metadata animationbuilder directives supported via animationbuidler code difficult manage due state machine present trigger handling layer animations needs developed ability pass dsl code directly value trigger value directive class animdir hostbinding public animvalue input fade set fadestatus value value thisfadein else value thisfadeout fadein thisanimvalue style opacity animate style opacity fadeout thisanimvalue animate style opacity issue track feature goes", "num": "20675", "d": "11/2017"}, {"title": "block inner animations star insert remove", "body": "animations work consistently important animations blocked insertion removal view child animations within used parent animation enable specific animations run via query", "num": "20674", "d": "11/2017"}, {"title": "blacklistedevents work", "body": "submitting current behavior introduced allow run outside zone work wrong used still run zone expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20673", "d": "11/2017"}, {"title": "use jitcompiler jitcompilerfactory", "body": "submitting current behavior controlsmodulets import jitcompiler angularcompiler import jitcompilerfactory angularplatformbrowserdynamic using code error get ca nt resolve parameters jitcompilerfactory also tried using providers provide compileroptions usevalue multi true provide compilerfactory useclass jitcompilerfactory deps compileroptions provide compiler usefactory createcompiler deps compilerfactory error get error error staticinjectorerror jitcompiler staticinjectorerror jitcompiler nullinjectorerror provider jitcompiler expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20671", "d": "11/2017"}, {"title": "dynamic code loader sample throws expressionchangedafterithasbeencheckederror", "body": "submitting current behavior open plunkrlive coding example web browser referenced angular docs fundamentals template amp data binding dynamic components open javascript console see expressionchangedafterithasbeencheckederror thrown logs expected behavior sample code nt throw errors environment", "num": "20670", "d": "11/2017"}, {"title": "warn unsupported future version typescript used", "body": "submitting current behavior version silently produce bad output certain cases expected behavior warn user using unvalidated combination typescript consider emitting error unless", "num": "20669", "d": "11/2017"}, {"title": "extending directive appears create multiple copies output", "body": "issue generated google user instructions reproduce open navigate takahe canshow property set true timeout point outlet rendered twice two nodes inserted takahe constructor called twice seems happen contained ngif triggers activation canshow initially true works expected initial repro done set angular versions back verified issue exists well", "num": "20667", "d": "11/2017"}, {"title": "docs aio performance boost initial cold load angulario", "body": "question angulario loads seconds fast connection throttling faster upon introspection trace angulario presented somewhat interesting timeline initial blush seem highly optimized critical resources fetched less important ones deferred however gt second delay get critical assets draw initial page zooming inflection point go nothing painted something painted presented answer second question page fetching navigationjson indexjson seem html fragments inserted dom delay connection accounts nontrivial slow time first meaningful paint moving request indexjson navigationjson happen right bat yield nontrivial performance boost initial load time page", "num": "20666", "d": "11/2017"}, {"title": "add ability set several validators formbuilderarray method", "body": "submitting according current documentation set one validator field method would nice ability add several validators field method example typescript questionform formgroup constructor private formbuilder formbuilder ngoninit thisquestionform thisformbuildergroup text validatorsrequired options thisformbuilderarray myvalidatorscorrectcount myvalidatorstotalcount", "num": "20665", "d": "11/2017"}, {"title": "unexpected value mycustommodule imported module appmodule", "body": "unable resolve issues tried steps mentioned", "num": "20664", "d": "11/2017"}, {"title": "ngmodule metadata found e", "body": "submitting x bug report current behavior upgraded angular angular giving javascript heap memory read stackoverflow github people migrated angular longer error errors managed publish app got error solved solution able publish app seems start stops error ngmodule metadata found e eresolve egetngmodulemetadata app expected behavior app start minimal reproduction problem instructions upgrade angular angular change webpackconfigjs use angularcompilerplugin stop serversideprerendering loading section scripts motivation use case changing behavior could publish angular app due javascript heap memory environment packagejson webpackconfigjs const path require path const webpack require webpack const angularcompilerplugin require ngtoolswebpack angularcompilerplugin const merge require webpackmerge const checkerplugin require awesometypescriptloader checkerplugin moduleexports env gt configuration common clientside serverside bundles const isdevbuild env amp amp envprod const sharedconfig stats modules false context dirname resolve extensions js ts output filename name js publicpath dist webpack dev middleware enabled handles requests url prefix module rules test ts include clientapp use awesometypescriptloader silenttrue test html use htmlloader minimizefalse test css use tostringloader isdevbuild cssloader cssloader minimize test pngjpgjpeggifsvg use urlloader plugins new checkerplugin", "num": "20660", "d": "11/2017"}, {"title": "add landing page along dashboard", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20659", "d": "11/2017"}, {"title": "demo working live site", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20655", "d": "11/2017"}, {"title": "security vulnerability", "body": "", "num": "20654", "d": "11/2017"}, {"title": "update angular support typescript", "body": "submitting current behavior angular supports typescript expected behavior angular support typescript", "num": "20653", "d": "11/2017"}, {"title": "nested animations working", "body": "submitting current behavior scaleanimation inner container effect expected behavior scaleanimation inner container cyan colored run nested outer animation scaleanimation work applied outer container work applied inner container minimal reproduction problem instructions works nt work animation runs page loads motivation use case changing behavior using nested animation fade background dialog slide contents environment", "num": "20652", "d": "11/2017"}, {"title": "select plural work negative numbers", "body": "submitting current behavior angular break rendering template error message error ng companymodulecompanycomponenthtml invalid icu message missing gt companyadminemail companystatus select error deleted active hidden inactive unapproved expected behavior render value deleted minimal reproduction problem instructions create component template status select ok deleted try compile motivation use case changing behavior got status integer database want display meaning status user language want use build tools translate one status value environment", "num": "20650", "d": "11/2017"}, {"title": "release schedule needs update", "body": "submitting current behavior release schedule documentation old outdated release done expected behavior updated release schedule minimal reproduction problem instructions click motivation use case changing behavior people know expect environment", "num": "20649", "d": "11/2017"}, {"title": "enable strictnullchecks mode aio codebase", "body": "aio nt use strictnullchecks tsc mode primarily mode nt exist started project mode would help us catch bugs using typechecker would also help us better understand ts upgrade pain users mode currently mode angular framework code base nt apps using mode", "num": "20646", "d": "11/2017"}, {"title": "archive sites utilize suspicious amount download bandwidth", "body": "seen thing even nextangulario nt seem right per month lot data suspecting service worker might pulling way much stuff something like first find much traffic subdomains get see", "num": "20645", "d": "11/2017"}, {"title": "setup cross domain google analytics tracking", "body": "currently track traffic angulario exclude archive traffic like track using single property see usage patterns distribution traffic single report", "num": "20644", "d": "11/2017"}, {"title": "feature add type formcontrol", "body": "submitting regression behavior used work stopped working new release bug report x feature request documentation issue request support request current behavior creating currently way specify type within formcontrol group ie string number boolean etc string chequenumber new formcontrol number however change later string simple assignment way know set type set html input type use class values types export class cheque chequenumber number thisdepositform thisfbgroup cheque thisfbgroup new cheque expected behavior would nice able set types individually minimal reproduction problem instructions na motivation use case changing behavior specifying type control know type offer associated functions validation etc since reactive forms focus explicit management type formcontrol explicit well rely initial value type specified html environment na browser na tooling issues na others", "num": "20642", "d": "11/2017"}, {"title": "use asyncvalidator angular validate unique field db many async requests type", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20641", "d": "11/2017"}, {"title": "jitcompilerfactory bug angular", "body": "submitting current behavior jitcompilerfactory already exported public api install angular start using got error production code seems jitcompilerfactory need arguments tried without arguments got new error tried manually edit im trying compile got new error expected behavior fix thanks ocombe minimal reproduction problem instructions environment", "num": "20639", "d": "11/2017"}, {"title": "server side rendering transferstate module nt seem working properly", "body": "submitting current behavior using transferstate module cached http response server side nt seem work added servertransferstatemodule appservermodule browsertransferstatemodule appmodule suggested added interceptor intercepts http request server executes request stores response cache client check cache cached response exists returns otherwise executes request import injectable inject platformid angularcore import isplatformserver angularcommon import transferstate makestatekey angularplatformbrowser import httpevent httpinterceptor httphandler httprequest httpresponse httperrorresponse angularcommon import observable rxjsobservable import rxjsobservableof import catcherror tap rxjsoperators const cachekey makestatekey injectable export class myinterceptor implements httpinterceptor private isserver isplatformserver thisplatformid constructor inject platformid private platformid private transferstate transferstate inject baseurl private baseurl string intercept req httprequest next httphandler observable see response cached transferred client see script tag markup returned server q http requests executed twice server browser expected behavior http requests nt execute already cached response minimal reproduction problem instructions add http interceptor app make http call component environment browser x chrome desktop version xx tooling issues node version platform windows", "num": "20638", "d": "11/2017"}, {"title": "datepipe format string invalid", "body": "submitting current behavior displays janvier displays octobre expected behavior displays janvier displays octobre nt get issue use new date pipe working chrome ff typescript import injectable pipe pipetransform angularcore import datepipe angularcommon injectable pipe name customdate pure true export class customdatepipe extends datepipe implements pipetransform transform value format string string value new date value return supertransform value format difference comes date parsed dateparse replaced new date motivation use case changing behavior environment", "num": "20637", "d": "11/2017"}, {"title": "exception causing language service crash", "body": "submitting current behavior language service fails due exception vscode see also issue see error vscode angular language service server crashed times last minutes server restarted error expected behavior crash minimal reproduction problem instructions install plugin vscode motivation use case changing behavior environment", "num": "20636", "d": "11/2017"}, {"title": "contentchildren typecomponent returns undefined read templateref", "body": "submitting current behavior component content ask content children without providing option works properly want read templateref set returns array many component repeated expected behavior object wrap array throw error instead wraps array according official documentation query templateref component directive via query query expected normal behavior minimal reproduction problem instructions motivation use case changing behavior googled lot opening issue documentation use option nt understand working returning array asked question stackoverflow said need wrap tag actually works nt understand reason need wrap content component workaround prevents us share components provide tidy public interface users need behavior complex component nt want introduce breaking change asking users wrap child component ugly tedious actual reason returns array think throw error instead lack documentation user finds instead expected behavior nt know meaning environment", "num": "20635", "d": "11/2017"}, {"title": "tag", "body": "submitting current behavior browsing api link source code broken expected behavior able browse source code tag minimal reproduction problem instructions na motivation use case changing behavior environment", "num": "20633", "d": "11/2017"}, {"title": "list view angular like skype chat history list view", "body": "im working angular button click small list options opens want something like image skype feature type control use achieve similar feature ps im using controls lib syncfusioncom thanks", "num": "20632", "d": "11/2017"}, {"title": "provide convenience developers", "body": "submitting current behavior run ng serve want use cell phone open computer phone wifi like reactjs run npm start see like angular provide convenience developers expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20631", "d": "11/2017"}, {"title": "allowing insensitive case base href url deploy sub folder", "body": "submitting current behavior mvcangular application deployed sub folder web server routeconfigcs component route defined approutets like deploy base url set base href betadashboard indexhtml navigate sitecombetadashboard good try sitecombetadashboard without exact base path working expected behavior case sensitive work minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20629", "d": "11/2017"}, {"title": "numbering bug documentation angular", "body": "submitting current behavior numbered list shown wrong way foo bar baz expected behavior foo bar baz minimal reproduction problem instructions open go navigating hero details section motivation use case changing behavior small bug documentation screenshot", "num": "20628", "d": "11/2017"}, {"title": "docs aio example usage read metadata property contentchildren", "body": "submitting motivation use case changing behavior sample usage metadata properties environment", "num": "20627", "d": "11/2017"}, {"title": "host work applied scss", "body": "tried apply style host component work host backgroundcolor", "num": "20626", "d": "11/2017"}, {"title": "injecting html element via innerhtml input binding ignores css styling", "body": "submitting current behavior currently elements included component via performing input binding innerhtml ignore css styling described components css file expected behavior html data provided component html via input binding innerhtml respect css styling rules component minimal reproduction problem instructions componentts htmldata text goes componenthtml componentcss funkytext color red output text goes black desired output text goes red note inspection elements page confirm innerhtml input binding successful including class selectors motivation use case changing behavior would like serve structured html data angular application application component binds data would like apply custom styling key words phrases served data environment", "num": "20625", "d": "11/2017"}, {"title": "compiled angular files trigger error runtime value accessor form control name", "body": "submitting current behavior hi trying update package ngselector angular ca nt get work correctly understand since angular compiling files application fodler use package nodemodules folder package needs expose js files expose js files packages exposed ts files tried tsc ang ngc problem matter compiler use nt get compilations error import package js files try use always get error console saying know cases error comes one following ones mistake forgot include formsmodule implement correctly controlvalueaccessor use provider ngvalueaccessor saving trouble check case package working fine angular problem compilation typescript files put package files directly appplication folder change import instead importing nodemodules folder import local package files everything works fine expected behavior would expect package work correctly even exposing js files ts files directly anymore minimal reproduction problem instructions git clone git githubcom orodanngselectorgit cd ngselector git checkout develop npm install npm run buildtsc npm run buildngc according compilation want test cd ngselectordemo npm install npm start environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform maclinux thanks help", "num": "20622", "d": "11/2017"}, {"title": "possibility loop animation using triggers feature request", "body": "hello trying make loop animation full control using triggers right theres easy way make possibles work arounds submitting current behavior possible make loop inside trigger config right check animation done swap trigger back create loop edit sharing example source expected behavior something like parameter group query animate setting loop true number repetitions animate boollooptrue animate boolrepetitions example motivation use case changing behavior trying make complex animations need make things right stop using work arounds environment angular", "num": "20621", "d": "11/2017"}, {"title": "firefox asks password saving even login component removed page", "body": "submitting current behavior component login password fields created application navigate component router firefox asks password saving answering help notification appears navigating pages create component login password fields navigating invoke notifications seems like form login password appears dom disappears moment firefox thinks logged make sense left page inputs component destroyed chrome problems clear angular bug firefox bug expected behavior expected behavior firefox ask saving password navigation pages minimal reproduction problem instructions plunker demo navigate page navigate password navigate page notification appear answer navigate page notification appear reload plunker may reload page needed navigate page navigate page notification appear navigate password page motivation use case changing behavior application pages user edit keys external api services inputs looks like login password browser text input password input navigating pages user annoying notifications firefox page reload environment", "num": "20620", "d": "11/2017"}, {"title": "use systemjs", "body": "reason setup using systemjs need use systemjs specific reason use webpack got following error inspect code function debugging seems like need inject classes order everything kick could provide example things systemjs file look like ts must import reflect meta data top angular bug link import reflectmetadata import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule platformbrowserdynamic bootstrapmodule appmodule catch err gt consolelog err", "num": "20618", "d": "11/2017"}, {"title": "could open ipad", "body": "could nt open website ipad looks like rendering issue ipad", "num": "20617", "d": "11/2017"}, {"title": "changelog", "body": "submitting current behavior release page changelog claims latest version possible pull npm expected behavior expecting see changelog minimal reproduction problem instructions npm install angularcore", "num": "20616", "d": "11/2017"}, {"title": "angular django rest framework csrf verification failed request aborted issue", "body": "using angular django rest framework create application trying login application using post method getting csrf verification failed request aborted getting issue forbidden csrf verification failed request aborted code snippets authservicets injectable export class authservice private headers headers new headers contenttype applicationjson constructor private http login user promise let url string return user headers thisheaders topromise appmodulets import browsermodule angularplatformbrowser import ngmodule angularcore import httpmodule angular import formsmodule reactiveformsmodule angularforms import httpclientmodule angularcommon third party imports import bsdropdownmodule ngxbootstrapdropdown import carouselmodule ngxbootstrapcarousel import appcomponent appcomponent import approututingmodule approuting import homecomponent componentshomehomecomponent import headercomponent componentslayoutheaderheadercomponent import footercomponent componentslayoutfooterfootercomponent import navigationcomponent componentslayoutnavigationnavigationcomponent import userscomponent componentsusersuserscomponent import admincomponent componentsadminadmincomponent import logincomponent componentsloginlogincomponent import authguard authguard import usersservice usersservice import authservice servicesauthservice ngmodule declarations appcomponent homecomponent footercomponent headercomponent navigationcomponent userscomponent admincomponent logincomponent imports ngxbootstrap bsdropdownmoduleforroot carouselmoduleforroot providers usersservice authservice authguard bootstrap appcomponent export class appmodule one help", "num": "20615", "d": "11/2017"}, {"title": "unhandled promise rejection matchedqueriesdslforeach function zone task promisethen value typeerror matchedqueriesdslforeach function", "body": "hi looks working fine installinguninstalling packages project getting error application run project get compiled successful however seen developer tool found error following environment depdencencies angularanimations angularcommon angularcompiler angularcore angularforms angularhttp angularplatformbrowser angularplatformbrowserdynamic angularrouter angularmocks corejs rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript", "num": "20614", "d": "11/2017"}, {"title": "deactivate working logout", "body": "clicked logout set false confirm box click tab click ok confirm box log also thanks", "num": "20613", "d": "11/2017"}, {"title": "angular flex application", "body": "library plugin communicate angular flex application need share data flex angular application", "num": "20612", "d": "11/2017"}, {"title": "changedetectionstrategyonpush running properly contentchildren viewchildren", "body": "submitting current behavior trying set input property component projected another one tried performance reasons use changedetectionstrategyonpush child component come across strange bug changedetectionstrategydefault everything works fine using onpush get strange behavior appears onpush component nt receive new input property please see example clarifies problem think problem could confined contentchildren viewchildren problem querylist believe latter sure clarified onpush looks inputs set template via javascript although kinda makes sense thinking current framework logic nt sense child component using onpush nt thinking brain parent decides rerendering occur based template bindings expected behavior component input property received component rerendered even changedetectionstrategyonpush minimal reproduction problem instructions demo made simple component responsible state components projected inside please see comment togglecomponentts try changing default onpush motivation use case changing behavior compound components often need used onpush order optimize performance large applications environment browser x chrome desktop version", "num": "20611", "d": "11/2017"}, {"title": "adding open search opensearch specification angulario website", "body": "submitting current behavior nt exist expected behavior able add search engine browser quickly search angulario docs minimal reproduction problem instructions na motivation use case changing behavior able quickly search documention without needing go angulario click search bar finally search looking environment", "num": "20609", "d": "11/2017"}, {"title": "unable add custom header", "body": "submitting current behavior custom header named token getting added http request hence get response http status code expected behavior token added reqheader get response success code minimal reproduction problem instructions servicets file like imported using line import headers requestoptions http angular getpollinfo param promise let requrl string myurl let reqheader new headers customtoken dhasidisd return options topromise response gt promiseresolve responsejson catch err gt promiseresolve err motivation use case changing behavior first call custom header nt work url works postman get response environment", "num": "20606", "d": "11/2017"}, {"title": "locale files imports compatible angular universal", "body": "submitting current behavior adding locales imports new framework like appmodule import localeen angularcommonlocalesen registerlocaledata localeen compiling universal server side rendering error appears starting node server c gitreposwebappnodemodules export default syntaxerror unexpected token export createscript objectruninthiscontext modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require objectoyes c expected behavior locales imports support angular universal errors appear minimal reproduction problem instructions clone project run npm install run npm run buildserver run node server environment", "num": "20605", "d": "11/2017"}, {"title": "aot ca nt compile module declarations created objectvalues", "body": "much components ugly set one one declarationsso export components common file use submitting current behavior well execute ng serve well execute ng build prod throws error error error unexpected value null declared module appmodule g gitlabsudiyibmssrcappappmodulets syntaxerror g gitlabsudiyibmsnodemodules g gitlabsudiyibmsnodemodules arrayforeach compilemetadataresolvergetngmodulemetadata g gitlabsudiyibmsnodemodules addngmodule g gitlabsudiyibmsnodemodules g gitlabsudiyibmsnodemodules arrayforeach createngmodules g gitlabsudiyibmsnodemodules analyzengmodules g gitlabsudiyibmsnodemodules analyzeandvalidatengmodules g gitlabsudiyibmsnodemodules aotcompileranalyzemodulesasync g gitlabsudiyibmsnodemodules codegeneratorcodegen g gitlabsudiyibmsnodemodules g gitlabsudiyibmsnodemodules donepromisepromiseresolvethen g gitlabsudiyibmsnodemodules expected behavior minimal reproduction problem instructions import ngmodule angularcore import components components ngmodule declarations objectvalues components imports providers bootstrap componentslayoutcomponent export class appmodule motivation use case changing behavior environment", "num": "20604", "d": "11/2017"}, {"title": "hammer gesture configuration different components", "body": "submitting current behavior hammer configured root app module impossible configure hammer modules expected behavior possible configure hammer module minimal reproduction problem instructions example gallery carousel components gallery need directionall constant swipe direction carousel need directionhorizontal constant able scroll page vertically go gallery carousel module configure hammer custom config overrides expected angular understands app module configured hammer gestures environment", "num": "20603", "d": "11/2017"}, {"title": "user interface input", "body": "user interface input expected behavior javascript interface typesinterface foo string bar string component selector test template class point extends chart input typesinterface ngafterviewinit want get foo amp bar input consolelog thisfoo thisbar", "num": "20602", "d": "11/2017"}, {"title": "new angular project run ng build prod error", "body": "submitting", "num": "20601", "d": "11/2017"}, {"title": "property binding ignores input types", "body": "submitting current behavior property binding nt check types compiling expected behavior property binding shows error bind incorrect type minimal reproduction problem instructions jit aot reproduction steps download repo npm install npm run start navigate everything compiled fine aot even though second input child component date entered number input field would expect using nonnumber input inputchild input would show kind warning error motivation use case changing behavior better type safety sorry another issue tsconfigcli config json property set environment plunker problem seems happen jit aot project browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx nightly seems like plunker broken nt think thats problem safari desktop version xx safari ios version xx x ie version edge version xx", "num": "20600", "d": "11/2017"}, {"title": "subscribe observable get value", "body": "subscribe observable get value submitting current behavior run nodejs server name n provide data run angular application name n establish socket connection act client n act server n regular task send data client used service received data get service injection component get subscription data component expected behavior get subscription data component minimal reproduction problem instructions angular service ts createobservablesocket url string id number observable let new observable observer gt thiswsonmessage event gt observernext eventdata consolelog event data eventdata event data productid bid thiswsonerror event gt observererror event thiswsonopen event gt thissendmessage productid id thiswsonclose event gt observercomplete consolelog observable object let b amap message gt jsonparse message consolelog b b observable object return b sendmessage message consolelog client ws service msg jsonstringify message thiswssend jsonstringify message client ws service msg productid angular component ts watchproduct thisiswatched thisiswatched thiswsservicecreateobservablesocket ws thisproductid subscribe products gt consolelog component received products component received undefined let product productsfind p gt pproductid thisproductid thiscurrentbid productbid motivation use case changing behavior environment subscribe data please help thanks", "num": "20599", "d": "11/2017"}, {"title": "library code utilize critical services", "body": "submitting current behavior packaged library included angular project many framework provided services available router viewcontainerref example staticinjectorerror router staticinjectorerror router nullinjectorerror provider router services errors http cookiexsrfstrategyconfigurerequest throw following error read property getcookie null expected behavior services available library code default worst case mechanism provide minimal reproduction problem instructions start package library default service seed inject via constructor build package using create basic angular application routing using cli npm link created package add dependency package service app component serve application open dev console see errors motivation use case changing behavior current restrictions effectively make building maintainable platform around angular impossible complex libraries simply fail specifically trying make library contains modules preconfigured routes guards complex components components rely ngbootstrap course listed dependency library far proved impossible using angular package format webpack would really like use seems official approach environment found partial workaround export abstract class package application implements provide restricted functionality unfortunately approach nt seem apply restricted providers", "num": "20598", "d": "11/2017"}, {"title": "spec verify test environment test example work", "body": "submitting current behavior follow spec verify test environment example angular testing page get following error try run error config file find module karmacoverageistanbulreporter probably want check rest examples one guys work mention examples jacked know talking expected behavior run karma test runner shown testing page minimal reproduction problem instructions download spec verify test environment unzip folder open command prompt run npm install run npm test motivation use case changing behavior examples work novices like trying learn product environment", "num": "20596", "d": "11/2017"}, {"title": "unable aot compile loading component webpack requirecontext", "body": "submitting current behavior webpack enables buildtime component loading example typescript dynamicallyloadedcomponentts import component angularcore component selector appdynamicallyloaded template export default class dynamicallyloadedcomponent typescript appmodulets declare var require const dynamiccontext requirecontext false dynamicallyloadedcomponentts const dynamiccomponents dynamiccontext keys map dynamiccontext map comp gt compdefault ngmodule declarations appcomponent dynamiccomponents running using jit compiler aka app runs without issue running aot aka get error expected behavior expect aot compiler understand use component minimal reproduction problem instructions reproduction repo commit breaking change run see error motivation use case changing behavior porting style guide application currently written angularjs built webpack example style guide built angularjs component file use webpack dynamically load files application nt maintain bunch statements might get sync pattern works angular built aot would much like use aot environment", "num": "20595", "d": "11/2017"}, {"title": "styling issue templatesyntax guide", "body": "submitting current behavior box black along text color", "num": "20594", "d": "11/2017"}, {"title": "angular ng build prod errors", "body": "submitting current behavior angular material project works fine localhost project ng build works ng build prod following errors expected behavior wish ng build prod build successfully minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20591", "d": "11/2017"}, {"title": "modelbound elements inside ngfor behave badly", "body": "submitting current behavior entering character field generated inside character magically populating next field screen also model reflect new magic value edited clarification expected behavior values entered user inside given field populate field bleed next one minimal reproduction problem instructions motivation use case changing behavior using avoid unnecessarily repeating fields html file environment browser x chrome desktop windows version official build chrome android version xx chrome ios version xx x firefox windows version safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "20589", "d": "11/2017"}, {"title": "missing directives cause template error", "body": "submitting current behavior trying use directive included module angularcompiler fails silently case trying use pipe component included compiler fails warnings expected behavior similar warnings components pipes would like see uncaught error template parse errors directive xxx could found minimal reproduction problem instructions motivation use case changing behavior creating new modules case refactoring big modules smaller ones easy use errors find modules need import make module work however since missing directives nt throw errors easy miss including modules bugs really hard figure environment", "num": "20588", "d": "11/2017"}, {"title": "timelineanimationengine leaks memory entries animations", "body": "submitting current behavior creating animations like individual animationmetadata ie steps needs go registered timelineanimationengine stored timelineanimationengineanimations however code class ever clear entries map animations ids new animations created within browseranimationbuilder simply incrementing previous issues id callflow like browseranimationbuilderbuild issueanimationcommand animationrenderersetproperty name xxxx register animationengineprocess timelineanimationenginecommand timelineanimationengineregister expected behavior animation returned build needs provide destroy method deregisters animation minimal reproduction problem instructions see plnkr open preview separate private window chrome let run animation cycles take three memory heap snapshots seconds select third select objects allocated snapshot observe one retained object entry animation created using build motivation use case changing behavior stumbled upon error api animationbuilder completely unclear animation would centrally registered cause memory remain whole life application use case creating lots animations example duration may vary according user input must way dispose animations entirely usecase viable environment", "num": "20585", "d": "11/2017"}, {"title": "select multiple null incorrectly returns array instead string", "body": "submitting current behavior setting multiple attribute select control following way results array returned instead string expected behavior minimal reproduction problem instructions create select control add various options item item item set multiple null select control output selecteditem json demo motivation use case changing behavior create select component allows user flag component single multiple selection environment", "num": "20584", "d": "11/2017"}, {"title": "validatorsminlength nt work formarray", "body": "submitting current behavior providing validator minlength marks empty formarray valid expected behavior since array formarray length mark formarray invalid minimal reproduction problem instructions environment", "num": "20583", "d": "11/2017"}, {"title": "possible use angular without zone routersetuplocationchangelistener", "body": "submitting current behavior using angular router possible use new angular feature ngzone noop console see zone defined error router method setuplocationchangelistener using zone screenshots zone defined routersetuplocationchangelistener method implementation expected behavior angular router able work without zone minimal reproduction problem instructions fire angular app platformbrowserdynamic bootstrapmodule appmodule ngzone noop comment import zonejsdistzone polyfills try use angular router easy case motivation use case changing behavior environment", "num": "20582", "d": "11/2017"}, {"title": "spelling error apphightlight", "body": "submitting current behavior attribute directives page apphighlight spelled wrong first code example find anchor gt expected behavior apphighlight spelled correctly", "num": "20581", "d": "11/2017"}, {"title": "service worker seem cache indexhtml", "body": "submitting current behavior installing service worker following ngswconfigjson resources get cached others expected behavior resources json file cached minimal reproduction problem instructions adding new service worker project building project following commands ng build prod amp amp nodemodulesbinngswconfig dist srcngswconfigjson amp amp copy nodemodules angularserviceworkerngswworkerjs dist motivation use case changing behavior service worker work expected serve files offline environment", "num": "20578", "d": "11/2017"}, {"title": "decimal pipe component wroking", "body": "using decimal pipe formatting number componentts file decimalpipeprototypetransform thistimeminutes upgraded angular added deprecated pipe module import commonmodule angularcommon ngmodule imports commonmodule imports getting console error like error typeerror read property tolowercase undefined findlocaledata getlocalenumberformat formatnumber objectdecimalpipetransform sessiontimeoutcomponentngdocheck checkandupdatedirectiveinline checkandupdatenodeinline checkandupdatenode debugcheckandupdatenode debugcheckdirectivesfn submitting error current behavior getting error console expected behavior work decimal pipe minimal reproduction problem instructions environment angular version browser chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows typesript others brad evmar jdalton jesperronn mprobst", "num": "20577", "d": "11/2017"}, {"title": "trouble building application metadata mismatch", "body": "reporting bug seems like covalent modules version bumped try run build jenkins job running ng build prod getting issue locally tried delete nodemodules directory run npm install keeps bringing version metadata files packagejson file thanks help", "num": "20576", "d": "11/2017"}, {"title": "httpinterceptors reset lazy loaded module imports another module importing httpclientmodule", "body": "submitting current behavior provider token reset lazy loaded module imports another module imports expected behavior parent injector used minimal reproduction problem instructions motivation use case changing behavior seems currently design parent injector asked already registered providers multiprovider token opinion uncommon kind shared module also importing want issue http calls depend module imported app module way implement scenario likely relates also kind environment", "num": "20575", "d": "11/2017"}, {"title": "error uncaught promise securityerror failed execute pushstate history", "body": "routes const routes routes path component welcomecomponent path profile component profilecomponent path addcourse component addcoursecomponent path course component coursecomponent path editcourse component editcoursecomponent path addlectures component addlecturecomponent path login component logincomponent path register component registercomponent path newform canactivate authguard component newfomcomponent path redirectto pathmatch full current behavior app starts welcome page click login takes courses page upon clicking course app take course component redirects welcome page click login gives error error error uncaught promise securityerror failed execute pushstate history history state object url created document origin url error failed execute pushstate history history state object url created document origin url looked similar issues suggest check base href app set issues anybody please wrong", "num": "20574", "d": "11/2017"}, {"title": "uncaught referenceerror require defined", "body": "submitting current behavior followed link running test project getting error uncaught referenceerror require defined expected behavior written test cases executed minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20573", "d": "11/2017"}, {"title": "activatedroute params include parent parameters root", "body": "submitting current behavior currently router special casing parent route parameters inherited child activatedroutes specifically inherited parent route either configured without configured expected behavior seems like useful allow option unconditionally flattening params root current route would allow child pages easy access params defined parent routes motivation use case changing behavior child routes often need access parameters defined parent routes would make much simpler reliably params available injected child component avoid unpredictability current merging approach environment", "num": "20572", "d": "11/2017"}, {"title": "angulario advertises past event angular connect", "body": "landing page advertises past event angular connect", "num": "20568", "d": "11/2017"}, {"title": "service workers error multiply dev mode", "body": "might cli issue sure core problem easy user shoot foot get unpredictable behavior dev mode service workers submitting repro steps edit line observed behavior every refresh browser new service worker installed expected behavior developers adding service worker project dev mode nt recommended see error nt get multiple service workers motivation use case changing behavior lots developers adding service workers applications complex manage devmode prodmode code ca nt use example work prod mode environment angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "20567", "d": "11/2017"}, {"title": "upgrade angularangular latest version yarn", "body": "currently super old work breakdown x update envsh x update circleci docker container alexeagle info x update lock files anywhere else lock files clear done believe updating yarn version autoupdate lock file without messing dependencies need verify x test everything ci x add field packagejson enforce version yarn used checkenvjs script often overlooked people resulting bad dependency installs confusion x update md docs reference yarn version number", "num": "20566", "d": "11/2017"}, {"title": "type typeof httphandler assignable type", "body": "submitting bit context first trying set application dynamic routing routes retrieved elsewhere let say routingservice far line comment seems causing following error typescript code works fine browser fails typescript build stops whole app built way fix errors alternatively elegant way retrieving external routes module file thanks", "num": "20565", "d": "11/2017"}, {"title": "default send undefined params url", "body": "submitting x feature request current simple take example get request simple method making http call optional parameter optional call method like angular make request url expected think avoid sending undefined params including httpparams undefined common use case check backend params nt present undefined motivation advantages maybe url limits sending essentialuseful data really need important nt understand send default undefined something like includenonnull jackson think send default add option options object avoid big codes let cleanedparams new httpparams reqparamskeys foreach x gt reqparamsget x undefined cleanedparams cleanedparamsappend x reqparamsget x const clonedrequest reqclone params cleanedparams return nexthandle clonedrequest otherwise yes actually fortunately workaround interceptor params http request happy avoid condition nt think others backend endpoint think within use case idea react undefined params null params instance endpoint java expect receive receive null undefined environment angular browser tested x chrome console version", "num": "20564", "d": "11/2017"}, {"title": "modal popup input box creates cursor issue ios version", "body": "submitting current behavior currently modal popup opens amp type anything input box cursor blink outside input box text appearing input box problem cursor blinks outside input box issue arise ios version expected behavior pointing within input box think compatible ios environment", "num": "20563", "d": "11/2017"}, {"title": "request feat form ability programmatically submit abstractcontrol ngform formgroupdirective", "body": "submitting current behavior standard htmltypescript without angular possible get htmlformelement call either submit programmatically want component need either casting call hidden similar trigger programmatically note case well supported documented expected behavior able trigger operation directly even would really helpful cases practical uiux reasons submit button element although far ideal still something done minimal reproduction problem instructions try submit form without using hidden submit inside motivation use case changing behavior uis require us submit element outside submit form relying different mechanismconditions eg time triggered gamelike ui environment", "num": "20562", "d": "11/2017"}, {"title": "fix common nt capitalize local language special letters titlecasepipe", "body": "submitting current behavior titlecasepipe capitalizes special letters inside word one normal letter example produces poniedzia\u0142ek monday polish expected behavior produces motivation use case changing behavior intend change title case words properly environment", "num": "20561", "d": "11/2017"}, {"title": "feat router view encapsulation inherit outlet attributes", "body": "submitting current behavior attributes passed dynamically routed component page following definition results generated code routed component injected successive sibling without inheritance attributes css selector relying attributes able select routed component even attribute would inherited current bug default view encapsulation would still prevent css selection expected behavior routed components inherit attributes dynamically decorating routed component minimal reproduction problem instructions full example issue found application motivation use case changing behavior router outlet dynamic behavior injecting component behave similar static injection component eg vs decorators passed routed component environment", "num": "20560", "d": "11/2017"}, {"title": "bug router view encapsulation overrules wildcard selectors", "body": "submitting current behavior wildcard selector overruled angular default view encapsulation view encapsulation preprocessor converts following css expected behavior wildcard selector remain wildcard selector without specialization minimal reproduction problem instructions full example issue found application motivation use case changing behavior see thread stackoverflow sibling wildcard would solve router selection issue dynamically inserted component environment", "num": "20559", "d": "11/2017"}, {"title": "bug router view encapsulation attribute applied routed component", "body": "submitting current behavior default view encapsulation behavior set preprocessor attach custom attributes dom elements following component definition results generated code router dynamically injected component right apply host reference attribute view encapsulated css component append host reference attribute selectors result none css defined apply routed component impossible select routed component host css using default view encapsulation behavior expected behavior router apply host component reference routed components routed component consistency minimal reproduction problem instructions full example issue found application context using css grid layout using definitions assign function component page eg requires able select component could suggest apply definition routed component would break parts application proper separation concerns see question stackoverflow environment", "num": "20558", "d": "11/2017"}, {"title": "regression compiler new transformer pipeline breaks tsx support", "body": "submitting current behavior introducing new transformer pipeline based compiler directly compatibility files completely broken currently compiler generate file content due failure file rename update root problem compiler reuse extension source file generated files however generated files always aot expected behavior angular compiler support file used see easy reproduce minimal reproduction problem instructions create project add rename run motivation use case changing behavior since angular compiler extension typescript compiler still support typescript functionalities supported using typescript transformer api quite easy fix raise pr fix environment", "num": "20555", "d": "11/2017"}, {"title": "httpclient detect header params", "body": "submitting current behavior httpclient detect custom header params sent api using http able access make use expected behavior httpclient detect custom headers make accessible code tried http amp httpclient works fine http httpclient minimal reproduction problem instructions used http amp httpclient fetch header params http returns header httpclient nt constructor private http private httpclient getcontent const url return data map res response gt consolelog http content res checked console http returns response headers returns empty array checked networks tab browser inspector displays header parameters sent api server following cors options origin methods get head put patch post delete allowedheaders origin xrequestedwith xaccesstoken contenttype authorization accept tokenkey exposedheaders contenttype authorization tokenkey motivation use case changing behavior want access token key sent api store authorize validate user unable get tokenkey api environment", "num": "20554", "d": "11/2017"}, {"title": "getting headers value using", "body": "please suggest solution code gethomedetails observable const data return data observe response map res httpresponse gt thisdashboardserviceresponse res consolelog gethomedetails res", "num": "20553", "d": "11/2017"}, {"title": "language service plugin crashes startup", "body": "submitting current behavior following exception occurs angular language service plugin first loaded expected behavior plugin crash minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20552", "d": "11/2017"}, {"title": "arabic dates datepipe displaying correctly", "body": "submitting current behavior using dates coming back like expected behavior angular intljs correctly converted dates arabic ones aka shaaban ah aka june worth workaround use supported browsers namely safari lt minimal reproduction problem instructions nt link pretty easy repro set motivation use case changing behavior properly localize dates arabic users utilize new angular polyfill reduction drop large polyfill environment", "num": "20551", "d": "11/2017"}, {"title": "browser back button broken navigating route redirect", "body": "current behavior application angular angular components angular link item angular redirectedto another route within angular app causes extra entry browser history user use browser back button go back application user redirected back expected behavior one entry added browser history browser back button works expected minimal reproduction problem instructions see clone repo use angularcli run follow steps readmemd motivation use case changing behavior migrate application add granular separation components need add redirection land hte default page managed routing config angular router causes unexpected behaviors browser browser history environment", "num": "20549", "d": "11/2017"}, {"title": "httpheaders foreach missing", "body": "submitting current behavior httpheaders commonhttp module show foreach function many functions actually runtime despite interface saying available headers runtime appear headers spec compliant makes difficult work aruond get typescript allow cast httpheaders headers object expected behavior assume httpheaders minimal interface runtime actually headers implementation reflected interface minimal reproduction problem instructions plknr support latest version angular nt believe issue would require demo test simple attempting cast import httpheaders angularcommon headers object motivation use case changing behavior make easier work browser headers spec environment", "num": "20548", "d": "11/2017"}, {"title": "ngform controls updating idname change view values lost", "body": "submitting current behavior ngformcontroles loses element idname changed view value element becomes empty expected behavior ngformcontrols correctly updates amp view values keeped minimal reproduction problem instructions create template form contains inputs inside ngfor idname depending index example idx add elements array property remove second idname third element change view value still correct add one element view value element become empty ngformcomponents see removed replaced step motivation use case changing behavior environment", "num": "20546", "d": "11/2017"}, {"title": "security java backend angular app controlled oam", "body": "hi developed angular application backend developed java jaxrs angular backend context server side application oam controlled open app page browser get oam login page login app home page opens requirement put extra security app oam goes wrongdown app work achieve used jspfilters webxml added clientcert form changes app showing extra login page oam login page expecting oam authenticates first carry forward internal login nt ask login oam ask login anyone help achieve thanks advance ch", "num": "20545", "d": "11/2017"}, {"title": "handling browser tabs", "body": "submitting current behavior angular application uses router canactivate guard user creates new tab browser tabs back lifecycle hooks run furthermore router guard run get around problem using following javascript indexhtml file requires us reload page suggest better way implement expected behavior browser tab hit ideally router canactivate run minimal reproduction problem instructions code motivation use case changing behavior self explanatory environment", "num": "20544", "d": "11/2017"}, {"title": "change angular name angularx successfully distinguish angularjs", "body": "submitting current behavior angular name confusing hard define correct search web many old sites angularjs insights refer angularjs rather angular thus get unwanted result search addition angular make search angular since may loose information resources refer versions expected behavior want clear name library distinguish angular angularjs proposition angularx minimal reproduction problem instructions irrelevant motivation use case changing behavior global future usability remove ambiguity environment", "num": "20543", "d": "11/2017"}, {"title": "docs aio contribute translation", "body": "submitting regression behavior used work stopped working new release bug report feature request x documentation issue request support request gt please submit support request instead see want translate aio guide content korean use md files elsewhere maybe refer chinese translation case possible", "num": "20542", "d": "11/2017"}, {"title": "using multiple triggername single element stops removal node leave animation completes", "body": "submitting current behavior using multiple attributes single element completes node removed dom removed okay okay fine angular expected behavior node removal triggered animation removed animation completes note assumes defining multiple attributes actually supported using multiple attributes worked angular seems actually documented angular longer works extensive example might indicate one use one case bug report moot documentation might simply clarified instead minimal reproduction problem instructions see make sure rightmost enter amp leave column visible add heroes remove heroes see enter amp leave column animations work great completed heroes removed hence reappear animations complete plunker based changed single separated single trigger two triggers using motivation use case changing behavior elements apply others easy workaround define specific triggers worked fine angular might introduced environment", "num": "20541", "d": "11/2017"}, {"title": "incomplete type list commit guidelines add release type", "body": "submitting current behavior list allowed commit types currently list type appropriate project activities like releasing previously type used angular project uses type eg expected behavior commit conventions list types use add release list allowed types motivation use case changing behavior create reliable single source truth commit conventions external tools", "num": "20537", "d": "11/2017"}, {"title": "internal datenumber formatters reexported angularcommon", "body": "submitting current behavior starting version angular uses cldr data numberdatecurrency internalization uses internal formatters purpose reexports available developers mean formatters describes files formatdatets formatnumberts expected behavior reexported formatters allow localize data code motivation use case changing behavior sometimes necessary translate dates numbers code rather templates example use components like aggrid define custom formatters date represented grid large overhead use angular component purpose much easier use formatting capabilities embedded angular reach consistent formatting another case messages generated code environment", "num": "20536", "d": "11/2017"}, {"title": "nullinjectorerror", "body": "submitting current behavior like build ui library angular oriented angular material tried build simple button component compile time works fine use library project get runtime error nullinjectorerror provider idea wrong import special module something also hint documentation expected behavior raise exception like library minimal reproduction problem instructions buttonts ts import focusmonitor import platform angularcdkplatform import changedetectionstrategy component directive elementref hostlistener ondestroy viewencapsulation angularcore base class classes export class mybuttonbase constructor public renderer public elementref elementref component moduleid moduleid selector button mybutton button mysecondarybutton exportas mybutton host disabled disabled null templateurl buttonhtml styleurls buttoncss inputs disabled encapsulation viewencapsulationnone preservewhitespaces false changedetection changedetectionstrategyonpush export class mybutton extends mybuttonbase implements ondestroy buttonmodulets ts import import commonmodule angularcommon import ngmodule angularcore import mybutton button ngmodule imports commonmodule exports mybutton declarations mybutton export class mybuttonmodule motivation use case changing behavior motivation implement ui library understand better oriented got work library nt like know problem occurs environment", "num": "20535", "d": "11/2017"}, {"title": "check function removed", "body": "submitting current behavior currently two types functions run change detection expected behavior probably removed motivation use case changing behavior implemented performance boost however according comment bmeurer dynamic version faster", "num": "20534", "d": "11/2017"}, {"title": "able create interface type script", "body": "getting error kindly suggest anything miss ts version interface icar engine string color string class car implements icar constructor public engine string public color string error c function exports require module filename dirname interface icar syntaxerror unexpected identifier createscript objectruninthiscontext modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerunmain run startup submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20533", "d": "11/2017"}, {"title": "events removed running zone", "body": "submitting current behavior use listen zone use callback remove event listeners see running zone event removed events running zone removed expected behavior running zone zone event removed minimal reproduction problem instructions motivation use case changing behavior events wanted run zone avoid change improve performance environment", "num": "20532", "d": "11/2017"}, {"title": "webpack example working properly npm test npm start", "body": "submitting current behavior testing setup current webpack example working properly download direct download url missing dependencies packagejson well error karma loading specs expected behavior testing example work without modifications running npm install npm test minimal reproduction problem instructions download webpack example notice files zip different actual webpage displays unzip run npm install run npm test karma complains webpack sourcemap preprocessors need additional plugins run run npm test karma load properly following message appears guessing means karma loading specs properly motivation use case changing behavior webpack example tests working properly consistent documentation says whole example checked thoroughly since seems also working properly page shows loading never gets load angular environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others npm version", "num": "20530", "d": "11/2017"}, {"title": "reactive form radios per row allow arrows go next row", "body": "issue large reactive form loops using ngfor radio group two option per row press tab keyboard focus first radio press arrow key right twice first focus last radio option correct set focus next rows radio false happens chrome thinks radio group normally would use attribute name cant using formcontrolname solution please also render native radio name attribute chrome devide row radio group versus row radio group keying arrows wont set focus radio row row", "num": "20529", "d": "11/2017"}, {"title": "nested http get", "body": "two apis apiresourceitem returns item details apiresourceitem name returns code iterate details print undefined value could nt get value html template injectable export class productsservice getproductdetails return map p gt let products pjson data productsforeach gt mname map details gt detailsjson subscribe details gt detailsdata lt get values trying console print calling service component export class productscomponent implements oninit products constructor private service productsservice thisservicegetproductdetails subscribe products gt thisproducts products lt consolelog products print undefined value new angular want get name first api calls loop second api get details", "num": "20528", "d": "11/2017"}, {"title": "improve first meaningful pain using party cdns fonts", "body": "looking traces angulario noticed spent second initializing new http connections fetch fonts two party domains source seems like waste experiment compare film strips build fonts locally hosted server comparing make sure use preview server able make reliable comparison", "num": "20527", "d": "11/2017"}, {"title": "postrequest amp windows authentication", "body": "hello need windows authentication project postrequest broken global implementation httpinterceptor cors enabled backend servicesaddcors options gt optionsaddpolicy allowallorigin builder gt builderallowanyorigin allowanymethod allowanyheader allowcredentials send getrequest retrieve user identity backend alright wrong postrequest ps setted anonymous authentication getpost requests work user identity options unauthorized failed load response preflight request nt pass access control check accesscontrolalloworigin header present requested resource origin therefore allowed access response http status code submitting minimal reproduction problem instructions injectable export class documentservice controllername string document constructor private httpclient inject apiurl private apiurl string injectable export class authhttpinterceptor implements httpinterceptor intercept req httprequest next httphandler rxobservable const headers const clone reqclone setheaders headers withcredentials true return nexthandle clone motivation use case changing behavior environment", "num": "20526", "d": "11/2017"}, {"title": "router type event inferred correctly using filter operator", "body": "submitting current behavior consider piece code constructor private router router ngoninit thisroutereventspipe filter e gt e instanceof navigationend subscribe e inferred routerevent routeconfigloadstart routeconfigloadend childactivationstart childactivationend activationstart activationend e gt consolelog e code using operator listen events referent however type nt inferred correctly instead getting getting expected behavior expect inferred minimal reproduction problem instructions environment angular version others sure something related operator something changed rxjs broke old behavior actually get correct type inferred put subscribe like", "num": "20525", "d": "11/2017"}, {"title": "unresolved constructor types produce internal error", "body": "submitting current behavior parameter type resolvable compiler produce internal error instead reasonable error message expected behavior reasonable error message minimal reproduction problem instructions add received expected something similar", "num": "20523", "d": "11/2017"}, {"title": "angular version error help install version lts", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20522", "d": "11/2017"}, {"title": "feat platformserver allow configuration render timing", "body": "submitting current behavior render html string first vm tick returns stable gives undefined behavior async operations happen server ie may complete may expected behavior allow method override force render method wait based user configuration motivation use case changing behavior users may want async operations complete render html string without use route resolve every operation", "num": "20520", "d": "11/2017"}, {"title": "serviceworkermodule breaks app safari", "body": "submitting current behavior angular application becomes unusable safari serviceworkermodule used several exceptions thrown problem swpush described problem swupdate expected behavior serviceworkermodule check browsers support service worker instead throwing errors motivation use case changing behavior crossbrowser support environment", "num": "20519", "d": "11/2017"}, {"title": "got error implementing swipe tabs ionic", "body": "far done npm install save imported appmodulets file mine tabshtml error getting", "num": "20517", "d": "11/2017"}, {"title": "common wrong rxjsobservableof factory parameter", "body": "submitting error typeerror rxjsobservableofof function httpclientrequest common httpclientget common translatemanagerloadproperties translatemanagersetlanguage translatemanagerinit shellinit appviewoninit appviewngoninit appviewngoninit checkandupdatedirectiveinline coreumdminjs current behavior error runtime meanwhile fix add script rxobservableprototypeof rxobservableof expected behavior error runtime rxjsobservableof parameter rxobservable rxobservableprototype environment integration angular material rxjs browsers", "num": "20516", "d": "11/2017"}, {"title": "bug applicationrefattachview cause error dynamic creating component contains structural directives", "body": "submitting current behavior using creating component dynamically app contains hierarchical structural directives like cause error development mode expected behavior throw errors complex environment minimal reproduction problem instructions issue found using service package indicate every app depend may cause problem environment", "num": "20515", "d": "11/2017"}, {"title": "dynamic component generation dynamic routing configuration", "body": "", "num": "20514", "d": "11/2017"}, {"title": "error error uncaught promise error staticinjectorerror injectiontoken config", "body": "submitting current behavior upgraded current project using recommandations launch ng serve page keeps blank browser console returns following error looked code cant find reference config also occurs navigating one page another using router expected behavior error navigate new page minimal reproduction problem instructions know reproduce bug existing codebase quite large aware might difficult answer issue ask know error message rings bell anyone know start digging motivation use case changing behavior environment", "num": "20513", "d": "11/2017"}, {"title": "httpclient set xxsrftoken http post", "body": "submitting current behavior updated angular updated deprecated httpmodule angular httpclientmodule angularcommon updated httppost httpclientpost tested xxsrftoken present http header httpclient angularcommon set xxsrftoken http post http angular expected behavior httpclient set xxsrftoken http post minimal reproduction problem instructions verify javascript xsrftoken cookie set test httpclient angular httpclientmodule angularcommon side side nearly identical http post requests motivation use case changing behavior environment", "num": "20511", "d": "11/2017"}, {"title": "reactive form formgroup nested formgroup throw exception reset call null values", "body": "current behavior call form reset formgroup nested formgroup passing null value receive error read property null expected behavior expected result form reset null value nested form group properties become null minimal reproduction problem instructions formgroup nested formgroup like call form reset patch value object like receive error read property id null try read nested property null object expected result form reset null value nested form group properties become null behavior happen call reset without nested properties motivation use case changing behavior usually service return models properties nested entities null nt exist instead return nested entities initialized", "num": "20509", "d": "11/2017"}, {"title": "get error compilationing angular", "body": "submitting current behavior ater update angular get error compiling app expected behavior errors use angular minimal reproduction problem instructions see example use following commands npm npm run build environment", "num": "20507", "d": "11/2017"}, {"title": "ng serve working fresh install", "body": "versions angularcompilercli typescript could determined common reason broken npm install please make sure packagejson contains angularcompilercli typescript devdependencies delete nodemodules packagelockjson one run npm install try ng v getting like e myproject ng v angular cli node os angular animations common compiler core forms http platformbrowser platformbrowserdynamic router angularcli error angularcompilercli error angularlanguageservice error typescript error webpack error", "num": "20506", "d": "11/2017"}, {"title": "angular app working safari", "body": "got two exceptions exceptions syntaxerror unexpected keyword const const declarations supported strict mode typeerror null object evaluating elementaddeventlistener", "num": "20505", "d": "11/2017"}, {"title": "android webview load url ca nt listener onscrollchanged", "body": "android webview load url ca nt listener onscrollchanged submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20503", "d": "11/2017"}, {"title": "language server errors including locale file", "body": "submitting current behavior following error occurs logging location yields likely related expected behavior error minimal reproduction problem instructions steps reproduce maints motivation use case changing behavior building without cli environment", "num": "20502", "d": "11/2017"}, {"title": "routeroutlet send activate event attach", "body": "submitting current behavior case existing component gets mounted routeroutlet attach gets called attach emit change activateevents eventemitter even though change isactive property router expected behavior attach also emits change activateevents eventemitter motivation use case changing behavior use case want parent attach events child components children loaded routeroutlet resorts listen routeroutlet activate event order bind child components reasons ca nt use service environment", "num": "20501", "d": "11/2017"}, {"title": "document set locale pipes outside app module", "body": "submitting current behavior documentation currently describes way set locale pipes date according ocombe see expected behavior documentation describes methods setting locale minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20500", "d": "11/2017"}, {"title": "consider domchangelist proposal renderer", "body": "submitting domchangelist proposal dom specification seems like interest implementors far see proposal quite similar glimmer already polyfill domchangelist coupled glimmer internals though could proposal considered future renderer implementations", "num": "20499", "d": "11/2017"}, {"title": "params root route", "body": "submitting current behavior able route want param expected behavior want make params work root route something like nt know right approach tried nested routing problem send data root param cos whenever user want slash request transform environment", "num": "20498", "d": "11/2017"}, {"title": "ca nt change validator default value", "body": "submitting current behavior ca nt set default value validator beginning motivation use case changing behavior first go login page understand validator set false give value yet however question already form passed validator want edit point need new form handle edit event get value old form new form validator true beginning old form already passed validation support feature set validator true initial step another way work around", "num": "20497", "d": "11/2017"}, {"title": "create formgroup custom name custom id angular reactive forms", "body": "complex form formarray contains infinity number formgroup elements basically user add wants delete group well also want periodically update ngrx store keep data persistence according documentation repeated formgroup needs unique formgroupname must index formgroup formarray reuse index compose unique label address means form groups nt unique id name identified index change add remove form group array possible create custom unique identifier formgroup element within array easy locate recommended work around", "num": "20496", "d": "11/2017"}, {"title": "close browser", "body": "submitting current behavior inbuild window object call native method window expected behavior native window object allow call handle window events minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20495", "d": "11/2017"}, {"title": "titlecasepipe incorrectly capitalizes norwegian letters middle word", "body": "submitting current behavior words containing norwegian probably languages letters incorrectly titlecased middle word using titlecase pipe expected behavior titlecase pipe capitalize norwegian letters middle word minimal reproduction problem instructions example illustrates word utg\u00e5tt titlecased utg\u00e5tt propper transformation would utg\u00e5tt environment browser x chrome desktop version x ie version x edge version", "num": "20494", "d": "11/2017"}, {"title": "", "body": "", "num": "20493", "d": "11/2017"}, {"title": "formcontrolinvalid stays true forever", "body": "submitting current behavior field formcontrol instance stays user resolved errors expected behavior formcontrol instance inside component update field value minimal reproduction problem instructions thought plunker example document site would help nt try make one time require matselect formcontrol injected check browser debug console motivation use case changing behavior input form inside dialog would like check attribute formcontrol instance sticking input fields decide whether dialog closed user clicks save stay asking correct inputs environment workaround inspect field input field directly like", "num": "20492", "d": "11/2017"}, {"title": "app destroyed router keeps track location", "body": "submitting minimal reproduction problem instructions make sure route set sake simple reproducibility snippet js async gt const platform platformbrowserdynamic const appmodule await platformbootstrapmodule appmodule window kill gt appmoduledestroy platformdestroy windowlocationhash xxx run browser console something external trying kill angular app current behavior expected behavior app destroyed handlers disconnected destroyed well environment", "num": "20491", "d": "11/2017"}, {"title": "leave animation work firefox edge", "body": "submitting current behavior enter animation working fine browsers leave animation working firefox edge works chrome safari expected behavior work works chrome safari minimal reproduction problem instructions environment", "num": "20489", "d": "11/2017"}, {"title": "document lazy load locale data bootstrap application", "body": "submitting current behavior currently documentation states import locale data need app expected behavior typical enterprise app supports multiple cultures may know culture run time example import correct locale data run time would helpful minimal reproduction problem instructions motivation use case changing behavior discussed part environment", "num": "20487", "d": "11/2017"}, {"title": "feat allow spliting css bundle media queries", "body": "submitting x feature request current behavior css bundled one css extractcss tag expected behavior laverage webpack module split css multiple bundles like corecss mediaquery css generate multiple css bundles load effective load css rules needed based platform motivation use case changing behavior better code splitting load performance smaller rendering gap", "num": "20486", "d": "11/2017"}, {"title": "webpack failure dot net core gives wrong message", "body": "prashantchoudhary november dotnet core angular angular updated angular ngtools latest following error comes runtime error version angularcompilercli needs greater current version error message clearly misleading copied original issue dotnetcorefx", "num": "20485", "d": "11/2017"}, {"title": "avoid put client bootstrap domcontentloaded transferstate work properly", "body": "currently client ssr angular app needs wait domcontentloaded complete bootstrapping transferstate reliably get contents transferred state dom need investigate whether handle transparently without user needing bootstrap specific way client side", "num": "20484", "d": "11/2017"}, {"title": "candeactivate router guard", "body": "hello need advice something correct feature supported background implemented candeactivate guard one routes alert user really intended navigate candeactivate observable boolean return value async call returnvalue settimeout gt issue candeactivate method recognizing return value settimeout function return true false outside async fn works something buggy end feature supported please clarify", "num": "20483", "d": "11/2017"}, {"title": "componentfactoryresolver party component found using aot", "body": "submitting current behavior reason aot mode angular find third party component ngxdatatable via componentfactoryresolver even though defined entrycomponents component actually listed factories map function reference reason therefore thisfactoriesget returns undefined expected behavior component found jit mode minimal reproduction problem instructions install run see without aot works also used work angular found workaround import source files ngxdatatable effectively build project aot build works seems issues ngxdatatable regarding angular issues issue seems caused changes angular submitting case error ngxdatatable issue closed environment", "num": "20482", "d": "11/2017"}, {"title": "docs aio rename httpclientrequest first parameter method", "body": "submitting current behavior documentation httpclient request method lists parameter expected behavior technically makes sense call parameter called code minimal reproduction problem instructions open documentation motivation use case changing behavior help everyone understand api docs better environment applicable others", "num": "20481", "d": "11/2017"}, {"title": "autofocus working", "body": "native html autofocus attribute working angular due dynamic generation dom elements", "num": "20480", "d": "11/2017"}, {"title": "upgrade ngc generates invalid metadatajson files files export anything", "body": "submitting current behavior run ngc library generates files even files exports previously metadata files generated files content metadata file causes aot compilation throw error example file exports downgrade service separately support hybrid angular apps import downgradeinjectable angularupgradestatic import authservice xxcore declare var angular angulariangularstatic angular module xxupgrade factory xxauth downgradeinjectable authservice expected behavior metadata files generated files sure intended change workaround ngc p tsconfigpath environment", "num": "20479", "d": "11/2017"}, {"title": "simpler api showing errors templates", "body": "submitting current behavior example validation errors could displayed password input field password password required password least characters long signupformget password touched signupformget password dirty formdirsubmitted repetitive requires allways specify name control also general much logic template expected behavior think team recognized complexity built errorstatematcher class simplifies logic example used errors appear instantly please enter valid email address email required typescript export class myerrorstatematcher implements errorstatematcher iserrorstate control formcontrol null form formgroupdirective ngform null boolean const issubmitted form amp amp formsubmitted return control amp amp controlinvalid amp amp controldirty controltouched issubmitted title input custom errorstatematcher component selector inputerrorstatematcherexample templateurl inputerrorstatematcherexamplehtml styleurls inputerrorstatematcherexamplecss export class inputerrorstatematcherexample emailformcontrol new formcontrol validatorsrequired validatorsemail matcher new myerrorstatematcher provide custom matcher input component receives reference formcontrol question whole form formgroup well part logic offloaded template custom errorstatematcher think makes template easier read logic one place one define errorstatematchers cover behaviors ui designers read template code better one could take even one step instead something like would automatically inject closest control xmlhtml tree thiscontrol full code example errorstatematcher implemented motivation use case changing behavior think makes template easier read logic one place one define errorstatematchers cover behaviors ui designers read template code better environment", "num": "20477", "d": "11/2017"}, {"title": "angular universal aspnet mvc", "body": "anyone working angular aspnet mvc combination note aspnet core", "num": "20476", "d": "11/2017"}, {"title": "resolve wo nt executed redirectto route configuration", "body": "submitting current behavior resolver route configuration component children need redirectto property minimum redirect fits even use case resolver wo nt called expected behavior resolver gets called old route minimal reproduction problem instructions configure route like following motivation use case changing behavior old webapp path like oldpath id want switch angular use router module path represented another string let say newpath old path need resolver new one solved redirect oldpath newpath id relevant old one resolver wo nt called need id environment", "num": "20475", "d": "11/2017"}, {"title": "canactivatechild load child featured module waiting return true false", "body": "submitting angular current behavior according actually routes looks like difference loadchildren child path component wrappercomponent canactivatechild canactivatechildofwrapper children module des immeubles path immeuble loadchildren appimmeubleimmeublemodule immeublemodule enter url browser featured module downloaded network without waiting canactivatechild expected behavior expect wait canactivatechild return load featured module motivation use case changing behavior actually activate loadchildren module add canload loadchildren expect write wait canactivatechild return soemthing allow load children nt understand load child featured module since nopreloading default strategy", "num": "20474", "d": "11/2017"}, {"title": "clarify docs improvement avoid expressionchangedafterithasbeencheckederror", "body": "submitting current behavior evident numerous stack overflow threads blog articles issues people stumble upon time cases people make mistakes common behaviors include something like child later sibling gets first onchanges emits output parent changes state note case also fails cases expected behavior think everyone would benefit clear guidance recommended way treating needed documentation also updated btw right nt find much motivation use case changing behavior work suggestions use outputs could happen really needs made clear documentation bad thing approach nt work bindings case problem well potentially benefit using eg globally observable sure cases client could observable quickly becomes messy many cryptic solutions manually handle parent component calling imo cumbersome one use even enough always nt async pipe already run document whats whys improve angular automatically call eg via microtask pattern event handled template binding detect changes children phase nt already done btw via microtask key number seems easiest clients least error prone would choice cons could imagine detect circular changes hard one solving urging everyone looks like antipattern hide errors behind asynchronous bars suggestion would something similar angular keep flag essentially something like run flag say times yield error alternatively check bindings marked let change detector ref marked twice macro task environment", "num": "20473", "d": "11/2017"}, {"title": "proposal computed properties", "body": "submitting current behavior real computed properties getters bad performance example expected behavior able use computed properties vue mobx motivation use case changing behavior proposal make change detection smarter adding computed properties like mobx vue ts import computed reactive angularcore class mycmp age reactive firstname hello reactive lastname angular computed get fullname consolelog recomputed return allow computed get property able cache computed needed currently possible getter recomputed lot times especially using default change detection", "num": "20472", "d": "11/2017"}, {"title": "feature adding fastdom mechanism angular core applicable libraries", "body": "submitting current behavior problem escape hatch components allow raw dom stuff batchscheduling optimization dom access batching dom access avoid unnecessary document reflows speed layout performance dramatically using mechanism like fastdom libraries like directive would get significant perf boost batching measures mutations think goal feature request integrate batching dom access cdk animations etc libs angular require moreover update core fastdom like mechanic devs hook may implementations thinking expected behavior bit background first fastdommeasure gt consolelog measure fastdommutate gt consolelog mutate fastdommeasure gt consolelog measure fastdommutate gt consolelog mutate would output example imagine element page would animate based current scroll position could implement angular wcdkscrollableanimations something like pseudo code indexhtml somecomponentts component selector somecomponent export class somecomponent implement oninit afterviewinit viewchild cdkscrollable child cdkscrollable private el constructor private elementref elementref private renderer private makeanimation first build animation const myanimation thisbuilderbuild style top animate style top using fastdom angular could look something like note example also sure add component selector someothercomponent export class someothercomponent private el constructor private elementref elementref private renderer public ngoninit thisel thisrendererselectrootelement thiselementref thisrenderloop need run outside angular zone private renderloop thisrenderscrollbar need run outside angular zone fdmeasure gt thisrenderloop private renderscrollbar fdmeasure gt const scroll windowscrolly fdmutate gt thiseltop answer nt super straightforward however believe looking combine two examples angularesq api like first example scheduled dom access apis tie angular libraries developer libraries together fastdom like mechanism would sit topinside core angular libraries like system work developer would optin using code well update started taking notes gist could look example fastdom perf also brought angular also wrote stackoverflow question motivation use case changing behavior preventing possible layout thrashing environment", "num": "20471", "d": "11/2017"}, {"title": "aio auto code linking working", "body": "see look line ironically text linked", "num": "20466", "d": "11/2017"}, {"title": "angularinmemorywebapi use angularhttp package", "body": "submitting current behavior package uses module expected behavior package depends module minimal reproduction problem instructions add module angular project motivation use case changing behavior according version angular available need use module instead environment", "num": "20465", "d": "11/2017"}, {"title": "angular function", "body": "submitting current behavior angular using rxjs operator httpclient method like get following error thing used work angular maybe missing something super obvious expected behavior apply map observable return new observable minimal reproduction problem instructions basic example plunker shows error motivation use case changing behavior environment", "num": "20460", "d": "11/2017"}, {"title": "form issue frmvalid fails update controlvalueaccessor ngvalueaccessor ngvalidators ngasyncvalidators", "body": "submitting current behavior form validation state ex myformvalid update custom form input component state invalid expected behavior custom form input component validation state update form state fvalid implements ex fvalid must set false appzipinput invalid minimal reproduction problem instructions change zippostal code remove completely motivation use case changing behavior think problem controlvalueaccessor ngvalidators environment", "num": "20458", "d": "11/2017"}, {"title": "router link loads child view current child view", "body": "component left side navigation click new route loads child page current child page using angularcli typescript version example ng main module routing import ngmodule modulewithproviders angularcore global routing import routes routermodule canactivate router angularrouter import maincomponent dcomponent export const approutes routes path redirectto homeindex pathmatch full path homeindex component maincomponent path homeindexa loadchildren atableatablemodule atablemodule path homeindexb loadchildren btablebtablemodule btablemodule ngmodule imports routermoduleforroot approutes exports routermodule export const routing modulewithproviders routermoduleforroot approutes children b import ngmodule angularcore import routes routermodule angularrouter import columnbtablecomponent columnbtablecomponent const routes routes path component columnbtablecomponent children path homeindexb component columnbtablecomponent ngmodule imports routermoduleforchild routes exports routermodule export class btableroutingmodule import columnatablecomponent columnbtablecomponent const routes routes path component columnatablecomponent children path homeindexs component columnatablecomponent ngmodule imports routermoduleforchild routes exports routermodule export class atableroutingmodule example navigate b shows b shows bottom page started happen suggestions", "num": "20457", "d": "11/2017"}, {"title": "semicolon escaped matrix parameter", "body": "submitting current behavior using matrix parameter routernavigate escaped trying using link go back page browser chrome know part parameter parsed separate one expected behavior semicolon correctly escaped minimal reproduction problem instructions use link try go back page browser understand incorrectly thinks two matrix parameters result parsed become motivation use case changing behavior allow using matrix parameter without need manually encode value environment", "num": "20455", "d": "11/2017"}, {"title": "http interceptor class working", "body": "submitting current behavior interceptor class created working expected behavior authorization suppossed added header interceptor class minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20454", "d": "11/2017"}, {"title": "confused behavior async pipe", "body": "submitting current behavior try use async pipe showhide waiting message appcomponenthtml please wait start editing see magic happen toggle nt change value wait async appcomponent component selector myapp templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent name string angular wait observable constructor public waitservice waitservice thiswait thiswaitservicewait toggle thiswaitservicetoggle waitservicets export class waitservice wait observable private wait boolean false private onchange eventemitter new eventemitter constructor thiswait observablecreate obs gt obsnext thiswait thisonchangesubscribe w boolean gt thiswait w thiswait w obsnext thiswait toggle thisonchangeemit thiswait waitservice includes wait property observable method toggle switching wait try toggle wait works one case nt work others expected confused try figure example click toggle nothing happen wait message subscription emitted commented subscription show hide wait message work places wait still change expected behavior work cases environment", "num": "20453", "d": "11/2017"}, {"title": "aframe interop", "body": "submitting current behavior binding attribute angular automatically converts value string calling per mdn setattribute indeed expects value string nonstring value specified converted automatically string aframe components provide extended version also receive object values example given following aframe scene call setattribute update position sphere frame also possible achieve result passing string negatively affect performance well result less readable code need parseconstruct string manually created small plnkr example seen action expected behavior way tell angular pass objects directly without calling first possible solution would remove tostring call altogether setattribute convert given argument string anyway native elements send pr interested workaround currently use pipe workaround code pipe basically defeats tostring behavior angular overriding tostring method given object import pipe pipetransform angularcore use pipe whenever binding object aframe attribute eg minimal reproduction problem instructions minimal angular app aframe scene described note example working since added pipe workaround remove aframe pipe attribute binding see code stops working aframe gets object object instead actual object motivation use case changing behavior better interoperability aframe environment angular version", "num": "20452", "d": "11/2017"}, {"title": "lazy loading routing child view loads another child view", "body": "problem also routing using lazy load modules routeing current view left enter new view old view loads bottom starter happening sure hard debug start happening sure", "num": "20451", "d": "11/2017"}, {"title": "change detection error expressionchangedafterithasbeencheckederror infinite hided object value", "body": "submitting current behavior problem change detection set object input property directive identified angular warns value primitive type number string etc objects error reported cd became infinite applied jquery transformation element directive applied problem loop crashed browser possible put lock situation example ignore errors intentional report change detection error value object expected behavior expected behavior would like angular warn cd errors objects well well would like know architectural functional decision problem might types libraries would cause infinite error wish lock least cd x amount fired given time minimal reproduction problem instructions see following link reproduce error environment browser x chrome desktop version tooling issues node version platform windows", "num": "20450", "d": "11/2017"}, {"title": "viewencapsulationemulatedviewencapsulationnative behave differently child components", "body": "submitting current behavior mode parent applied parent child components mode parent applied parent component expected behavior emulated version expect modes behaviour expect modes applied parent child components minimal reproduction problem instructions example code self explaining environment", "num": "20449", "d": "11/2017"}, {"title": "angularngupgradetests provider injector", "body": "submitting current behavior terminal dropping error tnullinjectorerror provider injector expected behavior tests went without errors minimal reproduction problem instructions upgraded app angular angular injects angular services like documentation injector example providers provide name usefactory injector gt injectorget name deps injector inject class inject name name app works well tests dropping error motivation use case changing behavior use services within context gradually moving towards application tests environment", "num": "20448", "d": "11/2017"}, {"title": "typos documentation", "body": "submitting current behavior using prefix description code samples eg description using myunless directive consumer expects bind truefalse condition code sample using appunless expected behavior please go entire documentation search az replace app", "num": "20447", "d": "11/2017"}, {"title": "keyframes removed animation complete", "body": "componentts component selector appdashboard templateurl dashboardcomponenthtml styleurls dashboardcomponentcss animations componenthtml componentcss progress width height lineheight background none margin auto boxshadow none position relative progress content width height borderradius border solid ddd position absolute top left progress gt span width height overflow hidden position absolute top zindex progress progressleft left progress progressbar width height background none borderwidth borderstyle solid position absolute top progress progressleft progressbar left bordertoprightradius borderbottomrightradius borderleft webkittransformorigin center left transformorigin center left progress progressright right progress progressright progressbar left bordertopleftradius borderbottomleftradius borderright webkittransformorigin center right transformorigin center right animation linear forwards progress progressvalue width height borderradius fontsize color rgba lineheight textalign center position absolute top left progressblue progressbar bordercolor progressblue progressleft progressbar animation linear forwards currently able see animation animation time keyframes visible inspector", "num": "20445", "d": "11/2017"}, {"title": "nt call pipe twice", "body": "need folowing lines component angular optimised call pipe case handle make pipe executed", "num": "20444", "d": "11/2017"}, {"title": "datepipe parsing mysql datetime format safari", "body": "submitting current behavior safari browser transform mysql date datepipe create new project insert code fix nodemodules expected behavior need parse mysql date safari motivation use case changing behavior safari browser transform mysql datetime format environment", "num": "20443", "d": "11/2017"}, {"title": "memory leak attaching events via renderer observablefromevent", "body": "submitting current behavior angular zonejs seems reference element event attached retained even event handler removed element removed happens element present initial shown event handler attached older version zonejs behavior reproduced expected behavior element references released minimal reproduction problem instructions ngcli project demonstrate issue found also short screencast available basic setup steps reproduce click button show element attach instantly detach scroll event handler click button hide open chrome dev tools take memory snapshot switch containment inspect detached dom tree one entry div element export class appcomponent implements afterviewinit ondestroy private subscription subscription toggle false viewchildren container containers new querylist constructor private renderer ngafterviewinit thissubscription thiscontainerschangesfilter x gt xlength subscribe e gt observablefromevent efirstnativeelement scroll subscribe gt consolelog unsubscribe thisrendererlisten efirstnativeelement click gt consolelog ngondestroy void thissubscriptionunsubscribe environment angular version zonejs browser chrome desktop version xx tooling issues platform mac linux", "num": "20442", "d": "11/2017"}, {"title": "emitevent option setcontrol addcontrol method", "body": "submitting current behavior dynamic reactive form use methods like setcontrol addcontrol use methods everytime form valuechanges event triggered situation bad differentiate real form value change expected behavior need set option emitevent false method calls addcontrol setcontrol motivation use case changing behavior need differentiate value change form control change environment", "num": "20439", "d": "11/2017"}, {"title": "", "body": "submitting current behavior file aotsrcappappmodulengfactoryjs expected behavior valid modules minimal reproduction problem instructions motivation use case changing behavior valid modules environment", "num": "20438", "d": "11/2017"}, {"title": "bug serviceworker working correctly firefox", "body": "submitting current behavior run application uses works correctly chrome firefox assets cached data stored also first attempt looks like freezes starts behaves weird firefox expected behavior work browsers supported minimal reproduction problem instructions repository contains compiled application work firefox correctly compilation result run first running run url see open close server assets served cache call fails run since dependent packages available public npm motivation use case changing behavior environment", "num": "20437", "d": "11/2017"}, {"title": "bug serviceworker work aot enabled using ngtoolswebpack", "body": "submitting current behavior currently compile application without aot service worker works enable aot compilation open chrome crash debugging far looks like registered run application without aot see compile application using aot see last one missing called going try find disappears expected behavior service worker work without aot minimal reproduction problem instructions repository contains compiled application work compiled using compilation result run first running run url see registered run since dependent packages available public npm also see working version url contains compiled application without aot working motivation use case changing behavior environment", "num": "20436", "d": "11/2017"}, {"title": "", "body": "submitting current behavior opting flatmoduleoutfile write bundle instead passing actual compiler host writing see code expected behavior bundled passed writing original compiler host motivation use case changing behavior host might logic transformation done writing file path renaming etc write disk case identify write environment angular version", "num": "20434", "d": "11/2017"}, {"title": "host selector effect", "body": "submitting bug related host selector indeed css inside host selector affect custom element minimal reproduction problem instructions create component modify css file adding environment browser x chrome desktop version tooling issues node version platform mac", "num": "20432", "d": "11/2017"}, {"title": "httpparamstostring modifies immutable object", "body": "submitting current behavior really issues calling modifies httpparams object moves updates map nt clear updates list combination means params get duplicated ever use expected behavior nt cause modifications httpparams object documentation reads nt true method technical reason happens clear updates list generates map minimal reproduction problem instructions motivation use case changing behavior screen want update params url set search parameters share someone bookmark search results know parameters issue set params want save url nt include params used service create object set params url call send params service adds parameters fed call means request goes server duplicates parameters added start environment", "num": "20430", "d": "11/2017"}, {"title": "aio ux problem interaction site search field browser search field", "body": "current behavior chrome search width screen gt overlaps search expected behavior search visible searchbar right aligned browser x chrome desktop version xx", "num": "20428", "d": "11/2017"}, {"title": "aio title homepage set angular link instead angular", "body": "navigate angulario see brief analysis happens generate first page turn original code link gets picked docviewer finds link text node uses incorrectly set title", "num": "20427", "d": "11/2017"}, {"title": "forms sent object formcontrol value property instead value", "body": "hey say form group like expect nt modify value installmentcount anywhere code empty string would sent result shown bellow see object sent value property set empty instead empty", "num": "20426", "d": "11/2017"}, {"title": "javascript files importing angular", "body": "submitting current behavior try import external javascript files angular files loaded index loading route changes content nt get access javascript files anymore created small angular project importing two js files angularclijson file one jquery uses jquery ca nt make run maybe closest explanation problem best could create repo url expected behavior imported javascript files available routes since main purpose spa load resources one time use load every route change minimal reproduction problem instructions first tried import javascript files angularclijson file working tried put urls directly indexhtml working solution use afterviewinit load javascript files loading every component end get piled script tags indexhtml shown bad works somehow solution works good enough example presented jquery scripts happens jqueryui storejs wowminjs etc environment browser x chrome desktop version", "num": "20425", "d": "11/2017"}, {"title": "replacing form control async validator status statuschange stays pending", "body": "submitting current behavior replacing form control new one asynchronous validator status broadcasted observable ts const myform new formgroup mycontrol new formcontrol simple input myformstatuschanges subscribe status gt consolelog status myformsetcontrol mycontrol new formcontrol another input null asyncvalidator pending nothing expected behavior final status broadcasted async validator finishes job minimal reproduction problem instructions observable promise please tell us environment", "num": "20424", "d": "11/2017"}, {"title": "angular", "body": "", "num": "20423", "d": "11/2017"}, {"title": "make angularcompilercli main function part public api", "body": "submitting current behavior currently using version package build angular library compatible angular aot compilation bundlers webpack command line simply use command line tool run build however order use angular compiler programmatically meaning within custom nodejs script either run using make deep import get access function still optimized used via command line missing something documentation use detailed expected behavior love see function part public api exported file perhaps even better equivalent function optimized programmatic usage would heavily simplify development custom buid tools build chains could also reimplement stuff happening within function would nt benefit updates regarding environment", "num": "20422", "d": "11/2017"}, {"title": "documentation navigatebyurl misleading", "body": "submitting current behavior signature navigatebyurl misleading nt care properties subset expected behavior docs clearly state properties used instance completely ignored using used motivation use case changing behavior leads confusion development since following docs nt give desired result leading think something wrong code rather docs misleading causing spend time debugging code time could spent elsewhere", "num": "20421", "d": "11/2017"}, {"title": "issues angular", "body": "showing cant find sockjs safari seems like webpack issue also showing reference issue referenceerror ca nt find variable overlaydiv please help quite dissapointed see result safari seems like tested well", "num": "20420", "d": "11/2017"}, {"title": "feature introduce call pipe", "body": "submitting current behavior using function template like would cause function call every change detection even arguments nt change one could write pure pipe avoid tedious job lot relatively simple functions used one component pollutes module namespace expected behavior pipe introduced would call function arguments like pure would called argument changes motivation use case changing behavior less code without unnecessary pipes created used one component", "num": "20419", "d": "11/2017"}, {"title": "add support unary property bindings", "body": "submitting current behavior tried get feature back day got bitten today unary javascript used convert anything number addition right thing hand template parser ignores token nothing today wanted bind input element values component properties component template internally added two properties resulted string concatenation instead numeric addition workaround specific case replaced expected behavior unary meaning javascript either make template compiler honor behavior make error instead silently dropping minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20418", "d": "11/2017"}, {"title": "paths displayed extracted files osdependent", "body": "submitting x bug report current behavior extract paths extracted files dependent environment windows unix means extract different environment paths displayed differently ex windows linux sourcefile using windows linux expected behavior always display paths probably using posix method", "num": "20416", "d": "11/2017"}, {"title": "bug animations cause tests fail phantomjs upgrade", "body": "submitting current behavior upgrade angular tests keeps failing animations following error happens phantomjs means build server tests keep failing angular code without changes working also phantomjs chrome tests passing without problem expected behavior testing components contains animations work browsers minimal reproduction problem instructions animation looks like imported motivation use case changing behavior want working automated tests server gui browser allowed environment", "num": "20415", "d": "11/2017"}, {"title": "large bundle size use angular", "body": "submitting current behavior build project angular size bundle turns large expected behavior angular size bundle smaller minimal reproduction problem instructions reproduce problems using example use command ng build prod motivation use case changing behavior environment", "num": "20414", "d": "11/2017"}, {"title": "argument type type string payload iuistate assignable parameter type action", "body": "argument type type string payload iuistate assignable parameter type action object literal may specify known properties payload exist type action error c usersseefatstudiolitemastersrcapplocationlocationmapts argument type type string payload iuistate assignable parameter type action object literal may specify known properties payload exist type action", "num": "20413", "d": "11/2017"}, {"title": "compilercli enums missing transpiled code", "body": "submitting bug current behavior compiling project ensure branch selected angular compiler cli enums missing generated js code source enum source present confusing enums used throughout code result lib built undefined libs using expected behavior used generate following check master branch repo minimal reproduction problem instructions clone branch check contents look wo nt find enum declaration look enum declaration motivation use case changing behavior looks like regression environment", "num": "20412", "d": "11/2017"}, {"title": "static value symbol resolution error prevents use isdevmode ngmodule annotation compiled aot", "body": "submitting x bug report current behavior compiling angular project aot mode present annotation component angularcli refuse compile project emitting following error specific code snippet led error typescript import ngmodule isdevmode angularcore ngmodule imports routermoduleforroot enabletracing isdevmode exports routermodule export class routingmodule expected behavior angular project compiles aot successfully steps reproduce integrate snippet angularcli project run observe error motivation use case changing behavior increased aot compilation success rate amp maintaining functional similarities developers must write jit vs aot environment angular version angularcli version node version platform tested macos amp windows", "num": "20409", "d": "11/2017"}, {"title": "swpush breaks angular safari undefined object evaluating sourcelift", "body": "submitting current behavior injected servicecomponent safari complains expected behavior swpush break safari build ie code ignored service worker available minimal reproduction problem instructions inject servicecomponent online example github repo environment", "num": "20407", "d": "11/2017"}, {"title": "locationsubscribe wrong typedefinition documentation", "body": "submitting", "num": "20406", "d": "11/2017"}, {"title": "bug serviceworker config urls nt respect deployurl", "body": "submitting current behavior setting base href generates also urls expected behavior deployurl respected well mine gt config urls right service worker requests everything app requests cache responses minimal reproduction problem instructions reproduce create app static files deployed indexhtml try use service worker motivation use case changing behavior allow using basehref deploy url using service worker environment", "num": "20405", "d": "11/2017"}, {"title": "feature request ngsw navigation path exceptions", "body": "submitting current behavior service worker isnavigationrequest function assumes page navigation within scope handled service worker cases desired behavior expected behavior provide means configuring exception paths checked isnavigationrequest minimal reproduction problem instructions motivation use case changing behavior example need hosting server services authentication via feathersjs expects navigate path authgoogle initiate authentication via google completion authentication directing back authgooglecallback requests must go server currently ngswworkerjs intercepts requests return start page html environment", "num": "20404", "d": "11/2017"}, {"title": "feat serviceworker add stalewhilerevalidate strategy", "body": "submitting current behavior service worker supports networkfirst cachefirst caching datagroups expected behavior also support stalewhilerevalidate strategy shown motivation use case changing behavior would help slow data requests cached long time would way faster still al date workaround would limit cache time order catch repetitive requests stalewhilerevalidate preferable opinion", "num": "20402", "d": "11/2017"}, {"title": "update animate timings typings allow objects", "body": "given already apart animations work inside animationmetadatats apart typing info function", "num": "20401", "d": "11/2017"}, {"title": "ca nt resolve nodemoduels clijson angular", "body": "submitting current behavior keep getting error trying load script angularclijson trying load jquery bootstrap alpha js work angularclijson expected behavior compile resolve without error minimal reproduction problem instructions use angular packagejson name ngproject version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrap corejs fontawesome hammerjs jquery popperjs rxjs swiper zonejs devdependencies typesjquery angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript also tried switching whole nodemodules folders angular project nodemodules folder scripts angularclijson compile properly nodemodules motivation use case changing behavior get project running environment", "num": "20400", "d": "11/2017"}, {"title": "serve fails jit works aot", "body": "build fine fails browser ca nt resolve parameters component fails every time different class angular cli", "num": "20399", "d": "11/2017"}, {"title": "tour heroes tutorial chapter services inclusion heroesservice includes messageservice nt come", "body": "submitting added heroes service via cli copypaste code invites us add providers includes messageservice nt see later confuse learners probably error would probably also worth mentioning already empty providers overwritten simple error relatively easy fix would make life lot easier newbies trying follow", "num": "20398", "d": "11/2017"}, {"title": "tour heroes chapter services import observableof new rxjs style", "body": "submitting going tutorial learner noticed instructions including observableof nt correspond new way things tutorial says use getheroes observable whereas getheroes observable line rxjs way things nt monkeypatch", "num": "20397", "d": "11/2017"}, {"title": "component lifecycle hooks firing detectchanges called component", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior two components displayed time first existing second added page code run second component results first component calling second component receive expected behavior even first component calls second component continue receive lifecycle hooks minimal reproduction problem instructions please see repro steps probably minimal could boiled larger example working motivation use case changing behavior undesirable bug particular repro slightly convoluted though actively working larger version use configuring single application toolbar general believe sort issue could arise many instances environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "20394", "d": "11/2017"}, {"title": "importing external js files problem", "body": "importing js files eg jquery angular nt get loaded components route changes tried following put paths js files angularclijson scripts scripts put paths indexhtml page thing helps solution uses ngafterviewinit solution bad load components html source get replicated tags component also solution buggy issues loading js files view inits solution", "num": "20393", "d": "11/2017"}, {"title": "issue zonejs upgrading angular", "body": "submitting issue upgrading angular application angular webpack able build project npm start working fine browser chrome getting errors console application loading error details uncaught type error nativepromiseresolve function uncaught type error global symbolpromise resolve function application working fine using angularclarity", "num": "20391", "d": "11/2017"}, {"title": "get rid rxjs", "body": "submitting current behavior please take look expression try explain leads memory leak expression leads memory leaks unclosed subscribers filter returns false lot cases nt want double care memory javascript cares native angular ngrx extension believe implemented angular started using rx hood expected behavior angular get rid rxjs replace promises native api motivation use case changing behavior hope way control backpressure combine streams smallest simplest library rx", "num": "20390", "d": "11/2017"}, {"title": "unhandled promise rejection staticinjectorerror router updating angualr", "body": "submitting current behavior ca nt find cause error upgrading angular version maybe someone problem unhandled promise rejection staticinjectorerror router staticinjectorerror router nullinjectorerror provider router zone task promisethen value error staticinjectorerror router staticinjectorerror router nullinjectorerror provider router nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep createclass createproviderinstance error staticinjectorerror router staticinjectorerror router nullinjectorerror provider router nullinjectorget webpackinternal resolvetoken webpackinternal tryresolvetoken webpackinternal staticinjectorget webpackinternal resolvetoken webpackinternal tryresolvetoken webpackinternal staticinjectorget webpackinternal resolvengmoduledep webpackinternal createclass webpackinternal createproviderinstance webpackinternal apionunhandlederror environment dependencies angularanimations angularcdk angularcli angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter ngrxcore ngrxeffects ngrxrouterstore ngrxstore ngrxstoredevtools zonejs devdependencies angularcli angularcompilercli angularlanguageservice tslint typescript browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "20389", "d": "11/2017"}, {"title": "error installing tscwrapped", "body": "tried command install tscwrapped npm angulartscwrapped get error npm err read property undefined npm err complete log run found node npm versions node version npm version", "num": "20388", "d": "11/2017"}, {"title": "large bundle size use angular", "body": "submitting current behavior build project angular size bundle turns large expected behavior angular size bundle smaller minimal reproduction problem instructions reproduce problems using example use command ng build prod environment", "num": "20387", "d": "11/2017"}, {"title": "possible issue transfert state", "body": "submitting current behavior currently serializetransferstatefactory append script serialized content bottom body vendorbundle vendorbundle process inittransferstate function state script yet found document documentgetelementbyid someappkeystate return null expected behavior state script running scripts issue disappear transfer state work expected minimal reproduction problem instructions running repo ngdemotransferstate motivation use case changing behavior environment", "num": "20386", "d": "11/2017"}, {"title": "currency pipe changes us vs au vs nz dollars", "body": "submitting current behavior latest release changes using api internal stopped utilising locale displaying currency aud symbol enau display aud symbol enau display nz usd symbol enau display displayed default locale enau aud symbol display usd symbol display usd nzd symbol enau display nz expected behavior would expect consistent behaviour utilise locale display currency locale nt utilised would expect usd symbol enau display us otherwise would expect utilise current locale setting app working handles three currencies nzd aud amp usd utilised people travel us customers aud products vice versa common clarity currency important motivation use case changing behavior app working handles three currencies nzd aud amp usd utilised people travel us customers aud products vice versa common clarity currency important people book wine tour us visit australia people admin staff manage tours central app nz us amp au tours etc environment", "num": "20385", "d": "11/2017"}, {"title": "ngmodeloptions overriding preventing model updating", "body": "submitting current behavior setting ngmodeloptions updateon blur custom textbox component works expected however also setting ngmodeloptions updateon blur instance custom textbox component prevents changes expected behavior ngmodeloptions specified component instance outermost setting take precedence prevent model changing minimal reproduction problem instructions custom text boxes inputs point model second overriding ngmodeloptions specified changing first input behaves expected changing second nothing error reported motivation use case changing behavior developers use custom component already ngmodeloptions specified specify ngmodeloptions component longer works expected environment", "num": "20384", "d": "11/2017"}, {"title": "appinitializer block basepathhref provider", "body": "submitting current behavior usefactory basepathhref fired usefactory appinitializer expected behavior usefactory appinitializer fire basepathhref motivation use case changing behavior wa nt get set allowed basepath server app loads", "num": "20383", "d": "11/2017"}, {"title": "weird scroll behavior pointerevents none applied", "body": "submitting current behavior scroll cancels overlay dom expected behavior scroll cancel overlay dom minimal reproduction problem instructions motivation use case changing behavior performance matters lot web environment nb problem occurs chrome", "num": "20381", "d": "11/2017"}, {"title": "issue rollup ngprobetoken", "body": "submitting current behavior run rollup get following message expected behavior compile without error minimal reproduction problem instructions na motivation use case changing behavior upgrade angular environment", "num": "20378", "d": "11/2017"}, {"title": "passing special characters like plus angular backend", "body": "submitting current behavior web app angular front end running angular expressjs handling routing back end trying query angular using name variable contain something like string actually present server code actually sends backend express code set like outputs express converting space tried url encoding name parameter angular like causes angular convert code code expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20376", "d": "11/2017"}, {"title": "unexpected value z imported module please add ngmodule annotation", "body": "migrating angular got following error build run app env node npm angular cli seems problem googled way", "num": "20375", "d": "11/2017"}, {"title": "animation skips straight final state production build using booleans state", "body": "submitting current behavior works fine stackblitz well nt work built minimal reproduction problem instructions works dev nt prod motivation use case changing behavior environment cc matsko", "num": "20374", "d": "11/2017"}, {"title": "testing documentation tutorial enhancements", "body": "submitting current behavior tutorial application working tests live demo downloadable source written guide fundamentalstesting section starts new application built quickstart project instead using angular cli increases friction learning angular scratch testing mind appears contrary features page specifically calls testing expected behavior minimum downloadable versions tutorial include working tests completed tutorial easily see application wrote would tested preferable include testing tutorial redo fundamentalstesting use tutorial application jumping point backfill tests written tutorial minimal reproduction problem instructions codealong tutorial download source bundle run point making first edit generated project source motivation use case changing behavior testing important listed feature angular developers new angular hit tutorial starting point friction writing initial app switching testing angular high lack natural cutover either suggested expected behaviors reduce friction trying learn angular testing also provide cohesive documentation instead introducing new dummy app learn test fundamentalstesting section environment edit included links pages source download referenced", "num": "20373", "d": "11/2017"}, {"title": "angular request calling twice page loading time", "body": "using angular universal cli send request service requesting api twice serverts apits appcomponenthtml homecomponentts getinfoservicets console api calling twice api called get information please guide fix issue one time api request made page loading time", "num": "20372", "d": "11/2017"}, {"title": "possibility add multiple updateon events", "body": "x feature request would nice add support multiple updateon events eg updateon blur submit scenario single blur enough example simple form fields one submit button user enters value first field navigates second one user enters value second field submit form pressing enter key example form submitted empty value second filed", "num": "20371", "d": "11/2017"}, {"title": "double consecutive redirection working expected", "body": "submitting current behavior plunker link route config accessing emits long error logs starting expected behavior accessing redirects finally minimal reproduction problem instructions plunker link motivation use case changing behavior plunker example demo real application redirection lazyloads module redirection coded inside lazyloaded module expected redirect actually work lazymodule case error message redirection stopped redirection requiring manual navigation hitting enter address bar order kick redirection lazyload cases double redirection lazyload version single redirection inside lazyloaded module single redirection inside root module environment", "num": "20370", "d": "11/2017"}, {"title": "docs aio clearing array new array instead setting length", "body": "submitting current behavior following tutorial pages clearing arrays setting property inefficent per discussion benedikt meurer expected behavior minimal reproduction problem instructions hard visualise actual performance difference gc overhead anyhow minimum reproduction plunker motivation use case changing behavior lots developers learn code well seeing code websites likes angulario document code faster efficient may marginally well writing short plus efficient reference turned sequence around machine instructions bump pointer allocation succeeds whereas c runtime function call requires many instructions benedikt meurer environment", "num": "20369", "d": "11/2017"}, {"title": "formbuilder control change signature method", "body": "submitting current behavior currently signature formbuilder control following line thisformbuildercontrol angular option enabled nt compile see error error argument type assignable parameter type object fact nt see good reason use instead formcontrol constructor thinking seems like bug since acts like wrapper nt exact signature expected behavior expect app compile well option enabled environment angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router angularcdk angularcli angularmaterialmomentadapter angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "20368", "d": "11/2017"}, {"title": "feat docs replace old plnkr examples aio examples", "body": "old alpha examples api sitting around api docs api search shows would good see replaced aio example ones", "num": "20366", "d": "11/2017"}, {"title": "compiler allows import packages whose name contains dot eg angularcom", "body": "submitting current behavior compilerhostts const nodemodulespackagename regex validate package nodemodules regex invalid match packages whose name contains dot eg angularcom one library requires library name containing dot compiler throws error trying import source file nodemodules package link const expected behavior node package name may contain dots allowed import kind packages angular compiler make problems environment tooling issues node version platform mac", "num": "20363", "d": "11/2017"}, {"title": "custom validator error fromgroup", "body": "problem used custom validator second formgroup verified familiar formbuilder used custom validator verify confirm password would access password value problem formgroup code component code html code custom validator problem environment angular version angular cli browser x chrome desktop version tooling issues node version platform macos heigh sierra", "num": "20362", "d": "11/2017"}, {"title": "forroot aot nt invoke", "body": "submitting current behavior function called wrong injection expected behavior invoke minimal reproduction problem instructions exampleapp folder environment angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice typescript browser tooling issues others exampleapp folder", "num": "20361", "d": "11/2017"}, {"title": "serviceworkermoduleregister universal friendly", "body": "submitting current behavior setup serviceworkermodule appmodule crashes server trying render application object defined server expected behavior crash minimal reproduction problem instructions motivation use case changing behavior server crash undefined property environment", "num": "20360", "d": "11/2017"}, {"title": "application screen gets blank error", "body": "submitting current behavior error page gets destroyed upon navigation stops loading new page screen blank ts navigating profile pages screen blank const routes routes path pathmatch full component homecomponent path profile component profilecomponent path component notfoundcomponent export class profilecomponent implements ondestroy ngondestroy throw new error kill app expected behavior error stop angular loading new route minimal reproduction problem instructions motivation use case changing behavior using thirdparty library throws error clean screen blank ideally error ngondestroy stop router loading new page course add block specific call still quite fragile environment", "num": "20359", "d": "11/2017"}, {"title": "webpack warning nodemodules", "body": "regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see get warnings warning nodemodules critical dependency request dependency expression nodemodules dll vendor current behavior compiling using webpack angular core libraries couple warnings expected behavior work guess warnings reproduction problem install make call npmupgrade run webpack config webpackconfigvendorjs please tell us environment angularcore maybe knowledge regards ingo", "num": "20357", "d": "11/2017"}, {"title": "provider httpclient", "body": "upgrading angular updating httpmodule http httpclientmodule started get error also added httpmodule sure due dependency doesnt resolves issue appmodule correctly set dont know error coming clue get inner also warning put maybe related warning message current behavior staticinjectorerror httpclient staticinjectorerror httpclient nullinjectorerror provider httpclient environment", "num": "20355", "d": "11/2017"}, {"title": "problems vsc new autoimport feature", "body": "sure whether take repo think fault perhaps sides happens try writing say without imported previously vsc suggest possible imports nt really show unless click blue info icon click blue info icon kind see would import one none actually question could work along vscode team hide depracated exports b possibly completely disable least least prioritise suggestion imports places animationmetadata src etc note nt happen exclusive animations start writing first suggestion imports", "num": "20353", "d": "11/2017"}, {"title": "ngc throws could resolve type document strictmetadataemit true", "body": "submitting current behavior ran throws change tobe ok expected behavior succeed via minimal reproduction problem instructions seems ambient type would cause error upgraded angular create project use custom file run json compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom noimplicitany true suppressimplicitanyindexerrors true typeroots nodemodules types files srcappappmodulets srcmaints angularcompileroptions strictmetadataemit true js import component inject angularcore import document angularplatformbrowser component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app constructor inject document private doc document lt shell nodemodulesbinngc p tsconfigaotjson environment", "num": "20351", "d": "11/2017"}, {"title": "issue importing observable rxjsrx importblacklisted", "body": "submitting current behavior following part official guide please shed light issue environment info case interested generated related", "num": "20349", "d": "11/2017"}, {"title": "trouble hyperlink documentation", "body": "submitting current behavior subsection test shows markdown link markdown countdown timer tests link expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20348", "d": "11/2017"}, {"title": "duplicate lines ngonchanges test", "body": "submitting current behavior duplicate lines newminorbuttonclick function newminorbuttonclick function downloadable example componentinteractionzip expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20346", "d": "11/2017"}, {"title": "angular routing working correctly built", "body": "noticed strange behavior following router case case parameter string localhost run via correctly matches route environments built via angular appears decode route tries route matching nt work extra characters known issue get around issue custom parsing url option setting decode route", "num": "20345", "d": "11/2017"}, {"title": "httpclientget lt type gt return actual type", "body": "submitting current behavior http request like return type actual array intervention types array objects correct property names expected behavior array objects actual type specified thing need ddo get required behaviour minimal reproduction problem instructions motivation use case changing behavior tostring method types required typeahead instance environment", "num": "20344", "d": "11/2017"}, {"title": "minimist reference throwing error ngc build", "body": "submitting current behavior use ngc following error thrown expected behavior build error minimal reproduction problem instructions create lib project run ngc motivation use case changing behavior environment minimist code var notflags compilercli code opened issue angularcli repository directed one", "num": "20342", "d": "11/2017"}, {"title": "angular commonly used locales regions eg etc accepted switched language eg", "body": "submitting current behavior prior angular using correctly keeps works however longer case since lot locales eg missing code checks fullbacks using language eg etc note filling angular project angularcli change initiated angular project expected behavior might wrong ca nt fully grasp many others locales like valid values angular able work flawlessly minimal reproduction problem instructions angularcli gt created project angular gt component requires inject localeid build serve notice localeid set expected motivation use case changing behavior might wrong ca nt fully grasp many others locales like valid values angular able work flawlessly least case prior issue worth well discussed documented others possible good fix could symlinks angularcommonlocales well resolved utilized current tooling", "num": "20340", "d": "11/2017"}, {"title": "error error uncaught promise error staticinjectorerror e", "body": "", "num": "20339", "d": "11/2017"}, {"title": "docs error shown link documenetation", "body": "submitting current behavior error shown clicking file doc link schema link expected behavior schema file seen github motivation use case changing behavior perfect documentation reference environment", "num": "20338", "d": "11/2017"}, {"title": "svg component rendered componentfactoryresolver viewcontainerref nt show", "body": "submitting current behavior dynamically render svg component componentfactoryresolver viewcontainerref browser nt render anything expected behavior dynamically rendered svg components visible minimal reproduction problem instructions one red square svg component rendered component selector square svg component dynamically instantiated looking dom difference comment tag motivation use case changing behavior environment", "num": "20337", "d": "11/2017"}, {"title": "custom ngmodulefactoryloader receive null compiler", "body": "submitting current behavior expected behavior new instance ngmodulefactoryloader receive instance compiler ca nt register custom ngmodulefactoryloader platformbrowserdynamicbootstrapmodule minimal reproduction problem instructions motivation use case changing behavior run angular app requirejs environment", "num": "20336", "d": "11/2017"}, {"title": "add every function querylist nt qltoarray every", "body": "submitting current behavior currently process implementing wizardcomponent steps retreived via giving since every property like able check every step visited easily order using function array object currently call querylist prefered afaik expected behavior minimal reproduction problem instructions since requesting provide new api nt think need working example however actually ping provide one motivation use case changing behavior use case described imho would great querylists api closer one array environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx x chromium version offizieller build built ubuntu running ubuntu", "num": "20333", "d": "11/2017"}, {"title": "angular broken microsoft edge browser packed mode", "body": "submitting current behavior angular application nt work packaged mode dev aot microsoft edge browser whereas local server expected behavior angular application run properly edge browser minimal reproduction problem instructions clean browser cache load application packaged js file loaded partially maybe idea avoid packing able deploy sources motivation use case changing behavior client need use microsoft edge browser environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx x edge version tooling issues node version platform", "num": "20330", "d": "11/2017"}, {"title": "use angularserviceworker please update angularserviceworker wiki", "body": "duplicate", "num": "20328", "d": "11/2017"}, {"title": "error error error encountered resolving symbol values statically calling function testmodule function calls supported consider replacing function lambda reference exported function", "body": "testmodulets ts import ngmodule modulewithproviders angularcore import testservice testservice ngmodule imports declarations exports entrycomponents export class testmodule static forroot modulewithproviders return ngmodule testmodule providers testservice testservicets import injectable angularcore injectable export class testservice tsconfigjson usage import testmodule testfetest import appcomponent appcomponent import approutes approutes ngmodule declarations appcomponent imports browsermodulewithservertransition appid browseranimationsmodule formsmodule reactiveformsmodule routermoduleforroot approutes export class appmodule development run throws error", "num": "20324", "d": "11/2017"}, {"title": "fix typo angular tour heroes tutorial", "body": "submitting current behavior errortypo angular tour heroes tutorial specifically section paragraph first panel written open component template file appcomponentts delete default template generated angular cli replace following line html correct file expected behavior open component template file appcomponenthtml delete default template generated angular cli replace following line html correct file minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20322", "d": "11/2017"}, {"title": "allow string passed parameter headers httpclient methods", "body": "submitting current behavior basically currently impossible pass simple string httpclient get method example accepts ca nt pass simple string like instead also sure current signature specifically means want pass values must string following valid object example compile stringify values call method expected behavior expect flexibility passing parameters", "num": "20319", "d": "11/2017"}, {"title": "allow string passed parameter params httpclient methods", "body": "submitting current behavior currently impossible pass simple string httpclient get method example example accepts ca nt pass simple string like instead also sure current signature specifically means want pass values must string following valid object example compile stringify values call method expected behavior expect flexibility passing parameters", "num": "20316", "d": "11/2017"}, {"title": "provide something like abstractcontrolvaluechanges starts current value subscription", "body": "submitting current behavior subscribe abstractcontrolvaluechanges nothing happens value changes callback called expected behavior would love different observable works almost like valuechanges subscribe immediately emits current value enough solve emit value time value creation time subscription motivation use case changing behavior want able subscribe changes form later component lifecycle subscribe valuechanges early eg constructor ngoninit get desired behavior need subscribe later easy way create observable starts current value", "num": "20314", "d": "11/2017"}, {"title": "iterablediffer detecting changes within array", "body": "submitting current behavior iterabledifferdiff detecting change array item certain cases expected behavior iterabledifferdiff detect changes array minimal reproduction problem instructions go chrome open developers console console motivation use case changing behavior actual use case different plunk blocking using changedetectionstrategyonpush along iterablediffer detecting change hence view updated environment", "num": "20309", "d": "11/2017"}, {"title": "ca nt register material icons anymore version", "body": "submitting current behavior using angular project installed material angularcdk angularmaterial try register custom svg icons maticon get error expected behavior would like able register svg icons iconregistry material design without version error minimal reproduction problem instructions use angular try register icons eg appmoduleappshared npm start motivation use case changing behavior get project working environment", "num": "20308", "d": "11/2017"}, {"title": "angular support javascript dsl", "body": "get ngcorepipe class function upgrading miss something", "num": "20305", "d": "11/2017"}, {"title": "request routechange beforeroutechange event", "body": "submitting current behavior route change first event thisroutersubscription thisroutereventssubscribe event gt consolelog first event event navigationstart expected behavior routechangeevent beforeroutechange need know route actual change current route state various reasons breadcrumb navigator change also triggers components destroy etc sometimes need take action destroy routechangeevent occur navigation start create transition created transition start start transition started angular seems start need least", "num": "20304", "d": "11/2017"}, {"title": "errors upgrade version", "body": "uncaught error template parse errors property binding ngoutletcontext used directive embedded template make sure property name spelled correctly directives listed ngmoduledeclarations error parsetemplate webpackinternal jitcompilercompiletemplate webpackinternal eval webpackinternal setforeach native jitcompilercompilecomponents webpackinternal eval webpackinternal objectthen webpackinternal jitcompilercompilemoduleandcomponents webpackinternal", "num": "20300", "d": "11/2017"}, {"title": "router child routes handled component parent route", "body": "submitting current behavior child routes handled parent route component shown component visiting child routes url told activeroute always parent route eg sites case subscribed show urlpath even navigating amp subscription params amp url gets called every case url updated always updated correctly observe value point time eg always shows accordingly problem seems notice setup commented top level routes also handled component take child routes use top level activatedroute values seem update correctly expected behavior activatedroute reflects correct full current url points time matter component route hierarchy minimal reproduction problem instructions plunker issue reproduced motivation use case changing behavior reliability amp accuracy activatedroute environment angularcdk angularcli angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack browser chrome desktop mac os version official build nt test browsers tooling issues node version platform mac", "num": "20299", "d": "11/2017"}, {"title": "please let httpparamsset append accept one objectlike arg nested data", "body": "submitting x feature request current behavior set append httpparams one one expected behavior httpget post etc could pass object nested objectlike data optionsparams first level keys would mapped query params values json encoded objectlike like achieve without adding complexity something like new httpparamsset id motivation use case changing behavior migrating httpclient http add helper method private anytohttpparams obj requires lodash return objectentries obj reduce params key value gt paramsset key isobjectlike value jsonstringify value value new httpparams params thisanytohttpparams id sort breaking change well nt get compiler error replaced http httpclient passed objects nested data params like used http network console xhr urls changed something like environment angular version", "num": "20298", "d": "11/2017"}, {"title": "router redirectto query param ca nt pass route params id", "body": "submitting current behavior thanks possible pass queryparams redirectto however routes match redirect id redirecting route param id creates route paramundefined expected behavior route redirect id redirectto route param id properly fill id minimal reproduction problem instructions motivation use case changing behavior seems contradictory one approach would work whereas environment", "num": "20297", "d": "11/2017"}, {"title": "formcontrol setvalidators setasyncvalidators api inconsistency", "body": "due two methods setvalidators newvalidator validatorfnvalidatorfn null void setasyncvalidators newvalidator asyncvalidatorfnasyncvalidatorfn void first take null parameter second ca nt weird guess made consistent", "num": "20296", "d": "11/2017"}, {"title": "minor error tutorial", "body": "submitting current behavior page tutorial description bind heroescomponentselectedhero element hero property like header colored blue herodetailcomponenthtml herodetail binding think heroescomponenthtml expected behavior change minor error kind misleading minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20294", "d": "11/2017"}, {"title": "aot compile fails ca nt resolve compiledsrcappappmodulengfactory", "body": "submitting current behavior see compiled folder created try ts loader build main bundle minimal reproduction problem instructions minimal project removed custom components etc logic run aot build unable find problems setup missed configuration would break", "num": "20293", "d": "11/2017"}, {"title": "ca nt resolve appmodulengfactory", "body": "working fine updating angular giving issueif get back back working fine submitting current behavior error srcappmaints module found error ca nt resolve appmodulengfactory e working projecttestpiderwebsrcapp resolve appmodulengfactory e working projecttestpiderwebsrcapp using description file e working projecttestpiderwebpackagejson relative path srcapp field browser nt contain valid alias configuration using description file e working projecttestpiderwebpackagejson relative path srcapp using description file e working projecttestpiderwebpackagejson relative path srcappappmodulengfactory extension field browser nt contain valid alias configuration e working projecttestpiderwebsrcappappmodulengfactory nt exist ts field browser nt contain valid alias configuration e working projecttestpiderwebsrcappappmodulengfactoryts nt exist js field browser nt contain valid alias configuration e working projecttestpiderwebsrcappappmodulengfactoryjs nt exist json field browser nt contain valid alias configuration e working projecttestpiderwebsrcappappmodulengfactoryjson nt exist directory e working projecttestpiderwebsrcappappmodulengfactory nt exist e working projecttestpiderwebsrcappappmodulengfactory e working projecttestpiderwebsrcappappmodulengfactoryts e working projecttestpiderwebsrcappappmodulengfactoryjs e working projecttestpiderwebsrcappappmodulengfactoryjson e working projecttestpiderwebsrcappappmodulengfactory srcappmaints new builderror e working projecttestpiderwebnodemodules callback e working projecttestpiderwebnodemodules emitrecordserr e working compileremitrecords e working emitassetserr e working e working next e working compilercompilerplugin e working e working compilerafteremit e working expected behavior work smoothly angular working fine minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20292", "d": "11/2017"}, {"title": "typoerror tutorial page", "body": "submitting current behavior typo expected behavior replace html minimal reproduction problem instructions motivation use case changing behavior clearer instruction environment", "num": "20291", "d": "11/2017"}, {"title": "routeroutlet appending rather replacing using browseranimationsmodule", "body": "submitting current behavior nested routeroutlet children components appending components rather replacing behavior awkwardly appears using browseranimationsmodule imports appmodulets expected behavior nested routeroutlet children components replace components rather appending routing even though imported browseranimationsmodule appmodulets minimal reproduction problem instructions create three components means one parent two children components configuring routes parent component routeroutlet template two children use browseranimationsmodule imports property appmodulets finally trying route using parent routeroutlet append children rather replacing motivation use case changing behavior want use browseranimationsmodule environment", "num": "20290", "d": "11/2017"}, {"title": "aot compilation detecting template error", "body": "submitting current behavior component public properties template works expected error reported modify template like error reported aot compiler even kill watcher full rebuild furthermore one get compilation error aot full rebuild watcher pretty sure happening way sure seen parts application things like compiler wo nt catch typos etc expected behavior would expect case using aot compiler fails build minimal reproduction problem instructions motivation use case changing behavior like aot builds able detect errors nt typos issues templates checking testing environment windows", "num": "20287", "d": "11/2017"}, {"title": "datepipe missing locale data locale de", "body": "submitting current behavior use datepipe component throws error missing locale data locale de new datepipe de transform error new datepipe ende transform error code worked fine angular locale files available nodemodules angularcommonlocales environment", "num": "20286", "d": "11/2017"}, {"title": "unhandled exception ocurred iexplorerexe xxxxx", "body": "current behavior application runs perfectly google chrome reason crashes internet explorer opening console key opens console immediately opens window message internet explorer stopped working provides option close window debug click debug shows message unhandled exception ocurred iexplorerexe xxxxx also tried without ie add ons errors continues expected behavior expect able inspect application code internet explorer motivation use case changing behavior facilitate development application internet explorer eg change css look good ie browser internet explorer tooling issues node version npm", "num": "20284", "d": "11/2017"}, {"title": "feat request aio intergrate update guide aio", "body": "found tool helpful upgrading think deserves place aio", "num": "20283", "d": "11/2017"}, {"title": "custom validators example formvalidation docs working strictnullchecks enabled", "body": "submitting current behavior example custom validators working corectly strict null checks throws type forbiddenname value null assignable type key string type null assignable type key string expected behavior custom validation example work strict null checks", "num": "20282", "d": "11/2017"}, {"title": "ca nt resolve compiledsrcappappmodulengfactory aot", "body": "submitting current behavior upgraded last angular version test compatability webpackdevderver works jit works aot fails cli project webpack conf tsconfig compileroptions target module moduleresolution node emitdecoratormetadata true experimentaldecorators true allowsyntheticdefaultimports true sourcemap true noemit true noemithelpers true strictnullchecks false skiplibcheck true lib dom typeroots nodemodules types types hammerjs jasmine node sourcemap uglifyjs webpack jquery jasmineexpect outdir compiled exclude nodemodules build srcspects awesometypescriptloaderoptions forkchecker true usewebpacktext true angularcompileroptions gendir compiled skipmetadataemit true compileonsave true buildonsave false atom rewritetsconfig false compiled folder never created therefor find ngfactory file idea changed break aot", "num": "20281", "d": "11/2017"}, {"title": "documentation typo", "body": "submitting current behavior expected behavior date formatted mm motivation use case changing behavior error documentation", "num": "20280", "d": "11/2017"}, {"title": "angular animations speed playback rate", "body": "submitting current behavior right possible adjust overall speed angular animations eg debugging animations expected behavior would great able specify global slow motion factor adjust playback speed animations motivation use case changing behavior look animations slow motion helps debugging optimizing animations within design process angular version", "num": "20279", "d": "11/2017"}, {"title": "httpreponse json value false deserialized null", "body": "submitting current behavior current implementation coalesces body like means response body requested json resulting body instead expected behavior case response content minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20278", "d": "11/2017"}, {"title": "update urlmatcher docs null safe projects", "body": "submitting current behavior suggests returning match expected behavior suggest returning match", "num": "20277", "d": "11/2017"}, {"title": "api docs missing httpparamsoptions", "body": "submitting current behavior documented angulario however constructor takes nt link doc expected behavior could infer shape source code would nice describe link search api portal minimal reproduction problem instructions motivation use case changing behavior environment angular others", "num": "20276", "d": "11/2017"}, {"title": "dynamic component example chrome", "body": "submitting current behavior example live demo work dynamic component following page chrome expected behavior working demo plunkr example minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20275", "d": "11/2017"}, {"title": "events target detached one attached outside angular", "body": "submitting current behavior two dom event handlers attached element via renderer one attached outside angular inside angular later detached seems due fact decision event detached based expando attached targeted dom element maybe information passed directly via closure attached callback instead expected behavior would expect able detach events minimal reproduction problem instructions behavior easily reproducible following plunker click document noticed two alerts shown instead one one click handlers detached motivation use case changing behavior environment angular version", "num": "20274", "d": "11/2017"}, {"title": "ngc sourcemaps actual ts code rather transpiled js", "body": "submitting current behavior use compile ts set tsconfig seems transpiled js rather actual ts sourcecode expected behavior contain ts sourcecode minimal reproduction problem instructions typescript source code ts import component ngmodule angularcore component selector mycomponent template export class mycomponent ngmodule declarations mycomponent export class mycomponentmodule json sourcemap true inlinesources true js sourcescontent import component ngmodule angularcore nnnexport class mycomponent nnstatic decorators decoratorinvocation n type component args n selector mycomponent n template n n n nocollapse nstatic ctorparameters gt type decorators decoratorinvocation null gt n n nnnexport class mycomponentmodule nnstatic decorators decoratorinvocation n type ngmodule args n declarations n mycomponentn n n n nocollapse nstatic ctorparameters gt type decorators decoratorinvocation null gt n n ninterface decoratorinvocation n type function n args n n outputted jsmap nb remove parts sourcemaps files tsconfig show relevant issue angular version", "num": "20273", "d": "11/2017"}, {"title": "uncaught typeerror set property display undefined using html tag", "body": "submitting current behaviour getting error using html tag minimal reproduction problem instructions demo environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "20272", "d": "11/2017"}, {"title": "candeactivate change url returns false skiplocationchange set true", "body": "submitting current behaviorin candeactivate change url returns false skiplocationchange set true expected behavior candeactivate change url returns false environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx tooling issues node version platform windows", "num": "20271", "d": "11/2017"}, {"title": "angular router nt handle two outlet changes time", "body": "submitting issue related angular route current behavior created configuration routing const approutes routes path unassigned component caounassigned outlet path assigned component caounassigned outlet path mypackage component caopackage outlet path pending component caopending outlet trying route form component constructor public router router routernavigate outlets unassigned routernavigate outlets mypackage showing page expected behavior unassigned mypackage view rendered time minimal reproduction problem instructions motivation use case changing behavior", "num": "20270", "d": "11/2017"}, {"title": "router events locationback using routertestingmodule", "body": "submitting current behavior set router based testing using reference router via browser location via call test router state updated receive router events example test locationback fakeasync gt routernavigate tick expect routerrouterstatesnapshoturl tobe home last expectation fails expected behavior cause router events navigationstart etc fire last expectation succeed minimal reproduction problem instructions motivation use case changing behavior would like test forward backward navigation using router environment", "num": "20269", "d": "11/2017"}, {"title": "registeronvalidatorchange called ngmodelgroup", "body": "submitting current behavior method called form setup ngmodelgroup see setupcontrol forms expected behavior method called inform validator changes input properties minimal reproduction problem instructions log statement printed method never called motivation use case changing behavior group validators able get informed changes input properties trigger another validation cycle environment ajafff", "num": "20268", "d": "11/2017"}, {"title": "animations use state work disabled", "body": "animations disabled using triggers include definitions ignored disable status true values always applied matching state interpreted", "num": "20266", "d": "11/2017"}, {"title": "ng serve aot error", "body": "use ng serve aot ts webpack failed compile webpack compiling date hash time chunk inline inlinebundlejs inline kb entry chunk main mainbundlejs main kb initial chunk polyfills polyfillsbundlejs polyfills bytes initial chunk styles stylesbundlejs styles mb initial chunk vendor vendorbundlejs vendor kb initial error error error encountered resolving symbol values statically calling function notificationsmodule function calls supported consider replacing function lambda reference n exported function resolving symbol coremodule c usersyayunxionggitfissrcapppagescorecoremodulets resolving symbol coremodule c usersyayunxionggitfissrcapppagescorecoremodule ts coremodulets notificationsmodulets ts import ngmodule modulewithproviders angularcore import commonmodule angularcommon import simplenotificationsmodule notificationsservice import notificationsservice notificationsservice import notificationscomponent notificationscomponent ngmodule imports commonmodule simplenotificationsmodule declarations notificationscomponent exports notificationscomponent providers notificationsservice export class notificationsmodule public static forroot modulewithproviders return ngmodule notificationsmodule providers notificationsservice public static forchild modulewithproviders return ngmodule notificationsmodule providers notificationsservice notificationsmodulejs notificationsmoduledts use ok want results", "num": "20265", "d": "11/2017"}, {"title": "title meta services working correctly", "body": "submitting current behavior need service set title meta tags using title meta services working browser share facebook title meta tags appeard expected behavior find service solving issue instead using angular universal minimal reproduction problem instructions motivation use case changing behavior environment angular", "num": "20264", "d": "11/2017"}, {"title": "avoid creating component unicode naming instead throwing error finishing creation", "body": "submitting current behavior using unicode naming creating component succeeds results error expected behavior error creating component way similar creating project unicode naming minimal reproduction problem instructions described motivation use case changing behavior keep feedback consistent manner environment", "num": "20263", "d": "11/2017"}, {"title": "css files found", "body": "submitting current behavior massively long error thrown trying serve angular app upgraded quoting css files found  expected behavior ng serve build app minimal reproduction problem instructions environment", "num": "20262", "d": "11/2017"}, {"title": "svg rendering tag inkscape perspective", "body": "submitting current behavior trying render svg html component get following error inkscape perspective known element created stackblitz demonstrating behavior works plain html file also works angularjs application tho expected behavior expect svg rendered minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20261", "d": "11/2017"}, {"title": "missing metadata angularcommonlocales", "body": "submitting current behavior content every file seems break angular vscode language service probably intended expected behavior actual metadata perhaps sure contents files supposed seems like libraries objects toplevel metadata files minimal reproduction problem instructions environment browser na tooling issues na", "num": "20260", "d": "11/2017"}, {"title": "updateon blur firing ngmodelchange regardless ngmodel value changing", "body": "submitting current behavior using new ngmodeloptions updateon reduce ngmodelchange event firing every key press user blurs however ngmodelchange firing regardless whether ngmodel changed user tab input make changes tab ngmodelchange event fired expected behavior ngmodelchange fire ngmodel actually changes user tabsselects input makes one several change tabs outs result single ngmodelchange event minimal reproduction problem instructions motivation use case changing behavior firing ngmodelchange blur regardless whether model changed results false positives environment", "num": "20259", "d": "11/2017"}, {"title": "httpclienttestingcontroller ignores reportprogress true", "body": "submitting current behavior unit testing interceptor noticed following behaviour using httpclient httpclienttestingcontroller respectively declared http thereafter mocking http get request httpclient build mock expectation response subscribing request get emitted objects expected behavior testrequest flush follow standard behaviour reportprogress true subscribing request get events following order minimal reproduction problem instructions motivation use case changing behavior way unit testing interceptors progress event dependent feature would much easier mock testing tool would behave actual httpclient service currently case way little documentation whole progress event handling behaviours implemented angular environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "20257", "d": "11/2017"}, {"title": "exception using templatestrings decorator", "body": "submitting current behavior using templatestrings define templateurl styleurls valid example would variable contains value consumed part templateurl styleurls together running exception occure requested resources found exception also raw templatestrings found finally constructed expected behavior fine constructed stringvalues accepted resources found minimal reproduction problem instructions create blank new box angular project go create variable called value change styleurls name componentcss rerun app full example import component angularcore const name app component selector approot templateurl styleurls export class appcomponent title app motivation use case changing behavior see major blocker basic behaviour environment", "num": "20255", "d": "11/2017"}, {"title": "postinstall script causes error", "body": "submitting current behavior installing angular sources using repository url directly install fail script fail find running seems work expected behavior postinstall script execute nonproduction environments minimal reproduction problem instructions yarn add motivation use case changing behavior would like able use angular sources nodemodules package environment", "num": "20254", "d": "11/2017"}, {"title": "angular missing compilerproviders", "body": "submitting current behavior angular include compilerproviders angularcompiler expected behavior angular include compilerproviders angularcompiler minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20253", "d": "11/2017"}, {"title": "better staticinjector reflectiveinjector", "body": "angular angular appearance metadata separated classes need write code specify dependencies manually ensure type security classes arguments passed separately deps bootstrapcode compiler matter speed could simply abandon brake reflectdefinemetadata generate optimal metadata make dependencies explicit", "num": "20252", "d": "11/2017"}, {"title": "bad error message provider platform module import missed", "body": "module whose component used somewhere router component missed imported current module error message provider platform rather point component whose module missing", "num": "20251", "d": "11/2017"}, {"title": "error using command ng generate component", "body": "use command viewencapsulation component ts component file nt imported properly issue block angular cli build import classcomponent manually work well think necessary correct template generation putting class import declaration line top component ts file", "num": "20250", "d": "11/2017"}, {"title": "aot compiler strips children routes created dynamically", "body": "submitting current behavior problem aot duplicating call route configuration fails right searched token routes found one mainbundlejs expected behavior trim route neither call routes provider run works fine minimal reproduction problem instructions created github repo started cli added commit jsgoupilrouteraoterror environment follow", "num": "20249", "d": "11/2017"}, {"title": "safari results referenceerror ca nt find variable sockjs", "body": "submitting current behavior ng serve visit safari mac blank page console error referenceerror ca nt find variable sockjs expected behavior page loads successfully without error minimal reproduction problem instructions ng new safari cd safari ng serve motivation use case changing behavior bug needs fixed environment", "num": "20247", "d": "11/2017"}, {"title": "validatorpattern adds strings patterns", "body": "see really intuitive add pattern string regex expression doubt behavior way wanted see", "num": "20241", "d": "11/2017"}, {"title": "angular cli aot build issue", "body": "submitting current behavior aot build getting following runtime issue error error uncaught promise typeerror read property subscribe undefined typeerror read property subscribe undefined non aot build works fine expected behavior minimal reproduction problem instructions motivation use case changing behavior environment using http httpmodule httpclient httpclientmodule", "num": "20240", "d": "11/2017"}, {"title": "aot build silently ignores dynamic route configuration", "body": "submitting current behavior route configuration contains shared static data data ignored aot compilation however works expected jit compiler ts const sharedconfig data trackingarea somefeature product somefeature property present aot const routes routes path pathmatch full component homecomponent sharedconfig path component notfoundcomponent sharedconfig ngmodule imports routermoduleforroot routes exports routermodule export class approutingmodule expected behavior aot build appends route config least fails meaningful error message minimal reproduction problem instructions start attached angular cli application aot jit build compare route config console check readme repo see start app jit aot motivation use case changing behavior routes needs static configuration property without sharing config route configuration quite verbose dry config lot duplication environment", "num": "20239", "d": "11/2017"}, {"title": "bootstrapped component accessed applicationref components collection second tick", "body": "submitting current behavior bootstrapped component added applicationref components collection change detection mechanism triggered components collection empty applicationref second tick expected behavior applicationref components collection contain bootstrapped component change detection mechanism triggered minimal reproduction problem instructions try access applicationref components collection component ngoninit method trigger angular change detection mechanism eg button click component check components collection root component see motivation use case changing behavior trying create component dynamically service need reference root component hostview property however injected applicationref components collection empty something triggers change detection mechanism angular behavior causing error thrown service initialization logic trying read injected environment", "num": "20238", "d": "11/2017"}, {"title": "automatic update added angular cli", "body": "much would desirable easily updated use cli event versions angular leave every months convenient independently updated angular cli analyze code application project created help angular cli critical changes independently update application give warnings reasons need manually update", "num": "20237", "d": "11/2017"}, {"title": "read property filter undefined", "body": "submitting current behavior im using filtering array update working well im update show error like expected behavior give solution remove error already add still working environment", "num": "20236", "d": "11/2017"}, {"title": "angular documentation", "body": "submitting current behavior places write myapp root selector others use approot even happens page particular clearly copying error suggest search examples particular tour heroes expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20235", "d": "11/2017"}, {"title": "angular example templatedriven form validator namebob working", "body": "submitting current behavior angulario example form validations validator template driven form work name bob error show work reactive form fix change line heroformtemplatecomponenthtml expected behavior validator display name bob minimal reproduction problem instructions go type name bob notice red error message say name bob motivation use case changing behavior angulario docs say work bug environment", "num": "20234", "d": "11/2017"}, {"title": "ngclass support mixed type array", "body": "submitting current behavior html expected behavior html rendered minimal reproduction problem instructions motivation use case changing behavior know separating put strings array class template interpolation want simple way environment", "num": "20232", "d": "11/2017"}, {"title": "dialog html template wait init complete", "body": "submitting current behavior load dialog component make http request grab data server using promise promise completes html template loads get js errors template vars defined promise completes data successfully loaded template due js errors though dialog functionality ceases work close use mat buttons defined expected behavior template wait init method complete evaluating template throw js errors preventing closing dialog minimal reproduction problem instructions export class eventinfocomponent implements oninit event event constructor inject matdialogdata public data public dialogref matdialogref private http ngoninit topromise response gt thisevent responsejson event event error typeerror read property name undefined objecteval updaterenderer objectdebugupdaterenderer updaterenderer checkandupdateview callviewaction execcomponentviewsaction checkandupdateview callviewaction execembeddedviewsaction checkandupdateview callviewaction environment", "num": "20231", "d": "11/2017"}, {"title": "add value change options controlvalueaccessor writevalue onchange", "body": "submitting current behavior component implements transforms values stay bounds respect option value patched always emit event function called expected behavior value patched component outofbounds displayed component able transform incoming value also respect option updatecontrol use options object like patchvaluesetvalue minimal reproduction problem instructions reproduction notice value outside bounds passed update model emit change event console even new value patched using motivation use case changing behavior default slider set value slider max value value higher max set wanted create custom slider followed behavior could nt without emitting event even used environment others sure type writevalue functionality antipattern custom validator used instead input fields update passed value stay bounds assuming angular form components option also sure bug intentional labeled feature request", "num": "20230", "d": "11/2017"}, {"title": "feature request support document provider default browser rendering", "body": "submitting current behavior default browser platform rendering logic currently operates hardcoded document object prevents developers changing root document render operate expected behavior depend provider operate etc provided document node developers replace default document document fragment needed motivation use case changing behavior particular case would like see ability bootstrap angular application within shadow dom custom html element bootstrapping application process able query dom bootstrap component element within provided shadow dom element reference rather assuming parent document contains component element bootstrap sure simply depending document provider help perhaps better solution current workaround", "num": "20229", "d": "11/2017"}, {"title": "memory leak mouseevent triggered", "body": "submitting current behavior performing mouse event component even without event bindings leaks nodes expected behavior node count allocation garbage collection look like image reproduced switching views never clicking test button instead actual memory graph looks like minimal reproduction problem instructions pull cli repo open app chrome dev tools performance tab click collect garbage click record app navigate via hyperlink click button test view navigate via hyperlink click collect garbage stop test nodes count start test tried disabling zonejs problem still occurs button clicked programmatically using leak occur first try sometimes produces correct behavior performing stepstorecreate row consistent may using perf tools incorrectly motivation use case changing behavior possible memory leak environment", "num": "20228", "d": "11/2017"}, {"title": "angular onsameurlnavigation", "body": "trying use new onsameurlnavigation added angular however compiler throwing error code import ngmodule angularcore import routermodule routes angularrouter import properties sharedproperties const routes routes path redirectto propertiesroutescataloghomeroute pathmatch prefix ngmodule imports routermoduleforroot routes onsameurlnavigation reload exports routermodule export class coreroutingmodule error", "num": "20227", "d": "11/2017"}, {"title": "new updateon behaviour", "body": "submitting current behavior according documentation updateon returns update strategy abstractcontrol ie event control update possible values change default blur submit suggest suggest implement new update behavior update delay change existing change value change xxxx new changetimeout xxxx value may used xxxx timeout milliseconds either implement new model option timeout may used updateon values either allow combine update strategies whatever happens first like update timeout must cancelled change event happens timeout fires motivation use case changing behavior cases developer implement complicated component lot inputs ca nt splitted many components onpush change detection strategy user typing something input typetext change detection firing every change event makes input either slow input even hungs several seconds case implementing feature issue gone also makes implementing search pause functionality easy", "num": "20226", "d": "11/2017"}, {"title": "datepipe support timezone abbreviations angular", "body": "submitting current behavior using timezone abbreviation results using local timezone instead expected behavior expect datepipe accept timezone abbreviation referenced documentation minimal reproduction problem instructions see code traced code appears logic handle timezone abbreviations offsets motivation use case changing behavior able use pipe described documentation used formatting understands utcgmt continental us time zone abbreviations general use use time zone offset example hours minutes east greenwich meridian specified local system timezone enduser browser used environment", "num": "20225", "d": "11/2017"}, {"title": "provide better documentation test aoted components", "body": "submitting current behavior current method testing aoted components fully documented expected behavior method testing aoted components guide accomplish", "num": "20223", "d": "11/2017"}, {"title": "angular ngc stopped creating ngfactoryts files aot", "body": "submitting x regression behavior used work stopped working new release current behavior running ngc p tsconfigaotjson longer creates ngfactoryts files works fine reverting create ngfactoryts files aot directory previously working oddly produce ngfactoryjs files directory main component ts expected behavior work like provide instructions make work minimal reproduction problem instructions ngc p tsconfigaotjson using project upgraded angullar project work reverting works fine environment angular version browser x chrome desktop version xx tooling issues node version platform windows", "num": "20219", "d": "11/2017"}, {"title": "ngif closes surrounding", "body": "submitting current behavior placing inside element html throws error expected behavior expect close minimal reproduction problem instructions motivation use case changing behavior like use inside environment", "num": "20218", "d": "11/2017"}, {"title": "angular ngc produce metadata js files", "body": "submitting current behavior angular components modules separate library library compiled using output used aot production jit development compilation angular worked decorators transformed metadata present output files angular metadata missing available metadatajson ngsummaryjson documented breaking change optional configurable expected behavior compilation also usable jit minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20217", "d": "11/2017"}, {"title": "compilercli loweringexpression transformer handle forwardref like function", "body": "ts component selector apptestcomponent templateurl testcomponentcomponenthtml styleurls testcomponentcomponentcss export class testcomponentcomponent prop string export function mypropdecorator value return target object key string gt export class myclass mypropdecorator gt testcomponentcomponent prop string bash testproj shlomiassaf ng build aot buildoptimizer date hash time chunk inline inlinebundlejs inlinebundlejsmap inline kb entry rendered chunk main mainbundlejs mainbundlejsmap main bytes initial rendered chunk polyfills polyfillsbundlejs polyfillsbundlejsmap polyfills bytes initial rendered chunk styles stylesbundlejs stylesbundlejsmap styles kb initial rendered error error typeerror read property kind undefined nodecanbedecorated removed command line still errors work export function mypropdecorator value return target object key string gt export class myclass mypropdecorator testcomponentcomponent prop string explicit wo nt help ts export function mypropdecorator value gt typeof testcomponentcomponent return target object key string gt export class myclass mypropdecorator gt testcomponentcomponent prop string static help ts export function mypropdecorator value gt typeof testcomponentcomponent return target object key string gt export function mygetter return testcomponentcomponent export class myclass mypropdecorator mygetter prop string thanks angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "20216", "d": "11/2017"}, {"title": "subject invoked without new testing", "body": "submitting current behavior updating angular tests fails error expected behavior tests continue work minimal reproduction problem instructions ng g component test flat true yarn test ng test sourcemapsfalse building modules modules warn karma captured browser open info karma karma server started info launcher launching browser chromeincognito unlimited concurrency info launcher starting browser chrome warn karma captured browser open info chrome linux connected socket id chrome linux testcomponent create failed typeerror class constructor subject invoked without new new eventemitter webpack new ngzone webpack testbedinitifneeded webpack testbedcreatecomponent webpack functiontestbedcreatecomponent webpack usercontextbeforeeach webpack zonedelegateinvoke webpack proxyzonespeconinvoke webpack zonedelegateinvoke webpack zonerun webpack expected undefined truthy usercontextfit webpack zonedelegateinvoke webpack proxyzonespeconinvoke webpack zonedelegateinvoke webpack chrome linux executed failed secs secs environment", "num": "20215", "d": "11/2017"}, {"title": "provide way identify item formarray index", "body": "submitting current behavior index array seems way identify item form sort functionality way identify sorted items js ngoninit thisservicefetchtodossubscribe todos gt todos id content foo sortno id content bar sortno thisform thisfbgroup user edit content sortno drag amp drop todos thisfbarray todosmap gt tcontent onsubmit const value thisformvalue todos foo yay barrr todos sortable id content foo yay sortno id content foo yay sortno indeterminable expected behavior way identify ex like js ngoninit thisservicefetchtodossubscribe todos gt todos id content foo sortno id content bar sortno thisform thisfbgroup todos thisfbarray todosmap gt value tcontent id tid onsubmit const value thisformvalue todos foo yay barrr const controls thisformget todos controlsmap c gt id cid value cvalue sortno id value foo yay sortno id value barrr sortno minimal reproduction problem instructions motivation use case changing behavior want sort items formarray environment", "num": "20210", "d": "11/2017"}, {"title": "live examples plunker failing chrome", "body": "submitting current behavior live examples work mozilla firexox microsoft edge nt currently work chrome official build expected behavior work minimal reproduction problem instructions load wo nt work motivation use case changing behavior get working environment", "num": "20209", "d": "11/2017"}, {"title": "changes detected unless imported", "body": "submitting current behavior changes detected unless imported expected behavior changes require importing browsers existing support minimal reproduction problem instructions click click button nothing happens add head indexhtml work motivation use case changing behavior maps weakmaps useful changes may easy detect call environment", "num": "20208", "d": "11/2017"}, {"title": "failed read json file angualrcommonlocaleszhmetadatajson angular language service", "body": "hello use use vscode angular language service extension error output failed read json file angualrcommonlocaleszhmetadatajson extension work find file value null alter value null error disappear extension work well", "num": "20207", "d": "11/2017"}, {"title": "custom validator example angulario directive selector issue", "body": "submitting current behavior custom validator templatedriven form example nt work amp directive selector needs updated forbiddenname rest example needs updating reflect use appforbiddenname selector expected behavior name bob error shown plunker templatedriven form filled minimal reproduction problem instructions reproduce go type bob template driven form name example motivation use case changing behavior less confusion beginner coders environment", "num": "20206", "d": "11/2017"}, {"title": "feature request accept object parameter pipes", "body": "submitting current behavior pipes angular supporting locale great however always latest parameter even others arguments params optional let take datepipe example pass specific locale pass arguments pass locale instead want since arguments optional could pass want solution think others pipes course could accept like expected behavior expect flexibility passing arguments builtin pipes", "num": "20205", "d": "11/2017"}, {"title": "interpolation stop working use ngzone noop", "body": "submitting current behavior change ngzone noop bootstrap new zone speed improvement interpolation syntax innerhtml stop working expected behavior bypass zones entirely affect interpolation minimal reproduction problem instructions interesting thing interpolation appcomponent nt affected module component ca nt use even directly use test motivation use case changing behavior bypass ngzones improving performance environment dev", "num": "20204", "d": "11/2017"}, {"title": "ignorable httpclient interceptors", "body": "submitting current behavior current angular implementation elegant way ignore particular http interceptor expected behavior would nice able pass additional option array interceptors whish ignore particual request could done like motivation use case changing behavior may ask want ignore first place well multiple usecases example application may composed different feature modules act like standalone applications modules submodules may want use authentication interceptor submodules one http call may need different authorization header others solve create another submodule wo nt interceptors included end many unnecessary submodules another approach using write interceptor special fashion applying transformation http call look unique header id values id represent interceptor id match simply return function perform transformations solution works requires additional overhead implementing interceptor setting special header want ignore willing help contribute functionality need sure team community blessing start work", "num": "20203", "d": "11/2017"}, {"title": "unit test service doesnot return results", "body": "submitting current behavior creating test expecting results autosuggestservicesearch match always get undefined expected behavior expected results returned flush returned service minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20202", "d": "11/2017"}, {"title": "", "body": "", "num": "20200", "d": "11/2017"}, {"title": "docs aio configuring webpack section older angular version packagejson", "body": "submitting current behavior navigate webpack configuration section expected behavior packagejson updated versions dependencies minimal reproduction problem instructions motivation use case changing behavior doc support environment", "num": "20198", "d": "11/2017"}, {"title": "hi find locale ptbr angular", "body": "submitting current behavior hi find locale ptbr angular minimal reproduction problem instructions providers provide localeid usevalue ptpt error missing locale data locale ptbr motivation use case changing behavior environment angular version", "num": "20197", "d": "11/2017"}, {"title": "angular serving universal", "body": "following documentation angulario building projects seems okay serving im getting following error image angular documentation fix thanks lot", "num": "20195", "d": "11/2017"}, {"title": "tutorials obsolete", "body": "angularjs good documentation tutorial amazing phonecat app tutorial perfectly understood exactly angularjs use clearer tour heroes examples refer second version morally obsolete confusing use angularcli directories correspond current realities tutorial needs rewritten examples use angular cli", "num": "20194", "d": "11/2017"}, {"title": "current state amp pain points", "body": "hello everyone like start discussion current state angular goal make easy use possible aware still work think main two issues right one bundle locales instead one bundlelocale able use translations code templates first point addressed right call runtime translations actually first step second point main focus runtime translations done like know else make easier use feedback appreciated find list things working planed", "num": "20193", "d": "11/2017"}, {"title": "docs aio tour heros links wrong setup", "body": "submitting current behavior tour hero tutorial links old quickstart guide present angular cli one setup link first heading goes expected behavior link go minimal reproduction problem instructions go motivation use case changing behavior pointing new users deprecated repository official tutorial embarassing project best confusing users environment", "num": "20192", "d": "11/2017"}, {"title": "", "body": "", "num": "20191", "d": "11/2017"}, {"title": "version documentation dropdown available nextangulario", "body": "submitting current behavior option seen nextangulariodocs expected behavior seen urls present angulariodocs minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20190", "d": "11/2017"}, {"title": "two set docs angular", "body": "submitting current behavior angular documentation seen two url viz expected behavior one removed minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20189", "d": "11/2017"}, {"title": "always routing docs", "body": "submitting current behavior page allowing navigate menu always get routed expected behavior routed correct navigation clickedrequested minimal reproduction problem instructions go try navigate using menus even default landing page docs motivation use case changing behavior able navigate site browser x chrome desktop version", "num": "20188", "d": "11/2017"}, {"title": "bug aio incorrect recognization normal words inside code block", "body": "submitting current behavior would recognized also apianimationsbrowser expected behavior leave intact minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20187", "d": "11/2017"}, {"title": "ngc fails using ts type alias", "body": "submitting current behavior running code uses ts type alias generates js files export type well expected behavior generate code exports types interfaces minimal reproduction problem instructions clone potionnode run generate folder results build motivation use case changing behavior environment", "num": "20185", "d": "11/2017"}, {"title": "asset written location outside output path error upgrading", "body": "perfectly working angular app based doc updated app unable start app get mentioned error serving app asset written location outside output path npm err code elifecycle npm err errno npm err ccwclientapp start npm err exit status npm err npm err failed ccwclientapp start script packagejson reference scripts ng ng startng ng serve start node srcserverindexjs build ng build builddev ng build dev buildlocal ng build dev e local buildtest ng build prod e test buildprod ng build prod e prod serve ng serve dev e local test ng test lint ng lint ng sme nodemodulesbinsourcemapexplorer private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter ngrxstore ngrxstoredevtools corejs devextreme devextremeangular hammerjs jwtdecode msalx rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor sourcemapexplorer tsnode tslint typescript", "num": "20183", "d": "11/2017"}, {"title": "project angular cli built jenkins earlier fails code unchanged", "body": "submitting current behavior code changed accepted hours ago jenkins nightly build failed twice see error log expected behavior build must successful minimal reproduction problem instructions disclose source code try produce minimal repo motivation use case changing behavior environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version lts platform macos linux angular project built mvn successfully built since inception almost months others ng git cddev npm install fsevents install users workspace srcmainngnodemodulesfsevents node install fsevents success users workspace already installed pass updatebinary reinstall buildfromsource recompile nodesass install users workspace srcmainngnodemodulesnodesass node scriptsinstalljs cached binary found users uglifyjswebpackplugin postinstall users workspace srcmainngnodemoduleswebpacknodemodulesuglifyjswebpackplugin node libpostinstalljs nodesass postinstall users workspace srcmainngnodemodulesnodesass node scriptsbuildjs binary found users workspace testing binary binary fine angularide postinstall users workspace srcmainngnodemodulesangularide node scriptspostjs npm notice created lockfile packagelockjson commit file npm warn ngxmodal requires peer angularcore none installed must install peer dependencies npm warn ngxmodal requires peer angularrouter none installed must install peer dependencies added packages flags attempt assign array value nonarray ng git cddev npm run build prod integratorui build prod users workspace srcmainng npm run lint amp amp ng build environment prod integratorui lint users workspace srcmainng tslint p e nodemodules date hash time chunk inline inlinebundlejs inlinebundlejsmap inline kb entry rendered chunk main mainbundlejs mainbundlejsmap main kb initial rendered chunk polyfills polyfillsbundlejs polyfillsbundlejsmap polyfills kb initial rendered chunk styles stylesbundlejs stylesbundlejsmap styles kb initial rendered chunk vendor vendorbundlejs vendorbundlejsmap vendor mb initial rendered error error metadata version mismatch module users workspace srcmainngnodemodules swimlanengxdatatablereleaseindexdts found version expected resolving symbol appmodule users workspace srcmainngsrcappappmodulets resolving symbol appmodule users workspace srcmainngsrcappappmodulets syntaxerror users workspace srcmainngnodemodules simplifyincontext users workspace srcmainngnodemodules staticreflectorsimplify users workspace srcmainngnodemodules staticreflectorannotations users workspace srcmainngnodemodules getngmodulemetadata users workspace srcmainngnodemodules extractlazyroutesfromstaticmodule users workspace srcmainngnodemodules objectlistlazyroutesofmodule users workspace srcmainngnodemodules users workspace srcmainngnodemodules aotplugingetlazyroutesfromngtools users workspace srcmainngnodemodules donepromisepromiseresolvethenthenthenthenthen users workspace srcmainngnodemodules npm err code elifecycle npm err errno npm err integratorui build prod npm err exit status npm err npm err failed integratorui build prod script npm err probably problem npm likely additional logging output npm err complete log run found npm err users flags attempt assign array value nonarray", "num": "20180", "d": "11/2017"}, {"title": "update tsickle support versions typescript", "body": "submitting current behavior tsickle works typescript expected behavior tsickle work typescript", "num": "20179", "d": "11/2017"}, {"title": "add heroes functionality wo nt compile tour heroes tutorial part http", "body": "submitting current behavior following tutorial instructions add create method heroservice see failed compile among errors heroservicets type promise assignable type promise type response assignable type hero property id missing type response expected behavior expected tutorial would complete allow says refresh browser create heroes minimal reproduction problem instructions followed tutorial http motivation use case changing behavior currently sure supposed live example seems run fine code nt look much different although note json data line still exists found needed remove data part code new angular sure issue due environment omission tutorial environment", "num": "20177", "d": "11/2017"}, {"title": "updateon submit nt work using formbuilder group method", "body": "submitting current behavior documentation states using values update submit event parent fired works well use new instance example example nt work using group method like following expected behavior since method syntactic sugar shortens cases give exact behavior minimal reproduction problem instructions check bug reproduction plunker motivation use case changing behavior developers use instead newing would nice give exact behavior want cases environment browser x chrome desktop version x firefox version x edge version tooling issues node version platform windows", "num": "20176", "d": "11/2017"}, {"title": "aot compilation angular", "body": "hello firstly thanks project problem building project transfer angular angular time building becomes long sec sec disable aot compilation", "num": "20174", "d": "11/2017"}, {"title": "feat core add source message", "body": "reverted breaks internal test stack traces typeerror read property name undefined typeerror read property componentinstance undefined", "num": "20172", "d": "11/2017"}, {"title": "hm", "body": "", "num": "20169", "d": "11/2017"}, {"title": "hm", "body": "", "num": "20168", "d": "11/2017"}, {"title": "locationgo nt work external urls", "body": "submitting current behavior calling example fails silently expected behavior navigate google intended ever work documentation say throw error right implies work minimal reproduction problem instructions click go notice nothing happens motivation use case changing behavior want able navigate external urls testable way without provide injectable wrapper around windowlocation environment", "num": "20167", "d": "11/2017"}, {"title": "option see documentation version", "body": "submitting current behavior option selecting version documentation expected behavior dropdown version option minimal reproduction problem instructions navigating angulario site motivation use case changing behavior documentation previous versions", "num": "20166", "d": "11/2017"}, {"title": "compiling application using ngc doesnt emit angular decorators", "body": "submitting current behavior using angular v ngc compiler compile module work space typescript v emit decorator info expected behavior typescript v angular v ngc compiler typescript v angular v ngc compiler output module typescript gt angular v ngc compiler outputs nt contain decorator info motivation use case changing behavior building angular libraries using commands angular repo uses create libraries upgrading angular version library commands started fail missing decorator info environment tooling issues node version also tried platform mac windows", "num": "20164", "d": "11/2017"}, {"title": "able see styles stylecss", "body": "submitting current behavior put style nt seem show page example put however background never goes workaround able find add add expected behavior see styles without adding adding component minimal reproduction problem instructions add line background motivation use case changing behavior environment angular browser browsers believe tooling issues yarn version platform windows", "num": "20163", "d": "11/2017"}, {"title": "ng build aot prod javascript heap memory", "body": "submitting current behavior ng build aot prod fri nov lt last gcs ms marksweep mb ms allocation failure gc old space requested ms marksweep mb ms last resort gc old space requested ms marksweep mb ms last resort gc old space requested lt js stacktrace js stack trace security context sparsejoinwithseparatorjs aka sparsejoinwithseparatorjs native arrayjs fatal error callandretrylast allocation failed javascript heap memory node abort usrlocalbinnode node fatalexception isolate local local usrlocalbinnode internal fatalprocessoutofmemory char const bool usrlocalbinnode internal factory newrawtwobytestring int internal pretenureflag usrlocalbinnode internal runtimesparsejoinwithseparator int internal object internal isolate usrlocalbinnode fish ng build aot prod terminated signal sigabrt abort expected behavior build minimal reproduction problem instructions ng build aot prod motivation use case changing behavior environment", "num": "20162", "d": "11/2017"}, {"title": "angular ngif treats empty array true", "body": "submitting current behavior empty array ngif treats true expected behavior empty array returns false inside ngif minimal reproduction problem instructions steps reproduce create array instantiated empty array create div ngif array motivation use case changing behavior previous version used format environment", "num": "20161", "d": "11/2017"}, {"title": "angular aot activatedroutedata include data route config", "body": "submitting current behavior route contains properties content present object aot although present jit expected behavior behavior jit minimal reproduction problem instructions create simple app simple path containing property accessing code output foo bar jit aot environment", "num": "20160", "d": "11/2017"}, {"title": "doc examples flakes cause frequent ci failures job", "body": "current behavior frequently occurring flake aio travis job expected behavior flakes", "num": "20159", "d": "11/2017"}, {"title": "hm", "body": "", "num": "20158", "d": "11/2017"}, {"title": "aot jit", "body": "submitting current behavior angular nt allow build system aot jit expected behavior system use aot jit working weeks make work saying impossible minimal reproduction problem instructions angular got aot web page files generated jit motivation use case changing behavior environment", "num": "20156", "d": "11/2017"}, {"title": "opening matdialog another matdialog nt work safari", "body": "submitting current behavior opening dialog another dialog nt work safari expected behavior expect behaviour chrome dialog opened another dialog minimal reproduction problem instructions check two consolelog statements safari result looks different safari first dialog info matdialogref overlayref overlayref containerinstance matdialogcontainer id disableclose false afteropen subject second dialog info chrome first dialog info second dialog info notice chrome id parameter passed dialogs properly picked safari nt get behaviour therefore safari open second dialog panel motivation use case changing behavior environment", "num": "20155", "d": "11/2017"}, {"title": "angular jitcompilerfactory missing", "body": "submitting current behavior jitcompilerfactory missing expected behavior use jit compiler like ts import compileservice compileserviceconfig compileservice import compileattribute compileattribute import ngmodule modulewithproviders angularcore import compiler angularcore import jitcompilerfactory angularcompiler export function createjitcompiler return new jitcompilerfactory usedebug false usejit true createcompiler exports component ngmodule imports declarations compileattribute providers compileservice provide compiler usefactory createjitcompiler exports compileattribute entrycomponents export class compilemodule minimal reproduction problem instructions use jitcompiler aot system use missing motivation use case changing behavior environment", "num": "20154", "d": "11/2017"}, {"title": "router links break intermittently", "body": "submitting current behavior router links application work time times nt times nt work error raised chrome error raised firefox error error uncaught promise typeerror outlet undefined preactivationprototypetraverseroutes preactivationprototypetraversechildroutes lt preactivationprototypetraversechildroutes preactivationprototypetraverseroutes preactivationprototypetraversechildroutes lt preactivationprototypetraversechildroutes preactivationprototypetraverse routerprototyperunnavigatenext subscriberprototypenext mergemapsubscriberprototypenotifynext innersubscriberprototypenext subscriberprototypenext mapsubscriberprototypenext subscriberprototypenext scalarobservableprototypesubscribe observableprototypesubscribe mapoperatorprototypecall observableprototypesubscribe subscribetoresult mergemapsubscriberprototypeinnersub mergemapsubscriberprototypetrynext mergemapsubscriberprototypenext subscriberprototypenext mergemapsubscriberprototypenotifynext innersubscriberprototypenext subscriberprototypenext mapsubscriberprototypenext subscriberprototypenext scalarobservableprototypesubscribe observableprototypesubscribe mapoperatorprototypecall observableprototypesubscribe subscribetoresult mergemapsubscriberprototypeinnersub mergemapsubscriberprototypetrynext mergemapsubscriberprototypenext subscriberprototypenext subscriberprototypenext subscriberprototypenext mapsubscriberprototypenext subscriberprototypenext mapsubscriberprototypenext subscriberprototypenext mapsubscriberprototypenext subscriberprototypenext lastsubscriberprototypecomplete subscriberprototypecomplete mergeallsubscriberprototypecomplete subscriberprototypecomplete scalarobservableprototypesubscribe observableprototypesubscribe mergealloperatorprototypecall observableprototypesubscribe lastoperatorprototypecall observableprototypesubscribe mapoperatorprototypecall observableprototypesubscribe mapoperatorprototypecall observableprototypesubscribe mapoperatorprototypecall observableprototypesubscribe catchoperatorprototypecall observableprototypesubscribe mergemapoperatorprototypecall observableprototypesubscribe mergemapoperatorprototypecall observableprototypesubscribe mapoperatorprototypecall observableprototypesubscribe mergemapoperatorprototypecall observableprototypesubscribe mergemapoperatorprototypecall observableprototypesubscribe mergemapoperatorprototypecall observableprototypesubscribe mapoperatorprototypecall observableprototypesubscribe observableprototypeforeach lt zoneawarepromise observableprototypeforeach routerprototyperunnavigate lt zoneawarepromise routerprototyperunnavigate routerprototypeexecuteschedulednavigation lt zonedelegateprototypeinvoke ngzoneprototypeforkinnerzonewithangularbehaviorthisinner lt oninvoke zonedelegateprototypeinvoke zoneprototyperun scheduleresolveorreject lt zonedelegateprototypeinvoketask ngzoneprototypeforkinnerzonewithangularbehaviorthisinner lt oninvoketask zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue zonetaskthisinvoke stack trace resolvepromise resolvepromise scheduleresolveorreject lt zonedelegateprototypeinvoketask ngzoneprototypeforkinnerzonewithangularbehaviorthisinner lt oninvoketask zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue zonetaskthisinvoke seems behavior random links work fine every page loads next page loads broken next work even stranger broken links follow pattern click broken link click another link try click broken links work expected behavior links work time minimal reproduction problem instructions nt know could reproduce behavior environment", "num": "20153", "d": "11/2017"}, {"title": "clarify elements removed", "body": "submitting current behavior changelog compiler compiler option disabled default element deprecated since use instead option element removed angular expected behavior documentation explain happening template element removed native html element happen encountered angular component statement mean angular ignore elements create native template element encounters one mean become impossible use native elements angular motivation use case changing behavior elements key part web components heavily used origami angularpolymer compatibility library environment", "num": "20151", "d": "11/2017"}, {"title": "ng build prod aot outputhashing none stuck chunk asset optimization angular v upgrade", "body": "upgrading angular version aot compilation seems stuck chunk optimisation ages completes full mins reason slowness", "num": "20150", "d": "11/2017"}, {"title": "hammercustom config lazyloaded module effect", "body": "submitting current behavior tried use pan gesture direction made custom hammer config put config lazyloaded module nt effect put config appmodule root module effect also tried angularmaterial slider slider uses custom hammer config slide slidestart slideend gestures issue described demo demo angularmaterial expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20149", "d": "11/2017"}, {"title": "hm", "body": "", "num": "20148", "d": "11/2017"}, {"title": "adding pug support angular templates", "body": "beautiful support pug template engine angular", "num": "20147", "d": "11/2017"}, {"title": "angular typescript support", "body": "submitting current behavior new angular unfortunately use old version version typescript lacks many benefits newer version typescript better type checking refactorings etc describe desired behavior would would great angular could upgrading typescript supporting strict mode additional strict function typing benefits would much aligned angular goal improving static checking templates etc", "num": "20146", "d": "11/2017"}, {"title": "cucumber angular", "body": "submitting current behavior unit testing performed using jasmine specifications expected behavior want use cucumber feature files angular project want implement feature scenarios unit testing level want use protractor selenium ie integration endtoend testing want use angular testing tools normally use jasmine unit tests mocking eg testbed motivation use case changing behavior support features expected enterprise ability use cucumber feature files specified business feature files could shared server side ci environment allow dashboards detailing status clientside cucumber feature development jasmine tight coupling text used describe test implementation environment", "num": "20145", "d": "11/2017"}, {"title": "tab routing switch keep editing operation need backend rendering get", "body": "click another tab back previous tab edited content saved", "num": "20144", "d": "11/2017"}, {"title": "install node macos", "body": "working", "num": "20142", "d": "11/2017"}, {"title": "webpack guide need update angular", "body": "submitting current behavior webpack introduction guide using angular expected behavior guide use angular nt docs part release process", "num": "20141", "d": "11/2017"}, {"title": "compilation issue angular", "body": "hi facing compilation issue webpack error atloader nodemodules expected error atloader nodemodules type parameter declaration expected error atloader nodemodules expression expected error atloader nodemodules expected error atloader nodemodules expected error atloader nodemodules declaration statement expected error atloader nodemodules expected error atloader nodemodules object possibly undefined error atloader nodemodules find name key error atloader nodemodules find name string error atloader nodemodules statekey refers type used value packagejson", "num": "20140", "d": "11/2017"}, {"title": "aot compile importing modules packages", "body": "simple package ts import inject injector modulewithproviders ngmodule injectiontoken angularcore import commonmodule angularcommon import statehistorycomponent statestatehistory ngmodule imports commonmodule declarations statehistorycomponent exports statehistorycomponent export class storemodule ngc p tsconfigdistjson tsconfig compileroptions baseurl declaration true stripinternal true emitdecoratormetadata true experimentaldecorators true module moduleresolution node noemitonerror false outdir release rootdir sourcemap true inlinesources true lib dom target skiplibcheck true files indexts angularcompileroptions annotationsas decorators gendir release skipmetadataemit true ts ngmodule imports commonmodule browsermodule formsmodule routermoduleforroot routes usehash true storemodule declarations appcomponent todoscomponent tododescription routerhistorytestcomponent bootstrap appcomponent export class appmodule got error imported empty module hitting head wall trying get real module work aot error details angular cli git dev build runs fine everything works runtime webpack also able compile aot without problem ngcwebapck module need updated waste time really drives crazy whats drives even updating ngstate package angular check aot publishing package people relies package state managment ideas fix ps want reproduce please visit everything store example app self", "num": "20139", "d": "11/2017"}, {"title": "angular use relative path find resources", "body": "submitting current behavior app structure like indexhtml maints app maincomponenthtml maincomponentts appmodulets notepng etc want use notepng maincomponenthtml folder tried picture shown browser goes search picture expected behavior maincomponenthtml app write notepng use appnotepng instead notepng use use router feature parent page sharing children pages nt want create asserts folder store pictures pages contrast want put images folder ts html use image angular different normal html structure normal html visit maincomponenthtml url like appmaincomponenthtml use relative path html goes appnotepng whereas angular url indexhtml actually page appmaincomponenthtml shown notepng relative url indexhtml also posted question stackoverflow solution url style also work fine minimal reproduction problem instructions easy create default project use add default appcomponenthtml add picture named notepng folder motivation use case changing behavior problem traditional html structure problem angular motivation environment others perhaps angular provide pipe may covert relative path correct absolute path per path html file example gt appnotepng", "num": "20137", "d": "11/2017"}, {"title": "incorrect percentpipe formatting", "body": "submitting current behavior percentpipe sometime incorrectly interprets digitinfo minfractiondigits parameter outputs text like minfractiondigitsmaxfractiondigits percent outputs error percent outputs ok expected behavior percent output percent output deprecatedpercentpipe works expected minimal reproduction problem instructions create empty component add code environment", "num": "20136", "d": "11/2017"}, {"title": "amp jquery datatables issue using angular components inside render function column definition", "body": "using jquery datatables plugin inside angular project far best amp robust plugin datagrid facing following issue using angular custom components inside template string returned render function code snippet problem ngif amp compiled angular use inside render function happening way use angular custom components amp structural directive inside render function jquery datatables thanks advance", "num": "20135", "d": "11/2017"}, {"title": "please upgrade service worker error sw package", "body": "submitting current behavior trying use service worker run production build multipleapp project getting following error message expected behavior using cli angular packages failure message make sense minimal reproduction problem instructions project two cli apps defined following packagejson dependencies lead issue mentioned motivation use case changing behavior working versions expected environment", "num": "20134", "d": "11/2017"}, {"title": "ngfor working", "body": "devicesearchcomponentts export class devicesearchcomponent records public setrecord res consolelog device sarch consolelog res thisrecords resentries consolelog thisrecords returing data rest call showdevicesearch consolelog thisdbsvendor thisbsbasicsearch thisdbs subscribe res gt consolelog res consolelog res thisdevicesearchcomponentsetrecord res basicsearch bs devicesbasicsearch observable let headers new headers contenttype applicationjson let options new requestoptions headers headers return bs headers map res response gt resjson consolelog res export class devicesbasicsearch public vendor string public soccode string public partnumber string public typelist string public model string public sysobjectid string public family string public catalogidhide boolean public lynxcertifiedonly boolean constructor accessing record html devicesearchcomponenthtml getting anything html anyone please help missing", "num": "20133", "d": "11/2017"}, {"title": "npm package available implement speedometer", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20132", "d": "11/2017"}, {"title": "compilercli allow providing program performcompilation", "body": "submitting current behavior function compilation resource loader compiler host async function used program created within invoked expected behavior make usable async compilations motivation use case changing behavior place fairly simple create compilation process webpack loaders know enclosed one hook replacechangeupdate resources main use case library generation help inlining resources updating code tasks usually running post compilation via gulp since accepts transforms whole library generation process doable ts super cool also help simply code able use function see source code comment acceptable pr ready extra parameter exists skip program creation use supplied program another approach pr change api even breaking adds explicit function cc alexeagle tbosch filipesilva hansl", "num": "20130", "d": "11/2017"}, {"title": "tab routing switch keep editing operation need backend rendering get", "body": "click another tab back previous tab edited content saved", "num": "20129", "d": "11/2017"}, {"title": "import nothing angularcommonlocales", "body": "submitting current behavior ca nt import nothing expected behavior run plunker following guide without problem minimal reproduction problem instructions others thought could nt registered added line copied commonhttp line error keeps", "num": "20126", "d": "11/2017"}, {"title": "need jitcompilerfactory angular", "body": "submitting current behavior factory jitcompilerfactory like angular expected behavior export jitcompilerfactory angular alternative example code angular environment tooling issues node version platform windows", "num": "20125", "d": "11/2017"}, {"title": "compiling closure compiler requires unnecessary extern", "body": "submitting current behavior compiling aot compiler bundle closure compiler error prevents bundle compiled warn nodemodules originally error variable compiled undeclared error warning workaround made compiled extern variable needed application believe something change expected behavior compiled required application compile aot compiled code closure compiler minimal reproduction problem instructions follow instructions readmemd repo motivation use case changing behavior angular require dev include unnecessary externs build closure compiler environment", "num": "20119", "d": "11/2017"}, {"title": "running two angular projects making one projects access another project data", "body": "submitting current behavior really bizarre error running two angular projects projects equals except config constant makes access api running project port project b port example access browser tab access load specific content press go back previous url project load project b content", "num": "20118", "d": "11/2017"}, {"title": "big bundle angular", "body": "submitting minimal reproduction problem instructions updating big project angular see dev bundle big project components ng serve packagejson angular bundle much smaller ng serve chunk kb rendered chunk kb rendered chunk kb rendered chunk kb rendered chunk kb rendered chunk mainbundlejs mainbundlejsmap main mb initial rendered chunk polyfillsbundlejs polyfillsbundlejsmap polyfills mb initial rendered chunk stylesbundlejs stylesbundlejsmap styles kb initial rendered chunk vendorbundlejs vendorbundlejsmap vendor mb initial rendered chunk inlinebundlejs inlinebundlejsmap inline bytes entry rendered packagejson motivation use case changing behavior normal files vendorbundlejs mainbundlejs big thank advance environment tooling issues node version platform mac", "num": "20116", "d": "11/2017"}, {"title": "ngc emits js typescript vendor files", "body": "submitting current behavior emit javascript files vendor typescript files imported user app even files part files included expected behavior files included compiled minimal reproduction problem instructions compilation finished see nonfactory js files emitted library library published ts files without metadata motivation use case changing behavior behaviour problematic hides improperly packaged libraries may fail compilation due app ts version different ts version needed library environment related cc chuckjaz", "num": "20115", "d": "11/2017"}, {"title": "routereusestrategy impossible storeretrieve siblings also nonsibling", "body": "submitting current behavior routing includes route children also route children impossible store retrieve correct detachedroutehandle custom routereusestrategy routes detached user navigates among siblings parent router checking full tree stored detachedroutehandle may match coming sibling stored navigating nonsibling vice versa expected behavior needs way reuse components without rebuilding matter navigated minimal reproduction problem instructions routes defined user navigates order dashboard pagesa dashboard pagesb pagesa way recreate pagesacomponent router checking full tree navigating tofrom child pagesa sibling asks store route parent pages b case navigating nonsibling stores route tree pagesa pagesb plunker click dashboard pagesa change value dashboard pagesb pagesa reconstructed point key customreusestrategy currently using catenation keys defined router data see computesnapshotkey simply use leaf key uniquely identify component get angular error complaining ca nt attach nonidentical route detachedroutehandle represents pagesa instead expected way reuse children routing case motivation use case changing behavior applications must save state switching components work routing scenario environment", "num": "20114", "d": "11/2017"}, {"title": "ngswitch working", "body": "submitting current behavior always uses ngswitchdefault option expected behavior correctly trigger valid switch option minimal reproduction problem instructions html columns motivation use case changing behavior column table could implemented differently need effective way implementing logic choose column implementation particular column needs environment", "num": "20113", "d": "11/2017"}, {"title": "angular amp router navigate activate oninit external request", "body": "current behavior external javascript api response created observable routernavigate method activate lifecycle events oninit ngafterviewinit expected behavior response external js api like facebook gigya etc navigate route lifecycle triggered minimal reproduction problem instructions router issue please go next repo minimal environment install ngserve enter press click xhr request everything works good see alerts press click error api js request lyfecycle stop working file service helperservice exist methods first one simple xhr works fine one use js api complete request successerror matter navigate redirects lifecycle activated motivation use case changing behavior navigate component work normally type url environment", "num": "20112", "d": "11/2017"}, {"title": "aot compilation absolute templateurl ngtoolswebpack", "body": "submitting current behavior aot compilation nt support absolute path templateurl expected behavior supporting absolute path templateurl even aot minimal reproduction problem instructions create component absolute templateurl produce webpack process returns error message follows motivation use case changing behavior environment hello issue related follows link snippet right relative templateurl nt worked check related issue tried use absolute path templateurl quick fix without moduleid still error want use webpack bundle also systemjs bundle quick build development environment need support absolute path templateurl aot compilation thank", "num": "20111", "d": "11/2017"}, {"title": "server side rendering router guards", "body": "submitting current behavior created guard login check user access page working well without server side rendering use nguniversal guard executed twice server return login page client side therefor login page displayed second html returned server refresh expected behavior solution execute guard time server side first call use guard client side next calls thank sopretty", "num": "20110", "d": "11/2017"}, {"title": "invalid regular expression", "body": "submitting current behavior build universal application without using angularcli without aot everything works fine build application aot get error peace compiled code cause error accords code names ascii try matching simple regexps first var simplename azaz w var simpleqname azaz w azaz w azaz w regular expressions fail try complex ones work identifiers using codepoints unicode bmp var ncnamestartchars var ncnamechars var ncname ncnamestartchars ncnamechars var namestartchars ncnamestartchars var namechars ncnamechars var name new regexp namestartchars namechars var qname new regexp ncname ncname ncname expected behavior success compilation aot minimal reproduction problem instructions environment", "num": "20109", "d": "11/2017"}, {"title": "server side rendering router guards", "body": "", "num": "20108", "d": "11/2017"}, {"title": "angular commonhttp missing requestoptionsargs", "body": "angular new commonhttp missing requestoptionsargs interface exists deprecated http library", "num": "20106", "d": "11/2017"}, {"title": "angular aot style generation spends minutes call", "body": "submitting current behavior following steps suggested cli except using typescript instead project takes around seconds rebuild aot enabled looking cpu profile see almost minutes spent specifically indicates something going wrong expected behavior rebuilds aot enabled faster alternatively like figure triggering slow path see anything modify codebase make buildsrebuilds faster minimal reproduction problem instructions environment importance could fact using might adding weird style rules cause aot compiler go crazy others mentioned suspect caused catastrophic regular expression trying call however familiar internals compiler really understand trying comletely", "num": "20105", "d": "11/2017"}, {"title": "angularupdateguide npm typescript version problem", "body": "submitting current behavior site referred blog recommends following command upgrade using npm updates packagejson next time run update typescript outside supported ranges typescript lt cli reports minimal reproduction problem instructions requires npm think related issue environment", "num": "20104", "d": "11/2017"}, {"title": "injectorerror trying inject injector aotcompiled library using jit app", "body": "submitting current behavior library directive requires injection aotcompiled distributed metadata app imports library module applies directive element running app works fine injected library directive running app jit results error page load note specific trying inject eg causes problem expected behavior app works jit aot minimal reproduction problem instructions follow instructions readme reproduce branch contains library basic build setup branch contains app generated angularcli environment", "num": "20102", "d": "11/2017"}, {"title": "angular error staticinjectorerror injectiontoken documenttoken", "body": "submitting current behavior upgraded current project using recommandations launch page keeps blank browser console returns following error traceback indicates comes bootstraping unfortunately nothing specific expected behavior error minimal reproduction problem instructions know reproduce bug existing codebase quite large aware might difficult answer issue ask know error message rings bell anyone know start digging motivation use case changing behavior environment angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcdk angularcli angularflexlayout angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpackbundleanalyzer webpack browser chrome desktop version xx chrome android version xx x chrome ios version firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others", "num": "20101", "d": "11/2017"}, {"title": "multipart request gt impossible specify content type specific part", "body": "submitting iam using angular form type const formdata formdata new formdata formdataappend files file formdataappend data jsonstringify data post request httclient requestpart content type causing error spring mvc rest controller found net exemple like formdataappend data new blob jsonstringify data type applicationjson supported angular project", "num": "20100", "d": "11/2017"}, {"title": "prerenderio", "body": "hi trying use prerenderio angular application able render html pages followed angularioguidequickstart prerender angular respectively set things local cmd ran two applications separately different ports prerender angular used url render page seem load allis prerenderio compatible angular angular angularjs regards sajal", "num": "20099", "d": "11/2017"}, {"title": "hammerjs regression hammerinput", "body": "submitting current behavior getting runtime error compiles without warnings maybe compiler decided hammerinput required application include build typeshammerjs added devdependencies hammerjs dependencies expected behavior error minimal reproduction problem instructions environment", "num": "20098", "d": "11/2017"}, {"title": "error nullinjectorerror provider http zone upgrading version", "body": "submitting current behavior upgrading angular application version version getting following error course already updated module guess coming also see two imports imagine may caused fact imported using angular cli packagejson environment tooling issues node version platform linux", "num": "20096", "d": "11/2017"}, {"title": "angular production build issue", "body": "error module build failed typeerror read property type undefined objectgeteffectivetypeannotationnode objectforeach srcappserviceinterceptorservicets srcappappmodulengfactoryjs srcmaints multi srcmaints", "num": "20095", "d": "11/2017"}, {"title": "angularcn bug stagejump", "body": "submitting current behavior leftclick link doc page jump certain stage page doesnot work expected behavior need work leftclick link minimal reproduction problem instructions link jump centain stage orther hand link centain heading motivation use case changing behavior found links label like bug exist get html code found fact chinese words used attributes id particular html label mostly link work id english words html code environment like", "num": "20094", "d": "11/2017"}, {"title": "hm", "body": "", "num": "20093", "d": "11/2017"}, {"title": "implementing rsa", "body": "use rsa implement encryption", "num": "20092", "d": "11/2017"}, {"title": "angular part compilation output please check error messages details", "body": "angular upgrade", "num": "20091", "d": "11/2017"}, {"title": "angular api documentation", "body": "submitting current behavior currently shows latest version api expected behavior angular still current lts api reference web site something like", "num": "20090", "d": "11/2017"}, {"title": "get rid dozens ngswitchcase", "body": "submitting current behavior hey guys using anuglar angularcli develop website met following problem listcomponent display different component based type currently code like simple try using ngswitch display different component based type variable every component communicate parent component using input output expected behavior code runs correctly since got dozens component display code get larger larger looks like mess therefore try use dynamic component mechanism found dynamic component nt support input output moreover dynamically added component wo nt trigger ngonchanges function according issue problems block way using dynamic component improve code making cleaner thanks lot minimal reproduction problem instructions reproduced every time motivation use case changing behavior better code environment", "num": "20088", "d": "11/2017"}, {"title": "hostlistener change fired several latest browsers", "body": "submitting current behavior component input tag implement write value input using api valuechanges handler directive handler fired expected behavior fired component anything minimal reproduction problem instructions describe detail instructions source code directive handler fired several latest browsers chrome problem safari firefox edge problem motivation use case changing behavior customer type number money data want adding comma character easy read environment", "num": "20087", "d": "11/2017"}, {"title": "hi angular team upgraded solution angular today getting error error thiscompilercompileall function error srcmaints module found error ca nt resolve gendirappappmodulengfactory c codeshieldwebsrc", "body": "upgraded angular got error ng build prod error thiscompilercompileall function error srcmaints module found error ca nt resolve gendirappappmodulengfactory c codeshieldwebsrc srcmaints multi srcmaints", "num": "20083", "d": "11/2017"}, {"title": "aot ngfactory files longer generated", "body": "submitting current behavior running get appmainaotts error find module compiledappappmodulengfactory worked perfectly fine angular changed tsconfigaotjson accordingly expected behavior compilation work flawlessly environment tsconfigaotjson mainaotts typescript import platformbrowser angularplatformbrowser import appmodulengfactory compiledappappmodulengfactory platformbrowser bootstrapmodulefactory appmodulengfactory", "num": "20082", "d": "11/2017"}, {"title": "route parammap resolved synchronously first time", "body": "submitting current behavior using observable first value emitted synchronously threw observable may cause error state components altered based route parameter expected behavior first set parameters emitted emitted asynchronously minimal reproduction problem instructions see plunker open console click go x show first time triggers error navigating item component destroyed asynchronous trigger error click reset go back home destroy motivation use case changing behavior explain everything stack overflow question words want show global loader fetching data based route parameter simplified code excerpt ts ngoninit void add remove delay make work thisitem thisrouteparammapdelay switchmap params gt show global loader thisloaderserviceisshown next true reflection bug achieve kind behavior right way one simple solution use rxjs operator look right environment", "num": "20081", "d": "11/2017"}, {"title": "prerender compilation omits hash css background url paths indexhtml", "body": "current behavior running resulting indexhtml file prerendered styles included top expected background image filename style block lacking hash suffix present images dynamic styles seen issue jpg svg files perhaps generated css expected filename directory stripped beginning file paths correctly since images hash name served root expected behavior image filenames included static indexhtml hashed image filename used everywhere else minimal reproduction problem instructions steps reproduce start current version used testing comes angular run place image filename within homecomponentts add component definition template note also occurs external file scss styles run observe contents either directly browser environment", "num": "20080", "d": "11/2017"}, {"title": "error compiling ejected webpackconfig application", "body": "submitting current behavior webpackconfigjs ejection use command npm run build trying compile angular project got following error error nodemodules angular module found error ca nt resolve rxjsoperatorshare c myappnodemodules angularc ore angular nodemodules angularcore clientappmaints multi clientappmaints expected behavior minimal reproduction problem instructions motivation use case changing behavior environment npmdebug log info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli run verbose cli build info using npm info using node verbose runscript prebuild build postbuild info lifecycle silly lifecycle script prebuild continuing info lifecycle verbose lifecycle unsafeperm lifecycle true verbose lifecycle path c program filesnodejsnodemodulesnpmbinnodegypbin etc verbose lifecycle cwd c myapp silly lifecycle args c webpack silly lifecycle returned code signal null info lifecycle failed exec build script verbose stack error build verbose stack exit status verbose stack eventemitter c program verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess c program verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid verbose cwd c myapp error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs run build error node error npm error code elifecycle error build error exit status error failed build script webpack error make sure latest version nodejs npm installed error likely problem package error npm error tell author fails system error webpack error get information open issue project error npm bugs error nt available get info via error npm owner ls error likely additional logging output verbose exit true thoughts", "num": "20079", "d": "11/2017"}, {"title": "add asyncinput decorator mark input properties observables", "body": "submitting current behavior prefer use onpush changedetection strategy maintain state readonly observables rather mutable properties pattern currently considering component use directly expected behavior could greatly reduce boilerplate decorator encapsulated pattern eg minimal reproduction problem instructions silly example would render motivation use case changing behavior using observables instead mutable properties increases efficiency rendering greatly adding new decorator ease using observables reduce duplicated code also reduces use lifecycle functions especially ngonchange components environment", "num": "20078", "d": "11/2017"}, {"title": "template parse errors templates missing error message", "body": "reproduction leads error message expected note html errors reported correctly eg results analysis bug since used new transformer based compiler see parseutilts nt include however method used programts create diagnostics proposed solution change include prefix", "num": "20076", "d": "11/2017"}, {"title": "contentchildren descendants documentation unclear", "body": "submitting current behavior current description contentchildren metadata properties gives following description property descendants include direct children descendants describes unclear strategy used expected behavior documentation say setting true includes descendants know small took bit digging around example figure willing submit pr", "num": "20074", "d": "11/2017"}, {"title": "routereusestrategy nt reuse parent tree components", "body": "submitting current behavior extend routereusestrategy reuse logic child component reused parent tree destroyed recreated every route change expected behavior extend routereusestrategy reuse logic expect child component reused also parent tree components minimal reproduction problem instructions type number simulate opening person edit click open person detail change tab person click goto detail type number textarea parent component show value living textarea share service instance change back home tab change back person tab typed number displayed child textarea reused route parent nt number anymore even typing new number service instance motivation use case changing behavior want archive provide service instance via dependency injection routeroutlet children children interact parent component done global service route created dynamically id url every route state see plunker demo environment", "num": "20072", "d": "11/2017"}, {"title": "documentation deploy iis rewrite rule working", "body": "submitting current behavior documentation iis outdated showing redirection route src work intended expected behavior adding rewrite rule make angular application able refresh routes without problems change suggestion change iis redirection rewrite action action type rewrite url environment running angular iis server windows server", "num": "20070", "d": "11/2017"}, {"title": "prod build fontawesome font found", "body": "localhost working fine prod dev build fontawesome font found im using ng rc amp clic", "num": "20068", "d": "11/2017"}, {"title": "", "body": "facing issue regarding injecting component another component injection run time used link example inject component works fine simple component pure html code ever injected component another component angular gives error using component independent component works fine body tell happen might miss", "num": "20067", "d": "11/2017"}, {"title": "angular website angular routing working deploy server", "body": "submitting deploy dist folder server website routing working deploy server routing nt working go next component menu refresh page giving error like found please help", "num": "20066", "d": "11/2017"}, {"title": "ck editor angular read write functionality issue please suggest links implement", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "20065", "d": "11/2017"}, {"body": "assume grin problem always going macrotask scheduled clear guide btw since jasmine iirc also return promise use instead using would nice mention well guide", "d": "11/2017"}, {"body": "gkalpak ah perhaps changed oh problem would would never finish wait promises resolved correct yes agree would good idea mention jasmine changes", "d": "11/2017"}, {"body": "nt tried top head think would never finish runs synchronously would throw error would tasks scheduled test finished needs verified grin", "d": "11/2017"}, {"body": "ah okay makes sense thank edit testing looks like complete settimeout wo nt ever get called without using though assume referring said would nt ever complete right", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "nuts problem case", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "submitted pr enables use case described issue without throwing error cheers", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "ahhhhh yes angularcli github searched angular many thanks working perfectly node nodemodules angularclibinng serve aot build node nodemodules angularclibinng build prod ps first time run prod build performance display great work", "d": "11/2017"}, {"body": "allowing array like typescript import precompiledmodulengfactory precompiledmodulengfactory ngmodule imports precompiledmodulengfactory export class appmoduleforjit currently actual basic compilation unit compile standalone component", "d": "11/2017"}, {"body": "trotyl probably harder know compiler needs whole metadata module components order compile template want avoid simply want compile html ast intermediary step nt depend context templates could precompiled without knowing anything component module could work like", "d": "11/2017"}, {"body": "think time would take would better spent improving aot experience rather patching jit", "d": "11/2017"}, {"body": "asking aot faster works issues actionable closing", "d": "11/2017"}, {"body": "mhevery asking faster jit would employ aot techniques aot suitable everyone limit fast aot compilation could principles", "d": "11/2017"}, {"body": "also first glance source code changes proposing seems really simple check whether already skip parsing exposed public api community could rest write tool webpack plugin parses templates", "d": "11/2017"}, {"body": "animations also nt work running app ng serve prod", "d": "11/2017"}, {"body": "worked animations work buildoptimizer turned ng build prod buildoptimizer false basehref app bug", "d": "11/2017"}, {"body": "dupe", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "using format hence displayed use instead time properly displayed see datepipe docs", "d": "11/2017"}, {"body": "lazarljubenovic oh wow feel like pretty big dummy must completely glossed vs part thanks", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation try search angular cli repo", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "reopen bug simply add jitcompilerfactory buggy state", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "second cost days realized ts culpit", "d": "11/2017"}, {"body": "looks promising thanks sam", "d": "11/2017"}, {"body": "woohoo add context angulario app essentially shell top navbar sienav footer maincontent area show different docs loaded files based url file needs displayed contains meaningful content different url would load different document order determine file needs downloaded app needs bootstrapped first ie main js files need loaded parsed discussed past prerendering serverside rendering pages maybe even common landing pages would save extra request first meaningful paint maybe time give another try apis mature ideas could help corresponding file simple js snippet loads requests proper file without wait loaded parsed", "d": "11/2017"}, {"body": "gkalpak look trace page see angular bootstrap completing fetch json delay identifying happening fixing yield significant wins", "d": "11/2017"}, {"body": "confused thought said delay waiting fetched saying delay bootstrap finishing requesting seeing locally fwiw", "d": "11/2017"}, {"body": "hey gkalpak went ahead reprofiled clean install chrome looks like missing fact network request indexjson navjson indeed kicked right bootstrap happens good us path optimizing gets lot easier case going recommend following pattern ship tiny inline script looks dict routes pagejson list following enable yall kick critical asset request upfront network bound js framework bootstraps let know help", "d": "11/2017"}, {"body": "phew glad initial understanding correct thx samccone helping make sense tell profiling strong suite others still valid grin based samccone suggestion less involved fix browsers support preloading would dropping snippet html var relpath locationpathnameslice index var fileurl generateddocs relpath json var link documentcreateelement link linksetattribute rel preload linksetattribute href fileurl documentbodyappendchild link", "d": "11/2017"}, {"body": "gave shot reason seems file requested twice played bit attributes using joy", "d": "11/2017"}, {"body": "see action file loaded twice chrome warns preloaded file used", "d": "11/2017"}, {"body": "looking specific warning chrome see gkalpak chrome seems directly related bug ticket nice get attention bug additionally might worth noting firefox beta seem even attempt prefetching file param nt necessary", "d": "11/2017"}, {"body": "bug seems indeed relevant thx pointing danwulff samccone seen preload work xhr", "d": "11/2017"}, {"body": "hey gkalpak specific bug workaround using xhr instead fetch everything happy", "d": "11/2017"}, {"body": "samccone using xhr already example go disable serviceworker see file loaded taking fast example page successfully preloading json file take look try spot differences smiley", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "changed saw back going circles want kill frustrating", "d": "11/2017"}, {"body": "const isdevbuild env amp amp envprod const isdevbuild true webpackjs makes app work though", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ps know building apps frustrating non need want kill stay strong think bug please provide repro plunker", "d": "11/2017"}, {"body": "figurative", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "clear issue related angular angular direct dependency going close still think action need take please open new issue providing necessary info", "d": "11/2017"}, {"body": "fixed one last versions angular cli", "d": "11/2017"}, {"body": "seems like positive number supported spec adding support negative numbers would easy makes sense add support angular translation tools support guess easy enough update code avoid negative numbers angular side print meaningful error message make sense", "d": "11/2017"}, {"body": "thanks fast reply yes sounds ok", "d": "11/2017"}, {"body": "enable checks please ts handbook strict enable strict type checking options enabling enables", "d": "11/2017"}, {"body": "gkalpak master option tsconfig break angular typescript due new strictpropertyinitialization option mentioned", "d": "11/2017"}, {"body": "thx headsup always explcitly optout specific options better opt imo also sure incompatible angular ca nt initialize input properties anyway also landed support ts let worry get smiley", "d": "11/2017"}, {"body": "sure incompatible angular angular always initialize input properties error typescript detect initialization properties nullable always explcitly optout specific options good idea angular cli seems unable autoupdate may apply sorry offtopic still fine angulario", "d": "11/2017"}, {"body": "mean nothing stopping initializing input properties component", "d": "11/2017"}, {"body": "true guess input properties may default value", "d": "11/2017"}, {"body": "always explicit smiley clear talking app even end turning better strict default smiley", "d": "11/2017"}, {"body": "feel like enabling flag would provide safest best use typescript protection going forward would definitely undertaking angular maybe shooting release could possibility hope igorminar angular team would least take consideration typescript release notes new checks added typescript often default avoid breaking existing projects avoiding breakage good thing strategy drawback making increasingly complex choose highest level type safety requires explicit optin action every typescript release strict option becomes possible choose maximum type safety understanding additional errors might reported newer versions compiler improved type checking features added", "d": "11/2017"}, {"body": "saying sites utilize bandwidth much traffic anyway nt make sense compare numbers", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "looks related let track", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "nt create compiler need let injector work look code used test also already tell fail missing metadata try load lazy module reason starting cli strips metadata bundles use aot create smaller bundles even sure work jit example used test jitcompilerfactory uses rollup instead cli bundle lazy loaded module nt use setup optimized deduplication modules want know cli hansl able answer questions mean time use cli want", "d": "11/2017"}, {"body": "similar issue trying configuration test got next error error resourceloader implementation provided ca nt read url tried angular cli", "d": "11/2017"}, {"body": "ocombe already use injector like test downgrade angular cli still got metadata error get metadata error disabling buildoptimizer false make app size larger", "d": "11/2017"}, {"body": "errors occur build project aot ng serve aot aot good", "d": "11/2017"}, {"body": "please read wrote", "d": "11/2017"}, {"body": "ocombe use cli", "d": "11/2017"}, {"body": "ocombe error using angularcompilerplugin plugin lazy loaded module contains imported module using jitcompilerfactory way exactly showed get error build jit atloader everything working need aot reproduce using lib forked refactor use jitcompilerfactory", "d": "11/2017"}, {"body": "using code get error error staticinjectorerror jitcompiler staticinjectorerror jitcompiler nullinjectorerror provider jitcompiler", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "confirm usable example plunker", "d": "11/2017"}, {"body": "sarunint module lazy bug appears lazy loaded module", "d": "11/2017"}, {"body": "lazy modified example little bit inspect browser inspector included screenshot case nt convinced enough", "d": "11/2017"}, {"body": "sarunint use jit aot", "d": "11/2017"}, {"body": "sarunint ca nt test systemjs bug appear using aot buildoptimizer flag", "d": "11/2017"}, {"body": "use ngtools package without cli use optimizations remove metadata compile aot modules want lazy load module aot compiled compile ngc directly ngtools bundle rollup webpack system js bundler closure compiler", "d": "11/2017"}, {"body": "think cli take use case consideration offer way bundle without removing metadata think open issue cli repository please", "d": "11/2017"}, {"body": "sarunint lazy mean loaded inside loadchildren router eg inside chunk case would work", "d": "11/2017"}, {"body": "able get work consider code module import compiler compilerfactory compileroptions angularcore import compilemetadataresolver compilerconfig jitcompiler ngmoduleresolver angularcompiler export function createcompiler compilerfactory compilerfactory return compilerfactorycreatecompiler providers provide compileroptions usevalue multi true provide compilerfactory useclass jitcompilerfactory deps compileroptions provide jitcompiler usefactory createcompiler deps compilerfactory provide compilerconfig usevalue new compilerconfig later following", "d": "11/2017"}, {"body": "claygifford works webpackjit use webpackaot get error modulenotfounderror module found error ca nt resolve angularcompilersrcconfig c projectsrcapplazymodule lt stack data omitted brevity gt resolve angularcompilersrcconfig c projectsrcapplazymodule parsed request module using description file c projectpackagejson relative path srcapplazymodule field browser nt contain valid alias configuration using description file c projectpackagejson relative path srcapplazymodule resolve module looking modules c projectnodemodules using description file c projectpackagejson relative path nodemodules field browser nt contain valid alias configuration using description file c projectpackagejson relative path nodemodules using description file c projectnodemodules angularcompilerpackagejson relative path srcconfig extension field browser nt contain valid alias configuration c projectnodemodules angularcompilersrcconfig nt exist ts field browser nt contain valid alias configuration c projectnodemodules angularcompilersrcconfigts nt exist js field browser nt contain valid alias configuration c projectnodemodules angularcompilersrcconfigjs nt exist json field browser nt contain valid alias configuration c projectnodemodules angularcompilersrcconfigjson nt exist directory c projectnodemodules angularcompilersrcconfig nt exist etc etc repeated multiple times", "d": "11/2017"}, {"body": "try look example request http transferstate", "d": "11/2017"}, {"body": "issue tracking angular project please take support questions one forums", "d": "11/2017"}, {"body": "gorniv tried issue http request sent twice server client", "d": "11/2017"}, {"body": "check network get post browser twice requested different originurl server browser", "d": "11/2017"}, {"body": "gorniv seems issue net core angular template", "d": "11/2017"}, {"body": "get first version transferhttp", "d": "11/2017"}, {"body": "idea transferstate repo works till angular issues angular ssr enabled thats primarily issue aspnet universal engine", "d": "11/2017"}, {"body": "seems like expected behavior ocombe could please make sure regression think also documented top level visible angulario root cause new date thu jan pst new date mon feb pst", "d": "11/2017"}, {"body": "regression code reason like comment code explains apply timezone shift end know problematic people added timezone parameter date pipe fix timezone see docs case believe happens saylight saving time shift date adjust current time settings", "d": "11/2017"}, {"body": "thanks help lot ca nt upgrade set timezone another pipe avoid behavior nevertheless usefull pet projects", "d": "11/2017"}, {"body": "templateref ngtemplate elementref native element", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "sandangel correct", "d": "11/2017"}, {"body": "linked", "d": "11/2017"}, {"body": "fixed via", "d": "11/2017"}, {"body": "fixed thanks reporting", "d": "11/2017"}, {"body": "still yields toxicable ocombe", "d": "11/2017"}, {"body": "fixed sorry confusion thanksgiving effect", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "issue angularangularcli repo please open new issue instead", "d": "11/2017"}, {"body": "issue tracking angular project please take support questions one forums", "d": "11/2017"}, {"body": "request author write samples use metadata", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "related difference read", "d": "11/2017"}, {"body": "mlcmlapis thanks reply least conceptually aware various dom encapsulation options available angular one point confusion however understanding viewencapsulationemulated default styling local components css applied fact encapsulation styling component level purpose consistent desired behavior component styling however applied within scope component even though elements rendered properly rendering within component scope would expect default emulated view encapsulation would behavior case missed behavior observed elements included component innerhtml binding styling performs expected otherwise understanding viewencapsulationnone global styles applied components would prefer connection missing would appreciate explanation link quite seeing possible possible accomplish attempting case knowledge would useful well note corrected typo example html element attempting display element bound variable innerhtml hidden may made concern unclear", "d": "11/2017"}, {"body": "geekmdio inscept source displayed page browser especially tag also concrete element see component css style named using name similar convention reason using applied ca nt directly work component styles scoping explanation viewencapsulationemulated mode encapsulate styles component mixing global styles expecting able parse html code update classes things relation actual component true read example", "d": "11/2017"}, {"body": "mlcmlapis thank time links cover content familiar last comment provide useful information say expecting innerhtml able parse html code update classes things relation actual component true exactly expecting appears order work would apply global style injected html selectors appended componentspecific string allows emulation view encapsulation native would decent option still supported select browsers thank time", "d": "11/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "11/2017"}, {"body": "issue tracking angular project please take support questions one forums", "d": "11/2017"}, {"body": "hello need look reproduction find causes problem setup minimal repro please", "d": "11/2017"}, {"body": "tinganho use systemjs without problem problem demonstrate simplest demo possible help plunker using systemjs create reproduction easily", "d": "11/2017"}, {"body": "ok try provide minimum verifiable repro", "d": "11/2017"}, {"body": "turned dependencies date thanks", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "take look btw tag github", "d": "11/2017"}, {"body": "also according docs current stable version causes links source invalid", "d": "11/2017"}, {"body": "fixed via", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "pls find attached demo code srczip", "d": "11/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "appears onpush component nt receive new input property indeed input properties angular nt produce update logic ngfactory nt appear template example compare", "d": "11/2017"}, {"body": "actually active property appear template ngif based component everything need order component rerendered really ca nt see use technique passing property via contentchildren really makes compound components great design pattern perfect usecase onpush component problem onpush problems contentchildrenviewchildren querylist nt know onpush regard specific component business nt impact property passed ca nt see active property parent template care child component matters input property changed matter passing properties without template binding needed lot situations end user nt responsible setting workaround", "d": "11/2017"}, {"body": "usergalileo ignore principally works follows changes especially reference changed pass object array change cd run", "d": "11/2017"}, {"body": "mlcmlapis nt ignore onpush works use really often sorry see example input property changing instead using template binding since get components contentchildren change property imperatively input passed component nt rerun cd also strange behaviors clicking item clicking another one reclicking previous one see accordioncomponentts input property passed click", "d": "11/2017"}, {"body": "usergalileo entirely accurate topic either say modifying class member directly angular change detection mechanism detect detect change occur binding entirely sure summon maximusk change detection god topic", "d": "11/2017"}, {"body": "thank sarunint appreciate however intended feature must say changed modifying instance members nt problem nt interfere cdsonpush waiting change detection god clarify thanks", "d": "11/2017"}, {"body": "usergalileo also related add following see cd also invoked asynchronously switched equivalent click export class togglecomponent input active false input title default title output setactive new eventemitter ngoninit settimeout gt consolelog async call thisactive true", "d": "11/2017"}, {"body": "wrote early angular wo nt check input nothing check means angular wo nt call updateprop inputs therefore component hidden change detection nt change component property directly place want abide unidirectional data flow", "d": "11/2017"}, {"body": "one solution togglecomponentts active boolean false input set active val thisactive val thiscdrefmarkforcheck thisactive val get active return thisactive constructor private cdref changedetectorref", "d": "11/2017"}, {"body": "alexzuza get onpush works marked bug nt feel right even nt pass prop template change detected get angular templatefocused kinda limiting also nt breaking unidirectional data flow child emits event subscribed parent parent passing props everydaysituation frameworks like react contentchildren way handling scenario result clarity thanks alternative solution settergetters actually developing anything component moment trying fix component trying say feel situation wrong change detection obviously imho since nt anything like shouldcomponentupdate react onpush best thing order performant components like work without workaround intended work like like others said maybe discuss make cd little better", "d": "11/2017"}, {"body": "usergalileo alexzuza right compiler nt way generate necessary information checking bindings since ca nt find bindings template even nt pass prop template change detected tightly bound input bindings important angular checks second part binding example first determine whether change detection run child component checking parent component nt show compiler parent property used update child input binding ca nt generate necessary information used checking parent inspecting child components nt enough mechanism change detection nt see way could changed read change detection operations everything need know change detection angular also simple example demonstrates limitation wo nt render name seconds remove change propagated limitation working dynamic components well export class appcomponent viewchild acomponent constructor settimeout gt thisaname updated component selector acomp template changedetection changedetectionstrategyonpush export class acomponent name jane read function shown alexzuza screenshot mechanics property bindings update angular comprehensive overview change detection read articles make angular change detection expert", "d": "11/2017"}, {"body": "hi maximusk thanks time also read blog posts time ago found useful well written however nt feel reliable behavior inspecting input child components nt enough exactly happens react react features use handle scenario purecomponents shallow check properties shouldcomponentupdate lifecycle hook hacking rendering process angular since nothing check us inside component since nt got hook rendering process purecomponents meant ones cdsonpush would nt right thing inspect inputs child components please nt get wrong love angular react sorry bringing libraries table feel kinda limiting see accordion example logic behind completely hidden accordion nt exposed developer dev nt care input property passed accordion see ways make work flawlessly stop using onpush components may projected knows point stop using onpush everywhere since everything projected hacking change detector nt feel right nt abused large applications ca nt see abuse", "d": "11/2017"}, {"body": "third distant option see third cds removes cd listens component inputs rerenders nothing thinking loud", "d": "11/2017"}, {"body": "usergalileo shouldcomponentupdate lifecycle hook hacking rendering process angular since nothing check us inside component component similar react called even change detection run utilize case export class togglecomponent active input active false input title default title output setactive new eventemitter constructor private cd changedetectorref ngoninit thisactive thisactive ngdocheck thisactive thisactive thisactive thisactive thiscdmarkforcheck read think ngdocheck means component checked read article information hook see accordion example logic behind completely hidden accordion nt exposed developer check ngxbootstrap implements accordion templates would nt right thing inspect inputs child components explained answer decision run change detection child component made checking parent component properties since unidirectional data flow defines strict update top bottom checking strategy makes perfect sense although may limiting times noticed", "d": "11/2017"}, {"body": "maximusk accordion example made purpose nt ways compound components beautiful design pattern makes lot components reusable accordion point asking onpush really makes sense would nt rely behavior honestly properties nt need bound parent template order rerender child absolutely understood cd works maybe something else could done order real pure angular components absolutely expert cd internals throwing tought would nt make sense components marked onpush third strategy let say cdspure broke bond parent change detector put listeners input properties way unidirectional data flow would remain access parent component via di could disallowed components would separate change detecor would nt start checking parent component inputs would make sense thinking loud", "d": "11/2017"}, {"body": "usergalileo solution showed point asking onpush really makes sense would nt rely behavior honestly make sense significantly increase performance users use components directly templates parents rest us work unusual use cases would nt make sense components marked onpush third strategy let say cdspure broke bond parent change detector put listeners input properties really read articles mentioned bond parent change detector angular checks parent component decides whether run change detection child component child input bindings verified running change detection child component means change detection always run child components anyways completely understand reasoning system designed certain way nt think changed sarunint entirely sure summon maximusk change detection god topic", "d": "11/2017"}, {"body": "maybe put wrong meant bond exactly stated would useful third cds could detach component removing need manually main change detection tree tree automatically listens component properties idea using onpush kinda scares knowing someone tries update component outside likely cause strange behaviors nt know thanks time understanding make sense significantly increase performance users use components directly templates parents increase performance indeed used correctly writing component nt want take responsibility props passed matter responsibility ca nt imagine writing lots components onpush see devs go crazy passing props component wants since every component transcluded potentially every component change children props imperatively take care using ngdocheck changedetectorref every component using onpush least know causing problem thank thing mind tells menot use onpush avoid strangee behaviors maybe change maybe something done future understand great amount work complexity cd know easy", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "tl dr prs welcome smiley still add manually browserchrome", "d": "11/2017"}, {"body": "thx see pr ca nt add manually firefox create extension search engine", "d": "11/2017"}, {"body": "right referring chrome grin", "d": "11/2017"}, {"body": "verified server side receiving customtoken null works fine jquery http method", "d": "11/2017"}, {"body": "use new httpclient one reporting deprecated removed eventually therefore wo nt fixes also code nt look like using", "d": "11/2017"}, {"body": "hi started httpclientmodule getting error moved httpmodule appmodulets pollserviceservicets imported getting error help", "d": "11/2017"}, {"body": "likely injecting http somewhere inject httpclient case come provide reproduction issue using plnkr stackblitz", "d": "11/2017"}, {"body": "arent adding expect created method scope using least variable bugissue using api wrong way please close", "d": "11/2017"}, {"body": "ocombe assigned issue think started looking", "d": "11/2017"}, {"body": "pr already igorminar would like wait maybe generate type files rather still far away discuss issue next week comes back", "d": "11/2017"}, {"body": "mxyzzhong idea sense btw many minutes save absolutely irrelevant tree shaking nonsense", "d": "11/2017"}, {"body": "mlcmlapis fact components used tree shaking needed used saving time making code prettier wonder throws error caused webpack angular", "d": "11/2017"}, {"body": "mxyzzhong save time way forward forget", "d": "11/2017"}, {"body": "yes supported metadata collector nt plan support", "d": "11/2017"}, {"body": "linhuiw interfaces typing things ts cleared away runtime", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "ok tks", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please report angularcli issues repo", "d": "11/2017"}, {"body": "plunker example running jit mode type checking aot mode done cli right get error", "d": "11/2017"}, {"body": "mhevery sorry added aot example original post possibly wrong angularcli tsconfig settings get types property binding reproduction steps download repo npm install npm run start navigate everything compiled fine aot even though second input child component date entered number field", "d": "11/2017"}, {"body": "reproduced editng using aot indeed angular problem rinfan could add repro repo original issue body reopen", "d": "11/2017"}, {"body": "clearly currently type checking properties otherwise would possible assign empty string property", "d": "11/2017"}, {"body": "trotyl nt think reopen someone else closed add aot repro steps op good idea", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "anyway thanks put stackoverflow", "d": "11/2017"}, {"body": "need provide services want ngmodule like module", "d": "11/2017"}, {"body": "toxicable ok angular provided service put list app module initial guess either would nt work cause undesired sideeffects update quick attempt viewcontainerref indicates add providers list regardless potential issues", "d": "11/2017"}, {"body": "import routermodule like normal lib different application regard", "d": "11/2017"}, {"body": "toxicable imported routing works fine long nt used library code problem importing already well library router module also imported library primary module makes difference", "d": "11/2017"}, {"body": "issue tracking angular project please take support questions one forums", "d": "11/2017"}, {"body": "mhevery due respect seems like bug angular previous member discussed expected already work posted gitter effect try stackoverflow opinion fact nt work major bug angular framework", "d": "11/2017"}, {"body": "issue viewcontainerref found use component contains ngfor angular library mhevery absolutely sure ca nt bug error originating template component", "d": "11/2017"}, {"body": "case someone using npm link following job angularclijson addreplace", "d": "11/2017"}, {"body": "skolpro try report results compiler seems traverse symlink fine runtime issues", "d": "11/2017"}, {"body": "bradleydotnet getting error runtime however seems really related npm link", "d": "11/2017"}, {"body": "skolpro mhevery worked great hopefully whatever caused issue first place resolved nt resort impossible find hack", "d": "11/2017"}, {"body": "use lazy load chunks", "d": "11/2017"}, {"body": "toxicable ca nt use globregex goal register unknown set components angular without keep set statements sync", "d": "11/2017"}, {"body": "angular remain statically analyzable angular dose nt know template compile time find compile", "d": "11/2017"}, {"body": "hope since compiletime step context deterministic resolved would play well aot might getting ordering webpack aot tooling wrong", "d": "11/2017"}, {"body": "nt es dynamically pass string however must able somewhat determine location module trying load build time webpack able make chunk external module lazy loaded understanding handled time webpack resolve module compiler compile passed webpacks loaders", "d": "11/2017"}, {"body": "hmm might talking different dynamic loader mechanisms referring synchronous nt create new chunk webpack nt allow anything ca nt determined compile time documented separate mechanism async imports perform code splitting allow dynamic module resolution runtime documented expect aot support thought could", "d": "11/2017"}, {"body": "probably temporary issue side maybe networkrelated normally looks pretty green grin", "d": "11/2017"}, {"body": "oh indeed works probably probed dev tools actually consistent yesterday though wonder caused", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "close duplicate mentioned gkalpak", "d": "11/2017"}, {"body": "yes issue closed solved updating typescript version exact version npm install typescript save latest release npm install typescript latest save", "d": "11/2017"}, {"body": "need use cases", "d": "11/2017"}, {"body": "see details need use trackby inside ngfor using array primitive types strings compared value removed dom every kaystroke note also lose focus every keystroke working component import component angularcore component selector myapp template export class appcomponent myarray trackarray index item return index", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "issue transitionanimationengine combination routing come back route animations added statesbyelement map leaves huge number elements detached dom", "d": "11/2017"}, {"body": "related issue", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "debatable decision team value empty nt return errors function responsible checking value see comment saying empty arrays considered empty value nt return error however agree empty array nt considered empty value simply array length easy adjust function modifying returned condition way", "d": "11/2017"}, {"body": "another solution could special case case would check empty input value check length make sense control optional must actually", "d": "11/2017"}, {"body": "mhevery provide empty zone implementation use ngnoopzone issue javascript global zone function noopzone wrap func return func global zone noopzone noopzonecurrent new noopzone provide version javascript global zone function noopzone wrap func return function const result funcapply arguments changedetectrefdetectchange global zone noopzone noopzonecurrent new noopzone", "d": "11/2017"}, {"body": "jialipassion instead creating noop mock remove code router seems like zonejs properly patch rx given patch rx seem like needed rewrite code way need", "d": "11/2017"}, {"body": "mhevery got look", "d": "11/2017"}, {"body": "thanks lot attention issue seems close", "d": "11/2017"}, {"body": "areksliwa pr correct merge issue closed automatically thank posting issue", "d": "11/2017"}, {"body": "fixed master seen seems change nt cherrypicked stable branch gets generated mhevery intentional something went wrong merge scripts", "d": "11/2017"}, {"body": "cherry picked branch nov", "d": "11/2017"}, {"body": "thx mhevery fix deployed stable well thx reporting", "d": "11/2017"}, {"body": "link app reproduces problem wambowams", "d": "11/2017"}, {"body": "add plnkr reproduction", "d": "11/2017"}, {"body": "revoke bug tracker access people indiscriminately spam people mentions bug reports", "d": "11/2017"}, {"body": "jisheedpdm check forgetting replace imports somewhere want use deprecated pipes import instead", "d": "11/2017"}, {"body": "going close nt reproduce scenario please open new issue following gh issue template problem persists", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "ok thanks", "d": "11/2017"}, {"body": "use httpclient need install httpclientmodule provides done application module necessary import see docs", "d": "11/2017"}, {"body": "realappie sure quite uncommon application module imports module forroot method another module uses could kind library etc would expect module imports depend onetime import application module", "d": "11/2017"}, {"body": "thomashilzendegen loaded lazy module level without instantiated lazy loaded module reset point view", "d": "11/2017"}, {"body": "mlcmlapis yep true bug intended solution beside must import httpclientmodule anywhere else app module case also documented way", "d": "11/2017"}, {"body": "thomashilzendegen actually intended cases need communication server probably need also directly main app one two lazy loaded modules right would general create new request new feature actual moment sure level priority", "d": "11/2017"}, {"body": "mlcmlapis funny thing breaks currently httpclientmodule app module see plunker lazy loaded module imports module imports httpclientmodule interceptors gone multiproviders nt look injector inheritance guess", "d": "11/2017"}, {"body": "thomashilzendegen", "d": "11/2017"}, {"body": "mlcmlapis realappie least docs updated warn importing eg also lazyloaded module add section issue possible reason interceptor might loaded", "d": "11/2017"}, {"body": "macjohnny actually nt imported lazyloaded module directly lazyloaded module uses module imports httpclientmodule think dangerous part may know module imports httpclientmodule code example without look", "d": "11/2017"}, {"body": "thomashilzendegen macjohnny standard structure access di nt probably actually real case access way repeat importing nt know least", "d": "11/2017"}, {"body": "mlcmlapis sorry follow argument think importing module imports httpclientmodule valid use case fact faced exactly situation found issue", "d": "11/2017"}, {"body": "macjohnny could happen course still describe scenario bit understand happened real case", "d": "11/2017"}, {"body": "mlcmlapis app module added provider custom interceptor lazyloaded feature module imported httpclientmodule result custom interceptor provided feature module solition remove import feature module thomashilzendegen stated situation even harder figure importing module festure module module imports httpclientmodule", "d": "11/2017"}, {"body": "macjohnny thanks yes hidden dangerous part notified explicitly doc app architecture still ca nt see reason import except main app module always use di module importing module somewhere else probably mistake", "d": "11/2017"}, {"body": "mlcmlapis agree mistake import module app module however providing forroot method providers would prevent situation alternatively could throw error since stated mistake silently allowong withiut warning lead hardtofind effects especially including eg library imports dangerous", "d": "11/2017"}, {"body": "issues exactly happened", "d": "11/2017"}, {"body": "intended behavior", "d": "11/2017"}, {"body": "mhevery ok maybe infoexplanation handled intended saying intended behavior closing quite satisfying issue tenor import bootstrapping module never anywhere else would kind confirm least thanks help", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "reading correctly think bit different discussion mentions sibling components even components outside parameters described issue reachable navigate chain feature request making present child explicitly referencing unnecessary", "d": "11/2017"}, {"body": "juleskremer advertising next ngconf", "d": "11/2017"}, {"body": "stephenfluin apologies basically office since ac stephen amp take care", "d": "11/2017"}, {"body": "use service workers dev mode cli explicitly disabled even build support work unless set", "d": "11/2017"}, {"body": "ocombe could take one please", "d": "11/2017"}, {"body": "source docker image run circleci tue nov igor minar notifications githubcom wrote ocombe could take one please receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "issue want use class needs instance class building application work launch module providers first launch without including build failed provider defined httphandler moment include providers building works nt relaunch ide vscode still tell class provided", "d": "11/2017"}, {"body": "yeah much results experiencing", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "able execute simple code actually get following error message console guess related bug", "d": "11/2017"}, {"body": "injecting class actually returns empty object", "d": "11/2017"}, {"body": "benplummer import module", "d": "11/2017"}, {"body": "alexandredenis yeah implemented followed guide using httpclient went multiple stack overflow questions around subject area found nothing", "d": "11/2017"}, {"body": "sorry supported use case", "d": "11/2017"}, {"body": "angular related seems ios issue therefore closing", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "krzsobin could please add use case former issue close one", "d": "11/2017"}, {"body": "ok", "d": "11/2017"}, {"body": "think asking component child current behavior design since acts like anchor rather container directives ca nt dynamically added container", "d": "11/2017"}, {"body": "workaround include ejecting", "d": "11/2017"}, {"body": "josephliccini one using angular resources like", "d": "11/2017"}, {"body": "ah see makes sense intentionally separated tsx files cases described yes makes sense sent iphone nov pm trotyl yu notifications githubcom wrote josephliccini one using tsx angular resources like appcomponenttsx appmoduletsx receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "trotyl see resource document angulario using angular tsx possible found often use inline template formatted prettier ca nt wait pr merged", "d": "11/2017"}, {"body": "sandangel using tsx angular project mean using tsx create component view different tickets combine angular libraries making extensions allowing suffix basis enhanced", "d": "11/2017"}, {"body": "sorry problem seems different one please provide valid reproduction use template starting point", "d": "11/2017"}, {"body": "also nt work angular projekt firefox console shows something like httpheadersprototypekeys length name prototype object proto function firefox dev tools shows following response headers", "d": "11/2017"}, {"body": "look logging headers nt going show correctly lazily parsed", "d": "11/2017"}, {"body": "get lazy parsing resheadersget authorization also nt work though", "d": "11/2017"}, {"body": "galexmes screenshot definitely misusing must provided response request preflight must provided response request never show response", "d": "11/2017"}, {"body": "far see also possible add header post get request look using firefox dev tools authorization header present environment angular version tooling issues node version platform windows others angularcli node os angularcdk angularcli angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularlanguageservice angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter", "d": "11/2017"}, {"body": "cors headers added response related angular adding wrong place", "d": "11/2017"}, {"body": "trotyl first comment tried also nt work played little bit around right screenshot good change tomorrow second comment think completly correct exaple used request anyway second example want show also possible add header request definitly possible independent cors headers maybe different issue thought may related one", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "see", "d": "11/2017"}, {"body": "set called", "d": "11/2017"}, {"body": "please attach minimal repro issue", "d": "11/2017"}, {"body": "sure one angular change see change take effect angular", "d": "11/2017"}, {"body": "think behavior might slightly different placed issue notably numerals latin arabic nt think text might wrong", "d": "11/2017"}, {"body": "tests farsi fortunately farsispeaking team member expert means learning along major inconsistencies seeing calendar farsi set solar hijri calendar angular locale pipeline still set gregorian calendar literally june farsi would put date solar hijri calendar solar hijri month year seeing correct date correct calendar incorrect numerals example numbers etc placed date number instead converted arabic numerals ie suppose gregorian calendar date must remain least numerals could arabic numerals would best solar hijri month year arabic numerals noted dates still understandable angular context user would take additional conversion may fit context rest software ecosystem os software etc", "d": "11/2017"}, {"body": "angular dropped intl api favor data exported unicode common locale data repository cldr please check changelog details", "d": "11/2017"}, {"body": "sarunint thank reply yes understand changed use cldr filing behavior cldr incorrect described ie start new angular app prepare localize arabic farsi cldr see inconsistencies", "d": "11/2017"}, {"body": "also happens latest version since get code head", "d": "11/2017"}, {"body": "documentation autogenerated foreach wa nt listed due nonpublic api angular introducing new public api one", "d": "11/2017"}, {"body": "mralien works expect", "d": "11/2017"}, {"body": "tytskyi yes thanks works fine unexpected ngform behavior", "d": "11/2017"}, {"body": "tytskyi nice trick case someone else looking changed plunkr added view component", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "toxicable posted issue stackoverflow answer received use hostlistener fine think using either browser tabs backforward buttons run canactivate guard hostlistener solution requires reloading page every time", "d": "11/2017"}, {"body": "toxicable fyi stackoverflow post", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "spent lot time discussing branding past resulted branding guidelines published year ago expected take time guidelines get widely adopted reality highly visible resources updated use branding correctly long time ago since seen good adoption guidelines currently intention change see someone using terminology incorrectly help pointing blog post mentioned thank", "d": "11/2017"}, {"body": "nt", "d": "11/2017"}, {"body": "hopefully change mind", "d": "11/2017"}, {"body": "definitey something would interested need come good process short term areas focus eventually come see", "d": "11/2017"}, {"body": "gkalpak since acts demo angular best practice fulfill angular", "d": "11/2017"}, {"body": "nt angular applies talking ui app content comes processed files source code comments main problem keep translations uptodate use translations sure going compromizes hope able come goodenough process", "d": "11/2017"}, {"body": "jenniferfell", "d": "11/2017"}, {"body": "gkalpak found someone already incompletely see seems like stopped months ago anyway used jade files translation continue files contact supplement translating complete jade files useful cli alignment done think could reorganized plan localization wondering whether preparation like good process", "d": "11/2017"}, {"body": "nt know much effort files used old site using files different tools plus content changed lot since suggest wait find better process handle continuing old files could mean lot wasted time effort", "d": "11/2017"}, {"body": "got thank", "d": "11/2017"}, {"body": "bug looking workaround", "d": "11/2017"}, {"body": "relates", "d": "11/2017"}, {"body": "intent refactoring make publicly available point point confidence new api lot devs using pipes format dates amp numbers code today definitely good thing", "d": "11/2017"}, {"body": "idea put date functions service rather exporting bunch functions due services tree shakable nt proceed maybe thing could take look back", "d": "11/2017"}, {"body": "injection date pipe solved problem thank although perspective solution looks like workaround glad hear plans make format api public", "d": "11/2017"}, {"body": "seems problem webpack installing local file path error happens publish install via npm works perfectly", "d": "11/2017"}, {"body": "also problem solution work local file path far", "d": "11/2017"}, {"body": "alejandromoran using angular cli try option", "d": "11/2017"}, {"body": "thanks trotyl working", "d": "11/2017"}, {"body": "alejandromoran trotyl yes preservesymlinks works great alternatively could use works well", "d": "11/2017"}, {"body": "angular issues meant support questions", "d": "11/2017"}, {"body": "closing actionnable reopen numbers two things consider bleeding edge chrome prerequisite use angular fast recent enough supported browsers calling dynamic version also perf impact call site need create array time create array amp memory pressure", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "please define engine color properties class without using ts shorthand syntax", "d": "11/2017"}, {"body": "thanks response tried simple interface still getting issue please suggest interface icustomer id number name string c function exports require module filename dirname interface icustome r syntaxerror unexpected identifier createscript objectruninthiscontext modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload functionmodulerunmain startup", "d": "11/2017"}, {"body": "please help thanks", "d": "11/2017"}, {"body": "hpyou thank posting issue check one", "d": "11/2017"}, {"body": "webpack guide removed soon please refer information", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please respect issue template thank", "d": "11/2017"}, {"body": "hi eric thanks review follow adding attribute name combination formcontrolname side effect radios check radio value reactive form model anymore radios suddenly unchecked seems like name formcontrolname supposed used together radios ok solved weird illl explain angular requires name formcontrolname equal used together maybe smart reactive form ngfor looping models radios ca nt use radio name need index see code thus formcontrolname equal suddenly break pattern use attrname force name think weird", "d": "11/2017"}, {"body": "hmm part seems nt work demonstrated", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "try font loading strategies", "d": "11/2017"}, {"body": "place fontawesome used contributor component save downloading file perhaps could embed icons save downloading", "d": "11/2017"}, {"body": "next thing droid sans mono nt appear free font google fonts page even allowed use nt replaced roboto mono", "d": "11/2017"}, {"body": "finally minor issue google fonts provides different font css depending upon browser would need provide comprehensive css fancy work firebase functions ensure fonts compatible browsers", "d": "11/2017"}, {"body": "see progress issue", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "sorry issue caused angular please contact author project file issue issue tracker", "d": "11/2017"}, {"body": "toxicable sure could expand bit fact thought first time however good look noticed theorically option get since part event", "d": "11/2017"}, {"body": "angularrouter one specifically apart matters since rxjs angular messing type angular", "d": "11/2017"}, {"body": "aha missed part thanks create issue", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "cc toxicable vikerman", "d": "11/2017"}, {"body": "hi current way would make task appear macrotask zone approach took wrap httpclient implementation server sufficient solution use case", "d": "11/2017"}, {"body": "great probably throw together guide universal repo example much trouble could throw together short description methodclass use maybe google doc work practical example post guide repouniversalstarter", "d": "11/2017"}, {"body": "vikerman also mean possible solution wrap httpasync calls zonejs microtasks", "d": "11/2017"}, {"body": "able throw together doc next week go examples folder angularuniversal starter remains simple angularuniversal says rendering waiting ajax data sure means use httpclient everythign work use library wrapping zone macrotask way go", "d": "11/2017"}, {"body": "maciejtreder recall believe responsibility feature detect whether browser support service worker may help great progressive web app experiences angular google io", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "11/2017"}, {"body": "problem simple correct nodemodules angularcommonbundlescommon function global factory typeof exports object amp amp typeof module undefined factory exports require angularcore require rxjsobservableof require rxjsoperatorconcatmap require rxjsoperatorfilter require rxjsoperatormap require tslib require angularcommon require rxjsobservable typeof define function amp amp defineamd define angularcommon exports angularcore rxjsobservableof rxjsoperatorconcatmap rxjsoperatorfilter rxjsoperatormap tslib angularcommon rxjsobservable factory factory globalng globalng globalngcommon globalngcommon globalngcommonhttp globalngcore globalrxobservableprototype change globalrxobservable globalrxobservableprototype globalrxobservableprototype globalrxobservableprototype globaltslib globalngcommon globalrx function exports angularcore rxjsobservableof rxjsoperatorconcatmap rxjsoperatorfilter rxjsoperatormap tslib angularcommon rxjsobservable use strict", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "actually posted stackoverflow last week didnt get answer link", "d": "11/2017"}, {"body": "look around google bit theme discussed hundreds times nt know start maybe link helps simplified sample solution using presented angular connect", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hi jmac sure chromium would differently tried gave error", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hi jackjoy track duplication modules also npm webpack issue come works prev version angular", "d": "11/2017"}, {"body": "first project worked well angular upgrade nodejs nodejs reinstall dependencies angular upgrade dev mode staticinjector errors occurred browserbut production mode aot ok first thought angular issuebut investigation found one dependency lib package use folder reference eg xxxx file normal package versionthis cause webpack duplicate modules lazy loading bundles nodemodules xxxx lib project folder app project nodemodules folder finally changed reference normal format package version works fine nowi sure root cause nt know webpack strange behaviors case may different check duplicate code seperate bundles", "d": "11/2017"}, {"body": "jackjoy thanks going take look let know", "d": "11/2017"}, {"body": "anything new issue actually struggling problem", "d": "11/2017"}, {"body": "also issue chasing days debugging painful yielded detailed info original error message hopefully resolved capable returning meaningful error next update someone kind points collectively something stupid simple one line fix", "d": "11/2017"}, {"body": "nivida nt found solution", "d": "11/2017"}, {"body": "testing many angular versions firebase versions actually package combination works aot jit", "d": "11/2017"}, {"body": "wow great nivida let give try", "d": "11/2017"}, {"body": "initial issue caused ngxmask checked common libraries set debug points creation injectortokens ngxmask culprit removal results perfectly functional app suspect loading ngxmaskmodule without forroot well adding root let hit creation maskservice matter provided always undefined give similar stacktrace blowing trying map undefined pointing source issues finally could confirm replicating end checking value config hit would appreciate would like see reproducible unique existent thread regarding update findings checking functional replacement submitting pull request necessary fixes edit ngxpipes since patched clean npm install bumped resolved missing config issue functions thanks nivida would suggest still getting error confirm nt modules omitting forroot adding likely generate meaningful error", "d": "11/2017"}, {"body": "hi caseypav right culprit ngxmaskmodule solved upgraded added forroot module import", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation probably", "d": "11/2017"}, {"body": "yes already implemented still issue per documentation httpclientmodule please see section bold either bug invalid documentation security xsrf protection crosssite request forgery xsrf attack technique attacker trick authenticated user unknowingly executing actions website httpclient supports common mechanism used prevent xsrf attacks performing http requests interceptor reads token cookie default xsrftoken sets http header xxsrftoken since code runs domain could read cookie backend certain http request came client application attacker default interceptor sends cookie mutating requests post etc relative urls gethead requests requests absolute url take advantage server needs set token javascript readable session cookie called xsrftoken either found another bug report httpclient httpxsrfinterceptor set xsrf token absolute urls duplicate issue", "d": "11/2017"}, {"body": "also facing issue angular see cookie response headers posting data angular adding appropriate headers also tried httpclientxsrfmodule", "d": "11/2017"}, {"body": "bug issue", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template please open angularcli related issue repo", "d": "11/2017"}, {"body": "thanks quick response opened issues angularcli", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "duplicate think", "d": "11/2017"}, {"body": "closed duplicate", "d": "11/2017"}, {"body": "would angular benefit", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "petrovicivan still js array use methods vanilla js like mapping vector map order index constructed unique keys schema able use something like reorder mapping vector want user wants see result still direct access", "d": "11/2017"}, {"body": "please keep github issues bug reports feature requests better avenues troubleshooting questions stack overflow gitter mailing list etc", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "closing duplicate pr progress straight forward grin", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "please provide plunker reproduces problem", "d": "11/2017"}, {"body": "nhducseuit actionable without sort code example closing please feel free open new issue plunkerstackblitzequivalent us look", "d": "11/2017"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "11/2017"}, {"body": "go click kill button observe error message console", "d": "11/2017"}, {"body": "mhevery provided sandbox good enough", "d": "11/2017"}, {"body": "possibly duplicate", "d": "11/2017"}, {"body": "looks like yes one one think ok keep", "d": "11/2017"}, {"body": "closing duplicate yes reproduced would nt change router would changed behavior", "d": "11/2017"}, {"body": "case angular needs calculate styles explicitly set provided used animation implicitly documentation style function autostyles using asterix character used value detected element animated applied animation data animation starts feature proves useful state depending layout andor environment factors cases styles calculated animation starts angular uses windowgetcomputedstyle calculate property value autostyles returns empty string property firefox property value empty string angular sets element noopanimationplayer used animation play property longhand property ignore empty value according specification css object model returns longhand properties iterate numeric indexes property chrome firefox access property directly nonempty value chrome empty value firefox rely across browsers workaround use longhand properties", "d": "11/2017"}, {"body": "mham changed explicit width still nt work", "d": "11/2017"}, {"body": "mohammedzamakhan property correct problem property workaround expand mhevery think angular bug reopen issue", "d": "11/2017"}, {"body": "already exists issue margin padding shorthand properties working ff ie", "d": "11/2017"}, {"body": "escalate get fixed next release", "d": "11/2017"}, {"body": "could nt one sure set dynamically though maybe", "d": "11/2017"}, {"body": "josephliccini last time tried recently nt working fully yet try instead", "d": "11/2017"}, {"body": "webpack cli uses default support deprecated", "d": "11/2017"}, {"body": "oh need using ts", "d": "11/2017"}, {"body": "ahhh ok see working think cli last tried however tagetting esnext means wont used long time though", "d": "11/2017"}, {"body": "josephliccini set locale id dynamically module component ts export function getlocale return frfr provide localeid usefactory getlocale", "d": "11/2017"}, {"body": "ocombe could combine service say get locale api via resolve perhaps", "d": "11/2017"}, {"body": "work webpack project generate chunks locales automagically might want add better locale get locale crude version uses browser locale might always mapped locale files keep first part locale fr frfr case detecting locale synchronous change order providers use async service nt forget delay rendering app though ts import ngmodule appinitializer localeid angularcore import registerlocaledata angularcommon import browsermodule angularplatformbrowser import formsmodule angularforms import appcomponent appcomponent import hellocomponent hellocomponent declare var system export class localeservice getlocale string typeof window undefined typeof windownavigator undefined return undefined export function localeidfactory localeservice localeservice return localeservicegetlocale export function localeinitializer localeid string return promise gt return new promise resolve reject gt systemimport module gt registerlocaledata moduledefault resolve reject ngmodule imports browsermodule formsmodule declarations appcomponent hellocomponent bootstrap appcomponent providers localeservice provide localeid usefactory localeidfactory deps localeservice provide appinitializer multi true usefactory localeinitializer deps localeid export class appmodule", "d": "11/2017"}, {"body": "make sense enjs somehow included automatically default eg make sense", "d": "11/2017"}, {"body": "enus data included framework yes right nt register", "d": "11/2017"}, {"body": "ocombe expand bit us less proficient angular users", "d": "11/2017"}, {"body": "unfortunately couple issues files nt seem named would expect assume example getting language part example culture dede available de problem cultures completely different language different region spanish good example issue generated js files angular cli revisioned means even wanted download language de would still throw file called starting feel like maybe large company support numerous cultures going luck angularjs much easier handle since json data", "d": "11/2017"}, {"body": "point issue opened agree something point hu example work since webpack generates chunks update code consequence probably put files specific folder another issue generate files good imported bad want lazy load since format usually supported browsers another thing need change somehow", "d": "11/2017"}, {"body": "ok error message said could find dedejs dede exist changed de fine concerns invalid issue resolved thanks help", "d": "11/2017"}, {"body": "ocombe might getting something mixed input format locale files nt matter since transpiled default run webpack", "d": "11/2017"}, {"body": "karelz november prashantchoudhary related net core problem managed code js", "d": "11/2017"}, {"body": "webpack issue step called dotnet core startup section posted dotnet section template dotnet core angular webpack mostly webpack", "d": "11/2017"}, {"body": "vikerman suggest something like", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please read docs", "d": "11/2017"}, {"body": "okay thank closing issue correct venue", "d": "11/2017"}, {"body": "parameter actually called code docs automaticaly generated source code anyway reason using overloaded method first argument either string method request closing since current behavior intended", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please respect issue template thank", "d": "11/2017"}, {"body": "face issue thought library issue", "d": "11/2017"}, {"body": "facing issue compile library ngc generates metadatajson files null value files angular gt generate metadatajson files files edited library built typescript compiled angular compiler classesinterfaces defined inside namespace compile code angular ngc compiler generates filenamemetadatajson file contains null value use library angular application gives error null metadatajson file typeerror read property version null note working angular also use typescript compiler tsc even generate metadatajson file", "d": "11/2017"}, {"body": "facing issue really sure use given workaround estimate fixed released", "d": "11/2017"}, {"body": "also angular automatically adds classes expected write css around fine starting scratch know using angular however think many companies use enterprisewide css want use already built tested external css would good allow adding custom classes automatically example case input field class situation classes form submitted btw think exists", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please nt open issues kind questions thank", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "hi staeke regarding mention input output docs work related pr inputoutputmd speak docs part thanks bringing", "d": "11/2017"}, {"body": "staeke think happens update lifecycle hook confirm statement true think using want always asynchronous even trigger outside lifecycle hook etc solution using function wraps call makes need update parent state however veryvery rare case parent operate childrens initialization viceversa think documentation clarified way component update parent state component lifecycle hook synchronously however idea details fit documentation documentation already pretty huge moment putting sentences paragraph found end readers ideas", "d": "11/2017"}, {"body": "tytskyi thanks reply think happens update childchildoutput child lifecycle hook right think documentation clarified way component update parent state component lifecycle hook synchronously however idea details fit documentation documentation first think difficult big enough knowledge domain require page documentation something like data flows inputsoutputs one paragraph could specifically error would linked actual exception message console thus users would find least stumble upon secondly users looking documentation need know solve problems primarily words common scenarios face problem would solve let give example concrete example headercomponent button opens welcomeguidecomponent welcomeguidecomponent also opened means eg internal keyboard shortcut listener sets via query param changes headercomponent responsible giving initial value whenever open headercomponent button special css class naturally think people would try something like welcomeguide checks queryparams emits initial breaks disagree would rare contrary impression think results stack overflowgoogle support quite common telling people component update parent state component lifecycle hook synchronously albeit correct helpful user solve seems general consensus recommended sources use discussion sake let broaden bit say multiple welcomeguide components one visible time thus little keeps track active broadcasts events active one components every component responsible listen events close needed use lies responsibility maybe say rule must side effects outside component synchronous result ngonchanges sounds complicated realize job fine let assume state indicate several open initially see display event asynchronous see un unfortunate flicker first render since appear dom closed one next tick damned damned nt moving another point let get back original case make eventemitter asynchronous bad code may seem contrived seen similar cases real life error hard debug browser likely freeze supported synchronous events would possibility build detector angular style throw error get back various solutions outlined initial post pros cons met le reiterate tell people must side effects outside component synchronous result ngonchanges run etc appropriate solves problems complex understand angular users one easy single solution scenarios solved result undetected asynchronous infinite loops support better angular solves problem simple angular users enables building guards asynchronous infinite loops miss valid cons second one", "d": "11/2017"}, {"body": "example fullname impure function therefore way track cached value needs invalidated", "d": "11/2017"}, {"body": "furthermore replace getter pure function able compare args know refresh cached value something looks like const fn descriptorvalue let valuecache null let argscache descriptorvalue function wrapper args arrayscontainsameitems args argscache return valuecache argscache args arrayscontainsameitems fn running probably expensive calling function first place since args passed array cant object ref either conclusion work decorator opinion could cache value somewhere else yes ngrx would prefect fit", "d": "11/2017"}, {"body": "one small thing kind operations nt slow might think machine got operationss operation one full run test per op tests therefore showing hundred extra checks app really wont slowing", "d": "11/2017"}, {"body": "vuejs example html original message message computed reversed message reversedmessage vue computed property cached based dependencies messages value changes reversedmessage recalculated angular work way building dependencies tree properties marked decorator", "d": "11/2017"}, {"body": "toxicable real word applications depending data get big performance decrease common array operations like", "d": "11/2017"}, {"body": "angular work way building dependencies try properties marked computed decorator stated way angular magically track fields arbitrary function depends sounds like need look using angular current api onpush see reason examples need getters specifically tracked ref massively faster forms tracking changes", "d": "11/2017"}, {"body": "right see vuejs properties data object reactive know reactive property used possible reactive computed decorators js import computed reactive angularcore class mycmp simpleproperty hah reactive firstname hello reactive lastname angular computed get fullname return btw using onpush help still get lot recalculations every event inside component ie input change click", "d": "11/2017"}, {"body": "want already provide observables already handle reactivity us btw using onpush help still get lot recalculations every event inside component ie input change click must misunderstand onpush based input components object refs therefore using reactive immutable data yields high perf would suggest reading onpush", "d": "11/2017"}, {"body": "simple example using onpush open console see talking know push immutable data works point mobx vuejs computed getters easy natural use work plain objects probably try understand feelings", "d": "11/2017"}, {"body": "anjmao actually taking advantage onpush app would run exactly without", "d": "11/2017"}, {"body": "take read", "d": "11/2017"}, {"body": "btw using onpush help still get lot recalculations every event inside component ie input change click angular calls markforcheck events component checked", "d": "11/2017"}, {"body": "toxicable updated example better understand idea looks using mobx example totalsum recalculated numbers array changing know possible achieve angular js class pagestate observable numbers action addnumber number thisnumberspush number computed get debug return thisnumbersjoin computed get totalsum consolelog called totalsum return thisnumbersreduce c n gt c n component selector citiespage changedetection changedetectionstrategyonpush template export class citiespagecomponent state new pagestate", "d": "11/2017"}, {"body": "anjmao understand mean click button runs method directly related updated means directly control change want add new number something recognize happened reaction updated also try history called also implemented browsers later one year removed specs removed also browsers example looks like want exactly situation simpler code makes change also directly update sync use pattern async opperation use case probably nonsense use anything else simple property template nothing else", "d": "11/2017"}, {"body": "completely understand issue anjmao responses see nt solve make invalid problem similar issue array used model list checkboxes like disable buttons none checkboxes checked convenient solution write getter uses determine anything selected getter gets executed every cd round every binding several buttons dev mode twice however vuejs solve problem either since nt watch array index access nt know mobx", "d": "11/2017"}, {"body": "finally somebody understands problem thank ribizli mlcmlapis example mobx totalsum getter recalculated change first input value whole reason computed properties make state simpler syncing properties instead allowing calculated depending current state", "d": "11/2017"}, {"body": "anjmao understand mean js construct called code would look", "d": "11/2017"}, {"body": "guess something equivalent aurelia computedfrom decorator", "d": "11/2017"}, {"body": "angular batching via vm dataflow zones interact dom directly also see", "d": "11/2017"}, {"body": "please look changelog support added long time ago", "d": "11/2017"}, {"body": "interestingly seems still peerdepend maybe ommission switching indeed still issue latest version please open bug report inmemorywebapi repo", "d": "11/2017"}, {"body": "implementation already includes inner using works automatically", "d": "11/2017"}, {"body": "plus mlcmlapis commented mixing lettable operators prototype patching method use one case mentioned example", "d": "11/2017"}, {"body": "oh ok maybe read upgrade recommandations quickly moving angular thank much", "d": "11/2017"}, {"body": "binarydigits inapropriate usage form knows nothing inner actually registered input provide need use validators right however loose validation status inside template offtop nt need add pattern validator already adds", "d": "11/2017"}, {"body": "tytskyi hi oleksandr thank reply offence simply restated problem plnkr need use validators right zip larger forms many different components validate data regular expressions comes different services put parenthost component overkill believe angular introduced ngvalidators provide custom validation notify host form state controls validinvalidetc need move validation input components make sure host form knows state control reflects form validation state thoughtsideas issue hand thank time", "d": "11/2017"}, {"body": "binarydigits get injector custom component get hook like access", "d": "11/2017"}, {"body": "hi mlcmlapis still sure access form control name zippostal code input affect state host form could clarify fork plnkr code please component access functions properly comes validation state problem host form react state form control custom input component", "d": "11/2017"}, {"body": "slavafomin hi similar issue wonder could take look plnkr point form state react validation state custom input component thank", "d": "11/2017"}, {"body": "binarydigits want custom form control always come validation route way go problem example providing component without actually implementing interface words need method component forms api knows validate control updated example alternative validating top level tytskyi mentioned closing works intended", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "wow pretty weird idea aframe nt use properties nonstring values instead", "d": "11/2017"}, {"body": "tbh idea perhaps ngokevin utopiah shed light", "d": "11/2017"}, {"body": "aframe integrates ecs game development pattern html html attribute component bundle logicdata components multiple properties aframe wraps take object want set multiple properties still take string data defined string form", "d": "11/2017"}, {"body": "see thx clarifying still feels bit odd overwrite fundamental method instead using custom method example guess pros cons approach always case trying augment platform something designed smiley back people give perspective omitting tostring call", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "part general information part b information fund part c schedule portfolio investments dev", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "stevevanopstal according commit result expected nt look like bug docs also mention styles specified component metadata apply within template component info check amp want apply childs note deprecated use still works explicitly apply style inner component using see note find odd behavior differs vicb reason differs native behavior changed since time commit merged coz looks like docs also incorrect look perspective styles specified component metadata apply within template component looks like true native viewencapsulation", "d": "11/2017"}, {"body": "apparently behavior different u add emulated directive inside native one probably nt supported use case guess", "d": "11/2017"}, {"body": "created plunker explicitely states child component viewencapsulation parent results behaviour described docs css applied child however expected child take viewencapsulation parent default case", "d": "11/2017"}, {"body": "sounds like usage error show failing test ideally put minimal reproduction repo clone investigate", "d": "11/2017"}, {"body": "ok show minimal reproduction repo little bit later", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "trotyl nt think particular error miss something", "d": "11/2017"}, {"body": "gkalpak right indeed one included", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "pipe used twice get executed twice even dev mode", "d": "11/2017"}, {"body": "angular suggest case obliged call twice", "d": "11/2017"}, {"body": "amineparis basically two types pipes impure pipes called every cd cycle pipe example pure pipes called hook detects changes", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "marked feature request trying use pipe way intended date comes server side probably transform server side create pipe client side", "d": "11/2017"}, {"body": "rkonstantinov could try attached override thank zonejszip", "d": "11/2017"}, {"body": "jialipassion thanks unfortunately leak still although looks bit differently wink see bellow", "d": "11/2017"}, {"body": "rkonstantinov confirmed still exists believe hold add button following code detached dom gone think updated resolved involved memory leak make pr resolve repo thank posting issue", "d": "11/2017"}, {"body": "issue form set autosubmit using dynamic list controls using replace triggers causing infinite submission loop", "d": "11/2017"}, {"body": "way current workaround subscribe instead use observable trigger change handlers form controls list two dropdowns feasible still better tell emit events", "d": "11/2017"}, {"body": "ts version using", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "duplicate edit since closed fine track", "d": "11/2017"}, {"body": "one possible workaround compile ngc module next step compile tsc code systemamd tsconfig allowjstrue work", "d": "11/2017"}, {"body": "also issue firefox using firebase disable serviceworker firebase data appears chome issues angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router serviceworker angularcdk angularcli angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack firebase firebase unregister ngswworkerjs firefox latest firebasefirestore data works expected otherwise page links appear without data chrome works expected without issues firebase issues chrome assume cached serviceworker dynamic data default sure firefox issue dynamic data ignored ngswjson experimenting adding datagroups apear resolve firefox issue clear documentation revised tool like ngpwatools google io video stephen fluin alex rickabaugh would great ngpwatools dynamic data prepared along router links sure new ngswjson prepare router links well firebase serverside dynamic data worked fine firefox using ngpwatools attempt use ngpwatools longer appear work latest firebasefirestore produced error nodemodule addition following angular connect video maxim salnikov got exploring latest angular cli build hoping newer angular cli release make serviceworkers default also hoping documentation describe use cache static router links dynamic push notifications firebase node servers also angular cli swtooling support configure needed addition manage sw updates needed security also importance thanks help example ngswjson added datagroups help firebasefirefox issue sure correct different ngpwatools index indexhtml assetgroups name app installmode prefetch resources files faviconico indexhtml versionedfiles bundlecss bundlejs chunkjs name assets installmode lazy updatemode prefetch resources files assets datagroups name apifreshness urls cacheconfig maxsize maxage timeout strategy freshness", "d": "11/2017"}, {"body": "bad problem condition cant processed aot", "d": "11/2017"}, {"body": "came across angular well", "d": "11/2017"}, {"body": "seems bug also affects looking methods call populates without clearing workaround create params class contains proxy httpparams really ideal immutable object modified eg public tostring string thisapplyupdates return thisproxytostring private applyupdates void thisproxy new httpparams fromstring thisproxytostring", "d": "11/2017"}, {"body": "think chrome decision display browser search box way inevitably obfuscate whatever currently placed top rght corner page nt see reason keep top right corner page empty", "d": "11/2017"}, {"body": "people look responsive pages desktop computer chrome reading left right screens larger disable justifycontent flexend", "d": "11/2017"}, {"body": "still nt understand reasoning searching chrome close chrome search box searching chrome nt really care search box prefer search box predictable position clearly decoupled nav items ux strong suite grin others think", "d": "11/2017"}, {"body": "agree gkalpak nt see would need leave chrome search box open sitewide search", "d": "11/2017"}, {"body": "search get hit lot items long pages use page search ctrf search page want return searchbar show look another item see search anymore gkalpak ux one stronger points", "d": "11/2017"}, {"body": "chrome search focus simply hitting escape key hides moreover see actually using mouse refocus aio search box one click nearby close chrome search clicking searched chrome search quickly jump search results using ctrlg whether search box open ux one stronger points case think usage reasonable", "d": "11/2017"}, {"body": "petebacondarwin nt need lecture using chrome using almost years never problem gt websites maybe nt like aesthetic left major website nt take right approach maybe ux designer google angular could give opinion rtl option line change css", "d": "11/2017"}, {"body": "suggested change makes search box look place desktop users please suggest option looks better designer otherwise inclined say chrome bug chrome ux obscuring interfering content nt believe applications making user agent specific ux accommodations sjtrimble opinion", "d": "11/2017"}, {"body": "igorminar another ux problem search first place searchfilter closes search conflict chrome searchbar good first try think search capabilities need much improvement call everytime chrome bug according angular chrome daily used maybe billion people daily bit know better nt think chrome gone change ux problem documentation site firefox search bottom first time thought find working nt expect see bottom nt noticed really solution either mainly problem bigger screens gt gt propose media gt aiosearchboxsearchcontainer justifycontent flexstart instead flexend", "d": "11/2017"}, {"body": "thank suggestion please put together pr change review preview generated suggestions improve search workflow general please post way wrap code snippets triple backticks render fixed width font make better user experience github", "d": "11/2017"}, {"body": "future reference issue work expected elements", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "believe running issue reported cli nt match problem please file new issue think cli issues referenced address problem thanks sending repo reproduce issue", "d": "11/2017"}, {"body": "quite complicate since package nt following semantic versioning really like idea like propose make part public api breaking changes anytime developers references using package", "d": "11/2017"}, {"body": "breaking changes except different output eg version", "d": "11/2017"}, {"body": "course changes quite often", "d": "11/2017"}, {"body": "disagree opinion compiler low level api nt used directly devs used indirectly tools webpack even upcoming bazel integrations changes often restricted making public slow development", "d": "11/2017"}, {"body": "toxicable sure understand point available via command line also means part public api however nothing calling function passing arguments received thus public api function opinion breaking change function would also result breaking change export function well", "d": "11/2017"}, {"body": "hey christofferskog love idea clarifying would willing submit pr please feel free tag", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "going fixed angular pretty much stable", "d": "11/2017"}, {"body": "nothing angular angular cli issue", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "would mean template know implementation details probably better idea implement ts side", "d": "11/2017"}, {"body": "vicb would need know implementation details need know function arguments implement ts side would write something like typescript class mycomponent funcresult html func item", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "related discussion", "d": "11/2017"}, {"body": "fails phantomjs safari lt would good update browser support page supported anymore easy way repro use browserstack gt yosemite gt safari latest gt go see app crash", "d": "11/2017"}, {"body": "josephliccini browsersupport polyfill documented supported seems valid add besides feature polyfill browsers desktop amp mobile animations web animations chrome firefoxnot supported mention safari", "d": "11/2017"}, {"body": "dupe", "d": "11/2017"}, {"body": "looks like specific case issues lib using analyze bundle notice entire lib included bundle", "d": "11/2017"}, {"body": "toxicable worked angular versions", "d": "11/2017"}, {"body": "heya reproduce issue open angualr cli issue tracker instead nt think core angular issue problem angular cli instead", "d": "11/2017"}, {"body": "angular cli issue problem", "d": "11/2017"}, {"body": "closing duplicate please track cli issue", "d": "11/2017"}, {"body": "phpcodexpert absolutely unclear", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "critical bug use aot compilation anymore angular", "d": "11/2017"}, {"body": "think may related problem trying use generate library strange parts typescript omitted original snippet ts injectable export class authstatusservice private status new behaviorsubject null public status thisstatusasobservable public snapshot principalobj output mode note classlevel variable initialization pretty weird output mode seems like things working expected angularcompiler", "d": "11/2017"}, {"body": "xealot please ensure using typescript support compiling typescript going land angular", "d": "11/2017"}, {"body": "believe intended behaviour solution move annotation defining variable", "d": "11/2017"}, {"body": "correct need set return value variable use variable rather calling function wiring ngmodule", "d": "11/2017"}, {"body": "jasonaden chance least error message could improved developers know ca nt place functions ngmodule aot generally bit weird mark something produces error bug especially considering unhelpfulness error emitted", "d": "11/2017"}, {"body": "thanks worked following code", "d": "11/2017"}, {"body": "warkaround found angular pwa starter private swpush swpush", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation note local variable available constructor nt angular issue code incorrect javascript", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request ok bug report still documentation issue x documentation issue request note local subscription variable available constructor nt angular issue code incorrect javascript showing obviously nt use like maybe speaking cast like removepopstate method work perfectly remove popstate listener documentation nt reflect behavior documentation tell us subscribe method location class return object object class true object inherited class inspect found", "d": "11/2017"}, {"body": "ah understand filing pr fix", "d": "11/2017"}, {"body": "update online documentation", "d": "11/2017"}, {"body": "update automatically", "d": "11/2017"}, {"body": "saw angular website updated great job", "d": "11/2017"}, {"body": "stream comments slack dealt problem adam fanello pm help upgraded app angular angulerserviceworker worked computer upon deploying though server worker intercepting authentication request server responding indexhtml authentication goes authgoogle authfacebook nowhere auth path mentioned yet chrome network tab shows indexhtml content returned service worker behaves correctly stop sw adam fanello pm anyone found problem scope serviceworker thinks needs control page navigation login requires network access hit oauth server endpoint redirected oauth provider trying figure work around nt happen dev client server coming two different ports dev edited adam fanello pm nt know ngswworkerjs includes exception navigating url containing two underscores added end url ex authgoogle fixed problem quite pwa gotcha nt seen mentioned anywhere adam fanello pm ugh dev prod nt behave oauth callback nt doubleunderscore fail hack basically ngsw designed allow client code server api reside domain edited adam fanello pm finally found places add every api path oauth tricky working hack confused", "d": "11/2017"}, {"body": "assumed performance actually stale revalidate line returns cache entry found", "d": "11/2017"}, {"body": "stale revalidate would require service worker fetch resource even found cache update quite sure current strategy like mattijarvinenba", "d": "11/2017"}, {"body": "issue angular must provide full path js file look something like", "d": "11/2017"}, {"body": "also tested scripts using full paths still gives error get different error saying following provide incorrect path noted exact angularclijson works path specified older nodemodules use angular angular cli works dependencies archive project upgrading name ngproject version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrap corejs fontawesome hammerjs jquery popperjs rxjs swiper zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesjquery typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript also jquery folder packagejson points dist script file resolve properly", "d": "11/2017"}, {"body": "works preangular could regression please create repo reproduces issue clone test also sounds like would cli issue example work downgrade angular need downgrade cli angular make work", "d": "11/2017"}, {"body": "close file angular cli project", "d": "11/2017"}, {"body": "jasonaden thanks reply angularcli downgraded back cli angular dependencies got project compiling bring issue cli team", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "good catch", "d": "11/2017"}, {"body": "import changed import seems fine note patching anything onto going close issue everything works expected afaict pelase free continue discussion", "d": "11/2017"}, {"body": "actually meant import fixed grin", "d": "11/2017"}, {"body": "nt work rxjs things differently maybe x ok thought recommended style everything conventional including avoiding deep linking rxjs file hierarchy import top level also readability point view observableof x much obvious going see x keep thinking especially slightly larger file might mistaken though", "d": "11/2017"}, {"body": "introduced new way importing operators methods observables static methods operator sorry stuff", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "using angular", "d": "11/2017"}, {"body": "fixed please wait new version", "d": "11/2017"}, {"body": "thanks quick response even adding pollyfillsts resolving issue", "d": "11/2017"}, {"body": "issue could try replace", "d": "11/2017"}, {"body": "thank much saved day", "d": "11/2017"}, {"body": "nothing angular code said native angular completely free use something else rxjs may want open issue instead assuming using lib said nt garanties going unsubscribed correctly like example", "d": "11/2017"}, {"body": "problem code following best practice always unsubscribing example good example show best practice exist always unsubscribe observable even seems useless first look may even change somewhere along observable chain later may make unsubscribe mandatory angular provides async pipe take care use pattern using framework lib language used wrongly create bad behavior like memory leaks also providing alternative remove rxjs use callbacks end angular probably get rid rxjs observables going part ecmascript another reason use", "d": "11/2017"}, {"body": "wykks many developers read book reactive extensions enough many pick tools popular widely used community much angular natively respond observable example please take look angular http makes popular others extensions based rx takeuntil forces introduce new local variable rely ngondestroy call use additional decorator good performance heavy make sure component destroyed gc moreover case nt need keep subscriber live sync component lifecycle would like destroy asap keep memory takeuntil force wait component destroys introduce multiple flags ghetolay easy debug angular application memory leaks rx almost impossible application huge promise find detached nodes pages iterations try deal personally like rx benefits introducing especially work events combine streams mind optional possibility increase complexity code use way find set articles like nt unsubscribe according best practices", "d": "11/2017"}, {"body": "code shared using rxjs independently angular aware angular expose rxjs api think open issue rxjs instead angular may detailed answer agree hard debug easy understand observable works without explicit operator saying let subscribe stream complete maybe forever maybe better solution magically unsubscribe try answer sure help lots people", "d": "11/2017"}, {"body": "takeuntil forces introduce new local variable rely ngondestroy call use additional decorator could agree angular may provide something easily works observable inside component code equivalent async pipe templates moreover case nt need keep subscriber live sync component lifecycle would like destroy asap keep memory unsubscribe either get result component destroyed want unsubscribe first emit matter filter result move first operator chain specific case ngrx store sync would nt need use recommended optional possibility increase complexity code use still nt answer used instead becomes optional way find set articles like nt unsubscribe according best practices read articles titles managing subscription calling rather use operators manage like", "d": "11/2017"}, {"body": "wykks better subscribe nt need angular inflates popularity rx real problem projects spending hundreds manhours fixing issues emerging rx ghetolay good hear never met difficulties opened subscribers somewhere application based recommendations unsubscribe takeuntill looks like nt get tried show alternative compliant promise know rx allows get native api", "d": "11/2017"}, {"body": "well nt need subscribe assuming using ngrx use read store directly without subscription like get last value", "d": "11/2017"}, {"body": "nt want use rxjs nt use really simple angular uses implicitely takes care unsubscribing well http requests always emit one value therefore safe well assumption js always takes care memory true use similar exact issue even without using rxjs", "d": "11/2017"}, {"body": "could agree angular may provide something easily works observable inside component code equivalent async pipe templates observable lifecycle events", "d": "11/2017"}, {"body": "zoechi complexity unbinding events closing streams incomparable ways remove events handlers part single entrance point dom node zoechi probably missed comments rxjs core angular provokes spread rx parts ex ngrx agree angular takes care streams ready understand ca nt use eventemitter services uses rxobservable ready waste days time trying figure components collected gc ready apply decorators apply ngondestroy manually write subscribe unsubscribe ready dig async pipe github issues patch library", "d": "11/2017"}, {"body": "zoechi complexity unbinding events closing streams incomparable probably missed comments nt devs love complain instead investing time learning understanding benefits ready understand ca nt use eventemitter services weirdest thing tried nowhere angular docs suggested beating dead horse", "d": "11/2017"}, {"body": "antonibertel thank issue clearly sparked bit discussion around topic mentioned others probably best report memory leaks rx well unsubscribe streams ondestroy said packages http router forms rely rx observable operators rx unlikely change immediate future due priorities team right core relies subject eventemitter looked getting rid dependency creating poly fill observable nt want could avoid using rx completely time rx going changes make easier use easier treeshake drastically shrink size library shrinking work nt done yet coming point overhead including rx operators extremely small tool like ngrx app developers decide libraries use applications specifically pushed angular team though going close issue something roadmap point removing dependency rxjs observable implementation specifically still determined happen ongoing discussion", "d": "11/2017"}, {"body": "angular inflates popularity rx real problem projects spending hundreds manhours fixing issues emerging rx finding opposite using rxjs saving company lot time issue opening comment immediately apparent sure rxjs powerful misused learn concepts thoroughly massive productivity boost wish lifecycle events provided observables though reconciling world input observables difficult would also trivial write utility subscribe observable component destroyed gripes", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "fix ongoing issue see", "d": "11/2017"}, {"body": "reproduce error also reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "share code", "d": "11/2017"}, {"body": "version use code change version angular packagejson", "d": "11/2017"}, {"body": "teabagp please create repo reproduction example easily cloned github", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "need modify maints", "d": "11/2017"}, {"body": "seems already discussed", "d": "11/2017"}, {"body": "hi toxicable maints get error", "d": "11/2017"}, {"body": "would reasonable make fix", "d": "11/2017"}, {"body": "manzonif fragile relying ordering html elements solve issue snippet posted correct work around", "d": "11/2017"}, {"body": "please follow", "d": "11/2017"}, {"body": "nt understand problem could create stackblitz showing error please behavior supposed following nt provide locale pipe use locale application default locale angular enus change default locale providing main module using cli aot mode set locale pipe use ignore application locale behavior notice", "d": "11/2017"}, {"body": "hey sorry confusing problem locale nt defining currency symbol selected currencypipe findcurrencysymbol method called without defining locale follow code goes generated currency code list usd defined previous version using libraries locale enau australian aud currency would usd would usd vice versa swapped locale using symbolshort need deal three currencies app would good nt considering locale particular currency symbol use consistentnot country bias", "d": "11/2017"}, {"body": "ok understand problem right according cldr data aud enau enus extracted currencies based enus locales takes lot place store currencies locales nt even think kind use cases could maybe add extra package need find good solution problem", "d": "11/2017"}, {"body": "ocombe googler team also facing issue plans eta dealing willing contribute bandwidth", "d": "11/2017"}, {"body": "meeting discuss next tuesday hard resolve agreed change", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "sure reproduce issue windows specific exact steps seeing issue repro mac also angular problem confirmed works vanilla htmlcss ca nt tell animated recordings environment taken", "d": "11/2017"}, {"body": "broken chrome windows amp android least confirmed dev order reproduce hold middle mouse button move originally opened issue use overlay causing problem thought something wrong side ended problem overlays nt sufficient knowledge investigate deeper either chrome angular plunker component creates issue lines code ca nt reproduce really specific use case virtualscroll component", "d": "11/2017"}, {"body": "talking could ask well", "d": "11/2017"}, {"body": "crisbeto", "d": "11/2017"}, {"body": "per issue able fix problem also sounds like something material would handle rather angular think best one copy issue info version material repo close one something specific angular repo please create new issue thanks", "d": "11/2017"}, {"body": "make think related angular stackblitz angular", "d": "11/2017"}, {"body": "jasonaden please answer", "d": "11/2017"}, {"body": "platformbrowser ngprobetoken removed angularplatformbrowser deprecated since import angularcore instead", "d": "11/2017"}, {"body": "thankx ericmartinezr using ngprobetoken code also figure external module using get running rollup getting compile tsc", "d": "11/2017"}, {"body": "provide reproduction think case repo would fine sounds like party lib causing issue using", "d": "11/2017"}, {"body": "quite big internal solution would take quite effort produce repo already started analyze figure one would use ngprobetoken maybe point documentation read thankx interesst", "d": "11/2017"}, {"body": "going close issue documented removed feel free continue discussion", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "currently running fixed future versions", "d": "11/2017"}, {"body": "course open issue", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation run project debug", "d": "11/2017"}, {"body": "getting exact behavior described upgrading angular occurs run ng serve angular cli project turn imports modules second angular cli control project created common controls control project also upgraded built using following command ngc p srctsconfigjson run primary application references modules control application get following based ng serve using ng serve get unexpected value filevieweriframemodule imported module viewplanmodule please add ngmodule annotation like using ng serve aot errors application works expected suggestions look also continue searching post resolution find thanks", "d": "11/2017"}, {"body": "issue build get error", "d": "11/2017"}, {"body": "hey guys make sure set typescript version packagejson see", "d": "11/2017"}, {"body": "bergben typescript version set exactly still getting error", "d": "11/2017"}, {"body": "changed typescript version previously child common component project deleted nodemodules renpm installed modules built child controls project went main project deleted nodemodules changed previously npm installed errors went away everything works properly prototype project using reproduction project see works production projects bergben run ng version make sure using correct version folder serving also possible referencing another control package built correct version typescript", "d": "11/2017"}, {"body": "ignore buildoptimizer everything works properly even get benefits build optimizer solution hack issue right build using next cmd", "d": "11/2017"}, {"body": "applied method worked problem typescript version gt angularcompiler requires typescript version gt amp lt build everything work properly", "d": "11/2017"}, {"body": "matsko managed pin think problem certainly using function return trigger params passed function fact simple animation going work either problem obviously using boolean curiously enough production build something likely since final actually applied perhaps removed nt", "d": "11/2017"}, {"body": "looking thank fxck", "d": "11/2017"}, {"body": "little confused tutorial based cli dedicated section testing downloadable bundle tests necessary scaffolding unit tests guide claims based project similar tour heroes tutorial although true foxandxss would probably know", "d": "11/2017"}, {"body": "testing chapter updated yet wardbell update week", "d": "11/2017"}, {"body": "gkalpak tutorial tests fail unit tests unmodified scaffolds useful content packagejson also missing devdependency source bundles istanbul coverage reporter download source bundle referenced tutorial download links fails missing coverage reporter runs tests fail template parse errors mentioned motivation section think reduce friction learning angular desire produce tested code testing section works teaches testing increase friction since starts new app different install method tutorial", "d": "11/2017"}, {"body": "nt worry working cli correct dependencies tests working course", "d": "11/2017"}, {"body": "add specs test sample application also needs inside running results else missing fix file imports work also none example plunker tests seem work guess reason", "d": "11/2017"}, {"body": "use transferstate first call rendering app server side client app without transfer state bootstrap state makes call second using transfer state client app take state components transferred state make another call", "d": "11/2017"}, {"body": "please guide use transerstate", "d": "11/2017"}, {"body": "need use state transer please provide sample code use transerstate", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation mentioned use api introduced little gist showing use also use automatically transfer http requests youre using httpclient", "d": "11/2017"}, {"body": "nt link sure redirect redirect specifically caught stopped", "d": "11/2017"}, {"body": "think also protection infinite redirections", "d": "11/2017"}, {"body": "expected behavior inside component redirection way simulating subsequent redirections correct mean recommended way impossible detect circular redirection statically analyzable please ignore deal possible situation root module configures routing lazyloaded module lazyloaded module may also redirection behavior let ignore case double redir configured inside routing module demo stupid seems somewhat ugly redirection merges redirection opinion route configs separated modules means root module care routing inside another module vice versa especially root module lazyloaded module", "d": "11/2017"}, {"body": "think looking logic specifically redirect allowed absolute redirect closing issue working intended try redirect without using absolute path", "d": "11/2017"}, {"body": "saying performant overexaggeration imo difference neither noticeable meassurable since nonpredictable gc time dominate total time cases afaict fine either way note even work case fundamental difference terms semantics makes noninterchangeable general keep array object create new one means reference original array held elsewhere app change would break part code implying holding references service properties good idea pointing fact things might break nt feel compelled make change someone wants submit pr happy review smiley", "d": "11/2017"}, {"body": "gkalpak right didt mean overexaggerate clearing array marginally efficient wanted angular developers use best exploring method efficient always think setting array length efficient surprise setting new array efficient concern things might break would nt good choice suggested seems setting better option per suggestion submitted pull request", "d": "11/2017"}, {"body": "gkalpak thanks truly valuable assistance coming new issue soon stuckouttongueclosedeyes mhevery thanks building truly amazing framework plus videos dependency injection provides great insights making code truly testable vulcansalute", "d": "11/2017"}, {"body": "reproduce compilation error withwithout strict option think expected formstate declared type object assing value invoke methods defined object interface declared type object type used describe nonprimitive types passing string primitive value typescript would resulted error mentioned missing something simple repo otherwise clone reproduce would great anyway agree coherent formcontrol constructor formbuilder control method formstate parameter type instead object would like provide pull request", "d": "11/2017"}, {"body": "benbraou totally right error mentioned happens try initialize course option enabled examples", "d": "11/2017"}, {"body": "proper regex matching package name", "d": "11/2017"}, {"body": "tbosch look please", "d": "11/2017"}, {"body": "please", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "problem resolved close issue solution component import component oninit angularcore import formbuilder validators formgroup formcontrol abstractcontrol angularforms import confirmpasswordvalidator strongpasswordvalidator component selector connexionapp templateurl connexioncomponenthtml export class connexioncomponentcomponent implements oninit form formgroup constructor protected fb formbuilder thisform thisfbgroup name thisfbgroup firstname validatorscompose validatorsrequired validatorsminlength validatorsmaxlength lastname validatorscompose validatorsrequired validatorsminlength validatorsmaxlength email validatorspattern az verification thisfbgroup password validatorscompose validatorsrequired validatorsminlength passwordconfirm validatorscompose validatorsrequired validatorsminlength validator confirmpasswordvalidator ngoninit void save x consolelog x validator import abstractcontrol validatorfn angularforms export function confirmpasswordvalidator validatorfn return control abstractcontrol gt return controlget password value controlget passwordconfirm value null strongpassworderror true", "d": "11/2017"}, {"body": "ahmedhadjtaieb also close issue", "d": "11/2017"}, {"body": "think found problem file missing function app module ngmodule declarations appcomponent imports browsermodule httpclientmodule formsmodule providers bootstrap appcomponent happen cc dzmitryshylovich", "d": "11/2017"}, {"body": "reason ca nt upgrade cli angular try upgrading least try upgrading typescript", "d": "11/2017"}, {"body": "need compatible version", "d": "11/2017"}, {"body": "function call invoked aot compiler would analyze static method extract return value namely merged merged static method wo nt remain compilation result anyway expected behavior", "d": "11/2017"}, {"body": "encountered problem likely caused conditional provider supported even", "d": "11/2017"}, {"body": "want keep conditional restructure using ternary operator", "d": "11/2017"}, {"body": "even drop", "d": "11/2017"}, {"body": "problem file missing function expected behavior", "d": "11/2017"}, {"body": "use function modules aot", "d": "11/2017"}, {"body": "see first reply please", "d": "11/2017"}, {"body": "mean result execution merge imports providers di", "d": "11/2017"}, {"body": "sure case example ngrx using forroot method conditions", "d": "11/2017"}, {"body": "use static forroot method explained method exist compiled aot compiler process compiling compiler extract providers method inline", "d": "11/2017"}, {"body": "mean result execution forroot merge imports providers di correct current mechanism compiling example ngrx using forroot method conditions could provide link", "d": "11/2017"}, {"body": "either way far see working expected issue please provide minimal reproduction latest version angular otherwise still problem open issue stack overflow since support forum issue tracker features bugs angular provide support", "d": "11/2017"}, {"body": "issue please provide minimal reproduction latest version angular toxicable guess since lts reporting error valid indeed minimal reproduction required", "d": "11/2017"}, {"body": "critical ie broken security fixes made branches", "d": "11/2017"}, {"body": "ok thanks clarification", "d": "11/2017"}, {"body": "thanks caeruskaru trotyl toxicable", "d": "11/2017"}, {"body": "cc alxhub temporary workaround separate common load preserve builds", "d": "11/2017"}, {"body": "nt think call workaround since service worker would next useless server anyway", "d": "11/2017"}, {"body": "toxicable think point able include regular since loads module throws error compilation least following official universal guides", "d": "11/2017"}, {"body": "whops sorry right got around wrong way p platform check", "d": "11/2017"}, {"body": "adding", "d": "11/2017"}, {"body": "using proper platform check preferred incase party decides wants implement api situation predict behavior", "d": "11/2017"}, {"body": "workaround also provide server build check solution module used serverside rendering faked module services", "d": "11/2017"}, {"body": "maciejtreder get ever load file sure missing driving crazy", "d": "11/2017"}, {"body": "fix merged yet cli released universal appshell feature working issue toxicable brocco alxhub", "d": "11/2017"}, {"body": "patrickmichalina using boilerplate created repository make sure file present output directory", "d": "11/2017"}, {"body": "cyrilletuzi toxicable concerns integration testing passed buck alxhub implement use either mine maciejtreder workaround able take advantage new appshell feature without issue gets patched", "d": "11/2017"}, {"body": "caeruskaru solution one important opinion pitfall using services provided serviceworkermodule app via serverside rendering wo nt work break lack provider services", "d": "11/2017"}, {"body": "maciejtreder easy oneline solution add optional decorator injection check null using", "d": "11/2017"}, {"body": "still need check service initialized use code looks like example trying say far better provide mocked service nothing", "d": "11/2017"}, {"body": "yep got check null using thanks providing example reference also sake universal integration check always necessary since serviceworker available server", "d": "11/2017"}, {"body": "hmm could provide example method wo nt work server side boiler plate mentioned run issues problems safari got workaround well read", "d": "11/2017"}, {"body": "maciejtreder trycatch blocks typically discouraged angular also try using serviceworker methods server server output error logs methods invoked errors would show browser working intended", "d": "11/2017"}, {"body": "learned last night serviceworkermoduleregister ngswworkerjs make xhr file examples seen online loading file hidden cli cli injects indexhtml maciejtreder starter help using cli load file manually build tooling seems work", "d": "11/2017"}, {"body": "added serviceworker universal broke server side index app source code page", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "think thanks reply", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hi parys thanks help webpackconfigjs text webpackcontextreplacementplugin change const path require path const webpack require webpack const merge require webpackmerge const aotplugin require ngtoolswebpack aotplugin const checkerplugin require awesometypescriptloader checkerplugin moduleexports env gt configuration common clientside serverside bundles const isdevbuild env amp amp envprod const sharedconfig stats modules false context dirname resolve extensions js ts output filename name js publicpath dist webpack dev middleware enabled handles requests url prefix module rules test ts use isdevbuild awesometypescriptloader silenttrue ngtoolswebpack test html use htmlloader minimizefalse test css use tostringloader isdevbuild cssloader cssloader minimize test scss use tostringloader isdevbuild cssloader cssloader minimize sassloader test pngjpgjpeggifsvg use urlloader plugins new checkerplugin thanks help regards ingo", "d": "11/2017"}, {"body": "seems fixing issue seems file placement names changed bit help also fix needed vendor config since angular thing", "d": "11/2017"}, {"body": "hi dmitriyett thanks help unfortunately still sure code shown new webpackcontextreplacementplugin angular core pathjoin dirname client must insert regards ingo", "d": "11/2017"}, {"body": "ingomanthey plugins array", "d": "11/2017"}, {"body": "parys thanks help change moduleexports env gt configuration common clientside serverside bundles const isdevbuild env amp amp envprod const sharedconfig stats modules false context dirname resolve extensions js ts output filename name js publicpath dist webpack dev middleware enabled handles requests url prefix module rules test ts use isdevbuild awesometypescriptloader silenttrue ngtoolswebpack test html use htmlloader minimizefalse test css use tostringloader isdevbuild cssloader cssloader minimize test scss use tostringloader isdevbuild cssloader cssloader minimize sassloader test pngjpgjpeggifsvg use urlloader plugins new checkerplugin new webpackcontextreplacementplugin angular core pathjoin dirname client call webpack config webpackconfigvendorjs kb emitted kb emitted kb emitted big kb emitted vendorjs mb emitted big vendor vendorcss kb emitted big vendor geht error regards ingo", "d": "11/2017"}, {"body": "ingomanthey instead insert path src folder working default asp net template assume", "d": "11/2017"}, {"body": "found error add webpackconfigvendorjs work fine thanks help regards ingo", "d": "11/2017"}, {"body": "future use stack overflow support requests issue tracker tracking bugs feature requests angular", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "hey calleway facing issue tried importing httpclientmodule app doesnt work saying nullinjectorerror provider httpclient find solution yet", "d": "11/2017"}, {"body": "didnt find fix solved problem reverted back project completely started move httpclient old http one one module service sure move project still works fully reupdated project ground removed old http completely project check sure project still works everything succeded upgraded project along libraries betas last versions every thing worked like charm", "d": "11/2017"}, {"body": "callawey rafiquemohammed think remove old httpmodule import", "d": "11/2017"}, {"body": "used httpmodule appmodulets importing resolved issue", "d": "11/2017"}, {"body": "fxck thanks issue suggest filing vscode repo also forward member team reopen something team handle", "d": "11/2017"}, {"body": "intended used publishing libraries use applications overly pessimistic demonstrated intended catch errors metadata normally would produced building application building application never turn", "d": "11/2017"}, {"body": "chuckjaz actually used publishing libraries lead error compile demonstration pieces library pieces building script bash readonly currentdir cd dirname pwd cd currentdir rm rf publish cp r srccomponents srcgencomponents echo generating entry file using angular compiler npm bin ngc p tsconfigbuildjson lt error rm rf srcgencomponents", "d": "11/2017"}, {"body": "change resolve error nt use ambient type di injectiontoken like", "d": "11/2017"}, {"body": "test compile report whenever symbol emitted position likely seen compiler nt semantic analysis determine conditions would cause ignored error suppressed adding dynamic comment prior symbol example adding comment dynamic component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app constructor inject document private doc document sufficient suppress error tells ignore error expected cause problem compile time supporting ambient symbols di injection please report separate issue", "d": "11/2017"}, {"body": "okay willing report separate issue", "d": "11/2017"}, {"body": "nt import since either import import whole rxjs dramatically increase size bundle changed docs", "d": "11/2017"}, {"body": "closing use suggestion", "d": "11/2017"}, {"body": "blind", "d": "11/2017"}, {"body": "one note build copied docker container runs application using apache perhaps apache rewriting url", "d": "11/2017"}, {"body": "actually probably apache fault", "d": "11/2017"}, {"body": "sorry nt ts works types exist build time provide class nt token invoke runtime would suggest using interface instead", "d": "11/2017"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "11/2017"}, {"body": "make minimal repro clone see issue", "d": "11/2017"}, {"body": "eestein api ngc changed slightly try using something like instead notice passing args array strings object", "d": "11/2017"}, {"body": "zaljin thank receiving ngc errors dig thanks", "d": "11/2017"}, {"body": "cldr data use works like locale used language becomes default parent locale example en equivalent enus regional locale equivalent parent locale regional locale longer listed would duplicate en enus french fr frfr default parent locale always equivalent country origin language example pt portuguese actually brazilian portuguese portuguese spoken portugal people speaking brazilian portuguese nt ptbr locale ptpt locale since ptpt pt behavior might seem weird decided default ask regional locale nt exists provided parent locale used instead people often use complete locale id parent region parent locale name detected browser give frfr set app angular automatically use fr since frfr nt exist problem people actually use parent locale name assuming equivalent example pt ptpt time correct assumption cli fallbacks parent locale injects locale apply behavior angular said manually import locale might wondering frfr missing could duplicate files use symlinks nt work well windows sure really necessary", "d": "11/2017"}, {"body": "think intuitive using single source truth reexport enables making breaking change gaining consistency always using everywhere allowing searching file name locales directly knowing default language checking file easing debug circle knowing used without tracing logic code since reexport default export yet maybe import amp export manually", "d": "11/2017"}, {"body": "vicb think create files missing locales eg creating file enus would export content en", "d": "11/2017"}, {"body": "ocombe would work well situation get locale id runtime currently get ones like suppose could custom logic work described would prefer locale files cover situations even reexport edit specifically dong locale loading like", "d": "11/2017"}, {"body": "hello reviewed issue following change angular function let register locale data along locale id choice also fixing cli bug changes available next release", "d": "11/2017"}, {"body": "importing httpmodule httpclientmodule fixes problem", "d": "11/2017"}, {"body": "ocombe working fix better error message", "d": "11/2017"}, {"body": "new location aravindfz would like submit pr fix", "d": "11/2017"}, {"body": "gkalpak raised pr", "d": "11/2017"}, {"body": "done debugging chuckjaz pb second case returns null appended", "d": "11/2017"}, {"body": "problem available via di seems nothing relates", "d": "11/2017"}, {"body": "di part angular second question ca nt register factory loader platformbrowserdynamicbootstrapmodule make code dependent code loader", "d": "11/2017"}, {"body": "manually setting deps empty array expecting", "d": "11/2017"}, {"body": "luboid basic thing compiler available aot mode di exactly angular router also works point exactly differentiate jit aot mode", "d": "11/2017"}, {"body": "mlcmlapis repo indeed jit", "d": "11/2017"}, {"body": "trotyl ah sorry fast yes", "d": "11/2017"}, {"body": "yes jit iam really sorry deps staticclassprovider mandatory remained try register ngmodulefactoryloader platformbrowserdynamicbootstrapmodule angularcoresrcdiproviderdts", "d": "11/2017"}, {"body": "type used ngmodule metadata instead typescript export type provider typeprovider valueprovider classprovider existingprovider factoryprovider export interface classprovider injection token typically instance provide class instantiate useclass type true injector returns array instances useful allow multiple providers spread across many files provide configuration information common token example example coreditsproviderspects regionmultiprovideraspect multi boolean property declared required platform providers dynamic ones one possible problem since declared passing compiler typescript exact type except literals superset compatible", "d": "11/2017"}, {"body": "ok nt argue sequence tries first platform second appmodule third approutemodule help register thing cross mind expecting consistency", "d": "11/2017"}, {"body": "guess could closed", "d": "11/2017"}, {"body": "yes", "d": "11/2017"}, {"body": "nt think reimplment methods already exist js even providing proxy cause confusion actually especially since easily convert array anyway", "d": "11/2017"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "11/2017"}, {"body": "okay personal understanding case using preferable", "d": "11/2017"}, {"body": "tagged due animation use noopanimationsmodule tried use ng new myapp command create empty new project reproduced issue tried also downgrade angular version version version picked randomly reproduced issue someone tell deploy packaged code", "d": "11/2017"}, {"body": "bad script broken firewall", "d": "11/2017"}, {"body": "please move issue repo closing copy assign new one created", "d": "11/2017"}, {"body": "attempted reproduce cli unable code provided", "d": "11/2017"}, {"body": "toxicable thx contributed test project try run problem appear", "d": "11/2017"}, {"body": "followed instructions unable reproduce error", "d": "11/2017"}, {"body": "toxicable question still", "d": "11/2017"}, {"body": "referencing src directly rather compiled output makes work meaning likely issue bundling config nt see issue angular", "d": "11/2017"}, {"body": "toxicable thanks spending time looking itwangcj moved stackoverflow using tag type question often answered wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "jasonaden ok thank help", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "great nt see issue closing", "d": "11/2017"}, {"body": "jasonaden think removed label wrongly please add thanks", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "closing duplicate subscribe updates", "d": "11/2017"}, {"body": "compare elements reference amp recurse explains plunker work remember name correctly compares input reference nt use closing works intended", "d": "11/2017"}, {"body": "please file bug material repo", "d": "11/2017"}, {"body": "seems related", "d": "11/2017"}, {"body": "ha still javascript without dsl", "d": "11/2017"}, {"body": "pavelblagodov closing based linked commit", "d": "11/2017"}, {"body": "pretty need already covered one router events must agree us event exactly called bit fuzzy could improve docs king diagram routing process showing steps events fired", "d": "11/2017"}, {"body": "source shows sequence lifecycle", "d": "11/2017"}, {"body": "maybe navigationstart extend activatedroutesnapshot routerstatesnapshot", "d": "11/2017"}, {"body": "inject able get snapshot", "d": "11/2017"}, {"body": "jasonaden inject nt understand mean asked gitter nobody knows answer", "d": "11/2017"}, {"body": "ngoutletcontext deprecated use ngtemplateoutletcontext instead", "d": "11/2017"}, {"body": "thanks saw documentation common ngtemplateoutlet ngoutletcontext removed deprecated since use ngtemplateoutlet ngtemplateoutletcontext instead even though think message clearly", "d": "11/2017"}, {"body": "rart getting behavior tree get looking", "d": "11/2017"}, {"body": "ah see thanks reply jasonaden trying make sense decision position tree getting root rather leaf argue really currently activated route would agree guessing different components route hierarchy get different position tree least component handling entire route tree one component handling entire route tree perhaps mainstream case least case feels like makes hard subscribe params since case navigation starting going ca nt subscribe paramsqueryparams right feels like component needs aware route config rather knowing expects params x advise would architecturallyadequate strategy get leaf route params came something specific app within componentroute one sub routes triggers matdialog open component matdialog renders uses params activatedroute component within matdialog actually starts path get param thanks indeed", "d": "11/2017"}, {"body": "poppinmic thanks issue yes think correct want please submit pr fix", "d": "11/2017"}, {"body": "anyway submitted pr thanks bringing poppinmic", "d": "11/2017"}, {"body": "aot compiler wo nt emit factories set true", "d": "11/2017"}, {"body": "worked new change removal however seem fix build issue", "d": "11/2017"}, {"body": "said also change path factory like", "d": "11/2017"}, {"body": "confirmed fixed issue", "d": "11/2017"}, {"body": "hello please add minimal reproduction otherwise issue closed", "d": "11/2017"}, {"body": "sorry reported issues require plunker reproduction problem issue persists please create plunker using template github repo describe difference expected current behavior create new issue", "d": "11/2017"}, {"body": "even though closed mention currently facing issue versions match problem occurred trying build default app created guide ios", "d": "11/2017"}, {"body": "open issue ionic", "d": "11/2017"}, {"body": "also facing issue error srcappmaints module found error ca nt resolve appmodulengfactory resolve appmodulengfactory using description file relative path srcapp field browser nt contain valid alias configuration using description file relative path srcapp using description file relative path srcappappmodulengfactory extension field browser nt contain valid alias configuration nt exist ts field browser nt contain valid alias configuration nt exist js field browser nt contain valid alias configuration nt exist json field browser nt contain valid alias configuration nt exist directory nt exist srcappmaints new builderror callback emitrecordserr compileremitrecords emitassetserr next compilercompilerplugin compilerafteremit", "d": "11/2017"}, {"body": "see issue upgrade ionic appscripts", "d": "11/2017"}, {"body": "lincolnthree looking issue along folks ionic ca nt reproduce problem able come way reproduce would great", "d": "11/2017"}, {"body": "face issue resolve removing modulets pages folder ionic created repeatly ionic g command conflict bw appmodulets modulets pages folder hope solve issue", "d": "11/2017"}, {"body": "issue nt clearly explaining trying address please create new issue detail issue persists", "d": "11/2017"}, {"body": "reported issues require plunker reproduction issue verified also reporting older version angular issue persists please provide way reproduce confirm issue exists currently supported version use plunker template", "d": "11/2017"}, {"body": "yaredtaddese case issue handled exception way nt show console aware errors fixed exception routeroutlet worked normally", "d": "11/2017"}, {"body": "closed", "d": "11/2017"}, {"body": "ismaestro closed steps reproduce executed plunker stackblitz retro created new issue opened linking", "d": "11/2017"}, {"body": "jasonaden problem still exist latest version angularie angular even facing problem", "d": "11/2017"}, {"body": "vinayaganga ismaestro yaredtaddese really need repro issue gone steps link ca nt reproduce problem reopen issue hours one produce reproduction time need close since issues need reproduction feel free fork update stackblitz see get reproduce", "d": "11/2017"}, {"body": "nt know issue seems similar click toggle error button click second click removed dom due click button dom every time error toggled new added dom btw replacing solve problem note providing redirects edit add diff diff diff git asrcappappcomponenthtml bsrcappappcomponenthtml index asrcappappcomponenthtml bsrcappappcomponenthtml home toggle error newline end file diff git asrcappappcomponentts bsrcappappcomponentts index asrcappappcomponentts bsrcappappcomponentts import component angularcore export class appcomponent name angular haserror false toggleerror thishaserror thishaserror diff git asrcappapperrorhandlerts bsrcappapperrorhandlerts new file mode index devnull bsrcappapperrorhandlerts import errorhandler injectable injector angularcore import router angularrouter injectable export class apperrorhandler implements errorhandler constructor private injector injector handleerror err consolelog err const router thisinjectorget router routernavigate alphagamma newline end file diff git asrcappappmodulets bsrcappappmodulets index asrcappappmodulets bsrcappappmodulets import ngmodule angularcore import errorhandler ngmodule angularcore import browsermodule angularplatformbrowser import browseranimationsmodule angularplatformbrowseranimations import formsmodule angularforms import approutesmodule approutesmodule import apperrorhandler apperrorhandler import appcomponent appcomponent import errorcomponent errorcomponent import alphamodule routesalphamodule import alphamodule routesalphamodule alphamodule browseranimationsmodule declarations appcomponent providers provide errorhandler useclass apperrorhandler declarations appcomponent errorcomponent bootstrap appcomponent export class appmodule diff git asrcapperrorcomponentts bsrcapperrorcomponentts new file mode index devnull bsrcapperrorcomponentts import component oninit angularcore component selector myerror template export class errorcomponent implements oninit ngoninit throw error error purpose", "d": "11/2017"}, {"body": "adgoncal perfect great repro think maybe reason replacing nt work imported multiple places done attempt replicate previously incase needed imported within module containing routedto components removing imports leaving one app module appears allow us toggle issue includingnot including also include click toggle error button routing child routes produces multiple copies routedto components think close reproducing issue seems rely throwing error goes uncaught catch error problem thanks lot repro help us get debugged", "d": "11/2017"}, {"body": "exactly case", "d": "11/2017"}, {"body": "actually seeing well maybe related typescript version using ts", "d": "11/2017"}, {"body": "tried ts ts unlikely ts issue maybe configuring setting correctly something", "d": "11/2017"}, {"body": "reproduced editng directly", "d": "11/2017"}, {"body": "seeing issue ngfor well tested following appcomponentts import component angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent public title string app public bool boolean true public variableinsideif string ngiftest public list number public variableinsidefor string ngfortest appcomponentnghtml title variableinsideif variableinsidefor n change get compilation error change nt get error also tried compiling using angularcompilercli see generated appcomponentngfactoryts see accessing correct type annotation accessing type annotation instead probably error nt caught compilation additionally inside loop corresponds type nt checked anywhere changing yields nt fail believe since trace fail edit angularangularcli might also related", "d": "11/2017"}, {"body": "trotyl provided link nt work anymore", "d": "11/2017"}, {"body": "borntraegermarc fixed mean literally", "d": "11/2017"}, {"body": "solution simple read docs", "d": "11/2017"}, {"body": "docs angular pipes help internationalization datepipe currencypipe decimalpipe percentpipe use locale data format data based localeid default angular contains locale data enus set value localeid another locale must import locale data new locale cli imports locale data use parameter locale ng serve ng build want import locale data languages manually srcappappmodulets contentcopy import registerlocaledata angularcommon import localefr angularcommonlocalesfr registerlocaledata localefr files angularcommonlocales contain locale data need advanced formatting options might available extra dataset import angularcommonlocalesextra error message informs case srcappappmodulets contentcopy import registerlocaledata angularcommon import localefrca angularcommonlocalesfrca import localefrcaextra angularcommonlocalesextrafrca registerlocaledata localefrca localefrcaextra", "d": "11/2017"}, {"body": "monicamarques app polyfill simple app work ie", "d": "11/2017"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines", "d": "11/2017"}, {"body": "cc stephenfluin", "d": "11/2017"}, {"body": "possibly asked question gitter post release update guide", "d": "11/2017"}, {"body": "think aim make page anguario nees docs aio teams get together discuss approach", "d": "11/2017"}, {"body": "think selector appforbiddenname selector forbiddenname", "d": "11/2017"}, {"body": "use instead seems also change path factory", "d": "11/2017"}, {"body": "nothing tried ways compileroptions time nothing changed also tried appappmodulengfactory main entry could nt find one ether", "d": "11/2017"}, {"body": "would better provided minimal reproduction issue", "d": "11/2017"}, {"body": "tried using entrymodule ngtoolsangularcompilerplugin upgraded also change ts loader pattern production configuration tsconfigaotjson edit spelling", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "maybe help use chrome dev tools animations slowmo works dont stop animations settimeout something else", "d": "11/2017"}, {"body": "yes great idea thinking something like html", "d": "11/2017"}, {"body": "solution us need deliver feature client dont want clients access chrome dev tools thanks pointing though matsko thats exactly would expect", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "nt see one closing", "d": "11/2017"}, {"body": "closing confused issue described", "d": "11/2017"}, {"body": "looking yesterday", "d": "11/2017"}, {"body": "dup", "d": "11/2017"}, {"body": "made pr fix one", "d": "11/2017"}, {"body": "ca nt see code talking demo also error", "d": "11/2017"}, {"body": "nt use code refer template html using tag creates error", "d": "11/2017"}, {"body": "working perfectly fine ff chrome", "d": "11/2017"}, {"body": "ff get following", "d": "11/2017"}, {"body": "yes error plnkr nothing angular seeing anything related angular", "d": "11/2017"}, {"body": "error get using projects", "d": "11/2017"}, {"body": "sibirajs still ca nt see problem", "d": "11/2017"}, {"body": "bad extension sorry trouble realized seeing screenshot mlcmlapis", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "two separate navigations", "d": "11/2017"}, {"body": "angularcli angular", "d": "11/2017"}, {"body": "please report", "d": "11/2017"}, {"body": "angular services run angular runs browser run angular server need use universal universal either prerendering dynamic rendering express example alternatives include prerenderio exactly thing prerendering universal", "d": "11/2017"}, {"body": "angular issue please reopen angular cli", "d": "11/2017"}, {"body": "thanks created", "d": "11/2017"}, {"body": "might related try updating typescript similar issues appears angular compile anything less typescript despite warnings", "d": "11/2017"}, {"body": "sorry reported issues require plunker stackblitz reproducing problem issue persists please create plunker using template stackblitz using describe difference expected current behavior create new issue", "d": "11/2017"}, {"body": "ericmartinezr said please add small repro", "d": "11/2017"}, {"body": "many thanks replies rebuilding entire app module module tracked issue angular multiline dashes could used reference files angular case anymore changing following fixes applies templateurl error message particularly ugly lengthy made difficult trace bug", "d": "11/2017"}, {"body": "svg element", "d": "11/2017"}, {"body": "ask close issue assume nt know answer yes part svg check plunker", "d": "11/2017"}, {"body": "related", "d": "11/2017"}, {"body": "break lang service", "d": "11/2017"}, {"body": "stops giving suggestions templates get following output output console vs code changing contents svmetadatajson stops error occuring etc", "d": "11/2017"}, {"body": "also appears importing registering locale", "d": "11/2017"}, {"body": "right also tried updating language service dependencies vscode extension problem still persists", "d": "11/2017"}, {"body": "problem importing locale throws error angular language service sees element array null nt object prevent checks completed whole project many retries visual studio code stops trying restart language server due errors", "d": "11/2017"}, {"body": "issue angular vscode replacing file seems solve far everything seems work modifying files far ideal least vs code working permanent solution", "d": "11/2017"}, {"body": "issue think problem occurs angular language service extension uses extension needs updated use", "d": "11/2017"}, {"body": "ikourfaln issue", "d": "11/2017"}, {"body": "maistho yes said maybe issue extension still uses dependency must updated", "d": "11/2017"}, {"body": "ikourfaln sorry clear updated vscode extension use still issue", "d": "11/2017"}, {"body": "maistho see updating package enough think extension must refactored follow break changes language service", "d": "11/2017"}, {"body": "sucks bit extension use implementation based everytime ng update risks breaking everything", "d": "11/2017"}, {"body": "vicb way get fixed two patch releases since issue reported suppose could fixed simply recommendation pr", "d": "11/2017"}, {"body": "victornoel update fix available", "d": "11/2017"}, {"body": "ashishmulaye ask chuckjaz mhevery", "d": "11/2017"}, {"body": "chuckjaz mhevery available next beta release", "d": "11/2017"}, {"body": "work please add repro", "d": "11/2017"}, {"body": "yes example repo similar runningfailing app local running says angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "d": "11/2017"}, {"body": "thomassittig looked repro appears cli bug webpack failing please create issue", "d": "11/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "11/2017"}, {"body": "one intentional omission list currently considered low level api subject internal changes changes affect applications libraries using higherlevel apis command line interface jit compilation via specific usecases require direct access compiler api mostly tooling integration ides linters etc working kind integration please reach us first stated publicapi doc package part public apis use case based defined behavior", "d": "11/2017"}, {"body": "jitcompilerfactory", "d": "11/2017"}, {"body": "import jitcompiler angularcompiler public static createcomponent compiler jitcompiler template string components object component template class templatecomponent causes jitcompiler provider exception compilerproviders angular allowed code work jitcompilerfactory angular", "d": "11/2017"}, {"body": "duplicate please respect", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "certain providers must declare deps explicitly normal ones devs deal day day unchanged one clear advantage longer rely reflect therefore remove polyfill unless using", "d": "11/2017"}, {"body": "main reason speed elimination polyfill details read", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "dup angularcli repo lives", "d": "11/2017"}, {"body": "thnx ericmartinezr", "d": "11/2017"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines", "d": "11/2017"}, {"body": "could double check packages cli node browser version angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "d": "11/2017"}, {"body": "basically appears like understand definition", "d": "11/2017"}, {"body": "also got thesame error message firefox angular updated firefox error gone pls try fix bug nov fabian wiles notifications githubcom wrote sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines receiving subscribed thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "alfredobialo matter causing problem angular issue used angular cli webpackdevserver livereloading nothing repo", "d": "11/2017"}, {"body": "got issue reproduced identical packages installed additional info serve prod aot safari shows additional errors referred functions webpack", "d": "11/2017"}, {"body": "got error using cli angular version", "d": "11/2017"}, {"body": "happens ios", "d": "11/2017"}, {"body": "trotyl nonetheless fix needs come cli users cli bring webdevserver manually part install cli patchworkaround webdevserver fixes situation cli needs pull correct versionpatchworkaround", "d": "11/2017"}, {"body": "problem supposed raise angular cli issue different project different repo different team", "d": "11/2017"}, {"body": "make simple duplicate", "d": "11/2017"}, {"body": "thanks reporting issue however issue duplicate existing issue angularangularcli please subscribe issue future updates", "d": "11/2017"}, {"body": "apologies nt realize separate repo cli thank", "d": "11/2017"}, {"body": "issue change either string version regex version breaking change", "d": "11/2017"}, {"body": "thanks would need done either deprecation path configuration flag keep oldnew behavior deprecation period", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "thanks toxicable following issue seems library issue instead angular close item", "d": "11/2017"}, {"body": "close issue though", "d": "11/2017"}, {"body": "fired twice first load would use handle instance", "d": "11/2017"}, {"body": "closing based alexzuza response", "d": "11/2017"}, {"body": "meantime angular developed tool help update one version another", "d": "11/2017"}, {"body": "yes know resource analyze project project large automatic analysis would warn hasty actions example either directly console would give links documentation update piece code", "d": "11/2017"}, {"body": "looks like feature request angular cli please open respecting issue template", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "ok thank response", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "pashabolokhovcs thanks bringing middle changing selectors per pr trotyl mentioned leftover precli documentation", "d": "11/2017"}, {"body": "look mychild perhaps around thu nov kapunahele wong notifications githubcom wrote pashabolokhovcs thanks bringing middle changing selectors per pr trotyl mentioned myapp leftover precli documentation receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "great find would willing submit pr feel free tag", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ngoninit wait async operations complete hide view ngif display something else instead use resolver resolve data entering route", "d": "11/2017"}, {"body": "thnx toxicable", "d": "11/2017"}, {"body": "digging bit realize feature might require angular distinguish document document fragment creating elements quickly edited code inject getting errors associated trying call document fragment nt exist", "d": "11/2017"}, {"body": "stack blitz would great p", "d": "11/2017"}, {"body": "toxicable updated testing instructions", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "khoying hmm tried find implementation router module final version without success looks nt btw commit implements angular repo", "d": "11/2017"}, {"body": "sorry listed available blog read guess available yet thanks", "d": "11/2017"}, {"body": "implementing something similar debounce see issue", "d": "11/2017"}, {"body": "right tz names supported check changelog details tldr switched intljs based implementation custom implementation fix great deal bugs ocombe could please follow make sure doc date may give pointer could implemented add doc", "d": "11/2017"}, {"body": "vicb thank quick response hopeful oversight implementation new issue outdated documentation", "d": "11/2017"}, {"body": "yes sorry switched intl api remove timezone names represents many data locale something absolutely need", "d": "11/2017"}, {"body": "already project pulled create valid offset pass future considering using datefns along another library represent subset zone info need reduce bundle sizes fri nov olivier combe notifications githubcom wrote yes sorry switched intl api remove timezone names represents many data locale something absolutely need receiving authored thread reply email directly view github mute thread gt phone website linkedin", "d": "11/2017"}, {"body": "see issue", "d": "11/2017"}, {"body": "guess similar nt see resolvement", "d": "11/2017"}, {"body": "believe intended behaviour longer need compile files via anymore done already", "d": "11/2017"}, {"body": "thought ngc wrapper tsc", "d": "11/2017"}, {"body": "still emits ngfactory files longer invoking command line files complied using type information required angular saved metadatajson summaryjson files also emitted also include files makes typewise similar file setting tsconfigjson file quick example create new project using angular cli edit file looks something like command line run inspect look similar", "d": "11/2017"}, {"body": "used via output bundled files webpack emits managing virtual file system internally means file saved disk ts js saved memory consumed webpack included bundle defines emitter used within compilercli actually emits virtual streams", "d": "11/2017"}, {"body": "interesting mainaotts expecting ngfactoryts file right import appmodulengfactory aotangularappappappmodulengfactory platformbrowser bootstrapmodulefactory appmodulengfactory", "d": "11/2017"}, {"body": "depends context talking library creation appmodule usage user library bundling application yes need ngfactory file steps compile ngc bundle webpack difference compiler generated extra code ie ngfactory ngsummary ngstyle etc compile developer code compiler output entire code js yes bundle instruct webpack ngfactory file app root module everything js code jumping game part code gendir part src folder", "d": "11/2017"}, {"body": "ok understand saying instead ngc p tsconfigaotjson run ngc bundle webpack get error error atloader module angularappappappmodulengfactory resolved c allowjs set maybe missed something reading release notes", "d": "11/2017"}, {"body": "ok run specific file want use configuration answer issue right error message wrote difference compiler generated extra code ie ngfactory ngsummary ngstyle etc compile developer code compiler output entire code js error says simply allow js config compile although recommended use remove ts loader", "d": "11/2017"}, {"body": "nt create typescript factories starting", "d": "11/2017"}, {"body": "vicb updated readmemd compilercli users nt issue stumbled around quite awhile searching answers since readme still stated procedure found understand intentional documented anywhere", "d": "11/2017"}, {"body": "problem nt directive according mdn phrasing content allowed within element angular might enforcing rule browser would otherwise rule playing anyway", "d": "11/2017"}, {"body": "dup", "d": "11/2017"}, {"body": "searched hour nt find issues need improve googlefu thanks ericcarraway skreborn", "d": "11/2017"}, {"body": "please ensure using typescript currently angular support typescript newer yet", "d": "11/2017"}, {"body": "ahhh could problem already upgraded typescript roadmap supporting ts dont know thank response help", "d": "11/2017"}, {"body": "see", "d": "11/2017"}, {"body": "strip decorators anymore believe remove decorators angular cli using package strange got result running nt think ts version anything might nt think jit vs aot option instruct aot compiler create files suitable jit use never tried add runtime file nt know works currently still mix options options values shared get clear time", "d": "11/2017"}, {"body": "update using ts emit decorators silently", "d": "11/2017"}, {"body": "update coming months sorry exact timeline", "d": "11/2017"}, {"body": "cc tbosch chuckjaz tbosch think edge case microsofttypescript nt handle also using ts solve problem", "d": "11/2017"}, {"body": "another update help identify source nt custom type even intrinsic types fail", "d": "11/2017"}, {"body": "ok change someone interested working monkey patching workaround angularcompilercli correctly lower expression declarations decorators see import ts typescript import angularcompilercli const lowerexpressions require angularcompilerclisrctransformerslowerexpressions function touchnode node tsnode nodeparent const original tsnode tsgetoriginalnode node original node amp amp originalparent nodeparent originalparent tsforeachchild node touchnode const getexpressionloweringtransformfactory lowerexpressionsgetexpressionloweringtransformfactory lowerexpressionsgetexpressionloweringtransformfactory function requestsmap program const fn getexpressionloweringtransformfactory requestsmap program return context gt sourcefile gt const result fn context sourcefile result sourcefile tsforeachchild result touchnode return result import file top webpack config module use invoke local file", "d": "11/2017"}, {"body": "waiting fix", "d": "11/2017"}, {"body": "tips integrate fix project without", "d": "11/2017"}, {"body": "create local executable acts passthrough run workaround first pass control original ng script assuming following file root project filename ng bash usrbinenv node workaround require nodemodulesbinng test work maybe modifications based os also add packagejson scripts", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "rmrevin export function serializetype object return function return object export class catalogitem id string type serializetype catalogcategory category catalogcategory null type serializetype packingvariant packing packingvariant price string null", "d": "11/2017"}, {"body": "probably target change might solve problem target target angularclijson", "d": "11/2017"}, {"body": "issue upgrading angular aldialimucaj nt think angularclijson target property mean tried got error angular module even set testing blocker using angular app runs builds fine tests broken", "d": "11/2017"}, {"body": "please report cli thanks", "d": "11/2017"}, {"body": "ah yes rolled back angularcli left dependencies error goes away thanks vicb", "d": "11/2017"}, {"body": "thank replies lukemadera already report issue angularcli project", "d": "11/2017"}, {"body": "adwd would use array cycling around array point view need transformation vector use right", "d": "11/2017"}, {"body": "similar problem applying pipe adwd adding property items formarray words necessary angular team adds property", "d": "11/2017"}, {"body": "mlcmlapis nt want manage arrays original todos form array formcontrol something identify think possible sorry misunderstood mean english speaker", "d": "11/2017"}, {"body": "kostyatretyak addition index start think something like field might useful want form array checkbox label iterate form array todos array field add label text use template example code html todos text", "d": "11/2017"}, {"body": "adwd hmm sure exactly want still array lookup elements somehow nt want use sequential order elements type primitive values way need transformation vector map array element index sequential order inside array unique value part important app point view original original elements order vector could reordered way still keeping relation original formarray index always lookup element original using index course manage mapping vector add remove elements original common thing used similar cases", "d": "11/2017"}, {"body": "works fine version official build may need inspect local network accessed", "d": "11/2017"}, {"body": "thank may read report everything works mozilla firefox microsoft edge local networks message clearly indicates local network one blocking things furthermore downloaded pasted directly browser working inside application one fails downloaded chrome please notice cache explicitly disabled", "d": "11/2017"}, {"body": "please try disable chrome extensions", "d": "11/2017"}, {"body": "reproduce", "d": "11/2017"}, {"body": "adblockublock rules issue easyprivacy filter blocking", "d": "11/2017"}, {"body": "using ublock origin add following rule", "d": "11/2017"}, {"body": "using adblock try", "d": "11/2017"}, {"body": "nt issue angular object turned json difference implemented chrome browsers compared shim using take example chrome yet one json returned nested array chrome correctly implements correctly seen inclined think implementation correct", "d": "11/2017"}, {"body": "personally would nt recommend json issue one reason since nt usually display json users less reason would nt map template becasue cant use ngfor due lack order", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "good catch", "d": "11/2017"}, {"body": "nice found thing fix add appforbiddenname alias name input view use appforbiddenname heroname inside direct file directive selector appforbiddenname providers provide ngvalidators useexisting forbiddenvalidatordirective multi true export class forbiddenvalidatordirective implements validator input appforbiddenname forbiddenname string validate control abstractcontrol key string return thisforbiddenname forbiddennamevalidator new regexp thisforbiddenname control null view file", "d": "11/2017"}, {"body": "also referenced invited op submit pr either mumblesnz leilitroy welcome please feel free tag pr", "d": "11/2017"}, {"body": "think leilitroy solution way go leilitroy submit pr otherwise might take", "d": "11/2017"}, {"body": "hey kapunahelewong made changes locally trying create pull request per getting permission errors try push branch made changes first time used pr mechanism advice", "d": "11/2017"}, {"body": "hi mumblesnz need fork angularangular fork github account create branch work push fork create pr help still stuck let know happy help process", "d": "11/2017"}, {"body": "thanks kapunahelewong thought fork might required nt see mention contribution guide must common knowledge pr nt fixing tests complete pr shortly", "d": "11/2017"}, {"body": "pipe pure meaning reevaluated one argument changes one arg object might become confusing amp bug prone", "d": "11/2017"}, {"body": "turning zones manually trigger change detection somehow without zones angular idea run change detection something would recommend without specific knowledge change detection works zones works", "d": "11/2017"}, {"body": "toxicable thanks", "d": "11/2017"}, {"body": "seams like list exclusions could quite big might look bit weired pass parameter also want sometimes exclude include custom decorator would look much nicer approach current solution checking request url inside interceptors based making decision apply interceptor always wanted review part", "d": "11/2017"}, {"body": "kuncevic see decorator usage decorate properties functionsclass declarations sure actual function call maybe option would sufficient", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "interceptors designed intercept action exactly exception happen need exclude certain requests nt using interceptors implement use case opinion solutions group specific http behaviours", "d": "11/2017"}, {"body": "jcimoch see way achieving used strategy certain conventions allow generic disabling interceptors app perrequest basis seedy disagree really depends use cases typical example would behavior loadingnotification implemented using interceptor transparently activated deactivated across whole app times might want global loading notification might blocking local one maybe nonblocking thus disable interceptor certain request although agree focus angular allowing custom meta data send along request broader solution used achieve seems planned", "d": "11/2017"}, {"body": "christianulbrich app wise definitely give responsibility interceptor use case interceptors aware requests headers urls designed poor responsibilities plus interceptors bad pattern easy forget cut calling chain use case really caller knows call trigger notifications instance wrap application calls within use exception logic single black sheep case custom headers putting app logic custom header might someday end multiple particular cases hence multiplying number understand guys looking feel like complicated way answer problem simple solution", "d": "11/2017"}, {"body": "nt something plan implementing interceptors currently feel free try convince", "d": "11/2017"}, {"body": "alxhub understand however would nice see release could implement feature project", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "please read way issue tracker place support requests please ask requests stackoverflow tag question tag", "d": "11/2017"}, {"body": "dose nt appear exist locales see cc ocombe", "d": "11/2017"}, {"body": "hello according cldr portuguese brazil ptbr default content locale portuguese pt means import pt see example see currency pt real brasileiro currency brazil reason pt portuguese portugal use ptpt instead probably people brazil making country people speaking portuguese", "d": "11/2017"}, {"body": "upgrade version", "d": "11/2017"}, {"body": "file deleted first reinstall everything running give error also upgrade works properly think package version parallel packages upon creation project anyway thanks lot toxicable", "d": "11/2017"}, {"body": "yes upgrade", "d": "11/2017"}, {"body": "closing issue thanks", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hello new docs coming next days already merged lot work rewrote guides lot", "d": "11/2017"}, {"body": "straightforward documentation would help opinion nt checked docs since rc times complete coverage section tutorial docs would pretty much well appreciated push projects begin using seen library used much official translation module either ionic many web poststutorials use instead official module maybe easier start simple translations library anyways glad see angular core team", "d": "11/2017"}, {"body": "thanks feedback check new guide wrote", "d": "11/2017"}, {"body": "would love also considered sort messages order appearance code order change message used new place moved instance message used nested component message later added upper code file message moved upper lines thus making difficult keep track example messages sorted id wo nt issue ability disable writing unrelated source target tags extracting less noise generated new usages message ability translate party provided components namely let say component included package ship translations overridden complimented new languages", "d": "11/2017"}, {"body": "one use case encountered angular route names currently build phase needs take care statically would nice somehow possible translated urls", "d": "11/2017"}, {"body": "general would also like better tools managing large translation files way easily view diffs finding unused translations existing files would also useful possible improve working icu selects booleans html candy select true want false nt want candy candy select true want false nt want candy", "d": "11/2017"}, {"body": "smoke nt difficult probably wo nt spend time sorry many cli options ideal would also requires update cli coming runtime translations wartab lot people requested make sure possible code translations maistho tools already see example select icu official specification says works strings booleans sorry", "d": "11/2017"}, {"body": "ocombe since numbers allowed perhaps converting booleans numbers would possible html candy select nt want want candy guess might little bit much magic though probably better convert boolean number manually eg html candy select nt want want candy", "d": "11/2017"}, {"body": "one important requirements must able change translated strings backend able support new languages without required rebuildredeploy app solved ngxtranslate means translateloader works good would love see supported angular", "d": "11/2017"}, {"body": "update oct request kind official workflow updates translations extracting translations sending receiving translations vendor updating code new copy blocks updating require extracting point failure sending receiving translations back repeat tools like would great kind official support common workflow context request runtime translations big feature upcoming release think important feature would still like previous implementation updated easily build many bundle locales like flexibility many bundles per locale generating static content somewhat needed seo purposes many bundles affords opportunity statically prerender whitelist blacklist state application based list localeslangregion example application level app bundles route level app render route component level app render coupons component element level switch affiliates logo wall affiliates logo wall", "d": "11/2017"}, {"body": "hi guys think angular support following bundling number locales autodetection browser locale fallback default locale ability dynamically switch language within app eg pick language dropdown list load language based profile settings autoupdate messagesxlf tracking translation completeness using locales path list default locale options store localizations json file much easier work json files build tools work format developers look build app app users nt want know want open app see application language know leads bundling app multitude languages locales nt forget arabic languages different text direction app switch graphics painful stuff comes play googlebot appears site app understand route params able show app many localeslanguages get indexed otherwise organic traffic also backend smart enough understand header normally sent browser react geoip data case need find way let angular work conjunction backend services best make sure angular universal able serve correct localized version app also done way googlebot able understand page getting served based browser locale nt think cloaking technique used think take look angulartranslate practical approach used earlier one projects", "d": "11/2017"}, {"body": "big issue locale strategy company supports different cultures realistic import locale docs suggest also realistic separate build would nice could somehow provide locale data pipes example angularjs apps would get users culture download correct locale provider see working one bundle locales would also work also concerned bundle size", "d": "11/2017"}, {"body": "locale data lazy loaded bootstrap application know locale app use add example docs", "d": "11/2017"}, {"body": "ocombe would perfect", "d": "11/2017"}, {"body": "ocombe would great could probably hack around user object user locale comes http request guessing late bootstrapping process guess hack could would read locale cookie perhaps api sets", "d": "11/2017"}, {"body": "register locale time long use one pipes route resolver example", "d": "11/2017"}, {"body": "ocombe example combined pipe would great reading documentation talks able set app module", "d": "11/2017"}, {"body": "used anywhere long use one pipes could open issue nt forget update guide also nt diverge much original topic", "d": "11/2017"}, {"body": "ocombe created hopefully describing discussed", "d": "11/2017"}, {"body": "one thing driving nuts missing considered compile error ca nt build could nt treated way missing translation reuse nt really great xliff tools around find got quirk smartcat seems best found continuous project development update strings new ones nt translate something xlf file get compile error got ta fail build find ones missing manually remove easy search matecat nt handle continuous projects smartcat exports without bundle missing nt include context pootle nt support xliff placeholders nothing yet supports xliff looking wrong places", "d": "11/2017"}, {"body": "new guide still pr merge soon worries", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation right place content sharing", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "current angulario branch already merged successfully seems everything fine except angulario currently update latest commit stable yet", "d": "11/2017"}, {"body": "yes need successful build generate new aio website troubles ci right fixed soon", "d": "11/2017"}, {"body": "fixed closed", "d": "11/2017"}, {"body": "syncs actually master branch currently branch currently beta versions released could", "d": "11/2017"}, {"body": "currently released branch next soon", "d": "11/2017"}, {"body": "see", "d": "11/2017"}, {"body": "ericmartinezr got closing", "d": "11/2017"}, {"body": "oh dear sigh", "d": "11/2017"}, {"body": "please nt remove autolinkifyinsidecodeblocks feature lovely nt many cases affected suggest blacklist eg ca nt come better solution", "d": "11/2017"}, {"body": "marginally effective pipes ensure preceded pipe character", "d": "11/2017"}, {"body": "think might also worth insisting real whitespace including around words match", "d": "11/2017"}, {"body": "think cases whitespace thanks grin eg strict pipes", "d": "11/2017"}, {"body": "angular nt tested compatible ts versions greater nt get exceptions get behaviour see drop back supported version try let us know problem still occurs", "d": "11/2017"}, {"body": "confirm issue using makes issue go away using anything cause problems would nice see updates ts version minor versions ahead useful features added", "d": "11/2017"}, {"body": "rolandjitsu explained", "d": "11/2017"}, {"body": "rolandjitsu come point", "d": "11/2017"}, {"body": "please report cli issues repo also make sure respect issue template", "d": "11/2017"}, {"body": "older cli version allowed set outdir property angularclijson file point project root reset path within project solved issue", "d": "11/2017"}, {"body": "case want build output outside cli project build aspnet core website wwwroot folder run live reload angular app served inside aspnet core website new limitation cli project run outside cli project folder", "d": "11/2017"}, {"body": "nm see fixed next release cli", "d": "11/2017"}, {"body": "facing issue even downgraded angularcli updated outdir internal build directory strange someone know fix", "d": "11/2017"}, {"body": "check version angular cli package problem cli version angular see cli issue angularangularcli", "d": "11/2017"}, {"body": "case packagejson oh point typescript officially supported project used typescript quite code transpiled marvellously humour changed typescript removed nodemodules along packagelockjson ed tried build luck error", "d": "11/2017"}, {"body": "ngxdatatable updated support angular hence metadata version mismatch error try pinning version", "d": "11/2017"}, {"body": "ey clydin long time read indeed setting atsign swimlanengxdatatable trick", "d": "11/2017"}, {"body": "chuckjaz belong thinking", "d": "11/2017"}, {"body": "track tsickle support ts hope angular could support ts soon", "d": "11/2017"}, {"body": "need track compiler project angular repo requirement support well support comes angular done update version tsickle use angular", "d": "11/2017"}, {"body": "gbgames link tutorial following yes one different versions", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "gbgames put version app github happy look see find issue compare see clarify tutorial", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "yep closing dupe add support fb line", "d": "11/2017"}, {"body": "vasyliv cli aot yet enabled default sure want turn use flag many files project", "d": "11/2017"}, {"body": "problem typescript pin typescript problem solved", "d": "11/2017"}, {"body": "guess get permanently blocked keep trolling please check code conduct", "d": "11/2017"}, {"body": "please stop childish behaviour thank", "d": "11/2017"}, {"body": "directly use window object navigate external site note work plunker separate window click", "d": "11/2017"}, {"body": "merged ago need time build", "d": "11/2017"}, {"body": "true main site aravindfz please use", "d": "11/2017"}, {"body": "since pr already got merged closed even opened little late pr", "d": "11/2017"}, {"body": "vicb deployment yet done code changes reflected site", "d": "11/2017"}, {"body": "issues closed merge release", "d": "11/2017"}, {"body": "angular nt tested ts higher recommended version use", "d": "11/2017"}, {"body": "thats bad want use latest features typescript seems like angular compiler wont allow", "d": "11/2017"}, {"body": "mlakmal try playing tsconfig like setting instead fixed issue nonemitted static fields decorated classes", "d": "11/2017"}, {"body": "styles added component apply component", "d": "11/2017"}, {"body": "global css file workaround put component", "d": "11/2017"}, {"body": "please reopen issue", "d": "11/2017"}, {"body": "angular nothing think something wrong angular cli please open", "d": "11/2017"}, {"body": "try explain also nt think anything create project using create directory add become global components add every component color without add every adding however happening nt become global unless add even text generated backs explaining please open back issue", "d": "11/2017"}, {"body": "please open new issue runnable reproducion without using angular cli use start point", "d": "11/2017"}, {"body": "trotyl issue without cli recreate issue issue never closed reopen issue", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "thx ericmartinezr closing duplicate angularangularcli", "d": "11/2017"}, {"body": "difference angularangularcli angularangularcli angular angular build succeeds angular", "d": "11/2017"}, {"body": "duplicate design", "d": "11/2017"}, {"body": "apologies nt seen wasnt documentation read may missed", "d": "11/2017"}, {"body": "actually keeping behavior native javascript language documented way", "d": "11/2017"}, {"body": "yeah actually read javascript way replied use previous versions close issue", "d": "11/2017"}, {"body": "think found issue seems custom toolstack toolstack mostly uses generate files happens file tries import objects importing file since objects exported resolved undefined assume also modifies file", "d": "11/2017"}, {"body": "confirm modify file able fix tooling use modified files therefore bug closed", "d": "11/2017"}, {"body": "petebacondarwin gkalpak already started looking issue days ago still occurring pete george please post recent status update vicb fyi since caretaker sees one quite often", "d": "11/2017"}, {"body": "afaict currently flakes come occur specs related fact always scroll top short delay new doc rendered race condition seen occur tests use helper might related fact links appear two places either topbar window wide enough sidenav changes dynamically depending window width happens mostly api pages specs seen specs much lower frequency though idea might causing things nt know nt know exactly triggered flakes changes happened around time flakes started appear may affected tests without clear upgrade chrome fix another flake related google analytics pr might address least considerably reduce first two flakes nt think able reproduce one locally nt pointed petebacondarwin seems protractor properly waiting angular could issue protractor b chromedriver c zones testability service e ongoing investigation smiley considering major pain point prs atm petebacondarwin suggested agree move tests selarate optional job investigate", "d": "11/2017"}, {"body": "gkalpak move tests optional job sounds good nt potential fix sight vikerman seen issues related test flakes chrome protractor", "d": "11/2017"}, {"body": "infofindings reverted still get flakes still get flakes chrome dev errors appear understanding correct trying perform action eg etc element located element locator eg weird nothing caused element removed dom quick look chromedriver source code would caused specific property missing seen error element longer reachable calling retrieveitem could happen considering element previously reachable clearstale previosuly found element reachable check turn depends noderoot document check failures could caused reference changing unexpectedly example navigation happened point test", "d": "11/2017"}, {"body": "could kind zonejs bug causes tests move assertions still running updated zonejs recently", "d": "11/2017"}, {"body": "would like research part run following error occurs use", "d": "11/2017"}, {"body": "please use yarn instead sun nov jialipassion notifications githubcom wrote would like research zonejs part run yarn aio following error occurs error error typeerror read property length undefined objectunescapeidentifier userslijiaworkspaceangularaionodemodules gettextofnode userslijiaworkspaceangularaionodemodules emitidentifier userslijiaworkspaceangularaionodemodules pipelineemitunspecified userslijiaworkspaceangularaionodemodules pipelineemitwithhint userslijiaworkspaceangularaionodemodules pipelineemitwithsourcemap userslijiaworkspaceangularaionodemodules emitnodewithcomments userslijiaworkspaceangularaionodemodules pipelineemitwithcomments userslijiaworkspaceangularaionodemodules pipelineemitwithnotification userslijiaworkspaceangularaionodemodules emit userslijiaworkspaceangularaionodemodules emitparameter userslijiaworkspaceangularaionodemodules pipelineemitunspecified userslijiaworkspaceangularaionodemodules pipelineemitwithhint userslijiaworkspaceangularaionodemodules pipelineemitwithsourcemap userslijiaworkspaceangularaionodemodules emitnodewithcomments userslijiaworkspaceangularaionodemodules pipelineemitwithcomments userslijiaworkspaceangularaionodemodules use yarn nodejs receiving authored thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "looks like bumped commit days ago", "d": "11/2017"}, {"body": "need patch rxjs", "d": "11/2017"}, {"body": "looking changelog zonejs commit one previous comment could conceivably make difference could", "d": "11/2017"}, {"body": "run test times reproduced environment continue try reproduce", "d": "11/2017"}, {"body": "might need less powerful machine get timing right flake appear try sending pr watch ci results restart build pushing bogus changes pr branch might need patch rxjs right thing since use rxjs extensively let try sun nov pm jialipassion notifications githubcom wrote run test zonejs times reproduced environment mac os high sierra chrome bit yarn continue try reproduce receiving authored thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "igorminar got try make pr reproduce load currently issue described resolved pr", "d": "11/2017"}, {"body": "afaict related zonejs problem cases page reloaded one times without obvious reason happen example uses hood would explain issues different references described previous comment still nt able figure causing reloads afaict logging requests sent chromedriver request sent request triggered reloading also afaict reloading triggered aio app eg locationservice guess either caused angular internals unlikely something inside chromedriver fun fact angularprotractor seems work around similar problem iedriver still confused", "d": "11/2017"}, {"body": "much digging could without entering chromedriverchrome internals mentioned seems unexpected unprovoked afaict reloading probably triggered chromedriver chrome leads flakes idea might causing appears aio tests said downgrading chromedriver chrome respectively make flakes go away see superficial look project changelogs nt spot something suspicious obviously understand much smiley nt feel point putting time atm although makes unhappy gotten bottom smiley said need lingterm plan ca nt stay chrome forever current plan wait hope chromedriver solves issue nt sound sustainable grin", "d": "11/2017"}, {"body": "already angular cli", "d": "11/2017"}, {"body": "says", "d": "11/2017"}, {"body": "sounds like issue", "d": "11/2017"}, {"body": "jit compilation still working browsers certainly way least dynamically load module aot compiled components contain html templates even children components templates compiled needed runtime something changed sure nt think unsolvable problem right doc missing moment hand type case nt certainly priority initial releasing take never officially documented", "d": "11/2017"}, {"body": "reduce payload ship compiler aot", "d": "11/2017"}, {"body": "hey tpiros sure problem angular may want report issue", "d": "11/2017"}, {"body": "stated publicapi none types part public api one intentional omission list angularcompiler currently considered low level api subject internal changes changes affect applications libraries using higherlevel apis command line interface jit compilation via angularplatformbrowserdynamic specific usecases require direct access compiler api mostly tooling integration ides linters etc working kind integration please reach us first", "d": "11/2017"}, {"body": "create jit compilation since changing everything working year change everything think dop angular soon nonsense time code programs always update everything cruel", "d": "11/2017"}, {"body": "think options compile aot via jit payload gzipped nothing internet also fast", "d": "11/2017"}, {"body": "closed", "d": "11/2017"}, {"body": "seems like prayers heard guys third beta brings bugfixes one feature namely platformbrowserdynamic export jitcompilerfactory closes see", "d": "11/2017"}, {"body": "ciao aot course jitcompilerfactory right work correct thanks patrik", "d": "11/2017"}, {"body": "tried works guy got working without buildoptimizer false flag credit goes example", "d": "11/2017"}, {"body": "wow awesome aot bundle bigger right", "d": "11/2017"}, {"body": "buildoptimizer talking aot buildoptimizer thinking aot work jitcompilerfactory never worked even aot bundle smaller", "d": "11/2017"}, {"body": "though build jit aot flag created fair complex", "d": "11/2017"}, {"body": "chrome version firefox version", "d": "11/2017"}, {"body": "nothing without minimal repro please open new issue whenyou provide one", "d": "11/2017"}, {"body": "sorry unclear words means angular drop support tag recognized angular template become normal dom element whatever meaning offered browser look original issue allowing tag usage web components main reason angular drop introduce instead mentioned commit rationale change improve interoperability web components might make use tag need worry could valid documentation request", "d": "11/2017"}, {"body": "thanks clarification trotyl assumption wanted make sure", "d": "11/2017"}, {"body": "thanks clear explanation trotyl", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "sounds like cli issue could repopen providing necessary details", "d": "11/2017"}, {"body": "hello sorry issue cli opened repository angular packages please open issue cli repository instead", "d": "11/2017"}, {"body": "build process could certainly preprocess template way sure mean pug support exactly anyway said might something consider build step never supported core", "d": "11/2017"}, {"body": "know mean able use pug file template angular component", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "come point", "d": "11/2017"}, {"body": "vicb nt understand want close issues fixed else track things", "d": "11/2017"}, {"body": "guess tracking turns problem could reopen later another external tracker", "d": "11/2017"}, {"body": "nothing planned side could community effort", "d": "11/2017"}, {"body": "seriously hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "already raised closed", "d": "11/2017"}, {"body": "working fine", "d": "11/2017"}, {"body": "download version nodejs install angular working ok upgrade nodejs", "d": "11/2017"}, {"body": "guide include aot compilation treeshaking angularcompilerplugin ngtoolswebpack support chuncks lazyloaded modules", "d": "11/2017"}, {"body": "recommendation use aot compilation also development", "d": "11/2017"}, {"body": "entry point webpack guide ca nt find link inside docs portal access webpack guide access google", "d": "11/2017"}, {"body": "see", "d": "11/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "11/2017"}, {"body": "abinayasubbiah found solution", "d": "11/2017"}, {"body": "abinayasubbiah able resolve updating relevant packages latest version take look sample repo", "d": "11/2017"}, {"body": "problem upgrading", "d": "11/2017"}, {"body": "sure help anyone case using visual studio needed upgrade typescript tools visual studio", "d": "11/2017"}, {"body": "alzdrak stated need update typescript dependency latest updated mine errors went away", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation error error unexpected value storemodule c tmpngstateexampleappnodemodulesngstatesrcngstatemoduledts imported module appmodule c tmpngstateexampleappsrcappappmodu lets please add ngmodule annotation likely issue published looks importing typing declaration actual symbol calling function sotremodule function calls supported consider replacing function lambda reference exported function resolving symbol appmodule dicussed many times solve likely using function metadata extension anywhere forroot method need replace non exported function lambda exported function error details", "d": "11/2017"}, {"body": "thanks quick response know discussed many times much time wasted solving problem tring every spproach think non exported functions used leave empty module give error function calls supported please point function exported ts import inject injector modulewithproviders ngmodule injectiontoken angularcore import commonmodule angularcommon import dispatcher servicesdispatcher import router angularrouter import routerstate staterouterstate import servicelocator helpersservicelocator import state statestate import statehistory statehistory import statehistorycomponent statestatehistory import store storestore export const initialstate new injectiontoken initialstate export const collecthistory new injectiontoken collecthistory export const storehistoryitems new injectiontoken storehistoryitems export const isprod new injectiontoken isprod export function statefactory initialstate return new state initialstate export function storefactory state state return new store state export function historyfactory store store return new statehistory store export function routerstatefactory store store router router return new routerstate store router ngmodule imports commonmodule declarations statehistorycomponent exports statehistorycomponent export class storemodule static providestore initialstate isprod boolean collecthistory boolean storehistoryitems number modulewithproviders return ngmodule storemodule providers provide storehistoryitems usevalue storehistoryitems provide collecthistory usevalue collecthistory provide initialstate usevalue initialstate provide isprod usevalue isprod provide state usefactory statefactory deps initialstate provide store usefactory storefactory deps state provide statehistory usefactory historyfactory deps store initialstate provide routerstate usefactory routerstatefactory deps store router dispatcher ps yes tell problem code ngcwebapck aot troubles", "d": "11/2017"}, {"body": "bwt exported code looks like see anything js var decorate undefined amp amp undefineddecorate function decorators target key desc var c argumentslength r c lt target desc null desc objectgetownpropertydescriptor target key desc typeof reflect object amp amp typeof reflectdecorate function r reflectdecorate decorators target key desc else var decoratorslength gt decorators r c lt r c gt target key r target key r return c gt amp amp r amp amp objectdefineproperty target key r r var metadata undefined amp amp undefinedmetadata function k v typeof reflect object amp amp typeof reflectmetadata function return reflectmetadata k v var initialstate new angularcoreinjectiontoken initialstate var collecthistory new angularcoreinjectiontoken collecthistory var storehistoryitems new angularcoreinjectiontoken storehistoryitems var isprod new angularcoreinjectiontoken isprod var storemodule function function storemodule storemodule decorate angularcorengmodule imports angularcommoncommonmodule declarations statehistorycomponent exports statehistorycomponent metadata design paramtypes storemodule return storemodule exportsstoremodule storemodule looks exactly like routermodule", "d": "11/2017"}, {"body": "error error unexpected value storemodule ngstatemoduledts looking dts js file thanks quick response please tell function exported guess probably duplicated function duplicated provide", "d": "11/2017"}, {"body": "line", "d": "11/2017"}, {"body": "mlcmlapis trying comment code inside fails getting inside", "d": "11/2017"}, {"body": "seems publishing package seems right instead published", "d": "11/2017"}, {"body": "trotyl compile get metadatajson file outputs summaryjson tsconfig compileroptions baseurl declaration true stripinternal true emitdecoratormetadata true experimentaldecorators true module moduleresolution node noemitonerror false outdir release rootdir sourcemap true inlinesources true lib dom target skiplibcheck true files indexts angularcompileroptions annotationsas decorators gendir release skipmetadataemit true build js ngc p tsconfigdistjson build umd rollup c rollupconfigjs build uglify uglifyjs c comments releasebundlesstoreminumdjs releasebundlesstoreumdjs prebuild npm run clean pre postbuild npm run clean post amp amp npm run copy build npm run build js amp amp npm run build umd amp amp npm run build uglify rollupconfig", "d": "11/2017"}, {"body": "toxicable idea fix import package npm duplicated function provider exact sample peace code point th eplace", "d": "11/2017"}, {"body": "idea fix import package npm knowledge correct package formatting little im one help duplicated function provider exact sample peace code point th eplace whops sorry misread src state store similar p although something else might cause issue providing one extra param function asking", "d": "11/2017"}, {"body": "toxicable removed parasm still error think get inside soem reason maybe reason refferences dts instead js sure fix", "d": "11/2017"}, {"body": "finally go step thanks trotyl removed skipmetadataemit true webpack ngcwebapck reason require metadata different problem anyway angular keeps failing instance support react also even reqriten mygration install new package done yesterday bounced hours also trying understand metada stopped beying generated know angular stopped looking strictmetadataemit option typescript see warnings read changelog every time line might needed somwhere hundreds others", "d": "11/2017"}, {"body": "upgrading typescript solved problem rxjs ignore cli warning typescript version lt ticket closed thanks", "d": "11/2017"}, {"body": "ngstate rxjs problem mean could solve using typescript btw latest ts", "d": "11/2017"}, {"body": "mlcmlapis yes problem described", "d": "11/2017"}, {"body": "ngstate thanks sure try solve problem via instead ts", "d": "11/2017"}, {"body": "mlcmlapis use boundcallbackobservable tried adding usages rxjs way helped", "d": "11/2017"}, {"body": "ngstate ok thanks", "d": "11/2017"}, {"body": "support request closing", "d": "11/2017"}, {"body": "nt issue angular trouble application bundled take look cli documentation matter", "d": "11/2017"}, {"body": "confirmed", "d": "11/2017"}, {"body": "ok problem comes javascript try get instead sure fix", "d": "11/2017"}, {"body": "could fixed using native method like", "d": "11/2017"}, {"body": "used something similar seems trick", "d": "11/2017"}, {"body": "awesome", "d": "11/2017"}, {"body": "templates inside found compiled compiled", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "11/2017"}, {"body": "let ask pr allow resource inlining custom transformer use case transform transform ngc compilation already possible current api", "d": "11/2017"}, {"body": "dherges today sync resource loaders", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "11/2017"}, {"body": "working fine", "d": "11/2017"}, {"body": "oh problem plunker thanks", "d": "11/2017"}, {"body": "using like bullshit", "d": "11/2017"}, {"body": "everything part public api changes subjected happen", "d": "11/2017"}, {"body": "add need either jit compiler uses decorator aot compiler uses static analysis runtime", "d": "11/2017"}, {"body": "maximusk discussed amp nt need duplicate issue tracking", "d": "11/2017"}, {"body": "trotyl nt create issue know angular team plans compiler saw doc stated plans move aot runtime", "d": "11/2017"}, {"body": "maximusk afaik plan runtime aot mean aot editor already progress editng solves could covered based dynamic template solution used angulario", "d": "11/2017"}, {"body": "trotyl checked sources imports precompiled factory runtime compilation maybe clarify approach exactly used", "d": "11/2017"}, {"body": "maximusk angular elements wrap angular component web component possibility look introduction angular mix demonstrate clearly", "d": "11/2017"}, {"body": "trotyl thanks watched talk get idea behind however nt found anything related runtime compilation sources understand still concept imports compiled factory instead compiling component", "d": "11/2017"}, {"body": "think confusion neither angulario deal aotvsjit compilation work either prefer aot known reasons grin", "d": "11/2017"}, {"body": "sorry make clear talking using dynamic html angular components runtime runtime aot", "d": "11/2017"}, {"body": "gkalpak trotyl let clarify talking string like want generate compiled component factory work dynamic components explained article factory generated angular view compiler takes component metadata template etc input metadata obtained using either jit aot compiler jit compiler requires evaluation code decorator gets executed attaches metadata class retrieved jit compiler aot compiler nt need evaluation works ast produced typescript transforms understand said add need either jit compiler uses decorator aot compiler uses static analysis runtime build time meant need two able produce factory runtime build time demand component template unknown build", "d": "11/2017"}, {"body": "maximusk guess clear still seems duplication", "d": "11/2017"}, {"body": "trotyl right main problem minimum none info thing mean exact code also conceptual idea today nearest future know aot mode right way today still real edge cases really way compile part template ondemand runtime could fine fact accept factors limit performance sizing point view", "d": "11/2017"}, {"body": "mlcmlapis nt mean request wrong content duplicate actually many problem expansibility angular view layer example signature said real requirement user simply make type definition could several requests like open compiler api open view engine api make angular view layer really expansible hacking could valid still follow way working fill template dup", "d": "11/2017"}, {"body": "trotyl yeap many open areas especially story new thing remember would interesting review whole evolution path maybe understand factors", "d": "11/2017"}, {"body": "add move upgrade angular add feature", "d": "11/2017"}, {"body": "upgrading angular still error", "d": "11/2017"}, {"body": "use constructor use injector instead see comment", "d": "11/2017"}, {"body": "errors errors occur build project aot ng serve aot aot good", "d": "11/2017"}, {"body": "problem post comments issue thanks", "d": "11/2017"}, {"body": "ocombe code work error error staticinjectorerror jitcompiler staticinjectorerror jitcompiler nullinjectorerror provider jitcompiler", "d": "11/2017"}, {"body": "please add minimal repro", "d": "11/2017"}, {"body": "added github repo reproduction vicb", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "find solution adding cache control", "d": "11/2017"}, {"body": "version cli uses eval sourcemaps development build targets sourcemaps enabled generally provide much faster build time increase bundle size important note apply production builds", "d": "11/2017"}, {"body": "clydin said made trade offs important thing note dev latency suffered due change improved production bundle size impacted either experience different please file new issue explain details", "d": "11/2017"}, {"body": "think great system noticed significant improvement build times nt see anything either angular blog angular update guide could updated describe change", "d": "11/2017"}, {"body": "clydin igorminar thank responses", "d": "11/2017"}, {"body": "analysis includes files compilation ngc incorrectly tells ts file via proposed fix change set file file ca nt remove logic altogether otherwise generated files files would emitted typescript typescript thinks sources file original file fix", "d": "11/2017"}, {"body": "related reported issue", "d": "11/2017"}, {"body": "datatables inside minimal reproduction", "d": "11/2017"}, {"body": "lazarljubenovic content within divs hold ngswitchcase directive inconsequential follow guidelines laid angular documentation regards using ngswitch", "d": "11/2017"}, {"body": "solution found restructure closing", "d": "11/2017"}, {"body": "alternative solution keep working untill bug resolve listen router event methods component", "d": "11/2017"}, {"body": "elporfirio u run u code ngzone like could zone patch http request", "d": "11/2017"}, {"body": "wandererinvoids nope nt work fn", "d": "11/2017"}, {"body": "elporfirio u use full path navigate relative u use try one", "d": "11/2017"}, {"body": "last fix proposed router listener nt work first one rest routes stop working nginit ngafterviewinit wandererinvoids solution still working please consider download example try answer thank alternative proposed js redirect buw keep session data stored far disadvantages reload entire application", "d": "11/2017"}, {"body": "following works tried course need inject", "d": "11/2017"}, {"body": "thank matthewch works router navigate enabled", "d": "11/2017"}, {"body": "agh issue exploring topic last hours still ca nt get solved issue following code constructor function constructor private http http thisgetsubbed thisgetfires subscribe data gt consolelog get data called thisdata data thisgetfires return response gt resjson handle requests requests made go page oninit simply doesnt get called ideas", "d": "11/2017"}, {"body": "royalfint subscribe method others forget implement javascript export class mycustomclasscomponent implements oninit afterviewinit onchanges code ngoninit ngafterviewinit subcribe method reference", "d": "11/2017"}, {"body": "put comment personal account check progress issue", "d": "11/2017"}, {"body": "always check running server client ssr never work pages behind auth duplicate", "d": "11/2017"}, {"body": "closing based answer", "d": "11/2017"}, {"body": "sounds similar nt think angular issue probably something messes regexp build pipeline", "d": "11/2017"}, {"body": "open issue also created small repository reproducing issue", "d": "11/2017"}, {"body": "krivochenko george mentioned issue already reported probably issue external build tool help investigating issue would great leaving issue opened people search angular team current plan investigate", "d": "11/2017"}, {"body": "probably something transforms code way nt unlikely caused something would open issue said would better domino escape unicode codeunits regexp would avoid problem altogether afaict eg", "d": "11/2017"}, {"body": "ok opened issue repository domino understood possible compile angular application aot missed something", "d": "11/2017"}, {"body": "make sure define externals webpack config", "d": "11/2017"}, {"body": "aitboudad sure correct understand property could give example", "d": "11/2017"}, {"body": "krivochenko see use webpacknodeexternals plugin", "d": "11/2017"}, {"body": "aitboudad webpacknodeexternals allows exclude modules nodemodules folder need tried use got error wrong", "d": "11/2017"}, {"body": "understood possible compile angular application aot please note fact problem reproduced angular cli ejected webpack configuration serverside rendering sure problem seems nothing wrong angular without aot", "d": "11/2017"}, {"body": "krivochenko solved issue got error referenceerror domino defined wrong idea sorry", "d": "11/2017"}, {"body": "trotyl ok rephrase understood possible compile angular application aot without using cli", "d": "11/2017"}, {"body": "experiment used webpacknodeexternals serverside everything works good see clientside know domino used serverside rendering included clientjs", "d": "11/2017"}, {"body": "understood possible compile angular application aot without using cli someone verified whether works ejected webpack config mentioned case possible make work without cli means issue lies elsewhere", "d": "11/2017"}, {"body": "solved avoid using minification serverjs compile aot without flag possible compile angular application aot without using cli sorry spent time one secret domino turned client chunk somewhere configs mistake thanks help", "d": "11/2017"}, {"body": "anyone landing thread seems relevant thx chuckeles pointing", "d": "11/2017"}, {"body": "still get issue angular using webpack build ended krivochenko using minification server files nt feel proper solution interested anyone find better workaround", "d": "11/2017"}, {"body": "checked thread", "d": "11/2017"}, {"body": "gkalpak thanks saw previous message tried add charset scripts tags still issue", "d": "11/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "11/2017"}, {"body": "different interface used refactoring required see", "d": "11/2017"}, {"body": "hi fredriklindell dropin replacement apicompatible", "d": "11/2017"}, {"body": "seems like guy culprit trying replace empty string new array size join replace rule length length length length length onto deciphering regex one reference stuff", "d": "11/2017"}, {"body": "things managed bring time rebuilds removed scss files effectively empty containing references files created default generating new component sometimes nothing got added remove direct imports replaced relative imports added file seems like pretty huge gains optimizing aot compiler documentation also updated best practices make sure build times stay low possible", "d": "11/2017"}, {"body": "hccampos relative imports bit odd tell got point view angular compiler gets compiled scsssasslessstyl compiled angular cli nt make difference imports yet looks like", "d": "11/2017"}, {"body": "filipesilva relative imports problem seems related way webpack resolves things really angular compiler example take look looks like using forces webpack go look folder try find file whereas using relative imports find directly", "d": "11/2017"}, {"body": "cli cache resources compiler asks even though happened nt ask webpack change saying saw webpack spend lot time cache might bugs", "d": "11/2017"}, {"body": "well something must going eventually reinstalled node modules kill changes compiler even builds rebuilds much faster even locking think merits profiling tomorrow without relative paths", "d": "11/2017"}, {"body": "let know anything help making rebuilds faster", "d": "11/2017"}, {"body": "filipesilva news issue finding ng build prod slow indeed stays around mins seems issue op", "d": "11/2017"}, {"body": "inthegarage optimization phase lot time consuming operations run big project nt think related issue insofar number mention nt seem line mediumbig projects small project think much", "d": "11/2017"}, {"body": "filipesilva medium project around files although may standard timings always thought phase could improvement improvements suggested incorporated future builds", "d": "11/2017"}, {"body": "always working making builds faster overall improvements coming reduce overall prod build time build optimizer processing time investigation hccampos seems concluded behaviour observed anymore maybe fixed meanwhile nt feel like much worth pursue avenue cli right evidence still problem", "d": "11/2017"}, {"body": "stexxen right get fixed right away closing issue part angularangular know right npm command even npm install typescript still seems resolve", "d": "11/2017"}, {"body": "stephenfluin unfortunately sure correct npm command per issue appears original behaviour unintended longer exists", "d": "11/2017"}, {"body": "sorry repo reproduce problem working fine jit using folder lib invalid since angular cli clear time change folder name could make runnable", "d": "11/2017"}, {"body": "hmm weird tried following exact repro steps start still getting error version node use using dist lib invalid since angular cli clear time change lib could make runnable could explain mean angularcli used app lib uses plain ngc", "d": "11/2017"}, {"body": "angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack angular cli remove folder whenever run see app never start successfully", "d": "11/2017"}, {"body": "ah think understand readme checkout branch app another directory follow readme instructions meant cloning branch somewhere else lib one directory app another way ed together without interference could whether reproduce issue way", "d": "11/2017"}, {"body": "oh see problem lacking see scripts lib would importing different angular library meaning two sets angular framework app wo nt affect real use case normal npm install", "d": "11/2017"}, {"body": "ok seems solved totally nt expect problem caused linking instead installing library especially importing applying module amp directive worked injection nt happened jit mode thank much", "d": "11/2017"}, {"body": "think error occurs need import httpmodule deprecated well httpclientmodule dependency still relies httpmodule", "d": "11/2017"}, {"body": "seem make difference moreover dependencies use deprecated http guess import module already thanks though", "d": "11/2017"}, {"body": "issue watch mode everything seems work properly production mode", "d": "11/2017"}, {"body": "filipbarak unrelated rely either rely token tried reproducing issue unable would someone able produce minimal reproduction investigate issue issue likely due party lib suggest start looking even searching use point used", "d": "11/2017"}, {"body": "toxicable think found angularmaterial version guess time upgrade thank help", "d": "11/2017"}, {"body": "getting error checked dependencies none dependent httpmodule wierd thing works run cli angular cli angular difference aot", "d": "11/2017"}, {"body": "sandangel rather surprised worked course upgrade packages fairly straight forward didnt try aot though", "d": "11/2017"}, {"body": "fixed problem everything working well build prod problem using common library unsing npm link command ng build watch use tomcat server fixed problem using command npm build aot watch adding aot alos important right version components angularcli typescript", "d": "11/2017"}, {"body": "ochezeau need app build lib link different repo happened", "d": "11/2017"}, {"body": "trotyl removed flag aot replace preservesymlinks works fine thank", "d": "11/2017"}, {"body": "gives context injection errors", "d": "11/2017"}, {"body": "error works components routes solution", "d": "11/2017"}, {"body": "import httpclientmodule httpclient angularcommon imports httpclientmodule ok", "d": "11/2017"}, {"body": "found bug opening new issue bug would best action minimal reproduction showing angular fault important thing", "d": "11/2017"}, {"body": "issue creating custom directive using importing window without declaring providers trying access inside component", "d": "11/2017"}, {"body": "add appmodulets import httpclientmodule angularcommon also add httpclientmodule imports", "d": "11/2017"}, {"body": "everything might much simpler solution fix code ngif without leading asterisk cause exception thrown", "d": "11/2017"}, {"body": "yes adding appmodulets worked thanks import httpmodule angular importing worked imports httpmodule", "d": "11/2017"}, {"body": "please share systemconfigjs facing issue seems like missing something", "d": "11/2017"}, {"body": "getting error including httpmodule work appmodulets import ngmodule injectable angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import routermodule routes angularrouter import httpmodule angular import modalmodule ngxmodialog import bootstrapmodalmodule modal ngxmodialogpluginsbootstrap import appcomponent appcomponent import exporttopdfcomponent exporttopdfexporttopdfcomponent import invalidpagecomponent invalidpageinvalidpagecomponent import viewcountservice serviceviewscountcomponent const approutes routes path home component appcomponent path redirectto home pathmatch full path export component exporttopdfcomponent path component invalidpagecomponent ngmodule imports browsermodule httpmodule routermoduleforroot approutes modalmoduleforroot bootstrapmodalmodule declarations appcomponent exporttopdfcomponent invalidpagecomponent bootstrap appcomponent providers viewcountservice export class appmodule exporttopdfcomponentts file import component viewcontainerref viewencapsulation angularcore import viewcountservice serviceviewscountcomponent import overlay ngxmodialog import modal ngxmodialogpluginsbootstrap component selector exporttopdf templateurl appexporttopdfexporttopdfcomponenthtml export class exporttopdfcomponent name string fields service code import injectable angularcore import http angular import observable rxjsrx injectable export class viewcountservice constructor private http systemconfigjs system configuration angular samples adjust necessary application needs function global systemconfig transpiler typescript typescript compiler options typescriptoptions emitdecoratormetadata true paths paths serve alias npm nodemodules map tells system loader look things map app within app folder app app packagejson name angularquickstart version description quickstart packagejson documentation supplemented testing support scripts build tsc p src build watch tsc p src w build tsc p serve liteserver cbsconfigjson serve liteserver prestart npm run build start concurrently npm run build watch npm run serve npm run build concurrently npm run serve npm run protractor killothers success first preprotractor webdrivermanager update protractor protractor protractorconfigjs pretest npm run build test concurrently npm run build watch karma start karmaconfjs pretest npm run build test karma start karmaconfjs singlerun lint tslint srcts verbose keywords author license mit dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularinmemorywebapi bootstrap corejs ngxmodialog rxjs systemjs zonejs devdependencies concurrently liteserver typescript canonicalpath tslint lodash jasminecore karma karmachromelauncher karmacli karmajasmine karmajasminehtmlreporter protractor rimraf typesnode typesjasmine repository error getting error error uncaught promise error staticinjectorerror viewcountservice staticinjectorerror viewcountservice nullinjectorerror provider viewcountservice error staticinjectorerror viewcountservice staticinjectorerror viewcountservice nullinjectorerror provider viewcountservice nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep ngmodulerefget resolvedep nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep ngmodulerefget resolvedep resolvepromise resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue zonetaskinvoketask invoke invoketask defaulterrorlogger errorhandlerhandleerror next schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectnext eventemitteremit anonymous zonedelegateinvoke zonerun ngzonerunoutsideangular onhandleerror zonedelegatehandleerror zonerunguarded apimicrotaskdraindone drainmicrotaskqueue zonetaskinvoketask invoketask globalzoneawarecallback", "d": "11/2017"}, {"body": "imported import httpclientmodule angularcommon appmodulets", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "related", "d": "11/2017"}, {"body": "never angularangular thing sure comescame maybe material mentioned", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "ericmartinezr thanks link importing fixes problem caused still relies first one", "d": "11/2017"}, {"body": "getting prodction build issue upgrading angular", "d": "11/2017"}, {"body": "look project replace", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "issue looked import rxjs observable subject subscription ctrlf", "d": "11/2017"}, {"body": "updating typescript fix issue warning message angularcompilercli requires typescript lt found instead using version result undefined behaviour difficult debug problems please run following command install compatible version typescript disable warning run ng set warningstypescriptmismatchfalse", "d": "11/2017"}, {"body": "solve issue", "d": "11/2017"}, {"body": "also confirm using bindcallback operator observable cause production build errors unless typescript upgraded supported version enough simply upgrade global typescript also make sure upgrade packagejson wo nt work", "d": "11/2017"}, {"body": "error using import import rxjs import timeout rxjsoperatortimeout import map rxjsoperatormap", "d": "11/2017"}, {"body": "anoopgoudar upgrading typescript also solved issue thank", "d": "11/2017"}, {"body": "using get error incrementally saving file fix says downgrade using get error described fix says upgrade catch need", "d": "11/2017"}, {"body": "problem ngxdatatable upgrade ngxdatatable works", "d": "11/2017"}, {"body": "works typescript replaced", "d": "11/2017"}, {"body": "yes solved updating typescript version exact version npm install typescript save latest release npm install typescript latest save", "d": "11/2017"}, {"body": "error using needed change", "d": "11/2017"}, {"body": "using single behaviorsubject method replace like try replace gives error method", "d": "11/2017"}, {"body": "need import operators", "d": "11/2017"}, {"body": "bastienlemaitre sorry noob question", "d": "11/2017"}, {"body": "solved importing operator bastienlemaitre said like", "d": "11/2017"}, {"body": "solved updating latest vesion", "d": "11/2017"}, {"body": "still get error using compiles perfectly first time save file get error", "d": "11/2017"}, {"body": "moved angularcn repo", "d": "11/2017"}, {"body": "could please provide minimal reproduction issue code supplied enough reproduce issue also followed upgrade guide", "d": "11/2017"}, {"body": "believe issue", "d": "11/2017"}, {"body": "resolvement problem aot files generated", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation nt encrypt anything client leave server handle", "d": "11/2017"}, {"body": "angularcli typescript", "d": "11/2017"}, {"body": "add file include block see example compileonsave false compileroptions outdir distouttsc baseurl src sourcemap true declaration false moduleresolution node emitdecoratormetadata true experimentaldecorators true target typeroots nodemodules types include src nodemodulesangularxyyindexts", "d": "11/2017"}, {"body": "problem adding include nt help error tsconfigjson error unknown compiler option include", "d": "11/2017"}, {"body": "error tsconfigjson error unknown compiler option include added compileroptions add parent level", "d": "11/2017"}, {"body": "yes come back right give update yes fixed problem", "d": "11/2017"}, {"body": "research module included indexts file external modules packaged way typescript loads indexts file instead indexjs file work though", "d": "11/2017"}, {"body": "using npm link nodemodules", "d": "11/2017"}, {"body": "error demo project lazy loads two modules one whose code belongs project runs ok see branch runsok module external module nodemodules fails issue title add include clause tsconfigjson build ok aot fails error running app shows empty blank page error message developer console update code tsconfigts aot builds runs ok jit", "d": "11/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "11/2017"}, {"body": "get similar issue running works ok occurs module linked via local path sure compilation error bug error vicb steps reproduce follows cd tmp mkdir npmissue amp amp cd npmissue download install library git clone b master cd npm install npm run build cd wget tar xvzf npmlinkissuetesttargz cd npmlinkissuetest edit packagejson point correct path case file npm install ng serve aot npmlinkissuetesttargz angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript preservesymlinksng serve aot preservesymlinks", "d": "11/2017"}, {"body": "reopened difficulty adding simple npm pck consists single component angular app created via ng new downgrade version something else eg works issue need add include tsconfigjson", "d": "11/2017"}, {"body": "micheleissa reporting angular aot compiler bug please make reproduction pure commands without using build process otherwise report angular cli integration problem", "d": "11/2017"}, {"body": "trotyl thank", "d": "11/2017"}, {"body": "facing problem looks like angular angular cli backward compatible", "d": "11/2017"}, {"body": "problem project everything working fine till decided upgrade angular everything started screenshot bugs sure fix right top bug got lot warnings like scaring us follow upgrades", "d": "11/2017"}, {"body": "problem lib working used aot preservesymlinks bug nt want use aot crash", "d": "11/2017"}, {"body": "still issue library aot preservesymlinks solves issue development really good build takes much longer ng serve anyone knows better solution adding indexts tsconfig file nt worked", "d": "11/2017"}, {"body": "problem package added tsconfig file changes error packagejson", "d": "11/2017"}, {"body": "figured problem add tsconfigappjson instead tsconfigjson", "d": "11/2017"}, {"body": "thanks added following error occurre", "d": "11/2017"}, {"body": "put include file specify files want compiled also add src files src", "d": "11/2017"}, {"body": "anyone problem also check comment everything well explained filipe", "d": "11/2017"}, {"body": "thanks read found package library created correct way could please post reference produce angular library standard correct way", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "trotyl think doc existing issue navigation", "d": "11/2017"}, {"body": "sarunint wonder reason stay lts instead", "d": "11/2017"}, {"body": "maybe party libraries tools complex reasons apps today happy case", "d": "11/2017"}, {"body": "oh nt realise good know istiti personally upgraded already strongly suggest everyone many people nt comfortable upgrade yet", "d": "11/2017"}, {"body": "would nt able achieve thing using router", "d": "11/2017"}, {"body": "improve code making cleaner thanks lot hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "baruchvlz need childcomponent interact parentcomponent use routeroutlet interact parentcomponent example variable parentcomponent changes childcomponent ngswitch change automatically routeroutlet change util url changed nt use router suggestion thanks lot", "d": "11/2017"}, {"body": "lazarljubenovic issue tracker support request", "d": "11/2017"}, {"body": "fires event fired browser ie browserdependent angularrelated test browsers tested event fired element loses focus older versions chrome might different behavior spec little vague fired browsers deviated behavior past going close issue since different behavior affected angular afaict btw might want look event fires time input values changes", "d": "11/2017"}, {"body": "gkalpak checked issue one time home works exactly reply double check implementation tomorrow thank", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "stuff like happens json file fubar recommendation create new project compare json files old new make similar", "d": "11/2017"}, {"body": "could please provide minimal reproduction issue code supplied enough reproduce issue also followed upgrade guide", "d": "11/2017"}, {"body": "typescript files longer emitted aot compilation use generated javascript files", "d": "11/2017"}, {"body": "experiencing exactly following documentation expecting able import generated modulengfactory like import appmodulengfactory appappmodulengfactory factory ts file mentioned aot folder nowhere found documentation date", "d": "11/2017"}, {"body": "minimal reproduction gt using cli project using webpack custom config uses ngtoolswebpack irrelevant problem followed official guide far tell generated ngcli configured use jit yet somehow magically uses aot running", "d": "11/2017"}, {"body": "tried working", "d": "11/2017"}, {"body": "okay fixed least need absolutely sure use path file pointing appmodule file ngfactory suffix eg mainaotts lying folder appmodulets import appmodulengfactory appmodulengfactory", "d": "11/2017"}, {"body": "used expect works together everything jit aot like works webpack looking already built compiled add factories get error get error", "d": "11/2017"}, {"body": "definitely path problem using like worked use dir one looking angular compiler cli expect expect angular compiler cli expect", "d": "11/2017"}, {"body": "issue ngfactoryts files stopped built worked", "d": "11/2017"}, {"body": "updated using jit", "d": "11/2017"}, {"body": "think ngtools angular compiler synchornized right something like path issue", "d": "11/2017"}, {"body": "even webpack aot working right angularcli works though without webpack useless wait update maybe many updates dont know breaking changes lot documented", "d": "11/2017"}, {"body": "using webpack angular aot ngtoolswebpack perfectly fine also using jit webpackdevserver development", "d": "11/2017"}, {"body": "sometimes works aot sometimes nt idea gives weird errors directives module yeah using aot jit impossible yeah dev jit works prod aot works always get error", "d": "11/2017"}, {"body": "plugins angular older please use correct one", "d": "11/2017"}, {"body": "yes found thanks much hell angular migration", "d": "11/2017"}, {"body": "need absolutely sure use path mainaotts file pointing appmodule file ngfactory suffix eg mainaotts lying folder appmodulets suddenly ngfactory file different folder folder used since file actually physically created webpack build nightmare debug documented somewhere read changelog nt found anything also aot guide nt info used guide setting aot webpack seems gone", "d": "11/2017"}, {"body": "nothing observables say emissions async underlying observable needs async emission async take example see subject emits sync since nothing making async", "d": "11/2017"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "11/2017"}, {"body": "explain tool adding hashes image", "d": "11/2017"}, {"body": "think cli issue inline styles get preprocessed like styleurls get fingerprint image styleurl open issue instead please", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "see", "d": "11/2017"}, {"body": "ericmartinezr yes suggestion made plnkr exactly mind alternative suggestions using ngonchange writing custom setter input nearly strong", "d": "11/2017"}, {"body": "malvolio code plunkr works certain limited cases would nt advise using project suggestions also buggy thread careful", "d": "11/2017"}, {"body": "hi tbosch work", "d": "11/2017"}, {"body": "tbosch seems already resolved close", "d": "11/2017"}, {"body": "aayusharora normally would jump chance help high priority bug us internally took thanks offer let know want something else work", "d": "11/2017"}, {"body": "aciccarello thanks bringing love pr would please tag review", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "solved issue actually html special character", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2017"}, {"body": "thanks pull request logic pretty sound problem commit pulled still get infinite redirect urlhref set like set properly respectively logic setting basehref likely needs put", "d": "11/2017"}, {"body": "thanks resubmit fix trying call", "d": "11/2017"}, {"body": "submitted fix issues listed please recheck see fixes bug", "d": "11/2017"}, {"body": "jscharett please try current version cli issue persists please file cli project angularangularcli", "d": "11/2017"}, {"body": "apologies nt know filed cli check thanks", "d": "11/2017"}, {"body": "give reproduction tomavic", "d": "11/2017"}, {"body": "changing module commonjs tsconfig solved problem thanks", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github realize feature request sounds like produce example currently show would like changed new behavior", "d": "11/2017"}, {"body": "found cause used property apparently tsc wrapper evaluator nt support chuckjaz think whats better close issue turn feature request support syntax actually convenient copypast friendly", "d": "11/2017"}, {"body": "thanks request however nt something looking supporting time certainly something community could create put speak developer relations team aware", "d": "11/2017"}, {"body": "alexeagle look get fixed gotten done came unfortunately", "d": "11/2017"}, {"body": "thelgevold says gotten working might send pr angularclosuredemo indicating needs changed work released closure compiler", "d": "11/2017"}, {"body": "mean deprecate gregmagolan fork thelgevold would awesome see", "d": "11/2017"}, {"body": "alexeagle steveblue made pr upgrade", "d": "11/2017"}, {"body": "depending app may need add externs globals angular well example fileoverview externs file externs var system var hammer var global var compiled thinking extern definition eventually added angular source", "d": "11/2017"}, {"body": "yeah thelgevold thats point trying make probably added angular source extern required another app get system hammer except always wondered comes thanks pr closure demo btw", "d": "11/2017"}, {"body": "thanks everyone made happen closing", "d": "11/2017"}, {"body": "seems explain issue sounds like using imported service directly rather passing constructor component nt solve issue please create reproduction suggest using stackblitz plunker github", "d": "11/2017"}, {"body": "links might helpful anyone one github identity contributing angular sharing handy update contributing doc", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "updated repository use master branch nt notice locally another branch", "d": "11/2017"}, {"body": "large example go would like see much simpler reproduction currently would basically need debug code order find wrong sounds like reference array might changing objects inside array ca nt tell description whether expecting changes number items changes values bound still feel problem please create reproduction specific problem create new issue suggest using stackblitz plunker github", "d": "11/2017"}, {"body": "pr mentioned nt solve issue suggest commenting pr concrete example would like achieve nt provided either pr creating custom covered tests pr please bring support requests stack overflow gitter", "d": "11/2017"}, {"body": "actually correct see info improved wording avoid confusion", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "found duplicate", "d": "11/2017"}, {"body": "fix hanging nt know get attention", "d": "11/2017"}, {"body": "problem external libraries ngfactoryjs generated ngc workaround ngc process copy required nodemodules directories aot dir example run webpack", "d": "11/2017"}, {"body": "bgarel yes thought first ended outdir copy source files different source ngfactory files nodemodules generated corresponding nodemodules folder paths right bundle everything anyway think issue prioritized properly least provide non hacky solution annoys third parties like ngfactory files correct path", "d": "11/2017"}, {"body": "igmdvc create reproduction issue enough info debug sure precreating ngfactory files library side nt using rolled index file missing angularcompileroptions settings", "d": "11/2017"}, {"body": "created github repo reproduce issue", "d": "11/2017"}, {"body": "hello deprecated nt think features nt developed consider feature request", "d": "11/2017"}, {"body": "bennadel thanks issue detailed reproduction blog post nt know anything change issue nt tried already confirm also exists", "d": "11/2017"}, {"body": "reported issues require reproduction issue suggest using stackblitz plunker github please add reproduction issue", "d": "11/2017"}, {"body": "ciao jialipassion trying use following example success please help us documentation thank", "d": "11/2017"}, {"body": "seems look like zonejs script black list scroll event handler onprop const targets window documentprototype htmlbodyelementprototype htmlelementprototype zoneignoreonproperties targetsforeach function target zoneignoreonpropertiespush target target ignoreproperties scroll mouseenter mouseleave mousemove mouseover mouseout mousewheel disable requestanimationframe zonedisablerequestanimationframe true event declare like wo nt patched zonejs since filtered zonejs internally import zonejs instantly zonejs way events angular schedules execution executed root zone events like hostlistener document scroll rendererlisten el event host scroll onscroll event add event library internally event executed inside angular zone depends zone event added want events executed outside angular zone take look question jialipassion please correct wrong", "d": "11/2017"}, {"body": "zizzamia alexzuza post sample github thank research", "d": "11/2017"}, {"body": "made sample still run made pr fix one", "d": "11/2017"}, {"body": "nice jialipassion followed repo html var window document htmlbodyelement htmlelement var b scroll mousemove zoneignoreonproperties tforeach function tar zoneignoreonpropertiespush target tar ignoreproperties b zonesymbolblacklistedevents b zonedisablerequestanimationframe true js documentonmousemove function consolelog property zone zonecurrentname documentaddeventlistener mousemove function consolelog addeventlistener zone zonecurrentname property zone angular addeventlistener zone angular aspect", "d": "11/2017"}, {"body": "zizzamia use latest version still zone test repository", "d": "11/2017"}, {"body": "zonejs angular also nt use angular cli bundle everything webpack code look like", "d": "11/2017"}, {"body": "zizzamia sorry forget used internal version please wait next version", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "issue app private idea causes issue downgraded back angular tried typescript typescript issue occurs matter using angular wish could offer details", "d": "11/2017"}, {"body": "hi issue app growing day using template called fuse updating version updates angular version using blank template works fine add modules get error reading problems people try seeing happened memory consumption notice compiler crashes every time went beyond using windows ram node angular cli hope help regards", "d": "11/2017"}, {"body": "came across problem fixing error message would one improvement view would even better matched requesturl rather requesturlwithparams rather write least avoids ordering issues one parameter current workaround use request matcher function instead", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "tks", "d": "11/2017"}, {"body": "add working example", "d": "11/2017"}, {"body": "resolved", "d": "11/2017"}, {"body": "four mutuallyexclusive validation statuses form valid invalid disabled pending controls disabled form status disabled means exempt validation checks definition form disabled also invalid believe want button condition see docs", "d": "11/2017"}, {"body": "petebacondarwin vicb think got issue reference commit message mixed connected issue please reopen", "d": "11/2017"}, {"body": "oops sorry commit closed", "d": "11/2017"}, {"body": "believe pr fix issue next week land", "d": "11/2017"}, {"body": "annotation generated vscode probably change generation settings include since redundant downleveling typescript js closure need correct jsdoc comments closure", "d": "11/2017"}, {"body": "think warnings instead errors block building processand code comments block buildingeven code build ok angular configuration ca nt", "d": "11/2017"}, {"body": "refactor large codebase modifying linters migrate quite cumbersome way get around disable jsdoc parsing jsdoc parsing critical step build process", "d": "11/2017"}, {"body": "please update current version angular either problem still exists update reproduction create new issue", "d": "11/2017"}, {"body": "jasonaden ok please update new issue template include plknr link uptodate angular links still", "d": "11/2017"}, {"body": "still repros created", "d": "11/2017"}, {"body": "stable finally get offline cache appreciate team", "d": "11/2017"}, {"body": "closing appears cli related angular issue", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "think routerlinkactive expose observable version isactive great idea chance implemented", "d": "11/2017"}, {"body": "vicb take look appears regressed change", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "error specific guards uncaught errors promises looks like would issue uncaught error promise stack would", "d": "11/2017"}, {"body": "jasonaden problem seems specific guards error occurs async promiseobservable works well updated comment", "d": "11/2017"}, {"body": "reason correct log print print print properties incorrect log print output call create issue provide functionality think close issue", "d": "11/2017"}, {"body": "thank jialipassion", "d": "11/2017"}, {"body": "also experiencing could related", "d": "11/2017"}, {"body": "sorry issue caused angular see discussion", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "option based ui changes programmatic changes formcontrol marked updateon blur always reflect programmatic changes immediately eg resetting form setting value add control array programmatically ui change gated blur", "d": "11/2017"}, {"body": "reproduction", "d": "11/2017"}, {"body": "proposed solution never pass calls typecheckcompilerts instead pass simple implementation returns asked local called", "d": "11/2017"}, {"body": "currently seeing issue actually clue wrong error helping stated issue code works test", "d": "11/2017"}, {"body": "generated component factories used automatically tests use need turn import generated summary module register summary module test bed using passing last parameter admittedly convoluted example found documented clearly created tracking bug reason compiler automatically use generated factories factories retain enough information enable compiler use contain result compilation contain metadata needed compiler summaries come summaries record information elided factory allowing jit compiler generate code using aot factory jit compiler also needs able find summary call need combination telling aot compiler generate summaries telling jit compiler use summaries", "d": "11/2017"}, {"body": "delagen post solution resolve issue exact config changes webpack config", "d": "11/2017"}, {"body": "mashb using help use build pipeline error resolving module paths build ngc build use loader simply tune loadchildren calls needed add ngfactory path add ngfactory module name error new compiler emit js ts source loader simply called share loader code sure helps prefer describe module paths", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "closing thread longer activity support request go stack overflow", "d": "11/2017"}, {"body": "hi problem meligy described backend currently using xsrf protection http methods get put patch post find solution order able use angular meligy suggested avoiding lines working created httpxsrfinterceptor avoiding lines injectable export class httpxsrfinterceptor implements httpinterceptor constructor private tokenservice httpxsrftokenextractor later create provider finally add provider coremodule actually see custom interceptors implementing httpinterceptor hope helps regards jes\u00fas", "d": "11/2017"}, {"body": "alxhub docs technically speaking one might argue breaking change nt next version except deprecated eventually removed users advised stop using official recommended migration path angular docs already mention common word migration simple code change except nt api people rely deprecated set removed single pushed alternative api breaks existing behaviour yes breaking anyway answer question add note docs suggest one page http documented specifically xsrf section please make clear warning people states different old http helpful geared towards people may upgrading aware justification decision made also addition docs implementing interceptor handles get needs made easy needs exposed publicapits people implement copy angular interceptor without hard coding value trying read private members angular interceptor instance result still ugly mind added check arguably nt benefit angular anyone anything really least would better today thanks keeping code dry using separate class btw finally sorry comment sounds annoyed got personal embarrassment spend unplanned hours debugging documenting working around originally told team change simple one required due deprecation contradict angular also saved whole team many hours net certainly positive really appreciate great work folks framework loved much even run monthly meetup around folks best thanks", "d": "11/2017"}, {"body": "please keep github issues bug reports feature requests better avenues troubleshooting questions stack overflow gitter mailing list etc", "d": "11/2017"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "11/2017"}, {"body": "think way could get work dev mode would run mutationobserver outside angular zone way wo nt trigger change detection would determine change meaningful manually markforcheck get changes propagated", "d": "11/2017"}, {"body": "thanks request lansana think use case makes sense though could also create custom currently using one", "d": "11/2017"}, {"body": "hi gunterjameda maybe change template work please repost issue stackoverflow stated eric", "d": "11/2017"}, {"body": "matsko migrated app problem changing state passing parameters binding described work", "d": "11/2017"}, {"body": "matsko hi need know rely soon angular animation support animation params binding stated meaning setting variable runtime follow need fix animation duration calculated value setting state active launches animation progress bar thanks reply", "d": "11/2017"}, {"body": "closing neither bug report feature request probably best go codelyzer mentioned", "d": "11/2017"}, {"body": "added component secondlevel triage looks like caused could resolved issue", "d": "11/2017"}, {"body": "thanks issue see stackoverflow post nt intention support directive priority however case validators often waterfall effect run certain sequence assigned forms well compiler teams take look determine something canwill supported", "d": "11/2017"}, {"body": "dupe", "d": "11/2017"}, {"body": "need put back file calls one", "d": "11/2017"}, {"body": "excellent need upgrade knowledge base thereby project", "d": "11/2017"}, {"body": "sounds like issue needs fixed please create running example reproduction suggest using stackblitz get full vscode environment", "d": "11/2017"}, {"body": "actually working expected want reset form certain value must pass value reset function", "d": "11/2017"}, {"body": "pictures completely unreadable bad guys forgive perfectionism needed since social project first place", "d": "11/2017"}, {"body": "suggest image", "d": "11/2017"}, {"body": "second part duplicate however clear answer got framework going punt correct", "d": "11/2017"}, {"body": "see comment related issue think help answer question yes agreed type functionality needed new apis coming access nativelike dom api client server address feature requests close issue solution features already planning upcoming release", "d": "11/2017"}, {"body": "since really support request close issue ask stackoverflow link also create reproduction issue using stackblitz help people understand problem", "d": "11/2017"}, {"body": "really annoying using third party modules otherwise listen done event", "d": "11/2017"}, {"body": "possibly related naked empty array appears get stringified certain unclear circumstances certain cause casually mention", "d": "11/2017"}, {"body": "hstarorg nt know plan explicitly support behavior suggest getting touch developer relations robwormald stephenfluin make sure radar closing duplicate", "d": "11/2017"}, {"body": "see pr vicb taking", "d": "11/2017"}, {"body": "see pr vicb taking", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "fkolar right good api achieve want time however plans make something like happen flexibility dynamically createcompile templates correct apis would allow currently private intentional apis gone significant changes suggest waiting updates coming next months nt work reach developer advocates twitter robwormald stephenfluin familiar problem might able point helpful direction going close request already got work inqueue planned upcoming release", "d": "11/2017"}, {"body": "fixed via within release", "d": "11/2017"}, {"body": "looks like fixed", "d": "11/2017"}, {"body": "ignore version already closed still merged issue closed pr gets merged", "d": "11/2017"}, {"body": "problem private route guard accessed authorized users unauthorized user redirected infinite loop navigating go first redirect means also go though way described also stack overflow", "d": "11/2017"}, {"body": "thanks issue definitely seen issue worked debugging nt solution yet something fixed relatively soon", "d": "11/2017"}, {"body": "closed working could tell make work could well foolish missing import", "d": "11/2017"}, {"body": "toxicable another repro found workaround calling change detector delay setting value seems like quite inconvenient bug otherwise edit updated repro better one see workaround well", "d": "11/2017"}, {"body": "analysis ngc throws error thrown typechecks file type checked regular incorrectly tells ts file nodemodules via file typechecked cli unclear", "d": "11/2017"}, {"body": "proposed fix change set file file ca nt remove logic altogether otherwise generated files files would emitted typescript typescript thinks sources file original file probably also fixes", "d": "11/2017"}, {"body": "note bug still present ngc", "d": "11/2017"}, {"body": "check mean ca nt migrate yet application uses mix ts js leave get error everything turn ts code ca nt resolve imports trying make js code", "d": "11/2017"}, {"body": "currently using node module available js kind need lot efforts write dts files anyone got workaround note happens release version angular using test thanks", "d": "11/2017"}, {"body": "hey another week far tell ca nt use angular project includes js code definitely ca nt one needs right anybody else coping getting really concerned latest release addresses issues requires angular", "d": "11/2017"}, {"body": "replied using well fri nov pm james bromwell notifications githubcom wrote hey another week far tell ca nt use angular project includes js code definitely ca nt one needs allowjs right anybody else coping getting really concerned latest release addresses issues requires angular receiving commented reply email directly view github mute thread gt alan", "d": "11/2017"}, {"body": "also waiting fix ca nt upgrade angular unless fixed", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "gave converted holdout js codebase ts hopefully nobody gets upset would really like able used mixed code point though", "d": "11/2017"}, {"body": "check mean ca nt migrate yet application uses mix ts js leave allowjs get error everything nodemodules turn ts code ca nt resolve imports trying make js code update issue also facing issue migrating form angular angular", "d": "11/2017"}, {"body": "think quite worried internals angular compiler nt trivial", "d": "11/2017"}, {"body": "think huge blocker anyone migrating cli hybrid app think lot people team little bit time improve build system hybrid angular project trying put cli ca nt ton js files nt time convert ts true get false get", "d": "11/2017"}, {"body": "cant fully use tailwind lib issue", "d": "11/2017"}, {"body": "build success removed allowjs tsconfigjson packagejson hope helps", "d": "11/2017"}, {"body": "think quite clear however clearly everyone simply disable thanks", "d": "11/2017"}, {"body": "company currently investigating upgrade application angularjs angular since need support performance bundle size big issue may able resolve using aot compiler hybrid state using jit compiler sadly resulted roughly slower initial script execution migrating came across problem mentioned itsnotvalid filipesilva also blocker preventing us merge migration branch main", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "closing support request", "d": "11/2017"}, {"body": "tracking purpose duplicate", "d": "11/2017"}, {"body": "sorry nt supported use case interceptors currently", "d": "11/2017"}, {"body": "fixed adding id routerlink match route info", "d": "11/2017"}, {"body": "planned feature quite bit involved implement blur given would require existing pipeline integrate rx streams requires design etc", "d": "11/2017"}, {"body": "toggle icon needs accessible via mouse keyboard would nicer able write instead", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "camiloterevinto may interest", "d": "11/2017"}, {"body": "evancarroll angular version node used run scripts build test documentation app related data guarantee work version use test ci always try use current lts probably switch soon clear scripts likely work latest nonlts version nt test ca nt know sure", "d": "11/2017"}, {"body": "ran material great one way check validators toplevel control especially multiple validator functions eventually composed one aggregate function info previous individual validators need design definitely something fix", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "please update latest version cli believe fix issue cli still nt work please file angular cli project", "d": "11/2017"}, {"body": "closing repro please open new issue attacha repro thanks", "d": "11/2017"}, {"body": "still problem ca nt tell gkalpak", "d": "11/2017"}, {"body": "mentioned tests compatible latest ts mainly due bad angularjs typings intend fix upgrade ts avoid unnecessary work lazy smiley", "d": "11/2017"}, {"body": "actually divided functionality two parts deliberately keep api flexible intended set property form control design nt force validation pass allows things like delay validation running first ui update setting validators programmatically form loads runs validation since forcing validation run would make api restrictive breaking change going leave example calling control question would resolve issue", "d": "11/2017"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "11/2017"}, {"body": "nt find changelog problems backward compatibilities angular packages angular applications workaround suggest changing hand way target metadadata min version otherwise going big problem future releases", "d": "11/2017"}, {"body": "getting issue reports people package work package error module found follow issue perhaps package change major version number build angular", "d": "11/2017"}, {"body": "library still compiled compatible users way around nt work compiled used app", "d": "11/2017"}, {"body": "thank input test current assumptions matter end quite simply think rebuild change major andor minor version numbers good show good show", "d": "11/2017"}, {"body": "two changes make tutorial thanks finding learned memory database needed installed october tutorial fails mention angularinmemorywebapi included standard cli build must installed separately easily done npm npm install angularinmemorywebapi save automatically handles necessary changes packagejson nt need make edits thanks issue gabosantycosta post particular learned data needs removed one line otherwise tutorial says refresh browser hero data successfully load mock server fact looks like hero data missing", "d": "11/2017"}, {"body": "tbosch noticed angular lot work improve static analysis catch errors early cheap fix ie fulltemplatetypecheck etc hand use old versions typescript find errors staticly like newest version particular strict mode would make sense support newer versions typescript aggresively get static checks working save costs", "d": "11/2017"}, {"body": "team working hardly make angular compatible newer version typescript prs progress sometimes forced locked since introduce breaking changes happened version typescript locked", "d": "11/2017"}, {"body": "xnnkmd sarunint said breaking change change minimum version typescript support one ready beginning rc phase shipped started try hard make breaking changes enter rc reason arbitrarily upgrade new version typescript releases typescript follow semver make breaking changes minor releases break us case changed internal apis used implement tsickle performs decorator downleveling tsickle supports one supports shortly available increase supported version typescript supporting released evaluating support well", "d": "11/2017"}, {"body": "problem appears even notannotated classes also example static fields example transpiling file simple class produces ts instead correct ts", "d": "11/2017"}, {"body": "stated angular support typescript yet typescript support likely land", "d": "11/2017"}, {"body": "yes wanted give another testcase tests working supporting higher versions ts sorry", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "closing issue since provided solution nt reply let know need info", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "think looking directive resets form model nt know anything directive", "d": "11/2017"}, {"body": "something planned fix always error angular empty body response", "d": "11/2017"}, {"body": "problem angular http response code considered error", "d": "11/2017"}, {"body": "problem httpclient angular receiving http text plain body already know fix delivered stable version thanks advance support", "d": "11/2017"}, {"body": "intended general use surmise really useful bootstrap recommend using native dom calls scenario instead trying use renderer", "d": "11/2017"}, {"body": "chuckjaz could get update documentation normally first place someone would go look help aka run problems spending time locate information angular members explaining whywhy use let know prefer open separate issue", "d": "11/2017"}, {"body": "think issue related", "d": "11/2017"}, {"body": "cgatian yeah true nt found issue thanks closing leave comment", "d": "11/2017"}, {"body": "perhaps add workaround conversation", "d": "11/2017"}, {"body": "please provide examples showing trying wo nt work without feature show achieve result would like able make things simpler help designing feature", "d": "11/2017"}, {"body": "experiencing error work using following angularcli node windows", "d": "11/2017"}, {"body": "yeah webpack running works aot says classes ngmodule", "d": "11/2017"}, {"body": "add already ts import ngmodule injectable angularcore import routermodule angularrouter import application application import components pagecomponent import login pagelogin import fullpage pagefullpage import raw pageraw import layout layout import routes routes import corifeusmodule settingsservice corifeusweb import corifeusmaterialmodule src never use export need exact component injectable function ngmodule imports corifeusmodule routermoduleforroot routes corifeusmaterialmodule declarations application layout components login fullpage raw providers bootstrap application injectable export class module", "d": "11/2017"}, {"body": "supported appears compiler handling presence redundant module work around submit fix remove module classes might also good idea remove anywhere angular decorator", "d": "11/2017"}, {"body": "want radio buttons accessible expected would use attribute along get native accessible behavior mentioned adding broke reactive forms somehow seems work properly testing since ca nt reproduce issue closing issue actionable still seeing issues add please open new issue plunker repro description specifically nt working", "d": "11/2017"}, {"body": "titaneboy glad hear could solve problem suggestions", "d": "11/2017"}, {"body": "could closed pr merged already", "d": "11/2017"}, {"body": "released nt update min version", "d": "11/2017"}, {"body": "gkalpak released yet changed could confirm fix", "d": "11/2017"}, {"body": "thx confirming questioning fix though second question whether need update min version released since essentially angular require latest version work correctly ngzone saying requires later kind inaccurate", "d": "11/2017"}, {"body": "matsko looks like fix webanimationsjs", "d": "11/2017"}, {"body": "another animation jumping safari works fine chrome", "d": "11/2017"}, {"body": "bug still exists angular cli", "d": "11/2017"}, {"body": "proposal pass register param", "d": "11/2017"}, {"body": "use equivalent solution like described using", "d": "11/2017"}, {"body": "closing duplicate well needing reproduction use plunker stackblitz would would like create repro different solved referenced stackblitz please create new issue", "d": "11/2017"}, {"body": "closing dup", "d": "11/2017"}, {"body": "petebacondarwin redirects originally setup archive mode intended next mode fine disabling redirects next long still redirect archive mode", "d": "11/2017"}, {"body": "thank alxhub", "d": "11/2017"}, {"body": "minimal reproduction", "d": "11/2017"}, {"body": "proposed solution always add see", "d": "11/2017"}, {"body": "closing angular requires rxjs comments say internal code nt impact performance", "d": "11/2017"}, {"body": "leantrace encountered similar issue find solution", "d": "11/2017"}, {"body": "krivochenko downgraded angular version one version packagejson following change present realized version new line added var wschars var nowsregexp new regexp wschars", "d": "11/2017"}, {"body": "issue", "d": "11/2017"}, {"body": "leantrace thanks answer application module causes error used serverside chunk avoid use minification serverjs", "d": "11/2017"}, {"body": "issue", "d": "11/2017"}, {"body": "issue used angular ngxbootstrap webpack case two solution first variant rolled back angular problem fixed second variant rolled back ngxbootstrap problem fixed debugged saw problem ngxbootstrap concatenated module nodemodulesngxbootstraptypeaheadlatinmapjs tslint disable maxfilelinecount var latinmap lt invalid character", "d": "11/2017"}, {"body": "found solution add scripts", "d": "11/2017"}, {"body": "tinayuangao status", "d": "11/2017"}, {"body": "hi news", "d": "11/2017"}, {"body": "also ran problem tried migrate old httpmodule new httpclientmodule", "d": "11/2017"}, {"body": "would great param migrated project used", "d": "11/2017"}, {"body": "happen need send body request ignored", "d": "11/2017"}, {"body": "guys delete body design standard", "d": "11/2017"}, {"body": "standard must body body must required supporting body would useful apparently uncommon using post unlessuntil happens going permanent recommendation", "d": "11/2017"}, {"body": "look table link says row request body", "d": "11/2017"}, {"body": "also looked spec actually linked little page rfc section delete specifically payload within delete request message defined semantics sending payload body delete request might cause existing implementations reject request seems debate means exactly conclusion seen agree delete method need support likewise prohibition supporting clients assume allowed given server support particular rules words api like said convenience thing hardly critical nt see httpspecificationbased reason allow", "d": "11/2017"}, {"body": "alvipeo seems error mdn xhr fetch allows mdn wikilike website edits everyone standard", "d": "11/2017"}, {"body": "anyway seems angular let us put body request since version nt alvipeo standard angular wrong new version", "d": "11/2017"}, {"body": "problem resolved moved component directory level module illustrate went sure nt work previous way imports paths correct since worked denesting components keeping way", "d": "11/2017"}, {"body": "raphistein thank work anyways would glad bug fixed small modules could bear keeping components folder", "d": "11/2017"}, {"body": "actually case still shows error even following folder structure release version webstorm", "d": "11/2017"}, {"body": "meet issue seems caused webview tag ca nt created script workaround add empty webview tag indexhtml set invisible set tag visible positionsrc attribute typescript component init", "d": "11/2017"}, {"body": "news issue thanks", "d": "11/2017"}, {"body": "closing since activity believe fixed let us know reopen", "d": "11/2017"}, {"body": "jrhite write interceptormodule default module way knowing set domains honor xsrf token", "d": "11/2017"}, {"body": "working compiler generading files", "d": "11/2017"}, {"body": "voithos try version angular see lowering added works use cases", "d": "11/2017"}, {"body": "problem aot duplicating call route configuration fails right searched token routes found one mainbundlejs created github repo works work started cli added commit", "d": "11/2017"}, {"body": "jsgoupil create separate issue nt believe related", "d": "11/2017"}, {"body": "actragschuster include expression template telling angular evaluate expression every time change detection performed would therefore expect expression evaluated times instead", "d": "11/2017"}, {"body": "ran issue took quick look code looks like first initialized trying create context calling result empty array", "d": "11/2017"}, {"body": "thank kostyatretyak problem solved", "d": "11/2017"}, {"body": "varghesep unclear report discussion issue add comment issue behavior seeing expecting link repository demonstrates issue readme file explains use repository duplicate issue template compiler generates factories event components even libraries nodemodules several reasons primary one layout code generation templates change versions angular without requiring upgrading published libraries allows optimizations make benefit published libraries well application code also localization supported supplying alternate templates components template compiler builds set factories local", "d": "11/2017"}, {"body": "sibirajs tried link windows chrome could reproduce issue missing", "d": "11/2017"}, {"body": "happens chrome especially normal mode working fine incognito mode think chrome bug reproduce current version chuckjaz let try confirm", "d": "11/2017"}, {"body": "tried reproduce unsuccessful think error version", "d": "11/2017"}, {"body": "closing issue might related angular", "d": "11/2017"}, {"body": "looks like nt make angular", "d": "11/2017"}, {"body": "nt make", "d": "11/2017"}, {"body": "use new downgrademodule api alternative upgrademodule drops angular zone lt digest wiring also bootstraps angularjs outside angular zone results much fewer change detection cycles downgrademodule api prevent enormous number digest calls upgraded application", "d": "11/2017"}, {"body": "make eg look docs nt landed yet finishing pr right", "d": "11/2017"}, {"body": "thank", "d": "11/2017"}, {"body": "confirmed remains bug angular", "d": "11/2017"}, {"body": "appear though workaround enter url using percent encoding slashes path part route", "d": "11/2017"}, {"body": "bennadel hi ben mentioned adding prefix helped fix issue lazy loading able navigate instead exactly adding prefix mean sorry thanks", "d": "11/2017"}, {"body": "vamsivempati sorry tried anything lazyloading yet regarding prefix think meant made absolute paths rather relative paths", "d": "11/2017"}, {"body": "vamsivempati think maybe getting issue issue confused talking prefix", "d": "11/2017"}, {"body": "toxicable using angular still got message angularcompilercli requires typescript lt found instead opinion issue fixed issue needs reopend", "d": "11/2017"}, {"body": "probably typo fabian angualr nt work ts pr pending", "d": "11/2017"}, {"body": "angular compatible typescript yet likely supported angular maybe", "d": "11/2017"}, {"body": "yes ts support coming mon nov pm sarun intaralawan notifications githubcom wrote angular compatible typescript yet likely supported angular maybe receiving modified openclose state reply email directly view github mute thread", "d": "11/2017"}, {"body": "compiled fairly big app aot minification issues nt ts features gt think issues gt decorators emit effect mostly compilation libraries since app compile one shot data kept", "d": "11/2017"}, {"body": "silent issues ts gt", "d": "11/2017"}, {"body": "work arounds say manually destroying component without removing browseranimations", "d": "11/2017"}, {"body": "also got issue alternatives keep using browseranimations noopanimations", "d": "11/2017"}, {"body": "duplicate older bug issued think someone angular team looked week ago", "d": "11/2017"}, {"body": "parse error returned json object sending", "d": "11/2017"}, {"body": "extending supported usage use interceptors instead", "d": "11/2017"}, {"body": "sorry ask mentioned extending http supported usage clearly issue codebase well anybody prevent class extension functionality make better toolset sorry stopped contribute topic loaded lot work thank understanding", "d": "11/2017"}, {"body": "getting issue used form builder set disabled state would thought enabling form would set back original state defined creation form group perhaps sorry helpful actually providing fix workaround suggestion expected behaviour", "d": "11/2017"}, {"body": "please treat request x documentation issue request uploading files common scenario documentation lacking needed guidance area", "d": "11/2017"}, {"body": "trotyl sorry ca nt exactly understand done could please explain details", "d": "11/2017"}, {"body": "news two major versions platformserver years universal project began still usable common folks lack support cli blocking issues like one requires difficult workarounds priority", "d": "11/2017"}, {"body": "might fixed", "d": "11/2017"}, {"body": "vicb reopen issue problem concerning documentation still current anecdote", "d": "11/2017"}, {"body": "iframe adds history entry loads press back button acts inside iframe anyone help disabling iframe history entry", "d": "11/2017"}, {"body": "ran thing opted queryparams instead seem pass arrays fine opens entire worms", "d": "11/2017"}, {"body": "documentation implies indeed set errors problem example setting errors constructor validation chance run form control directives validation happens errors overwritten see updated plunker runs later errors update expected need set errors soon form loads normally achieve waiting tick next change detection run", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "closing duplicate", "d": "11/2017"}, {"body": "correct design need handle unsubscription return new wraps one", "d": "11/2017"}, {"body": "thank alxhub suggestion works really nice interceptor implementation smiley someone interested simple solution visualize outstanding http requests sample works even click getheroes multiple times fast first subscriptions get unsubscribed", "d": "11/2017"}, {"body": "would really great spring service usually returns excel file httpclient uses responsetype blob might return json error details generation fails case error httperrorresponseerror undefined handling httpinterceptor use additional informations returned backend nt see good workaround move error messages backend frontend bad backend knows error details use requests one actual request one get last error message bad nt use blob wrap response json encoding blob content traffic additional overhead programming linking files directly foobarxls would nt work anymore json returned thumbs feature request", "d": "11/2017"}, {"body": "sorry jsonp apis unsupported either", "d": "11/2017"}, {"body": "send reproduction maximedupre", "d": "11/2017"}, {"body": "guy fix good", "d": "11/2017"}, {"body": "news really stuck fact single change detection elements removed pass elements freshly created coexist dom raising lot problems trying advanced rendering features ca nt solve quickly since real regression reason nt roll back investigating", "d": "11/2017"}, {"body": "news angular team marked broken still open since early september people using angularmaterial instance ca nt get rid browseranimationsmodule", "d": "11/2017"}, {"body": "also facing problem news", "d": "11/2017"}, {"body": "still open months reported breaking issue", "d": "11/2017"}, {"body": "still open months reported breaking change tone voice constructive yes understand frustrated way get action people perhaps could help getting root cause submitting pr", "d": "11/2017"}, {"body": "looks like fixed ifwhen merged", "d": "11/2017"}, {"body": "pkozlowskiopensource update", "d": "11/2017"}, {"body": "issue reproduced", "d": "11/2017"}, {"body": "since closed duplicate eta one fixed quite old bug reported september workaround quick fix", "d": "11/2017"}, {"body": "workaround ended going see example manually disposing router since angular nt destroy process like would expect day two tried figure fix angular source gave happily using workaround", "d": "11/2017"}, {"body": "joeldenning thanks workaround defined upd", "d": "11/2017"}, {"body": "yeah part storing variables things related angular", "d": "11/2017"}, {"body": "fyi get expected behavior using method example case wondering url encoded would still love see feature would give better support mean time hopefully helpful", "d": "11/2017"}, {"body": "numeric value easy object value example primeng lazy load datatable pass nested filter example easy way convert nested object name value far using easy convert datatable lazy parameter easy way handle nestedcomplex params also looks stupid say new httpparams good design bad practise", "d": "11/2017"}, {"body": "closing since nt actionable repro case please feel free reopen plunker demonstrating issue", "d": "11/2017"}, {"body": "update starting accept enterprises early access program try support team willing tolerate risk missing documentation commit giving feedback like use soon fill get touch ready support use cases", "d": "11/2017"}, {"body": "way individuals sign program rather corporations", "d": "11/2017"}, {"body": "fill form interested applications thousands source files suffer slow builds angular cli might capacity take use case tue nov pm corbin crutchley notifications githubcom wrote way individuals sign program rather corporations receiving assigned reply email directly view github mute thread", "d": "11/2017"}, {"body": "alexeagle could define timeseconds think slow build fact angular platform degraded jit old fashioned buildcompilelink time experience even small projects nt know expect reason chose javascript jit wich nt enjoy anymore relation angular angularjs jit refresh build ng build prod something execute low possible even small ish projects", "d": "11/2017"}, {"body": "doubt anulgarjs jit refresh build either browser loaded seconds took least seconds actually concat files aot concat clever reduce browser loading time", "d": "11/2017"}, {"body": "actually dev time lt second nt wait another story whole building process produce completely new build production testing server internal version last step production", "d": "11/2017"}, {"body": "goal lt dev roundtrip ile large project thousands source files", "d": "11/2017"}, {"body": "schmitch doubt want look hello world ng serve size angular project compared angularjs project cache disabled could add angular code would nt change much show load image full project screens multi language thirdparty libs take load runtime ng build prod iam happy end result fast small en stable developers experience ruined buy faster computer create strategy larger project ng serve rebuild time runtime compile feels also slow whole jit experience gone developing", "d": "11/2017"}, {"body": "requests means project really really small used systemjs requests typical angularjs project means basically created hello world route gulpgrunt concat everything even took decent sized project files jshtml btw angularjs app files loc hybrid app loading barley changed still around clean site seconds happend angularjs tried systemjs painful nt lazy loading loaded files damn painful", "d": "11/2017"}, {"body": "hello facing issue looks like error runtime angular prod mode problem package found anything web resolve case", "d": "11/2017"}, {"body": "hello issue apparently related angular compiler nt works manualy bootstrap statements must use sorry time", "d": "11/2017"}, {"body": "problem working angular angular string anymore typing also wrong typing string moment use following way access fragment property", "d": "11/2017"}, {"body": "matsko hello please answer previous question router animation events thank", "d": "11/2017"}, {"body": "also tried find way react view animated routeroutlet animation done kick animations stuff ended like router service simply export type transitionanimationend url string injectable export class routerservice private transitionanimationendeventsubject new subject transitionanimationendeventobservable thistransitionanimationendeventsubjectasobservable constructor public animationended url string thistransitionanimationendeventsubjectnext url url way subscribe component service filter url pretty please please add interface something implement subscribe get notifications like onrouteranimationdone something", "d": "11/2017"}, {"body": "swftvsn imagined like nt think better way implement get answer devs big regression used work old system matsko news", "d": "11/2017"}, {"body": "yes techwriter compiling contents animations plans basicadvanced animations well guide routing component animations using animationbuilder come around later well something testing", "d": "11/2017"}, {"body": "correct", "d": "11/2017"}, {"body": "chance fix introduced infinite loop sort seems like recent history routerlinkactive prone already experiencing hang cpu using component pretty much uses routerlinkactive works fine changelog pretty small", "d": "11/2017"}, {"body": "update", "d": "11/2017"}, {"body": "similar issue prepending url rather making warning angular", "d": "11/2017"}, {"body": "would really nice always working router transition animations regardless view cached whether child route", "d": "11/2017"}, {"body": "see issue angular", "d": "11/2017"}, {"body": "know seedy nt using api case needed set file size api sending response started getting http response angular", "d": "11/2017"}, {"body": "definition platformlocation href origin", "d": "11/2017"}, {"body": "edit gave try amp ngcli work enable aot error function configuration ignored probably dropped aot compilation nt get message", "d": "11/2017"}, {"body": "toub seems application code caused indirectly compiler link github repository contains repro issue", "d": "11/2017"}, {"body": "chuckjaz right nonaot test application code avoid application break deploying aot mode enabled", "d": "11/2017"}, {"body": "underlying issue fixed closing bug", "d": "11/2017"}, {"body": "chuckjaz ok everything working sorry delay", "d": "11/2017"}, {"body": "made day causes sorts weird nonsense problems looking around days however dgroh think close issue add new info still believe fixed avoid getting", "d": "11/2017"}, {"body": "created pr solve also created package solve least reviewed merged case simple dropin replacement modifies minimum fix problem works changing one import check", "d": "11/2017"}, {"body": "new angular noticed already myapp project created cli understand clone quickstart install instead glad read doc updated soon read quickstart project page november doc rely cli guess choose best timing start learning angular sign things moving good sign", "d": "11/2017"}, {"body": "update next hours doc written already wait bit friend", "d": "11/2017"}, {"body": "awesome actually bed time france guess like kid christmas ca nt wait open presents first thing morning thanks feedback already feel great support angular community ca nt wait discover power behind tool", "d": "11/2017"}, {"body": "feel like kid learnt santa exist p", "d": "11/2017"}, {"body": "parents surprise gift last minute read final version hopefully soon", "d": "11/2017"}, {"body": "greeeeaaaat actually starting look commit definitely prefer link gave really cool friend thanks", "d": "11/2017"}, {"body": "feel like kid learnt santa exist p please refrain inaccurate misleading comments", "d": "11/2017"}, {"body": "right never know old angular youngest learners next years maybe broke someone dream four years", "d": "11/2017"}, {"body": "looks like something missing hero tour doc adding hero property get error ca nt bind ngmodel since nt known property input looks like need add import formsmodule appmodulets first see way tslint also tells guess needs changed cli component generator might need separate issue", "d": "11/2017"}, {"body": "difference two saying updated docs specifying need add formsmodule edit ah quotes", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "yes updated doc specify need add formsmodule appmodulets", "d": "11/2017"}, {"body": "ok take look error report pr changes", "d": "11/2017"}, {"body": "ok", "d": "11/2017"}, {"body": "formsmodule problem documentation specify need import say later problem piece code section show hero step", "d": "11/2017"}, {"body": "solution believe right mlcmlapis shadow dom could probably work however want something like guess nt care shadow dom nt really apply either want html tightness fact components produce html belongs css system guess case seems hard impossible accomplish angular html edit one way ts class noroottagcomponent implements oninit viewchild templateref template component template class somerowscomponent extends noroottagcomponent constructor vcref viewcontainerref super vcref", "d": "11/2017"}, {"body": "staeke use attribute components like", "d": "11/2017"}, {"body": "well mlcmlapis get trs within trs", "d": "11/2017"}, {"body": "staeke ah thought wrong side mistake", "d": "11/2017"}, {"body": "still issue exporting utitlity class looking like problem within return line method remove works fine edit problem code works fine", "d": "11/2017"}, {"body": "issue persist even latest ok using ng build work fails ngc error error developerprojectsgitangular error encountered metadata generated exported symbol appuniversemodule developerprojectsgitangular metadata collected contains error reported runtime initialized variables constants referenced value variable needed template compiler symbolic error message variable initialized line character developerprojectsgitangular universelibsappuniversenodemodules arrayforeach validatemetadata developerprojectsgitangular universelibsappuniversenodemodules metadatacollectorgetmetadata developerprojectsgitangular universelibsappuniversenodemodules lowermetadatacachegetmetadataandrequests developerprojectsgitangular universelibsappuniversenodemodules lowermetadatacacheensuremetadataandrequests developerprojectsgitangular universelibsappuniversenodemodules lowermetadatacachegetrequests developerprojectsgitangular universelibsappuniversenodemodules developerprojectsgitangular universelibsappuniversenodemodules developerprojectsgitangular reduceleft developerprojectsgitangular", "d": "11/2017"}, {"body": "fixed issue providing initial value module variable export class appuniversemodule static config null fix static fromconfig config modulewithproviders appuniversemoduleconfig config return ngmodule appuniversemodule", "d": "11/2017"}, {"body": "issue even latest beta throws", "d": "11/2017"}, {"body": "benevideslecontes error describing initialized variable sure date property lives code try giving null initial value", "d": "11/2017"}, {"body": "mohyeid initialised tried nullundefined error remains problem nt variable date set accessor even comment line error remains", "d": "11/2017"}, {"body": "closing nt appear bug feature request", "d": "11/2017"}, {"body": "alxhub haidelber idea seems like straightforward common sense approach although little bit restrictive another option mentioned issue basically dup allow client code specify allowable absolute domains configuring absolute urls approach flexible breaking fundamental use case xsrf cors deal breaker large number angular users ca nt use httpclient haidelber suggestion suggestion desirable recommended approach dealing", "d": "11/2017"}, {"body": "jrhite fixed write simple xsrfinterceptor long sure call one api security implications approach typescript injectable export class xsrfinterceptor implements httpinterceptor cors actually implement tokenextractor well", "d": "11/2017"}, {"body": "haidelber thanks note use", "d": "11/2017"}, {"body": "haidelber brief tokenextractor getting token null also tried fetch token cookie code attached see cookie response first request fetching get document empty getcookie name documentcookie return null", "d": "11/2017"}, {"body": "sajagekar nt stick default extractor override xsrfcookiename one api sets", "d": "11/2017"}, {"body": "write interceptor handle case", "d": "11/2017"}, {"body": "chuckjaz correct webpack builds box nonwebpack builds possible webpack builds kicks raw js loaders completed required use loader quickly build loader seems pointless either use regex ast ast required additional ts compilation process type checker costly want avoid wo nt let add transformers get regex optimal might missfalse positive even implement plugin still left cli option supported", "d": "11/2017"}, {"body": "chuckjaz figured using able provide static compile time runtime value still cli support least something", "d": "11/2017"}, {"body": "miiihi mentioned validators still exist think comment docs would helpful directives", "d": "11/2017"}, {"body": "would nice real fix also seen case using thisrouternavigatebyurl relativeurl see exact behavior issue get fixed working sample number people seeing issue solution marekozw posted worked us posted reference solutions posted worked issue sub component loading also delayed constructor private zone ngzone private changedetector changedetectorref settimeout gt thiszonerun gt thischangedetectordetectchanges thanks marekozw big help", "d": "11/2017"}, {"body": "angular version using tested angular somehow links routeroutlets seems magically working least got infamous exception expression changed checked routeroutlets duplicate components navigated", "d": "11/2017"}, {"body": "recently moved try get past issue trying construct simple example trying duplicate situation let know able dup", "d": "11/2017"}, {"body": "think related bug hopefully fixed pr duplicates httpparams call read functions believe would happen clone request", "d": "11/2017"}, {"body": "getting error case checking optional string property present order assign css class want apply class even though string empty html ng lint build vs code angular language service extension", "d": "11/2017"}, {"body": "getting error taylorzanekirk said issue nt missing import missing declaration animation component using", "d": "11/2017"}, {"body": "error use animation inside component template code", "d": "11/2017"}, {"body": "also issue working week success making every possible change based others past experience need something done stated would nice animations ts appmodulets base angular modules import ngmodule angularcore import browsermodule angularplatformbrowser import browseranimationsmodule angularplatformbrowseranimations import noopanimationsmodule angularplatformbrowseranimations import formsmodule reactiveformsmodule angularforms import httpmodule angular import cookieservice ngxcookieservice services needed processing import userhistdataservice componentsmainservicesuserhistservice import userdataservice componentsmainservicesuserservice import loggerservice componentsmainservicesloggerservice routing import appcomponent componentsappappcomponent import mainmodule componentsmainmainmodule import approutingmodule approutingmodule ngmodule declarations appcomponent imports ngmodule browsermodule browseranimationsmodule noopanimationsmodule formsmodule reactiveformsmodule httpmodule approutingmodule mainmodule providers userdataservice userhistdataservice loggerservice cookieservice bootstrap appcomponent export class appmodule homecomponentts ts base angular modules import component oninit angularcore import trigger state style animate transition query stagger angularanimations component templateurl homecomponenthtml styleurls homecomponentcss animations trigger logoani transition gt query enter style opacity optional true query enter stagger animate style opacity optional true export class homecomponent implements oninit clickinfo default logos ngoninit thislogos id ppath assetsgeneraldynamicslogojpg altname general dynamics id ppath assetslibertymutualpng altname liberty mutual id ppath assetsmtlogopng altname metratech", "d": "11/2017"}, {"body": "also experiencing working duplication repo could related", "d": "11/2017"}, {"body": "czaste declaring showstate trigger component animations see declaration logoani code", "d": "11/2017"}, {"body": "never mind directive hostlistener myanimationdone inside component animations metadata myanimation trigger error message could better though edit component animations metadata component getting error make sure look every", "d": "11/2017"}, {"body": "czaste looks like something binded", "d": "11/2017"}, {"body": "apologies playing several days addition trying make desired animation work trying simplistic animations well alas outcome let get everything together provide file issue clear seemingly simple error mistake get back thanks", "d": "11/2017"}, {"body": "please note full configuration actually credit yurzui", "d": "11/2017"}, {"body": "nt catch much attention meantime decorator docs fixed closing", "d": "11/2017"}, {"body": "closing fixed ocombe date pipe uses icu api implementation broken", "d": "11/2017"}, {"body": "dherges workaround abstract classes using approach described note added signature code example posted worked correctly replaced imported angular everything getting typed correctly well", "d": "11/2017"}, {"body": "great news tested angular ca nt reproduce issue anymore thank looking", "d": "11/2017"}, {"body": "closing issue thx confirming anyone still facing problem please open new issue", "d": "11/2017"}, {"body": "also seems broken", "d": "11/2017"}, {"body": "still broken angular release affects browsers tested really big issue ok server error hansl looks like added tag back august activity since get someone look", "d": "11/2017"}, {"body": "void response http rest endpoint cause error could happens really serious guys really must fix quickly affect project use rest calls issue since use package project since months remove horrible hack spring boot application order put shitty responsetype text frontend side", "d": "11/2017"}, {"body": "ginosiccio also get rid anything consider shitty submitting pull request joining search cause bug even forking angular using version concrete one things happening see comment good come rushing team quick fix quick tested thought properly cause bugs let value quality quantity smile", "d": "11/2017"}, {"body": "compeek alex saint thank", "d": "11/2017"}, {"body": "alxhub plan create pr fix", "d": "11/2017"}, {"body": "updated app angular angular rewrite parts use new httpclient instead deprecated http find problem months already hopefully alxhub solution works however itstill needs merged released hopefully wo nt take long really huge problem", "d": "11/2017"}, {"body": "confettiball confettiball", "d": "11/2017"}, {"body": "setting responsetype option text solved problem", "d": "11/2017"}, {"body": "compeek workaround works", "d": "11/2017"}, {"body": "compeek workaround works saw alxhub made fix updated hoping would merged difference idea version alxhub fix", "d": "11/2017"}, {"body": "agree seeing response text poor workaround app lines code tons rest calls huge breaking change", "d": "11/2017"}, {"body": "egervari always use interceptor would make things bit bearable reference one using ts import httperrorresponse httpevent httphandler httpinterceptor httprequest httpresponse angularcommon import injectable angularcore import observable rxjsobservable remove gets merged also injectable export class implements httpinterceptor constructor", "d": "11/2017"}, {"body": "sir final response also facing error shall update angular version set responsetype text new working kindly guide", "d": "11/2017"}, {"body": "assume know still able increase font size via agree would better updated stylesheets", "d": "11/2017"}, {"body": "using httpclient could type like anymore", "d": "11/2017"}, {"body": "typescript already supports string enums wrap need change angular side assignable", "d": "11/2017"}, {"body": "seems like backwards step going provided enum wrap similarly well known headers httpheader enums authorization etc", "d": "11/2017"}, {"body": "information deprecation notes edit meant currently", "d": "11/2017"}, {"body": "exported type enum type union", "d": "11/2017"}, {"body": "thanks rdsrafael worked bit strange", "d": "11/2017"}, {"body": "closing solution pass correctly typed argument", "d": "11/2017"}, {"body": "sorry still development nt supporting yet thanks kicking tires see run issue switching angular build bazel", "d": "11/2017"}, {"body": "check way", "d": "11/2017"}, {"body": "also running issue think may related ticket", "d": "11/2017"}, {"body": "updated angular properly emits files say close issue anyone else issue could reopen necessary", "d": "11/2017"}, {"body": "ran well tab setup tab links child like navigate build tab activeclass turns despite fact url changes reflect new note nt matter navigation takes place performing programmatically manually editing url effect", "d": "11/2017"}, {"body": "think see happening added breakpoint algorithm determines active looks like local nt actually updated point event evaluated following screenshot navigated still checking previous url perhaps race condition directive dom nt updated yet time event fired", "d": "11/2017"}, {"body": "hack seems work looking source code looks like also called time inputs changed add property give throwaway value changed based url inputs technically change example key change changes ie navigation completed template reconciled cause inputs change cause method run point proper state janky works stopgap", "d": "11/2017"}, {"body": "wrote example case helps anyone else", "d": "11/2017"}, {"body": "update", "d": "11/2017"}, {"body": "ehsaanwelcome changes linked pull request approved hours ago merged soon", "d": "11/2017"}, {"body": "skreborn bug fixed still issue upgrading first child query params helloworld navigate another component queryparamsnull queryparamshandlingmerge", "d": "11/2017"}, {"body": "ehsaanwelcome order remove specific queryparam need specify instead remove queryparams set without works way still hope helps understand works", "d": "11/2017"}, {"body": "typescript supported angular", "d": "11/2017"}, {"body": "typescript yesterdays news need typescript support", "d": "11/2017"}, {"body": "need change tsickle support us able shift dependency version tsickle use working hopefully get weeks release next week", "d": "11/2017"}, {"body": "btw support still working valid", "d": "11/2017"}, {"body": "donkeybonks angular know api using expects hand object serialize json even object empty", "d": "11/2017"}, {"body": "correct value flips removing browseranimationsmodule solves issue using thirdpartyselect like angularmaterialselect dos show issue", "d": "11/2017"}, {"body": "think related issue let say form array n elements controlvalueaccessor remove item formarray gets removed dom onchange event controlvalueaccessor fired causes error line angular forms think happens happens ontouched event called controlvalueaccessor sure solve issue seems like events removed rather adding event throws error", "d": "11/2017"}, {"body": "implement cva incorrectly see fixed plunker also left comments clarify removed unneded code", "d": "11/2017"}, {"body": "instead adding animation expression language animations plan expand syntax allow inner functions work js like matthiasscudlik pointed way things like currying fancy js goodness put use js import rotate utilsts transition gt animate style rotate right working prototype stuff follow comes around", "d": "11/2017"}, {"body": "change text content type case post file upload content type following seems like solution typescript private handleangularjsonbug error httperrorresponse const jsonparseerror http failure parsing const matches errormessagematch new regexp jsonparseerror ig", "d": "11/2017"}, {"body": "alxhub news currently using custom workaround still feel workaroundish use case seems basic authenticated app possibilities user authenticated gt display login page user authenticated gt show app screens child component containing headerside menu navigation every app screen separate feature module declaring custom routes completely decoupled feature module lies root issue seems like current router behavior best practices promoted angular style guide missed something feel free correct wrong", "d": "11/2017"}, {"body": "matsko thanks man", "d": "11/2017"}, {"body": "progress problem", "d": "11/2017"}, {"body": "problems following documentation looking code errorevent correct error type comes directly xhr looks like docs need updating", "d": "11/2017"}, {"body": "nt catch much attention closing issue", "d": "11/2017"}, {"body": "anyone figure issue running thing", "d": "11/2017"}, {"body": "problem child emptypath named route cant override parent example path component headercomponent outlet header path children path component aboutcomponent path component emptyheadercomponent outlet header causes error activate already activated outlet", "d": "11/2017"}, {"body": "created pr solve also created package solve least reviewed merged case simple dropin replacement modifies minimum fix problem works changing one import check", "d": "11/2017"}, {"body": "need reproduction order debug micksatana please reopen one", "d": "11/2017"}, {"body": "alxhub micksatana sorry late response issue back end server mainly redis client using thanks", "d": "11/2017"}, {"body": "anyone post plunkr post contents ngoninit working really looks like duplicate impossible tell without seeing complete examples", "d": "11/2017"}, {"body": "working cordova nt firing component navigated even using directive exact anchor tag inside however working fine use probably resolve issue everyone else lose middleclick ctrlclick functionality splaktar interesting seeing behavior lazily loaded module however addresses order fired whereas issue firing", "d": "11/2017"}, {"body": "prior angular unfortunately impossible use manually inside method one workaround using intercept req httprequest next httphandler observable return observablecreate observer gt settimeout gt const authservice thisinjectorget authenticationservice observernext authservicegetauthorizationheader observercomplete mergemap authorization string gt let authreq req", "d": "11/2017"}, {"body": "olegdunkan prior angular running issue use workaround perusopersonale", "d": "11/2017"}, {"body": "added deps http main module works nt need providers provide httpinterceptors useclass authtokeninterceptor multi true deps http", "d": "11/2017"}, {"body": "worked perfectly perusopersonale thanks million", "d": "11/2017"}, {"body": "tried perusopersonale solution nt work get error running anyone else got work version", "d": "11/2017"}, {"body": "vladursan make sure injecting authservice interceptor injecting httpclient authservice manually also double check using httpclient deprecated http object fail reasons", "d": "11/2017"}, {"body": "something angular team actually looking fix people nt inject stuff stuff injected stuff circumvent issue somewhere bottom huge backlog stuff probably never looked resort solutions ever second thing true probably note documentation says interceptors supposed accept async dependencies depend httpclient would helpful", "d": "11/2017"}, {"body": "vladursan meant getting maximum call stack size exceeded error trying", "d": "11/2017"}, {"body": "actually using another service apiservice injected authservice uses httpclient sure know mean inject manually though luillyfe interceptor using exact piece code", "d": "11/2017"}, {"body": "titusfx support inheritance template believe implying exiting issue tracking potential way improve however using inheritance way recommended angular consider recasting behavior directive instead base class", "d": "11/2017"}, {"body": "really disappointed release angular team deprecated service without providing way perform possible including custom parameters currently extends service added extra parameters common use cases already cited caching requests error handling see details would like move use interceptors support custom arguments extend either method options use type extend see basically stuck deprecated api way move forward missing something alxhub", "d": "11/2017"}, {"body": "sinedied using httpclient adding metadata abusing http headers suggested practice looks like", "d": "11/2017"}, {"body": "karptonite saw comment really ugly hack would like avoid promoting best practices generator", "d": "11/2017"}, {"body": "sinedied nt pretty seen far uglier hacks extract addition headers utility function metadata added real fix couple places anyway nt stuck deprecated yet removed api least one option", "d": "11/2017"}, {"body": "sinedied achieving wo nt need pass arbitrary params httpclient thus interceptors could wrap behavior sugar method clones httpservice variant always caching fluent api like way implementation hidden away prepared httpclient going deprecated passing certain magic options along request options looks like bigger hack fun lasted", "d": "11/2017"}, {"body": "hi alxhub always ready implement feature angular", "d": "11/2017"}, {"body": "looking thank posting", "d": "11/2017"}, {"body": "also use case nt covered using adding elements application custom form components drawn dynamically app description backend server like able programmatically focus parts form currently form builder add data attributes id elements use attribute get element fire focus event picked however still seems hacky imo", "d": "11/2017"}, {"body": "simply many things assert request add api", "d": "11/2017"}, {"body": "use loop append parameters httpparams copy param many times", "d": "11/2017"}, {"body": "problem also routing using lazy load modules routeing current view left enter new view old view loads bottom starter happening sure hard debug", "d": "11/2017"}, {"body": "igorminar jasonaden news fix bug fixed", "d": "11/2017"}, {"body": "sorry need reproduction problem order debug", "d": "11/2017"}, {"body": "fixed include within release", "d": "11/2017"}, {"body": "elidjeaka also facing issue get fix issue", "d": "11/2017"}, {"body": "aakritiopallios yes tsconfigappjson add following line enclosed json object paths angular nodemodules angular", "d": "11/2017"}, {"body": "elidjeaka thanks worked saved day", "d": "11/2017"}, {"body": "compileonsave false compileroptions outdir distouttsc sourcemap true declaration false moduleresolution node emitdecoratormetadata true experimentaldecorators true target typeroots nodemodules types lib dom paths angular nodemodules angular solution work please see tsconfigjson file", "d": "11/2017"}, {"body": "abhijitcapital need change tsconfigappjson file think trying change tsconfigjson change tsconfigappjson add following line enclosed json object paths angular nodemodules angular", "d": "11/2017"}, {"body": "problem reduce number properties object passed router seems trick fine", "d": "11/2017"}, {"body": "unfortunately ca nt changed inside angular animation code used heavily problem looks like svg elements contain method maybe ie tahadinero guys progress getting function using polyfills", "d": "11/2017"}, {"body": "problem method inheritance chain svg elements instead fwiw angularjs work around issue like", "d": "11/2017"}, {"body": "solved angularcli", "d": "11/2017"}, {"body": "verified fixed typescript latest", "d": "11/2017"}, {"body": "always use best", "d": "11/2017"}, {"body": "update idea changed backslide getting problem ugh reason works nt huh first went back worked post pointing angular packagejson file upped hardwire found works confused", "d": "11/2017"}, {"body": "think closed fixed pr", "d": "11/2017"}, {"body": "fyi", "d": "11/2017"}, {"body": "issue came around handling error happens plunker opinion even better approach handle specific errors better understandable code error happens general handling would good issue would solved", "d": "11/2017"}, {"body": "able create css classes apply would much better manually set everything", "d": "11/2017"}, {"body": "ca nt repro issue still exists please file new issue document repro instructions", "d": "11/2017"}, {"body": "nt tried removing work around call detectchanges ngafterviewinit since least problem fixed work around longer needed closing issue", "d": "11/2017"}, {"body": "eshcharc working expected documented write back control propagating changes documented notifications specifically excluded options provided example provided calls registered change expects trigger specifically trying communicate design happen implementors unconditionally write value view guaranteed come view modified write back view changes model could introduce cycle cause redundant writes one way around implement something like like used alternately also consider implementing composite control orchestrates radio buttons content instead relying orchestrate changes current control value accessor model designed help orchestrate view changes compose single value point makes writing control laborious would also entertain feature request make orchestration easier closing issue feel free open new issue contains feature request", "d": "11/2017"}, {"body": "thanks reporting issue luckily already fixed one recent releases please update recent version resolve problem upgrade problem still exists application please open new issue provide plunker reproducing problem describing difference expected current behavior", "d": "11/2017"}, {"body": "still problem ca nt reproduce", "d": "11/2017"}, {"body": "still see issue right arrow functions section", "d": "11/2017"}, {"body": "proper behavior codes treated errors", "d": "11/2017"}, {"body": "thanks clarification angular implementation", "d": "11/2017"}, {"body": "understand issue months old allow input param values passed states going close please reopen still unable get something work", "d": "11/2017"}, {"body": "able get ios app renders correctly nt think need support older versions", "d": "11/2017"}, {"body": "igorminar upgrade latest ios big concern devices problem see angular documentation nt available readable form mobile devices issue could addressed applying proper polyfills", "d": "11/2017"}, {"body": "issue fixed simply moving dynamic changing parameters logic inside ngdocheck method", "d": "11/2017"}, {"body": "think really bad idea getting called lot angular lot data might hurt perfs see", "d": "11/2017"}, {"body": "would rather recommend using example", "d": "11/2017"}, {"body": "dgroh nt need add actual timeout want js execute code next async task means another change detection run", "d": "11/2017"}, {"body": "victornoel barelly believe would work observables unless explicit call wish needed", "d": "11/2017"}, {"body": "dgroh must misunderstood advocating writing", "d": "11/2017"}, {"body": "possible add step like example", "d": "11/2017"}, {"body": "seem work love details dynamic component generation code synchronous", "d": "11/2017"}, {"body": "part might already implemented gkalpak document current status know", "d": "11/2017"}, {"body": "documented current status sorry public atm things sure marked yellowish run unnecessary operationsjobs nothing dramatic common cases would say still room improvement", "d": "11/2017"}, {"body": "closing lack activity nt hesitate let know reopened", "d": "11/2017"}, {"body": "angular problem related history daylight savings time dst specific country", "d": "11/2017"}, {"body": "ocombe yes date converted correctly new formatdatets method seems solve problem", "d": "11/2017"}, {"body": "sorry considering feature requests deprecated", "d": "11/2017"}, {"body": "afaict reason ca nt use without full path makes equivalent navigating issue named anchor mentioned everything work expected note still use short form actual templates dgeni automatically expand closing feel free reopen case missed something", "d": "11/2017"}, {"body": "still issue", "d": "11/2017"}, {"body": "igorminar kara available currently using expecting min max directives available validators template forms supposed available open new issue thanks", "d": "11/2017"}, {"body": "danwulff never said would available available reactiveforms directives reimplemented cause regression need renamed another strategy needs thought", "d": "11/2017"}, {"body": "petebacondarwin thanks sharing workaround working great team hybrid using converted uirouter angular router getting hybrid app running setup slightly different poc lazyloaded routes attaching lazy module injector element root component route far good", "d": "11/2017"}, {"body": "vikerman think kind testing approach", "d": "11/2017"}, {"body": "also scheme render stuff like nghostngcontentngreflect properties example output test want get something like need testing purposes", "d": "11/2017"}, {"body": "sharikovvladislav sure thinking thing idea stub components within component test able run unit test without interference also less timememory compiling component bit clarity possibilities able test inputs outputs stubbed component allows find places bind onto component wrong things write design ideas approved create prs", "d": "11/2017"}, {"body": "solutions come mind subscribe another wrapping service uses store last event deeply nested child components could subscribe wrapping service get last event happened happened called depending need event use fill data dummy data need router event kick stream seems like might work many since users want alerted reach", "d": "11/2017"}, {"body": "application also hit issue means move lot code certainly breaking change since app nt work change really unhappy situation yet another reminder many issues angular router experience probably expect many", "d": "11/2017"}, {"body": "think ticket broader request features bundling number locales autodetection browser locale fallback default locale ability dynamically switch language app autoupdate messagesxlf tracking translation completeness using locales path amp list option", "d": "11/2017"}, {"body": "hi zoonman think currently better contribute points better tracking reason", "d": "11/2017"}, {"body": "thank trotyl", "d": "11/2017"}, {"body": "would really helpful would address way achieve functionality short term without waiting change framework", "d": "11/2017"}, {"body": "right thanks response", "d": "11/2017"}, {"body": "sometimes works sometimes nt using super weird", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "use fullscreen mode problem please reopen misunderstood problem", "d": "11/2017"}, {"body": "fullscreen mode applies installed version opening browser mobile still get issue since nt think anything atm happy keep closed smiley", "d": "11/2017"}, {"body": "ca nt reproduce still please file new issue document repro steps thanks", "d": "11/2017"}, {"body": "issue still exists repro steps description still work whether change fine another story grin currently proposed tbh making narrow looks likd funny long toc maybe used current layout", "d": "11/2017"}, {"body": "closing since nt heard back reproduce scenario actionable given existing problem description", "d": "11/2017"}, {"body": "hi facing issue http api calls angular getting errors still keep loading able hit web api please help hit web api calls using request code body options map response response gt login successful jwt token response let user responsejson user amp amp usertoken store user details jwt token local storage keep user logged page refreshes localstoragesetitem currentuser jsonstringify user", "d": "11/2017"}, {"body": "wonder intentional", "d": "11/2017"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "11/2017"}, {"body": "anyone put together stackblitz example go angular detective mode figure issue", "d": "11/2017"}, {"body": "seems fixed close issue", "d": "11/2017"}, {"body": "yes please reopen reproduction possible jadamsdb", "d": "11/2017"}, {"body": "happy create pr functionality others agree supermdguy", "d": "11/2017"}, {"body": "experiencing ngafterviewinit called navigatedto component like nertzy nt detaching changedetectors", "d": "11/2017"}, {"body": "issue might fixed prs referenced issue", "d": "11/2017"}, {"body": "closed closing issue resolved please open new issue specify exactly needs done", "d": "11/2017"}, {"body": "still work either im using version", "d": "11/2017"}, {"body": "comment posted gtzinos seems fire event however styles gone", "d": "11/2017"}, {"body": "muffinrecon thats intended functionality styles removed viewencapsulationnative suggested solution found source problem first need make sure use window scroll detect changes window scroll detects changes element applied trying detect changing uses material sidenav headache problem sidenav container height causes scrolling detected whatever reason", "d": "11/2017"}, {"body": "nt fix issue get somewhat better context error open devtools karma window", "d": "11/2017"}, {"body": "sorry feature requests considered deprecated please use instead interceptors", "d": "11/2017"}, {"body": "issue version", "d": "11/2017"}, {"body": "running thing", "d": "11/2017"}, {"body": "closing longer need define locale bootstrap module level define main module jit cli watch mode aot cli supports locale jit amp aot load locale data required pipes still need define main module jit change longer work supporting jit cli workaround", "d": "11/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "11/2017"}, {"body": "sure still issue however similar issue thought caused async pipe came across async pipe issue case child component emitting values asynchronous using eventemitter parent components points parent component would get new state send child component however async pipe receiving new values emitted could subscribe observable see new values thought might related async pipe turns eventemitter changedetection trick thanks post learned eventemitter constructor accepting flag indicate values emitted async according post emitted values picked next change detection cycle way changedetection async pipe works well together component receives new value hoping find information regarding flag angular documentation however explanation regarding flag hope helps someone else across issue", "d": "11/2017"}, {"body": "could someone please create repro", "d": "11/2017"}, {"body": "looks like dupe", "d": "11/2017"}, {"body": "update problem setup simple one lazy loaded route one lazy loaded route candeactivate guard navigating one candeactivate guard called null component situation navigated lazy loaded route non lazy loaded route error side candeactivate guard placed wrong routing table routing table lazy loaded route placing works fine situation however still fails works navigate non lazy loaded route lazy loaded one candeactivate guard non lazy loaded path also gets called null component updated plunker using angular showing situation navigating non lazy loaded lazy loaded route closed angular situations works fine", "d": "11/2017"}, {"body": "still problem", "d": "11/2017"}, {"body": "info originally came marcysutton sure changes would need made look week", "d": "11/2017"}, {"body": "angular seems produce huge vendor bundle sizes seeing", "d": "11/2017"}, {"body": "running command without expected normal totally fine see large files", "d": "11/2017"}, {"body": "ptrzyna actually angular use default production builds wo nt vendor bundle", "d": "11/2017"}, {"body": "try ng build prod without aot nov paul trzyna notifications githubcom wrote angular seems produce huge vendor bundle sizes seeing receiving subscribed thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "alfredobialo wo nt effect useless argue point thread", "d": "11/2017"}, {"body": "nt know build main angular update sorry figured import aws awssdk take final bundle size angular take material", "d": "11/2017"}, {"body": "best managed real world app main bundle also seeing pretty low performance score using lighthouse definitely nt helped", "d": "11/2017"}, {"body": "angular cli bundling new empty app using getting results chunk polyfills kb initial rendered chunk main kb initial rendered chunk styles bytes initial rendered chunk inline kb entry rendered main bundle size raw gzip huge improvement bravo angularcli team", "d": "11/2017"}, {"body": "angular team done lot work think still lot things improve real world app use router forms would say hard make main bundle smaller angular deps take size angularcore angularrouter angularanimations angularforms angularcommon angularcommonhttp angularplatformbrowser zonejs adding polyfills third part libs app code result average cc igorminar", "d": "11/2017"}, {"body": "aitboudad numbers collected latest version cli used numbers extracted source maps", "d": "11/2017"}, {"body": "igorminar yep extracted source maps latest version cli", "d": "11/2017"}, {"body": "get pretty similar results aitboudad using webpackbundleanalyzer running", "d": "11/2017"}, {"body": "foxandxss please provide repro steps", "d": "11/2017"}, {"body": "nt probably something commented th site completely forgot demos nothing wrong closing", "d": "11/2017"}, {"body": "reported webkit", "d": "11/2017"}, {"body": "still issue looked", "d": "11/2017"}, {"body": "confirm bug still present angular plans fix changing route new style tag gets added head component global styles think old style tags need removed changing route", "d": "11/2017"}, {"body": "progress issue", "d": "11/2017"}, {"body": "looks like fixed see function getlocalecurrencyname used somewhere pipe", "d": "11/2017"}, {"body": "locale influence way number formatted never change currency always worth another locale", "d": "11/2017"}, {"body": "sure currency huf translated ft set localeid hu remains huf case date pipe name days months translated expected", "d": "11/2017"}, {"body": "similar error angular well produces poniedzia\u0142ek monday polish produce", "d": "11/2017"}, {"body": "issue french local d\u00e9cembre titlecase mydate date mmm frfr titlecase return d\u00e9cembre", "d": "11/2017"}, {"body": "yep nt seem support date type much", "d": "11/2017"}, {"body": "problem proposal worked marked abstract parent class like trotyl wrote compilation worked thanks everyone codethief tried yet", "d": "11/2017"}, {"body": "verified work fine imo feature request unnecessary multiple workarounds", "d": "11/2017"}, {"body": "gkalpak slated next version workaround patch applied meantime", "d": "11/2017"}, {"body": "blingerson feature workaround recommend good faith smiley might want bootstrap angularjs outside angular zone means async operations happen angularjsland trigger cd angular subsequently cd angularjs cd still triggered angularjs triggered angular zone might see unexpected behavior complex cases changes one part app properly propagating rest app", "d": "11/2017"}, {"body": "thank gkalpak nt yet realized released one quick question downgrademodule used conjunction downgradeinjectable since downgrade module utilized angular bootstrapped add downgradeinjectable service angular di tree given angular bootstrapped yet therefore angular injector available example file file angularmodule myservicesmodule factory myservicedowngraded downgradeinjectable myservice name example error thrown uncaught error trying get angular injector bootstrapping angular module", "d": "11/2017"}, {"body": "understanding ca nt use downgraded injectables angularjs code use found article makes point", "d": "11/2017"}, {"body": "thank thelgevold makes sense", "d": "11/2017"}, {"body": "clear use certain limitations particular try inject downgraded injectable angular bootstrapped angular bootstrapped asynchronously first time downgraded component rendered safely use downgraded service inside downgraded component ie inside upgraded angularjs components know limiting enough might decide use wanted make clear ca nt note equivalent limitation true using upgraded injectable use angularjs bootstrapped limitation usually goes unnoticed though angularjs usually bootstrapped angular module method angularjs unlike angular bootstraps synchronously", "d": "11/2017"}, {"body": "recommended implementation look like case want injectable service accessible entire app angular angularjs side upgademodule hits performance like truck creating new angularjs service upgrading seems counterintuitive think wrapping entire angularjs app upgraded component would put back angular zone defeating point bootstrapping outside zone", "d": "11/2017"}, {"body": "unfortunately nt think good answer atm upgraded components indeed run inside something could reconsider breaking change bad using still wo nt still", "d": "11/2017"}, {"body": "think biggest downside giving seamless service sharing angular angularjs losing flexible way share state two frameworks inter framework communication like rxjs pub sub angular components angularjs components nt work anymore since longer share instance pub sub service potential workaround inter component communication use eventemitters bubble data angular components wrapping angularjs components", "d": "11/2017"}, {"body": "may mentioned elsewhere think two orthogonal concepts unnecessrily mixed order bootstrapping angular angularjs integration respective change detections offers better performance characteristics time imposes limitations make suitable certain cases ideally think flags different behaviors would affect performance hybrid applications keep independent use give little context thing makes hybrid application slower nonhybrid ones number extra change detection runs triggered order ensure changes propagated across frameworks perfect solution things ca nt know whether cd triggered two opposite sides spectrum always trigger cd hurts performance ensures automatic change propagation never trigger cd good performance automatically propagate changes several approaches inbetween balancing performance change sync different weights top head main things ensure changes propagated correctly expense performance trigger angularjs cd angular cd via run trigger cd downgraded components angularjs cd via trigger angular cd async operations angularjs via bootstrapping angularjs inside angular zone trigger cd downgraded components inputs change trigger cd upgraded components inputs change currently implemented right comes hardcoded comes hardcoded makes much lightweight still smart enough wrt change propagation cases controlled per downgraded component via note bootstrapping angularjs outside angular zone little complicated simply running need reenter zone running angular stuff eg downgraded components nothing stopping us making configurable appwide regardless way hybrid app bootstrapped vs agreed would right direction ca nt make promises grin definitely something would like explore future", "d": "11/2017"}, {"body": "runtime one bundle locales aot working associated issue pr discussion", "d": "11/2017"}, {"body": "would cool api extending named date formats eg native date pipe would aware custom date pipe would needed", "d": "11/2017"}, {"body": "thatseli glad patch helpful please reopen issue problem yet solved upstream merged lacks attention maintainers", "d": "11/2017"}, {"body": "adrienverge okay thought one would merged let hope one gets merged", "d": "11/2017"}, {"body": "related", "d": "11/2017"}, {"body": "looked toxicable ericabc solutions must missing something toxicable still need build base application everytime want load new version dynamic myplugin module ericabc see example code text looks nice exactly dynamically loading modules without requiring base application either reloaded webpack hmr compiled served updated chunks currently looking solution modules deployed different servers somehow dynamically loaded host application whenever new version available currently solution looked require either use systemjs goodbey aot bigger size force user reload application new version built deployed perhaps someone mature solution", "d": "11/2017"}, {"body": "webmutation key dynamic loading decouple devops code first sure write code truly dynamic sharpangles library use accomplish simple example first use interface map data sent wire ts import typereference sharpanglesangulardynamic export interface dynamicframe typereference typereference state tstate next component takes dynamicframe ts import component input angularcore import dynamicframe abcoafunctionaluidynamicframe component selector abcdynamicframe templateurl dynamicframecomponenthtml styleurls dynamicframecomponentscss export class dynamicframecomponent input dynamicframe dynamicframe undefined finally template uses lazy loading state projection could combined single directive simplify syntax tend prefer separating concern lazy loading state projection one thing note code sharpangles decision made lazy loading performed webpack systemjs native module loading already appearing chrome still possible example ok make decision dynamic loading really choices static analysis dynamic neither anything aot possible static analysis webpack designed able know every bit code app compiling lazy loading webpack dynamic delayed one confusing parts understand chunks updated something new code might impact minification algorithms used previous one change part entire package rebuilt prevent deploying complex dynamic scenarios persisting builds produced different targetted users audiences versions looking dashboard dynamic tile developer freshly minted code pushed build webpack support break systems need level dynamic content versioning tracking production minified build outputs selecting correct set js files current user big advantage using webpack produces optimal build size tooling requires ngcli using sharpangles webpack little dropping statefulmoduleforroot using router module already registers ngmodulefactoryloader systemjs one nt worry webpack doesnt actually use systemjs knows replace must make sure webpack learn code advance either must reference modules treeshaken must use router nt actually use router must register routes like two things note stringbased loadchildren learned ngcli webpack create lazy chunk second reference use tsconfig paths must use real relative paths ngcli nt work yet least version clearly nt really dynamic reference module webpack required everything advance build useful write futureproof code change except router bit alternate devops process lets say actually want true dynamic native module loading think systemjs polyfill must use prevent use aot include ngfactories build typically using rollup ng dependencies get included buried branches sharpangles working examples approach however massive project made work simple examples start looking production becomes alot think things like dynamic clientside module loading configuration injected dependent libraries shared dependency reconciliation minification ability chain mappings builds library yet etc summarize nt realistic today unless satisfy simple minification module resolution scenarios really nothing angular simple angular solution presented across numerous versions issue really devops problem sharpangles branches stages working prototype hold bit ideas evolved basically fullfledged actororiented architecture devops system script finally dies model developer behaviors directly fullest potential need apply new philosophy devised currently implementing enterprise system called behaviororiented architecture solves new problems introduced actors unfortunately problem", "d": "11/2017"}, {"body": "ericabc wow thanks super complete answer given lot material digest", "d": "11/2017"}, {"body": "funny thing removing fix issue vs code raises question one issue taking comment back works vs code path alias like nothing case guess looking inside directory", "d": "11/2017"}, {"body": "confirm problem angular service angular webstorm nothing trying figure root cause", "d": "11/2017"}, {"body": "thecp works nt need path entry first place issue remains path mappings properly picked language service also seems mandatory use variant", "d": "11/2017"}, {"body": "think fixed try install beta version", "d": "11/2017"}, {"body": "cool comes point release give try", "d": "11/2017"}, {"body": "issue phpstorm angular cli installing snapshot build fixed per", "d": "11/2017"}, {"body": "look like fixed everything seems work properly languageservice going close issue thanks kyliau", "d": "11/2017"}, {"body": "found template driven forms working outofthebox min max working perfectly reactive driven forms example reactive driven template driven surprise min max validators created directives nt added two directives project fill gap based project thanks create pr angular interest wanted ask first something intentional best regards", "d": "11/2017"}, {"body": "question yet difference aotfalse using aot cli compiles different two", "d": "11/2017"}, {"body": "meanwhile someone accepts pr pass validation using javascript workaround", "d": "11/2017"}, {"body": "important also router implementations like localizerouter depending", "d": "11/2017"}, {"body": "actually longer depends help vsavkin workaround using solves lazy loading problem require changes router code unless interested parties feature issue closed conormacaoidh brandonroberts johnpapa still interested event mentioned maybe extending would work well ts export class yourcustomloader extends systemjsngmoduleloader load path string promise return superload path factory ngmodulefactory gt return moduletype factorymoduletype create parentinjector injector gt const module factorycreate parentinjector const getmethod moduleinjectorgetbind moduleinjector see mis used", "d": "11/2017"}, {"body": "hi problem nested routes lazy loaded module throwing error navigating child routes normal behavior angular router mean see solution extending", "d": "11/2017"}, {"body": "believe solved closing issue let know case", "d": "11/2017"}, {"body": "still problem got eg scroll see link problem link directory name duplicates file name something else", "d": "11/2017"}, {"body": "problem possible two zips name happened removed guide sure occurrences atm real problem inconveniencepotentially confusing fix", "d": "11/2017"}, {"body": "would great could return value boolean current behaviour bouncing request would kept however return string router navigate route relative attemptedtoactivate route example trying navigate return go return go behavior similar", "d": "11/2017"}, {"body": "goodwine supported within version please feel free verify installing checking use case returning false routes result dead link reject observable error results error support default route npm uninstall angularrouter npm install angularrouter registry", "d": "11/2017"}, {"body": "goodwine sorry sent soon idea strings nt make lot sense canactivate guards sentinel dynamic route builders want fallback would add next route table needed conditionality create yet another canactivate essence asking supported behavior code way trying would muddy domains responsibility", "d": "11/2017"}, {"body": "way reopen", "d": "11/2017"}, {"body": "ocombe refactored pipes moved logic separate files may expose api", "d": "11/2017"}, {"body": "cc filipesilva something mind like typescript transformations", "d": "11/2017"}, {"body": "hi filipesilva like said generates aot metadata typescript transformations applied tried customtransformers ts const visitcomponents node tsdecorator tsnode gt ispropertyassignment node amp amp nodenamegettext templateurl return tsupdatepropertyassignment node tscreateidentifier template tscreateliteral foobar still includes templateurl files include template property decorator", "d": "11/2017"}, {"body": "found workaround explicitly call create reading previous transformation result result wonder whether apply transformers", "d": "11/2017"}, {"body": "heya dherges thanks looking rather unfortunate ca nt truly run transforms aot thing get workaround works expect would get cumbersome error prone maintain patched transforms complicated scenarios chuckjaz wdyt allowing custom transforms aot compiler ones", "d": "11/2017"}, {"body": "would super elegant things way allowing custom transforms aot compiler ones", "d": "11/2017"}, {"body": "repro case without angular nt seem like angular forms issue closing", "d": "11/2017"}, {"body": "currency comes intl api closing nothing moved away intljs api", "d": "11/2017"}, {"body": "yes think issue closed jialipassion thank much", "d": "11/2017"}, {"body": "netanelbasal confirm use custom decorator long provide noop implementation ngondestroy", "d": "11/2017"}, {"body": "raysuelzer yes", "d": "11/2017"}, {"body": "solution would nice need inclusion components using decorator", "d": "11/2017"}, {"body": "could least generate error idea aot causing app leak observables due", "d": "11/2017"}, {"body": "looks like working intended look docs intended set ancestors touched still specific issues error display file repo", "d": "11/2017"}, {"body": "maybe short story help someone solve problem created directive module published wwwnpmjscom never imported wwwnpmjscom kept separate file part shared module testing dev mode problems prod mode problem solved corrected old incorrect writing", "d": "11/2017"}, {"body": "ok ran issue teaching routing found problem seemed caused adding semicolon end component decorator new component check code see done similar ting anywhere hope helps", "d": "11/2017"}, {"body": "ok ran issue teaching routing found problem seemed caused adding semicolon end component decorator new component check code see done similar ting anywhere hope helps", "d": "11/2017"}, {"body": "placed module declarations instead imports removing declarations solved problem", "d": "11/2017"}, {"body": "thank cixcmg declare line without elements class variables chars lost one hour", "d": "11/2017"}, {"body": "possible implement nt plan providing native implementation time", "d": "11/2017"}, {"body": "please refer provides angular cli starter repo", "d": "11/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag specifically asking way use angular application reporting issue angular wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2017"}, {"body": "metrophos seems work master ericthebikeman next release method animationevent class also plans use event details direct animations start delayed way come later closing", "d": "11/2017"}, {"body": "amineparis issue solve", "d": "11/2017"}, {"body": "explained last comment", "d": "11/2017"}, {"body": "amineparis thanks lot investigation conclusion", "d": "11/2017"}, {"body": "known workarounds ca nt upgrade due dependencies project thanks", "d": "11/2017"}, {"body": "someone please make example animation element inside ngfor following nt work using angular", "d": "11/2017"}, {"body": "darkbasic try", "d": "11/2017"}, {"body": "put animation block outside ngfor want animate single item iterated ngfor", "d": "11/2017"}, {"body": "darkbasic ok", "d": "11/2017"}, {"body": "oh still need previous comment thought nt thanks", "d": "11/2017"}, {"body": "nt think make work need auth tokens various services like saucelabs etc wo nt available goal running ci fork", "d": "11/2017"}, {"body": "vikerman pointers regarding dom api looking docs searching api dom nt say anything even tried dom api present yes pointers use would appreciated thanks ps tried salcam example small app material components takes seconds see html rendered serverside opposed traversing children document head order remove styleslinks rel stylesheet use case amp need remove stylelink rel stylesheet script tags insert amp specific scripts sidebar etc one tag needed current page still nt figured barely struggling remove stylelink tags hope dom api would come handy things well like adding tag", "d": "11/2017"}, {"body": "agree relcanonical example would super helpful strange omission product supported google rob wormald highlighted early progress toward amp last year ngconf universal meta canonical amp would seem google webmaster guidance content ranking would something would common enough use case development path documentation would super helpful", "d": "11/2017"}, {"body": "vikerman mrcroft nt find docs details new server side rendering life saver domino news angular highlight fact dom manipulations available box however even recent migration angular still issues like end using workaround missing something docs info turn get usecase meantime thanks markpieszak example", "d": "11/2017"}, {"body": "issue open aim fix issue project another magemello good workaround find delete nodemodules often making changesadding new dependencies components library nt paths respected", "d": "11/2017"}, {"body": "tried everything mentioned issue avail using latest angular packages matter try keep getting error internal nodemodules inside dependencies specified tried different configuration settings custom library tried true false robwormald comment working fine", "d": "11/2017"}, {"body": "linktothapast unfortunately sneaky error caused different reasons last time experienced adding module root module browsermodule browseranimationsmodule imported mistake least sure two mentioned modules imported root module otherwise errors descriptive use commonmodule modules instead browsermodule case error module totally fine hope might helpful also please check imports declarations exports everything place mean case declared module declarations imported service etc kinds mistake might cause weird errors well", "d": "11/2017"}, {"body": "similar linktothapast tried everything think created simple angular projects one package one consume use connect put files plunkr packaged file see anybody knows wrong ca nt think way rolling back waiting weeks smarter people run problem post fix projects build run fine exporting library usage", "d": "11/2017"}, {"body": "benelliott yep waiting solution months kind stuff blocker working angular love promoting angular larger web dev teams core good framework infrastructure issues work angular team taken leading lots time wasted debugging issues like", "d": "11/2017"}, {"body": "problem well stuck version cli solution available note issue particularly challenging anyone npm links projects default specified via file packagejson way make work remove nodemodules linked modules viable within dev workflow", "d": "11/2017"}, {"body": "closed ticket sure devs look replies closed tickets maybe time open new ticket also wanted point least found mirrored setting modules demonstrated ngxrocketstarterkit worked well ever since gotcha ide decides use shortcut notation eg sharedwhatever inside module nt", "d": "11/2017"}, {"body": "issue library written updating change made tweak build process use new function signature error started popping check metadata file generating looks pretty fine consuming library via npm repo links involved like comments pointed working fine lib built using consumed via lib built wit used via breaks runtime following error consuming project using cli", "d": "11/2017"}, {"body": "similar problem dir structure reproduce steps linked package library unfortunately contain start demo affects error messy workaround removing solves problem temporary ca nt rebuild library path mapping inside also nt help library dependecies demo dependencies idea", "d": "11/2017"}, {"body": "sorry guys fix taking forever land fix issue hopefully week", "d": "11/2017"}, {"body": "related", "d": "11/2017"}, {"body": "even tried creating form still luck use form still remain state hence required fields start invalid state tried calling well individually problem persist reopened", "d": "11/2017"}, {"body": "using workaround going control calling leaving red glow control submitting", "d": "11/2017"}, {"body": "worked", "d": "11/2017"}, {"body": "confirmed bug still exists angular name changed matsko", "d": "11/2017"}, {"body": "let ask whether possible typescript transforms see ngpackagr", "d": "11/2017"}, {"body": "pointed example initializing testbed setup noopanimationsmodule trick gets much code make module extends app module also includes noop module import closing please open new issue incase still persists", "d": "11/2017"}, {"body": "understand current api ideal actually want get away using elementrefnativeelement allow inject native element universal nondom based platforms able deal elements domlike api hopefully help future unfortunately nt plan make major changes apis exist today look new features coming either feature releases angular", "d": "11/2017"}, {"body": "working solution aot least import component inject ngmodule version angularcore import browsermodule angularplatformbrowser export const windowinjection new injectiontoken windowinjection component selector myapp template providers provide windowinjection usevalue window export class app name string constructor inject windowinjection private window thisname ngmodule imports browsermodule declarations app bootstrap app providers provide test usevalue value export class appmodule", "d": "11/2017"}, {"body": "would pretty nice working currently reactive frameworks like ngrxplatform suffer issue using dialogs snackbars presentation components edit tests worked none solutions involving", "d": "11/2017"}, {"body": "seem problem opening dialogs within observable angular", "d": "11/2017"}, {"body": "believe manifests opening modal ngbootstrap ngmodelchange change events none workarounds presented work maybe missing something created demo issue minimal code changes get situation commits project creation adding ngbootstrap adding modal case helps thanks help", "d": "11/2017"}, {"body": "danvwells wrap content", "d": "11/2017"}, {"body": "victornoel thanks suggestion however still produces error tried coded well different timeout lengths seconds none worked weird right", "d": "11/2017"}, {"body": "danvwells ha right suspect issue problem would suggest reporting issue ngbootstrap something really strange happening clear suppose error happening one components managed", "d": "11/2017"}, {"body": "victornoel hey following workaround work html ts", "d": "11/2017"}, {"body": "alexzuza lol nt problem", "d": "11/2017"}, {"body": "victornoel sorry danvwells hey please check code", "d": "11/2017"}, {"body": "alexzuza appears got passed error sample well actual project thanks", "d": "11/2017"}, {"body": "nt think going close please reopen still problem", "d": "11/2017"}, {"body": "nt think going close please reopen still problem", "d": "11/2017"}, {"body": "oops wrong issue", "d": "11/2017"}, {"body": "temporarily fixed exporting class name namespace application compiles", "d": "11/2017"}, {"body": "issue chrisnicola hint perfectly works", "d": "11/2017"}, {"body": "lost lot time error message turns tried create template variable fatfingered subsequently spending next two hours trying figure browser animations nt imported correctly much less involved", "d": "11/2017"}, {"body": "alexeagle mean accepts flags command line arguments nt appear case least trying use target effect v help ignored try run compilation intention work", "d": "11/2017"}, {"body": "think testing command line compatible naturally something broke sync chuckjaz whether want make guarantee accept options", "d": "11/2017"}, {"body": "paladinium able use aot jit angular", "d": "11/2017"}, {"body": "nt upgrade yet take busy stuff nt know vasuneet attached zip issue long time ago others many discussion issue provided working example glad works nt care whether think works whether using jit compiler aot compiled app everything knew topic previous comments provide help sorry", "d": "11/2017"}, {"body": "case resloves fast nt resolved yet", "d": "11/2017"}, {"body": "issue experience nested inside another cleared contents transition sibling nested remains", "d": "11/2017"}, {"body": "fixed lands", "d": "11/2017"}, {"body": "similar errors identifier required defined type contain member identifier minlength defined type contain member", "d": "11/2017"}, {"body": "angular identifier required defined type contain member", "d": "11/2017"}, {"body": "pkozlowskiopensource said use time", "d": "11/2017"}, {"body": "still problem", "d": "11/2017"}, {"body": "working either surely makes named outlets useless ca nt clear workaround also nt working", "d": "11/2017"}, {"body": "dottodot try params", "d": "11/2017"}, {"body": "sorry cortopy took forever respond actually already api documented", "d": "11/2017"}, {"body": "created issue follow along", "d": "11/2017"}, {"body": "dynamic templates requirement nt care startup performance since application starting every several days dynamic templates add extra extensibility layer application architecture basically idea extensibility regain lost flexibility prespa days web developers would could use backend tech dependency injection dynamic class loadingdynamic assembly loading organize application everything plugin concept frontend part dynamically loaded part code deals weith orders part code would also supply web frontend functionality spas gained desktoplike performance feel lost flexibility using dynamic templates paramount thath kind functionality browserplatform flexibility needed unfortunate thath features like aot important people kind cripple angulars potential", "d": "11/2017"}, {"body": "angular going release angular elements weeks hope take care issue please check link angular elemetns", "d": "11/2017"}, {"body": "angular going release angular elements weeks hope take care issue please check link angular elemetns nothing random template assemblingcompilation solve case u dynamic ui need assemble ui random markup backend cant precompilated created component changes frequently", "d": "11/2017"}, {"body": "feature roadmap got reply brad green bradlygreen twitter", "d": "11/2017"}, {"body": "nsksaisaravana share link tweet", "d": "11/2017"}, {"body": "please check screenshot browse check stackoverflow reports dramatic growth angular popularity tweet comments", "d": "11/2017"}, {"body": "problem calling api sends control interesting hit endpoint directly browser browser right thing redirect location provided response angular handles fails handle redirect people saying browser issue angular issue true expect browser fail hit endpoint directly browser angular frontend people suggesting worked ng perhaps second look", "d": "11/2017"}, {"body": "little bit problem like server returns code want redirected angular fails browser nt redirect", "d": "11/2017"}, {"body": "seeing behavior posting api responds looks like angular http client trying repost using redirect url nt result actual redirect case", "d": "11/2017"}, {"body": "unpleasant exchange messages stackoverflow understood problem angular makes request results response ajax request angular http next call new url want browser acting redirecting ocurr browser request redirecting ajax request", "d": "11/2017"}, {"body": "provide services", "d": "11/2017"}, {"body": "class part provider explains inject", "d": "11/2017"}, {"body": "solve ssr issue created modules common module browser module server module appmaterialmodulets common one import ngmodule angularcore import commonmodule angularcommon import matcalendar angularmaterial ngmodule imports commonmodule add imorted material items ex matcalendar exports add imorted material items ex matcalendar export class appmaterialmodule appmaterialmoduleserverts import common one import ngmodule angularcore import noopanimationsmodule angularplatformbrowseranimations import appmaterialmodule appmaterialmodule ngmodule imports appmaterialmodule noopanimationsmodule exports appmaterialmodule noopanimationsmodule export class appmaterialservermodule appmaterialmodulebrowserts import common one import ngmodule angularcore import browseranimationsmodule angularplatformbrowseranimations import appmaterialmodule appmaterialmodule ngmodule imports appmaterialmodule browseranimationsmodule exports appmaterialmodule browseranimationsmodule export class appmaterialbrowsermodule import one need main module", "d": "11/2017"}, {"body": "workaround able get desired behaviour using directive follows approach also allows resulting value piped another pipe requested feature pipes would significantly clean code though", "d": "11/2017"}, {"body": "ignore last post use angular cli project solution posted works dev build production build get error property component never declared component class", "d": "11/2017"}, {"body": "want form reset certain value default passed function see example", "d": "11/2017"}, {"body": "open issue us dzmitryshylovich status", "d": "11/2017"}, {"body": "news issue creating custom component case important logic first writevalue call since second writevalue call giving real value big issue", "d": "11/2017"}, {"body": "recently hit limitation usecase related building framework dynamic forms aka give json config render controls run validations extensions etc got bunch components one major compoenet entry point form either take json input render components take components projected nodes component provides bunch stuff injector dynamic components via projected components never receivequery things effectively outside pretty limiting situation guess options solve purely framework make projected content injector projected declared give hook developers allow developers hook injector resolution mechanism return custom stuff first solution course would ideal might tricky implement second one really easy yet powerful enough fulfill usecases since projected content already access components injector projected possible hook component injector ps order better understand limitation talking repo demonstrates follow link see output edit really shame extend injector provide version application", "d": "11/2017"}, {"body": "issue solved new version nothing changed code working updated angular version thank", "d": "11/2017"}, {"body": "worked angular", "d": "11/2017"}, {"body": "issue upgrading angular nt understand place solution", "d": "11/2017"}, {"body": "shindarth angular add webpack plugins array", "d": "11/2017"}, {"body": "martinwegner understand webpack plugins array located", "d": "11/2017"}, {"body": "shindarth webpack config files something like var path require path var webpack require webpack var extracttextplugin require extracttextwebpackplugin var htmlwebpackplugin require htmlwebpackplugin moduleexports entry app pathresolve dirname srcmaints polyfills pathresolve dirname srcpolyfillsts vendor pathresolve dirname srcvendorts module rules plugins new webpackoptimizecommonschunkplugin name app vendor polyfills resolve extensions ts js", "d": "11/2017"}, {"body": "martinwegner believe problem shindarth facing probably using angularcli also nt access webpack config hidden angularcli sure fix either suggestions angularcli updated latest version angular angularcli typescript get error", "d": "11/2017"}, {"body": "prior based intl api moved away using api", "d": "11/2017"}, {"body": "sorry late answer think fixed one releases sure thou", "d": "11/2017"}, {"body": "meyacine everyone lives dreamworld sometimes use environment good question would nice angular would support multiple apps one page better say creating simple components use everywhere", "d": "11/2017"}, {"body": "better say creating simple components use everywhere squadwuschel look wink robwormald talked angularmix angularconnect initial implementation worked labselements branch", "d": "11/2017"}, {"body": "bug report x bug report understand issues closed got annoyed death wasted whole day still understand code working throwing error compared routermodule ts js tried many work arounds nothing dev mode works fine code added stright project works fine exported separate package bam nothing anybody example routermodule thing resolved way drop angular support stay react since issue ngc aot old compiling aot webpack works fine upgrading angular ngcweback plugin working complete code ngstatemodulets ts import inject injector modulewithproviders ngmodule injectiontoken angularcore import commonmodule angularcommon import dispatcher servicesdispatcher import router angularrouter import routerstate staterouterstate import servicelocator helpersservicelocator import state statestate import statehistory statehistory import statehistorycomponent statestatehistory import store storestore export const initialstate new injectiontoken initialstate export const collecthistory new injectiontoken collecthistory export const storehistoryitems new injectiontoken storehistoryitems export const isprod new injectiontoken isprod export function statefactory initialstate return new state initialstate export function storefactory state state return new store state export function historyfactory store store return new statehistory store export function routerstatefactory store store router router return new routerstate store router ngmodule imports commonmodule declarations statehistorycomponent exports statehistorycomponent export class storemodule static providestore initialstate isprod boolean collecthistory boolean storehistoryitems number modulewithproviders return ngmodule storemodule providers provide storehistoryitems usevalue storehistoryitems provide collecthistory usevalue collecthistory provide initialstate usevalue initialstate provide isprod usevalue isprod provide state usefactory statefactory deps initialstate provide store usefactory storefactory deps state provide statehistory usefactory historyfactory deps store initialstate provide routerstate usefactory routerstatefactory deps store router dispatcher", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "may well fixed current version angular please retest reopen issue still relevant thank", "d": "11/2017"}, {"body": "compileroptions target lib dom worked", "d": "11/2017"}, {"body": "created pr solve solve problem using waiting reviewed since october created package solve least reviewed merged case simple dropin replacement modifies minimum fix problem works changing one import check", "d": "11/2017"}, {"body": "looks like dupe", "d": "11/2017"}, {"body": "fixed branch", "d": "11/2017"}, {"body": "forked plunkr reproduce latest", "d": "11/2017"}, {"body": "jmcclanahan got ngcomponentoutlet makes things much simpler", "d": "11/2017"}, {"body": "crysislinux ngcomponentoutlet great allow us pass data component yet solution", "d": "11/2017"}, {"body": "closing please reopen still something", "d": "11/2017"}, {"body": "issue seems obvious feel like must misunderstanding something purpose clean things like event listeners docs cleanup angular destroys directivecomponent unsubscribe observables detach event handlers avoid memory leaks called angular destroys directivecomponent dom element removed time called possibly something like value lifecycle hook nt give us opportunity clean things given angular features like clean event handlers us angular philosophy manipulate dom directly real issue third party integrations current behavior would seem cause pretty severe issues trying integrate third party libraries angular applications need detach dom component destroyed far tell way us call due missing dom element thus way prevent third party library causing memory leaks misunderstanding something intended approach issue", "d": "11/2017"}, {"body": "handled via", "d": "11/2017"}, {"body": "think linked", "d": "11/2017"}, {"body": "article helped download excel file ie ngversion", "d": "11/2017"}, {"body": "idea using simple xhr instead angular http helped solve issue thank guys", "d": "11/2017"}, {"body": "going report exact issue found one plunker demonstrates problem hardly see reason postpone rendering parent component nested components got resolvers completed parent component got everything rendered wait implementation rendering parents soon resolved reason wanted postpone parent rendering nested children resolved could easily achieve listening router resolveend event current implementation blocking parents children resolved see workaround achieve want please consider changing implementation list adding option choose needed behavior also think issue related", "d": "11/2017"}, {"body": "suspect rendering life cycle case removing item form array looks like might render actually completed perhaps using lodash might outside zone", "d": "11/2017"}, {"body": "looks like ontouched event listener custom controls probably bug angular removes control registers runs code however custom control mark touched changed formcontrol removed cause error try make minimum reproduction point", "d": "11/2017"}, {"body": "problem also caused symantec endpoint projection symantec confirmed issue fix", "d": "11/2017"}, {"body": "dawidgarus idea something like want set one time binding placeholder still like work way binding need label rendered old employer", "d": "11/2017"}, {"body": "thank dawidgarus probably implementing later today agree would nice angular well also agree could code application feel would great feature carry gives lot ease use users", "d": "11/2017"}, {"body": "update error message display active delimiters instead hardcoded", "d": "11/2017"}, {"body": "plan add callback support methods get higherlevel functions created would ts import trigger state style angularanimations function mq values const entries objectkeys values map mqstr gt return mqstr values mqstr return function element const entry entriesfind tuple gt const mqstr styles tuple windowmatchmedia mqstr matches entry return entry style data return null trigger foo state value mq style still planneddeveloped", "d": "11/2017"}, {"body": "yeah appreciated", "d": "11/2017"}, {"body": "answers seems work however found using ff beta responsive design mode amp tab developer screen image fetched server soon screen width happens soon screen width reaches", "d": "11/2017"}, {"body": "issue", "d": "11/2017"}, {"body": "problem anyone find solution catch error response response type blob", "d": "11/2017"}, {"body": "hello try please", "d": "11/2017"}, {"body": "closing feedback last message please reopen still issue", "d": "11/2017"}, {"body": "works via", "d": "11/2017"}, {"body": "similar problems realized main issue keys used store detached route handles often navigate children relative parent angular apps result get methods final route parent one using key certainly enough overriding values every time storage causes angular curse changed key generation follows problem disappeared hope useful someone", "d": "11/2017"}, {"body": "using angular issue module loaded component shown different url error", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "used", "d": "11/2017"}, {"body": "used customcodepl using redirect wildcard catch route redirecting lazy loaded routemodule works expected", "d": "11/2017"}, {"body": "thank solution also scenario working fine trick specified issue ca nt use routerlinkactive pls help solution", "d": "11/2017"}, {"body": "thanks resolver functions stick route called moreover service instance injected component still keep old value need new data server route solution create new route keep switch routes", "d": "11/2017"}, {"body": "pr solves problem already merged waiting release", "d": "11/2017"}, {"body": "bastienjs solve problem met problem", "d": "11/2017"}, {"body": "djwelch bootstrapmodule setting works jit gets ignored aot", "d": "11/2017"}, {"body": "ledzz solution works aware jumping cursor try need input field select work control following workaround worked html b try topic opinion unexpected behaviour see bug missing feature", "d": "11/2017"}, {"body": "news one issue well", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "looks like abandoned pull request due fact dzmitry got banned probably right around time sent wounder would fixed issues", "d": "11/2017"}, {"body": "howiempt get person example really using symbol idea mean symbol referring implementation something like let g new formgroup name new formcontrol toxicable age new formcontrol gget name abstractcontrol gget age abstractcontrol get objperson without using string lacks ability traverse multiple formgroups method unable infer types scenario idea pr add generic types without breaking changes introducing new api aside generics", "d": "11/2017"}, {"body": "toxicable understand change meant break things trying criticize solution implementation retrofitted allows actual property used rather string referencing field string property name changes builds break nt safe example changing field name name firstname would break nt change gget name references could something like class persondetails name string age number let g new formgroup name new formcontrol toxicable age new formcontrol gget name abstractcontrol gget age abstractcontrol would tight references retrofit solution slightly hacky way solve problem well", "d": "11/2017"}, {"body": "toxicable thanx pr looking forward using agree howiempt get something like would first prize nt really know feasible within greater scope things trust judgement keep good work thanx quick response", "d": "11/2017"}, {"body": "think method accessing controls related adding generics feel free open another issue however", "d": "11/2017"}, {"body": "really nt think return type set really strongly typed seems like half implementation required step right direction", "d": "11/2017"}, {"body": "hi released workaround issue please check", "d": "11/2017"}, {"body": "resolved already thereabouts", "d": "11/2017"}, {"body": "hi update solving cors cookie issue frst time backend send response cookie subsequent request client containing cookie solve issue", "d": "11/2017"}, {"body": "also met problem seems wrongly put path importing dodule", "d": "11/2017"}, {"body": "solutions determine module component angular", "d": "11/2017"}, {"body": "probably us multiple build targets polymorphic dependencies many use cases present issue prevents builds working without crazy complicated built setup", "d": "11/2017"}, {"body": "good solution problem yet ignoremodule workaround really good solution problem changing error warning would great", "d": "11/2017"}, {"body": "solution add function passes files preprocess ing components based various compiletime settings ugly functional", "d": "11/2017"}, {"body": "try importing angular dependencies first appmodulets import components first import dependency modules import browsermodule angularplatformbrowser import commonmodule angularcommon import ngmodule angularcore import routermodule routes angularrouter import httpmodule angular import reactiveformsmodule angularforms import browseranimationsmodule angularplatformbrowseranimations import service modules import applyformpostservice servicesapplyformpostservice import navbarcolorservice servicesnavbarcolorservice finally import component modules import appcomponent appcomponent import headercomponent componentsheaderheadercomponent import careercomponent componentscareercareercomponent import homecomponent componentshomehomecomponent somehow solved aot compilation error throwing determine module class production mode", "d": "11/2017"}, {"body": "still fix", "d": "11/2017"}, {"body": "opened similar issue nt saw one p work around similar tinchou always going root could improved using promise instead sure basically step time use like", "d": "11/2017"}, {"body": "far tell bug resolved angular looks like issue longer used", "d": "11/2017"}, {"body": "year since posted development agreedupon design happy implement", "d": "11/2017"}, {"body": "case useful someone working example", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "still issue ocombe could please follow close issue", "d": "11/2017"}, {"body": "resolved another similar issue fixed closing let us know reopen", "d": "11/2017"}, {"body": "long angular nt provide functionality manually added add following code component const originformcontrolngonchanges formcontroldirectiveprototypengonchanges formcontroldirectiveprototypengonchanges function thisformnativeelement thisvalueaccessorelementrefnativeelement return originformcontrolngonchangesapply arguments const originformcontrolnamengonchanges formcontrolnameprototypengonchanges formcontrolnameprototypengonchanges function const result originformcontrolnamengonchangesapply arguments thiscontrolnativeelement thisvalueaccessorelementrefnativeelement return result implement way case worked box however typescript complained nt know nativeelement following way hope could help someone", "d": "11/2017"}, {"body": "created pr solve solve problem using waiting reviewed since october created package solve least reviewed merged case simple dropin replacement modifies minimum fix problem works changing one import check", "d": "11/2017"}, {"body": "face issue fix", "d": "11/2017"}, {"body": "ocombe issue anymore thank", "d": "11/2017"}, {"body": "suffering end relative route issues think might also something play using lazy loading also affects see ran unbelievable issues trying relative route absolute routes pain scenario params url would rebuild absolute route current param frustrating pgiemza try suggesting report back", "d": "11/2017"}, {"body": "hi jpduckwo issue lazy loaded modules tested plunker provided issue solution works well please retest case applied proposition solution works well think close issue related architectural inconvenience routing design", "d": "11/2017"}, {"body": "hope sorted", "d": "11/2017"}, {"body": "dont like angular spa different version different builin functionsyntac everything change new bug waiting solution", "d": "11/2017"}, {"body": "using angular router version candeactivate function working tried solution given adrienboulle luck choose cancel option confirmation window appears", "d": "11/2017"}, {"body": "sorry mine issue", "d": "11/2017"}, {"body": "solution proposed unwrittenfun mostly works refreshing page secondary route throwing error tried remove lazy loading happening route somewhere app routing works fine change", "d": "11/2017"}, {"body": "think error primary outlet issue refresh specify route primary outlet well nt throw error nt populate named router outlet", "d": "11/2017"}, {"body": "one got solution", "d": "11/2017"}, {"body": "update workaround", "d": "11/2017"}, {"body": "default cd combined triggers error see plunker simply replacing fixes", "d": "11/2017"}, {"body": "also expecting changed state locationgo listen events", "d": "11/2017"}, {"body": "worth filed duplicate feature request earlier work done closed deemed complete solution nt possible time enough users needed thing", "d": "11/2017"}, {"body": "pkozlowskiopensource correct thinking issue resolved move intl cldr angular upgraded issue resolved phantomjs failing due intl api stuff", "d": "11/2017"}, {"body": "michaelbromley would say let ocombe confirm", "d": "11/2017"}, {"body": "yes", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "problem michellequack temporary workaround may want use distinctuntilchanged", "d": "11/2017"}, {"body": "encounter expressionchangedafterithasbeencheckederror set focus via native element due ngtouched touched property form set properly setting manually via myformcontrolmarkastouched solves problem entirely still get expressionchangedafterithasbeencheckederror certain cases would indeed great focus method form control takes care properties set accordingly", "d": "11/2017"}, {"body": "dirty workaround app html ts login form since ca nt find way focus app returns login pd know nt good practice amp wo nt work", "d": "11/2017"}, {"body": "thanks", "d": "11/2017"}, {"body": "aaaannnnnnd joining bandwagon good guy vscode turns trollface", "d": "11/2017"}, {"body": "reported somewhere since latest vs code release comes auto import feature many people issue dont know belongs elsewhere", "d": "11/2017"}, {"body": "thanks vscode took one hour debug problem", "d": "11/2017"}, {"body": "still bug safari date like edit work safari chrome", "d": "11/2017"}, {"body": "sadly still spaces easier working mongodb date stored iso format", "d": "11/2017"}, {"body": "similarly running issue using tdd simple toggle button component would display depending boolean using changedetectionstrategyonpush wanted make sure component would display correct value pass given parent proper boolean value needless say ran wall coming across article others like able eventually find solution noticed detectchanges seems reset every time component emitted change got thinking conjunction changedetection could also dispatch event would emit value case event basically simulates user clicking button would able call detect changes see updated value test sure enough seems work least simple case testing toggle component code export interface sliderbuttontext string string component selector connslidertoggle templateurl slidertogglecomponenthtml styleurls slidertogglecomponentcss changedetection changedetectionstrategyonpush export class slidertogglecomponent input ison boolean input labelname string input buttontext sliderbuttontext output slideremitter eventemitter constructor thisslideremitter new eventemitter thisbuttontext thisbuttontext sliderbuttontext toggle thisison undefined thisison false thisison thisison thisslideremitteremit thisison test able run show component changes displays button text correctly follows describe slidertogglecomponent gt let component slidertogglecomponent let fixture componentfixture beforeeach async gt testbedconfiguretestingmodule declarations slidertogglecomponent compilecomponents beforeeach gt fixture testbedcreatecomponent slidertogglecomponent able customize text used button gt const newbuttontext subscribed unsubscribed setting default conditions change made fixturedetectchanges wo nt see unless emit componentbuttontext newbuttontext dispatched hope helps anyone struggling using onpush changedetection", "d": "11/2017"}, {"body": "using hackworkaround alexzuza fjozsef test started rendering changes inputs still ignoring lifecycle hooks ngonchanges update using light test host component seems solve issues", "d": "11/2017"}, {"body": "people stop fighting follow documentation work seamlessly", "d": "11/2017"}, {"body": "also problem angular", "d": "11/2017"}, {"body": "issue still around causes headaches angular however using old httpmodule instead new one new one robust maybe nothing http module nt know", "d": "11/2017"}, {"body": "felipedrumond would implementation trycatch idea look like looking workaround", "d": "11/2017"}, {"body": "year since wardbell submitted feature request surprised getting attention", "d": "11/2017"}, {"body": "also facing issue users forced reload page get working would really great issue addressed", "d": "11/2017"}, {"body": "camusaran resolve problem", "d": "11/2017"}, {"body": "work around could totally wrap existing moduleloader one example note im writing top head might mistakes convey idea also might actually work since hav nt tested im sure feel free mention dose nt existing module loader nt let name fool totally works webpack aswell systemjs could write simple wrapper around handle errors typescript export class myngmoduleloader implements ngmodulefactoryloader constructor private readonly compiler compiler optional config systemjsngmoduleloaderconfig thissystemjsngmoduleloader new systemjsngmoduleloader compiler config load path string return thissystemjsngmoduleloaderload path catch e gt handle error typescript provide ngmodulefactoryloader useclass myngmoduleloader", "d": "11/2017"}, {"body": "need allocate compile medium sized app", "d": "11/2017"}, {"body": "everyone posting results think detailed build configuration project information needed get real insight rollup webpack bundlers overhead changing also vastly depending version configuration including instance webpack plugins used configured angular version also important understand angular compiler used bundler angular compiler consume great amount ram see example breakdown meeting following larger regression angularcli terms memory usage reducing memory usage actively worked see though largely cover optimizing angular compiler partly added heavily optimized terms ram usage see", "d": "11/2017"}, {"body": "evolved angular using arbitrary able get populated queryparammap nt seem great practice", "d": "11/2017"}, {"body": "given unsubscribing", "d": "11/2017"}, {"body": "something like templateprovider controllerprovider even possible angular ngswitch option must add extra component used routing ideally build core controlprovider option route", "d": "11/2017"}, {"body": "changes", "d": "11/2017"}, {"body": "ocombe got news change also could please provide link design doc unable find", "d": "11/2017"}, {"body": "design doc obsolete rewrite new one start working code translations blocked working runtime translations prerequisite part done start working", "d": "11/2017"}, {"body": "hi parent router working fine changed url child time active link wokring handle", "d": "11/2017"}, {"body": "hello try deploy angular app run command ng build ng build prod generate dist folder file open indexhtml file browse blank page", "d": "11/2017"}, {"body": "writing webpack loader transform code snippets html files highlight problem javascript code snippets ngnonbindable seems work correctly", "d": "11/2017"}, {"body": "hi angular project also scripts started failing developers introduced communication firebase lot tests already written idea get working back minimal changes tried line still luck browserwaitforangularenabled false nishant shah", "d": "11/2017"}, {"body": "hi also getting error like please refer image let know", "d": "11/2017"}, {"body": "update angular still fails strict mode", "d": "11/2017"}, {"body": "kirillgroshkov yes may older version quote believe fixed", "d": "11/2017"}, {"body": "kirillgroshkov also version typescript may new strict good moving target new versions ts released", "d": "11/2017"}, {"body": "news issue btw path took implement please suggest case better path listening valuechanges event ngform emitting event child component subscribing parent return proper value deactivate guard fired", "d": "11/2017"}, {"body": "angular core router app routes app module routes lazy loaded projectmodule projectservice injected projectcomponent providers instead projectmodule providers following code child component viz addstep checklist etc imported service get id following code thisprojectkey thisprojectserviceprojectkeyfromroute worked really well dont use activated route component one inside service although code use good practices like using activated route service adding service provider array module component etc anyways worked angular work use activated route component use following child parent projectcomponent service injected projectmodule provider array thoughts", "d": "11/2017"}, {"body": "typescript ngoninit void thisroutersub thisrouterevents filter event gt event instanceof navigationend map gt thisactivatedroute map route gt routefirstchild route routefirstchild return route filter route gt routeoutlet primary mergemap route gt routedata subscribe data gt thistitle datatitle website solution relies additional operators", "d": "11/2017"}, {"body": "im issues angular well find logical angular makes search nested firstchilddata objects retrieve data developer want access activated state object appcomponent data property well case lets say routes const routes routes path rides children path component ridescomponent path ride id component ridecomponent path generate component generatecomponent data layoutcenter true appcomponent ngoninit see examples levels reaching state go really deep objects search data param available top current state object please implement angular thanks deeply appreciated edit solved using recursive search data param", "d": "11/2017"}, {"body": "meanwhile mentioned docs handlers less forgiving example routerlink directive expects object button property identifies mouse button pressed directive throws error event object nt correctly", "d": "11/2017"}, {"body": "still nothing issue", "d": "11/2017"}, {"body": "longer use intl closing", "d": "11/2017"}, {"body": "also issue see answer says see step something step added polyfillsts another project referenced maints made sure polyfill imports existed nodemodules folder still getting error trying run app vs core", "d": "11/2017"}, {"body": "would also interested update ticket kotlin much better language compared typescript current understanding ng compiler tied typescript would love angular team provide support community needs come angularkotlin integration", "d": "11/2017"}, {"body": "cristianmocanumob meaning angular compiler generate nontypescriptjavascript codes angular written typescript dart folks template work without angular runtime part", "d": "11/2017"}, {"body": "trotyl think missed point course output javascript without typescript intermediate step browsers run point input using kotlin input angular compiler instead typescript", "d": "11/2017"}, {"body": "cristianmocanumob sounds like great hobby project side sure important stuff pipeline rewriting entire compiler agree ideal world compilers languages would nice party libs would need rewritten kotlin would compiler compile time think practical implications least nt quite grasp idea great nt think feasible imho", "d": "11/2017"}, {"body": "cristianmocanumob angular compiler compiler html template collecting metadata typescript wo nt change typescript code except special handling metadata part even could extract metadata kotlin compile html template still get logic code kotlin generated code javascripttypescript need bridge extracting metadata kotlin angular compiler already handle file need provide actual logic compile kotlin javascript per file angular compiler produces modular source code bundle part real problem second perform single file compilation kotlin javascript without bundling general problem tojavascript compilation related typescript problem exist like using coffeescript quite possible support wrapping compiler", "d": "11/2017"}, {"body": "implemented set optimize whitespaces default changed also set component level", "d": "11/2017"}, {"body": "upgrade version version replace pattern full plugin copied", "d": "11/2017"}, {"body": "new webpackcontextreplacementplugin angular core pathresolve src worked", "d": "11/2017"}, {"body": "word caution using contextreplacementplugin breaks lazy loading child routes aot builds built least use contextreplacementplugin make sure code webpackdevjs webpackcommon prod ang webpack", "d": "11/2017"}, {"body": "reproduce behaviour htmldriven forms", "d": "11/2017"}, {"body": "unable resolve issue tried steps mentioned suggestion zeeshananjumjunaidi gorshkovleonid", "d": "11/2017"}, {"body": "curious thoughts although little bit late considering support ts file nt think annotation syntax found someone mentioned example would message need translated iddynamicmessage dynamicmessage dynamic message annotation dynamicmessage inject function annotation string instance name format use like var finalmessage dynamicmessageformat similar approach could possible taking care named parameters etc", "d": "11/2017"}, {"body": "guess question make good developer experience question compilation also happens change another string variables need always constants nt think using variables would work eg symfony translatorservice translationfunction would work like js syntax result", "d": "11/2017"}, {"body": "mickl point current aot translation make minimal efficient program approach dynamic translation nt exist yet strongly believe current approach really good sense using dynamics service translate strings means know text static please translate way using service problem dynamic translation simple going translate string every time showing really good way dictionary several languages memory using every time showing dynamic text need go map find key find language translation every time main language point view future solution backend gives text want translate replace download backend current approach every text showing currentmain language replace everything get time nt need find two keys every time want show simple label truly dynamic text replaced andor requested backend think really dynamic text show receive backend really need copy dynamic text always use cache", "d": "11/2017"}, {"body": "opinion need discuss issue anymore actually guy olivier combe working fulltime aot special lot work done making issue even close possible soon dynamic translations need build language separate done translations within code issue later said road issue resolved hopefully takes half year interested checkout speech angular connect present future angular", "d": "11/2017"}, {"body": "closing longer possible provide locale data enus default changed runtime since part common library", "d": "11/2017"}, {"body": "sure understand point locale nt whole idea done runtime user presented format used choose locale buildtime much locale way imagine working register locales want bundle bootstrap angular goes looks first match none found use provided defaults also aot need locale defined build time would case browser detection sure get functions example date pipe used runtime aot need angular determine locale runtime many platforms mechanism define locale act fallback platform tell angular locale used", "d": "11/2017"}, {"body": "related aot needs know locales supported included available runtime later one default one none specified runtime", "d": "11/2017"}, {"body": "choose locale want use runtime using function provider need bundle multiple locale data application angular provides enus data want something else available need import well need locales locales bundled app even use locale around minified lot decide need could also lazyload locales implement angular never decide method want use determine locale browser language could also use cookies geo ip localization url parameters", "d": "11/2017"}, {"body": "supoort angular use tag like used use instead", "d": "11/2017"}, {"body": "navigate back forth components get multi lines", "d": "11/2017"}, {"body": "used like solved problem please try end let know goes emit first pair pair wo nt emit anything per observation", "d": "11/2017"}, {"body": "dzmitryshylovich could please let know hacked way need pairwise need return first one even second value", "d": "11/2017"}, {"body": "bug report x bug report understand issues closed got annoyed death wasted whole day still understand code working throwing error compared routermodule ts js tried many work arounds nothing dev mode works fine code added stright project works fine exported separate package bam nothing anybody example routermodule thing resolved way drop angular support stay react since issue ngc aot old compiling aot webpack works fine upgrading angular ngcweback plugin working complete code ngstatemodulets ts import inject injector modulewithproviders ngmodule injectiontoken angularcore import commonmodule angularcommon import dispatcher servicesdispatcher import router angularrouter import routerstate staterouterstate import servicelocator helpersservicelocator import state statestate import statehistory statehistory import statehistorycomponent statestatehistory import store storestore export const initialstate new injectiontoken initialstate export const collecthistory new injectiontoken collecthistory export const storehistoryitems new injectiontoken storehistoryitems export const isprod new injectiontoken isprod export function statefactory initialstate return new state initialstate export function storefactory state state return new store state export function historyfactory store store return new statehistory store export function routerstatefactory store store router router return new routerstate store router ngmodule imports commonmodule declarations statehistorycomponent exports statehistorycomponent export class storemodule static providestore initialstate isprod boolean collecthistory boolean storehistoryitems number modulewithproviders return ngmodule storemodule providers provide storehistoryitems usevalue storehistoryitems provide collecthistory usevalue collecthistory provide initialstate usevalue initialstate provide isprod usevalue isprod provide state usefactory statefactory deps initialstate provide store usefactory storefactory deps state provide statehistory usefactory historyfactory deps store initialstate provide routerstate usefactory routerstatefactory deps store router dispatcher", "d": "11/2017"}, {"body": "think nothing issue think ask question stack overflow", "d": "11/2017"}, {"body": "im issue angular tried many different configurations ngmodule imports commonmodule exports usercomponent declarations usercomponent export class securitymodule static forroot securityservice isecurityservice modulewithproviders consolelog creating securitymodule instance forroot service securityservice return ngmodule securitymodule providers provide securityservice usevalue securityservice constructor optional skipself parentmodule securitymodule parentmodule throw new error securitymodule already loaded import appmodule else consolelog creating securitymodule instance child error error error encountered resolving symbol values statically calling function securitymodule function calls supported consider replacing function lambda reference exported function", "d": "11/2017"}, {"body": "jdbranham remove", "d": "11/2017"}, {"body": "removed console logging still fails module usage module import isecurityservice isecurityservice import ngmodule modulewithproviders optional skipself injectiontoken angularcore import commonmodule angularcommon import usercomponent userusercomponent export const securityservice new injectiontoken securityservice ngmodule imports commonmodule exports usercomponent declarations usercomponent export class securitymodule static forroot securityservice isecurityservice modulewithproviders return ngmodule securitymodule providers provide securityservice usevalue securityservice constructor optional skipself parentmodule securitymodule parentmodule throw new error securitymodule already loaded import appmodule import browsermodule angularplatformbrowser import ngmodule angularcore import appcomponent appcomponent import securitymodule securitymockservice savantlyngxsecurity export const mocksecurity new securitymockservice ngmodule declarations appcomponent imports browsermodule securitymoduleforroot mocksecurity providers bootstrap appcomponent export class appmodule", "d": "11/2017"}, {"body": "opened question case bug rather issue code", "d": "11/2017"}, {"body": "hi news", "d": "11/2017"}, {"body": "issue present angular", "d": "11/2017"}, {"body": "created pr solve solve problem using waiting reviewed since october created package solve least reviewed merged case simple dropin replacement modifies minimum fix problem works changing one import check", "d": "11/2017"}, {"body": "technique nt appear working running runtime compiler loaded error", "d": "11/2017"}, {"body": "hi guys chance installation guide dummies solution thanks", "d": "11/2017"}, {"body": "progress subscribe statuschanges modify control value observable emit instance call formmarkaspristine even dirty nothing comes observable", "d": "11/2017"}, {"body": "looking source code seems effort implement nt huge could imagine two new observables instance either emitting true false state change opinions community support", "d": "11/2017"}, {"body": "closing much likely feature builtin", "d": "11/2017"}, {"body": "add error message translation file provided either file exist locale specified already case changing comp compiler since part ok", "d": "11/2017"}, {"body": "really fixed", "d": "11/2017"}, {"body": "think working expected well documented provide service something else test bed using overridecomponent function eg order reference injected service nt use test bed injector ie testbedget helloworldservice get use component injector spy service methods normal", "d": "11/2017"}, {"body": "chrisjonespixitmedia right kinda obvious applying solution also quite bad api would better mock like java development thank", "d": "11/2017"}, {"body": "still issue think following related issues advancement complicated angular apps becoming common bug people hit anyone please fix", "d": "11/2017"}, {"body": "update issue", "d": "11/2017"}, {"body": "jcmordan wondering declare component appmodule available modules need imports seems working", "d": "11/2017"}, {"body": "raysuelzer want use components directives pipes module b module import b module exports b import appmodule nt matter module except services", "d": "11/2017"}, {"body": "jcmordan case lazy loaded modules sure said correct mind put shared component top need way component wil avialable sub modules childrens module put shared component modulemain routes defined lazy loads modulelazya modulelazyb need thiscomponent putting thiscomponent modulemain seem work even though hierarchically speaking two lazy modules found needed put thiscomponent thissharedmodule import lazy modules miss something", "d": "11/2017"}, {"body": "rmcsharry need import every module everwhere want use components directives pipes module export another module way import set modules single import besides first sentence still holds", "d": "11/2017"}, {"body": "zoechi thanks fast response saying correct wrong thought could declare thiscomponent modulemain available two lazy loaded modules modulelazya modulelazyb lazy loaded presume declaring thiscomponent inside modulemain would import amp b non lazy loaded would work right amp b lazily loaded declare thiscomponent modulemain must instead put shared module lazy modules import seems counterintuitive since amp b lazy loaded main get access components declared main", "d": "11/2017"}, {"body": "rmcsharry generally situation simple need import example module always module example module want use component declared module module principle eager lazy module", "d": "11/2017"}, {"body": "micmlapis seems good job explaining situation appears follow rules yet prerequisites problem thiscomponent declared module module declares two routes b lazy load modules modulelazya modulelazyb situation modules b importing module module importing either b lazy loading b essentially children neither b see thiscomponent even though declared parent module seem completely ignore put thiscomponent another module module imported lazy modules seem odd anyone else create another module thiscomponent surely makes sense lazy loaded modules access whatever components declared parent module wrong clearly extra plumbing code need add make happen statement jcmordan incorrect said component available sub modules childrens module put shared component would also contend statement principle eager lazy module b eager loaded imported lazy loaded scenario would get access thiscomponent declared parent extra module would required", "d": "11/2017"}, {"body": "rmcsharry create new module even one component call shared one imported eager module lazy loaded modules concept modules relative easy super important context components declared compiled used reason need new module lazy loaded modules loaded future new module already loaded course case creating new module lines code nothing care", "d": "11/2017"}, {"body": "mlcmlapis thank reply believe still understanding saying nt need shared module parent eager loading children parent contain component children able use need shared module parent lazy loading children children see component declare parent scenario must use shared module would say something care otherwise danger creating huge shared module maybe hundreds components end loading lazy route get access one single component structure shared code quite important think imagine large angular projects require several shared modules one reason routes lazy loaded might need shared module simply put component parent", "d": "11/2017"}, {"body": "issue scroll mobile page start moving finger hammer container prevents page scrolling example hammer container nothing helps made config solve vertical scroll problem", "d": "11/2017"}, {"body": "help pan direction", "d": "11/2017"}, {"body": "perg get codes works code use enables vertical pan scroll page breaks horizontal pan panleft event fired strange deltax deltay values", "d": "11/2017"}, {"body": "find codes documentation section api horizontal also noticed strange deltax values ended start panning panstart event absolute value velocityx greater absolute value velocityy", "d": "11/2017"}, {"body": "perg thank works", "d": "11/2017"}, {"body": "ever fixed angular", "d": "11/2017"}, {"body": "giancarloa solve issue problem thank", "d": "11/2017"}, {"body": "facing issue angular even though eventstoppropagation called clicked button page routing next view similar issue", "d": "11/2017"}, {"body": "also problem", "d": "11/2017"}, {"body": "monkey patching encodeuricomponent fix issue user refreshes browser attempts bookmark instance may anchors sidebar menu parentheses encoded properly user clicks links google chrome automatically replace open closed parentheses respectively address bar user bookmarks page refreshes get error", "d": "11/2017"}, {"body": "still issue workarounds", "d": "11/2017"}, {"body": "months process docs fix pr nt merge yet", "d": "11/2017"}, {"body": "unfortunately ca nt supported current triggers work need handle pseudo state detection within component code", "d": "11/2017"}, {"body": "investigations reached similar conclusions dynalon mentioned one year ago case problem related use share operator multicasting effectively turns sequence hot observable problem solved using rxjs operator provides replay behavior subscription time eg switching share sharereplay updated version plunker intended behavior", "d": "11/2017"}, {"body": "stackblitz demonstrating thing indeed nt seem bug dynalon said peculiarity rxjs ngif clicking within app window inner subscription happens outer subscription receives truthy value shows null instead clicked using sharereplay helps uncomment click within app window encountered initially relying ngrx effect observable emitted number unread messages success action dispatched number got fetched however since onetime event element ngif became displayed fine inside displayed number null since inner subscription happended observable emitted longer event receive could replay emitted value using sharereplay ended rewriting implementation rely effect observable", "d": "11/2017"}, {"body": "workaround could use manually work zone", "d": "11/2017"}, {"body": "leonadler thanks code snippet helped lot quick note case helps anyone else found order get workaround work also specify argument tick call fakeasync value milliseconds least equal delay value specified observabletimer eg tick observabletimer", "d": "11/2017"}, {"body": "fujivato yes without value immediates run timeouts let resolved false promiseresolve gt resolved true let timeoutran false settimeout gt timeoutran true expect resolved tobe false expect timeoutran tobe false tick expect resolved tobe true expect timeoutran tobe true microtasks attached specific time ran time ed would expect let onesecondpassed false settimeout gt onesecondpassed true expect onesecondpassed tobe false tick expect onesecondpassed tobe false tick expect onesecondpassed tobe false tick expect onesecondpassed tobe true let secondspassed setinterval gt secondspassed expect secondspassed tobe tick expect secondspassed tobe tick expect secondspassed tobe tick expect secondspassed tobe", "d": "11/2017"}, {"body": "fwiw spent least hours debugging never would expected component matched expected behavior imo", "d": "11/2017"}, {"body": "made work adding default value", "d": "11/2017"}, {"body": "yes way get app working well edge safari adding default disabled option ireally want prefer placeholder one option", "d": "11/2017"}, {"body": "matsko nt update awhile wondering still works", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "space correct pass params like", "d": "11/2017"}, {"body": "anyone still needs jsonld support angular app made super small component makes easy use also works universal ssr", "d": "11/2017"}, {"body": "matsko super thank much able find documentation style expressions cant understang bind runtime object property function style like gustavocostaw post gustavocostaw managed background trick", "d": "11/2017"}, {"body": "check pr link matsko sent search spec files make possible dynamic styles", "d": "11/2017"}, {"body": "gustavocostaw thanks answer link angular sources playing days result also angular complains syntax style value cant sting either either object expected basically trying simplified template nested divs width first margin second animated upd found give wished result animationbuilder upd created using animationbuilder found", "d": "11/2017"}, {"body": "closing since supported", "d": "11/2017"}, {"body": "create service add provider array tasklistcomponent inside child component use service get id child components provide service provider array child components", "d": "11/2017"}, {"body": "shortly way angulario nt forget add directive module abccomponenthtml abccomponentts activeroutedirectivets javascript import directive input output eventemitter angularcore import routerlinkactive router navigationend angularrouter import subscription rxjssubscription directive selector isactiveroute export class isactiveroute input isactiveroute reference routerlinkactive output isactiverouteemitter isactiveemitter eventemitter new eventemitter private subscription subscription constructor private router router thissubscription thisroutereventssubscribe event gt event instanceof navigationend thisupdate ngaftercontentinit void thisupdate ngondestroy void thissubscriptionunsubscribe private update void promiseresolve gt thisreferenceisactive thisisactiveemitteremit thisreference", "d": "11/2017"}, {"body": "handled using going forward issue used track change", "d": "11/2017"}, {"body": "likely work always blocking inner child animations enter leave feature used allow inner animations kicked issue track progress", "d": "11/2017"}, {"body": "dynamic functions style animate presented likely support", "d": "11/2017"}, {"body": "deprecated angular use instead note include section scenario", "d": "11/2017"}, {"body": "mchambaud guess new link", "d": "11/2017"}, {"body": "updates issue gained traction beginning think receiving attention anymore", "d": "11/2017"}, {"body": "yup update", "d": "11/2017"}, {"body": "something need badly hope proposal gets way upstream", "d": "11/2017"}, {"body": "issue solved ngif corresponding html want redirect login page user nt login add check ngoninit function user nt login redirect url change page still add ngif check condition top tag corresponding component html works well", "d": "11/2017"}, {"body": "made small library mitigates problem hopefully wo nt need long", "d": "11/2017"}, {"body": "getting error like npm err code npm err found angularcompiler coming npmrc file", "d": "11/2017"}, {"body": "gives property startwith exist type typeof observable ide atom", "d": "11/2017"}, {"body": "pkozlowskiopensource show example trying solve problem", "d": "11/2017"}, {"body": "build project angularcli also use olj set resolve issue body give solution error uglifyjs rangeerror maximum call stack size exceeded", "d": "11/2017"}, {"body": "upgraded angular none worked fact seemed like none dom calls worked eg windowscrollto", "d": "11/2017"}, {"body": "solved", "d": "11/2017"}, {"body": "simple solution would adding windowscrollto inside ngoninit required component javascript ngoninit windowscrollto", "d": "11/2017"}, {"body": "ericmartinezr thank update using angular material matsidenav specifically calls window body nt working eg nt scrollable everything worked called appropriate dom element eg assumed elements would scrollable since parents", "d": "11/2017"}, {"body": "navigating back another route page scrolled position going forward behaviour currently implemented browsers navigating gt normal pages spa never seen behaviour implementation router raises great point behavior seeing scroll position mainted regardless back action navigation entirely new page fine keeping scroll position back actions seems like bug navigating new page", "d": "11/2017"}, {"body": "confusing worked around accessing changesitemfirstchange", "d": "11/2017"}, {"body": "rethinking confusing hell makes trip time", "d": "11/2017"}, {"body": "ohh common guys truefalse property plz", "d": "11/2017"}, {"body": "still issue find solution issue cc gasperiguillaume", "d": "11/2017"}, {"body": "aleixsuau yet comment test nt really time look", "d": "11/2017"}, {"body": "believe done already", "d": "11/2017"}, {"body": "would really nice make possible dynamic type like", "d": "11/2017"}, {"body": "thanks summary small correction approach avoid confusion anyone might read instead quotes outside", "d": "11/2017"}, {"body": "martinma right thanks", "d": "11/2017"}, {"body": "cexbrayat know pretty offtopic resources testing template driven forms", "d": "11/2017"}, {"body": "several examples online training nt think public examples articles sorry", "d": "11/2017"}, {"body": "bought ninja squad ebook hope find happiness inside smiley", "d": "11/2017"}, {"body": "deprecated angular please use instead", "d": "11/2017"}, {"body": "ran issue querying api returns json bad piece data missing property display pipe display keysvalues little annoying works eg value missing works prefer display eg value missing rather blank would lovely addition parse error blessrng mention looks like", "d": "11/2017"}, {"body": "namek agree solution prevent navigate hideshow tabs click link tab", "d": "11/2017"}, {"body": "following code support lazy modules sibling navigation typescript import routereusestrategy activatedroutesnapshot detachedroutehandle angularrouter function routetourl route activatedroutesnapshot string routeurl routeurllength return routeurljoin else typeof routecomponent function return else typeof routecomponent string return else return else return null function calckey route activatedroutesnapshot let next route let url routepathfromrootmap gt routetourl join nextfirstchild next nextfirstchild url routetourl next return url export class customreusestrategy implements routereusestrategy", "d": "11/2017"}, {"body": "add animation scrollintoview way still nt official solution since angular", "d": "11/2017"}, {"body": "facing problem nothing done fix issue yet", "d": "11/2017"}, {"body": "bumping experiencing issue", "d": "11/2017"}, {"body": "trokal fallenstedt issue closed comment error message improved", "d": "11/2017"}, {"body": "jrisk thaaaaaaaaaaaaaanks work discovering need pipe async view template stop giving error differ supporting object", "d": "11/2017"}, {"body": "wo nt developing new features use instead testing module sets everything correctly", "d": "11/2017"}, {"body": "issue angular solution easy use code causes problem two way binding ngmodel attachment security issue change value input file without using browser using code behind use istead update model inside function", "d": "11/2017"}, {"body": "ever fixed router", "d": "11/2017"}, {"body": "cajoy todoubaba thanks insight angular base service class api import reflectiveinjector angularcore import headers http httpmodule requestoptions response angular import observable rxjsobservable export class baseservice http constructor let injector reflectiveinjectorresolveandcreate httpmodule http thishttp injectorget http get url return gt resjson catch thishandleerror delete url return gt resjson catch thishandleerror extractdata res response const body resjson return body handleerror error const errmsg errormessage errormessage errorstatus server error return observablethrow errmsg try added httpmodule http even though throws provider connectionbackend http connectionbackend", "d": "11/2017"}, {"body": "sorry everyone dropped ball fix however meantime actually stopped using angular part favor react little motivation correct issue however viable fix pr denied nt compatible aot compilation angular add capability declare web root relative path component styleurls prefixing url someone figure way make method compile properly may work sure exactly aot works angular imagine expand full path compile time anyways good luck angular community", "d": "11/2017"}, {"body": "something similar issue reload get route params undefined nan route component ngoninit thisrouteparams subscribe params gt const id params id const name params displayname got undefined url param happens refresh page", "d": "11/2017"}, {"body": "btford wondering closed still issue many workaround fix thanks", "d": "11/2017"}, {"body": "jelbourn make fake event objects testing purpose", "d": "11/2017"}, {"body": "faced issue today using radio button list used awerlang solusion using ngmodelchange instead click event worked like magic", "d": "11/2017"}, {"body": "issue textarea ca nt really use ngmodelchange steals characters user typing handles change every character typed trying use focusout ran problem worked using change ngmodelchange way triggers blur helpful user typing away textarea", "d": "11/2017"}, {"body": "marshallalsup sounds like something wrong", "d": "11/2017"}, {"body": "zoechi think probably right since still learning however leave comment case idea using change instead ngmodelchange helps someone else situation", "d": "11/2017"}, {"body": "elgervb good mentioned way able install windows machine testing solution reason failed fsevents build failure error yarn instruction worked", "d": "11/2017"}, {"body": "like", "d": "11/2017"}, {"body": "one please suggest good tutorial angular websockets apart websockets chat applications need thanks advance", "d": "11/2017"}, {"body": "using namespace work plain html working get error angular application inkscape perspective known element plunker angular", "d": "11/2017"}, {"body": "possible inject dynamic components child svg elements instance main component canvascomponent template something like ngtemplate anchor used dynamically inject components per dynamic squarecomponent got template way dynamic components get added dom square component gets added canvas component contained div element like theory works pretty well except fact svg therefore square wo nt render got unknown markup div question somehow change element injector uses rather using div uses svg know element like g", "d": "11/2017"}, {"body": "hi simple html angluar component inside svg import component input angularcore component selector mycomponent template export class mycomponent need nt work", "d": "11/2017"}, {"body": "shmorhun try using attribute directives make sure use svg elements like template html elements rendered see action plunker short use", "d": "11/2017"}, {"body": "closed want able view version runtime", "d": "11/2017"}, {"body": "root app component import component ngmodule version angularcore import browsermodule angularplatformbrowser component selector myapp template export class app name string constructor thisname ngmodule imports browsermodule declarations app bootstrap app export class appmodule", "d": "11/2017"}, {"body": "obsolete seems longer package", "d": "11/2017"}, {"body": "need one material think concise enough", "d": "11/2017"}, {"title": "vshowvif fails update using map collection", "body": "version reproduction link steps reproduce jsfiddle click fill array label vmyarray filled shows click fill map label appear click fill array label appear expected step label vmymap filled appear clicking button fill map actually happening label vmymap filled appearing nt try expect set collection act", "num": "7162", "d": "11/2017"}, {"title": "npm install global vuecli", "body": "problem feature solve symbol primitive value suitable key proposed api look like npm install global vuecli warnings symbol", "num": "7161", "d": "11/2017"}, {"title": "npm intall global vuecli", "body": "", "num": "7160", "d": "11/2017"}, {"title": "", "body": "", "num": "7159", "d": "11/2017"}, {"title": "use symbol value key", "body": "problem feature solve symbol primitive value suitable key proposed api look like warnings symbol", "num": "7157", "d": "11/2017"}, {"title": "use vue template", "body": "problem feature solve custom event multiple child component top component listens like eventhandler way identity emits event use event arg compiled code looks like null maybe replaced proposed api look like know accessed javascript methods would nice use template better way solve said", "num": "7155", "d": "11/2017"}, {"title": "input keydown class binding micromacro task", "body": "version reproduction link steps reproduce enter number input field keydown fires keydwn e method setting thisuntouched false green background removed input field since touched expected pressed number entered input field instead number added second press class binding removed input field problem acting expected nt think issue keydown setting thisuntouched false addition class binding left vmodellazy set vmodel works expected however vmodel work use case actually happening class binding set number added field vue see reproduction works expected class binding vmodellazy edit assume related release note changed implementation vuenexttick fix bugs related change involves using macro task instead micro task defer dom updates inside dom event handler attached via von means vue updates triggered state changes inside von handlers deferred using macro task may lead changes behavior dealing native dom events details regarding micromacro tasks see blog post new implementation see source code nexttick sure bug expected behavior due change need solution thanks", "num": "7153", "d": "11/2017"}, {"title": "\u5728laravel\u4e2d\u4f7f\u7528vue\u62a5\u9519", "body": "", "num": "7152", "d": "11/2017"}, {"title": "ios safari browsers ca nt open display blank", "body": "using vuecli create chrome browsers mac safari browsers display normal ios safari browsers ca nt open display blank", "num": "7150", "d": "11/2017"}, {"title": "event handler nt work cshtml razor page", "body": "version reproduction link steps reproduce since using latest version vuejs supports short hand code events trying use click instead von click inside razor cshtml file nt work developing app backend aspnet core expected expected result working click actually happening encoding click submittest visual studio says name click exist current context resolve symbol click", "num": "7149", "d": "11/2017"}, {"title": "\u4e3a \u5f00\u53d1\u7684\u4f7f\u7528 vuejs", "body": "problem feature solve \u6211\u7684 firefox \u7684 csp contentsecuritypolicy scriptsrc self unsafeeval objectsrc self mozilla hello addon cryptocurrency price tracker bitcoin ethereum reviewed one versions disabled due critical issues discovered details version pass review following issues use unsafeeval allowed manifestjson csp cause major security issues custom csp allows remotescript injection allowed please fix submit thank \u662f\u56e0\u4e3a\u6211\u7684 csp \u91cc\u58f0\u660e\u4e86\u4f7f\u7528 unsafeeval proposed api look like vuedontuseeval", "num": "7148", "d": "11/2017"}, {"title": "ability trigger events directives", "body": "problem feature solve currently way trigger event inside bind function resort inspecting executing directly looking examples projects found usage right scopetarget need events go stackoverflow discussion proposed api look like usage bind choose component thought would lot boiler plating propagating attributes field inside component looked veevalidate handled communication used object errorsbag pass around vnodecontext directive bootstrapvue used mechanism mentioned earlier", "num": "7147", "d": "11/2017"}, {"title": "ca nt find variable sockjs", "body": "version reproduction link steps reproduce cli\u7248\u672c vue\u7248\u672c \u5728ios\u4e0b\u6253\u5f00\u4f1a\u62a5\u9519referenceerror ca nt find variable expected \u80fd\u6b63\u5e38\u52a0\u8f7d\u9875\u9762 actually happening ios\u7aef\u6253\u5f00\u767d\u5c4f", "num": "7146", "d": "11/2017"}, {"title": "conflicts vmodel", "body": "", "num": "7145", "d": "11/2017"}, {"title": "shorthand attributeprop syntax", "body": "problem feature solve often find writing code like code redundant nt fun write proposed api look like using object literal shorthand inspiration component could instead written like", "num": "7144", "d": "11/2017"}, {"title": "safari ca nt find variable sockjs", "body": "use strict const sockjs require sockjsclientdistsockjs let retries let sock null function socket url handlers sock new sockjs url error ca nt find variable sockjs sockonopen function onopen retries", "num": "7143", "d": "11/2017"}, {"title": "code spliting vue ssr", "body": "code result visit first js files download response blank exist file size code wrong", "num": "7142", "d": "11/2017"}, {"title": "", "body": "problem feature solve proposed api look like", "num": "7141", "d": "11/2017"}, {"title": "vuenexttick mocha nt play nice", "body": "version reproduction link steps reproduce run tests repro link expected tests fail similar error messages actually happening first test using settimeout fails expected second test using vuenexttick times error disappearing happening apparently uses promise internally mocha nt support catching unhandled promise errors workaround nt great least lets know error nt log correct error also wrap contents test ensure mocha knows mostly problem mocha think unexpected handle errors inside promise nt look like promise function really sure would suggest", "num": "7140", "d": "11/2017"}, {"title": "shouldprefetch enhancement", "body": "problem feature solve currently use load appropriate translation components generates chunks prefetched application starts would like load translations current language gives enough information filter files prefetched proposed api look like nt know available information probably api look like", "num": "7139", "d": "11/2017"}, {"title": "fires input event textarea placeholder set", "body": "version reproduction link steps reproduce opening page display message foo longer null modern ff chrome edge message show foo remains null user actually inputs something fire input event placeholder set show second textarea expected input event fire thus foo remain null actually happening ie fires input event textarea placeholder similar issue angular", "num": "7138", "d": "11/2017"}, {"title": "click handler invisible element nt get cleared", "body": "version reproduction link steps reproduce click handler shows new character click handler shows new character click new appeared ok click toggle hide show ok click new appeared ok click toggle hide show ok click new appeared means click handlers visible hidden elements get called ok expected handler hidden get called click actually happening handlers get called", "num": "7137", "d": "11/2017"}, {"title": "issues vmodelnumber", "body": "version reproduction link steps reproduce included fiddle expected input typenumber clear values accept stings formatted different locales vmodelnumber return string actually happening input value cleared sometimes vmodelnumber returns partially typed numbers issue started topic forum suggested open issue original post hi found limitations requires boilerplate cases mostly returns partially input numbers like problems app difference input either empty invalidpartial bound attribute type falsy values leads checks places attribute used issues solved computed property hard implement nested ones array values came using separate field casted values wanted implement custom directive like see handled differently compiler way automatically use property defined object found implemented custom directives questions better way work implemented custom directives convenient added vue post tried implement custom component included fiddle also issues also added different types inputs fiddle check behaviour checked different locales thank", "num": "7136", "d": "11/2017"}, {"title": "css transitions amp animations examples doc seem broken", "body": "version reproduction link steps reproduce facing issue css transitions animations using vue noticed css transition properties applied correctly issues present examples official vuejs documentation example see css animation properties applied transitions gt translatex opacity animations applied gt opacity animation applied expected transition animation applied elements per described opacity translatex actually happening transition animation applied", "num": "7134", "d": "11/2017"}, {"title": "vshow\u5bfc\u81f4\u6570\u636e\u5237\u65b0\u540e\u90e8\u5206\u6570\u636e\u4e0d\u663e\u793a", "body": "version reproduction link steps reproduce expected actually happening \u5237\u65b0table\u6570\u636e\u540e\u53d1\u73b0\u6570\u636e\u90e8\u5206\u4e22\u5931", "num": "7133", "d": "11/2017"}, {"title": "tests fail clean environment", "body": "version reproduction link metaissue steps reproduce opened fresh terminal typed expected tests passing might confused development process contribution file says make sure passes pull request guidelines would expect pass fresh pull actually happening tail finished secs secs gmt cet summary tests completed test failed failed tests transition mode transition outin async component resolve leave complete phantomjs linux expected webpack lt shift webpack lt coverage summary statements branches functions lines npm err code elifecycle npm err errno npm err vue test cover npm err exit status npm err npm err failed vue test cover script npm err probably problem npm likely additional logging output npm err complete log run found npm err npm err test failed see details doubt someone forgot fix code tools nt pick pr accepted probably got environment running ubuntu using fish shell might maybe considered test cases way done", "num": "7130", "d": "11/2017"}, {"title": "validation", "body": "problem feature solve hi many people asked validation vuejs directives invalid created small library valid dataattributes wanted give link previous discussion closed works vuejs replace tag names ans attributes sample maybe someone thoughts integrate vuejs level beforecreate hook proposed api look like new el directivesvalid new vue el directivesvalid", "num": "7129", "d": "11/2017"}, {"title": "validation", "body": "hi many people asked validation vuejs directives invalid created small library valid dataattributes wanted give link previous discussion closed works vuejs replace tag names ans attributes sample maybe someone thoughts integrate vuejs level beforecreate hook", "num": "7128", "d": "11/2017"}, {"title": "vuerouter transitiongroup crashes quick page changes", "body": "version steps reproduce proper containing properly keyed add transition effect change route quickly couple times expected router transitions properly actually happening vue crashes errors crash dump note changing fixes behaviour inspecting internal vue code seems tries process element present group router rendered fails empty comment element nt got required methods properties getboundingclientrect getattribute styledisplay getcomputedstyle etc enabled note nt able consistently reproduce outside current application bound legal contract share parts still think case description clear enough nt hesitate ask additional details needed though", "num": "7125", "d": "11/2017"}, {"title": "", "body": "", "num": "7124", "d": "11/2017"}, {"title": "\u5f53\u7ec4\u4ef6\u4f7f\u7528vif\u63a7\u5236\u663e\u793a\u5229\u7528bus\u8fdb\u884c\u8d4b\u503c\u5c06\u8d4b\u503c\u5931\u6548", "body": "version reproduction link steps reproduce expected \u80fd\u591f\u6b63\u5e38\u8d4b\u503c actually happening \u6ca1\u6709\u6b63\u5e38\u8d4b\u503c", "num": "7123", "d": "11/2017"}, {"title": "slotscope bind child bind back parrent object doesnt intance method", "body": "im haveing wrapper component bind list vuex getter gridreviewcomponent loop bind result slotscope binding works getlabel getvalue undefined instance methods class sure reason bind normaly paren child intance gives correct values way example err function missing", "num": "7122", "d": "11/2017"}, {"title": "updates slow", "body": "hello evan thanks creating vue let start explaining use case feemap attr data list objects contain data fee student pay balance payment mode etc computed property lets say updateoptions returns list objects id text suitable populate payment mode whenever user something updateoptions called user actions program choose selected option set feemap structure feemap hit function update optionselected seeing anything change watch triggered even change feemap see vue console lot struggle tried settimeout loop magically started working presume ms delay data sync afraid settimeout right way used nexttick didnt work please suggest better solution thanks", "num": "7120", "d": "11/2017"}, {"title": "vif amp amp \u4e0d\u80fd\u6b63\u5e38\u89e3\u6790", "body": "\u6211\u901a\u8fc7props\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u4e86statuspid\u548cstatusid \u8fd9\u4e24\u4e2a\u5b57\u6bb5\u7528\u6765\u5224\u65ad\u8868\u5355\u7684\u67d0\u4e2a\u8f93\u5165\u6846\u5728\u67d0\u79cd\u6761\u4ef6\u4e0b\u662f\u5426\u663e\u793a \u4f46\u662fvif\u4e2d\u4f7f\u7528 amp amp \u4f46\u662f\u6211\u5220\u9664 amp amp \u548c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6761\u4ef6\u90fd\u4f1a\u663e\u793a \u540c\u65f6\u6211\u5c06 amp amp \u6362\u6210\u5374\u4e5f\u80fd\u6b63\u5e38\u89e3\u6790 \u8fd9\u662f\u4e3a\u4ec0\u4e48 \u5b9e\u5728\u627e\u4e0d\u51fa\u89e3\u51b3\u529e\u6cd5 statuspid\u548cstatusid\u4e24\u4e2a\u5b57\u6bb5\u662f\u6211\u7684\u6811\u7ed3\u6784\u7684id\u548c\u7236id \u901a\u8fc7\u5355\u51fb\u6765\u4f20\u9012\u67d0\u4e2a\u8868\u5355\u8f93\u5165\u6846\u662f\u5426\u663e\u793a \u5e76\u4e14\u6211\u6ca1\u4f7f\u7528webpack", "num": "7119", "d": "11/2017"}, {"title": "vue\u524d\u7aef\u6027\u80fd\u95ee\u9898\u6392\u67e5", "body": "documentgetelementsbytagname length \u7528\u7684axios error timeout exceeded createerror xmlhttprequesthandletimeout", "num": "7118", "d": "11/2017"}, {"title": "\u7248\u672c\u66f4\u65b0\u4ee5\u540e\u8fd0\u884cnpm run dev\u540e\u5185\u7f51\u673a\u5668\u65e0\u6cd5\u8bbf\u95ee", "body": "version reproduction link steps reproduce \u65e7\u7248\u672c \u65f6\u5019\u7528webpack\u5efa\u7acb\u7684\u9879\u76ee\u8fd0\u884cnpm run dev \u5185\u7f51\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee \u4f46\u662f\u5347\u7ea7\u6700\u65b0\u7248\u4ee5\u540e\u7528webpack\u65b0\u521b\u5efa\u7684\u9879\u76ee\u90fd\u65e0\u6cd5\u7528\u5185\u7f51ip\u8bbf\u95ee expected \u65b0\u9879\u76ee\u80fd\u901a\u8fc7\u5185\u7f51\u673a\u5668\u8bbf\u95ee\u8c03\u8bd5 actually happening \u65e7\u9879\u76ee\u53ef\u4ee5\u6b63\u5e38\u5185\u7f51\u8c03\u8bd5 \u4f46\u662f\u65b0\u9879\u76ee\u65e0\u6cd5\u5185\u7f51\u8bbf\u95ee", "num": "7117", "d": "11/2017"}, {"title": "using native bind function prevents isolating component methods test", "body": "description start saying love vue great job running headache use custom bind function component methods wondering much performance impact actually makes function question understand performance gain custom function valuable testing utility prevents could possibly steer right direction reach original methods without moving vue component would prevent getting typescript type information proposal simply use native method allows overriding value useful mock component instance testing edit disregard native bind allows overriding explicit binding using operator another explicit binding falsely believed", "num": "7116", "d": "11/2017"}, {"title": "", "body": "problem feature solve proposed api look like \u5728router\u914d\u7f6e\u7684\u5730\u65b9 \u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5\u5224\u65ad\u662f\u5426\u9700\u8981\u5378\u8f7d", "num": "7114", "d": "11/2017"}, {"title": "resolve unknown custom element", "body": "version reproduction link steps reproduce see readme duplicate steps convenience browse click example tab top page observe lack second tabset page observe console error open appvue editor remove three lines marked comments save file refresh example page browser observe presence expected tabset page put three lines back appvue refresh browser observe disappearance tabset expected js console errors warnings components seem correctly defined imported named referenced rendering components ie missing actually happening js console error component children absent see repro steps readme clue workaround might something usage child component twice page via different parent components", "num": "7112", "d": "11/2017"}, {"title": "high memory consumption release", "body": "version reproduction link steps reproduce switch home foo routes open windows task manager see memory consumption crome tab increase without ever decreasing expected allocate data items memory leaving route release memory return use allocation ram memory actually happening memory consumption increases developing application using electron application variable items populated records every time opens route jsfiddle exemple moment increases memory imagine due vue bind leaving route memory released return route increases even memory please help ps set variable within data declare thisitem directly created occur however need variable reactive", "num": "7111", "d": "11/2017"}, {"title": "vue use messagechannel nexttick function lead audio play mobile browsers", "body": "version reproduction link steps reproduce click click button audio play expected play well modern browsers support audio actually happening pc browsers play well however mobile browsers ios wechat play vue function use like click callback audio play function play well browsers howerver vue used dom action click callback audio play function tick use fine actually firstly used priority lead audio play mobile browsers mentioned", "num": "7109", "d": "11/2017"}, {"title": "seo vue", "body": "build cms vue cli seo", "num": "7108", "d": "11/2017"}, {"title": "unpredictable async components behaviour", "body": "version reproduction link steps reproduce please run codepen provided check console output got resolved talker got notifed back resolution uses settimeout callback resolver uses bus callback resolver uses bus callback resolver wrapped promise case among listeners comment case among listeners comment expected case talker notified back resolution case talker notified back resolution independently asynchronously resolution actually happening case talker never notified back resolution case talker notified back resolution simultaneously synchronously resolution ie resolution delayed listener timed normal combinations resolves asynchronously resolves kinda surprising since alone never resolves see case", "num": "7107", "d": "11/2017"}, {"title": "regression html tag rendered certain circumstances", "body": "version reproduction link steps reproduce open link expected generated markup actually happening generated markup fails since works fine tried make minimal case without dependencies could nt get work maybe somehow helpful maybe original issue suspecting bug caused following commit component fails commenting following method fixes rendering", "num": "7106", "d": "11/2017"}, {"title": "keepalive include property resulting prop data pass component", "body": "version reproduction link steps reproduce click first second alernatively multi times change select japanese first second alernatively multi times change select english expected routerview render first second remains first second actually happening keepalive remain initail include binding data value want keepalive dynamic change include property binding prop data tranfer component properly", "num": "7105", "d": "11/2017"}, {"title": "create data dynamic", "body": "data function return products problem wan na create dynamic type variables pj set values please give advice", "num": "7102", "d": "11/2017"}, {"title": "memory leak changing routes", "body": "version reproduction link steps reproduce fighting memory leaks last week big project many pages complex nested navigation use vuex tons mixins fair say app complex started noticing performance would degrade usage made sure nt anything stupid like storing reference vuex store disposing listeners started long week hunting memory leak long process nt finding anything solid report found one specific plugin using causing leak plugin since nt able reproduce clean project stopped using unfortunately plugin accounted small percentage leaks hunt continued found modal top level app component would cause leak moved modal app component routes fine nt able reproduce clean project point tired removed modal called week fixed leaks everything fine new leak appeared fortunately able use git pinpoint commit caused leak leak happens use vdropdown bootstrapvue looked source code everything seems fine side decided open issue instead thankfully time able create minimalistic reproduction example use link go back forth two pages check memory usage instances vuecomponent never garbage collected using chrome dev tools see navigating new route vuecomponents created none removed navigate back first page compare snapshots see vuecomponents created none deleted finally clicking links lot see vuecomponents created none deleted also see memory usage creeping hope guys idea going tracking memory leaks time consuming expected vuecomponent instances previous page garbage collected actually happening unused vuecomponent instances kept memory", "num": "7101", "d": "11/2017"}, {"title": "feature request component transformed props", "body": "hello happens many times recompute component prop value order use would really useful future vue feature added html export default props n type string computed ncomputed return dosomethingfancy parseint thisn transformed props case component internally refers get computed n html export default props n type string transform v return dosomethingfancy parseint v", "num": "7100", "d": "11/2017"}, {"title": "backers page load properly", "body": "version reproduction link steps reproduce open page expected see backers images actually happening possible see images happening repository github", "num": "7099", "d": "11/2017"}, {"title": "object destructuring within vfor gives invalid vfor alias error", "body": "version reproduction link steps reproduce check console logs expected expect vue compile template without error actually happening get error", "num": "7096", "d": "11/2017"}, {"title": "optimize performance adding components using vfor", "body": "invalid please remove", "num": "7095", "d": "11/2017"}, {"title": "windowprint content changed", "body": "version reproduction link steps reproduce click print link expected want print print actually happening need click second time change content", "num": "7094", "d": "11/2017"}, {"title": "computed property array difficult trigger", "body": "version reproduction link steps reproduce difficulties app getting computed notice array altered deeply array modified via part gets noticed changes data push get detected get detected unless played around different ways tell vue look computed find condition solves scenario nt understand works b straight forward basically iterate array computed function touch every getter seems satisfy dep tracking logic notice however example array starts elements looping zero element array yet works remove line change detection longer works knows rest forloop maybe yanks runtime would like api add something computed dep tracker example add new element array could call something like javascript var track track igotevaluated calls vuecomponent comp computed igotevaluated function var lt thisarrlength thisarr val return track template computed igotevaluated data function return arr methods add function thisarrpush val edit new vue el app expected straight forward way determine change deep array trigger computed actually happening dealing deep array object clear change detection take place", "num": "7093", "d": "11/2017"}, {"title": "global component cover local components amp first successful local component", "body": "version reproduction link steps reproduce html global component local components javascript vuecomponent globalcom template global var app new vue el app components template template need run page expected global components backup local components covered refer definition global component actually happening work exchange definition global amp local order first local components effectively javascript vuejs function mergeoptions parent child vm line number key child suggestion var val parent key objtype val amp amp val instanceof object amp amp val instanceof function objtype var parentval val depthclone child key parentval continue", "num": "7092", "d": "11/2017"}, {"title": "dev see page", "body": "problem feature solve build see page want test page dev proposed api look like", "num": "7091", "d": "11/2017"}, {"title": "dev see page build see page", "body": "want test page dev", "num": "7090", "d": "11/2017"}, {"title": "allow root element template", "body": "problem feature solve right root element per template know design find wrapping everything around lot time big deal live problem either bootstrap requires specific hierarchy dealing tables also require specific hierarchy wrapping everything div option proposed api look like couple things figure mainly element properties provided custom element attached think two things done find first child stick everything provide custom attribute indicate element attached", "num": "7088", "d": "11/2017"}, {"title": "object properties undefined prototype vueset reactive", "body": "version reproduction link steps reproduce make instance object implicitely undefined property prototype const someobj function someobjprototypesomeprop undefined const myobj new someobj note someprop myobj true objecthasownproperty myobj someprop false use object instace dataprop value vue eg data function return value myobj try assign someprop value make reactive set thisvalue someprop somevalue result property value set myobjsomeprop somevalue reactive expected property expected become reactive actually happening property reactive check srccoreobserverindexjs function set looks like key target amp amp truthy properties declared undefined object prototype even set explicitely object therefore definereactive call never reached described object structure prototypeprop undefined arbitrary swaggerio js generator actually creates object models order represent missing possible properties use missing object properties data binding vue objects extended setting missing properties value explicitely e g undefined oder empty string etc", "num": "7087", "d": "11/2017"}, {"title": "calling destroy click binding events still exist", "body": "version reproduction link steps reproduce html result change destroy javascript var app new vue el app data message hello world result methods change function thisresult thismessage new date tolocalestring throw destroy function destroy click button destroy click button change expected hope calling destroy remove dom event object prevent invalid ajax requests thanks much actually happening console output information uncaught asynchronous validation event form", "num": "7086", "d": "11/2017"}, {"title": "checking vmodel vbind value used element conflicts customizing component vmodel", "body": "version reproduction link steps reproduce text install dependencies npm install serve hot reload npm run dev expected compiled successfully actually happening got error new improvements warn vmodel vbind value used element conflicts customizing component vmodel downgrade vue vuetemplatecompiler exactly reproduction compiled successfully btw production vuejs works fine codepen", "num": "7084", "d": "11/2017"}, {"title": "binding exist method error warn", "body": "version reproduction link steps reproduce element binding exist method expected show actually happening show warn means ignored actually break vue affect dom", "num": "7083", "d": "11/2017"}, {"title": "quadratic memory usage", "body": "version reproduction link steps reproduce open browser devtools launch reproduction different max variable note memory usage growth quadratically max variable number computed properties implied dependencies program proportional max variable expected expected linear ie proportional growth memory consumption growth max variable actually happening observables computed values subscribers total number subscriptions growth quadratically quite hard write code would really affect users bug anyway feels like flaw reactive system design", "num": "7081", "d": "11/2017"}, {"title": "current component use component css", "body": "version reproduction link steps reproduce declare css testvue use style appvue go index page page nt load testvue text color black red expected expected broswer load component css style tag actually happening sorry actually nt know problem admins go page contains component adminvue contain component uservue let adminvue get css uservue style tag recently update web app upgrading broswer always load css style tag components although component loaded current page sry clear problem vue may webpack normal action project created vuecli", "num": "7079", "d": "11/2017"}, {"title": "vue \u7ed3\u5408 bootstraptable \u4f7f\u7528\u4e86jquery \u4e0d\u80fd\u50cfangular\u90a3\u6837\u4f7f\u7528scopeapply \u544a\u77e5jquery dom\u53d1\u751f\u4e86\u53d8\u5316 \u4ece\u800c\u8bd5jquery\u53ef\u4ee5\u91cd\u65b0\u6e32\u67d3dom", "body": "problem feature solve \u89e3\u51b3\u4e86\u4f7f\u7528jquery\u65f6 \u4e0d\u80fd\u52a8\u6001\u7684\u66f4\u65b0dom\u7684\u95ee\u9898 \u4ee3\u7801 storestatesocketpricearray function val valforeach item index gt set thisdata index item table bootstraptable columns thiscolumns data thisdata proposed api look like \u671f\u671b\u80fd\u52a0\u4e00\u4e2a\u60f3angular\u90a3\u6837\u7684scopeapply", "num": "7077", "d": "11/2017"}, {"title": "property method statictrees defined instance referenced render", "body": "version reproduction link steps reproduce delete following code works fine problem expected report error actually happening report found", "num": "7075", "d": "11/2017"}, {"title": "vue", "body": "version reproduction link steps reproduce \u5728created\u56de\u8c03\u65b9\u6cd5\u91cc\u9762\u5199\u4e00\u4e2asettimeout new error \u5c31\u80fd\u6355\u83b7 expected actually happening \u4e0d\u80fd\u6355\u83b7error", "num": "7074", "d": "11/2017"}, {"title": "", "body": "problem feature solve proposed api look like vuedirective", "num": "7073", "d": "11/2017"}, {"title": "way evaluate expression", "body": "version reproduction link steps reproduce currently way execute expression usecase simple translation foobarhello would nice syntax tell interpolator evaluate like directives example ensure executed within bind function update however verbose needs single quotes within double quotes looks pretty messy templates solutions expected execute specialized interpolations actually happening execute every update", "num": "7072", "d": "11/2017"}, {"title": "show warning emitting event invalid name", "body": "problem feature solve recently tried namespace events poorly admittedly using dots emit events course event names invalid used event listeners since dots used indicate modifiers would nice method would print warning console using invalid event names proposed api look like api changes needed", "num": "7071", "d": "11/2017"}, {"title": "warn data property name starts", "body": "version reproduction link steps reproduce expected property name starts identifier valid invalid whether defined datacomputedmethods option think options behaviors consistent actually happening valid define xxx property computedmethods option fall define xxx data option", "num": "7070", "d": "11/2017"}, {"title": "", "body": "hello possible add dynamic variable style mean something like", "num": "7068", "d": "11/2017"}, {"title": "scoped attribute make modify css difficulty unreasonable", "body": "version reproduction link steps reproduce avue bvue set scoped arrtibute style tag import b want modify b style found work expected hope modify style b even b scoped attribute maybe adds attributeselector start every css selector sentence solve problem actually happening vue add attributeselector end every css selector sentence work", "num": "7067", "d": "11/2017"}, {"title": "vue component implement interface", "body": "version reproduction link steps reproduce multi components want implement interface previous version implement way import vue componentoptions vue interface test extends vue title string export default vueextend name data return title componentoptions export default vueextend name data return title componentoptions code throw exception expected error actually happening error occur", "num": "7066", "d": "11/2017"}, {"title": "ca nt use multiple mustaches different paragraphs template", "body": "version reproduction link steps reproduce run code short straightforward input required expected code every tag showed actually happening template nt work multiple tags", "num": "7065", "d": "11/2017"}, {"title": "clear slot content vue", "body": "version reproduction link steps reproduce create component slot pass slot template tag empty content expected empty template slot clear content component corresponding slot actually happening clear content however vue right thing", "num": "7064", "d": "11/2017"}, {"title": "ssr mismatched styles updated dom unless element ref", "body": "version reproduction link steps reproduce load codepen obviously actual ssr app emulating one thing happens actual ssr sets padding based window width expected inline style updated page hydrates see codepen actually happening style updates element see", "num": "7063", "d": "11/2017"}, {"title": "\u5173\u4e8e vif vshow \u7684\u4e0d\u8db3", "body": "problem feature solve \u5982\u679c\u7528 \u5982\u679c\u7528 proposed api look like \u5e0c\u671b\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u4f3c vshow \u6216 vif \u7684\u6307\u4ee4 \u5728\u6ca1\u6709 \u663e\u793a\u8fc7 \u65f6\u4e0d\u6e32\u67d3\u7ec4\u4ef6 \u5728 \u663e\u793a\u8fc7\u540e \u518d\u6b21\u5207\u6362 \u663e\u793a\u6216\u9690\u85cf \u4e0d\u91cd\u590d\u5b89\u88c5\u7ec4\u4ef6", "num": "7062", "d": "11/2017"}, {"title": "component patching svg elements ie updatecomponent triggered", "body": "version reproduction link steps reproduce open attached jsfiddle ie open developer tools start new profiling session hover text hover pointer times stop profiling session inspect results find overhead expected vuejs update class parent element operation svg elements inside component actually happening vuejs calling patchvnode every svg element inside component ie happening ie fairly noticeable important number svg element page", "num": "7061", "d": "11/2017"}, {"title": "allow support nonreactive instance variables vue dts", "body": "version reproduction link steps reproduce hover expected hover display property logit debugdebugger common understanding hover ts inference effect actually happening displays", "num": "7060", "d": "11/2017"}, {"title": "chrome autofill trigger change", "body": "version reproduction link steps reproduce open form textfield auto complete chrome auto fill check attached vmodel see nt update expected update vmodel ever chrome autofilled actually happening update happening happens chrome ios safari works fine also got reports issue chrome android nt confirm seems still issue saw github issues reported thing months ago closed", "num": "7058", "d": "11/2017"}, {"title": "watcher fires watched data changed", "body": "version reproduction link steps reproduce watcher watched data changed inside want get value another expected hoping watcher would fire another actually happening fire watcher kicks watcher run synchronously watcher fire", "num": "7057", "d": "11/2017"}, {"title": "dataon amp listeners functional components consistent", "body": "version reproduction link steps reproduce check codepen expected doc said object containing parentregistered event listeners alias accurately thing actually happening case", "num": "7055", "d": "11/2017"}, {"title": "vuetemplatecompiler \u652f\u6301 deindent \u5f00\u5173", "body": "problem feature solve proposed api look like vuetemplatecompilerparsecomponent vue deindent false", "num": "7054", "d": "11/2017"}, {"title": "using dynamic child components methods via ref", "body": "version reproduction link steps reproduce create dynamic components template add function dynamic child component example parent component use function via record iid refs hello idk displays array sometimes expected see console actually happening uncaught typeerror refs hello function tied usual components everything works fine thx attention", "num": "7052", "d": "11/2017"}, {"title": "parent von working nt child event triggered", "body": "version reproduction link steps reproduce please run codepen provided observe console output expected buzznoted invoked twice per run first von directive second manually installed listener actually happening buzznoted invoked per run von directive listener nt work", "num": "7051", "d": "11/2017"}, {"title": "svg element ca nt dynamic animate", "body": "version reproduction link steps reproduce enter page animate triggered click svg change value isopen switch two however nothing happend svg keeps state changed page entering expected svg transform data isopen change actually happening transform entering page got wrong way using difference use svg element", "num": "7050", "d": "11/2017"}, {"title": "vmodel \u80fd\u5426\u652f\u6301object \u4f20\u5165", "body": "problem feature solve vue vmodel best wishes proposed api look like \u65e0\u53d8\u5316", "num": "7049", "d": "11/2017"}, {"title": "templatecompiler using vbind value vmodel input generates code invalid ie", "body": "version reproduction link alternative reproduction jsfiddle steps reproduce paste following piece html textarea linked documentation chapter inspect code created render function especially options expected code run browsers throw error warning actually happening throws error duplicate properties allowed strict mode realize using vbind value vmodel input recommended even sensible nt throw error warning done modern browsers nt create problems expression easily overlooked added accidentally uglify also nt help nt remove first occurrence would otherwise overwritten second modern browsers would sensible solution sure could adjust codegen domprops check double occurence prop elements type input drop last occurrence possible problem performance could log warning console deal vueloader could throw error forcing user choose two breaking change could improve awareness adding warning docs rule eslintpluginvue", "num": "7048", "d": "11/2017"}, {"title": "document explain several parameters watch", "body": "problem feature solve watch document mention options deep immediate review source code four options deep user lazy sync proposed api look like document must talk", "num": "7047", "d": "11/2017"}, {"title": "html\u4e2d\u7ec4\u4ef6\u5355\u4fbf\u7b7e\u5199\u6cd5\u548c\u591a\u6807\u7b7e\u5199\u6cd5 \u9020\u6210\u7ec4\u4ef6\u4e0d\u6e32\u67d3", "body": "document vuecomponent headerbar data function return homehref logo title vue\u5b98\u7f51\u56fe\u6807 hottel \u5b9e\u4f8b template hottel vuecomponent navbar data function var n windownavactive n windownavactive return navlist href navactive n template mounted function anavmenu eq thisnavactive addclass active new vue el content headerbar\u5c31\u6ca1\u6709\u95ee\u9898\u662f\u4e0d\u652f\u6301\u7b2c\u4e00\u79cd\u5199\u6cd5\u5417", "num": "7045", "d": "11/2017"}, {"title": "importing module without build step", "body": "problem feature solve module support finally shipped chrome without flags many us may consider getting rid build step development stage vuejs almost shipped bundle among options unfortunately module nt work box try use avoiding webpack build step present try manually add something like top module seems like everything works expected proposed api look like setup relevant development maybe consider adding one bundle like", "num": "7044", "d": "11/2017"}, {"title": "mixin data merge problem", "body": "version reproduction link steps reproduce mixin data option mixin expected nothing wrong actually happening read property undefind guess happens mixin data option merging params mergedata function undefined throw error read property undefined", "num": "7043", "d": "11/2017"}, {"title": "vmodel combined von listeners", "body": "version reproduction link steps reproduce see minimal reproduction expected previous could used combination specific event handlers create components could transparently pass events element inside worked specific listeners eg called generic listeners actually happening higher priority listeners triggered first listener sets value set correct value incorrect value breaking breaking change made solve another issue probably ideal revert change actually even previous behavior slightly undesirable emitted event twice fix issues would actually expect specific event binding eg replace listener name object syntax specific listener would take responsibility emitting event correct time allows user full explicit control order local handlers handlers parent called sound others", "num": "7042", "d": "11/2017"}, {"title": "conflict component", "body": "version reproduction link steps reproduce look rendered square expected blue square actually happening red square remove wrapper change vue version bug remains problem disappears thanks", "num": "7041", "d": "11/2017"}, {"title": "method filtering array objects throws warning", "body": "version reproduction link steps reproduce see code example everything seems ok run exact code local machine get warning expected see function getclan returns single element gets rendered clan column table reaches end array vue returns warning actually happening filter function inside getclan seems try loop last element array get also tried view even know nt done view testing result works reaches las element array throws warning", "num": "7040", "d": "11/2017"}, {"title": "tom", "body": "", "num": "7039", "d": "11/2017"}, {"title": "would efficient use requestanimationframe first nexttick", "body": "problem feature solve could copy think vdom read artile recently relates ric amp raf amp vdom links let leave ric firstly think would great efficiency improvement comparing dom raf phase updating state phases proposed api look like want discuss issue", "num": "7038", "d": "11/2017"}, {"title": "get vue directives work inserted html code piece", "body": "problem feature solve vue file function described methods function called mounted function prepares html code inserts main template vue file problem vue directives components inserted piece code work look source code browser usual tags attributes html code vue compilation work", "num": "7037", "d": "11/2017"}, {"title": "vue dynamic component transition issue", "body": "version reproduction link steps reproduce click show modal button expected page loaded first time hit show modal button overlay component fade transition actually happening overlay component enters without transition hit hide modal show modal initial appearance transition works fine fixed changing modalvisible state prop inside settimeout obvious hack", "num": "7036", "d": "11/2017"}, {"title": "quick ask", "body": "sry gon na happen add global mixin data gt pagenumber", "num": "7035", "d": "11/2017"}, {"title": "vmodel computed", "body": "version reproduction link steps reproduce trying change input value prop data question using computed property vmodel input something wan na get something change event always get thing change computed property listening data nt use need set watch mounted make value update prop data good solution expected change give data input actually happening change always give default data", "num": "7034", "d": "11/2017"}, {"title": "add lifecycle hooks vshow change", "body": "problem feature solve easy way create callback condition changes component shownhidden using watchers sufficient single property cumbersome condition like propose add new pair lifecycle hooks events proposed api look like", "num": "7033", "d": "11/2017"}, {"title": "mixin methods called compontent ones", "body": "version reproduction link steps reproduce create mixin method named example create component method named example well created function call mixin method inside function include mixin component expected mixin method called component method actually happening component method called", "num": "7032", "d": "11/2017"}, {"title": "img src object object", "body": "import imgup commonsvgthumbupsvg import imgdown commonsvgthumbdownsvg data return imgup imgdown img src object object", "num": "7031", "d": "11/2017"}, {"title": "img src object object", "body": "import imgup commonsvgthumbupsvg import imgdown commonsvgthumbdownsvg data return imgup imgdown work", "num": "7030", "d": "11/2017"}, {"title": "keyupmetaenter work", "body": "version reproduction link steps reproduce \u7528 expected echo todo actually happening nothing happen", "num": "7029", "d": "11/2017"}, {"title": "javascript click operation input type file called component mounted work expected chrome", "body": "version reproduction link steps reproduce instructions provided readmemd linked github project project contains codebases demonstrating issue last one works use vuejs demonstrate expected behaviour vuejswebpack requires installation nodejs initialize project start local dev server access local server chrome browser click add file button vuejsnowebpack open indexhtml chrome browser click add file button expected new list element added displayed component file picker opens actually happening new list element added displayed component sign file picker interaction happened element hidden component observed browser behaviour looks call function component ignored following tests seems however call ignored issue complex stumbled upon issue first vuejs development used java portlet rolled production according user reported happened using firefox worked well chrome unable reproduce issue way described actually code work firefox versions chromechromium tested see readme linked github project list tested browsers spent last two days trying fix issue trying single actual root cause note frontend development expert maybe anomaly code nt noticed debugging chrome checked function defined called even managed see click event captured processed jquery present reproduction code provided use portal first suspected rather old jquery version vuejs working well together seem issue like call ignored browser point still usure whether actual bug vuejs fault lies chrome code", "num": "7028", "d": "11/2017"}, {"title": "eventtarget null chrome img", "body": "version reproduction link steps reproduce chrome sometimes safari open link jsbin click run js see console first prints reference null property expected firefox edge never actually happening event stored variable next tick sure bug vuejs chrome thought eyes matter help clarify first saw inside nuxtjs application easy reproduce vuejs guess either vue core chrome blinkwebkit done load handler never happen specific element size file load", "num": "7027", "d": "11/2017"}, {"title": "conditional class fails class name contain dashes", "body": "version reproduction link steps reproduce apply conditional class using class name contains dash case expected would expect normal behaviour rendering conditional class actually happening app broke following error message invalid expression unexpected token raw expression class navbarshrink scrolled changing class name everything works usual behaviour could issue using certain bootstrap bulma css classes nt complete control", "num": "7022", "d": "11/2017"}, {"title": "class methods lost object passed scoped slot", "body": "version reproduction link steps reproduce uncomment price vat expected second list also display price vat actually happening error console", "num": "7021", "d": "11/2017"}, {"title": "clickmiddleright working", "body": "version reproduction link steps reproduce click using middel button text fiddle clickmiddle expected call function used clickmiddle actually happening nothing according docs nt work", "num": "7020", "d": "11/2017"}, {"title": "svg children component template parsed correctly", "body": "version reproduction link steps reproduce create new component use element component expected svg rendered way rendered component actually happening svg rendered correctly example size circle seems disconnected viewbox svg element codepen also managed reproduce issue generating svg javascript assume issue vue templates likely parsed similar fashion", "num": "7019", "d": "11/2017"}, {"title": "mission type vueutil typescript", "body": "version reproduction link steps reproduce webpackdevserver using tsloader expected warnning actually happening util exists vue", "num": "7018", "d": "11/2017"}, {"title": "injectprovide reactive", "body": "version reproduction link steps reproduce parent component js provide let reactive child component expected challenge property change parent thischallenge changes proxy actually happening changing link provided example reimplement really code use ideas", "num": "7017", "d": "11/2017"}, {"title": "work", "body": "vue use keepalive vuex storestateincludecache components error nt know wrong thanks", "num": "7016", "d": "11/2017"}, {"title": "watch\u63d0\u4f9b\u66f4\u9ad8\u7ea7\u7684\u8bed\u6cd5\u7cd6", "body": "problem feature solve proposed api look like \u80fd\u4e0d\u80fd\u5199\u5230\u4e00\u8d77\u554a \u7528\u9017\u53f7\u5206\u5272\u6307\u5411\u540c\u4e00\u4e2a\u5904\u7406\u51fd\u6570 \u9017\u53f7\u5462\u4f5c\u4e3akey\u662f\u80af\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u7684 \u521a\u597d\u62ff\u6765\u4f5c\u4e3a\u5206\u9694\u7b26 b handler function", "num": "7014", "d": "11/2017"}, {"title": "vfor need empty tag group element something like ngcontainer angular", "body": "problem feature solve sometimes nt really want html element example angular loop like nt want additional tag ul li ngcotainer solved problem solution vue booktitle bookauthor bookprice proposed api look like like angular solution", "num": "7013", "d": "11/2017"}, {"title": "vue\u4f7f\u7528iframe\u5d4c\u5165\u53e6\u5916\u4e00\u4e2avue\u9875\u9762 \u4e0d\u52a0\u8f7dbody head", "body": "version reproduction link steps reproduce \u6216\u8005\u76f4\u63a5\u5728dom\u4e0a\u4fee\u6539 iframe\u5185\u5bb9\u7a7a\u767d\u4e0d\u52a0\u8f7d expected \u5404\u4e2a\u6d4f\u89c8\u5668\u90fd\u6b63\u5e38 actually happening \u9664ie\u6d4f\u89c8\u5668\u7a7a\u767d\u5916 \u5176\u4ed6\u6b63\u5e38", "num": "7012", "d": "11/2017"}, {"title": "data clean push", "body": "trying add selected files mount table save confirmation list saved save button clicked data cleaned added list using vuejs laravel", "num": "7011", "d": "11/2017"}, {"title": "vue\u4f7f\u7528iframe\u5d4c\u5165\u53e6\u5916\u4e00\u4e2avue\u9875\u9762 \u4e0d\u52a0\u8f7dbody head", "body": "version reproduction link steps reproduce \u6216\u8005\u76f4\u63a5\u5728dom\u4e0a\u4fee\u6539 iframe\u5185\u5bb9\u7a7a\u767d\u4e0d\u52a0\u8f7d expected ie\u6b63\u5e38\u663e\u793a actually happening ie\u5185\u5bb9\u7a7a\u767d", "num": "7010", "d": "11/2017"}, {"title": "errorcaptured working properly functional child components", "body": "version reproduction link steps reproduce please open look output window everything fine output three components shown poperly remove comment throw new error render function run look console captured error expected still everything fine remove comment functional true run check console error captured longer compared expected errors triggered child components captureable parent error boundaries independent whether child components funtional actually happening errors triggered functional components captured parent error boundaries", "num": "7009", "d": "11/2017"}, {"title": "errorcaptured working properly functional child components", "body": "problem tested vuejs chrome windows error thrown inside functional component render function error catchable error boundary parent components using method errorcaptured example please open look output window everything fine output three components shown poperly remove comment throw new error render function run look console captured error expected still everything fine remove comment functional true run check console error captured longer compared seems bug thanks lot", "num": "7008", "d": "11/2017"}, {"title": "image extension sensitive upper case", "body": "version reproduction link please see error shot steps reproduce follow step use vuecli create default project change logopng extension upper case also change code appvue got error bowser expected error actually happening go error", "num": "7007", "d": "11/2017"}, {"title": "image extension sensitive upper case", "body": "follow step use vuecli create default project change logopng extension upper case also change code appvue got error bowser", "num": "7006", "d": "11/2017"}, {"title": "create package building custom renderers", "body": "problem feature solve author nativescriptvue set similar build setup vue order able import certain parts vue directly nativescriptvue main source issues aliases used across vue repository make sense btw solve issue would love official package creating registering custom renderers vue would enclose vue specific logic patching hydrating etc good example mind would react package would love get work done work core team make sure best possible quality proposed api look like js custom renderer example nativescriptvuejs import vuerenderer vuerenderer class creating native views nativescript import viewutils viewutilsjs export default new vuerenderer node operations createelement tagname createelementns namespace tagname createtextnode text createcomment text insertbefore parentnode newnode referencenode removechild node child appendchild node child parentnode node nextsibling node tagname node settextcontent node text setattribute node attribute value additional methods need specified example createroot would get called create root element root vue instance js userland could import vue vue import nativescriptvue nativescriptvue vueuse nativescriptvue new vue render h gt h label text hello world", "num": "7005", "d": "11/2017"}, {"title": "update vuex store state component computed used state watch update", "body": "storejs import vue vue import vuex vuex import cookies jscookie vueuse vuex const store new vuexstore state menu name \u9996\u9875 icon home href name \u8001\u5e08\u7ba1\u7406 icon iospaper href teacher name \u5b66\u751f\u7ba1\u7406 icon iospeople href student name \u7edf\u8ba1\u5206\u6790 icon statsbars children name \u8d39\u7528\u7edf\u8ba1 icon href statisticsfee name \u8bbe\u7f6e icon geara href setting mutations changetags state path \u8bbe\u7f6e\u9009\u4e2d\u7684\u83dc\u5355\u9879 statemenuforeach gt mname pathname statemenuactivename mid todo set state return actions changetags context path contextcommit changetags path export default store mycomponentvue data return computed mapstate menuactivename watch menuactivename newval oldval todo watch listener consolelog newval newval thisactivename newval cookiesset activename newval newvaltostring indexof let openname parseint newvalsplit cookiesset menuopennames openname thisopennames openname nexttick gt refssidemenuupdateopened refssidemenuupdateactivename", "num": "7004", "d": "11/2017"}, {"title": "refs\u662f\u5426\u5e94\u8be5\u6539\u4e3a\u7edf\u4e00\u7684\u8fd4\u56de\u6570\u7ec4\u66f4\u4e3a\u5408\u9002", "body": "problem feature solve refs\u6709\u65f6\u5019\u8fd4\u56de\u5bf9\u8c61\u6709\u65f6\u5019\u8fd4\u56de\u6570\u7ec4 \u6211\u6d4b\u8bd5\u4e86\u4e00\u4e0b\u5e94\u8be5\u662fvfor\u4e2d\u7684\u5c31\u8fd4\u56de\u6570\u7ec4 \u5176\u4ed6\u7684\u8fd4\u56de\u5bf9\u8c61 \u662f\u5426\u5e94\u8be5\u7edf\u4e00\u6539\u4e3a\u8fd4\u56de\u6570\u7ec4\u66f4\u4e3a\u5408\u9002 proposed api look like", "num": "7003", "d": "11/2017"}, {"title": "able use different templates vue components", "body": "problem feature solve give us possibility load template depending anything proposed api look like something like", "num": "7001", "d": "11/2017"}, {"title": "better slot syntax vslot vfallback", "body": "problem feature solve want write component wraps nt wrap one piece html using another piece html depending condition supplied prop usage would look like would render either case true case false html content far know current syntax impossible children used fallback understand rationale correctly done consistent webcomponents slots unfortunately also inconsistent vue components whose children used content slots component source would look like proposed api look like proposed api current api two differences currently children used fallback component slots directive used similar provide fallback instead children component usage rendered html first begins second begins hello world second ends first ends example could also used situations element might fail way like", "num": "7000", "d": "11/2017"}, {"title": "typescript default export module using private name vueconstructor", "body": "version reproduction link steps reproduce export object contain types set expected able build without error able export pluginlibrary typescript declaration actually happening happened built developing vue component typescript also need typescript generate declaration typescript developer also javascript vetur face error thanks bbuchanan cause", "num": "6999", "d": "11/2017"}, {"title": "ssr showing warning unknown tag", "body": "version reproduction link steps reproduce run jsfiddle note warning message printed console run code ssr js const vue require vue const app new vue template const renderer require vueserverrenderer createrenderer rendererrendertostring app err html gt err throw err consolelog html like expected ssr rendering prints warning similar clientside rendering emits actually happening ssr simply renders invalid html html without warnings inconsistency makes hard refactor big nuxtjs apps missingunregistered components get silently ignored", "num": "6998", "d": "11/2017"}, {"title": "conditionally changing order slots works incorrectly envproduction mode vue", "body": "version reproduction link steps reproduce opening codepen please click toggle button expected slots show numbers inverse clicking toggle button order changed vif condition actually happening slots switch order first slot seems switch second slot seems stay place instead happens tried slots results unpredictable changing order slots features change location small big screens sometimes structure page changes much change order slots manage noticed bug set env production works fine development mode", "num": "6997", "d": "11/2017"}, {"title": "passing component grandchildren nested named slot resolve default slot", "body": "version reproduction link steps reproduce use case default layout toolbar main content wrapper pages needs nt layouts may different levels created component called base layouts use want able replace default toolbar needed put default toolbar fallback content code snippet make kind components want able replace default toolbar need using default toolbar pass things slot example layout components html default content layout see pass components grandchild slots used pattern reason components passed using pattern passed default slot one see examples reproduction expected expect nothing passed named slot fallback content rendered slots actually happening example replaced rendered default slot example passed rendered expected behavior way make kind reusable layouts default parts replaceable using default parts able pass components default parts slots", "num": "6996", "d": "11/2017"}, {"title": "\u4f7f\u7528this routerpush path \u8df3\u8f6c\u9875\u9762\u51fa\u73b0\u95ee\u9898", "body": "routerpush path", "num": "6994", "d": "11/2017"}, {"title": "practice together data beforecreate define property start", "body": "problem feature solve property start proxied vue instance way known properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty really need define property start register vm instance make also reactive like vuex vue encourage method correct whether always use way future proposed api look like pluginjs component vue mydata export default global js windowstorage test setinterval gt storagetest datenow", "num": "6993", "d": "11/2017"}, {"title": "failed mount component template render function defined circular references components", "body": "hi encountered issue circular references components tried way team offered docs parent component uses beforecreate lifecycle hook register child component still error could one offers help thank much", "num": "6991", "d": "11/2017"}, {"title": "electron problem main process variable vuejs watcher", "body": "version reproduction link steps reproduce link watch diff condition need object main process code indexjs indexhtml expected variable must refresh page actually happening variable refresh page think electron set already methods object vuejs overload modify electron update value main process render process", "num": "6990", "d": "11/2017"}, {"title": "execute list move transition leave transition hook callback called", "body": "problem feature solve moment possible execute list move transition vmove leaving transition css possible delay transition javascript hook vue watch callback proposed api look like solution could add parameter leave hook callback ask vue hide element play list move transition", "num": "6989", "d": "11/2017"}, {"title": "nested tag nt support vtext", "body": "version reproduction link steps reproduce create template certain condition directive must emit text therefore developer must use rather similar nested template tag work example vue message expected nested emit text variable actually happening nested emit anything interestingly actually works ssr immediately crashes clientside vue inits", "num": "6988", "d": "11/2017"}, {"title": "vmodel select text area issue vueserverrender", "body": "version reproduction link steps reproduce ssr select fields rendered selected attribute selected option appears selected page load happens textarea field first appears empty page loads shows content vmodel expected textarea select must render values ssr actually happening fields render values ssr check issue", "num": "6986", "d": "11/2017"}, {"title": "regression bug", "body": "version reproduction link working jsfiddle broken jsfiddle steps reproduce first jsfiddle check uncheck box without problem vue version second jsfiddle exactly one vue checkbox checked anymore expected checkable checkbox actually happening checkbox stays unchecked think bug linked syntax nt know investigate code may seem dirty using onchange attribute example small portion app bind checkbox value vue", "num": "6984", "d": "11/2017"}, {"title": "destroy hook called transition finishes", "body": "version reproduction link steps reproduce click toggle button notice destroyed hook transitioning component executed transition complete expected destroyed hook executed transition complete actually happening destroyed hook executed transition complete", "num": "6983", "d": "11/2017"}, {"title": "expose api adding custom modifier", "body": "problem feature solve would much helpful expose api adding custom modifiers eg actions must confirmed real work remove function removeitem showconfirmdialog realremoveitem accept function remove button elements track log rate would comfortable log js tweat tweat function tweat position const logs position logs dorealteataction tweat tweat global log function log modifer function log event const logs eventtargetelementdataset logs proposed api look like add chart remove vueconfigcustomemodiferlog function vueconfigcustomemodiferconfirm function", "num": "6982", "d": "11/2017"}, {"body": "currently vue support reactivity supported upcoming version targets modern browsers", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hey please stop spamming new issues nt help us everything explained", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "node npm \u90fd\u662f\u6700\u65b0\u7684", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "funny thing warning technically incorrect symbol primitive type allow symbols keys people would try use done inside computed property would change every time array changes symbol always returns new symbol think would worthy also add docs people correctly use symbols people still use plain string numbers id", "d": "11/2017"}, {"body": "use however considered private api use risk recommend using method purpose", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "razor syntax character meaning actually vue related bug guess may need use directly get option vue compiler configure character shortland uses", "d": "11/2017"}, {"body": "yes using von alternative hope plugin something supports vuejs razor page", "d": "11/2017"}, {"body": "razor cshtml files must escape another like plugin would done razor files get compiled long vue gets hold", "d": "11/2017"}, {"body": "closing nt solved vue side", "d": "11/2017"}, {"body": "sirlancelot thanks tip surely use alternative posva try drop feature enhancement aspnet core section", "d": "11/2017"}, {"body": "vueruntimejs", "d": "11/2017"}, {"body": "fnlctrl webpack vueloader \u4e0d\u5e26\u6a21\u677f\u7f16\u8bd1\u5668\u7684vue vueruntimejs \u9884\u7f16\u8bd1\u7684\u6a21\u677f", "d": "11/2017"}, {"body": "wed nov notifications githubcom wrote fnlctrl webpack vueloader \u4e0d\u5e26\u6a21\u677f\u7f16\u8bd1\u5668\u7684vue vueruntimejs \u9884\u7f16\u8bd1\u7684\u6a21\u677f import vue nodemodulesvuedistvueruntimejs receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "fnlctrl webpack vueloader \u5df2\u7ecf\u914d\u7f6e\u597d webpackconfigjs \u6709\u4e00\u4e2a\u5355\u72ec\u7684 componentvue \u6587\u4ef6 indexhtml \u91cc\u5f15\u5165\u7f16\u8bd1\u540e\u7684 appjs \u6587\u4ef6 html appjs \u7f16\u8bd1\u524d\u7684 js", "d": "11/2017"}, {"body": "fnlctrl appjs", "d": "11/2017"}, {"body": "wed nov notifications githubcom wrote fnlctrl appjs new vue el mainwrapper compolents comp receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "fnlctrl work", "d": "11/2017"}, {"body": "handler simply registered native dom event listener element create dispatch dom event using native apis", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "reproduction", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "question need specific make qualify feature request also belongs vuex repo core", "d": "11/2017"}, {"body": "pass error done callback completely unrelated vue edit bad sorry tried run repro missing dependencies could nt actually see nt working", "d": "11/2017"}, {"body": "posva somewhat related deserves explanation returns promise callback passed promise comes scheduler queueing possible instead error captured vue sent set simply rethrows error correct way deal", "d": "11/2017"}, {"body": "sweet idea idea returns promise arguments tried argument gone end perhaps could use documentation maybe happy send pr edit clarify stuff said message documented api docs nt need improving nt know context testing feel could use improvement", "d": "11/2017"}, {"body": "yes please something states order return promise call without arguments could nice imo", "d": "11/2017"}, {"body": "actually already vue api docs feel could use improvement pretty easy miss get promise nt provide arguments unless looking send prs projects soonish", "d": "11/2017"}, {"body": "pr vuejsorg pr vuetestutils", "d": "11/2017"}, {"body": "fyi parameters", "d": "11/2017"}, {"body": "also need prefetch files related current user langage user langage stored serverside application also expose application currently serverside rendering least context", "d": "11/2017"}, {"body": "unfortunately ie bug ie nt fire input event thought already closed issue could nt find must imagination", "d": "11/2017"}, {"body": "found old bug tracker last comment ms fix", "d": "11/2017"}, {"body": "note assume want preserve state determine whether input field dirty patch fixes initial rendering subsequent change dynamic binding used still trigger events ie happens tags well consider wontfix involves significantly complex workarounds marginal benefits", "d": "11/2017"}, {"body": "thanks", "d": "11/2017"}, {"body": "happens vue reuses element optimize rendering control behaviour keys docs demo", "d": "11/2017"}, {"body": "number becoming expected happens js numbers need zeros want string number happens user changes focus imo ux want localization handled browser vue scope browser makes syntaxes work differently different computers custom component behaves told behave modifies value adapt either number part may confusing change null valid backspace changes back valid number triggers render changes input well cc linusborg part thought might improve", "d": "11/2017"}, {"body": "thanks feedback included plain fiddle check behaviour cases see clear trailing zeroes actually also nt see problem stripping trailing zeroes blur think clear changing cases fiddle original post make cast values numbernull numberstring made proposal clear implement understood linus said may good vue provide feature please check original post hi found first comment info", "d": "11/2017"}, {"body": "nt see done without separate fields string keep fine numeric app possible somehow prevent rerender input event think could solve issues", "d": "11/2017"}, {"body": "think clear changing happens custom input explanation part may confusing change null valid backspace changes back valid number triggers render changes input well vmodelnumber cast values number empty string course free create custom component handles things differently using modifier", "d": "11/2017"}, {"body": "happens custom input see case fiddle fill input though malformed value course free create interesting vue team provide typestrict interface error prone errors easy leave exceptions misuse also check input empty enough also requires every place used", "d": "11/2017"}, {"body": "happen getting instructions typing backspace also requires val null amp amp val every place used either number null example null initial value giving vue job link value input state make number whenever possible modifier empty string actually useful allows know input contains valid number makes flexible use different scenarios", "d": "11/2017"}, {"body": "example checks repeated times empty string actually useful sure useful value empty string invalid value locales delimiter invalid returns valid returns empty string ambiguous different meanings", "d": "11/2017"}, {"body": "example completely different value initialized explicitly set undefined checking input dirty yet another different thing unrelated numbers sure useful value empty string invalid value locales delimiter invalid returns valid returns empty string ambiguous different meanings browser setting empty string number validation vue scope anyway waiting linusborg input could improved", "d": "11/2017"}, {"body": "checking input dirty providing solid typestrict interface returns numbers return empty string string returning empty string workaround think fixed please treat feature request ask maintainers look also wonder implement userspace took code internals still allow input input missing something upd checking chrome safari allows input clears trailing zeroes removing last digit ff respect os locale settings ignores formatted numbers still issue removing last digit", "d": "11/2017"}, {"body": "hi works perfectly fine need details like web browser", "d": "11/2017"}, {"body": "hi thanks reply however investigation company problem seemed related issue machine cpu apologies closing issue", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "one might also ask vue insists using kind obsolete tool phantomjs ca nt really keep webstandards chrome headless hand date much faster phantomjs even though filesize bigger mac linux win chrome mb phantomjs", "d": "11/2017"}, {"body": "madskonradsen nt think vue insists using nobody gotten around adding pr switches chrome headless willing make pr sure accept", "d": "11/2017"}, {"body": "eddyerburgh tried recently unrelated pr transitions tests must adapted nt work chrome headless", "d": "11/2017"}, {"body": "wanted submit pr ignore test failing", "d": "11/2017"}, {"body": "yes probably pass ci", "d": "11/2017"}, {"body": "transition test cases involves css transitions timeouts somewhat flaky depending machine run failing case fails passes time seen ci made stable increasing transition durations tests would make tests run slower kind tradeoff another option completely refactor way test transitions get rid flakiness backlog moment phantom usage intentionally staying phantom refactor transition tests work properly chrome headless", "d": "11/2017"}, {"body": "think would good idea make temporary note githubcontributingmd make less confusing", "d": "11/2017"}, {"body": "eventual markup compliant keep mind spa applications html template production pass validator test see info closing question", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "missing reproduction", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "executed event emitted listening use preserve component use emit event please consider using forum vueland stackoverflow questions", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "try", "d": "11/2017"}, {"body": "thanks reply tried ot didnt work found reason thow binding slot component result gets copied", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "please create computed prop use vue issue web severs logic", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "circular import cycle try remove cycle use instead importing router instance", "d": "11/2017"}, {"body": "yes exactly problem thank", "d": "11/2017"}, {"body": "ca nt reproduce memory consumption fiddle tab constant around looking memory allocation chrome devtools time nt show anything significant either memory consumption windows task manager ican far many influencing factors reliable measurement memory leak anyway noticable devtools least share details", "d": "11/2017"}, {"body": "possible using instance data certain way eg sending electron main process makes unable garbage collected also make sure using devtools believe electron memory snapshots instead window manager", "d": "11/2017"}, {"body": "hi thanks quicky reply usually use devtools mentioned tasks manager faster possible see consumption real time know possible devtools without press collect whats happing switch routes project vuecomponent increase sorry cant share project cause private github file sorry size big project route component comment line line thatset line variable memory increase much catalogorderpagezip im sure im sendind variable main process", "d": "11/2017"}, {"body": "well using webworker eacht time send receive data gets copied essentially depending worker set might release memory previous copies data passed referenced somewhere else hundreds line code ca nt debug like way complicated setup reproduction sorry personal sidenote big project true keep logic one component file nt nightmare navigate", "d": "11/2017"}, {"body": "yes like said set variable problem occur think problem webworker logic one component thats file project distribute much could file controls shopping cart lot intelligence complications ok thanks trying see example declare data try update manually computed params way memory increase thats point think problem vue reactive data", "d": "11/2017"}, {"body": "big memory leak simply making data reactive would know already like basic functionality vue everyone uses would couple dozen issues simpler scenarios ca nt must least combination thing setup", "d": "11/2017"}, {"body": "yes mean problem vue surely something wrong wanted way find", "d": "11/2017"}, {"body": "hope find wo nt able help unless slim drastically sorry close issue good luck", "d": "11/2017"}, {"body": "thanks guys got resolved really webworker made compact page elements tested see memory trapped thank excellent work", "d": "11/2017"}, {"body": "mobile browsers allow programmatic audio play task tick user interaction change indeed causes behavior imo somewhat expected watchers asynchronous design instead using watcher react url changes call method sets url start playing function nt really see point using watcher especially need executed event handler tick", "d": "11/2017"}, {"body": "thanks response simple demo show reason play mobile browsers music app design using vuex set vuex getter calculate like component may play song clicking button outside component like component commit mutation set watch component call audio play changes may say use sync watcher tried cause another problem feature set loop mode changes sync random must change committing mutations use sync watcher handler called twice expected use async watcher default handler called next tick currently fixed problem setting global function function vuejs init macrotask use works hack way wish vuejs core may consider kind situation", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "typo wathcer watcher thank fix", "d": "11/2017"}, {"body": "hi thanks lot taking time dive look understand came however would appreciate boiled repro without thirdparty libraries also make sure use last version vue repro reloads forever", "d": "11/2017"}, {"body": "problem sure exactly happening nt able create working mean failing minimal repro try though repro reloading forever codepen issue guess", "d": "11/2017"}, {"body": "please open issue vuetify repo first track bugs known caused vue core", "d": "11/2017"}, {"body": "took create repro without external libs expected visible text visible actually happening visible rendered info text visible returns iscontentactive true lines commented component functional vue used", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "please remove third library showcase leak bootstrap babel", "d": "11/2017"}, {"body": "opened issue bootstrapvue first seems like better place start investigation core team unlikely familiar component better chance coming isolated repro", "d": "11/2017"}, {"body": "sure thing open one side reference one", "d": "11/2017"}, {"body": "issue fixed bootstrapvue side thank guys", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "works op nov om heeft kelvin ferreira notifications githubcom het volgende geschreven version reproduction link steps reproduce open page expected see backers images actually happening possible see images happening repository github receiving subscribed thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "showing way images loading opened chrome image dont show well dont crash prints taken firefox", "d": "11/2017"}, {"body": "think nt logo look would nice displayed default icon something fix end", "d": "11/2017"}, {"body": "oh get thanks taking time investigate", "d": "11/2017"}, {"body": "still get error", "d": "11/2017"}, {"body": "correct throws error works index parameter", "d": "11/2017"}, {"body": "sqal sometimes want add remove easily works fine", "d": "11/2017"}, {"body": "mirari fixed", "d": "11/2017"}, {"body": "still one case still work correctly array destructuring example using latest vue actually found reading first two examples works fine third one index argument gives error", "d": "11/2017"}, {"body": "change data nt update dom immediately need execute like javascript printnow value thisprint value nexttick gt windowprint", "d": "11/2017"}, {"body": "anhulife said", "d": "11/2017"}, {"body": "want computed recomputed variableproperty referencing must changed empty loop like touch change changing value objects watched deeply property recomputed every modification object computed depend directly certain property use method", "d": "11/2017"}, {"body": "pretty much dodas said use watch computed properties meant side effects meant return new values get recomputed dependencies change therefore need inside computed property vue nt recompute property", "d": "11/2017"}, {"body": "computed watcher option regarding question care whether computed gets evaluated unless performance reasons point computed property returns value gets recomputed value depends reactive state changed long returned value uptodate evaluate little possible wanting force recompute computed property sign using incorrectly", "d": "11/2017"}, {"body": "ended using deep watch started computed actual component logic jsfiddle supposed emit vmodel indicate component passes business validation yes implementable watchonly approach oh brilliant work framework btw", "d": "11/2017"}, {"body": "already case local components take precedence global ones please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "11/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "build specific scenario need template multiple root nodes using bootstrap tables vue since beginning never needed multiple root nodes", "d": "11/2017"}, {"body": "provide custom attribute indicate element attached fyi use easily pass things element want multiple root elements functional components personally actually like fact one root clears questions listed one possible answer", "d": "11/2017"}, {"body": "specific table use case component would like contain two root elements first show category information second list category items details main category body control visibility second one want look something like categoryvue know could move two separate components communicate really belong together computed properties methods share yes move mixin makes everything bit complex regarding bootstrap recently stumbled using needed something like html vifvelsevshow necessary course found way work around nt clean simpler approach wanted achieve frameworks truly love vue really neat picking would nice option nice thing feature nt want nt use even think keep wrapping everything div", "d": "11/2017"}, {"body": "fyi use listeners props easily pass things element want wondering remember reading long time ago could nt find thanks tip", "d": "11/2017"}, {"body": "new react version fragment using syntax vue", "d": "11/2017"}, {"body": "honest question even need wrap everything single root element technical limitation arbitrary decision", "d": "11/2017"}, {"body": "technical due diff algorithm written obviously possible update takes significant changes current algorithm react complete rewrite", "d": "11/2017"}, {"body": "got thank details", "d": "11/2017"}, {"body": "even though generated swagger declared instance properties really want use constructor otherwise vue wo nt pick still nt look right pick investigate bit side note criticising swaggerio practice declaring instance properties prototype super weird usually put data want share across instances like functions soon change value local instance becomes new property instance", "d": "11/2017"}, {"body": "fyi fix could check make work perf comparison obviously slower extra check support consistency think much", "d": "11/2017"}, {"body": "agree mis using prototype rather weird main reason redeclare props first place getting potentially incomplete even empty instance prop immediately expanding missing properties via set delete proto set restore proto hm combo would actually work unless something happens async another model instance gets initialized proto temporarily incomplete otherwise could live low perf also hasownproperty mind though definitely considering rare constellation seems", "d": "11/2017"}, {"body": "intended behavior order make another use case possible classbased model objects gettersetters defined prototype note explicitly recommend using classprototype based objects data general rule thumb vue reactivity system leaves everything prototype chain alone assume user wants original behavior prototype chain suggestion instead trying expand missing properties postobserve inside watcher preobserve feed object vue instances ie setting properties onto object properties letting vue making reactive", "d": "11/2017"}, {"body": "thanks explanation makes sense preobserve would perfect reactivity work fine properties set e g default prop constructor instance init seems different set aspect bad suitable location prop expansion chain models nested property model instance another model therefore ideal solution would pass modelbased property appropriate subcomponent would autoexpand corresponding model would allow transparent hierarchical binding via vmodel contrary evaluatingexpanding child model parent would completely defeat purpose splitting models separate components anyway implementing codegen would provide readytouse instances weird prototyping likely cause problems future", "d": "11/2017"}, {"body": "provided editable repro moment get rids event listeners setup component looks like still references events element removed event listeners freed agree event listeners native elements removed instance destroyed", "d": "11/2017"}, {"body": "intended behavior vm destroyed associated piece dom considered discarded managed vue dom detached garbage collected modern browsers correctly discards event listeners process well usually recommended call imperatively call dom left behind reused calling removes dom time", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "error version", "d": "11/2017"}, {"body": "alexmalyita note warning appear use element fix removed warning custom components", "d": "11/2017"}, {"body": "error following snippet create group radio boxes", "d": "11/2017"}, {"body": "chagamkamalakar make sure update latest version", "d": "11/2017"}, {"body": "error still current version vue", "d": "11/2017"}, {"body": "chagamkamalakar please open separate issue proper reproduction", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "error coming new setup coming existing project please help", "d": "11/2017"}, {"body": "error gone deleted nodemoduels folder run npm install gone", "d": "11/2017"}, {"body": "could see one problem custom components watcher value props getting called initially gets called emitted custom component", "d": "11/2017"}, {"body": "warnings ignored every warning fixed", "d": "11/2017"}, {"body": "rely cross component styles unless know going rendered together", "d": "11/2017"}, {"body": "problem solved bootstringtable still wants provide jquery refreshing dom", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "requirement problem vue nt way refresh dom jquery posva", "d": "11/2017"}, {"body": "problem related directly vue rather integrate third party libraries vue lot resources integrate jquery vue case usage question please use proper channels forum chat", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "11/2017"}, {"body": "ok prepare one provide later", "d": "11/2017"}, {"body": "js", "d": "11/2017"}, {"body": "vue vue \u4ec5\u7528\u4e8e\u5bf9\u5355\u4e2a\u5143\u7d20\u7684\u76f4\u63a5 dom", "d": "11/2017"}, {"body": "also memoize calls check nt know memoize values people seem enjoy using", "d": "11/2017"}, {"body": "good idea posva thank code suffers thing could use approach cons executed everytime rerender occures translation costs", "d": "11/2017"}, {"body": "keep mind example simple need invalidate cache somehow load new translations probably handle edge cases", "d": "11/2017"}, {"body": "technically invalid though listen javascript suppose add note docs", "d": "11/2017"}, {"body": "case information stated open prs warnings similar commit implemented warning conflicting methods started related", "d": "11/2017"}, {"body": "posva new title correct want warn computed properties would thought warning would data computed methods data happy help need sure needs", "d": "11/2017"}, {"body": "second thought sure introduce warning would show warnings many plugins devusers purposely use mark internals like vuelidate could however something similar commit referenced computed properties chrisvfritz already proposed add warning functionality another config flag flood existing plugins using maybe could go way around adding error conflicting data properties proxying well", "d": "11/2017"}, {"body": "think main issue example data property begins warning says data property defined could confusing data property begins console warning shown along lines docs say properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "11/2017"}, {"body": "rpemberton perfectly fine breaking anything feel free pr thank", "d": "11/2017"}, {"body": "posva little bit confused private property names rule vue style guide prefixed property data makes sense rework rule provide better way define private properties", "d": "11/2017"}, {"body": "reading issue order understand could help nobody working already seems invalided feature implemented without breaking things right guys update issue remove contribution tag", "d": "11/2017"}, {"body": "let close moment thanks reminder", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "designed scoped css means css scoped current component parent children", "d": "11/2017"}, {"body": "current declaration designed scenario still need use class component want restrict implementation interface", "d": "11/2017"}, {"body": "assume wontfix", "d": "11/2017"}, {"body": "far aware vue allows element essentially wrapper within template error bug works", "d": "11/2017"}, {"body": "could find feature documentation thanks feedback greetings italy fabio receiving authored threadreply email directly view github mute thread", "d": "11/2017"}, {"body": "open console warning telling problem make sure check warnings opening issues", "d": "11/2017"}, {"body": "imo behaving incorrectly fixes behavior design fallback content appears slot receives nothing whitespace clearing slot fallback content empty slot sounds like hack however still want use zerowidth space slot content", "d": "11/2017"}, {"body": "using zerowidth space express clearing fallback content slot sounds like hack either better way us solve explicit semantics", "d": "11/2017"}, {"body": "always add prop usedefaultslot defaults true use like default content thu nov gu yiling notifications githubcom wrote using zerowidth space express clearing fallback content slot sounds like hack either better way us solve explicit semantics receiving subscribed thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "fnlctrl consider complex component multiple slots would nt want expose kind prop using slots means prefer declarative way define content otherwise ignore slot syntax pass render functions", "d": "11/2017"}, {"body": "fnlctrl maybe add attribute provide global config indicate default override behavior", "d": "11/2017"}, {"body": "justineo complex component multiple slots even provided official api suppress default content users would still declare slots suppressed eg nt think better declaring props userland best way think simply use empty whatever tag like simple declarative", "d": "11/2017"}, {"body": "actually seeing behavior back undesired declaring users already explicitly overriding fallback content otherwise would nt declare want conditionally override fallback content apply like nt think better declaring props userland overriding slot fallback content common scenario builtin syntax definitely help users build apps lower overhead designing kind api helps vue users understand underlying logic template across different vue projects", "d": "11/2017"}, {"body": "think fallback content different default content defined fallback content behavior make content empty considered hack first point agree hack zerowidth space good define conditional fallback content fnlctrl provided set content empty never define fallback content default content thanks", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "upon investigation actually nothing vue called every svg node cases even browsers virtual dom patch cheap fast look profile closely see expensive calls actually called patching toggled class root cause seems simply extremely inefficient toggle class element contains large amount svg elements performance issue reproduced without vue involved", "d": "11/2017"}, {"body": "bug sure even possible within typescript close wontfix cc ktsn herringtondarkholme feel free provide info", "d": "11/2017"}, {"body": "typescript compiler infer assignment statement impossible thought supporting use case manually providing nonreactive properties type type parameter current ts compiler allow providing part type parameters infer remaining type parameters arguments", "d": "11/2017"}, {"body": "thanks ktsn clarification let first explain technically js side coding merely using vscodetsforjs languageovervue service look back marvelous word plugged together chain technologies certain flux point view open end user read open means certain feedback lacking read loggingtraceabledocumented without experience reading github issues keep reasoning certain things softwareland might happened hard vscode ts config ts language service ts version code using instance variables vue created method bugorfeature please say prominently nowissue part issue would appreciate hearhave kind feedback points additionally certain best practiceworkflow learningdebugging testing kind issue preferred way reaching kind issue triage upon multiple productprojects involved bugorfeature plan give consideration jsfirsttstypings usageexperiencedocumentation based understanding typings js necessary point help learning microcoding usagescompletions meant done prevent certain bugs upfront ide red squiggle lines really get alerted even bugged falsepositives related op question open using packaged much possible nt get wrong jsfirstts seems promising may eventually result fun confidence js coding subpoint browsers nowadays get compatible natively happy throw away babel workflow somewhat reluctant work annotations ts language anything involves additional layer future magic failure last least current pain points related around op question created vue mixin separate js file tsjsdoctyped per herringtondarkholme suggestion typing certainly got squiggle lines away using vue component side mixin side get tstyping love learn include ts magic workaround changed mixin code begin vueextend get coding completionfeedback eventually argumented sign codesmell neither documented per valid option valid option per vue dts error squiggle lines understand ramifications may seems work hmm situation end using vue component side mixin give tstyping love either mixin neither data methods anything included mixin please document bugorfeature lacking something elsewhere mixin side computed prop ts type interference certainly breaks see issued triage ps ever reach line personally thank taking time star", "d": "11/2017"}, {"body": "currently workaround", "d": "11/2017"}, {"body": "works fine android test ios known issue ios safari emitting events autocompleting unfortunately sure something vinceg must event listen instead checking value every maybe listening event work", "d": "11/2017"}, {"body": "nt think something fix framework level buggy behavior one specific browser firing events autocomplete userland workaround seems way suggest adding know specific browser alternatively perform manual sync submitting", "d": "11/2017"}, {"body": "expected behavior pushes callback deferred queue callbacks pushed event loop fired tick triggering another watcher queue already flushing pushes callback end current queue instead firing immediately", "d": "11/2017"}, {"body": "get expected results", "d": "11/2017"}, {"body": "hi thanks filling issue difference empty object undefined reason added practice could often making verbose access eg use shorthand simplify", "d": "11/2017"}, {"body": "interesting use word alias means exactly said pointed doc people use found supported going make compatible get confuse errors doc yes", "d": "11/2017"}, {"body": "explicitly stated issue requirements please provide runnable repro", "d": "11/2017"}, {"body": "appear issue example working expected", "d": "11/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2017"}, {"body": "listeners attached via added child instance parent propagation event emitted child captured child child instead parent child parent communicate purely javascript need explicit event bus imported", "d": "11/2017"}, {"body": "thanks explanation however statement listeners attached via von added child instance parent clearly missing piece statement documentation addition parent component listen events emitted child component using von directly template child component used see warning note explaining fact ca nt used think documentation improved listeners added child propagation self explaining parent listen child nt exclude propagation ca nt used", "d": "11/2017"}, {"body": "feel free propose pr docs repo", "d": "11/2017"}, {"body": "crap think would better trying use css transforms want dynamic animations", "d": "11/2017"}, {"body": "nt think repro clearly demonstrates problem related vue involves potential problems way use svg please provide repro intended animation working plain svg know actually vue issue cc sdras", "d": "11/2017"}, {"body": "hey welcome problem nt vue svg rather logic asking fire condition isopen returns true initial page visit sorry say side note nt suggest continue using smil chrome pausing deprecation moment chopping block microsoft says never ever support ieedge browsers better support highly recommend using greensock tweenmax eventually run cross browser inconsistencies transform origins otherwise check demo fork example threw together pretty quickly probably need tweaks let know questions", "d": "11/2017"}, {"body": "thanks explanation sarah", "d": "11/2017"}, {"body": "\u7236\u5b50 \u7ec4\u4ef6\u4f20\u9012\u6570\u636e \u6587\u6863\u91cc\u4e0d\u662f\u5f88\u8be6\u7ec6\u5417", "d": "11/2017"}, {"body": "\u4f60\u9700\u8981\u7684\u5e94\u8be5\u662f props \u8fd8\u6709\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684 \u662f\u652f\u6301 object", "d": "11/2017"}, {"body": "\u6211\u4ee3\u7801\u4e2d\u628a value\u5bf9\u8c61\u5b9a\u4e49\u5230\u4e86 export default \u7684 data \u5c06value \u5bf9\u8c61\u653e\u5230 export default \u7684 props \u7236\u5bf9\u8c61\u901a\u8fc7 vmodel \u5982\u679c\u5b50\u5bf9\u8c61\u6ca1\u6709\u5b9a\u4e49 props value \u4f46\u662f\u5982\u679c\u5b50\u7ec4\u4ef6\u7684value\u5bf9\u8c61\u5b9a\u4e49\u5230\u4e86 data", "d": "11/2017"}, {"body": "think dealt compiletime warning parsing phase detected element", "d": "11/2017"}, {"body": "getting compiling errors warnings npm run dev code base rpemberton linusborg update running vue vuetemplatecompiler", "d": "11/2017"}, {"body": "fix supposed work first place", "d": "11/2017"}, {"body": "thanks reply removed value thanks", "d": "11/2017"}, {"body": "options intentionally omitted part public api", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "got request short answer shipping pure esm directly production still nogo foreseeable future also lack support recommended toolchains eg singlefile components hotreload preprocessors etc means build would useful prototyping however prototyping include vue via nt make much difference worth complexity adding yet another dist format", "d": "11/2017"}, {"body": "dunno know necessary check params defined", "d": "11/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "11/2017"}, {"body": "sorry link source code valid repro", "d": "11/2017"}, {"body": "replacing behavior would also breaking change though think preserving semantically correct among two current behavior reasonable disregarding combined usage think goal really make work together retaining semantically correct behavior currently workaround mentioned although straightforward requires understanding internals", "d": "11/2017"}, {"body": "yeah fan workaround feels bit hacky would think suggesting following pattern instead", "d": "11/2017"}, {"body": "chrisvfritz actually reasonable explicitly overwriting parent input listener", "d": "11/2017"}, {"body": "excellent updated docs issue probably closed agree longterm really would nice listeners automatically work ideally listeners components could check emitted payload yes check choose appropriate element listener use normal behavior components payload assumed new value", "d": "11/2017"}, {"body": "sorry ca nt help error happens machine please try provide production actually look", "d": "11/2017"}, {"body": "hi evan thank quick answer try another service nt encapsulate console output codepen seems copy paste code run locally stills happens", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "please use forum open ended discussions short answer investigated ric raf want nexttick exists primarily scheduling rather deferring work want microtasks much possible", "d": "11/2017"}, {"body": "thanks answer", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow inside directive function get access element first argument", "d": "11/2017"}, {"body": "please use forums chat ask questions usage open issues sure found bug", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow using computed setter allows emit event anything want", "d": "11/2017"}, {"body": "vshow current implementation simply need toggle style property single element making recursively invoke hooks components contained inside element makes exponentially complex marginal benefits use computed property vshow condition instead", "d": "11/2017"}, {"body": "unlike hooks methods merged return values", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "\u5bf9\u4e8e", "d": "11/2017"}, {"body": "hi klehelley thanks detailed reproduction going chrome opens file picker event programmatic invocation happened userinteraction ie user clicking button surface happens right user clicks add file file input added clicked programmatically issue vue update mechanism data changes runs asynchronously call stack original add file click event already finished new component created therefore call new component hook triggered userevent chrome perspective consequently ignored see chrome behaviour without vue simplified solve suggestion would change component would add hidden file input component use every new file file selected read input add file list reset file input way component would never contain actual file input nt work actually need input per file ca nt think reason might well one come another way input already dom button clicked maybe always new file list hide last entry user selected something whatever closure amp support think something solve vue internals asynchronous update queue stay rather find ways work around described need help please join us forumvuejsorg chatvuejsorg work", "d": "11/2017"}, {"body": "thanks detailed answer nt aware mechanism chrome makes sense working changing internals component single element", "d": "11/2017"}, {"body": "bug guarantee event valid asynchronous callback used basically save whatever need case use instead event variable directly", "d": "11/2017"}, {"body": "posva documentation statement nt think wrong never seen heard", "d": "11/2017"}, {"body": "could nt find see vue", "d": "11/2017"}, {"body": "searching somewhere kind documentation dom events lifespan found nothing jsbin crown example thousands link seriously last time issue hybrid vm called titanium elements mapped java objectc counter parts would disappear vm deemed unused never thought would see browser today day tada", "d": "11/2017"}, {"body": "javascript need quote keys", "d": "11/2017"}, {"body": "works using plain js object instead class", "d": "11/2017"}, {"body": "took quick look renderslot function found extend function best guess instance class merged object literal prototype methods discarded iterating enumerable properties object constructor amp defined methods nonenumerable properties class prototype object using object literal instead class instance would best workaround possible nt chance check actually happening try come back done", "d": "11/2017"}, {"body": "expected behavior scoped slot props bound via passed directly object always copied plain object imagine another alongside needs merged keys found behavior needs consistent cases", "d": "11/2017"}, {"body": "according use contextmenu instead docs probably updated see", "d": "11/2017"}, {"body": "modifiers work click event actually fire right clicks middle clicks instead fired respectively confusing implemented normalization compiler transforms respective equivalents unfortunately supported universally use instead perfect since would fire even click start element close enough draggedmiddleclick seems extremely rare operation", "d": "11/2017"}, {"body": "attribute casesensitive see", "d": "11/2017"}, {"body": "javoski said", "d": "11/2017"}, {"body": "undocumentedinternal api wo nt declare dts use", "d": "11/2017"}, {"body": "unfortunately design hack around using object referring children recommended could break future versions vue", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow already check examples", "d": "11/2017"}, {"body": "want hire programmer", "d": "11/2017"}, {"body": "read docs", "d": "11/2017"}, {"body": "reproduction mean isolated boiled example reproducing problem check use fiddle provide simple html file create reproduction", "d": "11/2017"}, {"body": "vue", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "\u4e0d\u8fc7\u73b0\u5728\u662f\u5185\u7f51\u5730\u5740", "d": "11/2017"}, {"body": "expected behaviour since passing functional component slot functional component rendered main instance scope main instance render function result passed slot content execution happens actually instantiated rendered nt think easy solution particular situation used insice slots functional components eagerly rendered parent scope nt instance could evaluated slot later child would render template instead error would captured expected", "d": "11/2017"}, {"body": "explained linusborg functional components eagerrendered render functions invoked directly render function component uses error captured another component template scope nt think way fix unless change way functional components rendered making longer eagerrendered might benefits making functional components behavior consistent stateful ones close issue since different topic", "d": "11/2017"}, {"body": "thanks linusborg detailed information one last remark need answer strange behavior may expected vue core developer normal vue user behavior stays strange normaly errorboundary compent container either shows children case errors thrown children error details really feature work nonfunctional child components would great vue team would reconsider eagerrendering thing near future major versions thanks lot great job guys vue library ps look things work opinion", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "keep mind windows os x case insensitive default however related vue rather one loaders used webpack template nt handle uppercased extensions default add want adding case insensitive regex used urlloader line", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "something mind definitely something valuable thanks suggested api design", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "bug first refresh page", "d": "11/2017"}, {"body": "\u662f\u5426\u5728", "d": "11/2017"}, {"body": "\u53ea\u662f\u5728vfor\u4e2d\u8fd4\u56de\u6570\u7ec4 \u5982\u679c\u4e00\u4e2a\u9875\u9762\u4e0a\u6709\u4e24\u4e2a\u76f8\u540c\u7684ref\u8fd4\u56de\u6570\u7ec4\u8fd8\u662f\u5bf9\u8c61 \u6211\u89c9\u5f97\u8fd9\u91cc\u5f88\u6a21\u7cca api\u4e5f\u6ca1\u6709\u8bb2", "d": "11/2017"}, {"body": "\u8bf7\u770b\u8fd9\u91cc\u7684\u4f8b\u5b50 \u5982\u679cref\u540c\u540dchild\u65e0\u6cd5\u83b7\u53d6\u7b2c\u4e8c\u4e2a \u56e0\u4e3a\u8fd4\u56de\u7684\u662f\u5bf9\u8c61 \u800cvfor\u4e2d\u7684\u53ef\u4ee5 \u56e0\u4e3a\u8fd4\u56de\u7684\u662f\u6570\u7ec4 \u8fd9\u4f1a\u5bfc\u81f4\u5c06vfor\u4fee\u6539\u4e3a\u6b63\u5e38\u7684\u975ehtml\u5185\u5bb9 \u5c06\u4f1a\u5bfc\u81f4\u4fee\u6539js\u83b7\u53d6 refs\u8fd9\u5757\u7684\u4ee3\u7801", "d": "11/2017"}, {"body": "interesting thought imo something added core vue provides several ways handle currently conditional inside template passed slot parent hoc custom vue template sections etc", "d": "11/2017"}, {"body": "also possible add core could added vueloader would transformed something like personally think better keep kind magic webpack template nt improve way write templates enough write loader put front vueloader make transformation", "d": "11/2017"}, {"body": "want wrap slot better let component user intention clearer user write clearly shows things put together related", "d": "11/2017"}, {"body": "understood approach correctly solution problem described would means either repeat create separate component write extra boilerplate seem suboptimal might well write instead html content content took look two issues sure way related please expand", "d": "11/2017"}, {"body": "thanks suggestion however parallel mechanisms solve similar problems complexity big nogo terms api consistency something consider core welcome try implement userland", "d": "11/2017"}, {"body": "made pr expose meantime manually annotate function", "d": "11/2017"}, {"body": "nt warning appear client anyway", "d": "11/2017"}, {"body": "least initial ssrgenerated page load nuxt shows warning client arrive page actually valid point would also expect client emit error initial load ssrgenerated page", "d": "11/2017"}, {"body": "fyi expected behavior warn server possible user wants render real custom element instead vue component warning safely performed client check element registered real custom element previously warning even clientside hydration fixed", "d": "11/2017"}, {"body": "workaround moment add attribute one two slots containers", "d": "11/2017"}, {"body": "wow amazing cloned built tested works evan best thank much", "d": "11/2017"}, {"body": "btw already", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow define accessible everywhere use defineproperty prevents overwrite user need data reactive use like vuerouter case seems enough", "d": "11/2017"}, {"body": "ok thanks promise ask questions forum future extending prototype work tried using definereactive resolve problem gracefully method writen docs read code vuerouter sure right way know vuerouter official module", "d": "11/2017"}, {"body": "true relying fully secure api may change future without notice example definereactive example using another vue instance reactivity version using public api", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "sorry mistake forgot remove reference parent component key word leads problems", "d": "11/2017"}, {"body": "yes problem come electron sets configurable false getters setters everything work fine il add configurable true electrondistelectronasarrendererapiremotejs file see", "d": "11/2017"}, {"body": "would move element anymore", "d": "11/2017"}, {"body": "think understand asking unfortunately properly implementing introduces many unresolved questions eg list changes leave transition changes move brings complexity whole different level rather tackle standalone package core", "d": "11/2017"}, {"body": "sorry insist waste time understand problem list changes leave transition changes move nt change actual behavior already make shuffle middle leave hook make another move transition callback called like press multiple time shuffle list move transition example sorry assumptions wrong nt know flip implemented nt big picture problem like wrong point right direction implement vue package posva nt want move element rest list elements rearrange list prefer try example shuffle add remove item import lodash export default data return items nextnum methods randomindex return mathfloor mathrandom thisitemslength add thisitemssplice thisrandomindex thisnextnum remove thisitemssplice thisrandomindex shuffle thisitems shuffle thisitems leave el next settimeout gt elstyledisplay none working cause vue watch elstyledisplay none next replace lines next true p display flex flexflow row wrap span flex auto width margin backgroundcolor tomato textalign center listcompletemove transition transform listcompleteenteractive transition opacity listcompleteenter listcompleteleaveto opacity listcompleteleaveactive transition opacity", "d": "11/2017"}, {"body": "used real nodes sets inner text element used template however add warning", "d": "11/2017"}, {"body": "expected nt produce visible content unless combined structural directive like", "d": "11/2017"}, {"body": "example combined structural directive posva work ssr js const vue require vue const app new vue template foo data foo hello const renderer require vueserverrenderer createrenderer rendererrendertostring app err html gt err throw err consolelog html emits html hello exactly expected code work browser however see jsfiddle nt inconsistency problem", "d": "11/2017"}, {"body": "let put way equivalent setting property node nt work node fact works ssr coincidental probably fix maintain consistency clientside behavior rely", "d": "11/2017"}, {"body": "using instead vue adjusts event firing order prioritizing correct behavior vue event listeners behavior external listeners mutates application state guaranteed", "d": "11/2017"}, {"body": "right thanks", "d": "11/2017"}, {"body": "expected behavior think way around leave transition triggered removal element transition state ephemeral reflect virtual dom state virtual dom element considered already destroyed want something element finally removed real dom use transition hooks instead", "d": "11/2017"}, {"body": "incapsulate destroying garbage collecting inside components hook inside components use destroy components transition parent page finishes screencast illustration problem caused behavior", "d": "11/2017"}, {"body": "plashenkov believe referring using transitionend", "d": "11/2017"}, {"body": "autumnwoodberry thanks kind workaround though example transition used triggered example transition applied directly component parent component page example component nt know parent container uses transition believe strong straightforward event needed help us detect last moment component really needed anymore destroy", "d": "11/2017"}, {"body": "designed usage modifiers limit handler fired proposed modifiers fall different category imo makes concept overloaded syntax convenience custom behavior goes beyond firing better done javascript reuse method wrapperdecorator", "d": "11/2017"}, {"body": "seems like fixed", "d": "11/2017"}, {"body": "javoski true checked last version fixed", "d": "11/2017"}, {"body": "nt think afford warning runtime build though summarize variable naming rules single asciionly regular expression javascript would characters long ecmascript unicode", "d": "11/2017"}, {"body": "alternative method suggested work occurred might work tried work nt", "d": "11/2017"}, {"body": "tracking click event looks like vue treat unicode names differently behind scene method name like doit button click invokes boundfn directly method name unicode name button invokes something like click event handler instead", "d": "11/2017"}, {"body": "order use method name directly shorthand needs alphanumeric identifier expression alphanumeric identifier treated function body instead case needed adding shorthand support full unicode herringtondarkholme pointed expensive worth", "d": "11/2017"}, {"body": "thanks addressing still wonder feedback could provided case maybe something like used nonalphanumeric identifier intended add workaround", "d": "11/2017"}, {"body": "problem expensive detect nonalphanumeric identifier maybe unicode identifier full expression", "d": "11/2017"}, {"body": "excuse miss something obvious realize expensive decide identifier legit unicode identifier pointed however thought detecting identifier nonalphanumeric easier like checking matches would require developer check legit unicode identifier feedback would better none suppose anyways unicode naming wide use plus alternative solution thanks community support totally understand edge case low priority picked time soon thanks patience time", "d": "11/2017"}, {"body": "gon na track", "d": "11/2017"}, {"body": "thank", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "closed via", "d": "11/2017"}, {"body": "keepalive cache anonymous components without include prop bug break change", "d": "11/2017"}, {"body": "see reproduction console panel link vue version see without include anonymous components ca nt cahce mounted without activated", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "u need dom structure input look update dom input tag", "d": "11/2017"}, {"body": "also facing similar issue trying generate one dynamic component using specific code update depvalue please help", "d": "11/2017"}, {"body": "hi varadekd think ask question stackoverflow think help trying change value value click depvalue", "d": "11/2017"}, {"body": "hi mahersoua nt want two different buttons load two component want single click component loaded ie click show twocomponent loaded", "d": "11/2017"}, {"body": "varadekd case assign value depvalue something like", "d": "11/2017"}, {"body": "go like getcomponent thisvalue thisdepvalue", "d": "11/2017"}, {"body": "another thought ca nt change may also real component case must bound normally extracted component prop please use suggest workaround explicitly adding modifier", "d": "11/2017"}, {"body": "closed via", "d": "11/2017"}, {"body": "turns john came across thing months ago", "d": "11/2017"}, {"body": "thinks necessary users functional components otherwise hardly work expect", "d": "11/2017"}, {"body": "currently working names modifiers really since mouse modifiers already clashed keyboard modifiers avoid future name issues perhaps include something pointer device mouse related like introducing twoword modifiers nt seem like good idea though case related stuff main signifiers suggestions might confusing since fired mouse buttons except primary one suggestions suggestions previous names course kept deprecated warnings", "d": "11/2017"}, {"body": "able boil another issue running safari", "d": "11/2017"}, {"body": "appears bug safari sort function andor type coersion nodechromeetc returns would expect looking null true true sort b gt lt b true true null safari null true true sort function b return lt b null true true switching using comparitor function renders properly", "d": "11/2017"}, {"body": "still would like see makes sense way detect production would helpful think would rather development behavior production rerendering invalid markup order prevent white screens", "d": "11/2017"}, {"body": "would awesome cause also problems sometimes whitescreeen node append errors production would really nice able see production", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "kovensky solve issue", "d": "11/2017"}, {"body": "ktsn last checked typeof vue definition returns string magic going behind closed doors would use typeof vue provided repro", "d": "11/2017"}, {"body": "ktsn according vuedts const export vue vueconstructor", "d": "11/2017"}, {"body": "closing one please keep eye merged", "d": "11/2017"}, {"body": "\u4ec0\u4e48\u610f\u601d", "d": "11/2017"}, {"body": "\u4e0d\u597d\u610f\u601d \u6211\u8fd8\u5f97\u8ffd\u95ee\u4e00\u53e5 \u5728\u8fd0\u884c\u65f6 children\u786e\u5b9e \u4e0d\u9700\u8981\u4fdd\u8bc1\u987a\u5e8f \u4f46\u662f\u521a\u521a\u542f\u52a8\u5b8c\u6210\u65f6 \u987a\u5e8f\u662f\u5bf9\u7684 \u6211\u89c9\u5f97 \u5728\u70ed\u90e8\u7f72\u72b6\u6001\u4e0b \u5e94\u8be5\u548c\u65b0\u542f\u52a8\u72b6\u6001\u4fdd\u6301\u4e00\u81f4 \u5f88\u4f9d\u8d56\u73b0\u5728\u7684\u70ed\u90e8\u7f72\u673a\u5236 \u5f53\u7136\u901a\u8fc7\u670d\u52a1\u7aef\u6e32\u67d3\u4e5f\u5e94\u8be5\u80fd\u8fbe\u5230\u6548\u679c \u4f46\u662f\u8d44\u6e90\u6709\u9650\u8fd8\u662f\u5e0c\u671b\u70ed\u90e8\u7f72\u53ef\u4ee5\u652f\u6301\u7c7b\u4f3c\u521d\u59cb\u5316\u65f6\u6b63\u786e\u7684\u987a\u5e8f", "d": "11/2017"}, {"body": "\u7528 import message messagevue \u4ee3\u66ff require messagevue import vue vue import message messagevue let alertconstructor vueextend message", "d": "11/2017"}, {"body": "new vue js please check fiddle show use reactivity arrays functions little trick please comment paragraph see effect dont understand vue js", "d": "11/2017"}, {"body": "nt think really makes reactive happens update since another property also changes suspect using bvalue computed make computed reevaluate bvalue changes", "d": "11/2017"}, {"body": "ran similar issue functional component using innerhtml render entity default value functional component prop changed html markup user ssr renders inner html browser using innerhtml converts entities actual characters ie converted browser via native innerhtml ultimately causes rehydration bail rerender component spew errors dev mode html entities also fail hydration used innerhtml etc minimal markup recreate ssr hydration bail issue using sfc template non functional component issue nt appear", "d": "11/2017"}, {"body": "tmorehouse please open separate issue", "d": "11/2017"}, {"body": "\u770b\u5230", "d": "11/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2017"}, {"body": "spread operators natively supported node close wontfix order use object rest spread templates need use node configure option targeting ie make sure include polyfill likely coordinate configuration project able use object rest spread without configuration", "d": "11/2017"}, {"body": "linusborg vue cli builds perhaps also emit warning older versions node", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "faced problem alone", "d": "11/2017"}, {"body": "feel functional component explicitly declares props intercepting functional component meant serve pass wrapper simply declare props use implicit props", "d": "11/2017"}, {"body": "comes generating tables simplifies things", "d": "11/2017"}, {"body": "causes problems adds unecessary wrappers cracks layout", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "solve use vif instead vshow also avoid warning use vif condition velse instead use vif condition vif condition works hope helpful", "d": "11/2017"}, {"body": "heleninsa unfortunately nt allow component inside initialize track loaded mentioned somewhere previous comments", "d": "11/2017"}, {"body": "issue resolve", "d": "11/2017"}, {"body": "vitalipom two months nt remember details exactly think problem webpack configuration ended finding sample webpack config somewhere vue documentation forums ca nt remember ended making work sure webpack would cause vue issues", "d": "11/2017"}, {"body": "okay thank james meanwhile since candidate job interviews decided indeed use vuejs soon struggle catchy feature leave alone regular listener would call native java script eventually big bonus access data objects directly js meaning future purposes nov james speirs notifications githubcom wrote vitalipom two months dont remember details exactly think problem webpack configuration ended finding sample webpack config somewhere vue documentation forums ca nt remember ended making work sure webpack would cause vue issues receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "actually issue related safari instead vue check demo nt involve vue", "d": "11/2017"}, {"body": "great javoski demo indicates issue related vue safari", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "ktsn including file allows import modules typescript files seems conflict vetur plugin components path file checking imports completely disabled use dts file also changes vue files reflected autocomplete anymore indexts appvue import vue vue import card notexistcardvue works without sfcdts file", "d": "11/2017"}, {"body": "reopened since mentioned pull request abandoned", "d": "11/2017"}, {"body": "nt know alone case issue still happening safari autofill running fine safari click little guy input select list one autocomplete first passed form submit nt work safari start tipping immediately click list issue component updated properly data transmit updated exemple write okboys first time submit form must valid cached safari reload page browser start writting ok second time safari offers select okboys list bellow input select graphical input value okboys real value transmitted still tipped ok cf nt change anything safari seams ignore html attribute offers autocompletion web browser edge chrome ff edit works fact way still getting error caused safari form cache juste erase form autofill cache safari preferences bypass issue issue still present component reproduce issue", "d": "11/2017"}, {"body": "also supporting browser compatible es module support would neat another thing seems work without issues add export default main vuejs make function return factory like check whether global exists undefined es modules assigning globalvue throws exception course might break compatibility bundlersbuild tools nt know", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "resolved updating prototypejs least version", "d": "11/2017"}, {"body": "similar issue problem npm version nodejs version vue installed notice plugins section nt plugin added import extracttextplugin added plugins sections like added const extracttextplugin require extracttextwebpackplugin plugins new extracttextplugin filename utilsassetspath css name contenthash css set following option want extract css codesplit chunks main css file well result app css loaded upfront allchunks false dev webpackdevserver inline progress config buildwebpackdevconfjs one important thing add make sure installed project installed case fresh install", "d": "11/2017"}, {"body": "want chime would great addition currently solution provided may good option well nt tried approach yet", "d": "11/2017"}, {"body": "strange issue unfortunately ca nt use duration workaround since using vuetify transitions transition works transition nt", "d": "11/2017"}, {"body": "closing due inactivity also workaround pointed", "d": "11/2017"}, {"body": "coming react background browser quirks like handled behind fixed api particularly frustrating behaviour come across think good solution would eitherboth clear documentation page explaining selects operate differently inputs certain browsers lowlevel synthetic event eg works across field types ie select amp input etc", "d": "11/2017"}, {"body": "anyone know work around", "d": "11/2017"}, {"body": "hello vue warns computed property conflict props vue prop key results found subvue appvue renders vue appvue import sub subvue export default data return b c components subcomp sub vue subvue export default props data object data debugger return thisdata works change believe need correct warning say", "d": "11/2017"}, {"body": "using nice solution using template literals", "d": "11/2017"}, {"body": "ability change title seems basic thus fundamental feature site developed php kind practice rewrite react done vue assess convenient would site book collection site change title dynamic page reflect book title page quite useful also need update section include title author publisher tags etc piece thought", "d": "11/2017"}, {"body": "guykatz case state driven data context component holds template also bind even loads data still", "d": "11/2017"}, {"body": "use worked modal push raw html data body html", "d": "11/2017"}, {"body": "facing issue better solution jiayangshen", "d": "11/2017"}, {"body": "bug reappeared version version", "d": "11/2017"}, {"body": "hi noticed recently lack line numbers makes things really hard debug especially component big component couple thousands lines received warning vue warn error render function typeerror vmvalues itemname undefined component name line number firefox console kind cases would really useful specified line number course split component several smaller ones dig lines editor search point please consider adding line numbers next versions thank", "d": "11/2017"}, {"body": "please add line numbers got next message vue warn error render typeerror read property length undefined found know fails construct variablelength variable null problem many length constructs data coming external service", "d": "11/2017"}, {"body": "read property length undefined nt find problem big webapp hard suppose found file cause nt know error exactly erraze line line find line broken xd", "d": "11/2017"}, {"body": "linusborg issues slove problem thx", "d": "11/2017"}, {"body": "intend solve anything closed issue better describing specific situation forum forumvuejsorg see post", "d": "11/2017"}, {"body": "review code made changes emit event changes happens child", "d": "11/2017"}, {"body": "used available could access property removed addition custom model input values useful feature back framework", "d": "11/2017"}, {"body": "custom vmodel modifiers would great", "d": "11/2017"}, {"body": "met problem added onsubmit listener form form bound vue onsubmit listener got lost solutions", "d": "11/2017"}, {"body": "indeed name singlefile vue component seems ignored running right", "d": "11/2017"}, {"body": "ktsn think feature great especially benefit use type system claim done easily provide sample make vue without class style vue", "d": "11/2017"}, {"body": "already implemented", "d": "11/2017"}, {"body": "ktsn need integrate type system check question", "d": "11/2017"}, {"body": "raychenfj provided elegant solution", "d": "11/2017"}, {"body": "case someone else stumbles upon make sure model updated using elements", "d": "11/2017"}, {"body": "use destructuring", "d": "11/2017"}, {"body": "fix make isplainobject method return false js objectprototypetostringcall new unobservable object objectnoobserve", "d": "11/2017"}, {"body": "hi one point lost responses data original comment pure state case model instance private reference relationship lookup cache example lookup call dynamic property lookup relationship cache simple attribute access things consider cache pure state nt want observed vue waste resources cache discarded still need reference perform dynamic lookupsupdates cache effectively singleton may updated externally app updates accordingly response suggestions using json stringifyparse object destructuring sufficient duplicates object amp cache well breaking reference original cache updating original cache reference longer update app instances without dynamic lookups updates cache basically pointless would better make related objects simple attributes original model also worth noting suggestions break instance methods objects suggestions mechazawa make sense control type creation types built use vue case external library tied vue nt want go trouble altering types application much straightforward vue layer simply mark certain known properties unobservable criticism vuenonreactive vue dependency overkill comes something straight forward sure would bad thing already using vue application plugin specific vue mistaken build tools smart enough create bundles duplicate dependencies regardless nt correct dev dependency runtime dependency anyway glad see post garnered interest sure solutions work variety cases simply want highlight requirements original comment suggestions nt suitable alternatives case", "d": "11/2017"}, {"body": "guillaumevincent find solution want thanks", "d": "11/2017"}, {"body": "malian double click simple click element nt really good term accessibility tried another approach", "d": "11/2017"}, {"body": "catch data", "d": "11/2017"}, {"body": "best place check local storage app initialization see user already logged previous session tutorial referenced line inside startup file vue initialised done something similar recommended", "d": "11/2017"}, {"body": "use instead vue see", "d": "11/2017"}, {"body": "pablohpsilva thanks simple works really cool", "d": "11/2017"}, {"body": "agree thanks input glidias would cool able allows find quickly method comes case know searching definition method inside validation mixin style preferences imo", "d": "11/2017"}, {"body": "also like advocate implemented using objects namespace group functions much convenient prefixing cleaner also allows ides fold methods well workaround accomplished using functions instead objects used like perfect still gives organizational benefits couple years opinion changed", "d": "11/2017"}, {"body": "adopt approach put place simply use without function brackets order get computed caching avoid recreating object fact tend use pseudo singletonssingleglobal refsutilityclassesobjects etc well way get perfect solution approach done css modules well however assume methods stateless methods stateful notreactive methods whose states data lie outside vue", "d": "11/2017"}, {"body": "validation simply example usecase may may always make sense use computed property nt negate original uses nested methods", "d": "11/2017"}, {"body": "ya anything new issue since", "d": "11/2017"}, {"body": "seems like support objects values dropped", "d": "11/2017"}, {"body": "ndabap work gives output html bar screenshot good luck", "d": "11/2017"}, {"body": "sadly unreliable often gives error", "d": "11/2017"}, {"body": "sorry hear question exactly supposed statement posted two year old closed issue zero information exact problem", "d": "11/2017"}, {"body": "simply", "d": "11/2017"}, {"body": "facing issue jasonbodily proper way save handler function reference unbind later", "d": "11/2017"}, {"body": "jasonbodily nevcos know meet need simply use parameter define destroy function hook", "d": "11/2017"}, {"body": "hcysunyang yes meets need actually implemented way wondering best way thanks", "d": "11/2017"}, {"body": "stress", "d": "11/2017"}, {"body": "readme\u91cc\u663e\u793a\u7684\u662f\u6700\u65b0\u7248\u54e6", "d": "11/2017"}, {"title": "model id removed byid model id available unparsed model", "body": "following believe bug assume unparsed models id idattribute toplevel attribute model already collection added collectionset lookup unparsed model collectionget unparsedmodel find add model even already original model removed byid idattribute id also therefore model longer available collectionget modelid problem exists unparsed model contain id idattribute", "num": "4171", "d": "11/2017"}, {"title": "magento security scan", "body": "hi range magento security scan website scanner available magentocom account scan reported following site compromised injected javascript malicious code signature found resources jsmirasvitcorebackbonejs using magento module company called mirasvit uses backbone js reported issue said using official version backbone original version checked file site exactly matches know file nt modified either developer someone gaining access server thought make aware also seeking support means thank", "num": "4170", "d": "11/2017"}, {"title": "broken link cdnjscom view", "body": "page view point", "num": "4169", "d": "11/2017"}, {"title": "backbone noconflict typescript working", "body": "typescript file directly used backbone want change use version backbone export var ownbackbone typeof backbone backbonenoconflict export class usercontainerview extends ownbackbone view public currentview public haschanges collection ownbackbonecollection constructor options super thiscollection optionscollection el optionsel throwing error build cant find name ownbackbone", "num": "4168", "d": "11/2017"}, {"body": "sounds like working correctly adding raw data id allowed add twice really think problem feel free provide test case", "d": "11/2017"}, {"body": "misinterpret issue idea parsed version op nov schreef jeremy ashkenas notifications githubcom sounds like working correctly adding raw data id allowed add twice really think problem feel free provide test case receiving authored thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "misinterpret issue idea parsed version jsfiddle codepen demonstrating would help understand issue", "d": "11/2017"}, {"body": "see van luiz am\u00e9rico notifications githubcom verzonden dinsdag november aan jashkenasbackbone cc rianwouters author onderwerp jashkenasbackbone model id removed byid model id available unparsed model misinterpret issue idea parsed version jsfiddle codepen demonstrating would help understand issue receiving authored thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "see id returned parse ignored removed seems legit bug", "d": "11/2017"}, {"body": "passing works expected javascript var model backbonemodelextend parse function r return id rfoobar lorem rlorem var raw foo bar lorem ipsum var new model raw parse true consolelog", "d": "11/2017"}, {"body": "thanks reason obviously collectionset parse models checking already existing collection op nov schreef luiz am\u00e9rico notifications githubcom see id returned parse ignored removed seems legit bug receiving authored thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "test works using collection collectionfetch calls collectionset parse true however collectionset parse model checking model already collection add model new cid however also remove old cid also removed id byid hash workaround add following collection workaround parse models modelsforeach gt midattributeid whatever needed get id return models nt nice course need add knowledge model parsing collection believe solution could move model models thispreparemodel model options add beginning loop side effect think simplify var attrs thisismodel model modelattributes model var attrs modelattributes van jeremy ashkenas notifications githubcom verzonden donderdag november aan jashkenasbackbone cc rianwouters author onderwerp jashkenasbackbone model id removed byid model id available unparsed model passing parse true works expected var model backbonemodelextend parse function r return id rfoobar lorem rlorem var raw foo bar lorem ipsum var new model raw parse true consolelog receiving authored thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "afraid nt know means get specific error scanner ideally line number snippet code triggering error otherwise much help", "d": "11/2017"}, {"body": "probably put comment cdnjscom though tutorial repo repo nt maintain control information", "d": "11/2017"}, {"body": "thanks info made comment page instead", "d": "11/2017"}, {"body": "probably going get responses asking questions like stackoverflow", "d": "11/2017"}, {"body": "asked question regarding stackoverflow thought issue regarding backbone since used simple step use backbone conflict unable use", "d": "11/2017"}, {"body": "really ca nt figure trying solves shared namespace loading script particular way assuming using module loader typescript like webpack browserify something nt problem solves module loader necessary var backbonenoconflict var backbone", "d": "11/2017"}, {"body": "using conflict since code plugin another app using another version backbone enabling plugin loading version backbone conflicting client version backboneand assume using loader", "d": "11/2017"}, {"body": "sorry still nt make sense object plugins exposing backbone causing issue need expose want use another version", "d": "11/2017"}, {"body": "let explain example suppose main app using backbone version window loaded backbone version load plugin code time load backbone used codeif u check console backbone display version main app getting crashedso solution storing version backbone conflict older one restoring backbone old version ie main app using", "d": "11/2017"}, {"body": "setting back older version nt perhaps code loaded prior plugin calling really need happen much point within code using return value returns able use regular everywhere need issues conflicting backbone versions work nt would suggest additional copy backbone loading somewhere", "d": "11/2017"}, {"body": "yes setting back older version u check console backbone version ownbackbone version guess missing context problem typescript build error storing backbonenoconflict variable using itspecifically say use backbone noconflict instance typescript", "d": "11/2017"}, {"body": "use function returns typescript function seems job incredibly simple nt seem like issue backbone also care return changes backbone version window return value function nt particularly useful", "d": "11/2017"}, {"body": "function job well see correct behaviour using console window ie javascriptbut typescript showing errormy point support typescript perfectlyif yes could please give example noconflict usage backbone typescript", "d": "11/2017"}, {"body": "seems work", "d": "11/2017"}, {"body": "thanks working perfectly latest version typescript version using", "d": "11/2017"}, {"body": "nt think really anything backbone good luck", "d": "11/2017"}, {"body": "looks properly would nt proper method sets idattribute additionally would amazing promise support native approach using jquery deferred personally would love see deprecated within backbone", "d": "11/2017"}, {"title": "ember related cleanup", "body": "x remove usage ci tracking x remove ci runs tracking x leverage native weakmaps lock sivakumarkailasam remove remove nonweakmap fallback remove nonweakmap fallbacks remove nonweakmap fallback remove remove custom tracked lock maxwerr x remove polyfills shims x support hacks x remove flag x remove workarounds phantoms broken define property deprecations labeled need extracted possible behind env flag extraction possible enable usage deprecated features ember using legacy addon lock thoov setup legacy addon infrastructure x lock thoov x worked x dsl tracking x support x gowthamrm providing function registry x worked x addressed x lock bekzod transforming also x feature flag removed without flaggingguarding never enabled tracking x addressed x lock ed locks tracking x models wrapped controllers addressed x lock thoov x lock thoov legacy controller proxying behaviors removed completely incorrect x addressed x lock thoov render component manager syntax x addressed x support x arity check initializers addressed orphaned outlets x addressed x addressed x signature deprecations changed assertions addressed x signature deprecations changed assertions x pick one items please comment update checklist", "num": "15876", "d": "11/2017"}, {"title": "big memory leak destroying templates contain iframe", "body": "create destroy components include iframe get enormous memory leak time twiddle content iframe nt mopped", "num": "15872", "d": "11/2017"}, {"title": "giving object param helper nt work expected", "body": "route params given via object helper wo nt appear route also case calling instead example javascript route decleration thisroute myroute path foo bar baz thistransitionto myroute thisparamsfor myroute gt foo bar baz thistransitionto myroute foo bar baz thisparamsfor myroute gt transition cases works fine url build params expected method works differently also twiddle reproduces", "num": "15870", "d": "11/2017"}, {"title": "regression certain browser", "body": "like hesitantly report could understood regression builtin browser samsung tv case model basic handlebars rendering computed property working correctly upgrading version rendering failing see two screenshots pages barebones ember app created ember cli using ember new difference version embersource used test done applicationhbs template computed property applicationjs controller returns render successful applicationhbs template simply renders property notes script errors seem occur test listening windowonerror would logged result div interestingly debug build used rather production build rendering works correctly motivation one customers uses four tvs display one product pages kioskstyle mode important know nt great reproduction steps assuming people access browser anyway wondering chance someone knows change might responsible issue guessing something update glimmer mentioned relevant blog post issue might happening production debug builds change make emberjs code narrow issue say extremely timeconsuming debug browser belongs customer request take screenshots us technically regression presumably kind tv browser nt officially supported lucky worked tv insight would greatly appreciated", "num": "15867", "d": "11/2017"}, {"title": "emberlogger missing api docs", "body": "listed api docs however version docs emberlogger also seems missing rfc list new modules globals reference", "num": "15866", "d": "11/2017"}, {"title": "wrapped ember inputs fire enter key events", "body": "using ember inputs across app small bug found leading us avoid using events components including inputs essentially native inputs behave differently ember inputs wrapped component see using native input press release return key get following events using ember input get following events well however using wrapped ember input get following events feel free exploration ember twiddle keyboard event twiddle", "num": "15865", "d": "11/2017"}, {"title": "promise chains bizarre consequence registering handler emberonerror", "body": "seems upgrading effect registering global error handler using changed promise chains handled using pattern handling errors long promise chains involves stepspecific reject handlers handlers would responsible handling errors previous step additionally handlers would continue rejecting way chain even error handled none rest chain executed unfortunately pattern seems possible registering error handler example guides suggests used logging errors would expected whether one registeres error handler nt affect methods called promise chain however seems case illustrate behavior example repo file boolean variable toggled determine global error handler using registered set get expected behavior set promise chain continued despite error thrown reject handler passed case output looks like behavior quite problematic means chain continue exception thrown handler also bizarre behavior contingent whether handler registered", "num": "15864", "d": "11/2017"}, {"title": "emberapplicationinstance factoryfor available api docs", "body": "noticed factoryfor docs show api docs looked following pages", "num": "15863", "d": "11/2017"}, {"title": "computed property correctly invalidated tests", "body": "test computed property mixin test setting field value objset computed property based testing computed property contains correct value assert computed property set assert set assert etc test work set invalidate computed property get assert invoke computed property tests application run computed property invalidated thus tests failing cached value incorrect however filter run tests mixin pass computed property invalidated correctly every time verified putting console log computed property tests log one time filtered tests log correct times due sets stepped code tests running setting property computed based code invalidate cache skipped cant quite understand code determine whats different internally running tests tests mixin code starts line seen set didseen line top seen didseen null seen didseen set cache cleared iterdeps line seen passed didseen nulled line null begin top true code actually didseen ever set anything null tests run didseen null large hash objects line finds value line early exits never invalidating cache tests run filtered mixin didseen null value found early exit cache gets invalidated purpose didseen top trying accomplish didseen ever set file level variable instance level somewhere get tests work basically put ever set expect test seems work multiple sets followed gets test computed property invalidated work nt note ember code master seems look like code stepped", "num": "15861", "d": "11/2017"}, {"title": "adding custom css classes linkto component active", "body": "hi ember developers would like suggest small improvement component think adding new attribute help ember developer bind classes active simple terms reverse help developer writing custom css classes nonactive help avoiding writing custom unnecessary jquery code thank", "num": "15860", "d": "11/2017"}, {"title": "wrong sourcemaps embermetal", "body": "though problem side saw decided open new issue number releases file", "num": "15859", "d": "11/2017"}, {"title": "setunknownproperty used documented return value undefined", "body": "unknown properties section set documentation least earlier versions says returns undefined simply set value object similar section says sets value property object property defined object implements setunknownproperty method invoked well however invokes object method nothing done return value particular property set object function returns undefined easily seen propertysetjs called without assigning return value anything nothing else happens function call except returning rather invoked well invoked instead setting property value object error docs understanding bug intended operation code happy take stab pr latter interest", "num": "15856", "d": "11/2017"}, {"title": "dynamic segment application route", "body": "need help adding dynamic segment application level make backward compatible require optional dynamic segment existing urls must replaced dynamic segment available hits router class appreciate help", "num": "15852", "d": "11/2017"}, {"title": "classnamebindings compiles causes runtime problems", "body": "double classnamebinding compile ok generates runtime error afterwards eg classnamebindings isvertical vertical horizontal isvisible visible hidden produces uncaught typeerror read property split undefined processcomponentinitializationassertions curlycomponentmanagercreate appendopcodesevaluate vmnext templateiteratornext rootstaterender exportsrunintransaction interactiverendererrenderroots using ember", "num": "15851", "d": "11/2017"}, {"title": "deleting object keys nt update children component templates", "body": "reproduced add item remove button string changes component template button nt update children components bug deleting key correctly updates template current component fails update templates children components", "num": "15847", "d": "11/2017"}, {"title": "computed filter regression", "body": "regression bug computedfilter observing property changes properly release paste console obj emberobjectextend filtereditems embercomputedfilter items prop function item return itemget prop false obj objcreate objset items emberobjectcreate prop false consolelog expected actual objget filtereditemslength objget items set prop true consolelog expected actual objget filtereditemslength third core regression bug found one pretty major happening shall pr failing tests coreobject module rwjblue", "num": "15843", "d": "11/2017"}, {"title": "error substate receive model hook rejection reason unless error object", "body": "return model hook error substate recieve reason model indicated guides reason error ie exception thrown promise reject value passed error state model see instead return works expected think either bug case docs need bit work", "num": "15842", "d": "11/2017"}, {"title": "blank page combining templatename rendertemplate route subroutes", "body": "application multiple named outlets displaying reasons render nested route next parent route instead nested overriding outlet also override route route also subroutes unfortunately causes blank screen errors console see embertwiddle reproduction issue circumvented three ways removing making sure template right name exists overriding fixing display css instead removing subroutes relevant route router would expect combination three work though least give error message overlooking something least case ember", "num": "15841", "d": "11/2017"}, {"title": "multi brace arrayproxy break depwatch chain", "body": "hi problem following twiddle ember also clone repository traced problem issue meta information multi brace seems invalidate cache clear chains leaving state chain broken rebuild first propertydidchange trigger reread whole chain rehooks chaindeps next seems clear meta info trigger whole chain properties already pre watchingdeps get reset rerender later seem happen en also nt know triggered maybe dirty flag maybe somebody knows changed dependency chain handling btw debugging bit hard since seems incorrect sourcemaps metallib known bug", "num": "15840", "d": "11/2017"}, {"title": "missing properties methods embercoreview documentation descendant classes", "body": "compare go", "num": "15839", "d": "11/2017"}, {"title": "getting isdestroyed return undefined nested keypath", "body": "attempt get isdestroyed attribute destroyed nested object using getter return undefined instead true due loop getpath propertygetjs var classx emberobjectextend child embercomputed function return emberobjectextend var x classxcreate xget child isdestroyed true consolelog xget childisdestroyed return undefined cause issue value opposite expect code still treat object destroyed though understand reason getter would return undefined destroyed object maybe make exception isdestroyed", "num": "15837", "d": "11/2017"}, {"title": "coreobject observerreads regression", "body": "pretty weird regression happened failed tracing commit caused maybe guyz help paste snippet console ember app see const obj emberobjectextend name embercomputedreads somethingelse namedidchange emberobserver name function objcreate name objcreate name happens devtools sshot put verbally create one object overriden computedreads property chained dependency active observer watches property world collapse edgecase need exactly kind behaviour app error wo nt show change computedreads nonchained property observe property computedreads points nt override computedreads prop creation use ember version lt", "num": "15836", "d": "11/2017"}, {"title": "linkto integration tests throw read property applyintent undefined", "body": "following error occurs canary works properly prior releases test test attempting ensure component integration test capable rendering even router bootedavailable demo repo suspect caused one following pr changed things routing andor linkto area", "num": "15831", "d": "11/2017"}, {"title": "wildcard routes nt run model hooks different wildcards", "body": "given route like calls url changes model expectation similar routes dynamic segments model hook would always called", "num": "15830", "d": "11/2017"}, {"title": "exception handling inside run loop differs test production", "body": "hi upgraded app latest got new set errors tests bit digging able find problem test environment test adapter catches reports exception thrown inside run loop means error propagated code demonstrate created example works perfectly fine production environment fails test repo containing failing test js throwcomponentjs export default componentextend errormessage actions throwerror try join gt throw new error error thrown runloop catch e set errormessage emessage hbs throwcomponenthbs errormessage js acceptance test failing test visiting function assert visit click throwbtn andthen function assertequal find errormessage text error thrown runloop expected behaviour recommended way handle errors come run loop", "num": "15827", "d": "11/2017"}, {"title": "make caninvoke public", "body": "kind minor request could made public added module exports already public found also valuable would nice publicly available", "num": "15813", "d": "11/2017"}, {"title": "emberarray replace", "body": "documentation strings used enumerables together pushobject eg arr contains according documentation usage objects would expect replace second empty string right", "num": "15812", "d": "11/2017"}, {"title": "make transition engines subroute inrepo application throws error", "body": "let engine mounted testengine list route making transition throws make transition one one works later transition works reproducible gt", "num": "15809", "d": "11/2017"}, {"title": "index available partial upgrade", "body": "double nested idx making partial working simply upgrading changes longer works still experiencing even though claims fixed sure manifestation bug", "num": "15807", "d": "11/2017"}, {"title": "enumerable contains deprecation docs links give", "body": "deprecation docs enumerable contains links two equality algorithms give followed looks like link strict equality comparison algorithm needs updated link samevaluezero algorithm needs updated", "num": "15805", "d": "11/2017"}, {"title": "secret admirer", "body": "hey ember community past years working react applications followed hype build react yes react great everything else around complicated fragmented inconsistent needless say looking back say wish started ember amount hours wasted setting react webpack react router infuriating time understood router released new version totally different imo make things better let guys know start new project today would ember keep guys guys right path provide cohesive experience building ambitious front end application advertised ember far right choice coming guy maintain react apps", "num": "15804", "d": "11/2017"}, {"title": "double render assert meta leaks memory", "body": "", "num": "15803", "d": "11/2017"}, {"body": "rwjblue removed", "d": "11/2017"}, {"body": "rwjblue emberweakmap removed believe list", "d": "11/2017"}, {"body": "nt taken start working sub tasks", "d": "11/2017"}, {"body": "thoov tackled sivakumarkailasam take look pr help review determine missed", "d": "11/2017"}, {"body": "rwjblue help review change tactic take bottom list", "d": "11/2017"}, {"body": "thoov sounds good updated items marked whole subsection lock ed need create legacy support addon env flag infrastructure one else working deprecations blocked anyways", "d": "11/2017"}, {"body": "like work support hacks still grabs", "d": "11/2017"}, {"body": "tsauer ready raise pr", "d": "11/2017"}, {"body": "well pick remove polyfills shims", "d": "11/2017"}, {"body": "ill take stab", "d": "11/2017"}, {"body": "taking", "d": "11/2017"}, {"body": "taking routerdsl", "d": "11/2017"}, {"body": "taking", "d": "11/2017"}, {"body": "taking arity check initializers", "d": "11/2017"}, {"body": "locks one thing keep mind ca nt remove functionality completely yet either add wrap conditional flag due stated goal blog post expand migration window applications adopt releasing addon provides support emberjs apis series committing support addon ember first lts candidate ember cycle want contribute effort find package name", "d": "11/2017"}, {"body": "rwjblue roger review perfeature best approach might partial moving implementation legacy addon possible nothing else seems neater", "d": "11/2017"}, {"body": "absolutely agreed need ensure path forward things like support almost certainly wrapped conditionals things like totally done addon directly", "d": "11/2017"}, {"body": "enumerable contains", "d": "11/2017"}, {"body": "taking", "d": "11/2017"}, {"body": "taking", "d": "11/2017"}, {"body": "taking", "d": "11/2017"}, {"body": "taking", "d": "11/2017"}, {"body": "content iframe nt mopped share details specifically indicates iframes getting cleaned sure able reproduce seeing also provide reduced example embertwiddle series iframes may confuse problem", "d": "11/2017"}, {"body": "interesting example provided seem unbounded number iframes heap inspector", "d": "11/2017"}, {"body": "ya given example heap seems maintain stable size tested iterations iterations scenarios number frames heap size experiencing leak likely reproduction steps missing", "d": "11/2017"}, {"body": "look number htmldocument nodes heap looks though entire framed dom leaked", "d": "11/2017"}, {"body": "real world app use leafletjs map pages supplied client use image tiles leak gb per hour", "d": "11/2017"}, {"body": "heap snapshots taken twiddle forced garbage collect immediately one minutes apart", "d": "11/2017"}, {"body": "bryancrotaz hmm ya see number instances grow next time would really great could provide information issue would really make issues actionable interestingly though far ca nt see anything ember related retaining case appears one internals ember nt able affect either heapsnapshot tool broken hiding bug ember something funky land", "d": "11/2017"}, {"body": "relevant code heapsnapshot screen shots", "d": "11/2017"}, {"body": "also context believe ember merely literally toggling", "d": "11/2017"}, {"body": "pinging friends maybe sanity check hypothesis open crbug", "d": "11/2017"}, {"body": "potential minimal reproduction sporadic growth cleanup seems like leak really slow cleanup html let count const const settimeout function loop framesrc count count settimeout loop", "d": "11/2017"}, {"body": "sorry confusion meant saying content iframe mopped know root retainer big island references", "d": "11/2017"}, {"body": "prob good bubble issues way get solved regardless root cause lies", "d": "11/2017"}, {"body": "looked code bit beyond knowledge js engines looks though caching dom url case example expect ever see cached copies seeing high", "d": "11/2017"}, {"body": "bryancrotaz code see", "d": "11/2017"}, {"body": "hashseed guessing lot first look engine code stefan suggested", "d": "11/2017"}, {"body": "see indeed cache instantiating objects object templates entirely clear related components guessing may actually cause leak cache jsobjects since references context verwaest insights though", "d": "11/2017"}, {"body": "hashseed verwaest nt think component fault disposing iframe correctly framed document resources staying cache sound causing mem leak overly long caching strategy causing problems constrained devices", "d": "11/2017"}, {"body": "actual root looking thing marked document dom trees basically means blink oilpan thinks dom trees still rooted typically single nonprimitive object native context leaks context including instantiations caches stay alive particular path seeing htmldocument objecttemplate marked cacheable template htmldocument instance seeing instantiations cache reason cache held native context held htmldocument constructor context pointer points native context constructor installed proto another htmldocument native context sure multiple htmldocument instances native context expertise second htmldocument rooted one hashseed since ooo perhaps ping someone blink bindings gc teams look tue nov pm bryan notifications githubcom wrote hashseed verwaest nt think component fault disposing iframe correctly framed document resources staying cache sound causing mem leak overly long caching strategy causing problems constrained devices receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "browser run version reproduce sure proceed case given hard find root cause", "d": "11/2017"}, {"body": "thanks response serabe answer questions yes issue exists also ie exists since browser proprietary inbuilt browser samsung model version number unknown information help menus browser described extent user manual course makes difficult debug really sure expect team guess thought report anyway case something else related comes somebody knows might best debugged someone owns tv repro", "d": "11/2017"}, {"body": "related", "d": "11/2017"}, {"body": "looks like emberlogger something went away version version researching figure happened", "d": "11/2017"}, {"body": "ok april logger refactored emberconsole directory nt specified therefore get picked documentation build process forward working fix reintroduce going work fix adds back", "d": "11/2017"}, {"body": "ha nevermind nt path included config", "d": "11/2017"}, {"body": "jtmckibb need use allow event propagate else translated events clicked sure correct behavior need exist better clarify rwjblue", "d": "11/2017"}, {"body": "feel like might antipattern ember inputs mimic behavior native inputs also default behavior ember inputs default behavior ember components", "d": "11/2017"}, {"body": "modifying bit twiddle see logs directly screen behave", "d": "11/2017"}, {"body": "able reproduce behavior starting currently emberjs master branch beta downgrading backburner nt yet worked changed backburner cause problem", "d": "11/2017"}, {"body": "reviewing wonderful research kbullaughey along lengthy pairing session hjdivad believe fixes issue explains exactly happening", "d": "11/2017"}, {"body": "provide reproduction please", "d": "11/2017"}, {"body": "hello abdullahdahmash feature requests need go rfc process explained contributing guide thank", "d": "11/2017"}, {"body": "thank reaching sankarganesh however reserve issue tracker bugs ember check community page stackoverflow discuss slack links ask question good luck", "d": "11/2017"}, {"body": "thanks reporting definitely make better believe throw error entries array strings", "d": "11/2017"}, {"body": "take", "d": "11/2017"}, {"body": "sarupbanskota still interested", "d": "11/2017"}, {"body": "yes failing test pr would helpful sure root cause without digging yet", "d": "11/2017"}, {"body": "scanned changes see embercore updating going ca nt find source regressions", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "ya probably fix implementation allow promises rejected string values", "d": "11/2017"}, {"body": "seems incorrect sourcemaps metallib known bug nt recall open issue maybe search report new issue", "d": "11/2017"}, {"body": "nt understand twiddle every time check checkbox updating length properties reproduce issue reporting", "d": "11/2017"}, {"body": "updated twiddle seems update nt dug code repro confirm nt valid using canary builds", "d": "11/2017"}, {"body": "might related", "d": "11/2017"}, {"body": "sorry confusion twiddle nt know could specify karthiick nt know related one seems regression bug seems already exist seems correct behavior breaks see find changes stand", "d": "11/2017"}, {"body": "playing twiddle showing correct behaviour fixes issue", "d": "11/2017"}, {"body": "yes maybe correct behaviour due global rerender triggered bugged version nt know glimmer rerender logic works", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "confirming fixed", "d": "11/2017"}, {"body": "bekzod would mind taking look exactly scenario eg without routing referring", "d": "11/2017"}, {"body": "rwjblue sure looking", "d": "11/2017"}, {"body": "rwjblue sorry could nt resolve dug bit found ignoring first positional param called parameter passed suspect something unfamiliar zone", "d": "11/2017"}, {"body": "hmm think issue inline linkto test though", "d": "11/2017"}, {"body": "confirm think issue inline linkto test though well happens inline well block form", "d": "11/2017"}, {"body": "furthermore found using path mentioned docs navigating route different wildcards transitions one behind", "d": "11/2017"}, {"body": "hang working repro well may user error", "d": "11/2017"}, {"body": "yup geez", "d": "11/2017"}, {"body": "feature requires follow rfc process described contributing thanks", "d": "11/2017"}, {"body": "third argument replace needs collection", "d": "11/2017"}, {"body": "sarathkumarbaskaran make example bug perhaps github gitlab shared git repository one first steps verifying bug reproduce behavior", "d": "11/2017"}, {"body": "pixelhandler thanks note issue happens make reference application controller engine controllers application controller controller injection reproducible example let fails registered container use case little weird curious know change behavior factoryfor lookup", "d": "11/2017"}, {"body": "tl dr create nt really issue engines perse inject autogenerated controller generated reason seems related engines extending app controller within engine breakdown going transition nested route directly router resolves enginetest engine router identifies target route enginetestlist router attempts instantiate route controller note controller actually reexport apps controller includes controller instantiated checks confirm required injections available attempts find inside engine found therefore error thrown transitioning transitioning force created allows injected controller check transitioning succeed closing believe bug", "d": "11/2017"}, {"body": "rwjblue cool stuff wanted point works version lt", "d": "11/2017"}, {"body": "atomkirk would mind submitting failing test pr like linked", "d": "11/2017"}, {"body": "many different scenarios play definitely fixing ones reported confirmed passing previously failing test cases patch releases sorry frustrating", "d": "11/2017"}, {"body": "well ca nt reproduce twiddle maybe installation somehow might related errors", "d": "11/2017"}, {"body": "atomkirk please continue try isolate issue eager help reproduce also feel free make full repo clone suspect issue twiddle", "d": "11/2017"}, {"body": "think probably related version mitchmatch pointed im still trying verify problem lets close many thanks taking time", "d": "11/2017"}, {"body": "problem let us know still issue try keep digging", "d": "11/2017"}, {"body": "thank much kind words please join us ember community slack request invite slackin hope see soon slack thanks", "d": "11/2017"}, {"body": "appears like previous versions ember lt model hit value calls always seeing intended results digging right embedded fairly deep picking right approach tough see needs done sure start", "d": "11/2017"}, {"body": "thanks opening issue love figure think first step would submit failing test pr tests router service around query params", "d": "11/2017"}, {"body": "one thing certain actual bug implementation thats failing test pr would super helpful bug documentation around router service invocation concerns somewherenested router service transitionto invocation thisget router transitionto queryparams nestedparam current implementation router service specified query params used perspective implementation implicitly means setting due triggering model hook invoked need figure current implementation wrong eg rfc says inherit existing query params docs wrong eg expected behavior well documented", "d": "11/2017"}, {"body": "rwjblue notice embercli version param somewhereparam cleared never changes model hook never invoked embercli version noticed somwhereparam held onto causing changes model hook invoked", "d": "11/2017"}, {"body": "rwjblue line emberrouting looking entirely sure somwhereparam default value null expected somewhereparam really set idea removed query params list unless really changed since still default value reason include list changes perhaps understanding motivation entirely", "d": "11/2017"}, {"body": "rwjblue get work tests expected behavior would following implementation controllers keeping existing query params also actually set value would need change updated reproduction display value nt change also change stay triggering another router service transition nt trigger another model call also setting points attempt keep default query params", "d": "11/2017"}, {"body": "rwjblue opened would mind taking look giving pointers start fixing", "d": "11/2017"}, {"body": "rwjblue sorry bother still open would possible anyone else give pointers best fix", "d": "11/2017"}, {"body": "atomkirk great example reproduce issue", "d": "11/2017"}, {"body": "would love ember twiddle supports way update great tool love see updated", "d": "11/2017"}, {"body": "drop addons section choose channel dependencies", "d": "11/2017"}, {"body": "also error looks like mismatch ember versions template compilation output changed two versions error getting seems infer inline precompiled template recompiled new ember version template compiler", "d": "11/2017"}, {"body": "oh interesting followed upgrade instructions namely delete existing compiled stuff make sure packagejson deps got updated right versions suggestion try", "d": "11/2017"}, {"body": "atomkirk using embersource npm consuming via bower bower probably also want", "d": "11/2017"}, {"body": "fixed released", "d": "11/2017"}, {"body": "using still seeing mean maybe also noticed double nested making partial simply upgrading longer works separate bug", "d": "11/2017"}, {"body": "atomkirk yes lets treat separate bug would mind filing possibly creating failing test case like", "d": "11/2017"}, {"body": "averydev thanks reporting issue providing reproduction issue summary conditional display element click handlers result creating destroying elements associated handlers though use attach action handler dom attribute element event handler torn upon removal element though attr appear dom however using action attached dom attribute element create additional handlers time condition met order render element dom difference latter attach function dom element attribute appears way teardown event handler attached attribute short use style attaching event items destroyed recreated eg long list think traditional use attaching dom attribute registers callback events listented using event delegation thus adding extra event handlers sure solution automatic teardown function handlers elements removed due condition template gotchas using well think work around avoid use elements need created destroyed often primary benefit using recieve argument handler documentation utilize event object function parameter define event handler component designed receive browser event object assign action inline event handler template creates closure action receive event object argument see original implementation need receive argument use component define event handler component instead using action assigned attribute avoid leak bound event handlers used caution", "d": "11/2017"}, {"body": "inclined think bug ember framework provides various ways listen events tradeoffs using component event handler setup teardown properly", "d": "11/2017"}, {"body": "also mentioned forked twiddle example result regarding adding handlers element attribute", "d": "11/2017"}, {"body": "averydev updated forked twiddle show using component event handler see", "d": "11/2017"}, {"body": "hi pixelhandler thanks looking good thing plenty good alternatives likely perfect alternatives without listener downside particular rereading docs noticed following option first time forked twiddle result quick test cleans nicely great thinking bit surprised option nt clean given output html reason would characterize bug following reasons falls use framework type feature prevalent throughout docs personally expected leak listeners memory without additional effort fact formulation found docs throughout ember fact first two examples docs action helper show form also widely found addon docs instance emberconcurrency given doubt many ember developers think downside particularly common formulation explicit seems less magical bad thing also listener issue occurs regardless using etc particularly need something like also nt need creating destroying thousands items issue reason stumbled issue prolonged use app working currently gobbling tremendous amounts memory point prolonged usage would grind app halt reason think even single listener nt cleaned reference parent leading detached dom trees ca nt garbage collected culprit turned search field would filter results user typed listeners table rows could wrong pretty sure going", "d": "11/2017"}, {"body": "also nt anything specific causes issue would reason element removed template instance", "d": "11/2017"}, {"body": "believe bug", "d": "11/2017"}, {"body": "thanks heroiceric", "d": "11/2017"}, {"body": "hi like help task quite new emberjs contribution could point toward documentation needs updated new url structure", "d": "11/2017"}, {"body": "minimal bug repro took couple days taking away parts production app left js routesapplicationjs import route emberroutingroute import inject service emberservice import next emberrunloop import rsvp rsvp export default routeextend fastboot service model let deferred rsvpdefer thisget fastbootisfastboot thisget fastboot deferrendering deferredpromise js controllersapplicationjs import controller embercontroller export default controllerextend devdependencies", "d": "11/2017"}, {"body": "hitting app well seems big part us", "d": "11/2017"}, {"body": "finally knowledgeable enough ember project see going indeed exactly thanks patience", "d": "11/2017"}, {"body": "issue reproduction edit nevermind forgot component attributes still mutable default", "d": "11/2017"}, {"body": "guys completely sure solved twiddle serabe still fails works incidentally noticed modify partial write actually prints correct value", "d": "11/2017"}, {"body": "ember lts nt think fix coming", "d": "11/2017"}, {"body": "confirm", "d": "11/2017"}, {"body": "oh ok thought fix backported glimmer would meant working ember guess skip directly thanks", "d": "11/2017"}, {"body": "webark luck", "d": "11/2017"}, {"body": "pixelhandler nope event dispatcher never gets loaded whole file never gets loaded", "d": "11/2017"}, {"body": "really sure nt time clone reproduction test things sure going think general advice essentially avoid example would probably better work hook application route instead inside initializer know thats great answer think unblock things", "d": "11/2017"}, {"body": "closing bug ember framework", "d": "11/2017"}, {"body": "luck ember", "d": "11/2017"}, {"body": "nope", "d": "11/2017"}, {"body": "updated test repo", "d": "11/2017"}, {"body": "probably need bisect figure regression introduced nothing jumps changelog", "d": "11/2017"}, {"body": "nt", "d": "11/2017"}, {"body": "nt think rejecting without reason case rejection provided reason", "d": "11/2017"}, {"body": "built test repo diff output unable find anything obvious", "d": "11/2017"}, {"body": "believe addressed need test reproduction confirm", "d": "11/2017"}, {"body": "ok finally run issue ground doozy underlying principle tests rejected promises handled within run loop trigger unhandled rejection handler default calls fails current test generally speaking desireable ergonomics wise given test passes ember lt fails js test error function assert assertexpect thisset promise rsvpreject bar thisrender hbs return wait gt assertequal text error bar see following things happening create rejected promise queues unhandled rejection assertion invoke essentially invoke ultimately going instantiate component provided promise call primary difference ember versions unhandled rejection assertion delivered ember lt assertion queued ran flush run loop next tick eg since synchronous meant ember lt promise rejection handled time unhandled rejection assertion ran therefore assertion made ember versions include assertion queued ran flush next run loop means run loop ran assertion triggered therefore test fails unfortunately believe change behavior desirable remain different ways successfully test interaction made separate pr demo repo show pass pending promise either resolve reject needed chain rejected promise reset unhandled rejection state avoid assertion monkey patch swallow unhandled rejection assertion", "d": "11/2017"}, {"body": "believe new behavior correct though agree change behavior surprising going close happy reopen made mistake though", "d": "11/2017"}, {"body": "rwjblue thanks detailed explanation like look option give go happy closed favour shown neater way testing scenario thanks help", "d": "11/2017"}, {"body": "simonihmig jrjohnson caseywatts offirgolan alvincrespo perhaps post sheds light considerations running asyncawait", "d": "11/2017"}, {"body": "pixelhandler really rwjblue writing setting app test suite support async await issue async await promises fulfilled tests since ember knowledge stated happens target latest browsers need regenerator", "d": "11/2017"}, {"body": "thanks sharing pixelhandler related rwjblue blog post found asyncawait already totally helps tests ways ready used inside ember app code yet", "d": "11/2017"}, {"body": "hoping kickstart efforts enable probably track actual issue think predates issue bit try chime quick status update lay game plan krisselden coaching", "d": "11/2017"}, {"body": "locks closed favor documention issue elsewhere", "d": "11/2017"}, {"body": "lolmaus think opening issue glimmer repo", "d": "11/2017"}, {"body": "pixelhandler offending line ember repo even sure pure glimmer apps affected", "d": "11/2017"}, {"body": "ok completely rewritten emberelementquery addon ensure updates done efficiently current implementation element querydriven components register treelike structure root eq components react window resize event tell children resize resize event propagates recursively parents children ensures component update e window resize every eq parents realigns issue still happens eq components nested deep enough error crashes app continuous resize able work around issue wrapping event propagation parent children makes event propagation noticeable naked eye instead components realigning see realign sequentially makes native ember implementation element queries worse generic implementation commenting error throwing line renderer destroying line makes work correctly seems practical purpose putting spoke wheel angry please fix", "d": "11/2017"}, {"body": "laynegt luck", "d": "11/2017"}, {"body": "pixelhandler ran tried day bug still active", "d": "11/2017"}, {"body": "app transitioning route different param deactivate hook normally called however add postloadinghbs template make transition deactivate get called case definitely exiting would expect called certain super well understood try explain think disconnect bgentry example following route structure exists case move absolutely exit deactivate called", "d": "11/2017"}, {"body": "rwjblue explanation makes sense upon closer look think issue related one anyway sorry causing extra confusion issue describing bug parent route calls child route transitions loading though nt verified still exists", "d": "11/2017"}, {"body": "gotcha thanks clarifying bgentry believe explanation also applies original posters comment well words believe intentional desired behavior docs need updated make clear let think bug", "d": "11/2017"}, {"body": "ryanrishi luck using current version ember eg", "d": "11/2017"}, {"body": "seems issue krisselden time would mind poking one", "d": "11/2017"}, {"body": "gabrielgrant regarding documentation might worth updating didinsertelementdidrender docs explain done hook along proper workaround one exists right docs didrender say leverage didrender hook perform postprocessing dom component updated seems imply work creating pull request docs", "d": "11/2017"}, {"body": "cibernox issue need stay open", "d": "11/2017"}, {"body": "actually acceptance tests fine provided people nt use builtin global helper ones close", "d": "11/2017"}, {"body": "locks update one", "d": "11/2017"}, {"body": "closing favor", "d": "11/2017"}, {"body": "ykaragol curious still issue", "d": "11/2017"}, {"body": "pixelhandler nt test use workaround shown stackoverflow question", "d": "11/2017"}, {"body": "emberqunitasserthelpers addon specifically created handle scenario", "d": "11/2017"}, {"body": "fixed essentially reverts adds bunch tests", "d": "11/2017"}, {"body": "embertwiddle example seems work issue fixed", "d": "11/2017"}, {"body": "still breaks remove one one last characters remove one line inspector error", "d": "11/2017"}, {"body": "alonski yeah suspicious name glad work around using close", "d": "11/2017"}, {"body": "pixelhandler sure closed maybe add workaround cli ca nt create templates named templatehbs", "d": "11/2017"}, {"body": "mixonic update regarding direction ember closed", "d": "11/2017"}, {"body": "rwjblue mixonic added labels bugproposed feature", "d": "11/2017"}, {"body": "yes problem", "d": "11/2017"}, {"body": "anyone idea fix problem", "d": "11/2017"}, {"body": "nt think issue tested newly generated projects properly file importable testing system going close nt ember bug others still hitting either create issue emberjsguides repo going tutorial create issue embercliembercli repo either case repo demonstrates issue almost certainly needed us figure going", "d": "11/2017"}, {"body": "lucaszheng issue still exist ember", "d": "11/2017"}, {"body": "seems working properly ember likely fixed", "d": "11/2017"}, {"body": "pixelhandler fixed", "d": "11/2017"}, {"body": "also confirm windows", "d": "11/2017"}, {"body": "basic plan forward create separate addons would contain implementation would nothing targets support native include polyfill likely bring implementation emberjsemberjs depends extends native update emberdata use needed emberdata changes land release version land deprecations profit", "d": "11/2017"}, {"body": "rwjblue thanks detailed plan put todo list", "d": "11/2017"}, {"body": "repos", "d": "11/2017"}, {"body": "nathanhammond explain reason warning tradeoff changes gives advantage new versions changing", "d": "11/2017"}, {"body": "ever found way around problem", "d": "11/2017"}, {"body": "givanse upgraded ember nt seem issue anymore", "d": "11/2017"}, {"body": "would love reproduction original repro pretty date emberobserver client", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hmm exemplary use case ember key features debounce model refresh query parameters employing common pattern resource searching unfortunately way prevent query params reverted refreshing route", "d": "11/2017"}, {"body": "seems like last summer regression chrome reintroduced issue", "d": "11/2017"}, {"body": "tagname fixed", "d": "11/2017"}, {"body": "thx robclancy even need code like linkto sticky query params disabled default enable adding qp like", "d": "11/2017"}, {"body": "still issue ember surprised still nt tell nobody sorts id", "d": "11/2017"}, {"body": "ondrejsevcik use custom sorting function ember data ids strings", "d": "11/2017"}, {"title": "edge fails attributes test flaky", "body": "see also since started testing edge attributes often fails always first seen oct still today", "num": "3867", "d": "11/2017"}, {"title": "edge fails css test", "body": "last passing testswarm job jqueryjquery sep first failing testswarm job also first job runs edge oct ran edge css failure", "num": "3866", "d": "11/2017"}, {"title": "events bound inline runtime automatically deleted document load", "body": "description full description debugging process tldr binding input events runtime inline html events bound successfully runtime according event parent removed readded elsewhere dom using works replacement jquery alternatively setting prevents bound events deleted link test case", "num": "3864", "d": "11/2017"}, {"title": "process bar nt work edge", "body": "hello edge process bar nt work process event fire upload completed even use big file", "num": "3863", "d": "11/2017"}, {"title": "try see klg", "body": "ok see description link test case", "num": "3862", "d": "11/2017"}, {"title": "animate callback function executed animation completed latest jquery", "body": "hi upgraded jquery version code inside animation callback function executed animation completed executes next line click function p slidedown function consolelog inside consolelog outside jquery output jquery output sample link jquery sample link jquery expected result please let know concern thanks help advance regards keerthana", "num": "3861", "d": "11/2017"}, {"title": "jquery multi select issue", "body": "hi need use jquerypluginformultiselectlistwithcheckboxesmultiselect application ie plugin supporting please help code snippet viewbagtitle home page select multiple multiselect columns placeholder select options thanks divya jquerypluginformultiselectlistwithcheckboxesmultiselectzip", "num": "3859", "d": "11/2017"}, {"title": "errors ff quantum", "body": "get web console following messages loading jquery syntaxerror test equality mistyped assignment weitere informationen referenceerror reference undefined property delegatetype weitere informationen referenceerror reference undefined property nodetype weitere informationen syntaxerror test equality mistyped assignment weitere informationen referenceerror reference undefined property delegatetype weitere informationen referenceerror reference undefined property focusout weitere informationen referenceerror reference undefined property nodetype weitere informationen referenceerror reference undefined property triggered weitere informationen referenceerror reference undefined property offsettop weitere informationen referenceerror reference undefined property triggered weitere informationen referenceerror reference undefined property result weitere informationen referenceerror reference undefined property type weitere informationen referenceerror reference undefined property uniqueid weitere informationen referenceerror reference undefined property traditional weitere informationen referenceerror reference undefined property username weitere informationen referenceerror reference undefined property weitere informationen referenceerror reference undefined property weitere informationen referenceerror reference undefined property altkey weitere informationen referenceerror reference undefined property start weitere informationen referenceerror reference undefined property disabled weitere informationen", "num": "3853", "d": "11/2017"}, {"title": "ready callback might called load event fired", "body": "description certain circumstances callbacks following code would called unexpected order windowaddeventlistener load function e consolelog native load true documentaddeventlistener domcontentloaded function e consolelog native domcontentloaded true function consolelog jquery ready window load function consolelog jquery loaded would always expect following output possible create test case output like switched personally would say order followed never happen given code might opinion based therefore nt want insist opinion think least adjust following section documentation point behaviour ready note although dom always becomes ready page fully loaded usually safe attach load event listener code executed ready handler opinion section currently targets issue snipped link test case", "num": "3852", "d": "11/2017"}, {"title": "suggestion rename isarraylike function add comment", "body": "description hi read corejs yesterday confused used real function used checking also find duplicate issues reported bugs like yeah find owner replied saying clear document type passed array object users fault read document still unreasonable use name would add comment function rename function", "num": "3850", "d": "11/2017"}, {"title": "angular uncaught referenceerror jquery defined object", "body": "hello migrated app angular angular stops loading gives error uncaught referenceerror jquery defined object bootstrapjstransitionjs using angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router angular cdk angular cli angular material angulardevkit buildoptimizer angulardevkit core angulardevkit schematics ngtools jsonschema ngtools webpack schematics angular typescript webpackhotmiddleware webpackmerge webpack latest jquery please advise", "num": "3849", "d": "11/2017"}, {"title": "jq find xml colon prefixes dont work", "body": "xml file prefixes part try use prefixes get function xml done function xml consolelog xml work fine show full document nothing console dont work let xml find number text consolelog work fine many nodes show nodes prefixes like bb number aa number let xml find nodename bb number text let xml find nodename number text let xml find nodename bb number text consolelog nothing console dont work work find cant use prefixes children use prefixes", "num": "3848", "d": "11/2017"}, {"title": "jquery exception method offset window object getclientrects supported", "body": "hi call window offset get exception saying object support method getclientrects sorry german using jquery following version", "num": "3847", "d": "11/2017"}, {"title": "importing jquery electron applications", "body": "tried import jquery electron application like usual nothing happened therefore searched online found solution stackoverflow add script beginning importing jquery typeof module object windowmodule module module undefined", "num": "3846", "d": "11/2017"}, {"title": "wrong link description type definitions", "body": "description add type definitions vscode want call jquery method link description redirects official jquery website wrong link test case notice end link", "num": "3845", "d": "11/2017"}, {"title": "jquery update question", "body": "sure js file would need update website template stopped scrolling using wheel chrome browser already tried updating jquerymousewheeljs script nt seem fix nt want go replacing unneeded files someone could provide insight posted wrong nobody answers understand guessing decent amount contributors seen already hoping guess description scrollwheel scroll chrome link test case wwwelastikus", "num": "3843", "d": "11/2017"}, {"title": "base href getting ignored ajax request made", "body": "description link test case", "num": "3842", "d": "11/2017"}, {"title": "jquery internet explorer edge isplainobject fails passed object created child browser window", "body": "simple html page lets say opens new browser window using windowopen function loads another html page lets say creates simple object window note object created child browser window try execute main browser window following error thrown typeerror functionprototypetostring function object working fine jquery stopped working jquery using following versions ie edge ie update versions edge microsoft edgehtml tested windows windows firefox google chrome issue created zip simple demo reproduces issue attached zip contains readmetxt detailed instructions reproduce error jquerytestzip slightly updated sample demo jquerytestupdatedzip", "num": "3841", "d": "11/2017"}, {"title": "ajax post network errors returned", "body": "description using ajax post propagate network errors callback replicated using following code results blank error empty string see behavior internet connection post fails get error back empty string errors appear console ca nt anything error using chrome", "num": "3839", "d": "11/2017"}, {"title": "ajax post json body bug", "body": "send reason jquery send get request body request params en devtools shows", "num": "3838", "d": "11/2017"}, {"title": "tooltip nt work assigned function", "body": "sure bootstrap issue jquery issue function creates divs appends inputs example placed js called functionsjs bodyjs html head title showing normal title bootstrap tooltip showing tried moving tooltip initializer top functionsjs wrapped document ready still nothing", "num": "3837", "d": "11/2017"}, {"title": "getting cssstyle attribute order flex boxes fails large numbers", "body": "description getting order css style element using jquery css method returned number exponentialized sp larger numbers leading errors order needs used computation eg move items around programmatically seems occur larger numbers possibly negative numbers well smaller numbers eg less sure actual range triggers problem link test case extracted actual code maybe bigger needs example sorry", "num": "3836", "d": "11/2017"}, {"title": "mouse wheel event eoriginaleventoffsety bug", "body": "description hi use find mouse wheel scroll value set scroll neither bug link test case", "num": "3835", "d": "11/2017"}, {"title": "replacewith method bug fall creator update edge browser", "body": "hello using edge fall creators update html page global javascript code executed two times dynamically adding javascript working fine html thanks st\u00e9phane", "num": "3834", "d": "11/2017"}, {"title": "add main key file bowerjson", "body": "description noticed performing command bowerwiredep plugin nothing happen html file entered bowerjson fixed like picture please fix", "num": "3833", "d": "11/2017"}, {"body": "hmm mail claims ticket refered safari well also still fails tests core ones precise moved separate issue though", "d": "11/2017"}, {"body": "mgol yeah edited ticket creation ticket previously mentioned support test failing safari started testing already fixed", "d": "11/2017"}, {"body": "need use instead course", "d": "11/2017"}, {"body": "appears case code changes affecting likely outcome race condition jquery animations resolve synchronously millisecond duration short enough almost always elapsed time check completion first tick computer ms seems always avoid synchronous completion ms pretty much coin flip however convinced problem jquery require asynchrony recommend using example inside completion callback also reconsider short animation first would probably cleaner set properties immediately without animation construct promise asynchronous handling", "d": "11/2017"}, {"body": "decided meeting leave open hopefully abandon synchronous resolution updating jqueryfxstart schedule first tick zeroduration timeout also fix stutter animating collection first element gets head start", "d": "11/2017"}, {"body": "jquery repository jquery multiselect repository report issues plugin plugin authors also jquery longer supports ie version longer provide support older versions", "d": "11/2017"}, {"body": "could possibly debug test case copypaste information firefox console close please create new issue following instructions issue template", "d": "11/2017"}, {"body": "ps firefox quantum ubuntu firefox windows say nothing", "d": "11/2017"}, {"body": "maybe browser bug option thanks answer", "d": "11/2017"}, {"body": "would mistake assume direct connection window load event asynchronous jquery ready callback happen either order latter particular affected native events also jquery loaded ca nt even guarantee follows native domcontentloaded rely standards compliance browser given extremely unlikely add guarantees around behavior open issue pull request feel like documentation poor job expressing", "d": "11/2017"}, {"body": "determines object treated array determines across browsers tricky confusing sometimes however purpose aligns name also internalprivate function long understand passed think good", "d": "11/2017"}, {"body": "please look programming help stack overflow", "d": "11/2017"}, {"body": "jquery nt support querying namespaced tagsattributes", "d": "11/2017"}, {"body": "also note selector supposedly looking attribute none exists seems depending propertyattribute confusion older jquery come ancient stackoverflow thread maybe need look property try using instead", "d": "11/2017"}, {"body": "duplicate think though maybe make obvious upgrade guide api page", "d": "11/2017"}, {"body": "calling method way jqueryui influence reading manual help case change method like following elem return elements outside body body offset thisparents body length return top left return zeros disconnected hidden display none elements support ie lt running getboundingclientrect disconnected node ie throws error elemgetclientrects amp amp elemgetclientrects length return top left avoid unnecessary errors", "d": "11/2017"}, {"body": "version jquery ui older jquery ui version wo nt work newest jquery silencing errors often bad idea masks errors hit another way", "d": "11/2017"}, {"body": "yep right jqueryui maybe update though window document body would expect result change would produce best course call method objects since result rather na perspective avoid silencing errors exception like call method offset kind object may helpful explicitly point went wrong", "d": "11/2017"}, {"body": "upgrade guide jquery migrate already cover case neither used reason come older version ui tried valid used nothing long using recent version ui jquery migrate old version problem goes away error handling hard yes everyone would love specific error messages every case case could could something right inside jquery says noticed code tried call valid using jquery ui please make sure using recent version jquery ui fixed problem library would times larger error messages like sprinkled around code nt put minified version save space people still run mysterious problems upgrade plus already something similar migrate nt used", "d": "11/2017"}, {"body": "dmethvin nt thinking error messages embedded jquery rather mentioning upgrade guide entry offset far obvious makes invalid orand api page", "d": "11/2017"}, {"body": "use import jquery electron see amp details", "d": "11/2017"}, {"body": "nt maintain typescript definition file done report issues repo vs code depending bug", "d": "11/2017"}, {"body": "please look help stack overflow place report bugs support requests", "d": "11/2017"}, {"body": "thanks opening issue however create test cases need local files would make easier us assess issue", "d": "11/2017"}, {"body": "confirmed seems like edge bug possibly intentional one since appears limited opposed iframe windows going method parent window functionprototype rejecting child window function constructor plain objects child realm function object contrary ecmascript specification builtin function object one inherits functionprototype parent realm unfortunately nt think anything without introducing false positives", "d": "11/2017"}, {"body": "create jsfiddle shows bare xhr", "d": "11/2017"}, {"body": "mean say bare xhr", "d": "11/2017"}, {"body": "example using jquery thing", "d": "11/2017"}, {"body": "seeing behavior guess issue actually jquery library underlying xhr tried looking error event also nt provide error either seems problem unsolvable alas", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "jquery github bootstrap github please open issue", "d": "11/2017"}, {"body": "jquery issue closing", "d": "11/2017"}, {"body": "thanks opening issue lot code test case please try reduce future inlining code eg getting rid flexorder method removing nonrelevant logic amp test cases etc case able see going though returning returns see firefox amp safari nt change representation number could report issue chrome bug tracker please link thanks", "d": "11/2017"}, {"body": "really nt see use case big number value might want handle problem way regardless nt think anything", "d": "11/2017"}, {"body": "please create test case jsfiddle jsbin show issue", "d": "11/2017"}, {"body": "hi use lasted version jquery happened", "d": "11/2017"}, {"body": "thanks opening issue however please create test case much convenient debugging", "d": "11/2017"}, {"body": "test case", "d": "11/2017"}, {"body": "might need fixed edge like dig make sure taking different code path browsers", "d": "11/2017"}, {"body": "confirmed jquery ignores svg script content type evaluates everything ecmascript breaking mechanism use suppress early evaluation edge bug report", "d": "11/2017"}, {"body": "thank investigating", "d": "11/2017"}, {"body": "entry already repo via publish npm amp bower one", "d": "11/2017"}, {"body": "need test case order assess possible issue preferably jsfiddlenet jsbincom", "d": "11/2017"}, {"body": "far tell ca nt really work around obfuscate problem let edge fix", "d": "11/2017"}, {"body": "workaround offset diff documentelement getboundingclientrect element getboundingclientrect recall correctly", "d": "11/2017"}, {"body": "right offset element e calculated maybe bit esoteric edgecase page adds offset transform documentelement result relative transformed documentelement rather scroll origin differs current semantics maybe ok", "d": "11/2017"}, {"body": "would like work issue", "d": "11/2017"}, {"body": "saptaks feel free", "d": "11/2017"}, {"body": "saptaks see", "d": "11/2017"}, {"body": "getting problem npm inside urlindexof function edit indexof deprecated function part gets called use window load function nt kind error would expected load calling fnload nt", "d": "11/2017"}, {"body": "accompanying pr definition change request good application csp important application forecast added core", "d": "11/2017"}, {"body": "updated pr requested changes although see may gotten missedlost due thread marked outdated", "d": "11/2017"}, {"body": "pr progress", "d": "11/2017"}, {"body": "progress appears still issue version windows", "d": "11/2017"}, {"body": "pull requests welcome", "d": "11/2017"}, {"body": "shorthands nt likely ever removed wait major version new version jquery migrate deprecate", "d": "11/2017"}, {"body": "lpdau waiting major version would nt help reducing usage shorthands besides according semver deprecations free land minor releases", "d": "11/2017"}, {"body": "nt mean always especially widely used part library canonical example show jquery elegance native js nt documented anywhere bad style rush deprecate later removal imminent major release probably already pushed back make wait official expect usage fall anyway among developers already transitioned removed migration plugin", "d": "11/2017"}, {"body": "nothing broken deprecation nt make sense undeprecate feature get rid warning migrate either ignore warning override loading migrate get rid change code generating warning", "d": "11/2017"}, {"body": "undeprecate missing issue still open marked unreleased milestone nt documented anywhere find", "d": "11/2017"}, {"body": "think safe deprecate next version getting removed code broken", "d": "11/2017"}, {"body": "composerjson require add bowerassetjqueryui", "d": "11/2017"}, {"body": "wish spec gave way specify default event options globally type kind silly majority events dont use nt willing change default behavior get support legacy expectations touchstart still bit funny majority handlers feature detect new support standard libs patched support low level api change compounding issue recent chrome versions standard touch detection returns true windows browsers meaning whole mess ca nt avoided feature detecting avoiding touch events anyways grievances aside looking forward solve kind chores abstracted libraries like jquery saves much headache", "d": "11/2017"}]