[{"title": "would nt cool classname could inject object classset", "body": "sort stray thought classname could pass object addon", "num": "1766", "d": "6/2014"}, {"title": "key enter anchor fire click event", "body": "key enter focused anchor fires click event raw dom react mimics browser behaviour", "num": "1764", "d": "6/2014"}, {"title": "inbrowser transformer warn typejsx script nt jsx comment", "body": "inbrowser transform typejsx script jsx processme comment emit warning browser syntax error reporting pretty much useless least firefox says syntax error pointing script tag includes react something equally unhelpful surprised nt find existing issue ca nt first person lose bunch time nt", "num": "1762", "d": "6/2014"}, {"title": "adding getdefaultcontext method", "body": "realizing context undocumented api may change wanted see anyones thoughts might adding possible add reliable defaults context prop defined making possible write stricter definitions", "num": "1756", "d": "6/2014"}, {"title": "reactchildrenforeach reactchildrenmap etc check arguments", "body": "accidentally forgot pass passed callback function first could throw error passing first argument see happy make change desirable", "num": "1755", "d": "6/2014"}, {"title": "add failfast mode react", "body": "using components missinginvalid prop warning logged child key provided would like error thrown instead already discussed issues like way totally support related issue ensure proper proptype documentation components would require error instead warning fail dev better would nice able use react strict way using configuration attribute something one thing would probably add enforce components name see", "num": "1753", "d": "6/2014"}, {"title": "express required children proptype", "body": "hi want component least one required children children singe element array easy avoid useless array allocation according doc nt know simplest way come syntax guess usecase quite common people building modals things like maybe would nice simpler way express children required maybe job kind guarantee children prop never different type", "num": "1752", "d": "6/2014"}, {"title": "incorrect component name using jsx browserify", "body": "big deal browserify cases react component name correctly inferred variable name assigned like normally case jsx transformation works fine produce error messages like error message component name correctly inferred another kind node module declaration work quite annoying easy know component nt inject required props guess usecases case react class assigned guess component name rather filename nt know bug feature request wanted mention", "num": "1751", "d": "6/2014"}, {"title": "datetime attribute element disallowed react", "body": "render time element see react throws away datetime attribute bad screenreadersmicroformats use get semantic meaning see", "num": "1749", "d": "6/2014"}, {"title": "testing component", "body": "hi component class eleventhenvelopesreactlist param eleventhenvelopesstorage storage constructor constructor storage want write test example component generate text test react require processcwd bowercomponentsreactreactwithaddons reacttestutils reactaddonstestutils renderintodocument iscompositecomponent reacttestutils expect require chai list eleventhenvelopesreactlist suite eleventhenvelopesreactlist list setup list new list list listcreate envelopes suite list result react components valid mounting passing failing eleventhenvelopesreactlist list generate ul list typeerror object false method mountcomponentintonode figure test component still errors could find good article thanks", "num": "1746", "d": "6/2014"}, {"title": "popups opened handlers get blocked browsers", "body": "nt happen use bind function opens popup", "num": "1745", "d": "6/2014"}, {"title": "make sure polyfill list date", "body": "need sure added others recently", "num": "1744", "d": "6/2014"}, {"title": "question regarding todomvcflux example dispatching actions", "body": "unsure ask let know post somewhere else question regarding todomvcflux example dispatching actions flux watching video describing flux architecture presenter mentioned action goes store ca nt put another one stores completely finished processing presenter mentions several times later video supposed principle property flux architecture looking todomvcflux example nt seem obey property", "num": "1743", "d": "6/2014"}, {"title": "setstate callback componentwillmount", "body": "calling nt behave would expect fiddle demonstrating short callback invoked state updated", "num": "1740", "d": "6/2014"}, {"title": "support asynchronous server rendering waiting data rendering", "body": "would seriously ease process building something isomorphic componentwillmount could return promise react would delay rendering promise resolved seen attempt something like reactrouter rrouter however giving responsibility component instead router module would make sense", "num": "1739", "d": "6/2014"}, {"title": "flux test use multiple instances singleton like todostorejs", "body": "read test use multiple instances singleton like todostorejs better choice instance store pass sub views", "num": "1735", "d": "6/2014"}, {"title": "stopimmediatepropagation support", "body": "would good support current use case following onclick ontouchend event attached touch event supporting devices trigger event handler twice natively supported simple polyfill easy since react already synthetic event system", "num": "1734", "d": "6/2014"}, {"title": "test application written react via casperjs", "body": "hi using casperjs testing problem inicialize react component reactjs pahtomjs casperjs osx example chrome add ok casperjs test missing somecomponents wrong thanks", "num": "1733", "d": "6/2014"}, {"title": "using data tag instead span data binding", "body": "hey running bit caveat using reactjs noticed binding data irrespective elements inserts tag tags commonly styled might make sense use tags instead", "num": "1732", "d": "6/2014"}, {"title": "nt reactjs passthrough unknown dom properties", "body": "instance moment contains valid attribute however reactjs baby nt understand attribute instead assuming developer knows hell strips leaves lovely comment console incredibly frustrating nt want strip attributes nt understand want pass addition react inability provide adequate support attributes existed since html happens html spec changes new attributes available existing elements bug issue provided related attribute react inability trust developer knows real bug react assumes developer know strips unknown attributes fear much less ideal remedied", "num": "1730", "d": "6/2014"}, {"title": "supported api making new event types ie event plugin injection", "body": "trying implement scrollable list items tappable mobile devices looks like two plugins address tap problem amp confused plugins nt mentioned docs unclear things build runtime require recompilation grunt plugin system flux love help getting merged developing mobile apps straightforward", "num": "1729", "d": "6/2014"}, {"title": "reactchildrenonly throw", "body": "find self using makes thing complex also seems performance issues got right found self writing component need react different array using amp made things complex issue would nice returns seems missing something", "num": "1728", "d": "6/2014"}, {"title": "add displayname nested render warning", "body": "informative error message see", "num": "1726", "d": "6/2014"}, {"title": "investigate firefox sourcemap issues", "body": "reported irc today confirmed master ff nightly also", "num": "1725", "d": "6/2014"}, {"title": "react freeze component", "body": "feature allow stubspy component methods properties test", "num": "1723", "d": "6/2014"}, {"title": "mutating element attributes leaves behind empty ones", "body": "links writing disabled leaving href undefined first renders disabled html dom get looks like state changes rerendered enabled looks like good far however disables href attribute left value means still gets styles link receive focus consistent disabled states", "num": "1722", "d": "6/2014"}, {"title": "iframes nt update src change", "body": "seems like src iframe immutable order update url iframe points required use reactkey cache buster change react recreate iframe src prop changes", "num": "1720", "d": "6/2014"}, {"title": "iframe onload event react", "body": "following iframe element rendered one react components html tried adding event well attaching directly dom like function react component except wo nt work set attribute iframe look function global scope set iframe wo nt recognize react component function short want notify react component whenever url changes inside iframe", "num": "1718", "d": "6/2014"}, {"title": "event info lost handler delayed", "body": "porting app react ran issue everything event null event handler uses settimeout example believe underlying issue feels like bug worth fixing since event handlers work native dom events jquery break ported react", "num": "1717", "d": "6/2014"}, {"title": "allow custom proptypes chainable", "body": "way make custom proptype required would useful maybe form createchainabletypechecker factory could exposed", "num": "1715", "d": "6/2014"}, {"title": "require rendering dom", "body": "writing value final textarea html creates invalid html markup appears unnecessary proper functionality admittedly test minimal removing object using rendered valid html component still worked properly browser passed tests perhaps supporting serverside rendering purpose rendering real dom", "num": "1714", "d": "6/2014"}, {"title": "stateful imperative bridge wraps react components", "body": "ideally also include way wrap react component web component used deprecate regular components", "num": "1711", "d": "6/2014"}, {"title": "reactcsstransitiongroup leaves dom nodes classes", "body": "sequence fast changes adddelete operations nodes left stuck classes state modifications change rendered dom tree console multiple warnings test page place cursor input field type l type backspace fast repeat step times easily reproduces could also reproduced chrome", "num": "1707", "d": "6/2014"}, {"title": "react addons production file nt ship testutils", "body": "page download file behind link react addons production compressed production version react addons linked file nt seem embed testutils described part addons nt expecting see production assets shipping test utilities description misleading", "num": "1706", "d": "6/2014"}, {"title": "ease stubbing component methods", "body": "working project porting code react use sinon mocks hard times stubbing component spec methods could check called appropriately given certain context js var comp reactcreateclass displayname comp plop function consolelog plop render function thisplop return reactdomdiv null foo var stub sinonstub comptypeprototype plop reactaddonstestutilsrenderintodocument comp sadly keeps printing plop onto fails sinonassertcalled stub throws expected intended behavior bug alternate suggestions achieve note directly stubbing spec object method works export component constructor spec separately available also need stub spec even creating component class convenient js var compspec displayname comp plop function consolelog plop render function thisplop return reactdomdiv foo var stub sinonstub compspec plop var comp reactcreateclass compspec reactaddonstestutilsrenderintodocument comp plop properly stubbed sinonassertcalled stub pass would great original spec object attached component would ease stubbing part test env obviously attached spec one used internally work maybe could even feature available dev thoughts", "num": "1705", "d": "6/2014"}, {"title": "reusing markup silently fails first child textnode", "body": "suppose rendering following server client case serverrendered markup reused firstchild body element text node containing new line therefore shouldreusemarkup reactmountjs evaluates false react even try reuse markup performs innerhtml operation page load instead following serverside works intended think counterintuitive first variant fails reuse markup silently either fixed documented possible solution could ignore first child text node use second child instead", "num": "1704", "d": "6/2014"}, {"title": "findcomponentroot error foundation modal plugin", "body": "xpost mailing list hi working project uses foundation modal system run bit painpoint seems whenever modal launchescloses foundation manipulates dom special way result react virtual dom loses track going react event handlers break since dom changed created plunk illustrate basically want button within modal utilise react onclick event handler call clickbutton function dice see upon clicking button get following error console tried combination things including using forceupdate conjunction foundation modal event system ca nt get things work question related assistance appreciated cheers dhruv bhatia", "num": "1703", "d": "6/2014"}, {"title": "build fails node due microtime", "body": "node step nt complete microtime build fails fixed related issue tested build upgrading microtime works fine", "num": "1701", "d": "6/2014"}, {"title": "better docs", "body": "zpao docs forms could clearer mentioning put array attribute usage example likely cc sompylasar", "num": "1700", "d": "6/2014"}, {"title": "discussion prebuilt binaries distribution", "body": "nice prebuilt binaries available current package managers right prebuilt package bower nice also npm component nlzio think best way create maintain packages cc zpao", "num": "1699", "d": "6/2014"}, {"title": "controlled input cursor jumps used layers", "body": "see try typing beginning text box", "num": "1698", "d": "6/2014"}, {"title": "wrong url tagtreetv documentation video section", "body": "someone try get tagtreetv documentation video section url section thinking react tagtreetv tagtreetv video conveying principles thinking react building simple app url htp tagtreetv instead", "num": "1697", "d": "6/2014"}, {"title": "jsx transform difficult compose", "body": "hi would like use available transforms jsx transform javascript code using js var transform require jstransform transform var visitors arrayprototypeconcatapply require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require transformsreact visitorlist require transformsreactdisplayname visitorlist var transform visitors sourcecode problem difficult use jsx transforms without depending whole package would essentially download lot dependencies another jstransform etc two files copied transforms directory source tree obviously bad solution would nt better put jsxtransforms separate npm package also found reference something called vendorfbtransformsyntaxjs appropriate visitor nt seem open source example essentially skipped typecheck code syntaxjs could problem future awesome library way", "num": "1695", "d": "6/2014"}, {"title": "using listento instead removelistener flux", "body": "noticed demo flux js var todoapp reactcreateclass getinitialstate function componentdidmount function todostoreaddchangelistener thisonchange componentwillunmount function todostoreremovechangelistener thisonchange render function onchange function thissetstate gettodostate got problem backbone solved method called introducin similar solution react solve similar problem", "num": "1694", "d": "6/2014"}, {"title": "improve testing documentation", "body": "agree general consensus testing react breeze thinking might good benefit new users updated documentation page examples api method nothing exactly clear first wanted start writing tests dig react source code order find implementation details still idea use despite tries descriptors nt even know test without testutils anymore currently given testing react components examples follow", "num": "1693", "d": "6/2014"}, {"title": "improve stack trace errors render", "body": "useful information stack trace exception render saying nt tell one unfortunately chrome dev tools accept displayname idea update jsx transform already adds displayname also output crazy pattern makes stack trace look better discussion twitter", "num": "1692", "d": "6/2014"}, {"title": "events propagate nested components stoppropagation", "body": "using reactbootstrap modals site full page rendering nested react rendering events propagated ancestors calls inner component hierarchy respected outer component hierarchy complicating matters syntheticevent created afresh dispatch component hierarchy stoppedpropagation equivalent called syntheticevent constructor even eventpluginutilsjs checked single callback case would still return false tracking propagationstopped status return value looks tricky given may map single nativeevent multiple synthetic events easiest fix may set custom property nativeevent object check constructor check single callback case", "num": "1691", "d": "6/2014"}, {"title": "click events fired mobile long touchclick", "body": "hi problem using react android make long touch eg button click even fired press quickly everything works expected get touchstart mousedown touchend long clicks even nt set reactinitializetouchevents true experience behavior release also build fresh master", "num": "1690", "d": "6/2014"}, {"title": "problem installing reacttools windows node bits npmdebug", "body": "full npmdebuglog error lines error git clone git githubcomariyaesprimagit cloning bare repository c error git clone git githubcomariyaesprimagit fatal write error invalid argument error error enoent chmod c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error need help may report entire log error including npm node versions error error system windowsnt error command c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install g reacttools error cwd c error node v error npm v error path c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error fstreampath c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error fstreamtype file error fstreamclass filewriter error fstreamfinishcall chmod error code enoent error errno error fstreamstack c program error fstreamstack objectoncomplete verbose exit true", "num": "1689", "d": "6/2014"}, {"title": "contributors jade react compiler transformer", "body": "hey wrote jade react compiler transformer solve interesting problem make react dryer jadereactcompiler library supports major features jade including javascript fragments would anyone facebook community interested contributing helping maintain library", "num": "1688", "d": "6/2014"}, {"title": "handling table rows mutations row spans", "body": "trying display data array table one property also array listing table last entry subarray displayed column property want make table entry clicked toggles expanded version rows added entry subarray since columns value want take advantage rowspan attribute representations work really well initial render starts acting try toggle state dynamically", "num": "1686", "d": "6/2014"}, {"title": "csstransitiongroup throws error child removed", "body": "contains single child passed directly wrapped displaying child work fine removing child throw demo easy workaround wrap child component array demo check whether actual object intended passing single component without array wrapper supported", "num": "1684", "d": "6/2014"}, {"title": "add possibility set name html attribute via variable", "body": "jsx file value html attribute could variable eg name produces", "num": "1683", "d": "6/2014"}, {"title": "uncaught object invariant", "body": "getting error nt give much context causing happens updating store component listens changes update state error mean console", "num": "1681", "d": "6/2014"}, {"title": "rendercomponenttostring reflect value", "body": "appear render selection state elements given example html", "num": "1680", "d": "6/2014"}, {"title": "terse test utility methods", "body": "", "num": "1679", "d": "6/2014"}, {"title": "reactlink update input state changes null undefined", "body": "reset state variable input control nt change reset empty string change", "num": "1678", "d": "6/2014"}, {"title": "synthetic event simulation share dispatch logic event plugins", "body": "right reacttestutils takes care accumulating dispatches simulating synthetic events logic event plugin instead mouseentermouseleave work perhaps necessary logic event plugin simulate events cf", "num": "1677", "d": "6/2014"}, {"title": "jsx nt handle parenthesization", "body": "unit test fails javascript handle parenthesis expressions function var code jsx reactdom join n var result jsx reactdom component x b join n steps past inner expression parenthesis expression therefore nt range possible skip past insert", "num": "1673", "d": "6/2014"}, {"title": "way wrapper get notified child layout changes", "body": "seems way wrapper component get feedback children changing layout wanted implement demo vjeux context wrapper unless something wrong quite possible automatically scroll initial example talking spicyj reactjs told indeed something would need addressed one point", "num": "1672", "d": "6/2014"}, {"title": "svg linear gradient defined", "body": "trying render svg image linear gradient defined results javascript exceptions lineargradient defined checkout fiddle", "num": "1670", "d": "6/2014"}, {"title": "docs nav noisy", "body": "lot stuff left nav docs would great someone could clean make little easier digest", "num": "1669", "d": "6/2014"}, {"title": "unrecognized entities give strange", "body": "compile jsx turns seems subpar expect throw error", "num": "1667", "d": "6/2014"}, {"title": "rendercomponenttostring rendering different datareactid run", "body": "whenever run rendercomponenttostring backend returns components different run change backend render checksums indexjs template", "num": "1666", "d": "6/2014"}, {"title": "improve form inside form error message", "body": "take look error console terrible error uncaught object least ask render form inside form console give better really helpful case", "num": "1665", "d": "6/2014"}, {"title": "select tag defaultvault nt work certain conditions", "body": "ran inconsistency trying use select tag also generating options values options provided component initially rendered case getting options ajax call nt correctly set subsequent calls still works expected scenario providing complete array options view constructor test case jsfiddle linked sure expected behavior case ghost thanks", "num": "1663", "d": "6/2014"}, {"title": "missing svg tags attributes", "body": "note maintainers starting react complete support subset svg specifications actually implemented browsers find missing attribute tag work correctly please write comment note factory functions might provide tags able use directly missing ones use jsx translates supports tags inherently", "num": "1657", "d": "6/2014"}, {"title": "ide support", "body": "hi plans integrate react netbeans already amp javascript support thank advance mic", "num": "1656", "d": "6/2014"}, {"title": "couchapp examples", "body": "hi couchapp examples available thank advance mic", "num": "1655", "d": "6/2014"}, {"title": "ca nt reuse components renders", "body": "apologies wrong place ask question thought might better explained somewhere nt ephemeral irc storing instance trying reuse results error recently started wondering descriptors desired behavior concession sake performance seems like good reasons memoization worryfree duplication etc would preferable react mutate could reused thanks", "num": "1654", "d": "6/2014"}, {"title": "reactaddonsupdate correctly descend array items", "body": "currently reactaddonsupdate helper support changes array items internal reason implemented yet would great able something like javascript thisstatephotos src caption cool photo src caption super cool photo var changedphotos reactaddonsupdate thisstatephotos change second photo src set newphotojpg thissetstate photos changedphotos", "num": "1653", "d": "6/2014"}, {"title": "error invariant violation reactmount two valid unequal nodes", "body": "getting error locally due seems like element fiddle reproduce error fiddle seems source images web error goes away update local use images found fiddle error locally goes away locally use eg react gets unhappy see fiddle app wizzard navigate slowly encounter error locally navigate fast error appears remove images get error matter", "num": "1650", "d": "6/2014"}, {"title": "autoplay attribute", "body": "reason work react something wrong", "num": "1649", "d": "6/2014"}, {"title": "add ability inject virtual html attributes reactdom", "body": "add ability define virtual attributes html elements would allow semantic attributes declared would applied modify attributes element could declared way javascript callback would given access attribute value allow modify attributes element function hiddenattribute value attributes value attributesstyle attributesstyle attributesstyledisplay none reactdeclareattribute hidden hiddenattribute using jsx javascript jsx reactdom jsxns core core common common var mycomponent reactcreateclass render function return outputs html would elements custom components however one use element would inherit hidden attribute writing nt able think useful attributes perhaps useful single use case buyin concept like happy attempt implementation thought propose see would beneficial anyone else different kind attribute", "num": "1648", "d": "6/2014"}, {"title": "reactproptypesrenderable vs", "body": "validate reason asking sometimes use statements arrays without clause coffeescript evaluates coffeescript isvisible false isvisible reactdomspan evaluates causes warning however following construct passes isvisible false isvisible reactdomspan else null evaluates please forgive different latest version repro react javascript var react todolist error react require reactaddons todolist reactcreateclass displayname todolist proptypes children reactproptypesrenderableisrequired render function return reactdomdiv thispropschildren consolelog consolelog test consolelog consolelog try consolelog reactrendercomponenttostring todolist reactdomspan null catch error error error consoleerror fail consolelog pass consolelog consolelog test consolelog consolelog try consolelog reactrendercomponenttostring todolist reactdomspan void catch error error error consoleerror fail consolelog pass output test pass test warning invalid prop supplied expected renderable prop pass", "num": "1647", "d": "6/2014"}, {"title": "supported", "body": "supported filter fegaussianblur tags", "num": "1646", "d": "6/2014"}, {"title": "create reactchildrenfilter", "body": "function filter children would useful common case implementing like map foreach etc traverses index index current depth depth first level increasing thereafter jsx var showmore reactcreateclass render function var children showmore thisstateshowmore showmore function thissetstate showmore true limit function child depth return depth gt lt thispropslimit getinitialstate function return showmore false", "num": "1644", "d": "6/2014"}, {"title": "whitespace inline elements", "body": "nt whitespace inline dom elements separated line break think example describes situation pretty well right workarounds pretty ugly either css nt get started manual whitespace inside inline elements quite nonsemantic hope duplicate earlier issue research cheers", "num": "1643", "d": "6/2014"}, {"title": "updating parent component child unmount", "body": "code looks something like root component shows changing list items currently hovered note mouse last component disappears selection stuck component nt reset null uncomment line componentwillunmount attempt tell parent unset active property throws error unmounting active item parent currently middle reconciling children currently place allow state updates seems like maybe best solution parent smarter realize removing active child unset state property though nt see super clean way right nt need know anything makes item active seems nicer keep way possible sebmarkbage thoughts cc zgotsch", "num": "1641", "d": "6/2014"}, {"title": "thoughts making reactlibkeymirror npm module", "body": "finding really love something like nonreact related fluxy projects good npm module considerations making separate module", "num": "1639", "d": "6/2014"}, {"title": "component support", "body": "sure bower support achieved would really nice simple support thus allowing would require git repo field pointing source files likely built nonminified dist file given nt using build project ther also issue addons one thing time", "num": "1635", "d": "6/2014"}, {"title": "child context passed", "body": "application renders module component eg dynamically according props unfortunately context passed case test case hardcode module component works perfectly need pass manually", "num": "1634", "d": "6/2014"}, {"body": "standard believe something considered use often aliased", "d": "6/2014"}, {"body": "cool feel like use classset addon time would love", "d": "6/2014"}, {"body": "also compiler transform inlines implementation avoids object allocation loop function call compile time reducing string concatternary becomes", "d": "6/2014"}, {"body": "sure released use function released programs automatically become faster consume less memory could write transform pretty trivial", "d": "6/2014"}, {"body": "ah man guys best react continually like", "d": "6/2014"}, {"body": "point checking argument types functions feels like extreme overkill probably would nt opposed asserting second argument function especially silently nothing instead throwing error", "d": "6/2014"}, {"body": "least understand wanting identical behavior dev prod seems would problem way around error prod warning dev many times found troubleshooting issue already printed console although problem option thirdparty modules guaranteed even likely strictly follow current definition mandatory unless per filemodule somehow would problematic", "d": "6/2014"}, {"body": "think likely possibly default behavior", "d": "6/2014"}, {"body": "works one array allocation fair imo would nt complicate validation logic handrolling allocationfree solution", "d": "6/2014"}, {"body": "assigning displayname component manually", "d": "6/2014"}, {"body": "able reproduce chrome using following syntax works fine touchesir recommendation probably work unwise depend internal workings react make code work relying falls category", "d": "6/2014"}, {"body": "displayname part supported api see normally lean towards always first example though might nice specialcase", "d": "6/2014"}, {"body": "brwr impression nt pointed else would one create debuggable components without using jsx", "d": "6/2014"}, {"body": "slorber hit internally fb cases say spicyj said add manually assign variable exporting much really point might able get filename transform step gamble often since crapshoot either way going close thanks filing though suggest manual approach luckily pretty greppable little bit manual work lint rule things better", "d": "6/2014"}, {"body": "thanks zpao right using filename ideal solution anyway", "d": "6/2014"}, {"body": "use dom properties camelcased react also see console warns", "d": "6/2014"}, {"body": "oh duh thank jun andrey popp notifications githubcom wrote use datetime dom properties camelcased react also see console warns warning unknown dom property datetime mean datetime reply email directly view github", "d": "6/2014"}, {"body": "returns boolean tells whether mounted want work", "d": "6/2014"}, {"body": "chenglou course wrong yesterday tired example result", "d": "6/2014"}, {"body": "show rest block", "d": "6/2014"}, {"body": "yeah gulp starting unittest passing failing eleventhenvelopesreactlist list generate ul list error invariant violation setenabled toggle event listening worker thread likely bug framework please report immediately invariant objectmergesetenabled reactreconciletransactioneventsuppressioninitialize reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform object object reactcomponentmixinmountcomponentintonode objectreactmountrendernewrootcomponent objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent reacttestutilsrenderintodocument context callfn testrunnablerun runnerruntest next next objectonimmediate processimmediate immediatecallback", "d": "6/2014"}, {"body": "found issue", "d": "6/2014"}, {"body": "sorry meant test block", "d": "6/2014"}, {"body": "problem react require processcwd bowercomponentsreactreactwithaddons reacttestutils reactaddonstestutils renderintodocument iscompositecomponent reacttestutils expect require chai list eleventhenvelopesreactlist suite eleventhenvelopesreactlist list setup list new list list listcreate envelopes suite list", "d": "6/2014"}, {"body": "component googprovide eleventhenvelopesreactlist class eleventhenvelopesreactlist param eleventhenvelopesstorage storage constructor constructor storage", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "chenglou moved call class list test definition list eleventhenvelopesreactlist list new list list listcreate envelopes suite eleventhenvelopesreactlist list setup list new list list listcreate envelopes suite list result warning react components valid mounting passing failing appenvelopesreactlist list generate ul list typeerror object method mountcomponentintonode objectreactmountrendernewrootcomponent objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent reacttestutilsrenderintodocument context callfn testrunnablerun runnerruntest next next objectonimmediate processimmediate immediatecallback", "d": "6/2014"}, {"body": "spicyj hi know problem", "d": "6/2014"}, {"body": "assuming global issue many events although probably far common allowed initiator popups", "d": "6/2014"}, {"body": "post jsfiddle minimal repro case browser", "d": "6/2014"}, {"body": "well made jsfiddle show suddenly worked chrome firefox opera opened popup without asking confirmation sure nt working local project today morning using latest react npm browserify chrome ubuntu browser using nt know happenedis happening working mean chrome blocked popup displayed tiny box red cross right side address notifying something blocked", "d": "6/2014"}, {"body": "react handle onclick asynchronously browsers infer user intent stack sensitive functions like windowopen desktops mobile devices \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c giovanni notifications githubcom \u043d\u0430\u043f\u0438\u0441\u0430\u043b well made jsfiddle show worked chrome firefox opera opened popup without asking confirmation sure nt working local project today morning using latest react npm browserify chrome ubuntu browser using nt know happenedis happening working mean chrome blocked popup displayed tiny box red cross right side address notifying something blocked reply email directly view github", "d": "6/2014"}, {"body": "events handled synchronously right", "d": "6/2014"}, {"body": "found bunch inconsistencies one prs check list code", "d": "6/2014"}, {"body": "master callback nt called immediately looks like bug called repro using jsfiddle", "d": "6/2014"}, {"body": "ghost", "d": "6/2014"}, {"body": "main reason believe nt exist already client side basically always want show sort loading indicator instead deferring rendering would also make code significantly complex probably deal", "d": "6/2014"}, {"body": "cases find hard solve without server side want fetch data rendering ca nt delegate data retrieval components since nt information component rendered client side first time mount application receiving prerendered html even sort cache data retrieved server might want use async method retrieve data would prevent react reusing html reactasync solve problems fibers cache trick point view hackish solutions solve problem solved core", "d": "6/2014"}, {"body": "color uninformed subject fdecampredon say async nt return anything immediately react supposed render nothing return nothing render data yet yeah get serverside also happen props change fires personally seems like wrong dispatch async requests unless component really isolated black box also implements loading indicator far understand react components mistaken conventional oop instances best case react component tool visualizing data props interactive possibly also state view view model ears sounds like problem react components nt ones dispatching async requests fetch data data ready call solution clientside serverside also get ability abort outcome choice async request fail feel free dismiss misunderstood something seems treating react components view model seems meant view", "d": "6/2014"}, {"body": "color uninformed subject fdecampredon say componentwillmount async nt return anything immediately react supposed render nothing return nothing render data yet yeah get serverside also happen props change componentwillmount fires must admit think cases feature would useful first time mount top level component server true otherwise cast would want display loader indicator personally seems like wrong dispatch async requests componentwillmount unless component really isolated black box also implements loading indicator far understand react components mistaken conventional oop instances best case react component tool visualizing data props interactive possibly also state view view model way want toplevel component would able retrieve data like done flux sample sample things pretty simple retrieving list todo synchronous operation case prerendering server would render first time data loose prerendered markup server case simple application one set data displayed one view hierarchy still much problem preload data still keep synchronous property store case application composed multiple modules reuse across application would like able treat modules separate applications able subscribe different stores would responsible fetching data perhaps get things wrong way discussionsample around web make think something missing somewhere sample seems petehunt tried achieve something similar reactnestedrouter promote similar mechanism willtransitionto discussions make feel nobody come proper solution rrouter also provides kind mechanism prefetch data component renderedmounted finally reactasync like said earlier", "d": "6/2014"}, {"body": "fdecampredon clear purpose reactnestedrouter loading data specifically returning promise method indeed block rendering new ui nt want unless absolutely", "d": "6/2014"}, {"body": "fdecampredon everyone still trying figure things would nt surprise one definitive answer guessing devs facebook must run times", "d": "6/2014"}, {"body": "created dispatcher works instances dispatcher stores instead solely singletons allows easier testing well better support flux server side", "d": "6/2014"}, {"body": "thanks way better nowadays singletons hurting eyes think examples singletons lot clearer less passing instances dispatchers models end singletons bad approach passing instance dispatcher sub components", "d": "6/2014"}, {"body": "really issue going close think better discussion mailing list", "d": "6/2014"}, {"body": "yes also playing around react undocumented context feature giving child components access dispatcher", "d": "6/2014"}, {"body": "good idea careful much magic", "d": "6/2014"}, {"body": "nt think would make sense stopimmediatepropagation touchend stop click event firing touchend guess work already test see", "d": "6/2014"}, {"body": "ah cool works nt think", "d": "6/2014"}, {"body": "use phantomjs test react nt trouble using event information provided nt enough reproduce problem going close issue make minimal repro case showing example nt work react works using direct dom manipulation another library please feel free comment reopen", "d": "6/2014"}, {"body": "give quick example would appropriate current use text children multiple think majority cases using best semantic choice want use elements pretty certain support long explicitly", "d": "6/2014"}, {"body": "zpao say something want fix fix ie rid redundant spans entirely swivelgames unless step make effort going happen right todo list least personally feel css rules plain spans bad idea may look short descriptive stuck one span style", "d": "6/2014"}, {"body": "html foo bar currently produces roughly html variable foo bar since databindings supposed affect design layout page personal opinion might advantageous utilize tag case would roughly produce following output html variable foo bar tag default styling basically function difference tag purpose replace tag things like databinding keeping track particular arbitrary data used specifically webapp much like attributes tag supposed utilized processed outside app purpose provide storage arbitrary data within markup app believe purpose using tag precisely reason addition tag spec utilized tags developing webapps frameworks attribute seems work perfect scenarios", "d": "6/2014"}, {"body": "could confusing tag attributes mdn says html element links given content machinereadable translation nt seem anything data binding", "d": "6/2014"}, {"body": "regarding specific attribute react favors dom api property names attributes rather html since designed usable js identifiers use rather identified common source confusion added warning regarding rendering attributes number issues play importantly use render meaningless attributes dom leading potentially invalid document additionally react needs know specific information properties efficient diffing ie style property diffed differently classname perform correct dom manipulation using attributes vs properties", "d": "6/2014"}, {"body": "number different ways think accomplish unfortunate react nt gotten hump yet thanks info attribute", "d": "6/2014"}, {"body": "react nt trust developer various properties behave differently browsers info different kinds attributes need distinguish see list attributesproperties possible autodetected see right shipping hardcoded list love hear suggestions could already open track ability customize custom attribute list", "d": "6/2014"}, {"body": "considered something like property would pass value asis attribute dom could considered property although look kind ambiguous like sense would work like going soon usecase actually similar ie use unsupportedunofficial attributes kind makes sense", "d": "6/2014"}, {"body": "need manually build version react tapeventplugin also call initializetouchevents ps eventplugins really plugins general sense externally pluggable rather internally indepedent features", "d": "6/2014"}, {"body": "provide specific use cases would helpful look specific situation general discourage introspecting children instead passing js object describes parameter prop also use limit types children passed", "d": "6/2014"}, {"body": "creating kind layout manager ca nt really show code say end found suit better still think better version nt throw performance issues make code complex", "d": "6/2014"}, {"body": "reactchildrenonly meant asserting single child testing whether expected cases nt nt use method almost promise regardless reactchildrenonly significantly affect performance", "d": "6/2014"}, {"body": "add errors jsx file page still renders correctly behavior persists load source file errors reported lines exist html file makes bugs hard track confirmed windows firefox add details get back work monday let know information need thanks eric", "d": "6/2014"}, {"body": "exactly issue source lines offout bounds possible old jsx issue source lines reported esprima mysteriously offset afaik never explicitly solved one able reproduce anymore perhaps struck jsx sugar ontop esprima sourcemap assume think even issue iswas nt think jsx necessarily root cause", "d": "6/2014"}, {"body": "hi syranide thanks responding general level problem trying solve want able use jsxtransformer script able see useful version compiled js script precompilation jsx want make error jsxcontaining js script get useful error message hopefully see problem original script get clue problem might stands error script console complains lines exist html file lines say error line examplehtml even though examplehtml lines compounding problem even errors jsx compiled perfectly js js file ran fine still see sources jsx compiler reactjs source jquery source ca nt see either uncompiled compiled version jsxcontaining js file instead see hopefully explains everything let know still confused provide info whenif need thanks", "d": "6/2014"}, {"body": "syranide tested last week could nt get source map anything firefox", "d": "6/2014"}, {"body": "specific probably misunderstanding react concept", "d": "6/2014"}, {"body": "maksimr lib exactly want plays around react internals stub methods nt promise always gon na work longterm core still changing afaik also nt official way stubbing yet priority btw object whose methods want stub passed nt frozen descriptor call thing returned dev build closing nt questions", "d": "6/2014"}, {"body": "chenglou thanks langpavel use component controllerview contains domain logic saving validation model test want control count call functions made mistake place", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "believe browser reload iframe whenever src prop changes either via react otherwise nt think changes required", "d": "6/2014"}, {"body": "lol nevermind speak americano", "d": "6/2014"}, {"body": "events pooled react use sneaky yet documented prevent returned pool copy attributes need", "d": "6/2014"}, {"body": "indeed issue nt think stop pooling events near future suggest using passing event around anything might delayed", "d": "6/2014"}, {"body": "persist worked great thanks", "d": "6/2014"}, {"body": "wary exposing api see really quick sugar checking whether prop undefined adding check custom validator thing", "d": "6/2014"}, {"body": "yeah think main benefit exposing something would nt providing way making prop required instead providing way option making required javascript var myproptype chainableproptypefactory function prop type validation proptypes prop myproptype requiredprop myproptypeisrequired custom prop type easily created used optional required props", "d": "6/2014"}, {"body": "good catch reason set ie treated property rather attribute runtime correct like say generate markup attribute wrong sure preferred fix add another directive ex zpao spicyj", "d": "6/2014"}, {"body": "nt think invalid markup nt used unless use nt surprised deleting value would work guess applying updates value actual node manually relying render seems like good enough approach already render initial value text child nt use server rendering syranide another directive could make sense get scoped properties since true inputs want submit pr somethingkindawierd cc salier", "d": "6/2014"}, {"body": "zpao invalid meant generated markup validate via html validator throwing error attribute value allowed element textarea point yes submit pr", "d": "6/2014"}, {"body": "code sometimes executed wrong sequence assumes independent asynchronous callbacks always executed proper sequence transition leave csscoreaddclass node exampleleave flushclassnamequeue csscoreaddclass thisgetdomnode exampleleaveactive endlistener csscoreremoveclass node exampleleave csscoreremoveclass node exampleleaveactive sometimes happens initiates css transition transition finished timer fired", "d": "6/2014"}, {"body": "far found property attached component constructor stubbing nt work methods wrapped amp bound internally component constructor creation time still access original unbound method property attached wrapped method yes finding tricky track amp grasp went simple function subbing component constructor way perform sinon assertions checking property js var comp reactcreateclass displayname comp plop function consolelog plop render function thisplop return reactdomdiv null foo var stubcomp stubcomponent comp plop sinonstub var comp reactaddonstestutilsrenderintodocument stubcomp sinonassertcalled compplopreactboundmethod works painfully ugly really wish something better", "d": "6/2014"}, {"body": "moving use classes soon see js class comp plop consolelog plop render thisplop return reactdomdiv null foo way allow overriding directly", "d": "6/2014"}, {"body": "good hear eta land stable release ready acceptable answer", "d": "6/2014"}, {"body": "hopefully next couple months ca nt promise anything", "d": "6/2014"}, {"body": "cc spicyj remember fixed time ago", "d": "6/2014"}, {"body": "using react test head honest suppose fixed release edit problem seems file ca nt spot difference big compliment source code readability way awesome project", "d": "6/2014"}, {"body": "jannesmeyer iirc possible nt specifically issue though memory fuzzy details ca nt find issuecommit distinctly remember fix react incorrectly getting first whitespace text node rather first dom node ps also yes would consider bug trivial fix well agree remarkably easy become familiar core props goes real devs", "d": "6/2014"}, {"body": "nt think fixed", "d": "6/2014"}, {"body": "spicyj right think nt know though perhaps someone never actually", "d": "6/2014"}, {"body": "yup closing favor", "d": "6/2014"}, {"body": "allowed modify dom nodes managed react need take dom nodes modal system interacts create instead managed react either content modal modal system interact make use react simply calling rather managed react end react gt modal system gt react makes sense", "d": "6/2014"}, {"body": "future mailing list better place questions like", "d": "6/2014"}, {"body": "thanks find update outdated packages", "d": "6/2014"}, {"body": "see also", "d": "6/2014"}, {"body": "right thinking async updating dom problem", "d": "6/2014"}, {"body": "fixed next time rebuild docs thanks", "d": "6/2014"}, {"body": "terribly familiar side javascript yet issue depending lot dependencies nt exportedbundled browser anyway", "d": "6/2014"}, {"body": "one issue visitors potentially using different versions esprimafb jstransform one inside nodemodule directory instead shared one nt know enough architecture jstransform know whether could problem another minor issue takes longer like projects many duplicate versions package purely based taste course another issue would pin version reacttools anyway ca nt depend internal path files changing releases nt see documentation source code comments says guaranteed never change might well copy files save lot bytes dependencies lock version anyway recommended way compose transforms nt notice", "d": "6/2014"}, {"body": "performs deduplication default none really matter far understand version incompatibility issue yeah might end using different versions would error", "d": "6/2014"}, {"body": "far know npm performs deduplication network level ie caches packages nt file system level ie package extracted multiple folders huge deal though take look see dependencies outdated bigger problem imho could nt automatically update version reacttools anyway internal file path guaranteed stay mentioned", "d": "6/2014"}, {"body": "flux stores nt necessarily reactspecific many people use react without flux nt make ton sense build direct integration two want define mixin keep track listeners like use components like", "d": "6/2014"}, {"body": "like example thank", "d": "6/2014"}, {"body": "qualified write", "d": "6/2014"}, {"body": "going anything think would reasonable transform also perhaps things classes", "d": "6/2014"}, {"body": "solution advantage add name every single method react component though", "d": "6/2014"}, {"body": "tried initial suggestion definitely trick see class name referenced stack trace syntax see merits approaches prefer initial approach ulitmately simpler introduce another layer naming conventions", "d": "6/2014"}, {"body": "work debugger definitely ability make work said let make sure whatever fine browsers chrome mmmmkay actually prefer spicyj feature language nt rely multiple assignments results sane output correct vs correct could also get rid runtime assignment", "d": "6/2014"}, {"body": "looks like safari stack traces already show displayname properly", "d": "6/2014"}, {"body": "lrowe propogation propagation", "d": "6/2014"}, {"body": "thanks sompylasar spelling fixed", "d": "6/2014"}, {"body": "nt android phone ca nt test easily get native click event use plain js without react guess nt react nt special filtering fire click events", "d": "6/2014"}, {"body": "yes regular onclick nt fired long clicks platformbrowser combination well plans support unified click event across browsers platforms future know workaround going implement issue thanks christoph", "d": "6/2014"}, {"body": "ripcurlx reasonable universal robust solution lots discrepancies normalized nt see however unsure good one could actually make ios infamous delayed onclick far understand intentional fixing may always user wants", "d": "6/2014"}, {"body": "seems like something environment correctly set", "d": "6/2014"}, {"body": "caused norton antivirus blocks git protocol", "d": "6/2014"}, {"body": "nt really react issue", "d": "6/2014"}, {"body": "neat closing issue might better question mailing list", "d": "6/2014"}, {"body": "looks like example contains tags children divs ones contain actual nt sound like valid html use chrome inspector looks like browser removed invalid div wrapper guess problem lies somewhere", "d": "6/2014"}, {"body": "right nesting wo nt work invalid html use regular function instead component return array elements ca nt use lifecycle methods state future hoping way return one element component", "d": "6/2014"}, {"body": "thanks clearing things every time wrap render return call div feel bad nt actually need div markup use returns one child looks like bit tried another approach work even though neat original design would certainly love able return multiple children component smiley", "d": "6/2014"}, {"body": "actually nt first intended think manage expansion pergroup basis nt state updated yet keep state entry dictionary react state", "d": "6/2014"}, {"body": "setstate nt deep merge use something like underscore extend react immutability addon modify expandeddict properly", "d": "6/2014"}, {"body": "seems fixed current dev branch published npm closing", "d": "6/2014"}, {"body": "ah cool thanks submitting anyway", "d": "6/2014"}, {"body": "likely happen object spread operator one solution future however specific case future fix create object properties necessary", "d": "6/2014"}, {"body": "could imagine possibly supporting computed property expressions already write though heard little demand", "d": "6/2014"}, {"body": "created mixin requiring specific attribute rendered dom elements want copypaste name attribute throughout components problem currently rare widely available configurable generic components reusable mixins", "d": "6/2014"}, {"body": "victorhomyakov would mixin look dom dataattribute ca nt read", "d": "6/2014"}, {"body": "eg drag amp drop", "d": "6/2014"}, {"body": "something event delegation example", "d": "6/2014"}, {"body": "nt see working drag amp drop needs set dataattribute dom linked component indicate", "d": "6/2014"}, {"body": "sortable mixin uses attribute find object instance corresponding dom node passed case someone nt want call expose props node attributes copypaste attribute name component method", "d": "6/2014"}, {"body": "fact ca nt see error message chrome bug see based stack trace error seeing findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags using nonsvg elements parent try inspecting child nodes element react id", "d": "6/2014"}, {"body": "thanks helps", "d": "6/2014"}, {"body": "think enable pause exception give full error message chrome nt confirmed seemed like", "d": "6/2014"}, {"body": "confirmed enable pause exception view error scope variables tab also returns missing tag pretty neat", "d": "6/2014"}, {"body": "thanks pulling hair", "d": "6/2014"}, {"body": "yeah sorry dupe", "d": "6/2014"}, {"body": "ah sorry nt see come searching assume safe ignore warnings", "d": "6/2014"}, {"body": "problem yup okay ps warnings nt logged prod build react extra performance optimizations", "d": "6/2014"}, {"body": "another quirk type x set empty string undefined x comes back field without reactlink generally correct behavior become uncontrolled component current behavior controlled component sebmarkbage spicyj", "d": "6/2014"}, {"body": "chenglou intuitively seems like become uncontrolled set defaultvalue value set nullundefined however using reactlink value undefinednull kind gray area although still think may make sense mirror behavior value exactly makes sense least also seems favorable deterministic perspective input keyed given new key time becoming uncontrolled behavior would makes sense mirror imho setting defaultvalue keeping last value also makes sense ca nt imagine usecase would good idea rely implicit behavior", "d": "6/2014"}, {"body": "assuming running internally enhanced jsx currently valid yeah could reproduce issue issue apparently also affects children yields", "d": "6/2014"}, {"body": "new syntax thing", "d": "6/2014"}, {"body": "ah cool heard proposal seems great simple correct fix believe", "d": "6/2014"}, {"body": "spicyj", "d": "6/2014"}, {"body": "already works correctly react", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "sort plan rewrite reorganize see get energy execute", "d": "6/2014"}, {"body": "take look framer docs done vertical breakpoints sidebar remarkable", "d": "6/2014"}, {"body": "built livefiltering sidebar knowledge base similar thinking react tutorial works knew react maybe nt want much content shown initially could still topic areas exposed initially expose subtopics filter", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "concur ran issue google calendar api current workaround", "d": "6/2014"}, {"body": "sorry clear workaround write opened issue provide better error message", "d": "6/2014"}, {"body": "fix although explicitly issue ps propose lenient parsing like browsers pr nt match entity output asis means nt fugly urls text reason", "d": "6/2014"}, {"body": "currently generated ids server random checksum something else always", "d": "6/2014"}, {"body": "ah okay thought something like reason opened issue getting warning server client rendering get computed influenced certain variables handled differently server displayed file", "d": "6/2014"}, {"body": "yoshuawuyts client able reuse dom created server must match exactly data different time even checksum wo nt match", "d": "6/2014"}, {"body": "clear thanks", "d": "6/2014"}, {"body": "clear client tries reuse dom takes root index react id target dom node like chenglou said root index random affect checksum always drop irc unable determine root cause end client server rendered different data using something like", "d": "6/2014"}, {"body": "yeah injecting livereload snippet based guess make production development differences function thanks dude", "d": "6/2014"}, {"body": "appears checksum random reopening edit clarify trying squash error react attempted use reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injectednew markup compensate works lost many benefits server rendering instead figure markup generated different client server", "d": "6/2014"}, {"body": "clear root id checksum differ time root id used client generating markup checksums generated client match nothing else wrong even though server produces different checksum time", "d": "6/2014"}, {"body": "yoshuawuyts checksum depends root index result indeed random client generate root index trying reuse dom rather copies target dom node rendered server markup generated client react ids", "d": "6/2014"}, {"body": "rather copies target dom node nt know thanks", "d": "6/2014"}, {"body": "hardest time getting right though could give maybe pointer might wrong indexjs code rendered buildjs client side call renderjs server side call", "d": "6/2014"}, {"body": "add breakpoint consolewarn call reactcomponentbrowserenvironmentjs inspect compare serverrendered version", "d": "6/2014"}, {"body": "apart tags id identical html html", "d": "6/2014"}, {"body": "confused nt see datareactchecksum clientside generated markup addchecksumtomarkup called rendercomponenttostring", "d": "6/2014"}, {"body": "logged string callback method suggested woops haha sparkles", "d": "6/2014"}, {"body": "time correct method still appear identical client html server html edit seem share idea still getting error though", "d": "6/2014"}, {"body": "instead adding whitespace paste two versions exactly", "d": "6/2014"}, {"body": "client server", "d": "6/2014"}, {"body": "odd sure could also try adding debugging reactmarkupchecksumaddchecksumtomarkup server see looks like compare get running guess good mine though", "d": "6/2014"}, {"body": "yeah even setting string fixed server response things break idea happens try tomorrow see anything changes", "d": "6/2014"}, {"body": "fast testing seems like might something full page rendering really sure would messed something along way quick test ran test body instead worked", "d": "6/2014"}, {"body": "syranide version react using also string using want see make version run", "d": "6/2014"}, {"body": "yoshuawuyts think using code stripped htmlelement replaced body div mounted body nt really proper test possible fumbled along way really", "d": "6/2014"}, {"body": "let see make work", "d": "6/2014"}, {"body": "correctly computes new checksum files identical reading previously set checksum returns investigating", "d": "6/2014"}, {"body": "returns thus incorrectly reads checksum", "d": "6/2014"}, {"body": "yoshuawuyts yeah checked source try mounting instead see nt fix", "d": "6/2014"}, {"body": "yep fix sparkles sparkles", "d": "6/2014"}, {"body": "maybe add check provides little information going wrong checksum nt align", "d": "6/2014"}, {"body": "think see done way mounting really throw error try mount reason ever sure first one fall unobviousunintuitive trap spicyj agree go way something would interested taking yoshuawuyts checking", "d": "6/2014"}, {"body": "yeah pr spicyj gives green light", "d": "6/2014"}, {"body": "yoshuawuyts probably rather think explicitly check", "d": "6/2014"}, {"body": "aye", "d": "6/2014"}, {"body": "see full error message going page recall chrome bug causes error message shown though thought fixed current builds better job warning exactly problem gets properly implemented", "d": "6/2014"}, {"body": "chrome bug", "d": "6/2014"}, {"body": "yeah bug latest chrome version happens arbitrarily nothing far able determine chrome fixes happens annoyingly often", "d": "6/2014"}, {"body": "intended see user could option initial render react wo nt blow away selection updating", "d": "6/2014"}, {"body": "anybody working keen implement tag", "d": "6/2014"}, {"body": "preserveaspectratio also seems missing create pr prefer collect missing attributestags first later create single patch edit preserveaspectratio added commit", "d": "6/2014"}, {"body": "impractical us add jsx support every editor may luck making feature request netbeans use issues repository used keeping track bugs react", "d": "6/2014"}, {"body": "know nt really right forum question like might better luck mailing list ca nt promise anything", "d": "6/2014"}, {"body": "afaik master allows reuse descriptors renders", "d": "6/2014"}, {"body": "yes last couple releases transitional code warn relying mutation descriptor previous versions master next release nt mutate descriptors safe reuse", "d": "6/2014"}, {"body": "andreypopp spicyj generally easy predict reused expected hold anything created render function component expect possibly animation would need tie pooling system", "d": "6/2014"}, {"body": "syranide yeah would pooled descriptors nt escape created inside descriptors created outside reused different represent static pieces ui", "d": "6/2014"}, {"body": "ah awesome pooled descriptors would still able support memoization use case example thanks", "d": "6/2014"}, {"body": "think kind memoization possible right moving separate component implemented would compare previous new value prop", "d": "6/2014"}, {"body": "oh yeah definitely would nt able share dom component instances renders without unmount case example imagine generating array nt think way memoize would nt result unmounting remounting entire list one changed though admit curiosity nt born realworld something started thinking something petehunt said talk leveraging familiar cs tools react", "d": "6/2014"}, {"body": "matthewwithanm might misunderstanding saying react reuse component instance update instead unmountremount long props match regardless actual descriptor object reused", "d": "6/2014"}, {"body": "wanted add might well exist whenif react makes switch pooled descriptors reusing across renders might well possible default", "d": "6/2014"}, {"body": "spicyj sorry yeah talking reusing actual descriptors example lot iteration build structure example would nt able memoize functions return list item descriptors use components job firstly render single components secondly even could return arrays second component would unmounted instead getting updated second lost first gained items super contrived nt problem exploring ideas memoization react syranide oooh sounds interesting keep eye thanks discussion everybody react community rad", "d": "6/2014"}, {"body": "petehunt", "d": "6/2014"}, {"body": "works", "d": "6/2014"}, {"body": "oh closing issue drscre let know missing something", "d": "6/2014"}, {"body": "luigy thanks sorry bad everything works", "d": "6/2014"}, {"body": "happens image loads react unmounted dom fixed master sorry trouble", "d": "6/2014"}, {"body": "spicyj cool thanks", "d": "6/2014"}, {"body": "spicyj awesome getting hit one", "d": "6/2014"}, {"body": "workaround us eta release fix", "d": "6/2014"}, {"body": "working something similar images im rendering img could try add use backgroundimage style something like bradens let know solution works thanks", "d": "6/2014"}, {"body": "gsantome yeah currently already workaround pretty bad since losing semantics meaning tag stop errors though thanks", "d": "6/2014"}, {"body": "bradens planning sometime soonish want say sometime next weeks", "d": "6/2014"}, {"body": "zpao sounds good thanks", "d": "6/2014"}, {"body": "try dom attributes camelcased react", "d": "6/2014"}, {"body": "seen warning console using dev build react", "d": "6/2014"}, {"body": "could something like", "d": "6/2014"}, {"body": "would nice able wrap attributes general though things like autoprefixing", "d": "6/2014"}, {"body": "petehunt issue see would across board elements would less ideal cases might specific use case one two elements cases like could used almost element really spicyj seems like reasonable use case attributes come mind", "d": "6/2014"}, {"body": "another possible virtual attribute could define would use object javascript var classes mybtn true defaultbtn thisstatedefault return main idea add convenience methods would shared dom elements", "d": "6/2014"}, {"body": "pretty sure oversight srccorereactproptypesjs want submit pull request fix", "d": "6/2014"}, {"body": "yes heart", "d": "6/2014"}, {"body": "technically renderable return render", "d": "6/2014"}, {"body": "strings numbers arrays already considered renderable even though ca nt render standalone", "d": "6/2014"}, {"body": "string numbers supposed one point array directly returned render yeah bit inconsistent", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "already use return elements nt want display", "d": "6/2014"}, {"body": "oh okay makes sense thanks", "d": "6/2014"}, {"body": "intentional deviation html usually nt want extra whitespace tags see summary current rules", "d": "6/2014"}, {"body": "bstst use insert intentional whitespace tabs newlines etc ps yes know link incase someone stumbles across issue", "d": "6/2014"}, {"body": "yeah syranide already noticed thing using coffeescript thus using jsx thus feels looks wrong code inserts redundant react dom still convinced right behavior opinion every inline opening tag written dom newline example would write following html markup without jsx name alias city renders current situation coffeescript nt add whitespaces output without whitespaces namealiascity renders desired result whitespaces due inline tags separated newlines admit ugly wrong whilst would take fix add newline inline tag writing dom", "d": "6/2014"}, {"body": "bstst makes sense relying implicitly added newlines create whitespace considering would solution nt want whitespace separating two pretty much always seems relying implicit behavior something explicitly require nt matter ugly code beauty never goal code understandable deterministic imho", "d": "6/2014"}, {"body": "syranide indeed think see would solution whitespace wanted rest case sorry commotion", "d": "6/2014"}, {"body": "ensure mouseleave fired believe would fix particular use case mean event invented determined means", "d": "6/2014"}, {"body": "nt spec ie jquery supported many years", "d": "6/2014"}, {"body": "similar issue cursorhover problem hover moving box cursor nt update scene nt reevaluated every frame move cursor moving box let rest box moves way see firing mouseleave event destruction nt enough could take upon change browser behavior reevaluating mouse target every rerender eg using target changed simply refire synthetic mouseoverout events would trigger enterleave events used art changed consistent browser immediate mode framework could reference something like current mouse target render eg something like something like might possible", "d": "6/2014"}, {"body": "thought thing published keymirror standalone module", "d": "6/2014"}, {"body": "awesome heard discussion splitting utils react separate modules like curious know facebook would consider using strml module rather keep things control happy send pr", "d": "6/2014"}, {"body": "super simple module think end would better separate module dependencies allow users require single one time eg smart packagers eg webpackbrowserify would pack efficiently fb would nt publish ton separate modules could simply required within", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "want versioning interesting problem nt done yet common core modules may need versioned separately react eg jest stay tuned", "d": "6/2014"}, {"body": "petehunt challenge wo nt change bunch", "d": "6/2014"}, {"body": "pure curiosity take object instead array enum values solid usecase passing object null keys array impression missing vital point", "d": "6/2014"}, {"body": "touchesir main purpose keymirror deal fact closure compiler advanced mode crushes keys allows write code like become something like evaluates runtime specified list strings would nt get crushed matching property names", "d": "6/2014"}, {"body": "jordwalke happens release component depends version conflicts another component used app even worse module stateful btw talking changing thread yesterday super long shot versioning react dependencies dependents difficult problem especially fb internal development process desire dogfood everything open source", "d": "6/2014"}, {"body": "spicyj thanks insight nt even bother think route keymirror gaining appeal second", "d": "6/2014"}, {"body": "want send pull request nt think us familiar component willing consider pr nt add much complexity", "d": "6/2014"}, {"body": "spicyj would happy turn large projects like etc component usually file points built dist file possible ideal component list lib files dependencies realize nt working like want make minimum step exposing dist files change conditional type line pointers appreciated", "d": "6/2014"}, {"body": "spicyj oh noticed react entry point react framework using one prebuilt packages available global using commonjs modules require expect simplifies issue eg already done change conditional moduleexports react type line", "d": "6/2014"}, {"body": "browser builds umd wrapper set moduleexports appropriate nt store prebuilt versions repo right need build step run files nt see instruct run sort build script use prebuilt version nt get committed might hard make work current setup", "d": "6/2014"}, {"body": "nt store prebuilt versions repo yep makes sense given need build step run files using becomes untenable view nt see instruct component run sort build script see note install scripts antipattern except unlike event support anything akin yes correct say might hard make work current setup think close hopefully revisit sometime future basically depends willingness guys eg interest level", "d": "6/2014"}, {"body": "npm run build script packaging nt see way thing component", "d": "6/2014"}, {"body": "spicyj ca nt concept github central repository means build step etc possible sense source code published", "d": "6/2014"}, {"body": "saw libraries publishing prebuilt distributables separate github repo release", "d": "6/2014"}, {"body": "react already bower", "d": "6/2014"}, {"body": "oh perhaps even use repo", "d": "6/2014"}, {"body": "sompylasar yup would much prefer come core teamcommunity worth otherwise", "d": "6/2014"}, {"body": "andreypopp spicyj ah nt notice take look sounds like yes could use repo", "d": "6/2014"}, {"body": "spicyj jonathanong nt think use supports one consumable module per repo would need happen barebones react repo one repo per addon wherein one depends literally repos would include ultimately would make sense include addon bundle repo would include", "d": "6/2014"}, {"body": "sompylasar interested userland management issue modules really come user react team practically relied upon maintaining automation around component module releases etc", "d": "6/2014"}, {"body": "sure would grateful react team managed mentioned saw teams standalone repo nt add released distributables main repo along sources", "d": "6/2014"}, {"body": "spicyj help getting githubcomreactjs repos maintained", "d": "6/2014"}, {"body": "take guys nt using react bower webpack cuz nt work know instagram using webpack react wondering nicer way consume app without hassle rebuilding source npm time", "d": "6/2014"}, {"body": "discussion ultimately decided nt doable component insistence single export devprod builds make really annoying shipping individual addons standalone modules something want need figure api things first", "d": "6/2014"}, {"body": "said need bypass cdn serving local copy dev manually copy paste raw cdn file nt seem like best solution would nice prebuilt binary available npm", "d": "6/2014"}, {"body": "make work webpack", "d": "6/2014"}, {"body": "specific nt work webpack", "d": "6/2014"}, {"body": "install react bower require js file try compile webpack profit try coffee branch jun pm ben alpert notifications githubcom wrote specific nt work webpack reply email directly view github", "d": "6/2014"}, {"body": "explain error get specifically nt work exact configuration command line arguments reproduce problem would helpful nt guess", "d": "6/2014"}, {"body": "sorry away laptop moment post back tomorrow get chance", "d": "6/2014"}, {"body": "problem thanks", "d": "6/2014"}, {"body": "installing npm works well sent iphone jun pm adam krebs notifications githubcom wrote install react bower require js file try compile webpack profit try coffee branch jun pm ben alpert notifications githubcom wrote specific nt work webpack reply email directly view github reply email directly view github", "d": "6/2014"}, {"body": "right forces compile b keep react separate rest frontend deps rest work problems bower", "d": "6/2014"}, {"body": "sure mean compile version npm already compiled repo sent iphone jun pm adam krebs notifications githubcom wrote right forces compile b keep react separate rest frontend deps work problems bower reply email directly view github", "d": "6/2014"}, {"body": "also without investigated thing bower output browserify umd turned remember seeing issues browserify umd past think fixed possible issue webpack browserify umd updated today believe sent iphone jun pm adam krebs notifications githubcom wrote right forces compile b keep react separate rest frontend deps work problems bower reply email directly view github", "d": "6/2014"}, {"body": "using webpack zpao thanks link pretty much made dupe sorry jonathanong basically thing needed way single repo multiple components nt seem crazy frankly would allow projects start big decouple time otherwise support projects potentially perfectly valid reasons want ship multiple things single repo ca nt imagine would add exponential complexity component react may microlibrary locwise actually focused library small mental api footprint petehunt mentioned meteor meetup longterm package manager win js client et al sure working directly vcs hubs github bitbucket etc already solved hosting user namespacing seems like interesting avenue would sooner fork host componentified react installing via former seems lot simpler us course best would core react support highly sympathetic issues outlined zpao time", "d": "6/2014"}, {"body": "jasonkuhrt tend agree thinking commonjs lingua franca npm canonical reponamespace", "d": "6/2014"}, {"body": "main issue umd wrapper around code imagine problem lies somewhere umd wrapper webpack import show create umd wrapper track trying run project get removing get", "d": "6/2014"}, {"body": "umd wrapper provided browserify nt anything special", "d": "6/2014"}, {"body": "cool chase thanks jun pm ben alpert notifications githubcom wrote umd wrapper provided browserify nt anything special reply email directly view github", "d": "6/2014"}, {"body": "intentional context determined component created function rendered component also note context experimental likely change future versions", "d": "6/2014"}, {"body": "case anyone else runs problem hackish way solve problem module component created inside access right context spicyj said feature likely change", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "thanks pointer reactfuture sebmarkbage follow repo info advancements area", "d": "6/2014"}, {"body": "spent hours trying figure code nt work thanks fix hope makes release soon", "d": "6/2014"}, {"body": "hi guys also falling bug still want use native input number native controls change events way make working react preventdefault events bind input handling dom thanks", "d": "6/2014"}, {"body": "gre sorry literally bug dom chrome least impossible read actual value input nonnumeric", "d": "6/2014"}, {"body": "sure get mean works chrome proof used", "d": "6/2014"}, {"body": "gre try chrome outputs input soon enter anything nonnumeric value becomes empty", "d": "6/2014"}, {"body": "understand chrome behavior make impossible implement sync react nt know says spec sure get functionally wrong behaviour number input nonnumber values nt make sense yeah maybe chrome nt allow inputing invalid text related initial bug react disables arrow controls keyboard ui chrome bug fixed still bug react making input number working right anyway recommended previously gon na implement number component thanks", "d": "6/2014"}, {"body": "gre nt know specifics guess autofill browser simply nt tell us user makes changes possible listen updown yeah seems reasonable listening etc accomplish fragile ps point basically already kind bad implement could easily even prevent invalid chars typed number ofc like selects styling always going issue seemingly also always going obscure bugsbehaviors", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "provide jsfiddlejsbin example mean", "d": "6/2014"}, {"body": "thanks discussion explanations encountered situation", "d": "6/2014"}, {"body": "bringing reason problem closed duplicate link empty href still takes focus kind sort style problems extra css still get focus tab focus controls page", "d": "6/2014"}, {"body": "slashes bit much break mobile proxies like operamini proxy amazon kindle proxy know valid html unless anyone mention actual exploit escaping slashes avoiding would say wasteful react btw params face proxy issues", "d": "6/2014"}, {"body": "another possible cause error writing posterity react receiving events elements removed dom nt happen unless bug react happens due react bug issue fixed master next release", "d": "6/2014"}, {"body": "see also", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "fixed", "d": "6/2014"}, {"body": "understanding targeted version part components classes guestimate timeframe take look tags really looking forward want create react components code using typescript", "d": "6/2014"}, {"body": "also puzzled would nt lifecycle events also apply", "d": "6/2014"}, {"body": "yes methods called reacttransitiongroup lower level component handling animations programatically kendall buchanan notifications githubcom also puzzled would nt lifecycle events also apply lt reactcsstransitiongroup reply email directly view github scarella simonecarella gmailcom", "d": "6/2014"}, {"body": "reactcsstransitiongroup higherlevel api want something complicated something using lowerlevel reacttransitiongroup api less implementation detail reactcsstransitiongroup uses reacttransitiongroup hood", "d": "6/2014"}, {"body": "taking demo op semireliably cause error tried perform animation without animationend transitionend event occur frequently resizing browser window one animation occurring particularly issue since transitioning components windowresize event", "d": "6/2014"}, {"body": "first problem lines easily reproduces firefox chrome second adding green lines background tab reproduces firefox chrome", "d": "6/2014"}, {"body": "bootstrap similar problems broken transitions transitions stopped background tab etc solved via triggering event manually nt fired browser", "d": "6/2014"}, {"body": "consider angular implementation enterleave animations add specific css classes may customized keyframe animations transitions \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c jonathan thomas notifications githubcom \u043d\u0430\u043f\u0438\u0441\u0430\u043b love see full example transitioning one element new react confounding must possible even simple looking issue seems nt straightforward designed one component like simply animate appearance onto stage seems animate owned components owner would like wrap components markup animate sure zimok got example working sounds like use case reply email directly view github", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "workaround use simulatenativemouseover simulatenativemouseout making sure specify relatedtarget appropriately together cause react fire onmouseenter onmouseleave events", "d": "6/2014"}, {"body": "clarifying note stumbling across issue like remember mocha tests run within single process node caches require calls one earlier tests requires react node cache react executionenvironment module canusedom property nt set global window variable yet easiestcleanest way think rectify ensure run tests nt use global window object one test process another spicyj others please correct got anything wrong comparatively new node world", "d": "6/2014"}, {"body": "let discussion reactfuture consistent plans", "d": "6/2014"}, {"body": "closing favor", "d": "6/2014"}, {"body": "dont know late error called reactunmountcomponentatnode sending function child execute onclick event form disappeared got error react debugging found execute onclick function parent execution react continue bubbling event button form nt exist anymore dom react solution adding eventstoppropagation prevent continuing onclick hope answer help someone", "d": "6/2014"}, {"body": "gsantome thanks letting us know likely change unmounting batched state updates currently fix problem another way", "d": "6/2014"}, {"body": "experimented possible fix little bit spicyj said might worth ignore prepended nonwhitespace text gist would necessary code want make sure ignore text nodes consist purely whitespace would get rather complex wanted make sure account edge case alternating comment nodes text nodes actually find element node text node nonwhitespace content therefore think would much easier implement petehunt proposal use opinion makes sense nonwhitespace check react nt actually make sure appended nonwhitespace text neither reusing dom nodes came server", "d": "6/2014"}, {"body": "believe add end promise chain q rethrow exception previously caught recorded promise failure closing nt believe anything actionable react", "d": "6/2014"}, {"body": "yes mistake sorry nt know done method opened issue seems work fine", "d": "6/2014"}, {"body": "fixed", "d": "6/2014"}, {"body": "going close proposal reason currently cloning props objects actually passing instances anyway syntax clarifies gets merged allows sugar merging additional properties also preserves option using single object descriptors merging descriptor props object also allow us switch semantics object initialization rather arbitrary function call quite parity plain function calls using outside react might interesting allow us change implementation jsx need new syntax allows used spreading named arguments every became thing", "d": "6/2014"}, {"body": "yep pointed proposal recently looks awesome", "d": "6/2014"}, {"body": "sorry long delay busy try today", "d": "6/2014"}, {"body": "problem whenever time", "d": "6/2014"}, {"body": "curious want hyphenate names subsequent updates instead show warning one way", "d": "6/2014"}, {"body": "yes matches existing practice requiring camelcased attributes general makes easier make warpper components modify props way need look one place find original value addition nt need worry happens someone specify style block one last advantage warnings happen dev version runtime cost production build", "d": "6/2014"}, {"body": "think worth adding sake providing suggestive warning eg", "d": "6/2014"}, {"body": "go also updated docs prefix since clear right", "d": "6/2014"}, {"body": "warning would helpful sucked lot time anyone interested chrome seems handle hyphenated css props ok ff nt", "d": "6/2014"}, {"body": "fiiiiiiiiine", "d": "6/2014"}, {"body": "generally makes sense though people complained unit testing react relies available require time", "d": "6/2014"}, {"body": "see current proposal", "d": "6/2014"}, {"body": "going close reactfuture proposal mentioned let open issues reactfuture nt think current proposal viable replacement", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "zpao docs forms could clearer mentioning put array attribute usage example likely", "d": "6/2014"}, {"body": "sompylasar good idea reopening remember add info", "d": "6/2014"}, {"body": "closing favor new issue", "d": "6/2014"}, {"body": "problem unrelated css transition ending within child component would trigger parent csstransitiongroup remove child dom prematurely understood writing logic noticed worked way nt check maybe related also", "d": "6/2014"}, {"body": "fixed", "d": "6/2014"}, {"body": "would also love way consistent quoting transformer preferably double quotes case running issues pkyeck", "d": "6/2014"}, {"body": "hey chenglou manage write react docset", "d": "6/2014"}, {"body": "rough version passed agirton hope one reactjs", "d": "6/2014"}, {"body": "chenglou working well need go pages get anchor links hooked items lower left hand table tableview easier navigation busy nt able feature yet", "d": "6/2014"}, {"body": "chenglou agirton chance point docsets fully working fine", "d": "6/2014"}, {"body": "agirton ping", "d": "6/2014"}, {"body": "using markdown comments docco good choice wo nt change anything", "d": "6/2014"}, {"body": "docco nt actually generate api docs afaik html page code comments together", "d": "6/2014"}, {"body": "correct takes philosophy code mostly selfexplanatory obvious variable naming markdown comments give additional context write variable definitions etc want though", "d": "6/2014"}, {"body": "see backbone underscore annotated sources examples prefer style", "d": "6/2014"}, {"body": "crosspost considered something like property would pass value asis attribute dom could considered property although look kind ambiguous like sense would work like going soon usecase actually similar ie use unsupportedunofficial attributes kind makes sense", "d": "6/2014"}, {"body": "converted small project use cjsx worked perfectly far tell looks nice see", "d": "6/2014"}, {"body": "working cjsx quickstart gulpfile build coffeescriptsass well integration jest wip coming along", "d": "6/2014"}, {"body": "wow took track fix right way", "d": "6/2014"}, {"body": "like change default file extension transform jsx regardless docblock present see", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"title": "twoway binding vrepeat possible extension duplicate", "body": "ca nt find nice way parent retrieve values child models created vrepeat shown values set initially subsequent changes input nt reflected parent ideally like first example work looping one set keys binding another object see temporary workaround satisfactory", "num": "333", "d": "6/2014"}, {"title": "vuejs web components", "body": "hey trying get vuejs running custom element web component cant seem get running tried hand el template data test test work errors template consists template resolved vue problem template ordinary html element nt direct child however document fragment attribute children passing vue fragment didnt work either unfortunately document fragment obviously full blown element could issue thank alessandro", "num": "332", "d": "6/2014"}, {"title": "using vmodel array work", "body": "using array value bind data work case", "num": "331", "d": "6/2014"}, {"title": "von window events", "body": "hi possible listen window event directive overriding value know could create another directive like sure good way window event listeners added via directive thanks", "num": "330", "d": "6/2014"}, {"title": "official way call method outside view model", "body": "trying integrate vue backbonejs app official way outside code call method vue something like thanks", "num": "329", "d": "6/2014"}, {"title": "support ing property vm", "body": "trying subscribe data changes made property vm predefined property names could nt find way proposal made example first subscribe changes property next two statements would proposal allow watching updates property either support wildcard syntax nt think great idea valid property name js better syntax makes string property name optional", "num": "328", "d": "6/2014"}, {"title": "make work", "body": "nt find anything documentation regarding viewmodel lt component communication", "num": "325", "d": "6/2014"}, {"title": "weird option appended", "body": "please look sample code fourth option appended key include dot character key dot character problem seems happened", "num": "324", "d": "6/2014"}, {"title": "draggable sorting vrepeat", "body": "trying use something like sort vrepeat list mutate array reflect changes made view tried change property child vm new index values nt seem solve problem actual array still best way mutate vrepeat list reflect listorder viewgui", "num": "323", "d": "6/2014"}, {"title": "html entities automatically escaped", "body": "seems vuejs templating language autoescape strings made filter wrap urls links printed results escaped html could nt find mention docs way avoid escaping shouldnt filter instead like unsafestring escape", "num": "322", "d": "6/2014"}, {"title": "improve vmodel behavior", "body": "current problems used together options created initial value correctly set expected used order directives would result different behavior solve also need normalize browser difference ordered bracket access syntax working syncing values back", "num": "321", "d": "6/2014"}, {"title": "concerns implementing vue", "body": "really like vue recently started get frustrated angular verbosity issue many damned javascript mvc mvvm frameworks impossible predict relevant near future plans vue see evolving invested maturing viable alternative knockoutbackboneangular etc", "num": "320", "d": "6/2014"}, {"title": "accessing view model array outside vrepeat directive causes method invocation error", "body": "using view model object array returned via xmlhttprequest outside vrepeat directive causes elements within vrepeat directive lose ability invoke methods example jsfiddle", "num": "319", "d": "6/2014"}, {"title": "set directives", "body": "wondering easy way using directives like vmodel example reason asking problem got example", "num": "318", "d": "6/2014"}, {"title": "drop event works textarea instead div", "body": "", "num": "317", "d": "6/2014"}, {"title": "backbone vue", "body": "possible use backbone models vue", "num": "316", "d": "6/2014"}, {"title": "filters", "body": "possible create filters get set use case example accept currency dollars save cents", "num": "315", "d": "6/2014"}, {"title": "opportunities share methods custom directive around bindunbindupdate", "body": "example would add event listener bind remove unbind wrote exposed better way thanks", "num": "314", "d": "6/2014"}, {"title": "vif behavior differs given property key versus expression", "body": "jsfiddle demonstrates directive behaving differently seemingly equivalent scenarios works expected given simple property key expressions computed properties appear cause contents evaluated even result falsy", "num": "313", "d": "6/2014"}, {"title": "value textarea sync back model", "body": "hi bind model textarea works fine content textarea modified javascript model change insert text javascript example thanks", "num": "312", "d": "6/2014"}, {"title": "vstyle fails value number", "body": "see fiddle looks like fixed", "num": "310", "d": "6/2014"}, {"title": "bind multiple events one element", "body": "eg ondragover ondragend ondrop one element bind one event", "num": "309", "d": "6/2014"}, {"title": "preselect select element", "body": "set attr element whose value equal itemcategory especially itemcategory changed", "num": "308", "d": "6/2014"}, {"title": "methods lose context called via get", "body": "see first call log correctly second name causes lose context possible fix would ensure defined bound vm putting vm properties take look pr soon", "num": "307", "d": "6/2014"}, {"title": "backbone like events options", "body": "really liking vue considered adding options similar backbone example instead defining handlers like options would tidy things could submit pr understand internals better", "num": "304", "d": "6/2014"}, {"title": "cound used watch array item data something else", "body": "array item changed watch whole list find change manual cound convenient way point change question changes mutation methods thanks", "num": "303", "d": "6/2014"}, {"title": "weird behavior vtransition", "body": "tried use vuejs create mobile app like one found tutorial facing weird problem vtransition nt animation neither destroy old object component code found probably nt bug stupid mistake nt find place ask support think vue needs google group something kind inquires", "num": "301", "d": "6/2014"}, {"title": "vstyle parse problem", "body": "example version version example version open console see told", "num": "299", "d": "6/2014"}, {"title": "vview clear component data", "body": "wrote component data data cleared exist opportunities save component data", "num": "297", "d": "6/2014"}, {"title": "replacing object data somehow keeps old keys", "body": "object data section replace stage throughout app result strange object new object properties values somehow also keeps old keys undefine made jsfiddle illustrate click button notice old keys still values undefined", "num": "296", "d": "6/2014"}, {"title": "use import arrage code", "body": "import standard", "num": "295", "d": "6/2014"}, {"title": "way manipulate model custom directive", "body": "would nice way directly change model data passed custom directive directive might look like want change model updated event ill access like javascript bind function nice var props thiskeysplit thisvm props props consolelog thisvmreqpostalcode gt would like something like thismodel guide sais treat properties readonly refrain changing think would nice able manipulate model data directives nt see solution ugly one made", "num": "294", "d": "6/2014"}, {"title": "select element vmodel von change onchange works differently ff", "body": "hi noticed ff onchange event triggered vmodel variable updated browsers variable updated first example select new value select element text updated selected value ff equal last selected value", "num": "293", "d": "6/2014"}, {"title": "template contents ignored tag unless wrapped", "body": "demonstrated anything template tag appears ignored unless content tag wrapped inside another tag big problem certainly caused halfanhour headscratching unavoidable may worth mentioning docs somewhere", "num": "292", "d": "6/2014"}, {"title": "vrepeat nt work custom directives", "body": "problem vrepeat nt work correctly custom directives vue nt notice directive", "num": "291", "d": "6/2014"}, {"title": "using von iframes", "body": "using von iframe element need extra steps get behave expected instance get click work need wait load event use addeventlistener add event handlers contentwindowwindowdocumentbody thoughts could work seamlessly", "num": "290", "d": "6/2014"}, {"body": "yes something bracket access syntax working properly planned fixed next release", "d": "6/2014"}, {"body": "marvellous thanks", "d": "6/2014"}, {"body": "able get around issue boxing everything template tag div referencing easy way found template aka documentfragment lacking would nt work thanks alessandro", "d": "6/2014"}, {"body": "use template tag option instead eg", "d": "6/2014"}, {"body": "unfortunately nt work dom node would vue id lookup based anyway use template pass actuall innerhtml supposed parse thanks", "d": "6/2014"}, {"body": "catch used created cached documentfragment reuse actual element vue use render stuff hand tags used render node browsers wo nt render parses content documentfragment need options work working example", "d": "6/2014"}, {"body": "configuration like el div template thisshadowroot data test input thisshadowroot pointing template getting", "d": "6/2014"}, {"body": "alternative tried modify div lookup slightly el thisshadowrootqueryselector div template thisshadowroot data input input got uncaught datacloneerror failed execute clonenode shadowroot shadowroot nodes clonable thats probably evil lies", "d": "6/2014"}, {"body": "would use shadowroot template post fiddle see setup", "d": "6/2014"}, {"body": "quite sure implement fiddle honest otherwise would done first place going give try template getting shadowrooted content encapsulatedhidden rest dom ever look polymer polymerprojectorg similar twoway binding functionality shadowroot place thing wanted something similar regular web components look independent solution like", "d": "6/2014"}, {"body": "sorry bring another point possible invert relationship data vue instance hand vue reference object would get reference watched used directivebind", "d": "6/2014"}, {"body": "mean watch data actually used templates", "d": "6/2014"}, {"body": "exactly", "d": "6/2014"}, {"body": "unfortunately possible moment", "d": "6/2014"}, {"body": "okay limitation current implementation nt come requirement", "d": "6/2014"}, {"body": "idea something meant observed however simply vm created late additions never get watched", "d": "6/2014"}, {"body": "see point thing data pointing fairly large object holds simple object like arrays string like also dom elements well stuff likely watched reside object convenience would big effort adapt rather make configurable", "d": "6/2014"}, {"body": "prefix properties properties ignored observer also anything pure js object ignored", "d": "6/2014"}, {"body": "yeah noticed escaping prefix would ultimately break mixing things object every entry would adhere rule nt imho detection nonstandard js objects work currently functions html nodes plain values watched object still run rangeerror maximum call stack size exceeded", "d": "6/2014"}, {"body": "found nodes implement full htmlelement interface use vue rough test using vue custom elements", "d": "6/2014"}, {"body": "thanks giving try workaround currently wrapping span around shadomdoms content anything specific need htmlelement miss shadowroot node", "d": "6/2014"}, {"body": "oh way using chrome native shadowroot might well differ quite bit polyfill platformjs provides", "d": "6/2014"}, {"body": "testing chrome seems spec draft shadowroot implement full element interface e g etc", "d": "6/2014"}, {"body": "nt everything vue", "d": "6/2014"}, {"body": "agree evan nothing mvvm", "d": "6/2014"}, {"body": "thanks feedback", "d": "6/2014"}, {"body": "methods present created vm", "d": "6/2014"}, {"body": "ok thanks", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "thanks answer documented better maybe still learning vuejs things would never thought seems little unintuitive willing eager contribute love vue asking know accept pr", "d": "6/2014"}, {"body": "submit pr docs", "d": "6/2014"}, {"body": "familiar jqueyui define use access vm data least", "d": "6/2014"}, {"body": "right actually simple", "d": "6/2014"}, {"body": "sorry wrong case sample code abc prepended onto select box", "d": "6/2014"}, {"body": "looks like issue observerensurepath", "d": "6/2014"}, {"body": "thanks information let investigate detail", "d": "6/2014"}, {"body": "need swap values array see documentation mutation methods section small example", "d": "6/2014"}, {"body": "use raw html docs third note box", "d": "6/2014"}, {"body": "please refer plans obviously nt much time thought work plugins much keep vue core well maintained vue never intended alternative fullsolution frameworks like angular philosophy use together libraries via ecosystem like component browserifynpm also addresses pretty different concerns compared backbone similar knockout terms use case personally think already viable alternative knockout although mature", "d": "6/2014"}, {"body": "error thrown initially undefined set empty array", "d": "6/2014"}, {"body": "desired behavior", "d": "6/2014"}, {"body": "desired behaviour variations total property nt check radio buttons clicking radio buttons changes property total like explained workaround found far use computed property empty get method like", "d": "6/2014"}, {"body": "case might easier listen change event radio buttons instead using vmodel", "d": "6/2014"}, {"body": "right case empty get also seems work well thanks", "d": "6/2014"}, {"body": "supposed drag", "d": "6/2014"}, {"body": "images", "d": "6/2014"}, {"body": "vue uses plain objects models general compatible backbone model also necessary use backbone models vue plain objects fairly simple implement validationajax functionalities libraries", "d": "6/2014"}, {"body": "libraries thinking example", "d": "6/2014"}, {"body": "eg", "d": "6/2014"}, {"body": "thank closing", "d": "6/2014"}, {"body": "think computed properties may help", "d": "6/2014"}, {"body": "use computed property convert different properties create computed property property want store cents display dollars", "d": "6/2014"}, {"body": "filter get probably good idea use filters purpose yes need create computed property property want however extract conversion logic functions reuse computed property definitions", "d": "6/2014"}, {"body": "considering vue heavily influenced rivetsjs among others wondering reason filters seems like natural fit since already specify keypathproperty set write directive keypathproperty nt need specified filter implementation making filter reusable different properties like code also seems readable computed properties", "d": "6/2014"}, {"body": "really good point set filter could simplify validations consider adding next version thanks", "d": "6/2014"}, {"body": "thank", "d": "6/2014"}, {"body": "emit event vm", "d": "6/2014"}, {"body": "attach handler directive instance", "d": "6/2014"}, {"body": "bpierre want set private handler directive dispatched abroad advice demo also uses thanks really cool", "d": "6/2014"}, {"body": "vue directive listening input event occur change content via js could manually trigger tested firefox chrome may need abstraction layer support every browser reason need change outside app", "d": "6/2014"}, {"body": "another solution could change value vm let job", "d": "6/2014"}, {"body": "many richtext editor change textarea javascript example insert image execute found way get work capture setrangetext call like vue process vmodel textarea", "d": "6/2014"}, {"body": "want avoid complicating internals one solution input elements bound augmented method syncs current view state back model nt manually emit event thoughts", "d": "6/2014"}, {"body": "sounds good", "d": "6/2014"}, {"body": "thanks noticed probably needs cast stuff like strings", "d": "6/2014"}, {"body": "add without", "d": "6/2014"}, {"body": "want cast strings setting style values number results setting empty string instead value", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "thanks nt work time", "d": "6/2014"}, {"body": "etanxing look html initialization devtools see selected value correctly set vue issue chrome windows", "d": "6/2014"}, {"body": "etanxing google chrome issue works time firefox safari nt work st time google chrome", "d": "6/2014"}, {"body": "seems quite inconsistency browser behaviors regarding form input elements try resolve consistent implementation next version", "d": "6/2014"}, {"body": "remoe sure either asip chrome stable windows amp mac thanks", "d": "6/2014"}, {"body": "closing discussion done", "d": "6/2014"}, {"body": "actually seeing spots could implemented sure spot best possibly definevmprop downside reference original method match bound method ie sure matters", "d": "6/2014"}, {"body": "nt really think issue since always", "d": "6/2014"}, {"body": "sorry example nt complete actually using context several levels deep either something like even unclear goal instead ultimately trying avoid traversing much avoid making component tightly coupled another thoughts", "d": "6/2014"}, {"body": "holic tried use events instead traversing vms chain", "d": "6/2014"}, {"body": "yeah really good practice explicitly call methods parents events make code decoupled", "d": "6/2014"}, {"body": "perhaps structured application wrong failing see events could solve using vue power product search root vm houses individual components search input field attached coordinates routing root vm two child components one results product search one shopping cart search triggered root sends results component generate product results results clicked add cart display result changes whether product cart products removed cart subsequently changes results displayed way see events working case parent parent listening events relay via children seems weird would guys recommend structuring application", "d": "6/2014"}, {"body": "nt necessarily need make vue event system nt make sense use global event bus like node event emitter even empty vm", "d": "6/2014"}, {"body": "also nt want add additional lib eventbusmediator could use root cheap mediator like", "d": "6/2014"}, {"body": "closing since usage issue rather implementation one holic feel free continue discussion want", "d": "6/2014"}, {"body": "considered could handy", "d": "6/2014"}, {"body": "first glance looks pretty think object events created flexible example adding event element etc object could nt add events different viewmodel state", "d": "6/2014"}, {"body": "dmfilipenko fair point guess two syntax coexist without much problem", "d": "6/2014"}, {"body": "need watch inside array objects probably better create component used together way child component instance gets notified changes assigned data", "d": "6/2014"}, {"body": "great thanks", "d": "6/2014"}, {"body": "css property prefixed nt think chrome shipped nonprefixed transform yet", "d": "6/2014"}, {"body": "thanks please consider google group vue thank great library", "d": "6/2014"}, {"body": "think vwith replaces data object", "d": "6/2014"}, {"body": "ahmadibrahim also think made pull request fix behaviour", "d": "6/2014"}, {"body": "inherit individual properties", "d": "6/2014"}, {"body": "intended behavior ensure computed properties amp expressions need access properties nt throw errors", "d": "6/2014"}, {"body": "would nt issue anyway since resulting values missing", "d": "6/2014"}, {"body": "way explicitly replace object ie clean one", "d": "6/2014"}, {"body": "bit hack overwrite different data type assign object wiped clean", "d": "6/2014"}, {"body": "chains one level eg clean object error case probably better mutate place", "d": "6/2014"}, {"body": "nt provide benefits commonjs still needs transpiling anyway supported browsers bothering standard actually ships", "d": "6/2014"}, {"body": "component importexportmodule supported box agree component actually break vue workflow worth instead", "d": "6/2014"}, {"body": "module import syntax rediscussed according", "d": "6/2014"}, {"body": "broader purpose directive could post jsfiddle", "d": "6/2014"}, {"body": "use note cause circular updates directive function need implement kind lock case", "d": "6/2014"}, {"body": "exactly needed guess missed api ref thanks jtremback making fiddle solved ended", "d": "6/2014"}, {"body": "difference firefox processes stores element attributes compared webkit blink sure ie run example firefox order reversed vue nt give directive special priority directives use watch want something value changes", "d": "6/2014"}, {"body": "thanks dlh explanation", "d": "6/2014"}, {"body": "nt think content tag selfclosing need", "d": "6/2014"}, {"body": "confirm see", "d": "6/2014"}, {"body": "aha try nt considered closing tag assumed simple replacement thanks", "d": "6/2014"}, {"body": "dmfilipenko trying repeat empty array", "d": "6/2014"}, {"body": "brandonpierce code changes original array", "d": "6/2014"}, {"body": "supposed use custom directives way directives meant manipulating dom also nothing code links together either pipe sort filter use computed property", "d": "6/2014"}, {"body": "thanks misunderstood concept directives", "d": "6/2014"}, {"body": "ah never thought guess check bound element iframe implementation", "d": "6/2014"}, {"body": "tried using provided minified version already minified semicolons", "d": "6/2014"}, {"body": "vue breaking people builds stylistic choices", "d": "6/2014"}, {"body": "jtremback semicolons discussed many times fact tool deal arbitrary javascript work semicolonless javascript closure compiler rare exception enforces special stylistic requirements advanced mode work way phrase would closure compiler ca nt deal semicolonless javascript rather semicolonless javascript breaking people builds", "d": "6/2014"}, {"body": "minified version also successfully run closure compiler even", "d": "6/2014"}, {"body": "development production version vue processed closurecompiler advancedoptimizations errors", "d": "6/2014"}, {"body": "also issue nothing automatic semicolon insertion related usage reserved javascript words completely fine use reserved word according spec issue minimizer", "d": "6/2014"}, {"body": "yeah bad assumed semicolons ran kind problems closure compiler past log indicate keyword problem according spec jordangarcia share version closure compiler using might fixed part since working dlh", "d": "6/2014"}, {"body": "closing due inactivity", "d": "6/2014"}, {"body": "hi come across issue expecting number vms update inner vm number spins control looks like may regression testing works expected", "d": "6/2014"}, {"body": "encountered problem another example", "d": "6/2014"}, {"body": "fixed thanks examples guys", "d": "6/2014"}, {"body": "ok maybe distinction needs docs several usecases almost equivalent though", "d": "6/2014"}, {"body": "sure necessary since check vue methods well thanks suggestion though", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "dynamic two way binding tricky implement honestly rare use case moment may look requests feature", "d": "6/2014"}, {"body": "closing due inactivity", "d": "6/2014"}, {"body": "created directive vonce someone need", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "hey going updates", "d": "6/2014"}, {"body": "nice tried use javascript effects docs nt enough brains understand jsfiddle example finally got thanks learning extended jsfiddle accordion list nice slidetransition works quite nice run different problem canshould parent vm access children vms created vrepeat ended ugly code accessing internal state parent vm guesshope better way", "d": "6/2014"}, {"body": "yes use vref directive together", "d": "6/2014"}, {"body": "aha found answer docs vref used together vrepeat value get array containing child components mirroring data array accordionjsfiddle use vref works fine", "d": "6/2014"}, {"body": "nt work used component calls overwritten build step instance could fixed like bpierre suggested js var modules utils utils config config transition require transition observer require observer viewmodelrequire function path return modules path", "d": "6/2014"}, {"body": "yeah might better way go open prs", "d": "6/2014"}, {"body": "preference external plugins structured released specific directive thinking open sourcing directive currently packaged larger app built browserify uses module format recommended docs toss project folder add release asis let people include vue project manually via bit file included project used via attribute", "d": "6/2014"}, {"body": "holic doc regarding convention plugins", "d": "6/2014"}, {"body": "ah fantastic sorry missed page", "d": "6/2014"}, {"title": "better documentation backbonerouter backbonehistory", "body": "working two classes little finding nt documented well backbone types instance keep go back source code remind event gets fired navigation actually occurs arguments furthermore types public functions like backbonehistorygetfragment nt documented functions might intentional sure", "num": "3205", "d": "6/2014"}, {"title": "question events trigger process", "body": "test called callback list altered trigger behaviour seems weird one event listener removes another event listener first one happens second one wondered event still fired maybe explanation preference kind behaviour thank", "num": "3203", "d": "6/2014"}, {"title": "add tldr license summary", "body": "somewhere readme would nice", "num": "3202", "d": "6/2014"}, {"title": "collectionadd working intended mege true", "body": "following code link jsbin", "num": "3201", "d": "6/2014"}, {"title": "use need", "body": "jashkenas doubt callback mind callback invoked event proper situation need execute funcion matter often call need call one gone think need use like jquery english really bad described distinct thank", "num": "3200", "d": "6/2014"}, {"title": "triggered collectionfetch even though changes occur", "body": "view property set every seconds view calls time called event triggered even though none models change took look source seems offending line collection object followed case model already exists set seems used determine whether collection sort fetch set models already exist collection set process causing modelmap modelid return undefined causing sort occur", "num": "3199", "d": "6/2014"}, {"title": "modelfetch options setting custom parse", "body": "set url model temporary one fetch request ca nt change way parsed suggesting way set custom parse every fetch", "num": "3198", "d": "6/2014"}, {"title": "mvc good", "body": "good front mvc", "num": "3197", "d": "6/2014"}, {"title": "unsetting attributes via set method assume void value", "body": "following fire change event comparison take account flag attribute unset value attributes ignored line changed assumption also matches line deleting entry", "num": "3196", "d": "6/2014"}, {"title": "documentation complete callback", "body": "honors callback mentioned documentation", "num": "3195", "d": "6/2014"}, {"title": "router backwards incompatible change", "body": "please add note changelog detailing locationsearch included router fragment must matched regexp route declarations might also good idea include note part", "num": "3192", "d": "6/2014"}, {"title": "pushstate issue tests", "body": "environmentjs setup tests trouble history start method checks existence pushstate haspushstate since set function nt exist prior means test report pushstate means tests pass nt fix environmentjs tests fail missing something intentional", "num": "3191", "d": "6/2014"}, {"title": "bower req add backboneminjs", "body": "hi useful add backboneminjs bower installation make life bit easier", "num": "3188", "d": "6/2014"}, {"title": "thisoptions undefined", "body": "following code worked expected older version backbone upgrading backbone confirmview options property anymore code invoked ca nt figure wrong", "num": "3187", "d": "6/2014"}, {"title": "put ajaxprefilter", "body": "backbone app modularized using require first time browser opens app app nt load models trying load using url yet set ajaxprefilter calling ajaxprefilter like calling routerinitialize backbonehistorystart sure proceed someone suggested wrap backbonesync options array expected url attribute would nt use forum seems general problem", "num": "3184", "d": "6/2014"}, {"title": "backbonehistory routernavigate replace true working related issue", "body": "following setup issue noticed replace true flag working expected backbone documentation states using flag prevent navigate request insert history record browser case see hit browser back button successfully navigating flow desired flow one colleague suggested adding replace true master router handoff modular router well worked well sure need add flag two places since navigate command executed fact obviously permanent fix null issue workaround unavoidable need find solution unnecessary history addition", "num": "3183", "d": "6/2014"}, {"title": "modular routing dummy route workaround fix requested", "body": "current project building largescale modular web app setup modularized routing structure encountered handoff applevel master controller modular controller working properly reviewing several solutions online found calling dummy route modular router solved issue however dummy route call required permanent fix workaround flow appmainjs appmasterrouterjs main define function dashboardrouter dashboardcontroller use strict router backbonerouterextend routes modulehome home home function action master router appscriptsroutesmasterrouterjs backbonerouterextend routes module fragment module module function fragment setup path requirejs points modules appropriate folder nt specify full path require function backbonehistorynavigate fragment true", "num": "3182", "d": "6/2014"}, {"title": "detail tutorial router", "body": "", "num": "3180", "d": "6/2014"}, {"title": "could manage template files", "body": "", "num": "3179", "d": "6/2014"}, {"title": "jquery xhr success error complete deprecated", "body": "jquery xhr documentation mentions following message backbone uses nearly calls via parameter probably updated use", "num": "3178", "d": "6/2014"}, {"title": "routerextractparameters decode caused issue", "body": "original test url fragment login avalue amp backurl backbone router execution got querystring avalue amp backurl hard parse querystring correct parameters", "num": "3175", "d": "6/2014"}, {"title": "tojson options", "body": "regarding documentation model collection take optional arguments per code argument never used way remove argument documentation code update code functionality like guess predictable usage argument array keys string function omit return new object nt need", "num": "3171", "d": "6/2014"}, {"title": "binary search sorted collections", "body": "considering writing small binary search function method sorted collections would also modify current methods order take advantage feature whenever possible user search one field comparator would offer significant reduction searching already sorted collection lg n furthermore speedup could achieved users without modify code may also worth considering modifying method offer n insertion sorted collections opposed n lg n currently achieved resorting entire collection main downside idea may slower inserting many models one collection resorted case think put meantime submit pull request would considered desirable feature", "num": "3169", "d": "6/2014"}, {"body": "well really method need know pull requests changing docs definitely welcome backbone bit unique best documentation source set somewhere code follow rabbit hole", "d": "6/2014"}, {"body": "furthermore types public functions like backbonehistorygetfragment nt documented methods public nt include leading underscore part public api per se maybe renamed certain worth effort confusion", "d": "6/2014"}, {"body": "hi dimalev sentence could accurately written callback list particular event altered trigger reason altering list iterating cause handlers skipped hope helps smiley", "d": "6/2014"}, {"body": "sentence could accurately written callback list particular event altered trigger yeah test name says smile reason altering list iterating cause handlers skipped talking iteration like right trick allows maintaining events allowing remove events processing without skipping notremoved ones wondering implement events maintenance trigger occurs see implementation suggesting another implementation ask behaviour intetional picked easyenough solution removeevent functionality would preffereble", "d": "6/2014"}, {"body": "yeah test name says smile sorry emphasized added particular event ask behaviour intetional yes intentional handlers modified called", "d": "6/2014"}, {"body": "yes intentional handlers modified trigger called ok reasons preffer approach example one event handler removes another still called kinda confused sure situation kinda wrong design fact removed event anyway triggered makes think happen", "d": "6/2014"}, {"body": "believe decided approach simplest also case many libraries dom event listeners jquery event listeners node event emitters etc", "d": "6/2014"}, {"body": "thanks thanks mit license exotic one one quickly become familiar looking open source projects", "d": "6/2014"}, {"body": "merge two models identifiers try adding definition", "d": "6/2014"}, {"body": "caseywebdev thanks lot mate quick reply", "d": "6/2014"}, {"body": "hi remove call see several tests failing reason present handle nested calls event hope clears", "d": "6/2014"}, {"body": "hi braddunbar got thank much", "d": "6/2014"}, {"body": "possible dupe others make small reproducible jsfiddle showing bug issue models nt property set yet correct", "d": "6/2014"}, {"body": "yeah looked nt think issue right models properties set initially fetched server first time future requests tried one model id get issue took look source part nt make sense checked set nt seem right since always return true", "d": "6/2014"}, {"body": "check handle case mind making jsfiddle see mean thing could think might issue trying set response json field nested causing existing call fail", "d": "6/2014"}, {"body": "nope id nested example response fiddle demonstrating using models attributes backbone looks like got introduced works fine logic around pretty hard follow imo", "d": "6/2014"}, {"body": "modelid checked modelmap set nt seem right since modelmap modelid always return true far remember think prevent duplicate models id getting set twice ca nt say fully follow logic either agree undesirable although probably destructive idempotent collection create fix failing test case keeps others check happy merge", "d": "6/2014"}, {"body": "looks like suppose maintain order collections get set ordering set collection fetch server get going new order hence event fired seems like problem ordering occurs even ordering models set equal order existing models fetch get still get event looking code carefully looks like always triggered false user defined put simply nt choose ordering collection reordered every time even refuse weird seems bug nt make sense true true know called true true true way event false however contradicts getting rid fixes problem besides nt think setting collection based order models even considered anyway sorting arrange set things based one attributes purpose hand simply setting resetting models based position collection set think fix makes lot sense caseywebdev would love get thoughts since made additions", "d": "6/2014"}, {"body": "would nt better check custom url method seems like passing oneoff parse function would get ugly fast mention really edgecase", "d": "6/2014"}, {"body": "hi nadoedalo right options get passed use need custom function", "d": "6/2014"}, {"body": "looks like bug thanks reporting", "d": "6/2014"}, {"body": "hi bruth option part public api present support like unset many attributes pass value", "d": "6/2014"}, {"body": "ended reason used flag unset method support taking object whose keys unset sure deliberate decision certainly would convenient supported make change suggested jun pm brad dunbar notifications githubcom wrote hi bruth unset option part public api present support unset like unset many attributes pass undefined value modelset foo undefined bar undefined reply email directly view github", "d": "6/2014"}, {"body": "nt quite follow mean option delete keys", "d": "6/2014"}, {"body": "passing object unset side effect visible value position may worth putting type check prevent otherwise silent failure unsetting keys suggesting ensure set expliclty true", "d": "6/2014"}, {"body": "simply would like unset keys object regardless values", "d": "6/2014"}, {"body": "hi juzerali backbone nt support directly jquery docs options success error callbacks jquery request options backbone directly support options give passed via", "d": "6/2014"}, {"body": "yeah thought options proxy jquery ajax looking save destroy methods sync thanks jun pm brad dunbar notifications githubcom wrote closed reply email directly view github", "d": "6/2014"}, {"body": "addressed", "d": "6/2014"}, {"body": "hi latentflip check existence usually stub tests testing way much easier way used allowing calls attempting check url assigning empty function prevent calls falling messing test environment hope clears smiley", "d": "6/2014"}, {"body": "hey braddunbar hmm sure see one test nt actually failing longer history stubbed null three others still three tests fail change tests history nt stubbed null means using windowhistory environmentjs pushstate function albeit empty added never windowhistorypushstate issue someone wants support never call wo nt work", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "hi thanks please see answer underscore repo", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "please search opening issues relevant ones", "d": "6/2014"}, {"body": "would nt use forum seems general problem nope place bug reports feature discussions troubleshooting help good luck", "d": "6/2014"}, {"body": "sorry thinking would something would general enough warrant included feature discussions apologize noise garey mills fri jun jeremy ashkenas notifications githubcom wrote would nt use forum seems general problem nope place bug reports feature discussions troubleshooting help good luck reply email directly view github generate messages directories read files opened rather silent", "d": "6/2014"}, {"body": "oh big super star underscorejs really really good work", "d": "6/2014"}, {"body": "using multiple routers per page recommended maybe even supported someone correct wrong provide failing test case glad take look", "d": "6/2014"}, {"body": "hi egpierro trouble following exactly want would mind posting example said usually recommend using one router calling modules want break routes", "d": "6/2014"}, {"body": "like said would nt recommend using multiple router instances time want split routing modules recommend large routers use pattern favorite bundler js routersfoojs moduleexports foo function routersbarjs moduleexports bar function routersrouterjs moduleexports backbonerouterextend routes extend baz function require foo require bar gon na close got failing test case please post happy take look", "d": "6/2014"}, {"body": "hi hwoarangzk question better suited stackoverflow tag backbonejs irc channel", "d": "6/2014"}, {"body": "yep thanks stavarotti try one helpful resources sure find good articles google", "d": "6/2014"}, {"body": "sorry putting questions tried visit stackoverflow due network policy ca nt sign ask question", "d": "6/2014"}, {"body": "ah try mailing list irc channel might luck", "d": "6/2014"}, {"body": "rarely familiar said mailing list irc channel tt could please give links lead communities asking answering questions backbone thank much", "d": "6/2014"}, {"body": "documentcloud freenodenet irc", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "ah recall journalist friends china proxies tunneling software get around great firewall may blocked nt know specifics unfortunately feel free reach email mine profile try help", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "hi hwoarangzk certainly tools combining templates scripts fairly easy node environment said sort question probably better suited stack overflow irc channel freenode github issues questions regarding development backbone", "d": "6/2014"}, {"body": "sorry putting question due network policy ca nt sign stack overflow sorry", "d": "6/2014"}, {"body": "case use new backbonemodel save success donecallback error errorcallback actually use ajax new backbonemodel url success donecallback error errorcallback type post pass callback ajax options success error relationship deferred method ajax return jqxhr object implement promise interface success error complete jqxhr deprecated names make confusion different things", "d": "6/2014"}, {"body": "want use deffered method use like way new backbonemodel save done fail always new backbonemodel save success error complete however free pass success error callback options", "d": "6/2014"}, {"body": "yep search issues find background", "d": "6/2014"}, {"body": "hi lucozhao version backbone using", "d": "6/2014"}, {"body": "added test case addresses case appears pass please point issues see thanks posting either way", "d": "6/2014"}, {"body": "hi braddunbar thanks much swift response using latest version see error travis ci build could complete due error info test case page problem see debug params got avalue amp backurl instead original avalue amp backurl string please advise", "d": "6/2014"}, {"body": "whoops looks like running tests node well unnecessary using node run phantomjs amended tests passing browser seeing incorrect parameters post sample code", "d": "6/2014"}, {"body": "using chrome sample codes probably usage issue routes module querystring viewfromquerystring module querystring viewfromquerystring module viewfactory module page querystring viewfrompagequerystring module page querystring viewfrompagequerystring module page viewfactory module page id querystring viewfactory module page id querystring viewfactory module page id viewfactory filter viewfactory viewfromquerystring function module querystring thisviewfactory module null null querystring second function passed querystring backbone already decoded", "d": "6/2014"}, {"body": "ah yes nt need nt include search parameters route definition anymore words following fragment snippet would log", "d": "6/2014"}, {"body": "hi braddunbar thank much help changed route definition seems work possible explain bit root cause routes module viewfromquerystring module page viewfrompagequerystring module page id viewfactory filter viewfactory", "d": "6/2014"}, {"body": "sure since version backbone supported search params fragment without extra splat param means old style params matching removed old params still work change old semantics including decoding", "d": "6/2014"}, {"body": "awesome thanks info", "d": "6/2014"}, {"body": "need app something backbone especially something drastic omitting attributes", "d": "6/2014"}, {"body": "suggestion nt need mentioned argument present never used code regarding issue found ticket", "d": "6/2014"}, {"body": "argument present primarily documentation extending wo nt cause harm regardless", "d": "6/2014"}, {"body": "desirable sure attempted past difficulty fare better would great addition", "d": "6/2014"}, {"body": "hi thejameskyle case case basis perhaps could exposed however think exposed could change supporting userconfigurable variable much difficult fixed behavior instance think exposed see many tickets regarding want specific variables exposed let consider separately", "d": "6/2014"}, {"body": "braddunbar would router regex discussion", "d": "6/2014"}, {"body": "sure use case customizing", "d": "6/2014"}, {"body": "braddunbar trying create subclass backbonerouter allow subroutes added recursively based parent routers need modify defaults slightly use original regex places way currently possible manually copy paste backbone source ie trying avoid code duplication possible", "d": "6/2014"}, {"body": "trying create subclass backbonerouter allow subroutes added recursively based parent routers gt foo gt foorouter gt id nt quite follow could give example", "d": "6/2014"}, {"body": "nt final api design means general concept js url fragment var approuter marionetterouterextend routes foo foo gt gt foo bar bar foo function return new foorouter var foorouter marionetterouterextend routes index new create id show gt gt foo idedit edit design would allow many levels routers one wants routers routers routers transitioning routes within subrouter parent routers method called subroute event triggered part larger exploration multiapplication structure marionette future", "d": "6/2014"}, {"body": "see mean sure exposing regular expressions would help looks like need rather different implementation", "d": "6/2014"}, {"body": "braddunbar overwriting parts history possibility guess see separate unrelated issue regexes key parsing backbone routes broad aim routes entirely sure exact object end whether overwrite history sure ideas far required copypasting regexes parse routes give another example something experimented supplying developer map parts url alongside named part route route navigate supplying user instead", "d": "6/2014"}, {"body": "braddunbar jmeas yes history also going extended treatment would helpful", "d": "6/2014"}, {"body": "hi hit issue product edge version seems working us going publish fix official package increase version number", "d": "6/2014"}, {"body": "packages npm bower nt even debate publish package npm bower semver part api contract enter break contract break modules depend break production code depends module question use semver question want good citizens ecosystem answer advertised loudly clearly safe install package like would package follows api contract", "d": "6/2014"}, {"body": "publish package npm bower semver part api contract enter onerous requirement", "d": "6/2014"}, {"body": "interested perspective semver know jashkenas thoughts", "d": "6/2014"}, {"body": "yes npm assumes packages repository follow semver determines packages compatible doc version must parseable nodesemver bundled npm dependency npm install semver use version numbers lie interpreted semver correct parsing thus breaking contract breaking compatibility people use package versions npm ecosystem matter personal preference matter package interoperability possible force package play nice nt use semver sure nt call loudly boldly top readme users know necessary introduce breaking change code could easily break publish packages package repositories versioning becomes part interoperability contract ignore contract peril users", "d": "6/2014"}, {"body": "onerous requirement knowing thousands packages go full blown application onerous requirement forcing users tightly lock versions packages handful modules nt follow rules onerous requirement complicates matter keeping bug fixes security patches etc good reasons follow semver package number might get really big terrible reason use semver tracking progress application distant second reason package versions important function version know version work application btw package number would get really big maybe code smell bump major version make breaking change breaking change definition one breaks openclosed principle open extension closed breaking changes good apis follow openclosed principle closely reasonably users keep pace api changes nt break existing code", "d": "6/2014"}, {"body": "think lesson learned nt use pulling backbone via packagejson", "d": "6/2014"}, {"body": "interested perspective semver general agree arguments wonder bumping major version best course action every breaking change underscore mostly surface area lot underscore used great deal thirdparty libraries requiring keep huge versions would onerous perilous package released today depend underscore version pin dependencies expense perhaps requiring separate underscore main project think lesson learned nt use pulling backbone via packagejson yep", "d": "6/2014"}, {"body": "think lesson learned nt use pulling backbone via packagejson outlined takeaway lesson", "d": "6/2014"}, {"body": "think lesson learned nt use pulling backbone via packagejson consequence protect code breaking lesson would like following semver good everyone", "d": "6/2014"}, {"body": "appreciate value romantic versioning bad nt coexist well noted always projects nt follow semver strictly attempt fall short system always leaks little least backbone generally good breaking things", "d": "6/2014"}, {"body": "dgbeck things break time per versions see earlier comment think value following semver really talked fact guys push minor features bug fixes allow people depends upstream get changes free great value add obviously comes cost complexity maintainer", "d": "6/2014"}, {"body": "issue got rid leading slash working properly", "d": "6/2014"}, {"body": "nice know catch false routes app start supposed incorrect routes app started", "d": "6/2014"}, {"body": "bendman see plugin", "d": "6/2014"}, {"body": "strml bendman neat solution exactly could used app need separate plugin", "d": "6/2014"}, {"body": "know kind old since found search figured post solution nt found updates otherwise allow us specify optionally want handled removal slash causing identity solution issue relogin requests every time hit home route without trailing slash notes took route versus editing backbone js directly effort keep playing nicely backbone downloaded via nuget package solution used minified version part changed historystarted backbonehistorystarted call pathstripper needed reference backbonepathstripper since called outside class place somewhere js dom ready", "d": "6/2014"}, {"body": "hey kyse solution would work use case advise adding monkey patches minfied code think nightmare maintain", "d": "6/2014"}, {"body": "update", "d": "6/2014"}, {"body": "would love issue need model reset server response calling send request bad certain user interactions abort jqxhr leaving nowempty model currently resort hack accomplish seems like would simple addition would change default behavior", "d": "6/2014"}, {"body": "agree paul flow exactly elegant", "d": "6/2014"}, {"body": "whole point rendering based data data nt changed nt need rerender would application nt set way want listening changes instead rerender ui scratch forcing event change occurred would foolish thing backbone", "d": "6/2014"}, {"body": "appears still issue even using collectionadd arrayofmodeldata fails", "d": "6/2014"}, {"body": "pity mainstream backbone nt include workaround still minimum version enterprises ie major browser business hand big deal modify backbone usage enterprise software another workaround adding problematic methods prototype explicitly", "d": "6/2014"}, {"body": "implementing data binding based events whether display pager driven length collection may compelling something", "d": "6/2014"}, {"title": "mandatorysetterfunction route setup ember", "body": "seeing caught exception route transition causes abort issue seems calls exactly going known workarounds", "num": "5093", "d": "6/2014"}, {"title": "views created extended", "body": "states var view emberviewcreate templatename sayhello name bob following page appuserview emberviewextend templatename user firstname albert lastname hofmann", "num": "5092", "d": "6/2014"}, {"title": "todo mvc tutorial error", "body": "going emberjs turtorial building todo mvc getting following error get found following code appjs var todos emberapplicationcreate todosstore dsstoreextend todosapplicationadapter dsfixtureadapterextend git repo help would greatly appreciated", "num": "5090", "d": "6/2014"}, {"title": "documentbodycontains supported old ff", "body": "hi upgrading ember got errors ff know old least throw errors using unsupported method using documentbodycontains method supported old browser support matrix nodecontains method", "num": "5088", "d": "6/2014"}, {"title": "publishing tagged builds incorrectly", "body": "looks like new publishing needs tweaks publishing even though tagged cc rondalesc", "num": "5085", "d": "6/2014"}, {"title": "query params causes maximum call stack size exceeded error", "body": "query params seem getting stuck infinite refresh loop changing machty guessing wink", "num": "5081", "d": "6/2014"}, {"title": "eachview read property parentnode null", "body": "bug change templatename call rerender application breaks isolated issue seems happen event triggered despite called triggered views set could filter jsfiddle isolating bug workaround", "num": "5080", "d": "6/2014"}, {"title": "feature queryparams breaks tests read stash undefined", "body": "made jsbin demonstrating testing bug believe found queryparams canary changing query parameterized attribute programmatically test environment test runner dies says", "num": "5078", "d": "6/2014"}, {"title": "create rss feed emberjs blog", "body": "would nice add emberjs updates blog rss reader", "num": "5075", "d": "6/2014"}, {"title": "align", "body": "sorting ember works really well however would neat api controllers aligned currently possible pass sort properties sort function second argument takes either specifically equivalent current solution pass custom function also specifies sorted properties doable course semantics similar would neat hjdivad hero everything computed ember thoughts source", "num": "5072", "d": "6/2014"}, {"title": "debugger helper nt work intended", "body": "expectation user expect handlebars helper drop context template used actuality handlebars helper drops context debugger method steps duplicate open jsbin open browser console change context js bin output frame click run js button output frame pertinent details", "num": "5071", "d": "6/2014"}, {"title": "feature queryparams nested routes throws error latest canary", "body": "currently stackoverflow realized misconfiguring side possible bug queryparamsnew read story link explain happening steps error articles route defined two category searchterm app transitiontoroute articles directly transitiontoroute article article object called error appears think bug ember however someone explain error", "num": "5070", "d": "6/2014"}, {"title": "emberbinding allow bind dynamic object another dynamic object", "body": "request linked question according examples bind static property dynamically created object property property dynamically created object property another dynamically created object example var emberobjectcreate test var emberobjectcreate prototype emberdynamicbind frompath topath emberdynamicbind code basically two way binding run setting binding set think thing would accurate maybe optimized edit change terminology clarify", "num": "5066", "d": "6/2014"}, {"title": "better document component action stuff", "body": "like trips often enough", "num": "5065", "d": "6/2014"}, {"title": "relying promise returned transitionto", "body": "hi whenever transition however fails someroute redirects somewhere else using hook promise internal use need way know transition complete", "num": "5064", "d": "6/2014"}, {"title": "allow initializers time", "body": "case need initializer run certain initializer also yet another initializer missing something makes supporting impossible left nt needed far", "num": "5061", "d": "6/2014"}, {"title": "bug emberselect throw error ember inspector", "body": "hi notice inspect emberselect ember inspector research seems linked fact nt define optiongrouppath simple fix would protect line simple test follow better fix", "num": "5059", "d": "6/2014"}, {"title": "test env makes many requests appdestroy fails", "body": "trying set simple async tests get started testing ember whenever teardown runs simple get index range exception telling store members remove possible causes problem stepped stack far enough look full store number items duplicate ids could cause nt know test environment would generate multiple entries object noticed since started using test environment ember app making way requests load index page ever normal practice rather accepting sideloaded relationships store making request related object maybe doubleentered objects would ember run emberqunit suddenly make extra requests per related item might heart matter", "num": "5054", "d": "6/2014"}, {"title": "container validatename development assertion", "body": "usage validatename development assertions quick patch someone wants grab trouble let know gladly provide guidance cc bfbriggs maybe guys interested", "num": "5051", "d": "6/2014"}, {"title": "container cache resolves resolve undefined", "body": "turns something missing helper controller template take rather slow path gets annoying costly many misses would like propose provide mechanism also cache misses factorycache expire cache module users new things added registry global users maybe provide hook expires cache userinvocation likely usecase cache expiry lazy loading code", "num": "5050", "d": "6/2014"}, {"title": "queryparamsnew queryparams mapping objectarraycontroller broke since", "body": "using property mapping syntax queryparams like javascript appindexcontroller emberobjectcontrollerextend queryparams startdate startdate enddate enddate startdate null enddate null results far tell things broke guessing nt account property mapping syntax documented yet machty", "num": "5049", "d": "6/2014"}, {"title": "canary view using view default breaks existing code", "body": "ironically author offending commit switched using global lookup container resolution issue resolves metamorphview many attributes used able use like longer affect addition providing throws deprecation warning simple example large apps relied completely blows things place easiest possible solution use instead simply cool pr along bunch tests nt regress", "num": "5048", "d": "6/2014"}, {"title": "input type dynamic", "body": "ran helping emergentbehavior troubleshoot irc type attribute dynamic checkbox checkbox works unexpected ways think actually textfield example would possible detect type bound attribute offer warning raise error cc alexspeller emergentbehavior", "num": "5047", "d": "6/2014"}, {"title": "eventmanager stops propagation", "body": "using eventmanager view handle events wo nt propagate example causes bootstrap dropdown stop working seems strange eventmanager would stop propagation manner bug could someone explain intended behaviuor searching initially could find issue jsbin demonstrate problem", "num": "5046", "d": "6/2014"}, {"title": "indexof use map rebuild cache route change", "body": "looking pathlogical issue turns majority wait time inefficient search performed called target method since specific removeobserver exist triggering ever growing search event list instead cache hash handle method entity good enough bypass issue noticing discourse huge amount cost around observing binding fixing issue great help", "num": "5045", "d": "6/2014"}, {"title": "feature queryparams linkto helper active class added active", "body": "originally upgraded canary emberjs yesterday upgrade ember app old query params new making changes get mostly working state left links active time could nt figure going talking machty irc dove deeper emberjs canary create jsbin actually demonstrates confusion router handlers used linkview determine activeness changes issue code previously worked needed use jsbin reverse true ca nt even use resourceindex since unknown reason problems resource getting thought default index tried jsbin add template problemsindex thinking route controller view etc would generated required ca nt seem trigger happening tipped attempt use based comment left source code seems indicate computed value handle nt believe actually case least jsbin code switching use fixed problem would really nice either handle warn user using wrong", "num": "5044", "d": "6/2014"}, {"title": "computed property observers firing eachproperty", "body": "missing something fundamental work js var foo emberobjectextend friends function consolelog friends return thisget groups reduce function acc group return accconcat groupget accountscontent property groups eachaccounts foo function consolelog foo observes groups eachaccounts windowfoo foocreate groups embera emberobjectcreate accounts embera foo bar baz fooget friends fooget groups get accounts pushobject asdf", "num": "5043", "d": "6/2014"}, {"title": "queryparamsnew queryparamsdidchange triggered recursively refresh", "body": "latest changes queryparamsnew call within event route fires least second time multiple query params compounded event fire application becomes unresponsive see example reproduce issue see triggered twice testing links click various combinations see hit count jump much higher application become unresponsive", "num": "5037", "d": "6/2014"}, {"title": "deferred listener called suspended listener already added observerset", "body": "see scenario understanding buttons exhibit behavior increment counter exactly one reason deferred button follows first call propertydidchange within suspendobserver adds listener observerset suspended flag second call sees listener already present observer set nothing disregarding suspended flag observerset later flushed sendevent sees suspended ignores fixed issue temporarily modifying listenersunion add suspended listeners observer set since listenersunion internal modified place terrible solution", "num": "5034", "d": "6/2014"}, {"title": "route redirect method documentation incomplete", "body": "api docs incomplete regarding route redirect method says parameter received model give transition parameter right model one filled current transition useful order decide actually perform redirect si think described api docs", "num": "5031", "d": "6/2014"}, {"title": "firefox console nt show error message", "body": "problem chrome console show helpful error messages eg however console firefox nt show", "num": "5030", "d": "6/2014"}, {"title": "propsoal deprecate viewtransitionto", "body": "consider deprecating favor really low level private view concern", "num": "5026", "d": "6/2014"}, {"title": "emberdefaultresolver undefined mornings upgrade", "body": "upgrading ember canary morning getting following error currently setup", "num": "5024", "d": "6/2014"}, {"title": "ember nt support svg", "body": "problem ember creates dom elements html partials wrapping getting firstchildelement problem svg nodes must created function properly different name space ember relies jquery class name changes binding jquery uses set classes internally nt work svg elements property behaves differently proposed solution expose allow external scripts add appropriate mappings svg elements create third second party script adds appropriate mappings patches jquery properly support svg current workarounds manually updating emberjs support proper svg element mappings using plugins support svg jquery note jquerysvgjs jquerysvgdomjs seemed break jquery updated recently seems suboptimal fix", "num": "5021", "d": "6/2014"}, {"title": "promises missing finally handler", "body": "ember documentation states finally handler available promises however using finally promise yields uncaught typeerror undefined function current documentation wrong missing something", "num": "5018", "d": "6/2014"}, {"title": "queryparamsnew failed model refresh enter error state", "body": "scenario fairly simple got global queryparameter kept application controller subroutes inherit property use contextually aware model subroutes watch changes queryparams refresh model one results error error substate never successfully entered issue reproduced error occurs appears application route attempting run event entering substate changed produces error undefined scenario error occurs", "num": "5017", "d": "6/2014"}, {"title": "sending messages inner controller outer controller different outlet", "body": "ember application outer controller template rendered standard outlet template contains named outlet outlet details one actions controller transitiontoroute renders inside details outlet inner controller handles nested template need action inner templatecontroller trigger action outer controller seems ember break outlet barrier events bubble within outlet parent outlets things tried tried thissend thissendaction tried injecting outer controller inner controller needs main main embercomputedalias controllersmain results undefined function error using action tag nested template sending action exists parent controller results nothing handled action selecttab handle action error caused returning true action handler controller causing action bubble error trying even possible know could simulate using jquery rather prefer ember way one", "num": "5015", "d": "6/2014"}, {"title": "fastboot proof concept", "body": "hey spent time working proof concept getting fastboot working ember today know htmlbars future make much easier wanted see possible handlebars world got simple proof concept seems working nt feel terribly hacky judge lem know think happy make pull request sorts open discussion discuss think appropriate", "num": "5013", "d": "6/2014"}, {"title": "consider component helper dynamic component loading", "body": "would quite handy building dynamic pages generate various components based dynamic data may addon material", "num": "5007", "d": "6/2014"}, {"title": "uncaught rejected promises prevent run loop completing", "body": "working code catches rejected promise modifies observable state rethrows error dom updated reflect changed state rejected promise catch handler example jsbin previously pattern worked ember broken ember git bisect suggests change introduced regression limited understanding problem appears rsvponerrordefault function breaking runloop preventing tasks completing example tasks render queue ember data example realworld example using behavior application crud route creating new records user successfully saves record wish update url reflect new id record however save fails wantneed anything ember data automatically sets property record property observable thus simply reference template user see errors reported server save fails hbs name input valuename name name errorsname message save workarounds one workaround always including callback rejected promise stefanpenner mentioned workaround irc defining function receive error uncaught rejected promises next steps opened issue better understand regression requires fixing anti pattern discouraged thanks", "num": "5006", "d": "6/2014"}, {"title": "embernoop non feature request", "body": "would nice convenience dirt pounding necessary already present missing something could considered future happy toil away pr", "num": "5003", "d": "6/2014"}, {"title": "utility functions improved source readability", "body": "update closed favor consideration given creating ember utilities package similar something like lodash underscore ember microlibraries depend would dry lot common functionality packages ensure common interfaces utility functions make much readable code could even lodash underscore ca nt think good reason use either long something clean boiler plate loops recently utility file added backburner wasteful library implementation although would better utility funcitons within package might spots need harder read performance reasons fine still plenty room increased readability cc tonycoco", "num": "5001", "d": "6/2014"}, {"title": "active states linktos working expected", "body": "presentation using ember mockup tool noticed linktos nt proper active states clicking allergies would expect links stay active nested route hierarchy actually unsure one works tried reordering routes one ever works ideas router template", "num": "4999", "d": "6/2014"}, {"title": "feature queryparams error refreshing page query param containing encoded symbol", "body": "jsbin steps reproduce click query parameter added refresh page get error problem seems doubledecoding query string turns called", "num": "4998", "d": "6/2014"}, {"title": "make sortablemixinorderby overridable", "body": "ghost list blog post models relevant properties date date drafts null published dates like sort list way returned server represented drafts sorted published posts published posts sorted bottom list discussion making overridable seemed people favored compare two values property thing two date props ca nt compared without knowing property dealing models relevant properties nt say also nt seem way sort properties managed get working override", "num": "4997", "d": "6/2014"}, {"title": "updates packaging break bundled application builds", "body": "details ember far tell screws result shimming ember optimized build changed updated everything bundled properly", "num": "4994", "d": "6/2014"}, {"title": "checkbox truefalse customization", "body": "checkboxes use tinyint instead bool easy enough add initiliazer think implementation might helpful core addition start working pr anyone implementation suggestions reasons nt done please let know", "num": "4992", "d": "6/2014"}, {"title": "unable pass objects arguments render view helpers", "body": "following jsbin illustrate issue passing primitives works objects result nothing set supposed supported hope many use cases would possible work patch please let know jsbin info object defined globally contains property data inside view template use display value works fine inside template use render similar view property view remains null arguments set primitive values correctly set point since definitely available context nt able pass view jsbin illustrates situation comment render call viewc see renders fine template use case maybe feature request nt seem like one since data binding passing arguments widespread ember bad things supported places others specially data binding ember secret sauce add use case want build grid view use render associate view controller need pass config object order configure columns etc complex settings nt fit primitives", "num": "4989", "d": "6/2014"}, {"title": "access component properties template", "body": "sometimes useful access properties components within template either exposing component otherwise exposing explicit block params two examples suggestions ideas much appreciated wycats mentions related issue seems relevant reprint may want eventually provide ways block arguments component send information back explicitly way work think template contextcontroller layout contextcontroller helper would switch template context component template internally called layout would use layout contextcontroller source js alternative ability specify specific block params properties component made available template yield function context options var view optionsdataview parentview thisparentview template get template template emberassert component must parent view order yield parentview alternative expose keyword yield function context options var view optionsdataview parentview thisparentview template get template template emberassert component must parent view order yield parentview", "num": "4985", "d": "6/2014"}, {"title": "queryparamsnew bug press back button make whole page refreshes", "body": "given set query params route change query params click back button whole page refreshes like press cmdr jsbin example try chrome inspector opened workflow like open jsbin index page click posts link redirect posts page click set page button change query params click back button browser whole page refreshes redirect back index page see chrome inspector redisplays ember information expect behavior leave postsroute enter indexroute", "num": "4984", "d": "6/2014"}, {"title": "childviews state never updates", "body": "matters building components keyboard accessibility need know order child views able focusselect next item list two sane approaches use unfortunately unreliable register child views parent mange list problem nt know position array insert new item since neither work bail ember use dom find items get ids map back ember components", "num": "4981", "d": "6/2014"}, {"title": "ui loading soon controller actions responding ui", "body": "issue testing wondered possible bug ember sets controller actions respond ui events see description symptom may related testing perhaps possibility bug", "num": "4980", "d": "6/2014"}, {"title": "keep file naming consistent across builds", "body": "using embercli using canary build ember found built file would possible us keep across builds", "num": "4976", "d": "6/2014"}, {"body": "setting something instead observing something nonobservable", "d": "6/2014"}, {"body": "actually think error line linked looks like happening hook hook maybe misunderstanding saying using somewhere somehow creating condition throws error route transition abbreviated stack trace possibly related ca nt figure happened commit branch", "d": "6/2014"}, {"body": "atonparker appears observing routecontroller currently meant observable", "d": "6/2014"}, {"body": "first one creating instance second defining new class view", "d": "6/2014"}, {"body": "first one creating instance rather defining class defining view page understand defining view defining new class view might two different things kinda confusing page supposed explain basic usage views expect mention extend method uses difference create method", "d": "6/2014"}, {"body": "need create store since happens automatically also nt call passing anything enough also get better debugging", "d": "6/2014"}, {"body": "thanks lot turns using incorrect versions ember ember data conflicted way tutorial built youre correct nt include store although tutorial say use extend try removing see effects anything adversely thanks lot input mon jun pm ilya radchenko notifications githubcom wrote need create store since happens automatically also dont call extend passing anything enough var todos emberapplicationcreate todosapplicationadapter dsfixtureadapter reply email directly view github drew botka hellodrewbot gmailcom", "d": "6/2014"}, {"body": "drewbot could close issue thanks", "d": "6/2014"}, {"body": "thanks robert mon jun pm robert jackson notifications githubcom wrote closed reply email directly view github drew botka hellodrewbot gmailcom", "d": "6/2014"}, {"body": "dup fixing today lest murdered pitchforks", "d": "6/2014"}, {"body": "lol thanks nt mean hassle", "d": "6/2014"}, {"body": "closin dup", "d": "6/2014"}, {"body": "hmm yes query params expecting application cache stashing modeldependent state think make option whether making optional makes sense purpose testing", "d": "6/2014"}, {"body": "awesome thanks much", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "loostro believe request go emberjswebsite repo", "d": "6/2014"}, {"body": "oh nt aware repo browsed found issue tried link mentioned work", "d": "6/2014"}, {"body": "closeing continue emberjswebsite", "d": "6/2014"}, {"body": "actually works", "d": "6/2014"}, {"body": "selvagsz thanks works tried http nt work", "d": "6/2014"}, {"body": "commadelimited context template makes quite handy debugging although would unsure feasible actually allow stepping templates suspect would push source maps limit beyond open suggestions", "d": "6/2014"}, {"body": "stefan could swear used drop method instead context template", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "confirm though correct context perhaps directly debugger statement helper method add consolelog statement", "d": "6/2014"}, {"body": "provide quick jsbin", "d": "6/2014"}, {"body": "stefanpenner thanks response took hours fiddling reproduce error explained maybe strange app code comments also setup redirect error happens elsewhere app", "d": "6/2014"}, {"body": "think fixed local ember build confirm jsbin working", "d": "6/2014"}, {"body": "hi machty thanks works could say error lies also next canery update take place thanks", "d": "6/2014"}, {"body": "cannect canary updates whenever pushed master broke something else made change fix jsbin need rethink approach updated canary today tomorrow", "d": "6/2014"}, {"body": "perfect machty wait update", "d": "6/2014"}, {"body": "trouble understanding request dynamic object unfamiliar terminology", "d": "6/2014"}, {"body": "using right terminology could explain get object definition dynamic property change fact talking dynamically created object uptade issue objects create initialization number object determine advance example backed data db however migth need bind objects property objects case way bind property runtime think achieve dynamicbind talking", "d": "6/2014"}, {"body": "believe redirecting actual rejects promise want fire every time would need success failure handlers", "d": "6/2014"}, {"body": "think reasonable let know redirecting give way access promise redirection method would nice well", "d": "6/2014"}, {"body": "sneaky internal method causes transition promise follow redirects rather treat aborts undocumented going changing redirects nt treated aborts unless original transition explicitly ed", "d": "6/2014"}, {"body": "salazarm rsvp promise behavior need always process use although machty planned refactor make moot point", "d": "6/2014"}, {"body": "rjackson oh thanks info thanks everyone help", "d": "6/2014"}, {"body": "supported box locks added ton documentation describing ordering works see published docs released", "d": "6/2014"}, {"body": "assertion checking still place would need though", "d": "6/2014"}, {"body": "ahh see mean sorry confusion", "d": "6/2014"}, {"body": "would sth accept pr", "d": "6/2014"}, {"body": "assuming implementation supports fine removing assertion would like see tests confirm though straightforward add think meantime could use three ensure done right order", "d": "6/2014"}, {"body": "rjackson fairly certain assert existed prior safely removed", "d": "6/2014"}, {"body": "krisselden awesome thanks chiming marcoow would please work pr", "d": "6/2014"}, {"body": "rjackson marcoow sent pr", "d": "6/2014"}, {"body": "igort seems somewhat related black holing idea", "d": "6/2014"}, {"body": "black holing idea", "d": "6/2014"}, {"body": "update able get ember accept sideloaded models cause bug receiving one response model per desired model instead pretty sure testsuitebreakingbug coming computed property enumerating models remove calls function one times calls indices already reset searching nonexistent index", "d": "6/2014"}, {"body": "looking change commit message pr otherwise dev assertions project", "d": "6/2014"}, {"body": "updating docs weekend wan na", "d": "6/2014"}, {"body": "machty ahh okay care shed light ditched previous familiar form maybe discussed somewhere", "d": "6/2014"}, {"body": "new syntax much flexible syntax potentially many options many colons add", "d": "6/2014"}, {"body": "rjackson", "d": "6/2014"}, {"body": "also shorter form neglected mention", "d": "6/2014"}, {"body": "mix", "d": "6/2014"}, {"body": "machty", "d": "6/2014"}, {"body": "sounds like fixed", "d": "6/2014"}, {"body": "jayphelps brighten ever issue thread", "d": "6/2014"}, {"body": "think fine using still provides flexibility originally intended", "d": "6/2014"}, {"body": "thanks cc amiel warning would saved quite bit time yesterday", "d": "6/2014"}, {"body": "hey guys let know pr worthwhile using warning blow anything assert could work guess edit oops remake pr address silliness sorry spam", "d": "6/2014"}, {"body": "kimagure personally think pr would good especially small assert correct way think asserts compiled production builds commonly used throughout codebase kind issue", "d": "6/2014"}, {"body": "alexspeller pr ah nt know asserts compiled prod builds guess nt issue turn assert think stringnull checking id change also pretty new gh prs nt know process ideally editing commits prs", "d": "6/2014"}, {"body": "looking eventdispatcherjs seems intentional stoppropagation downside example accessing private method eventmanagers able capture", "d": "6/2014"}, {"body": "planned dual strategy take advantage cases string method names provided nt gotten around happy help someone implement", "d": "6/2014"}, {"body": "ha simple idea reserve entry target null store maps method work", "d": "6/2014"}, {"body": "yes plan addobserver null method", "d": "6/2014"}, {"body": "cases plans example divide listeners target problem maps anything large listener lists defineproperty fn far exceeds cost indexof benchmarks net win targets hand almost always guid property already listener list grows beyond threshold could start guidfor function arguably nt need care enumerability comes typeof function use plain property assignment likely could use internal guidfor takes functions argument", "d": "6/2014"}, {"body": "wish browsers gave us cheap way inheritable nonenumerable", "d": "6/2014"}, {"body": "typical numbers discourse session without triggering horrible cases calling null target number times non null target", "d": "6/2014"}, {"body": "samsaffron excited looking us super pegged time something interested available helping", "d": "6/2014"}, {"body": "gave shot local took obscene case seconds getting magic number right take work thoughts note updated link reapply manually cause made original changes dev file", "d": "6/2014"}, {"body": "null string common internal observers use null target declarative form since nt yet", "d": "6/2014"}, {"body": "samsaffron modify code attempt cache methods strings", "d": "6/2014"}, {"body": "ebryn avoid full crawl case non string methods passed also want get rid splicing delete make holes array empty list try add today", "d": "6/2014"}, {"body": "samsaffron ca nt without something like js object keys strings", "d": "6/2014"}, {"body": "see js simply converting strings values closure preserved let think fri jun erik bryn notifications githubcom wrote samsaffron ca nt without something like guidfor js object keys strings reply email directly view github", "d": "6/2014"}, {"body": "ebryn still want measuring get rid splice work", "d": "6/2014"}, {"body": "ebryn profiled locally seems like nothing improve discourse regular usage fixes huge action list", "d": "6/2014"}, {"body": "think run practical instance nt working would expect want links match routes example nested shows list left column right shows individually selected resource share wireframe something helps visualize", "d": "6/2014"}, {"body": "looks like bug work around javascript var foo emberobjectextend friends function return thisget groups reduce function acc group return accconcat groupget accounts property groups eachaccountschanged windowfoo foocreate groups embera emberobjectextend accountschanged emcomputedalias accounts init function thisget accountschanged create accounts embera foo bar baz consolelog fooget friends fooget groups get accounts pushobject asdf consolelog fooget friends", "d": "6/2014"}, {"body": "duplicate path observers require previous part resolve obj observe property take abc example would expect get ab return object observe c example path parts groups accounts get groups eachaccounts returns array watches array nt maintained built one proxy needs happen work path observer special cases end observes remaining path creating another path observer would result path observer groups installs path observer accounts", "d": "6/2014"}, {"body": "one issue though groups fires change per array mutation despite array proxy changing would constantly rebuilding path observer nt know changed behave like makes fixing unreasonable without ton scenario solving without regressing interchangeable essentially node path chain would need unwatched could still fire change event groups part knowing remain constant unless groups changes", "d": "6/2014"}, {"body": "actually eacharray eachproxy returned extended eachproxy get eachbar returned new eachproxy bar path observers would work without special casing", "d": "6/2014"}, {"body": "use case actually trying implement dynamically updating query params dependent change another query param", "d": "6/2014"}, {"body": "use case specifically query params application controller query params one sub controllers model sub route depends query parameters application controller sub controller sub route case data visualization number settings type graph data show etc working previously know guide nt updated yet sure exactly changed would cause break app", "d": "6/2014"}, {"body": "modifying hits use case", "d": "6/2014"}, {"body": "sorry nothing way show many times action firing often could nt open console debugging due freezing", "d": "6/2014"}, {"body": "oh bad glossed thought query param take look closely tomorrow", "d": "6/2014"}, {"body": "danke", "d": "6/2014"}, {"body": "also issue need another use case someone test thanks machty", "d": "6/2014"}, {"body": "issue trying use multiple query params model change like commented part jsbin", "d": "6/2014"}, {"body": "using refreshmodel true multiple query params case search facets also experiencing thing", "d": "6/2014"}, {"body": "yup hitting well wasted hours trying figure issue glad see one eta fix app ship", "d": "6/2014"}, {"body": "really sorry everyone qp api finalized definitely let regressions last one everything fixed weekend", "d": "6/2014"}, {"body": "machty good going work stuff meantime documentation new api trouble getting params removed url used pass false remove param", "d": "6/2014"}, {"body": "emerson set controller prop default value removed", "d": "6/2014"}, {"body": "always hate ask updates issues relating open source projects wondering movement eta changed significantly would try fix little beyond current understanding ember core new api looks nice looking forward outside canary greenheart", "d": "6/2014"}, {"body": "blocked necessary routerjs work address issues right nt possible squeeze fix issue alone hope update shortly sorry still blocking", "d": "6/2014"}, {"body": "amazing pulled canary everything working well thanks hard work", "d": "6/2014"}, {"body": "yes suspend listener supposed affect change events making listener listeners thought tested case guess current implementation less ideal nt time revisit union intersection code reuse sendevent code ideal way sendevent go everything put queue listener deferred specific listener suspended nt enqueue schedule flush", "d": "6/2014"}, {"body": "thanks confirmation assuming wo nt able rewrite next release would able oneline fix similar done", "d": "6/2014"}, {"body": "could put jsbin something like try work", "d": "6/2014"}, {"body": "rename nt documented surprised used wild", "d": "6/2014"}, {"body": "krisselden used mistake deprecated nicely libraries use", "d": "6/2014"}, {"body": "stefanpenner fire invoking invoke automatically cd", "d": "6/2014"}, {"body": "rjackson ya exactly", "d": "6/2014"}, {"body": "caused looking", "d": "6/2014"}, {"body": "rjackson thanks quick response guys rock always", "d": "6/2014"}, {"body": "fixed updated canary build published shortly", "d": "6/2014"}, {"body": "rjackson thanks sir", "d": "6/2014"}, {"body": "paging mixonic", "d": "6/2014"}, {"body": "believe something wont consider supporting htmlbars lands", "d": "6/2014"}, {"body": "stefanpenner wo nt consider supporting svg htmlbars either way need netflix needs reusable ember components rely svg must maintain forks must guess", "d": "6/2014"}, {"body": "believe meant", "d": "6/2014"}, {"body": "blesh bug erik get htmlbars land lt lots availability see trollface", "d": "6/2014"}, {"body": "well world keeps turning nt want add svg nodes wrapmap ember directly think invasive bloat like way extend wrapmappings somehow either exposing wrapmap global like emberwrapmappings metamorph look configuration object window mixin existing wrapmap", "d": "6/2014"}, {"body": "blesh believe path result improvements would hate see duplicate efforts hence stance community member timeenergy nt interested helping push htmlbars finish line welcome persue", "d": "6/2014"}, {"body": "blesh got svg working htmlbars pr holding merge take stab issues support similar issues covered confidently say support svg htmlbars nt see great flexible support svg handlebars surely way hack think worth turning public api support interim", "d": "6/2014"}, {"body": "mixonic make private api expose hacking provide interim solution adventurous need feature throw many underscores", "d": "6/2014"}, {"body": "example accidentally uses native promises", "d": "6/2014"}, {"body": "appears issue fixed", "d": "6/2014"}, {"body": "woot thanks following", "d": "6/2014"}, {"body": "seems like stackoverflow question bug recommend cross linking future searches find", "d": "6/2014"}, {"body": "post stackoverflow also find ember community github bit robust", "d": "6/2014"}, {"body": "dgtman unfortunately due number issues size community need keep issue tracker focused possible emberjs freenode might another good place ask", "d": "6/2014"}, {"body": "awesome", "d": "6/2014"}, {"body": "eoneill exactly fast boot basically allowing server render html ember using getgo instead generating scratch", "d": "6/2014"}, {"body": "knownasilya pretty muchby something like essentially get isomorphic ember app extremely helpful things like supporting underpowered mobile devices example coming email phone transactional page nt want user wait seconds see anything instead ssr requested route ember enhances initial static html everything rendered client", "d": "6/2014"}, {"body": "knownasilya thanks asking probably explained basically chadhietala said discussion concept well tomdale coined concept fast would use something like emberprerender serverside render ember app initial state send html client client would receive initial view pure html ember would hydrate client state rendered server synchronize existing view poc ember still rerendering everything client think necessary get bindings metamorphs hooked correctly though probably room improvement user get initial visual feedback ember app still initializing", "d": "6/2014"}, {"body": "using componentlookup main along view helper downside view torn dynamic property changed local branch work making view helper handle properly", "d": "6/2014"}, {"body": "seems like view bound tore would great component helpers dedicated component lookups would also good", "d": "6/2014"}, {"body": "rjackson fix workaround view torn downreset property change bunch us set upon one day irc wrap view", "d": "6/2014"}, {"body": "kinda feel like nt addon material enables better core composition", "d": "6/2014"}, {"body": "would pretty happy someone time implement gladly provided feedback advocate", "d": "6/2014"}, {"body": "seems related stuff wanted helper right halfass support dynamically linking controller property contains changing link name unfortunately stuck using fixed number contextsmodels pass target route way elegantly dynamically switching bw link dynamic route nondynamic route one expects model perhaps better overall primitive consider something like render descriptor best described example somecontrollerextend thingtorender function thisget wat return params linkto articles else return params linkto property wat somethinghbs dynamicrender thingtorender course would extend free dynamic component renderings possible render anything helper component view link", "d": "6/2014"}, {"body": "used something like dynamic input elements observer call bound property changed", "d": "6/2014"}, {"body": "igort tell curious", "d": "6/2014"}, {"body": "want something like ember one exists angular one thing missing easily swappable render parameters overriding certain fields", "d": "6/2014"}, {"body": "nt access code anymore basically wrapper component property would instantiate correct components inside rerender whenever changed", "d": "6/2014"}, {"body": "could elaborate one thing missing easily swappable render parameters overriding certain fields machty dynamic components codebase using slightly different techniques could explain better knew use case", "d": "6/2014"}, {"body": "saying even made xfoo swappable nt want forced always provide value every last hash option case linkto want make possible swap bw nt doable present day one invocation provides model nt", "d": "6/2014"}, {"body": "would love something like hacked around extends discussed discourse thread", "d": "6/2014"}, {"body": "rjackson branch using views somewhere tonycoco nt want get deep legwork already done attached jsbin trying ember view note work yet", "d": "6/2014"}, {"body": "ca nt fix without hurting developer ergonomics something super crazy wrap dev code trycatch hurt break usage break error ideally browser tooling better would nt problem production maybe enable trycatch per task default onerror happens", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "think marking mistake", "d": "6/2014"}, {"body": "agreed", "d": "6/2014"}, {"body": "ask suspect reference understand sadly nt also would possible method alias selfdocumenting", "d": "6/2014"}, {"body": "adaptation k combinator gives monadic noop k applied argument x yields oneargument constant function kx applied argument returns x", "d": "6/2014"}, {"body": "got thanks clarification link", "d": "6/2014"}, {"body": "would self documenting require past experience libraries use either terms could actually see us currently returns truthy value sometimes want nonoperation returns falsy value probably", "d": "6/2014"}, {"body": "comparable char length", "d": "6/2014"}, {"body": "also would", "d": "6/2014"}, {"body": "falsy return value originally requesting", "d": "6/2014"}, {"body": "although knowledge also works currrent needs client coder", "d": "6/2014"}, {"body": "crismali ember core actually agreement time ago wanted transition actually utilize lodash custom build within ember never got around jdalton actually offered help lodash side needed someone else interested likely chat confirm core still something want pursue", "d": "6/2014"}, {"body": "stefanpenner would awesome crismali looking contribute could work get internally packages create conventions", "d": "6/2014"}, {"body": "tonycoco fantastic use help get", "d": "6/2014"}, {"body": "tonycoco looking wondering dependency like jquery shimmed referenced something take amd import specific functions different modules", "d": "6/2014"}, {"body": "crismali inlined dependency like rsvp backburner jdalton suggested custom build exactly need", "d": "6/2014"}, {"body": "stefanpenner think headed anyway cool put wip branch soon implementation working end cc crismali", "d": "6/2014"}, {"body": "nice", "d": "6/2014"}, {"body": "lurking hit w questions grinning", "d": "6/2014"}, {"body": "jdalton build amd single mainjs file like dist got lodash cli basically running", "d": "6/2014"}, {"body": "build amd single mainjs file like dist mean like monolithic build mainjs file got lodash cli basically running fine create compat mainjs category modules amp individual modules next bump build flavors repos like different branches amd commonjs node amp npm", "d": "6/2014"}, {"body": "jdalton like amded amp concated mainjs file instead needing mainjs rip directories get pieces relative requiresdefines make sense", "d": "6/2014"}, {"body": "like amded amp concated mainjs file instead needing mainjs rip directories get pieces relative requiresdefines make sense moment nt provide prebuildoptimized version lodashamd builds default normal monolithic build works amd loaders", "d": "6/2014"}, {"body": "ok perfect", "d": "6/2014"}, {"body": "got version working way jquery works ember definitely seems like path least resistance", "d": "6/2014"}, {"body": "overlap try get land tonight nearing point want use modules core allow new transpiler correctly parseminifydeloaderify project", "d": "6/2014"}, {"body": "works shrinking emberjs file someone writing ember app wants use something lodash compiled ember instance ember never uses want duplicate bunch lodash application end code overall", "d": "6/2014"}, {"body": "crismali wont really drop anything reexporting global shims going forward idea build app ember together drop features lodash ember based app needs theory gives us custom ember builds optimized specifically app nt use array computed noproblem removed dead code etc", "d": "6/2014"}, {"body": "okay makes sense", "d": "6/2014"}, {"body": "least dream cc ebryn eventualbuddha", "d": "6/2014"}, {"body": "reference", "d": "6/2014"}, {"body": "crismali commits working", "d": "6/2014"}, {"body": "close favor crismali", "d": "6/2014"}, {"body": "one cases need use option see weather linkto links specifically different route default going show active unless exactly change nav bar linkto following expect please close addresses issue nt think bug edit forgot actually update linkto w suggestion", "d": "6/2014"}, {"body": "fixed thanks fast reply able fix presentation really appreciate", "d": "6/2014"}, {"body": "module inside closure accessed without much hoop jumping causing problem publish sample repo andor assets", "d": "6/2014"}, {"body": "nt spend lot time looking exactly happening know fixed case almond require though rjs bundling application app works unbundled via require fine suspect may secret combo rjs configuration options get work without change ember source person two helping debug came simple solution everything set", "d": "6/2014"}, {"body": "take look sample repo definitely issue way determines modules defined using esprima scan source file determine andor called case called externally check given call embedded closure relatively shortterm problem planning remove loader including calls releasing meantime mimosa shim essentially using regex findreplace seems like good work around sorry troubles thank reporting", "d": "6/2014"}, {"body": "ya reason mimosa shim place tend update ember often nt team keep going back make change best let tool startup good know wo nt problem road leave want keep open feel removal road fix happy thanks looking", "d": "6/2014"}, {"body": "like idea exposing component keyword use case using", "d": "6/2014"}, {"body": "seeing well chrome seems browser affected seeing issue chrome mac", "d": "6/2014"}, {"body": "isolates issue gon na post chromium bug url works correctly chrome canary nt think anything want fix emberland closing issue", "d": "6/2014"}, {"body": "ran exact issue today reason navigating list keyboard hacky fix describe coffeescript reason viewget childviews sometimes contains stale data end operating destroyingdestroyed items go via dom childviewsfromdom view gt view children emberview toarray map node gt emberviewviews nodeid using found stale data contained views previously destroyed states nt updated entries outdated", "d": "6/2014"}, {"body": "childviews filtered view actual childviews hold onto reference currently get date since rebuilt invalidated gotten childviews invalidated another get childviews return stale data said expensive maintain filtered view nt needed views", "d": "6/2014"}, {"body": "seeing return stale data appears invalidated situations invalidate recursively iirc goes virtual views gets nonvirtual views maybe layer nt invalidated", "d": "6/2014"}, {"body": "krisselden code jsbin changed get childviews action time data stale", "d": "6/2014"}, {"body": "definitely bug nt great answer doubt fixed without performance cost mark bug likely wait cause middle refactor view layer search unfiltered viewchildviews", "d": "6/2014"}, {"body": "rpflorence childviews invalidated removechild check current view virtual walk concrete view notifying childviews didchange", "d": "6/2014"}, {"body": "cc fivetanley rjackson", "d": "6/2014"}, {"body": "issue bower follow get working ember cli", "d": "6/2014"}, {"body": "hmm installed project nt seem working get following debug console thinking broccolifilemover may working", "d": "6/2014"}, {"body": "rjackson stefanpenner thanks help order get working change config may understanding trying achieve", "d": "6/2014"}, {"body": "rjackson make work cli", "d": "6/2014"}, {"body": "stefanpenner issue support live reload changes vendor must folder using fine least folder spent tracking thinking fix likely involve guard properly handle folder nt available disk", "d": "6/2014"}, {"body": "tldr essentially find folder disk location call simply able watch changes since nt know watch", "d": "6/2014"}, {"body": "cc mixonic", "d": "6/2014"}, {"body": "digging understand issue little bit better change property shared object like clock filtercriteria example jsbin going loop chainwatchers call observers invalidate cps everyone depends property shared object issue case reducecomputeds start notifying observers element whose item property reduce computed terminology watched property item invalidate reduced cp changed reducecp itempropertydidchange fire calls array eagerly flush changes queued reducecp ends calling items whose itemproperties changed problem embermetal currently middle invalidating dependencies one items remaining items also changed nt cp caches cleared happens cpdidchange cached values used rather recomputing chain nodes nt rebuiltup recomputation took place future changes sharedglobal object property wo nt detected remaining elements phew sounds like need devise solution get arraycp better adhere embermetal contract ideally event happen lazily except cases user explicitly calls get remember correctly used scheduled run loop valid cases wanting call reducedcp eagerly flush yield uptodate valuearray cc hjdivad krisselden", "d": "6/2014"}, {"body": "note issue also goes away wrap update shared global obj", "d": "6/2014"}, {"body": "looking see actually access current url even router set would nice could access controllerfor better yet ember decided throw application controller sibling next example useful say want share link running within phonegapcordova wrapper would easy", "d": "6/2014"}, {"body": "machty thoughts one seems like straightforward change point three props set maybe missing higher abstract piece", "d": "6/2014"}, {"body": "understand wanting give access entire router controllers things router controllers may need access", "d": "6/2014"}, {"body": "guess", "d": "6/2014"}, {"body": "work", "d": "6/2014"}, {"body": "hacks done netflix worked use cases proper bound svg support nt likely going thing htmlbars", "d": "6/2014"}, {"body": "nods waiting h l b r", "d": "6/2014"}, {"body": "ebryn yea heard mention svg work guys netflix js jabber podcast love hear howwhat fwiw works well angular p", "d": "6/2014"}, {"body": "jquery error", "d": "6/2014"}, {"body": "little surprised find works well angular unlike nt think support comes directly templating approach must built specific support handling svg class objects", "d": "6/2014"}, {"body": "send pull request", "d": "6/2014"}, {"body": "fixed pr example note share query param value want use alias rather try reuse query param name intentionally treat query params separate params closing part pr", "d": "6/2014"}, {"body": "machty awesome thanks", "d": "6/2014"}, {"body": "use colon syntax change property name url key mapping whatever want eg like idea expose method route override make possible want everywhere", "d": "6/2014"}, {"body": "ask ye shall receive closing incorporated latest pr getting overwhelming keeping track myriad fixes making pr thanks good idea", "d": "6/2014"}, {"body": "hero actually ship", "d": "6/2014"}, {"body": "wonderful sailboat think good idea make dasherized default similar change", "d": "6/2014"}, {"body": "ask gang push dasherizing templates mostly web components based rather something trying ember", "d": "6/2014"}, {"body": "yes please ask would great love camelcase argued camelcase instead snakecase ember data json serialization previously dasherized better fit query params lowercase caseinsensitive dash separator since standard domains paths", "d": "6/2014"}, {"body": "tried ember inspector plugin chrome may help find problem", "d": "6/2014"}, {"body": "seems fixed pr closing tracking pr", "d": "6/2014"}, {"body": "machty great work thanks", "d": "6/2014"}, {"body": "html id tags meant interpreted strings spec even required id tags start alphabetic character although particular requirement dropped basically everything behaving expected workaround seems acceptable exactly sort thing sortfunction meant handle reading", "d": "6/2014"}, {"body": "spruce models emberdata handrolled something else completely correct ids sorted strings guarantee stored strings whatever persistence library using know emberdata actually stores ids strings internally helps workaround actually great way solve issue alternatively using emberdata know ids system always going numeric could add something like use sort key", "d": "6/2014"}, {"body": "fixed pr closing track pr note may one final change pr support use case would require configure stickiness query param stickiness behavior qp values remembered routes exited reentered happens example jsbin", "d": "6/2014"}, {"body": "gets applied one models passed linkto undefined intended use cases want link something still loading finally loads controller set link become nonloading one uses dumb idea year ago think got snuck async router stuff without much review bad fwiw twitter likely accidental halfass version first time click nav tab eager active class applied fully route leave come back route link become immediately active like twitter approach right answer anything food thought would loading class applied links presently active active post transition would applied links fit category one clicked currently active links wo nt active post transition lose active class transition one thing keep mind today ui mismatch bw url active classes fix active classes issue might still ui mismatch properlybehaving active classes pretransition rendered content nt torn yet", "d": "6/2014"}, {"body": "add new properties addition existing allow current behaviour default eager links style links either without eager links deactivating styling also style links indicate transitioning away would nt modifying could depreciated separately", "d": "6/2014"}, {"body": "interested first release documentation tests still learning use mocha comprehensive example docs tests coming soon", "d": "6/2014"}, {"body": "marinho curiousity kind usage aiming authorization thing think sensible approach ab testing could also consider creating different builds app pattern ember using features", "d": "6/2014"}, {"body": "zonak give realworld example trying hard know whether handle use case knowing actually use case", "d": "6/2014"}, {"body": "try make simplified cms example let say list posts following route list clicking post see details post details link following route obviously see list comments aside complete list filter comments lets say date range configured qps well going back route list posts selecting different post allow us reset date qps comments route active would resetting parameters may perfect example think gets point across", "d": "6/2014"}, {"body": "zonak ah see thanks writing related another final api consideration general ability reset query param values leave route also way track model dependent state right nt automatically work case since l", "d": "6/2014"}, {"body": "premature post nt automatically work case comments route dynamic segment therefore shares qp state comments arrays posts need fix things end nt think api use setting properties controller transitioning route rather better defaults values reset post model changes sorry hard explain give jsbin play around fix ready tell good", "d": "6/2014"}, {"body": "closing since api support use cases tons examples", "d": "6/2014"}, {"body": "hope changes become clearer get docs mean time attempt run another example let use cms example say posts route means comments route inactive qps defined would way provide reset functionality end users navigate back comments route filters reflected qps gone apologies somehow obvious example provided missed somehow", "d": "6/2014"}, {"body": "zonak worries super obvious exactly handled articlesroute resetcontroller hook demoable bottom page", "d": "6/2014"}, {"body": "specifically go comments article change article reset comments page article resetcontroller hook transitioned links go back page", "d": "6/2014"}, {"body": "want make action initiated end user say reset button", "d": "6/2014"}, {"body": "sure possible present api use case seems different ones described", "d": "6/2014"}, {"body": "app selects products big list allows end users filter thought list via series filters usually implemented pulldowns home route app offers ability select imperial metric measurement system affects options available mentioned set filters end user navigates list route makes selections pulldowns serializing state persisting qp navigate back list route way recreating state point time end user go back home route change selected measurement system results change sets options pulldowns list route practically invalidating state reflected qp idea reset qp list route home route upon change measurement system end users visiting list route subsequent measurement system change come back clean state pulldowns different options nt want bother specific case guess point offers best example", "d": "6/2014"}, {"body": "zonak lot take believe case make work dig internals make work probably wo nt first class api information similar use cases", "d": "6/2014"}, {"body": "thanks listening hope give pointers achieving imho nt think rare case would like reset qps respective controller properties different route lot scenarios like state reset possible routes upon user action qps perfect retaining state way reset remove would make even better thank time attention", "d": "6/2014"}, {"body": "ftokarev perhaps could clone entire dom subsection cloned dom elements would tied ember perform sorting throw away finished guessing something like button called reorder clicked setup detached dom would affected incoming server pushes used dragdrop would work", "d": "6/2014"}, {"body": "sandstrom thanks suggestion ended using private methods reorder button nt think good solution usability point view users expect lists sortable right away", "d": "6/2014"}, {"body": "digging found section packagesemberhandlebarslibhelperscollectionjs causes difference context using helper alias changing lines simply would solve problem case would break several test cases yet figure solve problem without breaking existing test cases", "d": "6/2014"}, {"body": "unfortunately nt done likely wo nt time near future someone else wants tackle guest", "d": "6/2014"}, {"body": "mixonic got time look one", "d": "6/2014"}, {"body": "cc pixelhandler", "d": "6/2014"}, {"body": "notes chat irc containerresolve validation calls function resolve call inner resolve functions similar patterns basically costly validation parsing external methods internal often recurse need things", "d": "6/2014"}, {"body": "stefanpenner read container code couple questions point example container functions handle internals without normalize links lines code container think said irc containerresolve validation external methods correct sure meant inner resolve mentioned functions similar patterns one specifically reading container code nt obvious distinguish internal vs external methods mentioned think get identify internals work sorry noob questions need clarity", "d": "6/2014"}, {"body": "point example container functions handle internals without normalize links lines code container inner assertion normalization outer assumes already normalized think said irc containerresolve validation external methods correct correct sure meant inner resolve mentioned functions similar patterns one specifically innerouter example may provide enough context let know", "d": "6/2014"}, {"body": "problem error page apparently defining route nt work", "d": "6/2014"}, {"body": "fixed closing tracking pr", "d": "6/2014"}, {"body": "machty addressed", "d": "6/2014"}, {"body": "stefanpenner missed hard piece together going without jsbin also possible caused provided thisroute error leaving dynamic path error substates models internally dynamic path", "d": "6/2014"}, {"body": "ill give u example app", "d": "6/2014"}, {"body": "seems fixed canary", "d": "6/2014"}, {"body": "yeah fixed basically swallowing errors one specific name something", "d": "6/2014"}, {"body": "progress encountering issue calling thissuper within promise code question silently failed upgrading late game", "d": "6/2014"}, {"body": "encountered problem appears must add attribute helper without get error described uncaught error set readonly property accounts object thinking data types assigned ember data array vs single value could way helper built", "d": "6/2014"}, {"body": "cc machty", "d": "6/2014"}, {"body": "stefanpenner ebryn mentioned emberfacing transition object fuller control apiwise perhaps routerjs matter seems like something consider", "d": "6/2014"}, {"body": "think date reopen someone demonstrate issue jsbin uses following emberjs", "d": "6/2014"}, {"body": "ran today component bound property within component turn set property controller well however attempt within handler controller altered makes difficult determine component property set static content consider valid case value seeing leftovers failed attempt clearing controller property invalid case since would reflash message already shown previously", "d": "6/2014"}, {"body": "expand updated jsbin latest ember release couple things removedchanged simplicity thisset commands seem work fine wondering willdestroyelement running late run loop observers pickup", "d": "6/2014"}, {"body": "closing tracking pr", "d": "6/2014"}, {"body": "closing part", "d": "6/2014"}, {"body": "closing api support use case master discuss feature proposal discussemberjscom makes sense example ways configure qps", "d": "6/2014"}, {"body": "thanks hard work much appreciated", "d": "6/2014"}, {"body": "hi would great amd wrapper amd support", "d": "6/2014"}, {"body": "one simply add environmentjs file using embercli enable queryparamsnew still need make sure link canary build", "d": "6/2014"}, {"body": "anyone know available stable yet sure go find list currently available features like", "d": "6/2014"}, {"body": "available stable enabled default new canary builds ready hopefully couple weeks", "d": "6/2014"}, {"body": "ppcano like proposal got extra time", "d": "6/2014"}, {"body": "stefanpenner create pr find time", "d": "6/2014"}, {"body": "ppcano understood im boat", "d": "6/2014"}, {"body": "thank discussion really helped solve tests nt work agree toranb example would good add ember testing guides problem similar xhr code application initializer tests run init completed knew breaks run loop emberrun within code without help finally reading conversation added wait test module setup everything seems go smoothly test setup waits application initialization running test case", "d": "6/2014"}, {"body": "pretty sure fixed canary please reopen case", "d": "6/2014"}, {"body": "issue ember emberdata fwoeck changes embercomputedsort initially resolve issue cause cascade issues updates hjdivad", "d": "6/2014"}, {"body": "potential workaround initially used sorting functions like places tests replaced removed problem changed different things time ca nt really say related", "d": "6/2014"}, {"body": "thanks update fwoeck actually currently", "d": "6/2014"}, {"body": "issue single route multiple nested views inside containerviews page instantiated using views created pushing onto containerview manually obviously link controller link controller manually view init works fine try using extended applicationcontroller utilise authorization functions throws error controller using", "d": "6/2014"}, {"body": "would definitely useful", "d": "6/2014"}, {"body": "unfortunately quite busy things keeps slipping away", "d": "6/2014"}, {"body": "updates one", "d": "6/2014"}, {"body": "would benefit loading bookmarked url jump anchor point route view template loaded", "d": "6/2014"}, {"body": "status updates adding model programmatically best current approach wrap", "d": "6/2014"}, {"body": "still experiencing ember however happens go back static route using helper least going straight url works seems like content outlet dynamic segment remains go level another static route added dynamic route luck", "d": "6/2014"}, {"body": "extracted emberobjectproxy mixin works great components always felt weird components lose syntactic sugar implicit context components mixin coffeescript", "d": "6/2014"}, {"body": "potentially related embertextfield seem work components possibly elsewhere", "d": "6/2014"}, {"body": "confirm working firefox case anyone cares ie seems working fine", "d": "6/2014"}, {"body": "thank answer jonni really helped thank", "d": "6/2014"}, {"body": "terribly motivated hack solution new module world everything works wonderfully point sort nt time fix someone time give advice", "d": "6/2014"}, {"body": "bug still exists update", "d": "6/2014"}, {"body": "follow managed address another bug eachview helper rerender called entirely sure correct solution since issue idle bit post temporary work around", "d": "6/2014"}, {"body": "manoharank question fixing style selectors fixed changing selector", "d": "6/2014"}, {"body": "maxgabriel nice", "d": "6/2014"}, {"body": "raisedhands", "d": "6/2014"}, {"body": "suggest using need dynamic computed property implementation uses executed init really unreadable hard work would much nicer could pass list dynamic properties property instead strings lancejpollard suggested", "d": "6/2014"}]