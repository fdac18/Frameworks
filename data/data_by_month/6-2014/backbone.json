[{"title": "question events trigger process", "body": "test called callback list altered trigger behaviour seems weird one event listener removes another event listener first one happens second one wondered event still fired maybe explanation preference kind behaviour thank", "num": "3203", "d": "6/2014"}, {"title": "add tldr license summary", "body": "somewhere readme would nice", "num": "3202", "d": "6/2014"}, {"title": "collectionadd working intended mege true", "body": "following code link jsbin", "num": "3201", "d": "6/2014"}, {"title": "use need", "body": "jashkenas doubt callback mind callback invoked event proper situation need execute funcion matter often call need call one gone think need use like jquery english really bad described distinct thank", "num": "3200", "d": "6/2014"}, {"title": "triggered collectionfetch even though changes occur", "body": "view property set every seconds view calls time called event triggered even though none models change took look source seems offending line collection object followed case model already exists set seems used determine whether collection sort fetch set models already exist collection set process causing modelmap modelid return undefined causing sort occur", "num": "3199", "d": "6/2014"}, {"title": "modelfetch options setting custom parse", "body": "set url model temporary one fetch request ca nt change way parsed suggesting way set custom parse every fetch", "num": "3198", "d": "6/2014"}, {"title": "mvc good", "body": "good front mvc", "num": "3197", "d": "6/2014"}, {"title": "unsetting attributes via set method assume void value", "body": "following fire change event comparison take account flag attribute unset value attributes ignored line changed assumption also matches line deleting entry", "num": "3196", "d": "6/2014"}, {"title": "documentation complete callback", "body": "honors callback mentioned documentation", "num": "3195", "d": "6/2014"}, {"title": "router backwards incompatible change", "body": "please add note changelog detailing locationsearch included router fragment must matched regexp route declarations might also good idea include note part", "num": "3192", "d": "6/2014"}, {"title": "pushstate issue tests", "body": "environmentjs setup tests trouble history start method checks existence pushstate haspushstate since set function nt exist prior means test report pushstate means tests pass nt fix environmentjs tests fail missing something intentional", "num": "3191", "d": "6/2014"}, {"title": "bower req add backboneminjs", "body": "hi useful add backboneminjs bower installation make life bit easier", "num": "3188", "d": "6/2014"}, {"title": "thisoptions undefined", "body": "following code worked expected older version backbone upgrading backbone confirmview options property anymore code invoked ca nt figure wrong", "num": "3187", "d": "6/2014"}, {"title": "put ajaxprefilter", "body": "backbone app modularized using require first time browser opens app app nt load models trying load using url yet set ajaxprefilter calling ajaxprefilter like calling routerinitialize backbonehistorystart sure proceed someone suggested wrap backbonesync options array expected url attribute would nt use forum seems general problem", "num": "3184", "d": "6/2014"}, {"title": "backbonehistory routernavigate replace true working related issue", "body": "following setup issue noticed replace true flag working expected backbone documentation states using flag prevent navigate request insert history record browser case see hit browser back button successfully navigating flow desired flow one colleague suggested adding replace true master router handoff modular router well worked well sure need add flag two places since navigate command executed fact obviously permanent fix null issue workaround unavoidable need find solution unnecessary history addition", "num": "3183", "d": "6/2014"}, {"title": "modular routing dummy route workaround fix requested", "body": "current project building largescale modular web app setup modularized routing structure encountered handoff applevel master controller modular controller working properly reviewing several solutions online found calling dummy route modular router solved issue however dummy route call required permanent fix workaround flow appmainjs appmasterrouterjs main define function dashboardrouter dashboardcontroller use strict router backbonerouterextend routes modulehome home home function action master router appscriptsroutesmasterrouterjs backbonerouterextend routes module fragment module module function fragment setup path requirejs points modules appropriate folder nt specify full path require function backbonehistorynavigate fragment true", "num": "3182", "d": "6/2014"}, {"title": "detail tutorial router", "body": "", "num": "3180", "d": "6/2014"}, {"title": "could manage template files", "body": "", "num": "3179", "d": "6/2014"}, {"title": "jquery xhr success error complete deprecated", "body": "jquery xhr documentation mentions following message backbone uses nearly calls via parameter probably updated use", "num": "3178", "d": "6/2014"}, {"title": "routerextractparameters decode caused issue", "body": "original test url fragment login avalue amp backurl backbone router execution got querystring avalue amp backurl hard parse querystring correct parameters", "num": "3175", "d": "6/2014"}, {"title": "tojson options", "body": "regarding documentation model collection take optional arguments per code argument never used way remove argument documentation code update code functionality like guess predictable usage argument array keys string function omit return new object nt need", "num": "3171", "d": "6/2014"}, {"title": "binary search sorted collections", "body": "considering writing small binary search function method sorted collections would also modify current methods order take advantage feature whenever possible user search one field comparator would offer significant reduction searching already sorted collection lg n furthermore speedup could achieved users without modify code may also worth considering modifying method offer n insertion sorted collections opposed n lg n currently achieved resorting entire collection main downside idea may slower inserting many models one collection resorted case think put meantime submit pull request would considered desirable feature", "num": "3169", "d": "6/2014"}, {"body": "well really method need know pull requests changing docs definitely welcome backbone bit unique best documentation source set somewhere code follow rabbit hole", "d": "6/2014"}, {"body": "furthermore types public functions like backbonehistorygetfragment nt documented methods public nt include leading underscore part public api per se maybe renamed certain worth effort confusion", "d": "6/2014"}, {"body": "hi dimalev sentence could accurately written callback list particular event altered trigger reason altering list iterating cause handlers skipped hope helps smiley", "d": "6/2014"}, {"body": "sentence could accurately written callback list particular event altered trigger yeah test name says smile reason altering list iterating cause handlers skipped talking iteration like right trick allows maintaining events allowing remove events processing without skipping notremoved ones wondering implement events maintenance trigger occurs see implementation suggesting another implementation ask behaviour intetional picked easyenough solution removeevent functionality would preffereble", "d": "6/2014"}, {"body": "yeah test name says smile sorry emphasized added particular event ask behaviour intetional yes intentional handlers modified called", "d": "6/2014"}, {"body": "yes intentional handlers modified trigger called ok reasons preffer approach example one event handler removes another still called kinda confused sure situation kinda wrong design fact removed event anyway triggered makes think happen", "d": "6/2014"}, {"body": "believe decided approach simplest also case many libraries dom event listeners jquery event listeners node event emitters etc", "d": "6/2014"}, {"body": "thanks thanks mit license exotic one one quickly become familiar looking open source projects", "d": "6/2014"}, {"body": "merge two models identifiers try adding definition", "d": "6/2014"}, {"body": "caseywebdev thanks lot mate quick reply", "d": "6/2014"}, {"body": "hi remove call see several tests failing reason present handle nested calls event hope clears", "d": "6/2014"}, {"body": "hi braddunbar got thank much", "d": "6/2014"}, {"body": "possible dupe others make small reproducible jsfiddle showing bug issue models nt property set yet correct", "d": "6/2014"}, {"body": "yeah looked nt think issue right models properties set initially fetched server first time future requests tried one model id get issue took look source part nt make sense checked set nt seem right since always return true", "d": "6/2014"}, {"body": "check handle case mind making jsfiddle see mean thing could think might issue trying set response json field nested causing existing call fail", "d": "6/2014"}, {"body": "nope id nested example response fiddle demonstrating using models attributes backbone looks like got introduced works fine logic around pretty hard follow imo", "d": "6/2014"}, {"body": "modelid checked modelmap set nt seem right since modelmap modelid always return true far remember think prevent duplicate models id getting set twice ca nt say fully follow logic either agree undesirable although probably destructive idempotent collection create fix failing test case keeps others check happy merge", "d": "6/2014"}, {"body": "looks like suppose maintain order collections get set ordering set collection fetch server get going new order hence event fired seems like problem ordering occurs even ordering models set equal order existing models fetch get still get event looking code carefully looks like always triggered false user defined put simply nt choose ordering collection reordered every time even refuse weird seems bug nt make sense true true know called true true true way event false however contradicts getting rid fixes problem besides nt think setting collection based order models even considered anyway sorting arrange set things based one attributes purpose hand simply setting resetting models based position collection set think fix makes lot sense caseywebdev would love get thoughts since made additions", "d": "6/2014"}, {"body": "would nt better check custom url method seems like passing oneoff parse function would get ugly fast mention really edgecase", "d": "6/2014"}, {"body": "hi nadoedalo right options get passed use need custom function", "d": "6/2014"}, {"body": "looks like bug thanks reporting", "d": "6/2014"}, {"body": "hi bruth option part public api present support like unset many attributes pass value", "d": "6/2014"}, {"body": "ended reason used flag unset method support taking object whose keys unset sure deliberate decision certainly would convenient supported make change suggested jun pm brad dunbar notifications githubcom wrote hi bruth unset option part public api present support unset like unset many attributes pass undefined value modelset foo undefined bar undefined reply email directly view github", "d": "6/2014"}, {"body": "nt quite follow mean option delete keys", "d": "6/2014"}, {"body": "passing object unset side effect visible value position may worth putting type check prevent otherwise silent failure unsetting keys suggesting ensure set expliclty true", "d": "6/2014"}, {"body": "simply would like unset keys object regardless values", "d": "6/2014"}, {"body": "hi juzerali backbone nt support directly jquery docs options success error callbacks jquery request options backbone directly support options give passed via", "d": "6/2014"}, {"body": "yeah thought options proxy jquery ajax looking save destroy methods sync thanks jun pm brad dunbar notifications githubcom wrote closed reply email directly view github", "d": "6/2014"}, {"body": "addressed", "d": "6/2014"}, {"body": "hi latentflip check existence usually stub tests testing way much easier way used allowing calls attempting check url assigning empty function prevent calls falling messing test environment hope clears smiley", "d": "6/2014"}, {"body": "hey braddunbar hmm sure see one test nt actually failing longer history stubbed null three others still three tests fail change tests history nt stubbed null means using windowhistory environmentjs pushstate function albeit empty added never windowhistorypushstate issue someone wants support never call wo nt work", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "hi thanks please see answer underscore repo", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "please search opening issues relevant ones", "d": "6/2014"}, {"body": "would nt use forum seems general problem nope place bug reports feature discussions troubleshooting help good luck", "d": "6/2014"}, {"body": "sorry thinking would something would general enough warrant included feature discussions apologize noise garey mills fri jun jeremy ashkenas notifications githubcom wrote would nt use forum seems general problem nope place bug reports feature discussions troubleshooting help good luck reply email directly view github generate messages directories read files opened rather silent", "d": "6/2014"}, {"body": "oh big super star underscorejs really really good work", "d": "6/2014"}, {"body": "using multiple routers per page recommended maybe even supported someone correct wrong provide failing test case glad take look", "d": "6/2014"}, {"body": "hi egpierro trouble following exactly want would mind posting example said usually recommend using one router calling modules want break routes", "d": "6/2014"}, {"body": "like said would nt recommend using multiple router instances time want split routing modules recommend large routers use pattern favorite bundler js routersfoojs moduleexports foo function routersbarjs moduleexports bar function routersrouterjs moduleexports backbonerouterextend routes extend baz function require foo require bar gon na close got failing test case please post happy take look", "d": "6/2014"}, {"body": "hi hwoarangzk question better suited stackoverflow tag backbonejs irc channel", "d": "6/2014"}, {"body": "yep thanks stavarotti try one helpful resources sure find good articles google", "d": "6/2014"}, {"body": "sorry putting questions tried visit stackoverflow due network policy ca nt sign ask question", "d": "6/2014"}, {"body": "ah try mailing list irc channel might luck", "d": "6/2014"}, {"body": "rarely familiar said mailing list irc channel tt could please give links lead communities asking answering questions backbone thank much", "d": "6/2014"}, {"body": "documentcloud freenodenet irc", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "ah recall journalist friends china proxies tunneling software get around great firewall may blocked nt know specifics unfortunately feel free reach email mine profile try help", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "hi hwoarangzk certainly tools combining templates scripts fairly easy node environment said sort question probably better suited stack overflow irc channel freenode github issues questions regarding development backbone", "d": "6/2014"}, {"body": "sorry putting question due network policy ca nt sign stack overflow sorry", "d": "6/2014"}, {"body": "case use new backbonemodel save success donecallback error errorcallback actually use ajax new backbonemodel url success donecallback error errorcallback type post pass callback ajax options success error relationship deferred method ajax return jqxhr object implement promise interface success error complete jqxhr deprecated names make confusion different things", "d": "6/2014"}, {"body": "want use deffered method use like way new backbonemodel save done fail always new backbonemodel save success error complete however free pass success error callback options", "d": "6/2014"}, {"body": "yep search issues find background", "d": "6/2014"}, {"body": "hi lucozhao version backbone using", "d": "6/2014"}, {"body": "added test case addresses case appears pass please point issues see thanks posting either way", "d": "6/2014"}, {"body": "hi braddunbar thanks much swift response using latest version see error travis ci build could complete due error info test case page problem see debug params got avalue amp backurl instead original avalue amp backurl string please advise", "d": "6/2014"}, {"body": "whoops looks like running tests node well unnecessary using node run phantomjs amended tests passing browser seeing incorrect parameters post sample code", "d": "6/2014"}, {"body": "using chrome sample codes probably usage issue routes module querystring viewfromquerystring module querystring viewfromquerystring module viewfactory module page querystring viewfrompagequerystring module page querystring viewfrompagequerystring module page viewfactory module page id querystring viewfactory module page id querystring viewfactory module page id viewfactory filter viewfactory viewfromquerystring function module querystring thisviewfactory module null null querystring second function passed querystring backbone already decoded", "d": "6/2014"}, {"body": "ah yes nt need nt include search parameters route definition anymore words following fragment snippet would log", "d": "6/2014"}, {"body": "hi braddunbar thank much help changed route definition seems work possible explain bit root cause routes module viewfromquerystring module page viewfrompagequerystring module page id viewfactory filter viewfactory", "d": "6/2014"}, {"body": "sure since version backbone supported search params fragment without extra splat param means old style params matching removed old params still work change old semantics including decoding", "d": "6/2014"}, {"body": "awesome thanks info", "d": "6/2014"}, {"body": "need app something backbone especially something drastic omitting attributes", "d": "6/2014"}, {"body": "suggestion nt need mentioned argument present never used code regarding issue found ticket", "d": "6/2014"}, {"body": "argument present primarily documentation extending wo nt cause harm regardless", "d": "6/2014"}, {"body": "desirable sure attempted past difficulty fare better would great addition", "d": "6/2014"}, {"body": "hi thejameskyle case case basis perhaps could exposed however think exposed could change supporting userconfigurable variable much difficult fixed behavior instance think exposed see many tickets regarding want specific variables exposed let consider separately", "d": "6/2014"}, {"body": "braddunbar would router regex discussion", "d": "6/2014"}, {"body": "sure use case customizing", "d": "6/2014"}, {"body": "braddunbar trying create subclass backbonerouter allow subroutes added recursively based parent routers need modify defaults slightly use original regex places way currently possible manually copy paste backbone source ie trying avoid code duplication possible", "d": "6/2014"}, {"body": "trying create subclass backbonerouter allow subroutes added recursively based parent routers gt foo gt foorouter gt id nt quite follow could give example", "d": "6/2014"}, {"body": "nt final api design means general concept js url fragment var approuter marionetterouterextend routes foo foo gt gt foo bar bar foo function return new foorouter var foorouter marionetterouterextend routes index new create id show gt gt foo idedit edit design would allow many levels routers one wants routers routers routers transitioning routes within subrouter parent routers method called subroute event triggered part larger exploration multiapplication structure marionette future", "d": "6/2014"}, {"body": "see mean sure exposing regular expressions would help looks like need rather different implementation", "d": "6/2014"}, {"body": "braddunbar overwriting parts history possibility guess see separate unrelated issue regexes key parsing backbone routes broad aim routes entirely sure exact object end whether overwrite history sure ideas far required copypasting regexes parse routes give another example something experimented supplying developer map parts url alongside named part route route navigate supplying user instead", "d": "6/2014"}, {"body": "braddunbar jmeas yes history also going extended treatment would helpful", "d": "6/2014"}, {"body": "hi hit issue product edge version seems working us going publish fix official package increase version number", "d": "6/2014"}, {"body": "packages npm bower nt even debate publish package npm bower semver part api contract enter break contract break modules depend break production code depends module question use semver question want good citizens ecosystem answer advertised loudly clearly safe install package like would package follows api contract", "d": "6/2014"}, {"body": "publish package npm bower semver part api contract enter onerous requirement", "d": "6/2014"}, {"body": "interested perspective semver know jashkenas thoughts", "d": "6/2014"}, {"body": "yes npm assumes packages repository follow semver determines packages compatible doc version must parseable nodesemver bundled npm dependency npm install semver use version numbers lie interpreted semver correct parsing thus breaking contract breaking compatibility people use package versions npm ecosystem matter personal preference matter package interoperability possible force package play nice nt use semver sure nt call loudly boldly top readme users know necessary introduce breaking change code could easily break publish packages package repositories versioning becomes part interoperability contract ignore contract peril users", "d": "6/2014"}, {"body": "onerous requirement knowing thousands packages go full blown application onerous requirement forcing users tightly lock versions packages handful modules nt follow rules onerous requirement complicates matter keeping bug fixes security patches etc good reasons follow semver package number might get really big terrible reason use semver tracking progress application distant second reason package versions important function version know version work application btw package number would get really big maybe code smell bump major version make breaking change breaking change definition one breaks openclosed principle open extension closed breaking changes good apis follow openclosed principle closely reasonably users keep pace api changes nt break existing code", "d": "6/2014"}, {"body": "think lesson learned nt use pulling backbone via packagejson", "d": "6/2014"}, {"body": "interested perspective semver general agree arguments wonder bumping major version best course action every breaking change underscore mostly surface area lot underscore used great deal thirdparty libraries requiring keep huge versions would onerous perilous package released today depend underscore version pin dependencies expense perhaps requiring separate underscore main project think lesson learned nt use pulling backbone via packagejson yep", "d": "6/2014"}, {"body": "think lesson learned nt use pulling backbone via packagejson outlined takeaway lesson", "d": "6/2014"}, {"body": "think lesson learned nt use pulling backbone via packagejson consequence protect code breaking lesson would like following semver good everyone", "d": "6/2014"}, {"body": "appreciate value romantic versioning bad nt coexist well noted always projects nt follow semver strictly attempt fall short system always leaks little least backbone generally good breaking things", "d": "6/2014"}, {"body": "dgbeck things break time per versions see earlier comment think value following semver really talked fact guys push minor features bug fixes allow people depends upstream get changes free great value add obviously comes cost complexity maintainer", "d": "6/2014"}, {"body": "issue got rid leading slash working properly", "d": "6/2014"}, {"body": "nice know catch false routes app start supposed incorrect routes app started", "d": "6/2014"}, {"body": "bendman see plugin", "d": "6/2014"}, {"body": "strml bendman neat solution exactly could used app need separate plugin", "d": "6/2014"}, {"body": "know kind old since found search figured post solution nt found updates otherwise allow us specify optionally want handled removal slash causing identity solution issue relogin requests every time hit home route without trailing slash notes took route versus editing backbone js directly effort keep playing nicely backbone downloaded via nuget package solution used minified version part changed historystarted backbonehistorystarted call pathstripper needed reference backbonepathstripper since called outside class place somewhere js dom ready", "d": "6/2014"}, {"body": "hey kyse solution would work use case advise adding monkey patches minfied code think nightmare maintain", "d": "6/2014"}, {"body": "update", "d": "6/2014"}, {"body": "would love issue need model reset server response calling send request bad certain user interactions abort jqxhr leaving nowempty model currently resort hack accomplish seems like would simple addition would change default behavior", "d": "6/2014"}, {"body": "agree paul flow exactly elegant", "d": "6/2014"}, {"body": "whole point rendering based data data nt changed nt need rerender would application nt set way want listening changes instead rerender ui scratch forcing event change occurred would foolish thing backbone", "d": "6/2014"}, {"body": "appears still issue even using collectionadd arrayofmodeldata fails", "d": "6/2014"}, {"body": "pity mainstream backbone nt include workaround still minimum version enterprises ie major browser business hand big deal modify backbone usage enterprise software another workaround adding problematic methods prototype explicitly", "d": "6/2014"}, {"body": "implementing data binding based events whether display pager driven length collection may compelling something", "d": "6/2014"}]