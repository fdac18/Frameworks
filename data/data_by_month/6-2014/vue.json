[{"title": "vuejs web components", "body": "hey trying get vuejs running custom element web component cant seem get running tried hand el template data test test work errors template consists template resolved vue problem template ordinary html element nt direct child however document fragment attribute children passing vue fragment didnt work either unfortunately document fragment obviously full blown element could issue thank alessandro", "num": "332", "d": "6/2014"}, {"title": "using vmodel array work", "body": "using array value bind data work case", "num": "331", "d": "6/2014"}, {"title": "von window events", "body": "hi possible listen window event directive overriding value know could create another directive like sure good way window event listeners added via directive thanks", "num": "330", "d": "6/2014"}, {"title": "official way call method outside view model", "body": "trying integrate vue backbonejs app official way outside code call method vue something like thanks", "num": "329", "d": "6/2014"}, {"title": "support ing property vm", "body": "trying subscribe data changes made property vm predefined property names could nt find way proposal made example first subscribe changes property next two statements would proposal allow watching updates property either support wildcard syntax nt think great idea valid property name js better syntax makes string property name optional", "num": "328", "d": "6/2014"}, {"title": "make work", "body": "nt find anything documentation regarding viewmodel lt component communication", "num": "325", "d": "6/2014"}, {"title": "weird option appended", "body": "please look sample code fourth option appended key include dot character key dot character problem seems happened", "num": "324", "d": "6/2014"}, {"title": "draggable sorting vrepeat", "body": "trying use something like sort vrepeat list mutate array reflect changes made view tried change property child vm new index values nt seem solve problem actual array still best way mutate vrepeat list reflect listorder viewgui", "num": "323", "d": "6/2014"}, {"title": "html entities automatically escaped", "body": "seems vuejs templating language autoescape strings made filter wrap urls links printed results escaped html could nt find mention docs way avoid escaping shouldnt filter instead like unsafestring escape", "num": "322", "d": "6/2014"}, {"title": "improve vmodel behavior", "body": "current problems used together options created initial value correctly set expected used order directives would result different behavior solve also need normalize browser difference ordered bracket access syntax working syncing values back", "num": "321", "d": "6/2014"}, {"title": "concerns implementing vue", "body": "really like vue recently started get frustrated angular verbosity issue many damned javascript mvc mvvm frameworks impossible predict relevant near future plans vue see evolving invested maturing viable alternative knockoutbackboneangular etc", "num": "320", "d": "6/2014"}, {"title": "accessing view model array outside vrepeat directive causes method invocation error", "body": "using view model object array returned via xmlhttprequest outside vrepeat directive causes elements within vrepeat directive lose ability invoke methods example jsfiddle", "num": "319", "d": "6/2014"}, {"title": "set directives", "body": "wondering easy way using directives like vmodel example reason asking problem got example", "num": "318", "d": "6/2014"}, {"title": "drop event works textarea instead div", "body": "", "num": "317", "d": "6/2014"}, {"title": "backbone vue", "body": "possible use backbone models vue", "num": "316", "d": "6/2014"}, {"title": "filters", "body": "possible create filters get set use case example accept currency dollars save cents", "num": "315", "d": "6/2014"}, {"title": "opportunities share methods custom directive around bindunbindupdate", "body": "example would add event listener bind remove unbind wrote exposed better way thanks", "num": "314", "d": "6/2014"}, {"title": "vif behavior differs given property key versus expression", "body": "jsfiddle demonstrates directive behaving differently seemingly equivalent scenarios works expected given simple property key expressions computed properties appear cause contents evaluated even result falsy", "num": "313", "d": "6/2014"}, {"title": "value textarea sync back model", "body": "hi bind model textarea works fine content textarea modified javascript model change insert text javascript example thanks", "num": "312", "d": "6/2014"}, {"title": "vstyle fails value number", "body": "see fiddle looks like fixed", "num": "310", "d": "6/2014"}, {"title": "bind multiple events one element", "body": "eg ondragover ondragend ondrop one element bind one event", "num": "309", "d": "6/2014"}, {"title": "preselect select element", "body": "set attr element whose value equal itemcategory especially itemcategory changed", "num": "308", "d": "6/2014"}, {"title": "methods lose context called via get", "body": "see first call log correctly second name causes lose context possible fix would ensure defined bound vm putting vm properties take look pr soon", "num": "307", "d": "6/2014"}, {"title": "backbone like events options", "body": "really liking vue considered adding options similar backbone example instead defining handlers like options would tidy things could submit pr understand internals better", "num": "304", "d": "6/2014"}, {"title": "cound used watch array item data something else", "body": "array item changed watch whole list find change manual cound convenient way point change question changes mutation methods thanks", "num": "303", "d": "6/2014"}, {"title": "weird behavior vtransition", "body": "tried use vuejs create mobile app like one found tutorial facing weird problem vtransition nt animation neither destroy old object component code found probably nt bug stupid mistake nt find place ask support think vue needs google group something kind inquires", "num": "301", "d": "6/2014"}, {"title": "vstyle parse problem", "body": "example version version example version open console see told", "num": "299", "d": "6/2014"}, {"title": "vview clear component data", "body": "wrote component data data cleared exist opportunities save component data", "num": "297", "d": "6/2014"}, {"title": "replacing object data somehow keeps old keys", "body": "object data section replace stage throughout app result strange object new object properties values somehow also keeps old keys undefine made jsfiddle illustrate click button notice old keys still values undefined", "num": "296", "d": "6/2014"}, {"title": "use import arrage code", "body": "import standard", "num": "295", "d": "6/2014"}, {"title": "way manipulate model custom directive", "body": "would nice way directly change model data passed custom directive directive might look like want change model updated event ill access like javascript bind function nice var props thiskeysplit thisvm props props consolelog thisvmreqpostalcode gt would like something like thismodel guide sais treat properties readonly refrain changing think would nice able manipulate model data directives nt see solution ugly one made", "num": "294", "d": "6/2014"}, {"title": "select element vmodel von change onchange works differently ff", "body": "hi noticed ff onchange event triggered vmodel variable updated browsers variable updated first example select new value select element text updated selected value ff equal last selected value", "num": "293", "d": "6/2014"}, {"title": "template contents ignored tag unless wrapped", "body": "demonstrated anything template tag appears ignored unless content tag wrapped inside another tag big problem certainly caused halfanhour headscratching unavoidable may worth mentioning docs somewhere", "num": "292", "d": "6/2014"}, {"title": "vrepeat nt work custom directives", "body": "problem vrepeat nt work correctly custom directives vue nt notice directive", "num": "291", "d": "6/2014"}, {"title": "using von iframes", "body": "using von iframe element need extra steps get behave expected instance get click work need wait load event use addeventlistener add event handlers contentwindowwindowdocumentbody thoughts could work seamlessly", "num": "290", "d": "6/2014"}, {"body": "yes something bracket access syntax working properly planned fixed next release", "d": "6/2014"}, {"body": "marvellous thanks", "d": "6/2014"}, {"body": "able get around issue boxing everything template tag div referencing easy way found template aka documentfragment lacking would nt work thanks alessandro", "d": "6/2014"}, {"body": "use template tag option instead eg", "d": "6/2014"}, {"body": "unfortunately nt work dom node would vue id lookup based anyway use template pass actuall innerhtml supposed parse thanks", "d": "6/2014"}, {"body": "catch used created cached documentfragment reuse actual element vue use render stuff hand tags used render node browsers wo nt render parses content documentfragment need options work working example", "d": "6/2014"}, {"body": "configuration like el div template thisshadowroot data test input thisshadowroot pointing template getting", "d": "6/2014"}, {"body": "alternative tried modify div lookup slightly el thisshadowrootqueryselector div template thisshadowroot data input input got uncaught datacloneerror failed execute clonenode shadowroot shadowroot nodes clonable thats probably evil lies", "d": "6/2014"}, {"body": "would use shadowroot template post fiddle see setup", "d": "6/2014"}, {"body": "quite sure implement fiddle honest otherwise would done first place going give try template getting shadowrooted content encapsulatedhidden rest dom ever look polymer polymerprojectorg similar twoway binding functionality shadowroot place thing wanted something similar regular web components look independent solution like", "d": "6/2014"}, {"body": "sorry bring another point possible invert relationship data vue instance hand vue reference object would get reference watched used directivebind", "d": "6/2014"}, {"body": "mean watch data actually used templates", "d": "6/2014"}, {"body": "exactly", "d": "6/2014"}, {"body": "unfortunately possible moment", "d": "6/2014"}, {"body": "okay limitation current implementation nt come requirement", "d": "6/2014"}, {"body": "idea something meant observed however simply vm created late additions never get watched", "d": "6/2014"}, {"body": "see point thing data pointing fairly large object holds simple object like arrays string like also dom elements well stuff likely watched reside object convenience would big effort adapt rather make configurable", "d": "6/2014"}, {"body": "prefix properties properties ignored observer also anything pure js object ignored", "d": "6/2014"}, {"body": "yeah noticed escaping prefix would ultimately break mixing things object every entry would adhere rule nt imho detection nonstandard js objects work currently functions html nodes plain values watched object still run rangeerror maximum call stack size exceeded", "d": "6/2014"}, {"body": "found nodes implement full htmlelement interface use vue rough test using vue custom elements", "d": "6/2014"}, {"body": "thanks giving try workaround currently wrapping span around shadomdoms content anything specific need htmlelement miss shadowroot node", "d": "6/2014"}, {"body": "oh way using chrome native shadowroot might well differ quite bit polyfill platformjs provides", "d": "6/2014"}, {"body": "testing chrome seems spec draft shadowroot implement full element interface e g etc", "d": "6/2014"}, {"body": "nt everything vue", "d": "6/2014"}, {"body": "agree evan nothing mvvm", "d": "6/2014"}, {"body": "thanks feedback", "d": "6/2014"}, {"body": "methods present created vm", "d": "6/2014"}, {"body": "ok thanks", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "thanks answer documented better maybe still learning vuejs things would never thought seems little unintuitive willing eager contribute love vue asking know accept pr", "d": "6/2014"}, {"body": "submit pr docs", "d": "6/2014"}, {"body": "familiar jqueyui define use access vm data least", "d": "6/2014"}, {"body": "right actually simple", "d": "6/2014"}, {"body": "sorry wrong case sample code abc prepended onto select box", "d": "6/2014"}, {"body": "looks like issue observerensurepath", "d": "6/2014"}, {"body": "thanks information let investigate detail", "d": "6/2014"}, {"body": "need swap values array see documentation mutation methods section small example", "d": "6/2014"}, {"body": "use raw html docs third note box", "d": "6/2014"}, {"body": "please refer plans obviously nt much time thought work plugins much keep vue core well maintained vue never intended alternative fullsolution frameworks like angular philosophy use together libraries via ecosystem like component browserifynpm also addresses pretty different concerns compared backbone similar knockout terms use case personally think already viable alternative knockout although mature", "d": "6/2014"}, {"body": "error thrown initially undefined set empty array", "d": "6/2014"}, {"body": "desired behavior", "d": "6/2014"}, {"body": "desired behaviour variations total property nt check radio buttons clicking radio buttons changes property total like explained workaround found far use computed property empty get method like", "d": "6/2014"}, {"body": "case might easier listen change event radio buttons instead using vmodel", "d": "6/2014"}, {"body": "right case empty get also seems work well thanks", "d": "6/2014"}, {"body": "supposed drag", "d": "6/2014"}, {"body": "images", "d": "6/2014"}, {"body": "vue uses plain objects models general compatible backbone model also necessary use backbone models vue plain objects fairly simple implement validationajax functionalities libraries", "d": "6/2014"}, {"body": "libraries thinking example", "d": "6/2014"}, {"body": "eg", "d": "6/2014"}, {"body": "thank closing", "d": "6/2014"}, {"body": "think computed properties may help", "d": "6/2014"}, {"body": "use computed property convert different properties create computed property property want store cents display dollars", "d": "6/2014"}, {"body": "filter get probably good idea use filters purpose yes need create computed property property want however extract conversion logic functions reuse computed property definitions", "d": "6/2014"}, {"body": "considering vue heavily influenced rivetsjs among others wondering reason filters seems like natural fit since already specify keypathproperty set write directive keypathproperty nt need specified filter implementation making filter reusable different properties like code also seems readable computed properties", "d": "6/2014"}, {"body": "really good point set filter could simplify validations consider adding next version thanks", "d": "6/2014"}, {"body": "thank", "d": "6/2014"}, {"body": "emit event vm", "d": "6/2014"}, {"body": "attach handler directive instance", "d": "6/2014"}, {"body": "bpierre want set private handler directive dispatched abroad advice demo also uses thanks really cool", "d": "6/2014"}, {"body": "vue directive listening input event occur change content via js could manually trigger tested firefox chrome may need abstraction layer support every browser reason need change outside app", "d": "6/2014"}, {"body": "another solution could change value vm let job", "d": "6/2014"}, {"body": "many richtext editor change textarea javascript example insert image execute found way get work capture setrangetext call like vue process vmodel textarea", "d": "6/2014"}, {"body": "want avoid complicating internals one solution input elements bound augmented method syncs current view state back model nt manually emit event thoughts", "d": "6/2014"}, {"body": "sounds good", "d": "6/2014"}, {"body": "thanks noticed probably needs cast stuff like strings", "d": "6/2014"}, {"body": "add without", "d": "6/2014"}, {"body": "want cast strings setting style values number results setting empty string instead value", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "thanks nt work time", "d": "6/2014"}, {"body": "etanxing look html initialization devtools see selected value correctly set vue issue chrome windows", "d": "6/2014"}, {"body": "etanxing google chrome issue works time firefox safari nt work st time google chrome", "d": "6/2014"}, {"body": "seems quite inconsistency browser behaviors regarding form input elements try resolve consistent implementation next version", "d": "6/2014"}, {"body": "remoe sure either asip chrome stable windows amp mac thanks", "d": "6/2014"}, {"body": "closing discussion done", "d": "6/2014"}, {"body": "actually seeing spots could implemented sure spot best possibly definevmprop downside reference original method match bound method ie sure matters", "d": "6/2014"}, {"body": "nt really think issue since always", "d": "6/2014"}, {"body": "sorry example nt complete actually using context several levels deep either something like even unclear goal instead ultimately trying avoid traversing much avoid making component tightly coupled another thoughts", "d": "6/2014"}, {"body": "holic tried use events instead traversing vms chain", "d": "6/2014"}, {"body": "yeah really good practice explicitly call methods parents events make code decoupled", "d": "6/2014"}, {"body": "perhaps structured application wrong failing see events could solve using vue power product search root vm houses individual components search input field attached coordinates routing root vm two child components one results product search one shopping cart search triggered root sends results component generate product results results clicked add cart display result changes whether product cart products removed cart subsequently changes results displayed way see events working case parent parent listening events relay via children seems weird would guys recommend structuring application", "d": "6/2014"}, {"body": "nt necessarily need make vue event system nt make sense use global event bus like node event emitter even empty vm", "d": "6/2014"}, {"body": "also nt want add additional lib eventbusmediator could use root cheap mediator like", "d": "6/2014"}, {"body": "closing since usage issue rather implementation one holic feel free continue discussion want", "d": "6/2014"}, {"body": "considered could handy", "d": "6/2014"}, {"body": "first glance looks pretty think object events created flexible example adding event element etc object could nt add events different viewmodel state", "d": "6/2014"}, {"body": "dmfilipenko fair point guess two syntax coexist without much problem", "d": "6/2014"}, {"body": "need watch inside array objects probably better create component used together way child component instance gets notified changes assigned data", "d": "6/2014"}, {"body": "great thanks", "d": "6/2014"}, {"body": "css property prefixed nt think chrome shipped nonprefixed transform yet", "d": "6/2014"}, {"body": "thanks please consider google group vue thank great library", "d": "6/2014"}, {"body": "think vwith replaces data object", "d": "6/2014"}, {"body": "ahmadibrahim also think made pull request fix behaviour", "d": "6/2014"}, {"body": "inherit individual properties", "d": "6/2014"}, {"body": "intended behavior ensure computed properties amp expressions need access properties nt throw errors", "d": "6/2014"}, {"body": "would nt issue anyway since resulting values missing", "d": "6/2014"}, {"body": "way explicitly replace object ie clean one", "d": "6/2014"}, {"body": "bit hack overwrite different data type assign object wiped clean", "d": "6/2014"}, {"body": "chains one level eg clean object error case probably better mutate place", "d": "6/2014"}, {"body": "nt provide benefits commonjs still needs transpiling anyway supported browsers bothering standard actually ships", "d": "6/2014"}, {"body": "component importexportmodule supported box agree component actually break vue workflow worth instead", "d": "6/2014"}, {"body": "module import syntax rediscussed according", "d": "6/2014"}, {"body": "broader purpose directive could post jsfiddle", "d": "6/2014"}, {"body": "use note cause circular updates directive function need implement kind lock case", "d": "6/2014"}, {"body": "exactly needed guess missed api ref thanks jtremback making fiddle solved ended", "d": "6/2014"}, {"body": "difference firefox processes stores element attributes compared webkit blink sure ie run example firefox order reversed vue nt give directive special priority directives use watch want something value changes", "d": "6/2014"}, {"body": "thanks dlh explanation", "d": "6/2014"}, {"body": "nt think content tag selfclosing need", "d": "6/2014"}, {"body": "confirm see", "d": "6/2014"}, {"body": "aha try nt considered closing tag assumed simple replacement thanks", "d": "6/2014"}, {"body": "dmfilipenko trying repeat empty array", "d": "6/2014"}, {"body": "brandonpierce code changes original array", "d": "6/2014"}, {"body": "supposed use custom directives way directives meant manipulating dom also nothing code links together either pipe sort filter use computed property", "d": "6/2014"}, {"body": "thanks misunderstood concept directives", "d": "6/2014"}, {"body": "ah never thought guess check bound element iframe implementation", "d": "6/2014"}, {"body": "tried using provided minified version already minified semicolons", "d": "6/2014"}, {"body": "vue breaking people builds stylistic choices", "d": "6/2014"}, {"body": "jtremback semicolons discussed many times fact tool deal arbitrary javascript work semicolonless javascript closure compiler rare exception enforces special stylistic requirements advanced mode work way phrase would closure compiler ca nt deal semicolonless javascript rather semicolonless javascript breaking people builds", "d": "6/2014"}, {"body": "minified version also successfully run closure compiler even", "d": "6/2014"}, {"body": "development production version vue processed closurecompiler advancedoptimizations errors", "d": "6/2014"}, {"body": "also issue nothing automatic semicolon insertion related usage reserved javascript words completely fine use reserved word according spec issue minimizer", "d": "6/2014"}, {"body": "yeah bad assumed semicolons ran kind problems closure compiler past log indicate keyword problem according spec jordangarcia share version closure compiler using might fixed part since working dlh", "d": "6/2014"}, {"body": "closing due inactivity", "d": "6/2014"}, {"body": "hi come across issue expecting number vms update inner vm number spins control looks like may regression testing works expected", "d": "6/2014"}, {"body": "encountered problem another example", "d": "6/2014"}, {"body": "fixed thanks examples guys", "d": "6/2014"}, {"body": "ok maybe distinction needs docs several usecases almost equivalent though", "d": "6/2014"}, {"body": "sure necessary since check vue methods well thanks suggestion though", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "dynamic two way binding tricky implement honestly rare use case moment may look requests feature", "d": "6/2014"}, {"body": "closing due inactivity", "d": "6/2014"}, {"body": "created directive vonce someone need", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "hey going updates", "d": "6/2014"}, {"body": "nice tried use javascript effects docs nt enough brains understand jsfiddle example finally got thanks learning extended jsfiddle accordion list nice slidetransition works quite nice run different problem canshould parent vm access children vms created vrepeat ended ugly code accessing internal state parent vm guesshope better way", "d": "6/2014"}, {"body": "yes use vref directive together", "d": "6/2014"}, {"body": "aha found answer docs vref used together vrepeat value get array containing child components mirroring data array accordionjsfiddle use vref works fine", "d": "6/2014"}, {"body": "nt work used component calls overwritten build step instance could fixed like bpierre suggested js var modules utils utils config config transition require transition observer require observer viewmodelrequire function path return modules path", "d": "6/2014"}, {"body": "yeah might better way go open prs", "d": "6/2014"}, {"body": "preference external plugins structured released specific directive thinking open sourcing directive currently packaged larger app built browserify uses module format recommended docs toss project folder add release asis let people include vue project manually via bit file included project used via attribute", "d": "6/2014"}, {"body": "holic doc regarding convention plugins", "d": "6/2014"}, {"body": "ah fantastic sorry missed page", "d": "6/2014"}]