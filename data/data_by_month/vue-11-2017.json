[{"title": "npm install global vuecli", "body": "problem feature solve symbol primitive value suitable key proposed api look like npm install global vuecli warnings symbol", "num": "7161", "d": "11/2017"}, {"title": "npm intall global vuecli", "body": "", "num": "7160", "d": "11/2017"}, {"title": "", "body": "", "num": "7159", "d": "11/2017"}, {"title": "use symbol value key", "body": "problem feature solve symbol primitive value suitable key proposed api look like warnings symbol", "num": "7157", "d": "11/2017"}, {"title": "use vue template", "body": "problem feature solve custom event multiple child component top component listens like eventhandler way identity emits event use event arg compiled code looks like null maybe replaced proposed api look like know accessed javascript methods would nice use template better way solve said", "num": "7155", "d": "11/2017"}, {"title": "input keydown class binding micromacro task", "body": "version reproduction link steps reproduce enter number input field keydown fires keydwn e method setting thisuntouched false green background removed input field since touched expected pressed number entered input field instead number added second press class binding removed input field problem acting expected nt think issue keydown setting thisuntouched false addition class binding left vmodellazy set vmodel works expected however vmodel work use case actually happening class binding set number added field vue see reproduction works expected class binding vmodellazy edit assume related release note changed implementation vuenexttick fix bugs related change involves using macro task instead micro task defer dom updates inside dom event handler attached via von means vue updates triggered state changes inside von handlers deferred using macro task may lead changes behavior dealing native dom events details regarding micromacro tasks see blog post new implementation see source code nexttick sure bug expected behavior due change need solution thanks", "num": "7153", "d": "11/2017"}, {"title": "\u5728laravel\u4e2d\u4f7f\u7528vue\u62a5\u9519", "body": "", "num": "7152", "d": "11/2017"}, {"title": "ios safari browsers ca nt open display blank", "body": "using vuecli create chrome browsers mac safari browsers display normal ios safari browsers ca nt open display blank", "num": "7150", "d": "11/2017"}, {"title": "event handler nt work cshtml razor page", "body": "version reproduction link steps reproduce since using latest version vuejs supports short hand code events trying use click instead von click inside razor cshtml file nt work developing app backend aspnet core expected expected result working click actually happening encoding click submittest visual studio says name click exist current context resolve symbol click", "num": "7149", "d": "11/2017"}, {"title": "\u4e3a \u5f00\u53d1\u7684\u4f7f\u7528 vuejs", "body": "problem feature solve \u6211\u7684 firefox \u7684 csp contentsecuritypolicy scriptsrc self unsafeeval objectsrc self mozilla hello addon cryptocurrency price tracker bitcoin ethereum reviewed one versions disabled due critical issues discovered details version pass review following issues use unsafeeval allowed manifestjson csp cause major security issues custom csp allows remotescript injection allowed please fix submit thank \u662f\u56e0\u4e3a\u6211\u7684 csp \u91cc\u58f0\u660e\u4e86\u4f7f\u7528 unsafeeval proposed api look like vuedontuseeval", "num": "7148", "d": "11/2017"}, {"title": "ability trigger events directives", "body": "problem feature solve currently way trigger event inside bind function resort inspecting executing directly looking examples projects found usage right scopetarget need events go stackoverflow discussion proposed api look like usage bind choose component thought would lot boiler plating propagating attributes field inside component looked veevalidate handled communication used object errorsbag pass around vnodecontext directive bootstrapvue used mechanism mentioned earlier", "num": "7147", "d": "11/2017"}, {"title": "ca nt find variable sockjs", "body": "version reproduction link steps reproduce cli\u7248\u672c vue\u7248\u672c \u5728ios\u4e0b\u6253\u5f00\u4f1a\u62a5\u9519referenceerror ca nt find variable expected \u80fd\u6b63\u5e38\u52a0\u8f7d\u9875\u9762 actually happening ios\u7aef\u6253\u5f00\u767d\u5c4f", "num": "7146", "d": "11/2017"}, {"title": "conflicts vmodel", "body": "", "num": "7145", "d": "11/2017"}, {"title": "shorthand attributeprop syntax", "body": "problem feature solve often find writing code like code redundant nt fun write proposed api look like using object literal shorthand inspiration component could instead written like", "num": "7144", "d": "11/2017"}, {"title": "safari ca nt find variable sockjs", "body": "use strict const sockjs require sockjsclientdistsockjs let retries let sock null function socket url handlers sock new sockjs url error ca nt find variable sockjs sockonopen function onopen retries", "num": "7143", "d": "11/2017"}, {"title": "code spliting vue ssr", "body": "code result visit first js files download response blank exist file size code wrong", "num": "7142", "d": "11/2017"}, {"title": "", "body": "problem feature solve proposed api look like", "num": "7141", "d": "11/2017"}, {"title": "vuenexttick mocha nt play nice", "body": "version reproduction link steps reproduce run tests repro link expected tests fail similar error messages actually happening first test using settimeout fails expected second test using vuenexttick times error disappearing happening apparently uses promise internally mocha nt support catching unhandled promise errors workaround nt great least lets know error nt log correct error also wrap contents test ensure mocha knows mostly problem mocha think unexpected handle errors inside promise nt look like promise function really sure would suggest", "num": "7140", "d": "11/2017"}, {"title": "shouldprefetch enhancement", "body": "problem feature solve currently use load appropriate translation components generates chunks prefetched application starts would like load translations current language gives enough information filter files prefetched proposed api look like nt know available information probably api look like", "num": "7139", "d": "11/2017"}, {"title": "fires input event textarea placeholder set", "body": "version reproduction link steps reproduce opening page display message foo longer null modern ff chrome edge message show foo remains null user actually inputs something fire input event placeholder set show second textarea expected input event fire thus foo remain null actually happening ie fires input event textarea placeholder similar issue angular", "num": "7138", "d": "11/2017"}, {"title": "click handler invisible element nt get cleared", "body": "version reproduction link steps reproduce click handler shows new character click handler shows new character click new appeared ok click toggle hide show ok click new appeared ok click toggle hide show ok click new appeared means click handlers visible hidden elements get called ok expected handler hidden get called click actually happening handlers get called", "num": "7137", "d": "11/2017"}, {"title": "issues vmodelnumber", "body": "version reproduction link steps reproduce included fiddle expected input typenumber clear values accept stings formatted different locales vmodelnumber return string actually happening input value cleared sometimes vmodelnumber returns partially typed numbers issue started topic forum suggested open issue original post hi found limitations requires boilerplate cases mostly returns partially input numbers like problems app difference input either empty invalidpartial bound attribute type falsy values leads checks places attribute used issues solved computed property hard implement nested ones array values came using separate field casted values wanted implement custom directive like see handled differently compiler way automatically use property defined object found implemented custom directives questions better way work implemented custom directives convenient added vue post tried implement custom component included fiddle also issues also added different types inputs fiddle check behaviour checked different locales thank", "num": "7136", "d": "11/2017"}, {"title": "css transitions amp animations examples doc seem broken", "body": "version reproduction link steps reproduce facing issue css transitions animations using vue noticed css transition properties applied correctly issues present examples official vuejs documentation example see css animation properties applied transitions gt translatex opacity animations applied gt opacity animation applied expected transition animation applied elements per described opacity translatex actually happening transition animation applied", "num": "7134", "d": "11/2017"}, {"title": "vshow\u5bfc\u81f4\u6570\u636e\u5237\u65b0\u540e\u90e8\u5206\u6570\u636e\u4e0d\u663e\u793a", "body": "version reproduction link steps reproduce expected actually happening \u5237\u65b0table\u6570\u636e\u540e\u53d1\u73b0\u6570\u636e\u90e8\u5206\u4e22\u5931", "num": "7133", "d": "11/2017"}, {"title": "tests fail clean environment", "body": "version reproduction link metaissue steps reproduce opened fresh terminal typed expected tests passing might confused development process contribution file says make sure passes pull request guidelines would expect pass fresh pull actually happening tail finished secs secs gmt cet summary tests completed test failed failed tests transition mode transition outin async component resolve leave complete phantomjs linux expected webpack lt shift webpack lt coverage summary statements branches functions lines npm err code elifecycle npm err errno npm err vue test cover npm err exit status npm err npm err failed vue test cover script npm err probably problem npm likely additional logging output npm err complete log run found npm err npm err test failed see details doubt someone forgot fix code tools nt pick pr accepted probably got environment running ubuntu using fish shell might maybe considered test cases way done", "num": "7130", "d": "11/2017"}, {"title": "validation", "body": "problem feature solve hi many people asked validation vuejs directives invalid created small library valid dataattributes wanted give link previous discussion closed works vuejs replace tag names ans attributes sample maybe someone thoughts integrate vuejs level beforecreate hook proposed api look like new el directivesvalid new vue el directivesvalid", "num": "7129", "d": "11/2017"}, {"title": "validation", "body": "hi many people asked validation vuejs directives invalid created small library valid dataattributes wanted give link previous discussion closed works vuejs replace tag names ans attributes sample maybe someone thoughts integrate vuejs level beforecreate hook", "num": "7128", "d": "11/2017"}, {"title": "vuerouter transitiongroup crashes quick page changes", "body": "version steps reproduce proper containing properly keyed add transition effect change route quickly couple times expected router transitions properly actually happening vue crashes errors crash dump note changing fixes behaviour inspecting internal vue code seems tries process element present group router rendered fails empty comment element nt got required methods properties getboundingclientrect getattribute styledisplay getcomputedstyle etc enabled note nt able consistently reproduce outside current application bound legal contract share parts still think case description clear enough nt hesitate ask additional details needed though", "num": "7125", "d": "11/2017"}, {"title": "", "body": "", "num": "7124", "d": "11/2017"}, {"title": "\u5f53\u7ec4\u4ef6\u4f7f\u7528vif\u63a7\u5236\u663e\u793a\u5229\u7528bus\u8fdb\u884c\u8d4b\u503c\u5c06\u8d4b\u503c\u5931\u6548", "body": "version reproduction link steps reproduce expected \u80fd\u591f\u6b63\u5e38\u8d4b\u503c actually happening \u6ca1\u6709\u6b63\u5e38\u8d4b\u503c", "num": "7123", "d": "11/2017"}, {"title": "slotscope bind child bind back parrent object doesnt intance method", "body": "im haveing wrapper component bind list vuex getter gridreviewcomponent loop bind result slotscope binding works getlabel getvalue undefined instance methods class sure reason bind normaly paren child intance gives correct values way example err function missing", "num": "7122", "d": "11/2017"}, {"title": "updates slow", "body": "hello evan thanks creating vue let start explaining use case feemap attr data list objects contain data fee student pay balance payment mode etc computed property lets say updateoptions returns list objects id text suitable populate payment mode whenever user something updateoptions called user actions program choose selected option set feemap structure feemap hit function update optionselected seeing anything change watch triggered even change feemap see vue console lot struggle tried settimeout loop magically started working presume ms delay data sync afraid settimeout right way used nexttick didnt work please suggest better solution thanks", "num": "7120", "d": "11/2017"}, {"title": "vif amp amp \u4e0d\u80fd\u6b63\u5e38\u89e3\u6790", "body": "\u6211\u901a\u8fc7props\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u4e86statuspid\u548cstatusid \u8fd9\u4e24\u4e2a\u5b57\u6bb5\u7528\u6765\u5224\u65ad\u8868\u5355\u7684\u67d0\u4e2a\u8f93\u5165\u6846\u5728\u67d0\u79cd\u6761\u4ef6\u4e0b\u662f\u5426\u663e\u793a \u4f46\u662fvif\u4e2d\u4f7f\u7528 amp amp \u4f46\u662f\u6211\u5220\u9664 amp amp \u548c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6761\u4ef6\u90fd\u4f1a\u663e\u793a \u540c\u65f6\u6211\u5c06 amp amp \u6362\u6210\u5374\u4e5f\u80fd\u6b63\u5e38\u89e3\u6790 \u8fd9\u662f\u4e3a\u4ec0\u4e48 \u5b9e\u5728\u627e\u4e0d\u51fa\u89e3\u51b3\u529e\u6cd5 statuspid\u548cstatusid\u4e24\u4e2a\u5b57\u6bb5\u662f\u6211\u7684\u6811\u7ed3\u6784\u7684id\u548c\u7236id \u901a\u8fc7\u5355\u51fb\u6765\u4f20\u9012\u67d0\u4e2a\u8868\u5355\u8f93\u5165\u6846\u662f\u5426\u663e\u793a \u5e76\u4e14\u6211\u6ca1\u4f7f\u7528webpack", "num": "7119", "d": "11/2017"}, {"title": "vue\u524d\u7aef\u6027\u80fd\u95ee\u9898\u6392\u67e5", "body": "documentgetelementsbytagname length \u7528\u7684axios error timeout exceeded createerror xmlhttprequesthandletimeout", "num": "7118", "d": "11/2017"}, {"title": "\u7248\u672c\u66f4\u65b0\u4ee5\u540e\u8fd0\u884cnpm run dev\u540e\u5185\u7f51\u673a\u5668\u65e0\u6cd5\u8bbf\u95ee", "body": "version reproduction link steps reproduce \u65e7\u7248\u672c \u65f6\u5019\u7528webpack\u5efa\u7acb\u7684\u9879\u76ee\u8fd0\u884cnpm run dev \u5185\u7f51\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee \u4f46\u662f\u5347\u7ea7\u6700\u65b0\u7248\u4ee5\u540e\u7528webpack\u65b0\u521b\u5efa\u7684\u9879\u76ee\u90fd\u65e0\u6cd5\u7528\u5185\u7f51ip\u8bbf\u95ee expected \u65b0\u9879\u76ee\u80fd\u901a\u8fc7\u5185\u7f51\u673a\u5668\u8bbf\u95ee\u8c03\u8bd5 actually happening \u65e7\u9879\u76ee\u53ef\u4ee5\u6b63\u5e38\u5185\u7f51\u8c03\u8bd5 \u4f46\u662f\u65b0\u9879\u76ee\u65e0\u6cd5\u5185\u7f51\u8bbf\u95ee", "num": "7117", "d": "11/2017"}, {"title": "using native bind function prevents isolating component methods test", "body": "description start saying love vue great job running headache use custom bind function component methods wondering much performance impact actually makes function question understand performance gain custom function valuable testing utility prevents could possibly steer right direction reach original methods without moving vue component would prevent getting typescript type information proposal simply use native method allows overriding value useful mock component instance testing edit disregard native bind allows overriding explicit binding using operator another explicit binding falsely believed", "num": "7116", "d": "11/2017"}, {"title": "", "body": "problem feature solve proposed api look like \u5728router\u914d\u7f6e\u7684\u5730\u65b9 \u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5\u5224\u65ad\u662f\u5426\u9700\u8981\u5378\u8f7d", "num": "7114", "d": "11/2017"}, {"title": "resolve unknown custom element", "body": "version reproduction link steps reproduce see readme duplicate steps convenience browse click example tab top page observe lack second tabset page observe console error open appvue editor remove three lines marked comments save file refresh example page browser observe presence expected tabset page put three lines back appvue refresh browser observe disappearance tabset expected js console errors warnings components seem correctly defined imported named referenced rendering components ie missing actually happening js console error component children absent see repro steps readme clue workaround might something usage child component twice page via different parent components", "num": "7112", "d": "11/2017"}, {"title": "high memory consumption release", "body": "version reproduction link steps reproduce switch home foo routes open windows task manager see memory consumption crome tab increase without ever decreasing expected allocate data items memory leaving route release memory return use allocation ram memory actually happening memory consumption increases developing application using electron application variable items populated records every time opens route jsfiddle exemple moment increases memory imagine due vue bind leaving route memory released return route increases even memory please help ps set variable within data declare thisitem directly created occur however need variable reactive", "num": "7111", "d": "11/2017"}, {"title": "vue use messagechannel nexttick function lead audio play mobile browsers", "body": "version reproduction link steps reproduce click click button audio play expected play well modern browsers support audio actually happening pc browsers play well however mobile browsers ios wechat play vue function use like click callback audio play function play well browsers howerver vue used dom action click callback audio play function tick use fine actually firstly used priority lead audio play mobile browsers mentioned", "num": "7109", "d": "11/2017"}, {"title": "seo vue", "body": "build cms vue cli seo", "num": "7108", "d": "11/2017"}, {"title": "unpredictable async components behaviour", "body": "version reproduction link steps reproduce please run codepen provided check console output got resolved talker got notifed back resolution uses settimeout callback resolver uses bus callback resolver uses bus callback resolver wrapped promise case among listeners comment case among listeners comment expected case talker notified back resolution case talker notified back resolution independently asynchronously resolution actually happening case talker never notified back resolution case talker notified back resolution simultaneously synchronously resolution ie resolution delayed listener timed normal combinations resolves asynchronously resolves kinda surprising since alone never resolves see case", "num": "7107", "d": "11/2017"}, {"title": "regression html tag rendered certain circumstances", "body": "version reproduction link steps reproduce open link expected generated markup actually happening generated markup fails since works fine tried make minimal case without dependencies could nt get work maybe somehow helpful maybe original issue suspecting bug caused following commit component fails commenting following method fixes rendering", "num": "7106", "d": "11/2017"}, {"title": "keepalive include property resulting prop data pass component", "body": "version reproduction link steps reproduce click first second alernatively multi times change select japanese first second alernatively multi times change select english expected routerview render first second remains first second actually happening keepalive remain initail include binding data value want keepalive dynamic change include property binding prop data tranfer component properly", "num": "7105", "d": "11/2017"}, {"title": "create data dynamic", "body": "data function return products problem wan na create dynamic type variables pj set values please give advice", "num": "7102", "d": "11/2017"}, {"title": "memory leak changing routes", "body": "version reproduction link steps reproduce fighting memory leaks last week big project many pages complex nested navigation use vuex tons mixins fair say app complex started noticing performance would degrade usage made sure nt anything stupid like storing reference vuex store disposing listeners started long week hunting memory leak long process nt finding anything solid report found one specific plugin using causing leak plugin since nt able reproduce clean project stopped using unfortunately plugin accounted small percentage leaks hunt continued found modal top level app component would cause leak moved modal app component routes fine nt able reproduce clean project point tired removed modal called week fixed leaks everything fine new leak appeared fortunately able use git pinpoint commit caused leak leak happens use vdropdown bootstrapvue looked source code everything seems fine side decided open issue instead thankfully time able create minimalistic reproduction example use link go back forth two pages check memory usage instances vuecomponent never garbage collected using chrome dev tools see navigating new route vuecomponents created none removed navigate back first page compare snapshots see vuecomponents created none deleted finally clicking links lot see vuecomponents created none deleted also see memory usage creeping hope guys idea going tracking memory leaks time consuming expected vuecomponent instances previous page garbage collected actually happening unused vuecomponent instances kept memory", "num": "7101", "d": "11/2017"}, {"title": "feature request component transformed props", "body": "hello happens many times recompute component prop value order use would really useful future vue feature added html export default props n type string computed ncomputed return dosomethingfancy parseint thisn transformed props case component internally refers get computed n html export default props n type string transform v return dosomethingfancy parseint v", "num": "7100", "d": "11/2017"}, {"title": "backers page load properly", "body": "version reproduction link steps reproduce open page expected see backers images actually happening possible see images happening repository github", "num": "7099", "d": "11/2017"}, {"title": "object destructuring within vfor gives invalid vfor alias error", "body": "version reproduction link steps reproduce check console logs expected expect vue compile template without error actually happening get error", "num": "7096", "d": "11/2017"}, {"title": "optimize performance adding components using vfor", "body": "invalid please remove", "num": "7095", "d": "11/2017"}, {"title": "windowprint content changed", "body": "version reproduction link steps reproduce click print link expected want print print actually happening need click second time change content", "num": "7094", "d": "11/2017"}, {"title": "computed property array difficult trigger", "body": "version reproduction link steps reproduce difficulties app getting computed notice array altered deeply array modified via part gets noticed changes data push get detected get detected unless played around different ways tell vue look computed find condition solves scenario nt understand works b straight forward basically iterate array computed function touch every getter seems satisfy dep tracking logic notice however example array starts elements looping zero element array yet works remove line change detection longer works knows rest forloop maybe yanks runtime would like api add something computed dep tracker example add new element array could call something like javascript var track track igotevaluated calls vuecomponent comp computed igotevaluated function var lt thisarrlength thisarr val return track template computed igotevaluated data function return arr methods add function thisarrpush val edit new vue el app expected straight forward way determine change deep array trigger computed actually happening dealing deep array object clear change detection take place", "num": "7093", "d": "11/2017"}, {"title": "global component cover local components amp first successful local component", "body": "version reproduction link steps reproduce html global component local components javascript vuecomponent globalcom template global var app new vue el app components template template need run page expected global components backup local components covered refer definition global component actually happening work exchange definition global amp local order first local components effectively javascript vuejs function mergeoptions parent child vm line number key child suggestion var val parent key objtype val amp amp val instanceof object amp amp val instanceof function objtype var parentval val depthclone child key parentval continue", "num": "7092", "d": "11/2017"}, {"title": "dev see page", "body": "problem feature solve build see page want test page dev proposed api look like", "num": "7091", "d": "11/2017"}, {"title": "dev see page build see page", "body": "want test page dev", "num": "7090", "d": "11/2017"}, {"title": "allow root element template", "body": "problem feature solve right root element per template know design find wrapping everything around lot time big deal live problem either bootstrap requires specific hierarchy dealing tables also require specific hierarchy wrapping everything div option proposed api look like couple things figure mainly element properties provided custom element attached think two things done find first child stick everything provide custom attribute indicate element attached", "num": "7088", "d": "11/2017"}, {"title": "object properties undefined prototype vueset reactive", "body": "version reproduction link steps reproduce make instance object implicitely undefined property prototype const someobj function someobjprototypesomeprop undefined const myobj new someobj note someprop myobj true objecthasownproperty myobj someprop false use object instace dataprop value vue eg data function return value myobj try assign someprop value make reactive set thisvalue someprop somevalue result property value set myobjsomeprop somevalue reactive expected property expected become reactive actually happening property reactive check srccoreobserverindexjs function set looks like key target amp amp truthy properties declared undefined object prototype even set explicitely object therefore definereactive call never reached described object structure prototypeprop undefined arbitrary swaggerio js generator actually creates object models order represent missing possible properties use missing object properties data binding vue objects extended setting missing properties value explicitely e g undefined oder empty string etc", "num": "7087", "d": "11/2017"}, {"title": "calling destroy click binding events still exist", "body": "version reproduction link steps reproduce html result change destroy javascript var app new vue el app data message hello world result methods change function thisresult thismessage new date tolocalestring throw destroy function destroy click button destroy click button change expected hope calling destroy remove dom event object prevent invalid ajax requests thanks much actually happening console output information uncaught asynchronous validation event form", "num": "7086", "d": "11/2017"}, {"title": "checking vmodel vbind value used element conflicts customizing component vmodel", "body": "version reproduction link steps reproduce text install dependencies npm install serve hot reload npm run dev expected compiled successfully actually happening got error new improvements warn vmodel vbind value used element conflicts customizing component vmodel downgrade vue vuetemplatecompiler exactly reproduction compiled successfully btw production vuejs works fine codepen", "num": "7084", "d": "11/2017"}, {"title": "binding exist method error warn", "body": "version reproduction link steps reproduce element binding exist method expected show actually happening show warn means ignored actually break vue affect dom", "num": "7083", "d": "11/2017"}, {"title": "quadratic memory usage", "body": "version reproduction link steps reproduce open browser devtools launch reproduction different max variable note memory usage growth quadratically max variable number computed properties implied dependencies program proportional max variable expected expected linear ie proportional growth memory consumption growth max variable actually happening observables computed values subscribers total number subscriptions growth quadratically quite hard write code would really affect users bug anyway feels like flaw reactive system design", "num": "7081", "d": "11/2017"}, {"title": "current component use component css", "body": "version reproduction link steps reproduce declare css testvue use style appvue go index page page nt load testvue text color black red expected expected broswer load component css style tag actually happening sorry actually nt know problem admins go page contains component adminvue contain component uservue let adminvue get css uservue style tag recently update web app upgrading broswer always load css style tag components although component loaded current page sry clear problem vue may webpack normal action project created vuecli", "num": "7079", "d": "11/2017"}, {"title": "vue \u7ed3\u5408 bootstraptable \u4f7f\u7528\u4e86jquery \u4e0d\u80fd\u50cfangular\u90a3\u6837\u4f7f\u7528scopeapply \u544a\u77e5jquery dom\u53d1\u751f\u4e86\u53d8\u5316 \u4ece\u800c\u8bd5jquery\u53ef\u4ee5\u91cd\u65b0\u6e32\u67d3dom", "body": "problem feature solve \u89e3\u51b3\u4e86\u4f7f\u7528jquery\u65f6 \u4e0d\u80fd\u52a8\u6001\u7684\u66f4\u65b0dom\u7684\u95ee\u9898 \u4ee3\u7801 storestatesocketpricearray function val valforeach item index gt set thisdata index item table bootstraptable columns thiscolumns data thisdata proposed api look like \u671f\u671b\u80fd\u52a0\u4e00\u4e2a\u60f3angular\u90a3\u6837\u7684scopeapply", "num": "7077", "d": "11/2017"}, {"title": "property method statictrees defined instance referenced render", "body": "version reproduction link steps reproduce delete following code works fine problem expected report error actually happening report found", "num": "7075", "d": "11/2017"}, {"title": "vue", "body": "version reproduction link steps reproduce \u5728created\u56de\u8c03\u65b9\u6cd5\u91cc\u9762\u5199\u4e00\u4e2asettimeout new error \u5c31\u80fd\u6355\u83b7 expected actually happening \u4e0d\u80fd\u6355\u83b7error", "num": "7074", "d": "11/2017"}, {"title": "", "body": "problem feature solve proposed api look like vuedirective", "num": "7073", "d": "11/2017"}, {"title": "way evaluate expression", "body": "version reproduction link steps reproduce currently way execute expression usecase simple translation foobarhello would nice syntax tell interpolator evaluate like directives example ensure executed within bind function update however verbose needs single quotes within double quotes looks pretty messy templates solutions expected execute specialized interpolations actually happening execute every update", "num": "7072", "d": "11/2017"}, {"title": "show warning emitting event invalid name", "body": "problem feature solve recently tried namespace events poorly admittedly using dots emit events course event names invalid used event listeners since dots used indicate modifiers would nice method would print warning console using invalid event names proposed api look like api changes needed", "num": "7071", "d": "11/2017"}, {"title": "warn data property name starts", "body": "version reproduction link steps reproduce expected property name starts identifier valid invalid whether defined datacomputedmethods option think options behaviors consistent actually happening valid define xxx property computedmethods option fall define xxx data option", "num": "7070", "d": "11/2017"}, {"title": "", "body": "hello possible add dynamic variable style mean something like", "num": "7068", "d": "11/2017"}, {"title": "scoped attribute make modify css difficulty unreasonable", "body": "version reproduction link steps reproduce avue bvue set scoped arrtibute style tag import b want modify b style found work expected hope modify style b even b scoped attribute maybe adds attributeselector start every css selector sentence solve problem actually happening vue add attributeselector end every css selector sentence work", "num": "7067", "d": "11/2017"}, {"title": "vue component implement interface", "body": "version reproduction link steps reproduce multi components want implement interface previous version implement way import vue componentoptions vue interface test extends vue title string export default vueextend name data return title componentoptions export default vueextend name data return title componentoptions code throw exception expected error actually happening error occur", "num": "7066", "d": "11/2017"}, {"title": "ca nt use multiple mustaches different paragraphs template", "body": "version reproduction link steps reproduce run code short straightforward input required expected code every tag showed actually happening template nt work multiple tags", "num": "7065", "d": "11/2017"}, {"title": "clear slot content vue", "body": "version reproduction link steps reproduce create component slot pass slot template tag empty content expected empty template slot clear content component corresponding slot actually happening clear content however vue right thing", "num": "7064", "d": "11/2017"}, {"title": "ssr mismatched styles updated dom unless element ref", "body": "version reproduction link steps reproduce load codepen obviously actual ssr app emulating one thing happens actual ssr sets padding based window width expected inline style updated page hydrates see codepen actually happening style updates element see", "num": "7063", "d": "11/2017"}, {"title": "\u5173\u4e8e vif vshow \u7684\u4e0d\u8db3", "body": "problem feature solve \u5982\u679c\u7528 \u5982\u679c\u7528 proposed api look like \u5e0c\u671b\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u4f3c vshow \u6216 vif \u7684\u6307\u4ee4 \u5728\u6ca1\u6709 \u663e\u793a\u8fc7 \u65f6\u4e0d\u6e32\u67d3\u7ec4\u4ef6 \u5728 \u663e\u793a\u8fc7\u540e \u518d\u6b21\u5207\u6362 \u663e\u793a\u6216\u9690\u85cf \u4e0d\u91cd\u590d\u5b89\u88c5\u7ec4\u4ef6", "num": "7062", "d": "11/2017"}, {"title": "component patching svg elements ie updatecomponent triggered", "body": "version reproduction link steps reproduce open attached jsfiddle ie open developer tools start new profiling session hover text hover pointer times stop profiling session inspect results find overhead expected vuejs update class parent element operation svg elements inside component actually happening vuejs calling patchvnode every svg element inside component ie happening ie fairly noticeable important number svg element page", "num": "7061", "d": "11/2017"}, {"title": "allow support nonreactive instance variables vue dts", "body": "version reproduction link steps reproduce hover expected hover display property logit debugdebugger common understanding hover ts inference effect actually happening displays", "num": "7060", "d": "11/2017"}, {"title": "chrome autofill trigger change", "body": "version reproduction link steps reproduce open form textfield auto complete chrome auto fill check attached vmodel see nt update expected update vmodel ever chrome autofilled actually happening update happening happens chrome ios safari works fine also got reports issue chrome android nt confirm seems still issue saw github issues reported thing months ago closed", "num": "7058", "d": "11/2017"}, {"title": "watcher fires watched data changed", "body": "version reproduction link steps reproduce watcher watched data changed inside want get value another expected hoping watcher would fire another actually happening fire watcher kicks watcher run synchronously watcher fire", "num": "7057", "d": "11/2017"}, {"title": "dataon amp listeners functional components consistent", "body": "version reproduction link steps reproduce check codepen expected doc said object containing parentregistered event listeners alias accurately thing actually happening case", "num": "7055", "d": "11/2017"}, {"title": "vuetemplatecompiler \u652f\u6301 deindent \u5f00\u5173", "body": "problem feature solve proposed api look like vuetemplatecompilerparsecomponent vue deindent false", "num": "7054", "d": "11/2017"}, {"title": "using dynamic child components methods via ref", "body": "version reproduction link steps reproduce create dynamic components template add function dynamic child component example parent component use function via record iid refs hello idk displays array sometimes expected see console actually happening uncaught typeerror refs hello function tied usual components everything works fine thx attention", "num": "7052", "d": "11/2017"}, {"title": "parent von working nt child event triggered", "body": "version reproduction link steps reproduce please run codepen provided observe console output expected buzznoted invoked twice per run first von directive second manually installed listener actually happening buzznoted invoked per run von directive listener nt work", "num": "7051", "d": "11/2017"}, {"title": "svg element ca nt dynamic animate", "body": "version reproduction link steps reproduce enter page animate triggered click svg change value isopen switch two however nothing happend svg keeps state changed page entering expected svg transform data isopen change actually happening transform entering page got wrong way using difference use svg element", "num": "7050", "d": "11/2017"}, {"title": "vmodel \u80fd\u5426\u652f\u6301object \u4f20\u5165", "body": "problem feature solve vue vmodel best wishes proposed api look like \u65e0\u53d8\u5316", "num": "7049", "d": "11/2017"}, {"title": "templatecompiler using vbind value vmodel input generates code invalid ie", "body": "version reproduction link alternative reproduction jsfiddle steps reproduce paste following piece html textarea linked documentation chapter inspect code created render function especially options expected code run browsers throw error warning actually happening throws error duplicate properties allowed strict mode realize using vbind value vmodel input recommended even sensible nt throw error warning done modern browsers nt create problems expression easily overlooked added accidentally uglify also nt help nt remove first occurrence would otherwise overwritten second modern browsers would sensible solution sure could adjust codegen domprops check double occurence prop elements type input drop last occurrence possible problem performance could log warning console deal vueloader could throw error forcing user choose two breaking change could improve awareness adding warning docs rule eslintpluginvue", "num": "7048", "d": "11/2017"}, {"title": "document explain several parameters watch", "body": "problem feature solve watch document mention options deep immediate review source code four options deep user lazy sync proposed api look like document must talk", "num": "7047", "d": "11/2017"}, {"title": "html\u4e2d\u7ec4\u4ef6\u5355\u4fbf\u7b7e\u5199\u6cd5\u548c\u591a\u6807\u7b7e\u5199\u6cd5 \u9020\u6210\u7ec4\u4ef6\u4e0d\u6e32\u67d3", "body": "document vuecomponent headerbar data function return homehref logo title vue\u5b98\u7f51\u56fe\u6807 hottel \u5b9e\u4f8b template hottel vuecomponent navbar data function var n windownavactive n windownavactive return navlist href navactive n template mounted function anavmenu eq thisnavactive addclass active new vue el content headerbar\u5c31\u6ca1\u6709\u95ee\u9898\u662f\u4e0d\u652f\u6301\u7b2c\u4e00\u79cd\u5199\u6cd5\u5417", "num": "7045", "d": "11/2017"}, {"title": "importing module without build step", "body": "problem feature solve module support finally shipped chrome without flags many us may consider getting rid build step development stage vuejs almost shipped bundle among options unfortunately module nt work box try use avoiding webpack build step present try manually add something like top module seems like everything works expected proposed api look like setup relevant development maybe consider adding one bundle like", "num": "7044", "d": "11/2017"}, {"title": "mixin data merge problem", "body": "version reproduction link steps reproduce mixin data option mixin expected nothing wrong actually happening read property undefind guess happens mixin data option merging params mergedata function undefined throw error read property undefined", "num": "7043", "d": "11/2017"}, {"title": "vmodel combined von listeners", "body": "version reproduction link steps reproduce see minimal reproduction expected previous could used combination specific event handlers create components could transparently pass events element inside worked specific listeners eg called generic listeners actually happening higher priority listeners triggered first listener sets value set correct value incorrect value breaking breaking change made solve another issue probably ideal revert change actually even previous behavior slightly undesirable emitted event twice fix issues would actually expect specific event binding eg replace listener name object syntax specific listener would take responsibility emitting event correct time allows user full explicit control order local handlers handlers parent called sound others", "num": "7042", "d": "11/2017"}, {"title": "conflict component", "body": "version reproduction link steps reproduce look rendered square expected blue square actually happening red square remove wrapper change vue version bug remains problem disappears thanks", "num": "7041", "d": "11/2017"}, {"title": "method filtering array objects throws warning", "body": "version reproduction link steps reproduce see code example everything seems ok run exact code local machine get warning expected see function getclan returns single element gets rendered clan column table reaches end array vue returns warning actually happening filter function inside getclan seems try loop last element array get also tried view even know nt done view testing result works reaches las element array throws warning", "num": "7040", "d": "11/2017"}, {"title": "tom", "body": "", "num": "7039", "d": "11/2017"}, {"title": "would efficient use requestanimationframe first nexttick", "body": "problem feature solve could copy think vdom read artile recently relates ric amp raf amp vdom links let leave ric firstly think would great efficiency improvement comparing dom raf phase updating state phases proposed api look like want discuss issue", "num": "7038", "d": "11/2017"}, {"title": "get vue directives work inserted html code piece", "body": "problem feature solve vue file function described methods function called mounted function prepares html code inserts main template vue file problem vue directives components inserted piece code work look source code browser usual tags attributes html code vue compilation work", "num": "7037", "d": "11/2017"}, {"title": "vue dynamic component transition issue", "body": "version reproduction link steps reproduce click show modal button expected page loaded first time hit show modal button overlay component fade transition actually happening overlay component enters without transition hit hide modal show modal initial appearance transition works fine fixed changing modalvisible state prop inside settimeout obvious hack", "num": "7036", "d": "11/2017"}, {"title": "quick ask", "body": "sry gon na happen add global mixin data gt pagenumber", "num": "7035", "d": "11/2017"}, {"title": "vmodel computed", "body": "version reproduction link steps reproduce trying change input value prop data question using computed property vmodel input something wan na get something change event always get thing change computed property listening data nt use need set watch mounted make value update prop data good solution expected change give data input actually happening change always give default data", "num": "7034", "d": "11/2017"}, {"title": "add lifecycle hooks vshow change", "body": "problem feature solve easy way create callback condition changes component shownhidden using watchers sufficient single property cumbersome condition like propose add new pair lifecycle hooks events proposed api look like", "num": "7033", "d": "11/2017"}, {"title": "mixin methods called compontent ones", "body": "version reproduction link steps reproduce create mixin method named example create component method named example well created function call mixin method inside function include mixin component expected mixin method called component method actually happening component method called", "num": "7032", "d": "11/2017"}, {"title": "img src object object", "body": "import imgup commonsvgthumbupsvg import imgdown commonsvgthumbdownsvg data return imgup imgdown img src object object", "num": "7031", "d": "11/2017"}, {"title": "img src object object", "body": "import imgup commonsvgthumbupsvg import imgdown commonsvgthumbdownsvg data return imgup imgdown work", "num": "7030", "d": "11/2017"}, {"title": "keyupmetaenter work", "body": "version reproduction link steps reproduce \u7528 expected echo todo actually happening nothing happen", "num": "7029", "d": "11/2017"}, {"title": "javascript click operation input type file called component mounted work expected chrome", "body": "version reproduction link steps reproduce instructions provided readmemd linked github project project contains codebases demonstrating issue last one works use vuejs demonstrate expected behaviour vuejswebpack requires installation nodejs initialize project start local dev server access local server chrome browser click add file button vuejsnowebpack open indexhtml chrome browser click add file button expected new list element added displayed component file picker opens actually happening new list element added displayed component sign file picker interaction happened element hidden component observed browser behaviour looks call function component ignored following tests seems however call ignored issue complex stumbled upon issue first vuejs development used java portlet rolled production according user reported happened using firefox worked well chrome unable reproduce issue way described actually code work firefox versions chromechromium tested see readme linked github project list tested browsers spent last two days trying fix issue trying single actual root cause note frontend development expert maybe anomaly code nt noticed debugging chrome checked function defined called even managed see click event captured processed jquery present reproduction code provided use portal first suspected rather old jquery version vuejs working well together seem issue like call ignored browser point still usure whether actual bug vuejs fault lies chrome code", "num": "7028", "d": "11/2017"}, {"title": "eventtarget null chrome img", "body": "version reproduction link steps reproduce chrome sometimes safari open link jsbin click run js see console first prints reference null property expected firefox edge never actually happening event stored variable next tick sure bug vuejs chrome thought eyes matter help clarify first saw inside nuxtjs application easy reproduce vuejs guess either vue core chrome blinkwebkit done load handler never happen specific element size file load", "num": "7027", "d": "11/2017"}, {"title": "conditional class fails class name contain dashes", "body": "version reproduction link steps reproduce apply conditional class using class name contains dash case expected would expect normal behaviour rendering conditional class actually happening app broke following error message invalid expression unexpected token raw expression class navbarshrink scrolled changing class name everything works usual behaviour could issue using certain bootstrap bulma css classes nt complete control", "num": "7022", "d": "11/2017"}, {"title": "class methods lost object passed scoped slot", "body": "version reproduction link steps reproduce uncomment price vat expected second list also display price vat actually happening error console", "num": "7021", "d": "11/2017"}, {"title": "clickmiddleright working", "body": "version reproduction link steps reproduce click using middel button text fiddle clickmiddle expected call function used clickmiddle actually happening nothing according docs nt work", "num": "7020", "d": "11/2017"}, {"title": "svg children component template parsed correctly", "body": "version reproduction link steps reproduce create new component use element component expected svg rendered way rendered component actually happening svg rendered correctly example size circle seems disconnected viewbox svg element codepen also managed reproduce issue generating svg javascript assume issue vue templates likely parsed similar fashion", "num": "7019", "d": "11/2017"}, {"title": "mission type vueutil typescript", "body": "version reproduction link steps reproduce webpackdevserver using tsloader expected warnning actually happening util exists vue", "num": "7018", "d": "11/2017"}, {"title": "injectprovide reactive", "body": "version reproduction link steps reproduce parent component js provide let reactive child component expected challenge property change parent thischallenge changes proxy actually happening changing link provided example reimplement really code use ideas", "num": "7017", "d": "11/2017"}, {"title": "work", "body": "vue use keepalive vuex storestateincludecache components error nt know wrong thanks", "num": "7016", "d": "11/2017"}, {"title": "watch\u63d0\u4f9b\u66f4\u9ad8\u7ea7\u7684\u8bed\u6cd5\u7cd6", "body": "problem feature solve proposed api look like \u80fd\u4e0d\u80fd\u5199\u5230\u4e00\u8d77\u554a \u7528\u9017\u53f7\u5206\u5272\u6307\u5411\u540c\u4e00\u4e2a\u5904\u7406\u51fd\u6570 \u9017\u53f7\u5462\u4f5c\u4e3akey\u662f\u80af\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u7684 \u521a\u597d\u62ff\u6765\u4f5c\u4e3a\u5206\u9694\u7b26 b handler function", "num": "7014", "d": "11/2017"}, {"title": "vfor need empty tag group element something like ngcontainer angular", "body": "problem feature solve sometimes nt really want html element example angular loop like nt want additional tag ul li ngcotainer solved problem solution vue booktitle bookauthor bookprice proposed api look like like angular solution", "num": "7013", "d": "11/2017"}, {"title": "vue\u4f7f\u7528iframe\u5d4c\u5165\u53e6\u5916\u4e00\u4e2avue\u9875\u9762 \u4e0d\u52a0\u8f7dbody head", "body": "version reproduction link steps reproduce \u6216\u8005\u76f4\u63a5\u5728dom\u4e0a\u4fee\u6539 iframe\u5185\u5bb9\u7a7a\u767d\u4e0d\u52a0\u8f7d expected \u5404\u4e2a\u6d4f\u89c8\u5668\u90fd\u6b63\u5e38 actually happening \u9664ie\u6d4f\u89c8\u5668\u7a7a\u767d\u5916 \u5176\u4ed6\u6b63\u5e38", "num": "7012", "d": "11/2017"}, {"title": "data clean push", "body": "trying add selected files mount table save confirmation list saved save button clicked data cleaned added list using vuejs laravel", "num": "7011", "d": "11/2017"}, {"title": "vue\u4f7f\u7528iframe\u5d4c\u5165\u53e6\u5916\u4e00\u4e2avue\u9875\u9762 \u4e0d\u52a0\u8f7dbody head", "body": "version reproduction link steps reproduce \u6216\u8005\u76f4\u63a5\u5728dom\u4e0a\u4fee\u6539 iframe\u5185\u5bb9\u7a7a\u767d\u4e0d\u52a0\u8f7d expected ie\u6b63\u5e38\u663e\u793a actually happening ie\u5185\u5bb9\u7a7a\u767d", "num": "7010", "d": "11/2017"}, {"title": "errorcaptured working properly functional child components", "body": "version reproduction link steps reproduce please open look output window everything fine output three components shown poperly remove comment throw new error render function run look console captured error expected still everything fine remove comment functional true run check console error captured longer compared expected errors triggered child components captureable parent error boundaries independent whether child components funtional actually happening errors triggered functional components captured parent error boundaries", "num": "7009", "d": "11/2017"}, {"title": "errorcaptured working properly functional child components", "body": "problem tested vuejs chrome windows error thrown inside functional component render function error catchable error boundary parent components using method errorcaptured example please open look output window everything fine output three components shown poperly remove comment throw new error render function run look console captured error expected still everything fine remove comment functional true run check console error captured longer compared seems bug thanks lot", "num": "7008", "d": "11/2017"}, {"title": "image extension sensitive upper case", "body": "version reproduction link please see error shot steps reproduce follow step use vuecli create default project change logopng extension upper case also change code appvue got error bowser expected error actually happening go error", "num": "7007", "d": "11/2017"}, {"title": "image extension sensitive upper case", "body": "follow step use vuecli create default project change logopng extension upper case also change code appvue got error bowser", "num": "7006", "d": "11/2017"}, {"title": "create package building custom renderers", "body": "problem feature solve author nativescriptvue set similar build setup vue order able import certain parts vue directly nativescriptvue main source issues aliases used across vue repository make sense btw solve issue would love official package creating registering custom renderers vue would enclose vue specific logic patching hydrating etc good example mind would react package would love get work done work core team make sure best possible quality proposed api look like js custom renderer example nativescriptvuejs import vuerenderer vuerenderer class creating native views nativescript import viewutils viewutilsjs export default new vuerenderer node operations createelement tagname createelementns namespace tagname createtextnode text createcomment text insertbefore parentnode newnode referencenode removechild node child appendchild node child parentnode node nextsibling node tagname node settextcontent node text setattribute node attribute value additional methods need specified example createroot would get called create root element root vue instance js userland could import vue vue import nativescriptvue nativescriptvue vueuse nativescriptvue new vue render h gt h label text hello world", "num": "7005", "d": "11/2017"}, {"title": "update vuex store state component computed used state watch update", "body": "storejs import vue vue import vuex vuex import cookies jscookie vueuse vuex const store new vuexstore state menu name \u9996\u9875 icon home href name \u8001\u5e08\u7ba1\u7406 icon iospaper href teacher name \u5b66\u751f\u7ba1\u7406 icon iospeople href student name \u7edf\u8ba1\u5206\u6790 icon statsbars children name \u8d39\u7528\u7edf\u8ba1 icon href statisticsfee name \u8bbe\u7f6e icon geara href setting mutations changetags state path \u8bbe\u7f6e\u9009\u4e2d\u7684\u83dc\u5355\u9879 statemenuforeach gt mname pathname statemenuactivename mid todo set state return actions changetags context path contextcommit changetags path export default store mycomponentvue data return computed mapstate menuactivename watch menuactivename newval oldval todo watch listener consolelog newval newval thisactivename newval cookiesset activename newval newvaltostring indexof let openname parseint newvalsplit cookiesset menuopennames openname thisopennames openname nexttick gt refssidemenuupdateopened refssidemenuupdateactivename", "num": "7004", "d": "11/2017"}, {"title": "refs\u662f\u5426\u5e94\u8be5\u6539\u4e3a\u7edf\u4e00\u7684\u8fd4\u56de\u6570\u7ec4\u66f4\u4e3a\u5408\u9002", "body": "problem feature solve refs\u6709\u65f6\u5019\u8fd4\u56de\u5bf9\u8c61\u6709\u65f6\u5019\u8fd4\u56de\u6570\u7ec4 \u6211\u6d4b\u8bd5\u4e86\u4e00\u4e0b\u5e94\u8be5\u662fvfor\u4e2d\u7684\u5c31\u8fd4\u56de\u6570\u7ec4 \u5176\u4ed6\u7684\u8fd4\u56de\u5bf9\u8c61 \u662f\u5426\u5e94\u8be5\u7edf\u4e00\u6539\u4e3a\u8fd4\u56de\u6570\u7ec4\u66f4\u4e3a\u5408\u9002 proposed api look like", "num": "7003", "d": "11/2017"}, {"title": "able use different templates vue components", "body": "problem feature solve give us possibility load template depending anything proposed api look like something like", "num": "7001", "d": "11/2017"}, {"title": "better slot syntax vslot vfallback", "body": "problem feature solve want write component wraps nt wrap one piece html using another piece html depending condition supplied prop usage would look like would render either case true case false html content far know current syntax impossible children used fallback understand rationale correctly done consistent webcomponents slots unfortunately also inconsistent vue components whose children used content slots component source would look like proposed api look like proposed api current api two differences currently children used fallback component slots directive used similar provide fallback instead children component usage rendered html first begins second begins hello world second ends first ends example could also used situations element might fail way like", "num": "7000", "d": "11/2017"}, {"title": "typescript default export module using private name vueconstructor", "body": "version reproduction link steps reproduce export object contain types set expected able build without error able export pluginlibrary typescript declaration actually happening happened built developing vue component typescript also need typescript generate declaration typescript developer also javascript vetur face error thanks bbuchanan cause", "num": "6999", "d": "11/2017"}, {"title": "ssr showing warning unknown tag", "body": "version reproduction link steps reproduce run jsfiddle note warning message printed console run code ssr js const vue require vue const app new vue template const renderer require vueserverrenderer createrenderer rendererrendertostring app err html gt err throw err consolelog html like expected ssr rendering prints warning similar clientside rendering emits actually happening ssr simply renders invalid html html without warnings inconsistency makes hard refactor big nuxtjs apps missingunregistered components get silently ignored", "num": "6998", "d": "11/2017"}, {"title": "conditionally changing order slots works incorrectly envproduction mode vue", "body": "version reproduction link steps reproduce opening codepen please click toggle button expected slots show numbers inverse clicking toggle button order changed vif condition actually happening slots switch order first slot seems switch second slot seems stay place instead happens tried slots results unpredictable changing order slots features change location small big screens sometimes structure page changes much change order slots manage noticed bug set env production works fine development mode", "num": "6997", "d": "11/2017"}, {"title": "passing component grandchildren nested named slot resolve default slot", "body": "version reproduction link steps reproduce use case default layout toolbar main content wrapper pages needs nt layouts may different levels created component called base layouts use want able replace default toolbar needed put default toolbar fallback content code snippet make kind components want able replace default toolbar need using default toolbar pass things slot example layout components html default content layout see pass components grandchild slots used pattern reason components passed using pattern passed default slot one see examples reproduction expected expect nothing passed named slot fallback content rendered slots actually happening example replaced rendered default slot example passed rendered expected behavior way make kind reusable layouts default parts replaceable using default parts able pass components default parts slots", "num": "6996", "d": "11/2017"}, {"title": "\u4f7f\u7528this routerpush path \u8df3\u8f6c\u9875\u9762\u51fa\u73b0\u95ee\u9898", "body": "routerpush path", "num": "6994", "d": "11/2017"}, {"title": "practice together data beforecreate define property start", "body": "problem feature solve property start proxied vue instance way known properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty really need define property start register vm instance make also reactive like vuex vue encourage method correct whether always use way future proposed api look like pluginjs component vue mydata export default global js windowstorage test setinterval gt storagetest datenow", "num": "6993", "d": "11/2017"}, {"title": "failed mount component template render function defined circular references components", "body": "hi encountered issue circular references components tried way team offered docs parent component uses beforecreate lifecycle hook register child component still error could one offers help thank much", "num": "6991", "d": "11/2017"}, {"title": "electron problem main process variable vuejs watcher", "body": "version reproduction link steps reproduce link watch diff condition need object main process code indexjs indexhtml expected variable must refresh page actually happening variable refresh page think electron set already methods object vuejs overload modify electron update value main process render process", "num": "6990", "d": "11/2017"}, {"title": "execute list move transition leave transition hook callback called", "body": "problem feature solve moment possible execute list move transition vmove leaving transition css possible delay transition javascript hook vue watch callback proposed api look like solution could add parameter leave hook callback ask vue hide element play list move transition", "num": "6989", "d": "11/2017"}, {"title": "nested tag nt support vtext", "body": "version reproduction link steps reproduce create template certain condition directive must emit text therefore developer must use rather similar nested template tag work example vue message expected nested emit text variable actually happening nested emit anything interestingly actually works ssr immediately crashes clientside vue inits", "num": "6988", "d": "11/2017"}, {"title": "vmodel select text area issue vueserverrender", "body": "version reproduction link steps reproduce ssr select fields rendered selected attribute selected option appears selected page load happens textarea field first appears empty page loads shows content vmodel expected textarea select must render values ssr actually happening fields render values ssr check issue", "num": "6986", "d": "11/2017"}, {"title": "regression bug", "body": "version reproduction link working jsfiddle broken jsfiddle steps reproduce first jsfiddle check uncheck box without problem vue version second jsfiddle exactly one vue checkbox checked anymore expected checkable checkbox actually happening checkbox stays unchecked think bug linked syntax nt know investigate code may seem dirty using onchange attribute example small portion app bind checkbox value vue", "num": "6984", "d": "11/2017"}, {"title": "destroy hook called transition finishes", "body": "version reproduction link steps reproduce click toggle button notice destroyed hook transitioning component executed transition complete expected destroyed hook executed transition complete actually happening destroyed hook executed transition complete", "num": "6983", "d": "11/2017"}, {"title": "expose api adding custom modifier", "body": "problem feature solve would much helpful expose api adding custom modifiers eg actions must confirmed real work remove function removeitem showconfirmdialog realremoveitem accept function remove button elements track log rate would comfortable log js tweat tweat function tweat position const logs position logs dorealteataction tweat tweat global log function log modifer function log event const logs eventtargetelementdataset logs proposed api look like add chart remove vueconfigcustomemodiferlog function vueconfigcustomemodiferconfirm function", "num": "6982", "d": "11/2017"}, {"body": "currently vue support reactivity supported upcoming version targets modern browsers", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hey please stop spamming new issues nt help us everything explained", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "node npm \u90fd\u662f\u6700\u65b0\u7684", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "funny thing warning technically incorrect symbol primitive type allow symbols keys people would try use done inside computed property would change every time array changes symbol always returns new symbol think would worthy also add docs people correctly use symbols people still use plain string numbers id", "d": "11/2017"}, {"body": "use however considered private api use risk recommend using method purpose", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "razor syntax character meaning actually vue related bug guess may need use directly get option vue compiler configure character shortland uses", "d": "11/2017"}, {"body": "yes using von alternative hope plugin something supports vuejs razor page", "d": "11/2017"}, {"body": "razor cshtml files must escape another like plugin would done razor files get compiled long vue gets hold", "d": "11/2017"}, {"body": "closing nt solved vue side", "d": "11/2017"}, {"body": "sirlancelot thanks tip surely use alternative posva try drop feature enhancement aspnet core section", "d": "11/2017"}, {"body": "vueruntimejs", "d": "11/2017"}, {"body": "fnlctrl webpack vueloader \u4e0d\u5e26\u6a21\u677f\u7f16\u8bd1\u5668\u7684vue vueruntimejs \u9884\u7f16\u8bd1\u7684\u6a21\u677f", "d": "11/2017"}, {"body": "wed nov notifications githubcom wrote fnlctrl webpack vueloader \u4e0d\u5e26\u6a21\u677f\u7f16\u8bd1\u5668\u7684vue vueruntimejs \u9884\u7f16\u8bd1\u7684\u6a21\u677f import vue nodemodulesvuedistvueruntimejs receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "fnlctrl webpack vueloader \u5df2\u7ecf\u914d\u7f6e\u597d webpackconfigjs \u6709\u4e00\u4e2a\u5355\u72ec\u7684 componentvue \u6587\u4ef6 indexhtml \u91cc\u5f15\u5165\u7f16\u8bd1\u540e\u7684 appjs \u6587\u4ef6 html appjs \u7f16\u8bd1\u524d\u7684 js", "d": "11/2017"}, {"body": "fnlctrl appjs", "d": "11/2017"}, {"body": "wed nov notifications githubcom wrote fnlctrl appjs new vue el mainwrapper compolents comp receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "fnlctrl work", "d": "11/2017"}, {"body": "handler simply registered native dom event listener element create dispatch dom event using native apis", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "reproduction", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "question need specific make qualify feature request also belongs vuex repo core", "d": "11/2017"}, {"body": "pass error done callback completely unrelated vue edit bad sorry tried run repro missing dependencies could nt actually see nt working", "d": "11/2017"}, {"body": "posva somewhat related deserves explanation returns promise callback passed promise comes scheduler queueing possible instead error captured vue sent set simply rethrows error correct way deal", "d": "11/2017"}, {"body": "sweet idea idea returns promise arguments tried argument gone end perhaps could use documentation maybe happy send pr edit clarify stuff said message documented api docs nt need improving nt know context testing feel could use improvement", "d": "11/2017"}, {"body": "yes please something states order return promise call without arguments could nice imo", "d": "11/2017"}, {"body": "actually already vue api docs feel could use improvement pretty easy miss get promise nt provide arguments unless looking send prs projects soonish", "d": "11/2017"}, {"body": "pr vuejsorg pr vuetestutils", "d": "11/2017"}, {"body": "fyi parameters", "d": "11/2017"}, {"body": "also need prefetch files related current user langage user langage stored serverside application also expose application currently serverside rendering least context", "d": "11/2017"}, {"body": "unfortunately ie bug ie nt fire input event thought already closed issue could nt find must imagination", "d": "11/2017"}, {"body": "found old bug tracker last comment ms fix", "d": "11/2017"}, {"body": "note assume want preserve state determine whether input field dirty patch fixes initial rendering subsequent change dynamic binding used still trigger events ie happens tags well consider wontfix involves significantly complex workarounds marginal benefits", "d": "11/2017"}, {"body": "thanks", "d": "11/2017"}, {"body": "happens vue reuses element optimize rendering control behaviour keys docs demo", "d": "11/2017"}, {"body": "number becoming expected happens js numbers need zeros want string number happens user changes focus imo ux want localization handled browser vue scope browser makes syntaxes work differently different computers custom component behaves told behave modifies value adapt either number part may confusing change null valid backspace changes back valid number triggers render changes input well cc linusborg part thought might improve", "d": "11/2017"}, {"body": "thanks feedback included plain fiddle check behaviour cases see clear trailing zeroes actually also nt see problem stripping trailing zeroes blur think clear changing cases fiddle original post make cast values numbernull numberstring made proposal clear implement understood linus said may good vue provide feature please check original post hi found first comment info", "d": "11/2017"}, {"body": "nt see done without separate fields string keep fine numeric app possible somehow prevent rerender input event think could solve issues", "d": "11/2017"}, {"body": "think clear changing happens custom input explanation part may confusing change null valid backspace changes back valid number triggers render changes input well vmodelnumber cast values number empty string course free create custom component handles things differently using modifier", "d": "11/2017"}, {"body": "happens custom input see case fiddle fill input though malformed value course free create interesting vue team provide typestrict interface error prone errors easy leave exceptions misuse also check input empty enough also requires every place used", "d": "11/2017"}, {"body": "happen getting instructions typing backspace also requires val null amp amp val every place used either number null example null initial value giving vue job link value input state make number whenever possible modifier empty string actually useful allows know input contains valid number makes flexible use different scenarios", "d": "11/2017"}, {"body": "example checks repeated times empty string actually useful sure useful value empty string invalid value locales delimiter invalid returns valid returns empty string ambiguous different meanings", "d": "11/2017"}, {"body": "example completely different value initialized explicitly set undefined checking input dirty yet another different thing unrelated numbers sure useful value empty string invalid value locales delimiter invalid returns valid returns empty string ambiguous different meanings browser setting empty string number validation vue scope anyway waiting linusborg input could improved", "d": "11/2017"}, {"body": "checking input dirty providing solid typestrict interface returns numbers return empty string string returning empty string workaround think fixed please treat feature request ask maintainers look also wonder implement userspace took code internals still allow input input missing something upd checking chrome safari allows input clears trailing zeroes removing last digit ff respect os locale settings ignores formatted numbers still issue removing last digit", "d": "11/2017"}, {"body": "hi works perfectly fine need details like web browser", "d": "11/2017"}, {"body": "hi thanks reply however investigation company problem seemed related issue machine cpu apologies closing issue", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "one might also ask vue insists using kind obsolete tool phantomjs ca nt really keep webstandards chrome headless hand date much faster phantomjs even though filesize bigger mac linux win chrome mb phantomjs", "d": "11/2017"}, {"body": "madskonradsen nt think vue insists using nobody gotten around adding pr switches chrome headless willing make pr sure accept", "d": "11/2017"}, {"body": "eddyerburgh tried recently unrelated pr transitions tests must adapted nt work chrome headless", "d": "11/2017"}, {"body": "wanted submit pr ignore test failing", "d": "11/2017"}, {"body": "yes probably pass ci", "d": "11/2017"}, {"body": "transition test cases involves css transitions timeouts somewhat flaky depending machine run failing case fails passes time seen ci made stable increasing transition durations tests would make tests run slower kind tradeoff another option completely refactor way test transitions get rid flakiness backlog moment phantom usage intentionally staying phantom refactor transition tests work properly chrome headless", "d": "11/2017"}, {"body": "think would good idea make temporary note githubcontributingmd make less confusing", "d": "11/2017"}, {"body": "eventual markup compliant keep mind spa applications html template production pass validator test see info closing question", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "missing reproduction", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "executed event emitted listening use preserve component use emit event please consider using forum vueland stackoverflow questions", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "try", "d": "11/2017"}, {"body": "thanks reply tried ot didnt work found reason thow binding slot component result gets copied", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "please create computed prop use vue issue web severs logic", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "circular import cycle try remove cycle use instead importing router instance", "d": "11/2017"}, {"body": "yes exactly problem thank", "d": "11/2017"}, {"body": "ca nt reproduce memory consumption fiddle tab constant around looking memory allocation chrome devtools time nt show anything significant either memory consumption windows task manager ican far many influencing factors reliable measurement memory leak anyway noticable devtools least share details", "d": "11/2017"}, {"body": "possible using instance data certain way eg sending electron main process makes unable garbage collected also make sure using devtools believe electron memory snapshots instead window manager", "d": "11/2017"}, {"body": "hi thanks quicky reply usually use devtools mentioned tasks manager faster possible see consumption real time know possible devtools without press collect whats happing switch routes project vuecomponent increase sorry cant share project cause private github file sorry size big project route component comment line line thatset line variable memory increase much catalogorderpagezip im sure im sendind variable main process", "d": "11/2017"}, {"body": "well using webworker eacht time send receive data gets copied essentially depending worker set might release memory previous copies data passed referenced somewhere else hundreds line code ca nt debug like way complicated setup reproduction sorry personal sidenote big project true keep logic one component file nt nightmare navigate", "d": "11/2017"}, {"body": "yes like said set variable problem occur think problem webworker logic one component thats file project distribute much could file controls shopping cart lot intelligence complications ok thanks trying see example declare data try update manually computed params way memory increase thats point think problem vue reactive data", "d": "11/2017"}, {"body": "big memory leak simply making data reactive would know already like basic functionality vue everyone uses would couple dozen issues simpler scenarios ca nt must least combination thing setup", "d": "11/2017"}, {"body": "yes mean problem vue surely something wrong wanted way find", "d": "11/2017"}, {"body": "hope find wo nt able help unless slim drastically sorry close issue good luck", "d": "11/2017"}, {"body": "thanks guys got resolved really webworker made compact page elements tested see memory trapped thank excellent work", "d": "11/2017"}, {"body": "mobile browsers allow programmatic audio play task tick user interaction change indeed causes behavior imo somewhat expected watchers asynchronous design instead using watcher react url changes call method sets url start playing function nt really see point using watcher especially need executed event handler tick", "d": "11/2017"}, {"body": "thanks response simple demo show reason play mobile browsers music app design using vuex set vuex getter calculate like component may play song clicking button outside component like component commit mutation set watch component call audio play changes may say use sync watcher tried cause another problem feature set loop mode changes sync random must change committing mutations use sync watcher handler called twice expected use async watcher default handler called next tick currently fixed problem setting global function function vuejs init macrotask use works hack way wish vuejs core may consider kind situation", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "typo wathcer watcher thank fix", "d": "11/2017"}, {"body": "hi thanks lot taking time dive look understand came however would appreciate boiled repro without thirdparty libraries also make sure use last version vue repro reloads forever", "d": "11/2017"}, {"body": "problem sure exactly happening nt able create working mean failing minimal repro try though repro reloading forever codepen issue guess", "d": "11/2017"}, {"body": "please open issue vuetify repo first track bugs known caused vue core", "d": "11/2017"}, {"body": "took create repro without external libs expected visible text visible actually happening visible rendered info text visible returns iscontentactive true lines commented component functional vue used", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "please remove third library showcase leak bootstrap babel", "d": "11/2017"}, {"body": "opened issue bootstrapvue first seems like better place start investigation core team unlikely familiar component better chance coming isolated repro", "d": "11/2017"}, {"body": "sure thing open one side reference one", "d": "11/2017"}, {"body": "issue fixed bootstrapvue side thank guys", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "works op nov om heeft kelvin ferreira notifications githubcom het volgende geschreven version reproduction link steps reproduce open page expected see backers images actually happening possible see images happening repository github receiving subscribed thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "showing way images loading opened chrome image dont show well dont crash prints taken firefox", "d": "11/2017"}, {"body": "think nt logo look would nice displayed default icon something fix end", "d": "11/2017"}, {"body": "oh get thanks taking time investigate", "d": "11/2017"}, {"body": "still get error", "d": "11/2017"}, {"body": "correct throws error works index parameter", "d": "11/2017"}, {"body": "sqal sometimes want add remove easily works fine", "d": "11/2017"}, {"body": "mirari fixed", "d": "11/2017"}, {"body": "still one case still work correctly array destructuring example using latest vue actually found reading first two examples works fine third one index argument gives error", "d": "11/2017"}, {"body": "change data nt update dom immediately need execute like javascript printnow value thisprint value nexttick gt windowprint", "d": "11/2017"}, {"body": "anhulife said", "d": "11/2017"}, {"body": "want computed recomputed variableproperty referencing must changed empty loop like touch change changing value objects watched deeply property recomputed every modification object computed depend directly certain property use method", "d": "11/2017"}, {"body": "pretty much dodas said use watch computed properties meant side effects meant return new values get recomputed dependencies change therefore need inside computed property vue nt recompute property", "d": "11/2017"}, {"body": "computed watcher option regarding question care whether computed gets evaluated unless performance reasons point computed property returns value gets recomputed value depends reactive state changed long returned value uptodate evaluate little possible wanting force recompute computed property sign using incorrectly", "d": "11/2017"}, {"body": "ended using deep watch started computed actual component logic jsfiddle supposed emit vmodel indicate component passes business validation yes implementable watchonly approach oh brilliant work framework btw", "d": "11/2017"}, {"body": "already case local components take precedence global ones please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "11/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "build specific scenario need template multiple root nodes using bootstrap tables vue since beginning never needed multiple root nodes", "d": "11/2017"}, {"body": "provide custom attribute indicate element attached fyi use easily pass things element want multiple root elements functional components personally actually like fact one root clears questions listed one possible answer", "d": "11/2017"}, {"body": "specific table use case component would like contain two root elements first show category information second list category items details main category body control visibility second one want look something like categoryvue know could move two separate components communicate really belong together computed properties methods share yes move mixin makes everything bit complex regarding bootstrap recently stumbled using needed something like html vifvelsevshow necessary course found way work around nt clean simpler approach wanted achieve frameworks truly love vue really neat picking would nice option nice thing feature nt want nt use even think keep wrapping everything div", "d": "11/2017"}, {"body": "fyi use listeners props easily pass things element want wondering remember reading long time ago could nt find thanks tip", "d": "11/2017"}, {"body": "new react version fragment using syntax vue", "d": "11/2017"}, {"body": "honest question even need wrap everything single root element technical limitation arbitrary decision", "d": "11/2017"}, {"body": "technical due diff algorithm written obviously possible update takes significant changes current algorithm react complete rewrite", "d": "11/2017"}, {"body": "got thank details", "d": "11/2017"}, {"body": "even though generated swagger declared instance properties really want use constructor otherwise vue wo nt pick still nt look right pick investigate bit side note criticising swaggerio practice declaring instance properties prototype super weird usually put data want share across instances like functions soon change value local instance becomes new property instance", "d": "11/2017"}, {"body": "fyi fix could check make work perf comparison obviously slower extra check support consistency think much", "d": "11/2017"}, {"body": "agree mis using prototype rather weird main reason redeclare props first place getting potentially incomplete even empty instance prop immediately expanding missing properties via set delete proto set restore proto hm combo would actually work unless something happens async another model instance gets initialized proto temporarily incomplete otherwise could live low perf also hasownproperty mind though definitely considering rare constellation seems", "d": "11/2017"}, {"body": "intended behavior order make another use case possible classbased model objects gettersetters defined prototype note explicitly recommend using classprototype based objects data general rule thumb vue reactivity system leaves everything prototype chain alone assume user wants original behavior prototype chain suggestion instead trying expand missing properties postobserve inside watcher preobserve feed object vue instances ie setting properties onto object properties letting vue making reactive", "d": "11/2017"}, {"body": "thanks explanation makes sense preobserve would perfect reactivity work fine properties set e g default prop constructor instance init seems different set aspect bad suitable location prop expansion chain models nested property model instance another model therefore ideal solution would pass modelbased property appropriate subcomponent would autoexpand corresponding model would allow transparent hierarchical binding via vmodel contrary evaluatingexpanding child model parent would completely defeat purpose splitting models separate components anyway implementing codegen would provide readytouse instances weird prototyping likely cause problems future", "d": "11/2017"}, {"body": "provided editable repro moment get rids event listeners setup component looks like still references events element removed event listeners freed agree event listeners native elements removed instance destroyed", "d": "11/2017"}, {"body": "intended behavior vm destroyed associated piece dom considered discarded managed vue dom detached garbage collected modern browsers correctly discards event listeners process well usually recommended call imperatively call dom left behind reused calling removes dom time", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "error version", "d": "11/2017"}, {"body": "alexmalyita note warning appear use element fix removed warning custom components", "d": "11/2017"}, {"body": "error following snippet create group radio boxes", "d": "11/2017"}, {"body": "chagamkamalakar make sure update latest version", "d": "11/2017"}, {"body": "error still current version vue", "d": "11/2017"}, {"body": "chagamkamalakar please open separate issue proper reproduction", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "error coming new setup coming existing project please help", "d": "11/2017"}, {"body": "error gone deleted nodemoduels folder run npm install gone", "d": "11/2017"}, {"body": "could see one problem custom components watcher value props getting called initially gets called emitted custom component", "d": "11/2017"}, {"body": "warnings ignored every warning fixed", "d": "11/2017"}, {"body": "rely cross component styles unless know going rendered together", "d": "11/2017"}, {"body": "problem solved bootstringtable still wants provide jquery refreshing dom", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "11/2017"}, {"body": "requirement problem vue nt way refresh dom jquery posva", "d": "11/2017"}, {"body": "problem related directly vue rather integrate third party libraries vue lot resources integrate jquery vue case usage question please use proper channels forum chat", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "11/2017"}, {"body": "ok prepare one provide later", "d": "11/2017"}, {"body": "js", "d": "11/2017"}, {"body": "vue vue \u4ec5\u7528\u4e8e\u5bf9\u5355\u4e2a\u5143\u7d20\u7684\u76f4\u63a5 dom", "d": "11/2017"}, {"body": "also memoize calls check nt know memoize values people seem enjoy using", "d": "11/2017"}, {"body": "good idea posva thank code suffers thing could use approach cons executed everytime rerender occures translation costs", "d": "11/2017"}, {"body": "keep mind example simple need invalidate cache somehow load new translations probably handle edge cases", "d": "11/2017"}, {"body": "technically invalid though listen javascript suppose add note docs", "d": "11/2017"}, {"body": "case information stated open prs warnings similar commit implemented warning conflicting methods started related", "d": "11/2017"}, {"body": "posva new title correct want warn computed properties would thought warning would data computed methods data happy help need sure needs", "d": "11/2017"}, {"body": "second thought sure introduce warning would show warnings many plugins devusers purposely use mark internals like vuelidate could however something similar commit referenced computed properties chrisvfritz already proposed add warning functionality another config flag flood existing plugins using maybe could go way around adding error conflicting data properties proxying well", "d": "11/2017"}, {"body": "think main issue example data property begins warning says data property defined could confusing data property begins console warning shown along lines docs say properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "11/2017"}, {"body": "rpemberton perfectly fine breaking anything feel free pr thank", "d": "11/2017"}, {"body": "posva little bit confused private property names rule vue style guide prefixed property data makes sense rework rule provide better way define private properties", "d": "11/2017"}, {"body": "reading issue order understand could help nobody working already seems invalided feature implemented without breaking things right guys update issue remove contribution tag", "d": "11/2017"}, {"body": "let close moment thanks reminder", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "designed scoped css means css scoped current component parent children", "d": "11/2017"}, {"body": "current declaration designed scenario still need use class component want restrict implementation interface", "d": "11/2017"}, {"body": "assume wontfix", "d": "11/2017"}, {"body": "far aware vue allows element essentially wrapper within template error bug works", "d": "11/2017"}, {"body": "could find feature documentation thanks feedback greetings italy fabio receiving authored threadreply email directly view github mute thread", "d": "11/2017"}, {"body": "open console warning telling problem make sure check warnings opening issues", "d": "11/2017"}, {"body": "imo behaving incorrectly fixes behavior design fallback content appears slot receives nothing whitespace clearing slot fallback content empty slot sounds like hack however still want use zerowidth space slot content", "d": "11/2017"}, {"body": "using zerowidth space express clearing fallback content slot sounds like hack either better way us solve explicit semantics", "d": "11/2017"}, {"body": "always add prop usedefaultslot defaults true use like default content thu nov gu yiling notifications githubcom wrote using zerowidth space express clearing fallback content slot sounds like hack either better way us solve explicit semantics receiving subscribed thread reply email directly view github mute thread", "d": "11/2017"}, {"body": "fnlctrl consider complex component multiple slots would nt want expose kind prop using slots means prefer declarative way define content otherwise ignore slot syntax pass render functions", "d": "11/2017"}, {"body": "fnlctrl maybe add attribute provide global config indicate default override behavior", "d": "11/2017"}, {"body": "justineo complex component multiple slots even provided official api suppress default content users would still declare slots suppressed eg nt think better declaring props userland best way think simply use empty whatever tag like simple declarative", "d": "11/2017"}, {"body": "actually seeing behavior back undesired declaring users already explicitly overriding fallback content otherwise would nt declare want conditionally override fallback content apply like nt think better declaring props userland overriding slot fallback content common scenario builtin syntax definitely help users build apps lower overhead designing kind api helps vue users understand underlying logic template across different vue projects", "d": "11/2017"}, {"body": "think fallback content different default content defined fallback content behavior make content empty considered hack first point agree hack zerowidth space good define conditional fallback content fnlctrl provided set content empty never define fallback content default content thanks", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "upon investigation actually nothing vue called every svg node cases even browsers virtual dom patch cheap fast look profile closely see expensive calls actually called patching toggled class root cause seems simply extremely inefficient toggle class element contains large amount svg elements performance issue reproduced without vue involved", "d": "11/2017"}, {"body": "bug sure even possible within typescript close wontfix cc ktsn herringtondarkholme feel free provide info", "d": "11/2017"}, {"body": "typescript compiler infer assignment statement impossible thought supporting use case manually providing nonreactive properties type type parameter current ts compiler allow providing part type parameters infer remaining type parameters arguments", "d": "11/2017"}, {"body": "thanks ktsn clarification let first explain technically js side coding merely using vscodetsforjs languageovervue service look back marvelous word plugged together chain technologies certain flux point view open end user read open means certain feedback lacking read loggingtraceabledocumented without experience reading github issues keep reasoning certain things softwareland might happened hard vscode ts config ts language service ts version code using instance variables vue created method bugorfeature please say prominently nowissue part issue would appreciate hearhave kind feedback points additionally certain best practiceworkflow learningdebugging testing kind issue preferred way reaching kind issue triage upon multiple productprojects involved bugorfeature plan give consideration jsfirsttstypings usageexperiencedocumentation based understanding typings js necessary point help learning microcoding usagescompletions meant done prevent certain bugs upfront ide red squiggle lines really get alerted even bugged falsepositives related op question open using packaged much possible nt get wrong jsfirstts seems promising may eventually result fun confidence js coding subpoint browsers nowadays get compatible natively happy throw away babel workflow somewhat reluctant work annotations ts language anything involves additional layer future magic failure last least current pain points related around op question created vue mixin separate js file tsjsdoctyped per herringtondarkholme suggestion typing certainly got squiggle lines away using vue component side mixin side get tstyping love learn include ts magic workaround changed mixin code begin vueextend get coding completionfeedback eventually argumented sign codesmell neither documented per valid option valid option per vue dts error squiggle lines understand ramifications may seems work hmm situation end using vue component side mixin give tstyping love either mixin neither data methods anything included mixin please document bugorfeature lacking something elsewhere mixin side computed prop ts type interference certainly breaks see issued triage ps ever reach line personally thank taking time star", "d": "11/2017"}, {"body": "currently workaround", "d": "11/2017"}, {"body": "works fine android test ios known issue ios safari emitting events autocompleting unfortunately sure something vinceg must event listen instead checking value every maybe listening event work", "d": "11/2017"}, {"body": "nt think something fix framework level buggy behavior one specific browser firing events autocomplete userland workaround seems way suggest adding know specific browser alternatively perform manual sync submitting", "d": "11/2017"}, {"body": "expected behavior pushes callback deferred queue callbacks pushed event loop fired tick triggering another watcher queue already flushing pushes callback end current queue instead firing immediately", "d": "11/2017"}, {"body": "get expected results", "d": "11/2017"}, {"body": "hi thanks filling issue difference empty object undefined reason added practice could often making verbose access eg use shorthand simplify", "d": "11/2017"}, {"body": "interesting use word alias means exactly said pointed doc people use found supported going make compatible get confuse errors doc yes", "d": "11/2017"}, {"body": "explicitly stated issue requirements please provide runnable repro", "d": "11/2017"}, {"body": "appear issue example working expected", "d": "11/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2017"}, {"body": "listeners attached via added child instance parent propagation event emitted child captured child child instead parent child parent communicate purely javascript need explicit event bus imported", "d": "11/2017"}, {"body": "thanks explanation however statement listeners attached via von added child instance parent clearly missing piece statement documentation addition parent component listen events emitted child component using von directly template child component used see warning note explaining fact ca nt used think documentation improved listeners added child propagation self explaining parent listen child nt exclude propagation ca nt used", "d": "11/2017"}, {"body": "feel free propose pr docs repo", "d": "11/2017"}, {"body": "crap think would better trying use css transforms want dynamic animations", "d": "11/2017"}, {"body": "nt think repro clearly demonstrates problem related vue involves potential problems way use svg please provide repro intended animation working plain svg know actually vue issue cc sdras", "d": "11/2017"}, {"body": "hey welcome problem nt vue svg rather logic asking fire condition isopen returns true initial page visit sorry say side note nt suggest continue using smil chrome pausing deprecation moment chopping block microsoft says never ever support ieedge browsers better support highly recommend using greensock tweenmax eventually run cross browser inconsistencies transform origins otherwise check demo fork example threw together pretty quickly probably need tweaks let know questions", "d": "11/2017"}, {"body": "thanks explanation sarah", "d": "11/2017"}, {"body": "\u7236\u5b50 \u7ec4\u4ef6\u4f20\u9012\u6570\u636e \u6587\u6863\u91cc\u4e0d\u662f\u5f88\u8be6\u7ec6\u5417", "d": "11/2017"}, {"body": "\u4f60\u9700\u8981\u7684\u5e94\u8be5\u662f props \u8fd8\u6709\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684 \u662f\u652f\u6301 object", "d": "11/2017"}, {"body": "\u6211\u4ee3\u7801\u4e2d\u628a value\u5bf9\u8c61\u5b9a\u4e49\u5230\u4e86 export default \u7684 data \u5c06value \u5bf9\u8c61\u653e\u5230 export default \u7684 props \u7236\u5bf9\u8c61\u901a\u8fc7 vmodel \u5982\u679c\u5b50\u5bf9\u8c61\u6ca1\u6709\u5b9a\u4e49 props value \u4f46\u662f\u5982\u679c\u5b50\u7ec4\u4ef6\u7684value\u5bf9\u8c61\u5b9a\u4e49\u5230\u4e86 data", "d": "11/2017"}, {"body": "think dealt compiletime warning parsing phase detected element", "d": "11/2017"}, {"body": "getting compiling errors warnings npm run dev code base rpemberton linusborg update running vue vuetemplatecompiler", "d": "11/2017"}, {"body": "fix supposed work first place", "d": "11/2017"}, {"body": "thanks reply removed value thanks", "d": "11/2017"}, {"body": "options intentionally omitted part public api", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "got request short answer shipping pure esm directly production still nogo foreseeable future also lack support recommended toolchains eg singlefile components hotreload preprocessors etc means build would useful prototyping however prototyping include vue via nt make much difference worth complexity adding yet another dist format", "d": "11/2017"}, {"body": "dunno know necessary check params defined", "d": "11/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "11/2017"}, {"body": "sorry link source code valid repro", "d": "11/2017"}, {"body": "replacing behavior would also breaking change though think preserving semantically correct among two current behavior reasonable disregarding combined usage think goal really make work together retaining semantically correct behavior currently workaround mentioned although straightforward requires understanding internals", "d": "11/2017"}, {"body": "yeah fan workaround feels bit hacky would think suggesting following pattern instead", "d": "11/2017"}, {"body": "chrisvfritz actually reasonable explicitly overwriting parent input listener", "d": "11/2017"}, {"body": "excellent updated docs issue probably closed agree longterm really would nice listeners automatically work ideally listeners components could check emitted payload yes check choose appropriate element listener use normal behavior components payload assumed new value", "d": "11/2017"}, {"body": "sorry ca nt help error happens machine please try provide production actually look", "d": "11/2017"}, {"body": "hi evan thank quick answer try another service nt encapsulate console output codepen seems copy paste code run locally stills happens", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "please use forum open ended discussions short answer investigated ric raf want nexttick exists primarily scheduling rather deferring work want microtasks much possible", "d": "11/2017"}, {"body": "thanks answer", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow inside directive function get access element first argument", "d": "11/2017"}, {"body": "please use forums chat ask questions usage open issues sure found bug", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow using computed setter allows emit event anything want", "d": "11/2017"}, {"body": "vshow current implementation simply need toggle style property single element making recursively invoke hooks components contained inside element makes exponentially complex marginal benefits use computed property vshow condition instead", "d": "11/2017"}, {"body": "unlike hooks methods merged return values", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "\u5bf9\u4e8e", "d": "11/2017"}, {"body": "hi klehelley thanks detailed reproduction going chrome opens file picker event programmatic invocation happened userinteraction ie user clicking button surface happens right user clicks add file file input added clicked programmatically issue vue update mechanism data changes runs asynchronously call stack original add file click event already finished new component created therefore call new component hook triggered userevent chrome perspective consequently ignored see chrome behaviour without vue simplified solve suggestion would change component would add hidden file input component use every new file file selected read input add file list reset file input way component would never contain actual file input nt work actually need input per file ca nt think reason might well one come another way input already dom button clicked maybe always new file list hide last entry user selected something whatever closure amp support think something solve vue internals asynchronous update queue stay rather find ways work around described need help please join us forumvuejsorg chatvuejsorg work", "d": "11/2017"}, {"body": "thanks detailed answer nt aware mechanism chrome makes sense working changing internals component single element", "d": "11/2017"}, {"body": "bug guarantee event valid asynchronous callback used basically save whatever need case use instead event variable directly", "d": "11/2017"}, {"body": "posva documentation statement nt think wrong never seen heard", "d": "11/2017"}, {"body": "could nt find see vue", "d": "11/2017"}, {"body": "searching somewhere kind documentation dom events lifespan found nothing jsbin crown example thousands link seriously last time issue hybrid vm called titanium elements mapped java objectc counter parts would disappear vm deemed unused never thought would see browser today day tada", "d": "11/2017"}, {"body": "javascript need quote keys", "d": "11/2017"}, {"body": "works using plain js object instead class", "d": "11/2017"}, {"body": "took quick look renderslot function found extend function best guess instance class merged object literal prototype methods discarded iterating enumerable properties object constructor amp defined methods nonenumerable properties class prototype object using object literal instead class instance would best workaround possible nt chance check actually happening try come back done", "d": "11/2017"}, {"body": "expected behavior scoped slot props bound via passed directly object always copied plain object imagine another alongside needs merged keys found behavior needs consistent cases", "d": "11/2017"}, {"body": "according use contextmenu instead docs probably updated see", "d": "11/2017"}, {"body": "modifiers work click event actually fire right clicks middle clicks instead fired respectively confusing implemented normalization compiler transforms respective equivalents unfortunately supported universally use instead perfect since would fire even click start element close enough draggedmiddleclick seems extremely rare operation", "d": "11/2017"}, {"body": "attribute casesensitive see", "d": "11/2017"}, {"body": "javoski said", "d": "11/2017"}, {"body": "undocumentedinternal api wo nt declare dts use", "d": "11/2017"}, {"body": "unfortunately design hack around using object referring children recommended could break future versions vue", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow already check examples", "d": "11/2017"}, {"body": "want hire programmer", "d": "11/2017"}, {"body": "read docs", "d": "11/2017"}, {"body": "reproduction mean isolated boiled example reproducing problem check use fiddle provide simple html file create reproduction", "d": "11/2017"}, {"body": "vue", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "\u4e0d\u8fc7\u73b0\u5728\u662f\u5185\u7f51\u5730\u5740", "d": "11/2017"}, {"body": "expected behaviour since passing functional component slot functional component rendered main instance scope main instance render function result passed slot content execution happens actually instantiated rendered nt think easy solution particular situation used insice slots functional components eagerly rendered parent scope nt instance could evaluated slot later child would render template instead error would captured expected", "d": "11/2017"}, {"body": "explained linusborg functional components eagerrendered render functions invoked directly render function component uses error captured another component template scope nt think way fix unless change way functional components rendered making longer eagerrendered might benefits making functional components behavior consistent stateful ones close issue since different topic", "d": "11/2017"}, {"body": "thanks linusborg detailed information one last remark need answer strange behavior may expected vue core developer normal vue user behavior stays strange normaly errorboundary compent container either shows children case errors thrown children error details really feature work nonfunctional child components would great vue team would reconsider eagerrendering thing near future major versions thanks lot great job guys vue library ps look things work opinion", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "keep mind windows os x case insensitive default however related vue rather one loaders used webpack template nt handle uppercased extensions default add want adding case insensitive regex used urlloader line", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "something mind definitely something valuable thanks suggested api design", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "bug first refresh page", "d": "11/2017"}, {"body": "\u662f\u5426\u5728", "d": "11/2017"}, {"body": "\u53ea\u662f\u5728vfor\u4e2d\u8fd4\u56de\u6570\u7ec4 \u5982\u679c\u4e00\u4e2a\u9875\u9762\u4e0a\u6709\u4e24\u4e2a\u76f8\u540c\u7684ref\u8fd4\u56de\u6570\u7ec4\u8fd8\u662f\u5bf9\u8c61 \u6211\u89c9\u5f97\u8fd9\u91cc\u5f88\u6a21\u7cca api\u4e5f\u6ca1\u6709\u8bb2", "d": "11/2017"}, {"body": "\u8bf7\u770b\u8fd9\u91cc\u7684\u4f8b\u5b50 \u5982\u679cref\u540c\u540dchild\u65e0\u6cd5\u83b7\u53d6\u7b2c\u4e8c\u4e2a \u56e0\u4e3a\u8fd4\u56de\u7684\u662f\u5bf9\u8c61 \u800cvfor\u4e2d\u7684\u53ef\u4ee5 \u56e0\u4e3a\u8fd4\u56de\u7684\u662f\u6570\u7ec4 \u8fd9\u4f1a\u5bfc\u81f4\u5c06vfor\u4fee\u6539\u4e3a\u6b63\u5e38\u7684\u975ehtml\u5185\u5bb9 \u5c06\u4f1a\u5bfc\u81f4\u4fee\u6539js\u83b7\u53d6 refs\u8fd9\u5757\u7684\u4ee3\u7801", "d": "11/2017"}, {"body": "interesting thought imo something added core vue provides several ways handle currently conditional inside template passed slot parent hoc custom vue template sections etc", "d": "11/2017"}, {"body": "also possible add core could added vueloader would transformed something like personally think better keep kind magic webpack template nt improve way write templates enough write loader put front vueloader make transformation", "d": "11/2017"}, {"body": "want wrap slot better let component user intention clearer user write clearly shows things put together related", "d": "11/2017"}, {"body": "understood approach correctly solution problem described would means either repeat create separate component write extra boilerplate seem suboptimal might well write instead html content content took look two issues sure way related please expand", "d": "11/2017"}, {"body": "thanks suggestion however parallel mechanisms solve similar problems complexity big nogo terms api consistency something consider core welcome try implement userland", "d": "11/2017"}, {"body": "made pr expose meantime manually annotate function", "d": "11/2017"}, {"body": "nt warning appear client anyway", "d": "11/2017"}, {"body": "least initial ssrgenerated page load nuxt shows warning client arrive page actually valid point would also expect client emit error initial load ssrgenerated page", "d": "11/2017"}, {"body": "fyi expected behavior warn server possible user wants render real custom element instead vue component warning safely performed client check element registered real custom element previously warning even clientside hydration fixed", "d": "11/2017"}, {"body": "workaround moment add attribute one two slots containers", "d": "11/2017"}, {"body": "wow amazing cloned built tested works evan best thank much", "d": "11/2017"}, {"body": "btw already", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow define accessible everywhere use defineproperty prevents overwrite user need data reactive use like vuerouter case seems enough", "d": "11/2017"}, {"body": "ok thanks promise ask questions forum future extending prototype work tried using definereactive resolve problem gracefully method writen docs read code vuerouter sure right way know vuerouter official module", "d": "11/2017"}, {"body": "true relying fully secure api may change future without notice example definereactive example using another vue instance reactivity version using public api", "d": "11/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "11/2017"}, {"body": "sorry mistake forgot remove reference parent component key word leads problems", "d": "11/2017"}, {"body": "yes problem come electron sets configurable false getters setters everything work fine il add configurable true electrondistelectronasarrendererapiremotejs file see", "d": "11/2017"}, {"body": "would move element anymore", "d": "11/2017"}, {"body": "think understand asking unfortunately properly implementing introduces many unresolved questions eg list changes leave transition changes move brings complexity whole different level rather tackle standalone package core", "d": "11/2017"}, {"body": "sorry insist waste time understand problem list changes leave transition changes move nt change actual behavior already make shuffle middle leave hook make another move transition callback called like press multiple time shuffle list move transition example sorry assumptions wrong nt know flip implemented nt big picture problem like wrong point right direction implement vue package posva nt want move element rest list elements rearrange list prefer try example shuffle add remove item import lodash export default data return items nextnum methods randomindex return mathfloor mathrandom thisitemslength add thisitemssplice thisrandomindex thisnextnum remove thisitemssplice thisrandomindex shuffle thisitems shuffle thisitems leave el next settimeout gt elstyledisplay none working cause vue watch elstyledisplay none next replace lines next true p display flex flexflow row wrap span flex auto width margin backgroundcolor tomato textalign center listcompletemove transition transform listcompleteenteractive transition opacity listcompleteenter listcompleteleaveto opacity listcompleteleaveactive transition opacity", "d": "11/2017"}, {"body": "used real nodes sets inner text element used template however add warning", "d": "11/2017"}, {"body": "expected nt produce visible content unless combined structural directive like", "d": "11/2017"}, {"body": "example combined structural directive posva work ssr js const vue require vue const app new vue template foo data foo hello const renderer require vueserverrenderer createrenderer rendererrendertostring app err html gt err throw err consolelog html emits html hello exactly expected code work browser however see jsfiddle nt inconsistency problem", "d": "11/2017"}, {"body": "let put way equivalent setting property node nt work node fact works ssr coincidental probably fix maintain consistency clientside behavior rely", "d": "11/2017"}, {"body": "using instead vue adjusts event firing order prioritizing correct behavior vue event listeners behavior external listeners mutates application state guaranteed", "d": "11/2017"}, {"body": "right thanks", "d": "11/2017"}, {"body": "expected behavior think way around leave transition triggered removal element transition state ephemeral reflect virtual dom state virtual dom element considered already destroyed want something element finally removed real dom use transition hooks instead", "d": "11/2017"}, {"body": "incapsulate destroying garbage collecting inside components hook inside components use destroy components transition parent page finishes screencast illustration problem caused behavior", "d": "11/2017"}, {"body": "plashenkov believe referring using transitionend", "d": "11/2017"}, {"body": "autumnwoodberry thanks kind workaround though example transition used triggered example transition applied directly component parent component page example component nt know parent container uses transition believe strong straightforward event needed help us detect last moment component really needed anymore destroy", "d": "11/2017"}, {"body": "designed usage modifiers limit handler fired proposed modifiers fall different category imo makes concept overloaded syntax convenience custom behavior goes beyond firing better done javascript reuse method wrapperdecorator", "d": "11/2017"}, {"body": "seems like fixed", "d": "11/2017"}, {"body": "javoski true checked last version fixed", "d": "11/2017"}, {"body": "nt think afford warning runtime build though summarize variable naming rules single asciionly regular expression javascript would characters long ecmascript unicode", "d": "11/2017"}, {"body": "alternative method suggested work occurred might work tried work nt", "d": "11/2017"}, {"body": "tracking click event looks like vue treat unicode names differently behind scene method name like doit button click invokes boundfn directly method name unicode name button invokes something like click event handler instead", "d": "11/2017"}, {"body": "order use method name directly shorthand needs alphanumeric identifier expression alphanumeric identifier treated function body instead case needed adding shorthand support full unicode herringtondarkholme pointed expensive worth", "d": "11/2017"}, {"body": "thanks addressing still wonder feedback could provided case maybe something like used nonalphanumeric identifier intended add workaround", "d": "11/2017"}, {"body": "problem expensive detect nonalphanumeric identifier maybe unicode identifier full expression", "d": "11/2017"}, {"body": "excuse miss something obvious realize expensive decide identifier legit unicode identifier pointed however thought detecting identifier nonalphanumeric easier like checking matches would require developer check legit unicode identifier feedback would better none suppose anyways unicode naming wide use plus alternative solution thanks community support totally understand edge case low priority picked time soon thanks patience time", "d": "11/2017"}, {"body": "gon na track", "d": "11/2017"}, {"body": "thank", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "closed via", "d": "11/2017"}, {"body": "keepalive cache anonymous components without include prop bug break change", "d": "11/2017"}, {"body": "see reproduction console panel link vue version see without include anonymous components ca nt cahce mounted without activated", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "u need dom structure input look update dom input tag", "d": "11/2017"}, {"body": "also facing similar issue trying generate one dynamic component using specific code update depvalue please help", "d": "11/2017"}, {"body": "hi varadekd think ask question stackoverflow think help trying change value value click depvalue", "d": "11/2017"}, {"body": "hi mahersoua nt want two different buttons load two component want single click component loaded ie click show twocomponent loaded", "d": "11/2017"}, {"body": "varadekd case assign value depvalue something like", "d": "11/2017"}, {"body": "go like getcomponent thisvalue thisdepvalue", "d": "11/2017"}, {"body": "another thought ca nt change may also real component case must bound normally extracted component prop please use suggest workaround explicitly adding modifier", "d": "11/2017"}, {"body": "closed via", "d": "11/2017"}, {"body": "turns john came across thing months ago", "d": "11/2017"}, {"body": "thinks necessary users functional components otherwise hardly work expect", "d": "11/2017"}, {"body": "currently working names modifiers really since mouse modifiers already clashed keyboard modifiers avoid future name issues perhaps include something pointer device mouse related like introducing twoword modifiers nt seem like good idea though case related stuff main signifiers suggestions might confusing since fired mouse buttons except primary one suggestions suggestions previous names course kept deprecated warnings", "d": "11/2017"}, {"body": "able boil another issue running safari", "d": "11/2017"}, {"body": "appears bug safari sort function andor type coersion nodechromeetc returns would expect looking null true true sort b gt lt b true true null safari null true true sort function b return lt b null true true switching using comparitor function renders properly", "d": "11/2017"}, {"body": "still would like see makes sense way detect production would helpful think would rather development behavior production rerendering invalid markup order prevent white screens", "d": "11/2017"}, {"body": "would awesome cause also problems sometimes whitescreeen node append errors production would really nice able see production", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "kovensky solve issue", "d": "11/2017"}, {"body": "ktsn last checked typeof vue definition returns string magic going behind closed doors would use typeof vue provided repro", "d": "11/2017"}, {"body": "ktsn according vuedts const export vue vueconstructor", "d": "11/2017"}, {"body": "closing one please keep eye merged", "d": "11/2017"}, {"body": "\u4ec0\u4e48\u610f\u601d", "d": "11/2017"}, {"body": "\u4e0d\u597d\u610f\u601d \u6211\u8fd8\u5f97\u8ffd\u95ee\u4e00\u53e5 \u5728\u8fd0\u884c\u65f6 children\u786e\u5b9e \u4e0d\u9700\u8981\u4fdd\u8bc1\u987a\u5e8f \u4f46\u662f\u521a\u521a\u542f\u52a8\u5b8c\u6210\u65f6 \u987a\u5e8f\u662f\u5bf9\u7684 \u6211\u89c9\u5f97 \u5728\u70ed\u90e8\u7f72\u72b6\u6001\u4e0b \u5e94\u8be5\u548c\u65b0\u542f\u52a8\u72b6\u6001\u4fdd\u6301\u4e00\u81f4 \u5f88\u4f9d\u8d56\u73b0\u5728\u7684\u70ed\u90e8\u7f72\u673a\u5236 \u5f53\u7136\u901a\u8fc7\u670d\u52a1\u7aef\u6e32\u67d3\u4e5f\u5e94\u8be5\u80fd\u8fbe\u5230\u6548\u679c \u4f46\u662f\u8d44\u6e90\u6709\u9650\u8fd8\u662f\u5e0c\u671b\u70ed\u90e8\u7f72\u53ef\u4ee5\u652f\u6301\u7c7b\u4f3c\u521d\u59cb\u5316\u65f6\u6b63\u786e\u7684\u987a\u5e8f", "d": "11/2017"}, {"body": "\u7528 import message messagevue \u4ee3\u66ff require messagevue import vue vue import message messagevue let alertconstructor vueextend message", "d": "11/2017"}, {"body": "new vue js please check fiddle show use reactivity arrays functions little trick please comment paragraph see effect dont understand vue js", "d": "11/2017"}, {"body": "nt think really makes reactive happens update since another property also changes suspect using bvalue computed make computed reevaluate bvalue changes", "d": "11/2017"}, {"body": "ran similar issue functional component using innerhtml render entity default value functional component prop changed html markup user ssr renders inner html browser using innerhtml converts entities actual characters ie converted browser via native innerhtml ultimately causes rehydration bail rerender component spew errors dev mode html entities also fail hydration used innerhtml etc minimal markup recreate ssr hydration bail issue using sfc template non functional component issue nt appear", "d": "11/2017"}, {"body": "tmorehouse please open separate issue", "d": "11/2017"}, {"body": "\u770b\u5230", "d": "11/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2017"}, {"body": "spread operators natively supported node close wontfix order use object rest spread templates need use node configure option targeting ie make sure include polyfill likely coordinate configuration project able use object rest spread without configuration", "d": "11/2017"}, {"body": "linusborg vue cli builds perhaps also emit warning older versions node", "d": "11/2017"}, {"body": "fixed", "d": "11/2017"}, {"body": "faced problem alone", "d": "11/2017"}, {"body": "feel functional component explicitly declares props intercepting functional component meant serve pass wrapper simply declare props use implicit props", "d": "11/2017"}, {"body": "comes generating tables simplifies things", "d": "11/2017"}, {"body": "causes problems adds unecessary wrappers cracks layout", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "solve use vif instead vshow also avoid warning use vif condition velse instead use vif condition vif condition works hope helpful", "d": "11/2017"}, {"body": "heleninsa unfortunately nt allow component inside initialize track loaded mentioned somewhere previous comments", "d": "11/2017"}, {"body": "issue resolve", "d": "11/2017"}, {"body": "vitalipom two months nt remember details exactly think problem webpack configuration ended finding sample webpack config somewhere vue documentation forums ca nt remember ended making work sure webpack would cause vue issues", "d": "11/2017"}, {"body": "okay thank james meanwhile since candidate job interviews decided indeed use vuejs soon struggle catchy feature leave alone regular listener would call native java script eventually big bonus access data objects directly js meaning future purposes nov james speirs notifications githubcom wrote vitalipom two months dont remember details exactly think problem webpack configuration ended finding sample webpack config somewhere vue documentation forums ca nt remember ended making work sure webpack would cause vue issues receiving mentioned reply email directly view github mute thread", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "problem", "d": "11/2017"}, {"body": "actually issue related safari instead vue check demo nt involve vue", "d": "11/2017"}, {"body": "great javoski demo indicates issue related vue safari", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "ktsn including file allows import modules typescript files seems conflict vetur plugin components path file checking imports completely disabled use dts file also changes vue files reflected autocomplete anymore indexts appvue import vue vue import card notexistcardvue works without sfcdts file", "d": "11/2017"}, {"body": "reopened since mentioned pull request abandoned", "d": "11/2017"}, {"body": "nt know alone case issue still happening safari autofill running fine safari click little guy input select list one autocomplete first passed form submit nt work safari start tipping immediately click list issue component updated properly data transmit updated exemple write okboys first time submit form must valid cached safari reload page browser start writting ok second time safari offers select okboys list bellow input select graphical input value okboys real value transmitted still tipped ok cf nt change anything safari seams ignore html attribute offers autocompletion web browser edge chrome ff edit works fact way still getting error caused safari form cache juste erase form autofill cache safari preferences bypass issue issue still present component reproduce issue", "d": "11/2017"}, {"body": "also supporting browser compatible es module support would neat another thing seems work without issues add export default main vuejs make function return factory like check whether global exists undefined es modules assigning globalvue throws exception course might break compatibility bundlersbuild tools nt know", "d": "11/2017"}, {"body": "", "d": "11/2017"}, {"body": "resolved updating prototypejs least version", "d": "11/2017"}, {"body": "similar issue problem npm version nodejs version vue installed notice plugins section nt plugin added import extracttextplugin added plugins sections like added const extracttextplugin require extracttextwebpackplugin plugins new extracttextplugin filename utilsassetspath css name contenthash css set following option want extract css codesplit chunks main css file well result app css loaded upfront allchunks false dev webpackdevserver inline progress config buildwebpackdevconfjs one important thing add make sure installed project installed case fresh install", "d": "11/2017"}, {"body": "want chime would great addition currently solution provided may good option well nt tried approach yet", "d": "11/2017"}, {"body": "strange issue unfortunately ca nt use duration workaround since using vuetify transitions transition works transition nt", "d": "11/2017"}, {"body": "closing due inactivity also workaround pointed", "d": "11/2017"}, {"body": "coming react background browser quirks like handled behind fixed api particularly frustrating behaviour come across think good solution would eitherboth clear documentation page explaining selects operate differently inputs certain browsers lowlevel synthetic event eg works across field types ie select amp input etc", "d": "11/2017"}, {"body": "anyone know work around", "d": "11/2017"}, {"body": "hello vue warns computed property conflict props vue prop key results found subvue appvue renders vue appvue import sub subvue export default data return b c components subcomp sub vue subvue export default props data object data debugger return thisdata works change believe need correct warning say", "d": "11/2017"}, {"body": "using nice solution using template literals", "d": "11/2017"}, {"body": "ability change title seems basic thus fundamental feature site developed php kind practice rewrite react done vue assess convenient would site book collection site change title dynamic page reflect book title page quite useful also need update section include title author publisher tags etc piece thought", "d": "11/2017"}, {"body": "guykatz case state driven data context component holds template also bind even loads data still", "d": "11/2017"}, {"body": "use worked modal push raw html data body html", "d": "11/2017"}, {"body": "facing issue better solution jiayangshen", "d": "11/2017"}, {"body": "bug reappeared version version", "d": "11/2017"}, {"body": "hi noticed recently lack line numbers makes things really hard debug especially component big component couple thousands lines received warning vue warn error render function typeerror vmvalues itemname undefined component name line number firefox console kind cases would really useful specified line number course split component several smaller ones dig lines editor search point please consider adding line numbers next versions thank", "d": "11/2017"}, {"body": "please add line numbers got next message vue warn error render typeerror read property length undefined found know fails construct variablelength variable null problem many length constructs data coming external service", "d": "11/2017"}, {"body": "read property length undefined nt find problem big webapp hard suppose found file cause nt know error exactly erraze line line find line broken xd", "d": "11/2017"}, {"body": "linusborg issues slove problem thx", "d": "11/2017"}, {"body": "intend solve anything closed issue better describing specific situation forum forumvuejsorg see post", "d": "11/2017"}, {"body": "review code made changes emit event changes happens child", "d": "11/2017"}, {"body": "used available could access property removed addition custom model input values useful feature back framework", "d": "11/2017"}, {"body": "custom vmodel modifiers would great", "d": "11/2017"}, {"body": "met problem added onsubmit listener form form bound vue onsubmit listener got lost solutions", "d": "11/2017"}, {"body": "indeed name singlefile vue component seems ignored running right", "d": "11/2017"}, {"body": "ktsn think feature great especially benefit use type system claim done easily provide sample make vue without class style vue", "d": "11/2017"}, {"body": "already implemented", "d": "11/2017"}, {"body": "ktsn need integrate type system check question", "d": "11/2017"}, {"body": "raychenfj provided elegant solution", "d": "11/2017"}, {"body": "case someone else stumbles upon make sure model updated using elements", "d": "11/2017"}, {"body": "use destructuring", "d": "11/2017"}, {"body": "fix make isplainobject method return false js objectprototypetostringcall new unobservable object objectnoobserve", "d": "11/2017"}, {"body": "hi one point lost responses data original comment pure state case model instance private reference relationship lookup cache example lookup call dynamic property lookup relationship cache simple attribute access things consider cache pure state nt want observed vue waste resources cache discarded still need reference perform dynamic lookupsupdates cache effectively singleton may updated externally app updates accordingly response suggestions using json stringifyparse object destructuring sufficient duplicates object amp cache well breaking reference original cache updating original cache reference longer update app instances without dynamic lookups updates cache basically pointless would better make related objects simple attributes original model also worth noting suggestions break instance methods objects suggestions mechazawa make sense control type creation types built use vue case external library tied vue nt want go trouble altering types application much straightforward vue layer simply mark certain known properties unobservable criticism vuenonreactive vue dependency overkill comes something straight forward sure would bad thing already using vue application plugin specific vue mistaken build tools smart enough create bundles duplicate dependencies regardless nt correct dev dependency runtime dependency anyway glad see post garnered interest sure solutions work variety cases simply want highlight requirements original comment suggestions nt suitable alternatives case", "d": "11/2017"}, {"body": "guillaumevincent find solution want thanks", "d": "11/2017"}, {"body": "malian double click simple click element nt really good term accessibility tried another approach", "d": "11/2017"}, {"body": "catch data", "d": "11/2017"}, {"body": "best place check local storage app initialization see user already logged previous session tutorial referenced line inside startup file vue initialised done something similar recommended", "d": "11/2017"}, {"body": "use instead vue see", "d": "11/2017"}, {"body": "pablohpsilva thanks simple works really cool", "d": "11/2017"}, {"body": "agree thanks input glidias would cool able allows find quickly method comes case know searching definition method inside validation mixin style preferences imo", "d": "11/2017"}, {"body": "also like advocate implemented using objects namespace group functions much convenient prefixing cleaner also allows ides fold methods well workaround accomplished using functions instead objects used like perfect still gives organizational benefits couple years opinion changed", "d": "11/2017"}, {"body": "adopt approach put place simply use without function brackets order get computed caching avoid recreating object fact tend use pseudo singletonssingleglobal refsutilityclassesobjects etc well way get perfect solution approach done css modules well however assume methods stateless methods stateful notreactive methods whose states data lie outside vue", "d": "11/2017"}, {"body": "validation simply example usecase may may always make sense use computed property nt negate original uses nested methods", "d": "11/2017"}, {"body": "ya anything new issue since", "d": "11/2017"}, {"body": "seems like support objects values dropped", "d": "11/2017"}, {"body": "ndabap work gives output html bar screenshot good luck", "d": "11/2017"}, {"body": "sadly unreliable often gives error", "d": "11/2017"}, {"body": "sorry hear question exactly supposed statement posted two year old closed issue zero information exact problem", "d": "11/2017"}, {"body": "simply", "d": "11/2017"}, {"body": "facing issue jasonbodily proper way save handler function reference unbind later", "d": "11/2017"}, {"body": "jasonbodily nevcos know meet need simply use parameter define destroy function hook", "d": "11/2017"}, {"body": "hcysunyang yes meets need actually implemented way wondering best way thanks", "d": "11/2017"}, {"body": "stress", "d": "11/2017"}, {"body": "readme\u91cc\u663e\u793a\u7684\u662f\u6700\u65b0\u7248\u54e6", "d": "11/2017"}]