[{"title": "c", "body": "", "num": "12953", "d": "5/2018"}, {"title": "flowconfig editing vscode", "body": "want request feature report bug neither think ask question relating codebase floweditor config current behavior git pull react yarn install navigate project root directory upon flow type checking work vscode even though flowforvscode extension installed enabled typescript disabled per docs flowusenpmpackagedflow setting set true reason seems lack file project root adding empty reloading vscode makes work albeit loads linting errors mainly errors saw several different along scripts appear get run understand functions fine want flow work ineditor open project root directory correct way generating necessary file tried copypasting one still resulted bunch errors current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior ineditor flow type checking code referencing etc work opening fresh pull code zero linting errors versions react browser os affected issue work previous versions react na", "num": "12952", "d": "5/2018"}, {"title": "allow attribute custom elements", "body": "want request feature report bug feature current behavior creating custom element attribute currently possible interprete attribute special sense expected behavior like would great alias allows creating attribute custom element versions react browser os affected issue work previous versions react", "num": "12951", "d": "5/2018"}, {"title": "get warning adding strictmode redux application", "body": "upgrading added component root component const app props gt reactdomrender documentgetelementbyid app unsafe lifecycle methods found within strictmode tree router created browserrouter browserrouter created app provider created app created app muithemeprovider created app app componentwillmount please update following components use componentdidmount instead route switch componentwillreceiveprops please update following components use static getderivedstatefromprops instead connect withstyles translate maindrawer connect withstyles translate snackbar route switch componentwillupdate please update following components use componentdidupdate instead connect withstyles translate maindrawer connect withstyles translate snackbar learn warning strictmoderedux os ubuntu browser chromium react reactdom redux", "num": "12949", "d": "5/2018"}, {"title": "wrong eventtargetvalue", "body": "want request feature report bug bug current behavior given input field typeemail type valid email address type \u0441yrillic letter mailcom type \u0434 test copy paste result mailxn compdd cursor start input field expected behavior mailcom\u0434 input field change versions react browser os affected issue work previous versions react react browser chrome simple example", "num": "12948", "d": "5/2018"}, {"title": "event listener leak", "body": "want request feature report bug bug current behavior accumulating listeners interacting input elements unmounting elements interacted listener garbage collected correctly screenshot accumulation production build current behaviour bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example use either following repros follow reproduction instructions commentsreadme convenience reproduced better illustrated pulling repro less going expected behavior accumulation event listeners versions react browser os affected issue work previous versions react macos chrome react reactdom", "num": "12947", "d": "5/2018"}, {"title": "react class strict mode reserved word", "body": "webpack uglify tools compression appeared class reserved word code android strict mode reserved word", "num": "12945", "d": "5/2018"}, {"title": "fix recursive flow types", "body": "landed change flow types making types various types recursive properties pr may running older version flow luck finding record flow ran pr sure case pr merged even though recursive flow type definitions plus one flow errors unrelated detected problem recursive type definitions recent versions flow go infinite loop try infer types recursive solution may add detail types unblock things temporarily made looser type definitions", "num": "12941", "d": "5/2018"}, {"title": "reactrouter matching regex params minified react build", "body": "want request feature report bug bug current behavior using webpack bundle react application routing works perfectly react dev package stops working production build route file class rootclass extends component componentdidmount render return react dev build url matches path whereas production build matches glob matching redirect home component prod webpack const path require path const webpack require webpack const htmlwebpackplugin require htmlwebpackplugin const extracttextplugin require extracttextwebpackplugin const autoprefixer require autoprefixer const staticsourcepath pathjoin dirname static const sourcepath pathjoin dirname client const buildpath pathjoin dirname public moduleexports devtool cheapmodulesourcemap entry app clientappjsx output path buildpath filename name hash js resolve extensions webpackloaderjs webloaderjs loaderjs js jsx modules sourcepath pathresolve dirname nodemodules plugins new webpackdefineplugin processenvnodeenv jsonstringify production new webpackoptimizeuglifyjsplugin new webpackloaderoptionsplugin options postcss autoprefixer browsers last version ie gt context staticsourcepath new webpackhashedmoduleidsplugin new htmlwebpackplugin template pathjoin dirname indexhtml path buildpath filename indexhtml minify collapsewhitespace true collapseinlinetagwhitespace true removecomments true removeredundantattributes true new extracttextplugin filename name contenthash css allchunks true module rules test json loaders jsonloader exclude nodemodulesserver test jsx loaders babelloader plugins transformdecoratorslegacy plugins reacthotloaderbabel plugins emotion exclude nodemodulesserver test scss exclude nodemodules use extracttextpluginextract fallback styleloader use loader cssloader options minimize true postcssloader resolveurlloader sassloader test eot svg ttf otf woff use fileloader nameassets name hash ext test pnggifjpgsvg use urlloader amp nameassets name hash ext include staticsourcepath dev webpack const extracttextplugin require extracttextwebpackplugin const htmlwebpackplugin require htmlwebpackplugin const webpack require webpack const path require path const buildpath pathjoin dirname public function getentrysources sources processenvnodeenv production sourcespush webpackdevserverclient sourcespush webpackhotonlydevserver return sources moduleexports entry app getentrysources clientappjsx devserver historyapifallback true hot true inline true host disablehostcheck true port output filename public name js resolve extensions js jsx module rules test json loaders jsonloader exclude nodemodulesserver test jsx loaders babelloader plugins transformdecoratorslegacy plugins reacthotloaderbabel plugins emotion exclude nodemodulesserver test scss loaders styleloader cssloader resolveurlloader sassloader exclude nodemodulesserver test eot svg ttf otf woff exclude nodemodulesserver loader fileloader options name path name ext devtool sourcemap plugins new webpackloaderoptionsplugin debug true new htmlwebpackplugin template pathjoin dirname indexhtml path buildpath filename indexhtml minify collapsewhitespace true collapseinlinetagwhitespace true removecomments true removeredundantattributes true new extracttextplugin publicstylecss allchunks true current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior route match way prod react build dev versions react browser os affected issue work previous versions react react reactrouter chrome version official build", "num": "12940", "d": "5/2018"}, {"title": "client server rendering desynchronized documentation", "body": "server renders page properly client overwrites message", "num": "12938", "d": "5/2018"}, {"title": "classname converted", "body": "want request feature report bug bug current behavior html tags include dash convert rendertostring current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react react", "num": "12935", "d": "5/2018"}, {"title": "using electron ipc react", "body": "use electron renderer ipc react component js file wrote const electron require electron import electron electron nt work error reports module found ca nt resolve electron config webpack something stuck really days thank", "num": "12934", "d": "5/2018"}, {"title": "broken fixtures", "body": "want request feature report bug bug current behavior two fixtures broken due reference bundle reference introduced pr landed fixing see current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open either fixture firefox note error console page nt update expected behavior react andor schedule module running js page versions react browser os affected issue work previous versions react master", "num": "12930", "d": "5/2018"}, {"title": "webpack react running production mode dead code elimination applied", "body": "want request feature report bug report bug current behavior compiled production error thrown current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example related compilingbundling would substantial number dependencies react expected behavior nt throw error compiling webpack following guide given link development code included used set configured run files note license comments bundle suggest well included along could webpack configuration issue however entire bundle seems uglified packages seem exhibit anything production behavior want peck around bundle please enjoy versions react browser os affected issue work previous versions react nt issue webpack configuration", "num": "12929", "d": "5/2018"}, {"title": "possibly include field packagejson indicate dist file", "body": "want request feature report bug feature current behavior per react reactdom nt include field npm packages include directories production development umd builds prior discussion concluded development production builds different clear whether unpkg default dev production react nt include field leaves consumers bias working observable uses include modules people type resolves redirects webcompatible distribution people type hard figure one look unpkg hunt around umds considering hardcoding workarounds react amp reactdom popular modules people figuring require creating react wrapper sets field repoints react submitting another pr react reproposing default export expected behavior react reactdom would provide default indication files meanings versions react browser os affected issue work previous versions react thanks yall work react excellent", "num": "12928", "d": "5/2018"}, {"title": "preserve property getters state updates", "body": "want request feature report bug bug current behavior state updates property getters transformed literals eg code example expected behavior getters still available state updates versions react browser os affected issue work previous versions react", "num": "12927", "d": "5/2018"}, {"title": "event nt trigger direclty clicking maximum value", "body": "want request feature report bug bug current behavior directly loading choose maximum value input type range event nt fire onchange event fire maximum value input sandbox click maximum right input type range message console displayed value nt change expected click value input message displayed console value change click last value displayed expected behavior event trigger directly click maximum value input type range versions react browser os affected issue work previous versions react testing macos high sierra firefox safari chrome react get around behaviour change onchange oninput add blanck onchange still get drag behaviour safari iphone see codesandbox", "num": "12926", "d": "5/2018"}, {"title": "keep using legacy context api achieve new api", "body": "want request feature report bug like feature current behavior currently using legacy context api heavily typical component tree app might look bit like heavily nested component tree use context time pass functions booleans objects whatever without use props time trying avoid prop drilling much possible additionally context vars might set lifecycle methods first render maybe hoc provided data basically place expected behavior question ca nt see proper solution achieve next context api huge pain achieve make code completely unreadable way keep using legacy context api maybe react team could provide extra package maybe someone better idea achieve without pretty bad prop drilling place looking forward answers best patrick", "num": "12924", "d": "5/2018"}, {"title": "getderivedstatefromprops broken", "body": "want request feature report bug believe bug react regarding current behavior trying set state based props kind overrides state forever makes impossible edit later current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example follows add item click try edit expected behavior work like react versions react browser os affected issue work previous versions react think happens react seems work fine code different react version", "num": "12922", "d": "5/2018"}, {"title": "error element ref specified string owner set using npm linked library", "body": "want request feature report bug bugerror current behavior element ref specified string error using npm link current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior nt error versions react browser os affected issue work previous versions react react osx chrome doesnt matter hello really sorry reporting issue got nowhere else turn help identify problem webpack lib due reactbootstrapuncontrollable help understand wrong googled two days people seem issue one received answer solution npm ls react shows one line im sure takes account npm linked package believe issue related least similar", "num": "12921", "d": "5/2018"}, {"title": "node removed child node createportal", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12918", "d": "5/2018"}, {"title": "think used setstate", "body": "invented new design pattern work async code react look example thissetstate async updatemember gameid thisplayerid data closedd im need beginning performed updatemembers run closedd think pattern", "num": "12917", "d": "5/2018"}, {"title": "bug getderivedstatefromprops invoked change state component", "body": "bug getderivedstatefromprops invoked change state component codesandbox example see elementone clear state change state component static function getderivedstatefromprops invoked guide static getderivedstatefromprops lifecycle invoked component instantiated well receives new props elementone received new state elementtwo component willreceiveprops behavior ok react reactdom", "num": "12916", "d": "5/2018"}, {"title": "suspense timeout expiration siblings rendering issues", "body": "want request feature report bug bug current behavior code reproducing also deployed example zeit basic example using react suspense simple cache provider postponing text rendering showing loading spinners necessary see use nt really care passing always become expired right render open page loading bar appears immediately despite delay content placed next async component one going suspended looking react suspense tests assumed sibling elements rendered way expected behavior component shows placehold expired sibling content shown even async component suspended built sources current master updating flag also used nt seem make difference overall really satisfied feature hope code correctly shows real bug", "num": "12915", "d": "5/2018"}, {"title": "questions regarding propschildren", "body": "want request feature report bug questions questions regarding propschildren official react documentation reactchildren read opaque data structure mean exactly think general three possibilities transparency data structure case every aspect data structure open well defined right term opaque data structure would completely wrong therefore case obviously case case aspect data structure open clear would mean whenever use always use combination one mmmh really one knows actual data structure would imply neither allowed use examples common seems case obviously also case case aspects data structure open well defined would open possibility one even examples case valid would mean exact specification aspects well openly defined aspects really opaque maybe missed something react documentation think really exactly specified last least question exactly nt case children one ore always array done preact example would make things much easier would nt many thanks advance clarifications", "num": "12913", "d": "5/2018"}, {"title": "broke", "body": "recent blog post announced bugfix getderivedstatefromprops called every time component rendered regardless cause update reality broke realworld library gets called every rerender suppose component watches property change recommended approach store property value like user changes input value property must updated js onchange event gt thissetstate value thispropsonchange static getderivedstatefromprops props state propsvalue statevalue return value propsvalue return null timeline first handler triggers calls state got updated called new react nt updated yet condition triggers hence gets reset condition becomes already bug single source truth per official react recommendations next line executes updates turn calls condition triggers becomes case actually breaks phone number input component design requirement let user set externally turn must update country flag icon worked react react though gets called internal state update resulting country flag reset every time user types character incomplete phone number ca nt source country flag eg usa canada start mention whole nanpa region", "num": "12912", "d": "5/2018"}, {"title": "get render function html multi page traditional website", "body": "want request feature report bug think feature like question current behavior hello possible somehow get render function script tag html multi page site would useful asking want edit pages admin panel method could insert html would nt rebuild whole project get new javascript chunks pages rebuilds code splitting buildjs file would contain components vuejs create build get content html like javascript mainjs import app appjs new vue el app render h gt h app appjs export default vuecomponent app template pagetemplate data return world world mounted components html hello world", "num": "12907", "d": "5/2018"}, {"title": "reactdom calls component constructor render function twice strict mode", "body": "either bug intentional behavior sure render component wrapped tag component constructor render functions get called twice nt cause noticeable problems send wild goose chase debugging session codepen reproduces issue using reactreactdom", "num": "12906", "d": "5/2018"}, {"title": "htmlfor attribute labels working voiceover safari", "body": "want request feature report bug bug current behavior attribute behaving consistently across browsers voiceover enabled chrome label value announced voiceover input receives focus expected safari however label value announced voiceover able get voiceover announce expected label safari adding attribute inputs expected behavior using suffice get voiceover read expected label value across browsers versions react browser os affected issue work previous versions react react chrome safari macos high sierra voiceover enabled", "num": "12905", "d": "5/2018"}, {"title": "extract react prop ref", "body": "hello following problem wondering documentation issue react nt support behavior let say following html library allows specify child node namely passing following function library would render following use following click event nt happening tried many variations tried using instead behavior nt change sure two attributes different anymore problem inability refer react prop using ref thanks anything explanation confusingunderclarified please let know", "num": "12903", "d": "5/2018"}, {"title": "synthetic keyboard events nt implement code property", "body": "want request feature report bug feature current behavior undefined expected behavior useful part keyboardevent spec versions react browser os affected issue work previous versions react react saw mention today changelog", "num": "12902", "d": "5/2018"}, {"title": "pointer event nt registering touch ios using safari chrome", "body": "want request feature report bug believe bug current behavior nt registering using chrome safari mobile viewing mobile within chrome dev tools works fine log mobile unresponsive codesandbox logs pointertype expected behavior register contact events still covering mouse events quick gif showing correct behavior screen amp console url nt running versions react browser os affected issue work previous versions react browsersos working ios either safari mobile prior versions pointer events new feature introduced react blog post", "num": "12901", "d": "5/2018"}, {"title": "elements inside fragment get added one time", "body": "want request feature report bug believe bug current behavior adding multiple elements inside fragment get added one time current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example setup demo app steps repro click edit button first card watch happens visually dom break subtree modifications helpful see cancel button briefly hover state background red also see dom using break subtree modifications parent div cancel button gets added save button gets added second render behavior depends browser cancel button briefly hover state appears red cancel button gains hover state keeps red move mouse firefox visually behaves expected using firefox browser would detected issue expected behavior clicking edit button save cancel buttons get added dom time hover state buttons always properly applied see clicking edit second card uses span instead fragment versions react browser os affected issue work previous versions react react unsure worked previous version", "num": "12899", "d": "5/2018"}, {"title": "minor release causes breaking changes getderivedstatefromprops", "body": "according semver nonbreaking changes supposed go minor patch version releases release made breaking changes entire codebase running perfectly dumpster fire soon raise dependency thing changelog breaking change properly call getderivedstatefromprops regardless reason rerendering acdlite please revert change save provide proper documentation change actually entails use adjusted already implemented", "num": "12898", "d": "5/2018"}, {"title": "error boundary treat thrown js error", "body": "want request feature report bug question current behavior error boundary successfully intercepts javascript errors displays fallback ui seems javascript errors still gets thrown appear red browser console caught cypress tests making fail expected behavior nt know asking error boundary throw original js error lets js throw would normally error boundary catches original thrown error prints using designed behaviour error boundary regarding original javascript thrown error versions react browser os affected issue work previous versions react use google chrome react", "num": "12897", "d": "5/2018"}, {"title": "poc resolve minified react errors devtools using svg images", "body": "want request feature report bug feature current behavior currently react production mode errors thrown display link view unminified error utilizing chrome custom formatter attribute possible load image custom url using svg nodes possible recreate full error message proof concept would require server parse error messages output svg would provide concise error messages without leave devtools would nt affect existing bundle size sideeffects ie svg load devtools open retains behaviour browsers firefox devtools nt support displaying images", "num": "12896", "d": "5/2018"}, {"title": "react context providers cause consumers rerender even value nt changed", "body": "want request feature report bug bug current behavior documentation react context states consumers descendants provider rerender whenever provider value prop changes changes determined comparing new old values using algorithm objectis example shows case provider rerendered identical value indicated counter consumer rerenders every time provider rendered regardless whether value changed misunderstanding docs intended behavior context used efficiently expected behavior would indicate one initial render subsequent renders would cause consumers rerender value nt changed case types values scalar object function etc versions react browser os affected issue work previous versions react observed", "num": "12888", "d": "5/2018"}, {"title": "bug eventnativeeventcurrenttarget null", "body": "hello issue onclick evt evttarget evtnativeeventtarget evtcurrenttarget evtnativeeventcurrenttarget fact eventnativeeventcurrenttarget shows null completely different object nt expected equal someone clarify happening", "num": "12885", "d": "5/2018"}, {"title": "reactistypeof nonelements", "body": "current behavior currently works element types allow pass raw know type use case need special cases forwardrefs need know type source target components currently would need turn elements first functions also issue since use function internally js const forwardcomponent reactforwardref gt reactistypeof forwardcomponent undefined reactistypeof reactcreateelement forwardcomponent symbol reactforwardref expected behavior ideally could pass component get type versions react browser os affected issue work previous versions react reactis", "num": "12882", "d": "5/2018"}, {"title": "support pointer events", "body": "pointer events currently unknown event handler properties react current behavior js fiddle shows attaching event div produces warning console expected behavior although pointer events supported apple still useful developers targeting platforms perhaps good middle ground would allow print console warning saying may work happy put together pr someone points right direction", "num": "12881", "d": "5/2018"}, {"title": "efficiently ignore irrelevant updates context", "body": "using context represent user focus large app app many hundreds focus routes listen focus location app much like routes react router focus transitions irrelevant routes routes lose focus gain unaffected today context consumer route component computes derived state eg etc provides derived state props wrapped component wrapped component optimized problem hitting react appears meaningful amount work every time context consumer rerendered even though wrapped component nt rerender adds quickly across focus routes next step better profiling production mode dev appears per route problematic need way efficiently prevent subscribers rerendering new value focus location case nt relevant feature almost right us limitation unsuitable scenario unbounded list booleans example could use update invalidated components alternatively took hook could use consider plug restricted alternative nothing like forthcoming likely revert using emittersubscriber model batched update nonideal us however state need propagate new components single render pass context particularly good", "num": "12876", "d": "5/2018"}, {"title": "index ca nt key react element arrays", "body": "index ca nt key react element arrays thanks", "num": "12873", "d": "5/2018"}, {"title": "submitreset inputs lose text valueundefined", "body": "want request feature report bug bug current behavior creating results button text behaviour seen pr open proposed fix expected behavior input use browser default value input submit en etc versions react browser os affected issue work previous versions react react chrome macos works react unsure earlier versions", "num": "12872", "d": "5/2018"}, {"title": "broken link reactreconcilerreadmemd practical examples react native", "body": "readmemd link react native practical example broken", "num": "12870", "d": "5/2018"}, {"title": "dynamic components rendering object object", "body": "want request feature report bug report bug current behavior description done small util lazy load components approach store lazycomponent state import componentdidmount callback triggering rerender simplified example seen problem lazycomponent loaded component updated new children set text instead children resulting object object remarks behaviour different depending react version build tool works works nodeenv production works nodeenv development fails therefore assume something different handle environment variables replacement thing works totally fine using think bug steps reproduce download sample repository install dependencies run build app start http server go file choose wich version app load fails works go file render method component choose render rendering result uncaught domexception failed execute removechild node node removed child node navigate page click expected behavior render lazyloaded component independently tool used building app environment variable value moreover keep working since previous versions react versions react browser os affected issue work previous versions react issue affectes version react nt affect previous versions browser google chrome official build os linux mint thanks", "num": "12866", "d": "5/2018"}, {"title": "app unmounts caught error", "body": "want request feature report bug bug current behavior basically levels components shelltsx catches tsx class shell extends reactcomponent state shellstate alerts someviewtsx always throws render tsx class someview extends reactcomponent fires thing new errors thrown app still unmounts anyway understand happening someview render always throws error componentdidcatch handles error shell rerenders someview throws apparently react shuts probably easy way avoid endless loop expected behavior app unmount abortblacklistignore miscreant component could nlevels deep app expect work like codepen example versions react browser os affected issue work previous versions react react explode use less colourful language deserves react componentdidcatch neat horrendous neat mostly standard way catch handle errors horrendous unmounts entire app creating unrecoverable state seen spotify lately anything unmounting developmentonly bugpretendingtobeafeature disabled hella annoying cursory google search clearly shows countless hours wasted", "num": "12865", "d": "5/2018"}, {"title": "update readmemd", "body": "replace since component logic written javascript instead templates easily pass rich data app keep state dom since component logic written javascript instead templates easily pass rich data app keep state dom", "num": "12864", "d": "5/2018"}, {"title": "feature request allow fragments accept classname prop", "body": "use case set elements wrapped class depending certain scenarios example test component jsx import react react class test extends reactcomponent render const wrapper thispropswrap div reactfragment export default test scenario html child child scenario jsx html child child even though examples actually output way intended error still thrown solution allow prop fragments simply ignore nt anything course many way achieved without using fragments think approach really clean", "num": "12860", "d": "5/2018"}, {"title": "provide hoc new context api", "body": "find needing higherorder component every using render props get stuff context lifecycle methods pretty easy create hoc render prop wondering open yall would adding hoc new context api already userland little helper js function withcontext context component return props gt return context gt const appwithcontext withcontext mycontext app would useful builtin new context api something like js const mycontext reactcreatecontext const appwithcontext mycontextprovide app optionalnameoftheprop second argument prop name could default anyway thought open discussion making actual pr adds thanks consideration edit removed example using", "num": "12859", "d": "5/2018"}, {"title": "reactstrictmode causes setstate fire twice", "body": "want request feature report bug bug current behavior wrapping fired twice current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsfiddle clicking title checking console see called twice callback however called expected behavior sure might related behaviour might intended using previous state set new one component breaks fired twice instance toggle components nt work versions react browser os affected issue work previous versions react react", "num": "12856", "d": "5/2018"}, {"title": "const id options error installing reactjs", "body": "want request feature report bug bug current behavior ca nt run reactjs current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react latest version node version npm version codes found followed tutorial", "num": "12855", "d": "5/2018"}, {"title": "feature need error message state modified misuse spread operator", "body": "want request feature report bug feature current behavior see fiddle click cities check console nt modified directly state without knowing misuse spread operator side thus error came telling modifying state directly expected behavior error like even maybe lesson spread operator time versions react browser os affected issue work previous versions react use last version react expect previous versions react", "num": "12854", "d": "5/2018"}, {"title": "getderivedstatefromprops called instantiation used ssr", "body": "want request feature report bug probably bug current behavior standard cra app getderivedstatefromprops called render time new props passed component expected code run trough reactdomserverrendertostaticmarkup ssr render method called getderivedstatefromprops documentation getderivedstatefromprops invoked component instantiated well receives new props thank versions react browser os affected issue work previous versions react react", "num": "12848", "d": "5/2018"}, {"title": "setstate async", "body": "heard method async confused demo log console anyone know", "num": "12840", "d": "5/2018"}, {"title": "cursor jumps backspacing input typeemail space character", "body": "want request feature report bug bug current behavior hit backspace value space character removing cursor jumps beginning input simple demo repro expected behavior cursor remains end input versions react browser os affected issue work previous versions react tested react possible related issue", "num": "12832", "d": "5/2018"}, {"title": "unsafe lifecycle functions longer defined via mixins", "body": "want request feature report bug bug current behavior unsafe lifecycle function aliases merged defined mixins triggering error uncaught error reactclassinterface attempting define component conflict may due mixin reproduce rename cwm cwrp cwu functions unsafe versions project mixins cause functions duplicated expected behavior lifecyle function continue work expected called via unsafe aliases supposed regard redefiningmerging migration path documentation updated indicate", "num": "12830", "d": "5/2018"}, {"title": "callback reacttestrenderer component changes", "body": "want request feature report bug feature current behavior many react components render multiple times automatically take graphql component first render loading spinner data fetched reacttestrenderer difficult get snapshot consistently render types components currently set interval timer check component tree see data loaded thus rendered approach results bunch unnecessary checks slows tests interval timer run component rendered expected behavior would expect reacttestrender allow callback invoked time component component tree changes basically component ran would expect api like would useful reactdom reactnative versions react browser os affected issue work previous versions react proposal new feature nt affect existing react versions", "num": "12827", "d": "5/2018"}, {"title": "custom element size attribute nt rendered", "body": "want request feature report bug report possible bug current behavior custom element attributes render attribute appears stripped react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example testing web component integration react given collection possible attributes values test map create multiple buttons attributes rendered value expected however attribute missing expected behavior attribute value rendered versions react browser os affected issue work previous versions react react google chrome custom element attributes function expected integrated angular vanilla setup react", "num": "12825", "d": "5/2018"}, {"title": "despite followed react components creation standards style class gives deprecation warning", "body": "using react ver created react js components using style class patterns using reactcreateclass anywhere app still client side node server getting deprecation warning like shown screenshot react component code per class style need worry warning created react component per standard guideline mentioned link import react component react class app extends component static contexttypes static proptypes render return componentdidmount const params location actions thisprops export default app please guide remove warnings nt want use createreactclass dropinreplacement want stick pattern class existing react ver without upgrading react please enlight approaches follow", "num": "12819", "d": "5/2018"}, {"title": "map defined", "body": "using react device galaxy note using native browser error uncaught referenceerror map defined working browsers device load page within application wrong use default browser", "num": "12816", "d": "5/2018"}, {"title": "rendertostaticmarkup output inconsistent attributes case", "body": "hey seems minor issue web since browsers normalises attribute cases end eg major issue emailtargeted markup results buggy behaviour across clients want request feature report bug potential bug current behavior attribute names converted lowercase js import react react import rendertostaticmarkup reactdomserver sample usecase actual code notice first props lowercased result next consolelog rendertostaticmarkup code outputs next result html current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior attribute names lowercased eg html based supported html attributes docs section could nt find pattern whenever react decides lowercase name listed first one outputted expected versions react browser os affected issue work previous versions react nt tried older react reactdom versions updated found related issue argument would compat issues mails definitely edge case thought", "num": "12815", "d": "5/2018"}, {"title": "reactforwardref element type invalid react native", "body": "want request feature report bug help reactforwardref api bug possible may issue react native wanted check first incase use forwardref api incorrect docs explain intent api well implementation little confusing current behavior following code results error executed import react react import textinput reactnative const custominput reactforwardref props ref gt return export default class app extends reactcomponent render return error reported invariant violation element type invalid expected string builtin components classfunction composite components got object check render method app versions react browser os affected issue work previous versions react", "num": "12814", "d": "5/2018"}, {"title": "purecomponent almost component nt shouldcomponentupdate method", "body": "version purecomponent almost component nt shouldcomponentupdate method", "num": "12812", "d": "5/2018"}, {"title": "provide ways postmortem analysis maximum update depth exceeded error production", "body": "want request feature report bug feature current behavior error logging systems reporting error production maximum update depth exceeded happen component repeatedly calls setstate inside componentwillupdate componentdidupdate react limits number nested updates prevent infinite loops however reliably reproduce error affects small percentage users moreover inhouse components several thirdparty components impractical audit every single component find caused expected behavior would much easier us debug nested update count exceeds current nestedupdatelimit could see components involved nested update chain versions react browser os affected issue work previous versions react using react", "num": "12811", "d": "5/2018"}, {"title": "causes classname translate classname class", "body": "want request feature report bug bug current behavior add attribute button element jsx along classname attribute classname translated classname instead class causes cssinjs engines fail style button well keeping css styling using within chromecast sender app breaks behavior chrome looking replication case courtesy materialui team found ca nt fix nt something triggered expected behavior classname becomes class behaviors added button chromecast framework apply correctly react involved versions react browser os affected issue work previous versions react yes app worked fine", "num": "12810", "d": "5/2018"}, {"title": "componentdidcatch method called via reacttestrenderer", "body": "want request feature report bug may request feature current behavior componentdidcatch handled reacttestrenderer current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior like test componentdidcatch handler inside jest enzyme way could make behaviour componentdidcatch handler configurable versions react browser os affected issue work previous versions react latest version react enzyme framework", "num": "12803", "d": "5/2018"}, {"title": "try remove deprecation warning react getting error typeerror serializing native function bound oncewrapper", "body": "try remove warning accessing createclass via main react package deprecated app version react per steps included createreactclass npm package react app made according changes react component giving mentioned serialize typeerror error typeerror serializing native function bound oncewrapper stringreplace serialize please help missing code going wrong component code per new createreactclass guidelines changed code main rendering component react ssr application ie htmljs import react proptypes react import component createreactclass import reactdom reactdomserver import serialize serializejavascript import helmet reacthelmet var html component proptypes render const bundle thisprops const content component reactdomrendertostring component const head helmetrewind export default html want remove deprecation warnings app react without upgrading react please help removing errors", "num": "12799", "d": "5/2018"}, {"title": "reactart react context api working correctly", "body": "want request feature report bug bug current behavior use rendrer picking default value defined initial creation context rather values provided provider actual behabiour initial value javascript import react react import render reactdom var reactart require reactart var group reactartgroup var shape reactartshape var surface reactartsurface var reddotpath z const consumer provider reactcreatecontext x const app gt x gt return render documentgetelementbyid root demo expected behavior provided value", "num": "12796", "d": "5/2018"}, {"title": "deepextend sequrity", "body": "want request feature report bug bug current behavior see problem turns mass moment problem said projects world fact packages kernel level think need fix check packages publishing turns core converts packets one single entity called react develop study react like react expected behavior fearfully versions react browser os affected issue work previous versions react react latest windows", "num": "12794", "d": "5/2018"}, {"title": "rename", "body": "want request feature report bug bug current behavior method used enqueue state change labelled semantically meaning set state implicitly usually wrongly understood expected behavior perhaps taking hard stance semantics probably get controversy well believe current method actually treated bug api naming think renamed something lines perhaps someone else come nicer name seen even people quite experienced react make rookie mistake like synchronous function go bughunting guilty well deeply nested contexts always obvious react fiber think important stay relevant let bite bullet breaking change please lifecycle method deprecations quite magnitude done one would think done hard people find amp replace fact sure beginners would even end fixing undiscovered errors breaking change pros good things cons make people hold grudge function called whatever application logic painstakingly change cursing rearranging logic extremely large organisations like facebook going spend time unmaintained projects still sure con would make code expresses clearly newcomers would less prone mistakes type extra characters strike sane use autocomplete versions react browser os affected issue work previous versions react lt far", "num": "12790", "d": "5/2018"}, {"title": "synthetic events violate nonbubbling event specification", "body": "want request feature report bug bug current behavior native blur focus events bubble synthetic events violates nonbubbling event specification currently implemented react behaves like native focusout event behaves like native focusin event demos react demo react demo expected behavior synthetic events bubble tested os mac os affect bug browsers chrome firefox affect bug react versions bug present versions", "num": "12786", "d": "5/2018"}, {"title": "guys particularly like react", "body": "want safe yes current behavior flight excellent given use good ide phpstorm webstorm difficult future support project use full power react redux doubly difficult github recognize jet inserts html distinguishes red personally fought insertions lot meat comes uncontrollability project central page react initially structure project unknown understand react needed exactly gives except view described gives angular employee angular want show beautiful relatively simple angular expected behavior convince follow path react versions react browser os affected issue work previous versions react react latest windows debian regards", "num": "12783", "d": "5/2018"}, {"title": "react setstate parent onmouseenter child incredibly sluggish", "body": "issue type bug current behavior refactoring code graph components built using composition create instance looks somewhat like defined method vizzy lets set current index data shown graph passing function child components like class vizzy extends component state currentactivedata value setactivedata dataindex gt thissetstate currentactivedata dataindex render const currentactivedata thisstate const setactivedata thissetactivedata gets passed child vizzysvg need method run onmouseenter little bit prop drilling make look like data vizzy state gets passed vizzylegend ultimately need data available class vizzysvg extends component state vizzywidth vizzyheight componentdidmount gt thissetstate vizzywidth thisrefsvizzyrefoffsetwidth vizzyheight thisrefsvizzyrefoffsetheight render const vizzywidth vizzyheight thisstate const setactivedata currentactivedata thisprops barsjsx call method onmouseenter major issue extremely sluggish slow even causing issues css transition put method onclick problem gone however eliminates intended behavior going constructing similar graph using old component built handle interaction updating dom problem nt arise code less scalable maintainable need get refactor work also use inside barsjsx console updates expected animation fluent issues css whatsoever would expect data get updated fluently using onmouseenter setstate like updating dom using even jquery would figured drilling props levels would issue albeit ideal running react ubuntu nt know behavior older versions react started refactor updating edit may issue version firefox reason behavior chrome much smoother check updating firefox helps edit seems updating firefox helped longer considered bug performing pretty much par chrome yet still slower using directly manipulate dom using much expect using prop drilling setting state nested components using react", "num": "12782", "d": "5/2018"}, {"title": "strange lifecycle forwardref children", "body": "want request feature report bug bug demo code jsx import react component forwardref react class inp extends component state value static getderivedstatefromprops nextprops prevstate consolelog receive props return value nextpropsvalue onchange e gt consolelog onchange thissetstate value etargetvalue gt consolelog setstate render const value onchange others thisprops const inpwithref forwardref props ref gt class test extends component render return current behavior type something trigger gt gt gt see console current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example demo expected behavior expected behavior gt gt gt versions react browser os affected issue work previous versions react", "num": "12781", "d": "5/2018"}, {"title": "clarifying key warning fragments", "body": "apologies discussed searched nt find anything currently create array elements without keys get key warning message create fragment elements without keys today assumed meant ah react introduced clever new tech obviated need keys learned today case right believe make dynamic list elements throw fragment get key warning message bad performance nonstable updates best tell reason difference behavior fragments expected understood different semantic meaning arrays used static content relying expectation avoid major gotcha would assume would explicitly mentioned docs fragments prominently featured warningstyle yellow box instead nt believe mentioned dual behaviors make lot sense react ca nt figure whether siblings need keys great us way explicitly tell nt seems important subtle nuance would call lot documentation instead none find please let know misunderstood figure likely", "num": "12776", "d": "5/2018"}, {"title": "getting error using component another component separate files", "body": "uncaught typeerror read property schema undefined current behavior jsfiddle", "num": "12775", "d": "5/2018"}, {"title": "thisstate nt get current state properly", "body": "related issue found work around checking state onchange ca nt figure behaves like first place example", "num": "12774", "d": "5/2018"}, {"title": "video tag issues playing video continuously", "body": "want request feature report bug current behavior running drag drop control setup property particular control structure looks something like left side controls center draggable area right side properties control controls one video tag dragging draggable area everything works fine till video control inside draggable area one checkbox properties area named check video plays automatically code return current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior rerender whole video change property property changed rerenders whole video starts use third party html parser video nt restart playing versions react browser os affected issue work previous versions react chrome latest version", "num": "12773", "d": "5/2018"}, {"title": "reacttestutilssimulate regression react", "body": "want request feature report bug bug current behavior testutils module react nt immediately flush updates dom like used version previous current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example made gist readytogo html files open either one browser expected behavior behavior triggered via module state flushed dom immediately assertions may made next line versions react browser os affected issue work previous versions react react affected issue yes used work version previous could immediately assert next line changes flushed dom searched react tests test actually making style assertion updates actually flushed dom could nt find anything", "num": "12772", "d": "5/2018"}, {"title": "multiple refs nt work stateless component", "body": "hello want request feature report bug report bug stateless component like const demo props gt let input span current behavior second span always first one input okay expected behavior multiple refs work p versions react browser os affected issue work previous versions react nt know thanks", "num": "12771", "d": "5/2018"}, {"title": "es release aside cjs umd", "body": "rollup rollupplugincommonjs struggling even working import reactdom also support esmodules could es release well one minute making repo demo ah thanks dan actually works sure issue project", "num": "12769", "d": "5/2018"}, {"title": "defaultchecked prop sets checked attribute", "body": "type common use cases projects relying correct dom emissions description unclear following known issue take consideration snippet current behavior setting prop inputs types sets attribute dom element setting prop inputs type attribute correctly set leaving attribute unchanged expected behaviour like mentioned expected behavior would prop set attributes corresponding dom node like case prop", "num": "12765", "d": "5/2018"}, {"title": "throws", "body": "want request feature report bug bug current behavior handler svg element handler sets state property causes element hidden via css makes throw line seems removed trycatch protection working around problem stubbing focus like versions react browser os affected issue work previous versions react worked", "num": "12763", "d": "5/2018"}, {"title": "cursor jumps end input onchange nt call setstate", "body": "current behaviour input function returns value equalling prior value causes cursor jump end input comment formally raised feature request repro sandbox code javascript import react react import render reactdom class input extends reactcomponent state value typeanumber onchange e gt let nextvalue etargetvalue render return render documentgetelementbyid root expected behavior like cursor jump special case returned changed value rejected change ie noop change understand fully react predict cursor position value changed however currently find npm module allows freelength regex filters vs fixed length mask way implement filter without cursor jumping case regarding nonclarity deal general case nonjumping cursors think modernized best practice example would ideal discussion still lives totally fine issue closed assisting instead education handling general case though would still nice api possible", "num": "12762", "d": "5/2018"}, {"title": "add twitter card meta tag using reacthelmet render data dynamically react app", "body": "", "num": "12761", "d": "5/2018"}, {"title": "typos reactpurecomponent hard debug", "body": "want request feature report bug feature current behavior typo get unhelpful error message nt give idea error occurring eg generate error normally would notice right away reason typo occurs nt see immediate render result good luck finding took hours current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior would expect error message identifies location syntax error versions react browser os affected issue work previous versions react react chrome mac os", "num": "12759", "d": "5/2018"}, {"title": "open react application phone show error", "body": "current open react application phone show warning failed prop type invalid prop supplied expected reactnode switch warning failed prop type invalid prop supplied expected reactnode hashrouter warning failed prop type invalid prop type supplied expected single reactelement provider react reactdom reactredux reactrouterdom redux", "num": "12758", "d": "5/2018"}, {"title": "best practice meaningful componentstack production", "body": "using sentry bug reporting production build often encounter like course help locate problem wondering best practice get usable information errorboundaries componentstack following options seem available set uglify increases bundle size works set manually components usually feasible use babel plugin somehow misses majority components write tool resolves names using sourcemaps curious hear people using first option works well feel like elegant solution", "num": "12757", "d": "5/2018"}, {"title": "give attribute developer ask react patch rendered content identical server client", "body": "want request feature report bug feature current behavior react expects rendered content identical server client intentionally need render something different server client twopass rendering like attribute derived screen size since nt know real screen size server side might pass rendering like following constructor props super props thisstate hasmounted false thisstyles objectdefineproperties container get gt typeof window undefined return height let height thispropsviewsizeheight return thisstatehasmounted height height height componentdidmount thissetstate hasmounted true render let thisstyles return code demonstrate intentionally render wrong height initially browser update second run dom keep inconsistent vdom pass renderings keep unchanged react wo nt update dom expected behavior give attribute developer ask react patch single element attribute text content unavoidably different server client hydrating lucky rendered content identical server client nothing", "num": "12754", "d": "5/2018"}, {"title": "expose way creating reacttestinstance react dom nodes", "body": "want request feature report bug would like request new feature current behavior moment way create instance would love able something like libraries enzyme used test react components full dom rendering providing api find components get information far know way querying component tree created without relying internals react nodes means enzyme order support full dom rendering querying api interact react nodes directly reliance causes problems enzyme whenever react adds new node type forwardref contextproviderconsumer example started rfc proposes enzyme uses layer top react node objects allows library decoupled internals react solution proposed rfc relies able create component tree please let know something would consider", "num": "12753", "d": "5/2018"}, {"title": "requestanimationframe supported error unit testing transition react component", "body": "use transition react component similar example transition happens button click unit test const graphdata data const transactiondetail displayfrom displayto const component shallow describe timelinegraph function test render svg function expect componentfind svg tohavelength test handle click anchor tag gt const handleclick componentfind first expect handleclickproplength toequal test suite failed run test component get exception issue thrown even try use timer way overcoming thrown exception removing thrown exception code mentioned issue info react enzyme os windows", "num": "12752", "d": "5/2018"}, {"title": "development log console object triggering errorwarning", "body": "feature request often time consuming determine deeply nested component triggered warningerror logging issue objectfunction console well way least look name id whatever props help identify development mode much info possible wanted", "num": "12750", "d": "5/2018"}, {"title": "ie prompt remember password regression bug since", "body": "note issue seems solved edge ie see issue already raised since closed opening new one get traction still issue ie edge works nt work nt work nt work order test effectively follow steps using edge go settings gt gt view advanced settings privacy services make sure offer save passwords enabled make sure nt passwords saved codesandboxio domain steps reproduce works go sandbox type username password hit submit see confirmation panel saving passwords refresh page type another username password hit submit see another confirmation panel saving passwords refresh page click first input see list previously used usernames steps reproduce nt work remove previously saved passwords codesandboxio domain go nonworking sandboxes type username password hit submit password confirmation panel refresh page click first input list previously used usernames", "num": "12749", "d": "5/2018"}, {"title": "warning message recommends using soon deprecated lifecycle methods", "body": "versions react browser os affected issue work previous versions react react current behavior warning message recommends using soon tobe deprecated lifecycle method warning content rendercomponentwillmount expected behavior warning messages inline deprecation plans", "num": "12748", "d": "5/2018"}, {"title": "render children use singletons", "body": "proposed feature returns unique react component could used anywhere children would get rendered single time every location returned singleton used useful declaring svg filters combined anything else including portals fragments use case ripple component similar materialui could get applied anything including ripple effect makes use svg filter gooey effect easy us bake svg ripple component need svg rendered anywhere dom make use singleton component handle rendering svg component rendering svg gets destroyed responsibility falls upon next component list example jsx const filtersingleton reactcreatesingleton const fancyeffect gt return used throughout application svg rendered dom implementation jsx reactcreatesingleton function const instances", "num": "12744", "d": "5/2018"}, {"title": "warning received nonboolean attribute", "body": "want request feature report bug report current behavior pass boolean prop say get warning prop nt happening react need use prop true prop true current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior getting warning versions react browser os affected issue work previous versions react react google chrome", "num": "12741", "d": "5/2018"}, {"title": "componentdidcatch working properly react", "body": "using componentdidcatch method catch errors child component show error msg instead broken ui sample code ca nt share client code base created sample code see error ui second second ui breaking giving error error crashed childrender c render thisstatecounter simulate js error throw new error crashed return thisstatecounter packagejson file dependencies react reactdom reactrouter reactrouterdom reactscripts import react component react import errorboundary errorboundary import child child class app extends component constructor props super props thisstate child components go inside errorboundary render return counter inside error boundary crashes error boundary replace export default app import react component react class child extends component constructor props super props thisstate counter thishandleclick thishandleclickbind handleclick thissetstate counter gt counter counter render thisstatecounter simulate js error throw new error crashed return thisstatecounter export default child import react component react class errorboundary extends component constructor props super props thisstate error null errorinfo null componentdidcatch error errorinfo catch errors components rerender error message thissetstate error error errorinfo errorinfo also log error messages error reporting service render thisstateerrorinfo error path return something went wrong thisstateerrorinfocomponentstack normally render children return thispropschildren export default errorboundary", "num": "12740", "d": "5/2018"}, {"title": "react js version going deprecated one please enlight steps migration version", "body": "react js version going deprecated one please enlight steps migration version", "num": "12739", "d": "5/2018"}, {"title": "createreactclass missing interface constructor class", "body": "want request feature report bug feature current behavior react deprecated liftcycle method released used define compoent properties like method could define properties like use createreactclass expected behavior add interface named constructor createreactclass", "num": "12737", "d": "5/2018"}, {"title": "forwardref causes componentwillreceiveprops setstate", "body": "want request feature report bug bug current behavior inside calling causes called completed see demo expected behavior docs nt seem forbid behavior calling thissetstate generally trigger unsafecomponentwillreceiveprops sure technically bug however cause older code nt yet use reducer syntax stop working wrapped caused headscratchers refactoring old code reporting case versions react browser os affected issue work previous versions react appears given specific forwardref nt apply older versions", "num": "12736", "d": "5/2018"}, {"title": "use set component state within setinterval function", "body": "question apologize nt best place ask trying work component internal state within setinterval function know asynchronous problems need aware also know pass setstate function would help protect async problems ca nt need use changed state within setinterval function safe working different way around problem seen following nearly answers question trouble visualizing adapting maybe behavior fine stackoverflow answer sectiontimerhandler gt const elapsedsectiontimems thisstateelapsedsectiontimems stuff elapsedsectiontimems thissetstate elapsedsectiontimems restartsectiontimer gt thissectiontimeintervalid windowclearinterval thissectiontimeintervalid thissectiontimeintervalid windowsetinterval thissectiontimerhandler thissetstate elapsedsectiontimems would something like following bettersafer even though using earlier function", "num": "12735", "d": "5/2018"}, {"title": "child component correctly deletes parent state object entry wrong child unmounted upon rerender", "body": "component keeps javascript object renders components child also receives callbacks operate parent state getting behavior javascript object updated correctly delete wrong node unmounted video relevant code export default class order extends component constructor props super props commit gt consolelog thisdata thisdatatrim length gt socketemit article client insert name thisdata addneworderitem async gt let thisstatenewitems thisstatenewitems deleteneworderitem async id gt let thisstatenewitems updateneworderitem async id value gt let thisstatenewitems id value rendernewitems thisstatenewitems return null render const data export default class orderitem extends reactcomponent state null constructor props super props thissetdata props componentwillunmount consolelog unmount thispropsid setdata props thisdata props delete thisdataondelete delete thisdataonupdate handleimageinsert event gt let objectfile eventtargetfiles objectfile return handleunitarypricechange e gt let newprice parsefloat etargetvalue newprice nan thisdataarticledataunitaryprice newprice thisupdatedata handlebriefchange e gt thisdataarticledatabrief etargetvalue thisupdatedata handletablechange update gt thisdata thisdata update thisupdatedata updatedata gt thispropsonupdate thispropsid thisdata confirmdelete gt thispropsondelete thispropsid render const data articledata", "num": "12734", "d": "5/2018"}, {"title": "consumer provider properties consumer", "body": "higher meaning properties type reactconsumer type convenient usually use provider jsx import mycontext mycontext jsx import mycontext mycontext would interested knowing documented preferred way whether use full legit simplify", "num": "12733", "d": "5/2018"}, {"title": "context api bitmask related questions", "body": "playing context api bitmask feature bail unwanted rerender dynamic model json object context value dynamic meant number keys structure json object unknown json object changed know key changed seems difficult turn unknown keys static predefined bitmasks thought use case common bailout feature handle easily matching key also notice default changedbits observedbits mean limitation type context change", "num": "12732", "d": "5/2018"}, {"title": "hovering specific element affects elements", "body": "constructor props super props thisstate ishovered false thishandlemenuhover thishandlemenuhoverbind handlemenuhover thissetstate ishovered thisstateishovered render const menuactive thisstateishovered active return like add class specific div hover affects elements nt know happening", "num": "12731", "d": "5/2018"}, {"title": "react context consumer hoc", "body": "want request feature report bug feature versions react browser os affected issue work previous versions react react wanted put idea feedback see would something useful using new context api bit noticed repeating pattern lot components look something like javascript const mycontext reactcreatecontext foo const mycomponent ownprop gt myprop gt myprop ownprop export default mycomponent got wondering consumer could exposed hoc javascript const mycontext reactcreatecontext foo const mycomponent myprop ownprop gt myprop ownprop export default mycontextisconsumedby mycomponent similar redux reactrouter context value injected hoc write hoc using existing consumer component context api thought put possible inclusion api thoughts", "num": "12724", "d": "5/2018"}, {"title": "findbytype method reacttestrenderer nt find refforwarding components", "body": "want request feature report bug bug current behavior tests component passed created using ca nt found use loop nodes log see refforwardingcomponent skipped entirely current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expect second test work like first however second test failing expected behavior may way works reason expected work using make wrapped controls like example documentation writing tests want able find test besing passed correct props check dom rendered correct already tested versions react browser os affected issue work previous versions react using react failing chrome node tried versions codesandbox failed", "num": "12723", "d": "5/2018"}, {"body": "intentional setup bit complicated unfortunately single flow config wo nt work us nt support running ide integrations run use console output sorry inconvenience", "d": "5/2018"}, {"body": "put strictmode component app separately avoid warning due different packages redux purpose strictmode assess ready whole application subtree async rendering rely packages ready yet need wait become compatible using strict mode", "d": "5/2018"}, {"body": "issue react", "d": "5/2018"}, {"body": "puting inside setstate happened", "d": "5/2018"}, {"body": "fix ok", "d": "5/2018"}, {"body": "whsdothk changed setstate calls realise nt referencing directly function otherwise nt anything wrong piece code far tell understanding want reference component internal state call function must used unsafe pulled changes nt stop leak instructions repo explaining reproduce leak chrome dev tools go testing fix works note accumulation listeners performance chart", "d": "5/2018"}, {"body": "first read source yesterday think found event listeners getting added failed find code tidies assume listeners events bubble added elements apologies way first timer anyone could help show listeners removed component unmounted would awesome", "d": "5/2018"}, {"body": "current web browsers support using reserved words object literals context need target browser nt react even supports something old works even minifier making change need fix minifier uglify may called", "d": "5/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "please file docs bugs thanks", "d": "5/2018"}, {"body": "custom elements currently get attribute without mapping guess mean need pass", "d": "5/2018"}, {"body": "placidodomingo found medium article may use looks like may cover topic asking", "d": "5/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "fantasitic works solution html file windowrequire require react js file const electron windowrequire electron", "d": "5/2018"}, {"body": "dom fixtures also broken trying figure broke something", "d": "5/2018"}, {"body": "see help without seeing reproducible example config create new project experience something wrong particular setup", "d": "5/2018"}, {"body": "said bundle full code like means process env checks get properly eliminated think declaration incorrectly specifies whole object instead individual properties please update exactly recommend work", "d": "5/2018"}, {"body": "think defineplugin declaration incorrectly specifies whole object instead individual properties gaearon works object thank taking look", "d": "5/2018"}, {"body": "gaearon fyi exactly changed flat paths production bundle errors anyone else comes across make flat path structure easily maintainable flatten convert values", "d": "5/2018"}, {"body": "sure much explicit could get module format folder name use cjs folder contains commonjs builds umd folder contains umd builds eventually add esm mjs folder es modules builds plans change scheme please feel free hardcode choose appropriate dev prod version depending environment help", "d": "5/2018"}, {"body": "adding people often wish use libraries depend react semiotic use react directly load semiotic via amd library amd implementation thus needs know find react like work box need convention library authors declare browsercompatible umdamd bundles live implementation first loads semotic packagejson default unpkg determines acceptable semver range react loads react packagejson find browser amdcompatible entry point currently ordered list supported entry points indexjs currently make assumptions umdamdcjs bundle resides within repository seems vary widely rather use entry point packagejson also using file name would potentially require additional queries unpkg determine whether particular file exists introducing latency", "d": "5/2018"}, {"body": "single file resolve development production version neither reasonable default decision needs always explicit see us something support amd better specifically worth investing effort point understand may legacy systems depend lost sort relevance outside systems", "d": "5/2018"}, {"body": "want pick one packages default minified bundle intended production declaring entry points packagejson software consumes library could know bundles published rather needing make assumptions directory structure would likewise great react included es module entry point packagejson standard one would", "d": "5/2018"}, {"body": "intentional state updates merged getters really work great many scenarios", "d": "5/2018"}, {"body": "workaround using instead works well react thinks field uncontrolled shows warning without react issue listener range input", "d": "5/2018"}, {"body": "brainlulz found one interesting thing range work remove max attribute see may related react set attributes rendering dom", "d": "5/2018"}, {"body": "looks like happens equal less whsdothk removing attribute range works defaults", "d": "5/2018"}, {"body": "value range integer everyone expected string edited", "d": "5/2018"}, {"body": "nt change anything issue described use html native properties string anyway", "d": "5/2018"}, {"body": "compare fire event input click max value one fire input change event", "d": "5/2018"}, {"body": "changing code binding default oninput onchange possible drawbacks", "d": "5/2018"}, {"body": "sounds like something easy fix anyone wants look happening", "d": "5/2018"}, {"body": "gaearon currently working", "d": "5/2018"}, {"body": "sorry explained happening marked bug reason happening inputs default default value halfway specified minimum maximum actually less minimum case default set value min attribute track input value read property initializing tracked value default case defaults order properties assigned input element created defaults attribute set stays attribute set changed since greater new max track input value define gettersetter value attribute correct tracked value next time updated since current value nt empty skip setting value set nt update tracked value go update input setting max nt actually update thinks tracked value already max couple solutions would add special case checks element range input update updates tracked value set well first option likely easiest solution sure effects updating might could relying tracked value defaultvalue different cases", "d": "5/2018"}, {"body": "illu fix locally submit want give try feel free defer", "d": "5/2018"}, {"body": "aweary thanks man give try", "d": "5/2018"}, {"body": "aweary may present test case wrote mine already said order test case wrote value always correct", "d": "5/2018"}, {"body": "context essentially global variable scoped subtree saying sounds bit like want avoid passing arguments functions made variables global never recommended use context even legacy one specifically old context documentation page say use context want application stable nt use context experimental api likely break future releases react nt experienced react developer nt use context usually better way implement functionality using props state insist using context despite warnings try isolate use context small area avoid using context api directly possible easier upgrade api changes think fair warning situation think two possible options may want refactor app nothing wrong passing props like nothing wrong passing arguments functions yes go multiple levels deep feel like passing many props get used certain components might mean need make accept propschildren shortcircuit prop passing children use figure way polyfill something similar old context using new one think seen utility wild yet think time somebody might write one could imagine could use single new context pair hood maybe pair per key wrap every component hoc injects related context parts props reply specific points trying avoid prop drilling much possible think wise leads behavior hard understand think might better optimize readability terseness course neglect use abstractions like passing children design components additionally context vars might set lifecycle methods first render maybe hoc provided data sure would problem new context keep value state pass provider new context supports existing use cases basically place sounds like real problem legacy context intended use way quote old doc insist using context despite warnings try isolate use context small area avoid using context api directly possible easier upgrade api changes sorry frustrating never meant api replace passing props", "d": "5/2018"}, {"body": "guess duplicate see blog post details", "d": "5/2018"}, {"body": "yes exactly thank posted fast please close", "d": "5/2018"}, {"body": "full text error believe link page explains happen duplicate react bundle think npm link workflow probably causes problem pick react app library nodemodules try deleting library nodemodules link back app copy", "d": "5/2018"}, {"body": "gaearon dan genius would never think removing nodemodulesreact nodemodulesreactdom inside library removed build process application still worked fine library already built anyway proved error message seeing element ref specified string owner set multiple copies react loaded true experiment webpack builds make sure library pull another copy react library", "d": "5/2018"}, {"body": "let know way make time spent issue", "d": "5/2018"}, {"body": "spent seconds relatively common problem thanks offer though", "d": "5/2018"}, {"body": "sure exactly asking definitely use callback wait flushed", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "seems changed fire localstate changes fixed something like sure best solution", "d": "5/2018"}, {"body": "duplicate please refer thread instead", "d": "5/2018"}, {"body": "closing duplicate explain change broke code means already bug code notice sorry disruptions generally try make dormant bugs visible people fix case exception implementation bugs change affect", "d": "5/2018"}, {"body": "hmm sure supposed work way react wo nt break tree several parts ready earlier would lead jumpy behavior different siblings children suspend different periods time preventing appearing everything ready arguably main point feature break explicitly think timeout gate everything ready displays children otherwise displays fallback even one two siblings ready timeout still show placeholder whole thing want go granular need use nested timeouts explicitly say try waiting n particular subtree takes long nt wait show nested placeholder instead make sense", "d": "5/2018"}, {"body": "initially assumed may work based saw test think may understood incorrectly react wo nt break tree several parts ready earlier would lead jumpy behavior different siblings children suspend different periods time preventing appearing everything ready arguably main point feature sound reasonable thanks tip using timeout gate try play", "d": "5/2018"}, {"body": "gaearon saw added label one case described ticket related fallback content shows early verify bug understand seems reasonable fallback content show delay necessary promise resolved yet", "d": "5/2018"}, {"body": "test note difference assertions result correspond logs render methods emit see screen even call render method sibling cpu work eagerly want show yet regarding fallback showing early think maybe initial render recall exactly guess higher priority try adding suspense state transition instead wrap make low priority", "d": "5/2018"}, {"body": "regarding fallback showing early think maybe initial render recall exactly guess higher priority try adding suspense state transition instead wrap unstabledeferredupdates make low priority could use make tree async initial render well", "d": "5/2018"}, {"body": "even call render method sibling cpu work eagerly want show yet thanks clarification regarding fallback showing early think maybe initial render recall exactly guess higher priority try adding suspense state transition instead wrap unstabledeferredupdates make low priority work implemented component way nt render anything triggers state change use javascript class fallback extends reactcomponent state shouldrender false componentdidmount reactdomunstabledeferredupdates gt thissetstate shouldrender true render let ms placeholder children thisprops return thisstateshouldrender null least enough sandbox works expected could use reactdomunstablecreateroot make tree async initial render well aweary actually tried use page static content root async content bit deeper reasons whole tree rendering nested timeout expired", "d": "5/2018"}, {"body": "opaque data structure refers fact lot things arrays fragments single elements string literals etc reactchildren contains methods allow work different kinds unified way definitely way interacting exactly nt propschildren case children one ore always array done preact example fact shorthand jsx property like fact specify react needs update dom would much expensive tell whether two singleitem arrays whether two primitive values eg strings said think reactchildren documentation might expanded bit issue log reactjsreactjsorg repository article may clarify things bit", "d": "5/2018"}, {"body": "many thanks danburzo answers clarifications answer clear completely misuderstood word opaque react documentation wanted say data structure completely welldefined union type varies concrete representation union types always found older issue addressed exactly topic wonder happend changes opened issue reactjsorg gt reactjsreactjsorg nevertheless would still like ask second question propschildren array case exactly one child really seems violation principle least astonishment know background gt name children items tokens normally expect collection really performance reasons really see calculation checkresult time consuming javascript const arrayisarray arrayisarray checkresult amp amp amp amp amp amp amp amp sorry asking seems bit annoying would really love know exact reason design decision", "d": "5/2018"}, {"body": "glad could help first part question unfortunately single children represented singleitem array nt exact answer however trying point still validly pass single child normal prop rather jsx shorthand fact accidentally obscured hypothesis related performance", "d": "5/2018"}, {"body": "danburzo thanks answer mmh frankly hoped maybe someone react team would remember actual reason design decision really subtle issues children prop handling react example ask react newbie whether components following example behave react pro know answer gt warn dev missing keys really would expect newbie javascript const h reactcreateelement gt h div null h br h br gt h div children h br h br reactdomrender h div null h h documentgetelementbyid container way would allowed would subtle performance benefits implementing replacements like hyperscript function example another example ask react newbie children proptypes would look like requirement children satisfy certain condition think would easy answer least newbie react team reasons design decision question really known maybe matter taste course feel free close issue", "d": "5/2018"}, {"body": "made mistake code static method call methods like return changed state right way js static getderivedstatefromprops props state propsvalue statevalue return value propsvalue return null", "d": "5/2018"}, {"body": "please refer", "d": "5/2018"}, {"body": "davidbadura true corrected code samples issue still persists though anyway rewrite code way works", "d": "5/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "yep intentional documented happens development mode", "d": "5/2018"}, {"body": "actually bug vo safari pairing nt get announced within dialog context ca nt recall ever see demo codepen", "d": "5/2018"}, {"body": "sounds like react issue let know missing something", "d": "5/2018"}, {"body": "react anything special dom nodes able get reference dom node judging fact said property exists react job point question becomes question dom apis exactly method maybe expect good question unrelated react might better asked q amp forums like stackoverflow experts dom hang see react bug please create reproducing fiddle take look thanks", "d": "5/2018"}, {"body": "hey bsmithcycorp ui events spec linked currently working draft means officially recommended yet since new addition suite event specs also nt great browser support yet means polyfill nt think could rarely add support events event properties ca nt provide consistently try using work browsers support", "d": "5/2018"}, {"body": "know good escape hatch thanks", "d": "5/2018"}, {"body": "safari support pointer events", "d": "5/2018"}, {"body": "deliberately decided polyfilling pointer events unsupported browsers read release blog post unfortunately expected behavior chrome ios also using safari rendering engine webkit behind scenes thus see behavior google chrome browser macos one solution use third party polyfill example pep solutions come gotchas well case pep look work fine simple use cases", "d": "5/2018"}, {"body": "looks like react calls element fragment would possible use documentfragment", "d": "5/2018"}, {"body": "chrome problem related documentfragments simple native reproduction cause red flicker used without documentfragments", "d": "5/2018"}, {"body": "thanks report nmain example nt actually reproduce react case react reuse existing button dom element instead recreating accurate version react see exhibits flashing behavior looks like since react reusing dom element browsers retain focus state guessing undefined behavior far dom spec goes using document fragment would mean react could nt reuse existing dom elements really useful optimization common case work around using element inside fragment force react recreate dom elements working example since supported workaround going close result heuristic react uses make rendering faster fixing would require removing changing heuristic would likely net loss performance general let know questions", "d": "5/2018"}, {"body": "thanks aweary makes sense explained also made realize slight misunderstanding keys well seems efficient approach example give save edit button key", "d": "5/2018"}, {"body": "glad makes sense clarify want give different keys key dom node reused different keys react create new dom elements", "d": "5/2018"}, {"body": "meant javascript isediting cancel save edit buttons switch edit button becomes save button saving one button creation understand correctly would save one button creation cost slightly odd looking code", "d": "5/2018"}, {"body": "nt think elements reused mostly implementation detail using unique keys force elements recreated generally safe work around react assume elements different keys different ca nt reused nt get guarantee identical keys react probably reuse elements might implementation detail could reasons elements need recreated example switch new element created rely unique keys forcing elements recreated ca nt rely identical keys forcing elements reused make sense", "d": "5/2018"}, {"body": "yup makes sense thanks aweary", "d": "5/2018"}, {"body": "update see comment bottom thread conclusion tldr change broke code moved code already buggy subtle ways change react made bugs product code occur often fix consider making existing bugs code reproduce reliably breaking change coming issue thirdparty library works nt work hitting react bug issue complaint bug getting fixed however think fixing right choice recommend everyone upgrade react later details walkthroughs demos see comment bottom thread sorry broke things show relevant code please aware change cause issues rare cases documented blog post unfortunately making change also leads buggy behavior although less obvious deterministic maybe bump yet see point fixing breaking case hope also see fixing bug considered breaking code relied code relied old behavior work new one worked accident fault overlooking release took month us discover problem bug reports facebook function takes two arguments props state runs one updates really make sense oversight initial implementation fixed issue facebook learned reason behind numerous bugs one component relied buggy behavior broke like case one component thousand decided better long term make fix allow components written rely bug sorry caused issues seeing code would helpful", "d": "5/2018"}, {"body": "documentation previous blog post seems completely contradict changes made perhaps note added prevent confusion", "d": "5/2018"}, {"body": "chase specific see contradiction fires often examples post still work way", "d": "5/2018"}, {"body": "really make sense oversight initial implementation gaearon expand spec behavior rfc never mentioned seems like issue initial api design implementation", "d": "5/2018"}, {"body": "yeah also surprised old behavior waht guessed behavior would reading rfc", "d": "5/2018"}, {"body": "rfc say note react may call method even props changed nt want overspecify exactly happens might multiple reasons meant one missed part left vague rfc realized omission seeing bug reports caused new behavior critical making safe async mode migration would largely pointless none intended usage examples provided rfcs blog posts docs would break new behavior", "d": "5/2018"}, {"body": "sure understand benefit reasoning method called every single change go back write much logic handle internals method calls change feels like boilerplate code framework handling add noise bloat components version acted lines former method replaced behavior much easier migrate deprecated new blog post provided chase states new static getderivedstatefromprops lifecycle invoked component instantiated well receives new props exactly expected operated much cleaner opinion side note personal level never liked deprecation complained internally many coworkers however understand sideeffects trying edged changing methodologies lifecycle works said react group feels new behavior introduced wish work would like suggest another lifecycle method introduced line worked undeprecating method putting protections around try edge issues intended prevent course architect employee facebook member react development team changes around lifecycle particular area extremely frustrating developer", "d": "5/2018"}, {"body": "want continue discussion let start talking specific code examples code got broken please show let talk", "d": "5/2018"}, {"body": "version acted lines former shouldcomponentupdate method replaced behavior much easier migrate deprecated shouldcomponentupdate new getderivedstatefromprops sorry seems like significant confusion side never deprecated also nothing response typo edited", "d": "5/2018"}, {"body": "also like ask everyone keep mind changes piss people want best apps longer term care adding extra boilerplate deeply sorry churn caused make another blog post next week seems like people use expected likely due misunderstanding purpose example might code relied always getting updated whereas memoization lifting state would appropriate show appropriate strategies nt introduce kind boilerplate concerned continue discussion need code examples see otherwise immediately turns abstract vague", "d": "5/2018"}, {"body": "gaearon confusion poor copypasting immediately edited thanks", "d": "5/2018"}, {"body": "could post example code got broken new behavior", "d": "5/2018"}, {"body": "simplest example provide morning refactoring support update called prop changes static getderivedstatefromprops nextprops analyticspageview nextpropsdocumentid refactored called every change static getderivedstatefromprops nextprops prevstate prevstatedocumentid nextpropsdocumentid analyticspageview nextpropsdocumentid point never change previously reason include state additionally needed wrap additional logic statement around entire thing specific example small see big deal attitude people may give based much larger refactors change caused", "d": "5/2018"}, {"body": "believe code already bug surfaced let demonstrate point documentid never change may true particular case prop never changes pretty fragile assumption component point able work new maybe reasonable intentional limitation component api still parent component could rerender time eg call one parents could even parent component thirdparty library eg router adds call patch minor version hard tell whether happen without checking source every single component tree even happen right code chances high might happen future working completely unrelated feature problem parents rerender would also get called component example even react parent rerender would reset selection values though document id changed analytics call would also fire twice code already bug change react helped uncover even none components currently ever rerender implicit assumption makes every component fragile code relies nothing ever updating see really work promise encapsulated component model people generally expect safe add state components move component different tree exactly kind broken assumption led bugs facebook led us change react calls often surfaces bugs already exist code conversely implementations contain bug work correctly react react note blog post explicitly demonstrated need keep previous values state use cases like like ended example would nt problem note additionally intended pure method appropriate place side effects like analytics call use instead get duplicate analytics events every rerender sorry clear docs main bug code figured mention finally also subtle issues would happen async mode code like since whole point migrate asyncunsafe patterns would pointless allow people keep relying fix bug gained anything migration", "d": "5/2018"}, {"body": "worth none code broke update specifically based example blog based changes mentioned newest post assumed would longer behave expected javascript static getderivedstatefromprops nextprops prevstate store previd state compare props change clear previouslyloaded data nt render stale stuff nextpropsid prevstateprevid return externaldata null previd nextpropsid", "d": "5/2018"}, {"body": "see example would break update missing something far tell conditional check would false stateonly updates would return null", "d": "5/2018"}, {"body": "still error project", "d": "5/2018"}, {"body": "royalhunt please use thread discuss completely unrelated problem believe bug please file new issue reproducing example", "d": "5/2018"}, {"body": "suppose fact looked similar blog post states breaks threw similarity superficial", "d": "5/2018"}, {"body": "given explanation change made reasonable seems separate issue fact change released without major semver bump breaks generally understood correct behavior hear intentional ambiguity spec nt change folks understood work glad none code broke project widely adopted react seems reckless ship breaking change guise bugfix understand may inconvenient outofstep bad marketing release new major version sudden flipside makes react versioning less reliable makes bit hesitant upgrading new react versions", "d": "5/2018"}, {"body": "actually breaking problems well using apollo solved next code", "d": "5/2018"}, {"body": "gaearon nt code examples even installed yet wanted comment said earlier seems like people use expected likely due misunderstanding purpose example might code relied always getting updated whereas memoization lifting state would appropriate surprised surprised fully expected people use method simply core methods sure many relied upon previously removed namely allow us tell props change externally personally got impression almost new reading docs use case components receive objects edited external sources usually redux via store data local state done ca nt edit property values directly also usually type callbacks mapped via triggered updated data needs persisted callbacks result new data pushed current component props local state updated existed check presence changes data could available construction alternatively might necessary load first meaning would become available one eventual calls obviously godsend regard makes code much cleaner neater personally ca nt see way implement behaviour similar described would definitely interesting see memoization lifting state would appropriate said pretty sure looked options could nt find solution would work use cases used occasions sometimes late things need checked something gets changed", "d": "5/2018"}, {"body": "hear intentional ambiguity spec nt change folks understood gdsfp work original implementation flawed worth rfc spec getderivedstatefromprops make mention note react may call method even props changed calculating derived data expensive compare next previous props conditionally handle changes examplesrecipes recommended comparing new previous prop values updating state failed community warning clearly enough api reference docs apologize personally got impression almost new reading docs need better job communicating appropriate techniques would better see tweet example plan publish another blog update next week two covers detail would definitely interesting see memoization lifting state would appropriate said sure include several examples upcoming update", "d": "5/2018"}, {"body": "bvaughn looking forward article one thing suggest comment colleagues expressed lots important documentation actually seems blog posts api pages would personally prefer see documentation expanded blog posts linking quoting parts stands things logic suggestions exceptions available blog posts", "d": "5/2018"}, {"body": "good point codeaid difficult strike right balance much little detail think current reference section definitely needs work hope eventually create recipes section site shows common tasks suggested patterns unfortunately couple us though sort thing pretty time consuming appreciate feedback try keep mind make small edits next couple weeks", "d": "5/2018"}, {"body": "bvaughn ask mark give people ridiculous library popular globally getting resources", "d": "5/2018"}, {"body": "assign mark code reviews least", "d": "5/2018"}, {"body": "one ca nt grasp naming param names method called params totally made sense literally getting derived state props new props thus nextprops prevstate params yeah kind new componentwillreceiveprops least naming made sense particularly going diagram two days ago method fire setstate forceupdate totally confused need setstate get newstate case prevstate useful case deriving need forceupdate", "d": "5/2018"}, {"body": "would help say arguments called represent current props state thought prefixes would helpful see confusing need understand question use cases changed needed method code bugs one described also work need reason needed need cool intended commonly used already noted times thread hard say whether need show particular snippet code", "d": "5/2018"}, {"body": "one dubbha andrew talking earlier week decided update docs like recent blog example guess neither us made change yet edit docs updated via", "d": "5/2018"}, {"body": "royalhunt actually breaking problems well using apollo looking code exact bug described react break code helped find bug already existed previously unnoticed code manifested less deterministically sounds like good thing", "d": "5/2018"}, {"body": "correct understanding updated version diagram would gdsfp stretching right setstate also trigger forceupdate also would sensible way general mimic behavior nt want gdsfp anything props change basic object reference equality comparison props object rather comparing specific props solve problem general sense add background methods would used components setstate value call propsonchange method setstate callback parameter bubble change real source truth may top level state redux store needs copy value kept local state user experience reasons changes come needs able respond", "d": "5/2018"}, {"body": "gaearon bvaughn first thank answers would help say arguments called props state represent current props state yes helps least obvious getting second argument case current newstate prevstate instead use cases changed needed method code bugs one described also work need reason needed need cool intended commonly used already noted times thread hard say whether need show particular snippet code asking need question mostly trying think new use cases method covers use cases perfectly thinking use case use case course code show nothing broken getting method could useful latter two cases ca nt think use cases would deriving tolgeros correct understanding updated version diagram would gdsfp stretching right setstate also trigger forceupdate nope also fires skips shouldcomponentupdate", "d": "5/2018"}, {"body": "example case triggers thus always default value prop value javascript class rangeinput extends reactcomponent state value thispropsvalue static proptypes value proptypesnumberisrequired static getderivedstatefromprops nextprops prevstate nextpropsvalue prevstatevalue return value nextpropsvalue onchangerange e gt thissetstate value parsefloat ecurrenttargetvalue render const value thisstate reactdomrender documentqueryselector app another workaround", "d": "5/2018"}, {"body": "tolgeros also would sensible way general mimic behavior yes think looks equivalent recommend writing code like though fragile let expand needs copy value kept local state user experience reasons changes come needs able respond clarify page realize rerendering parent reason whatsoever counts change example wrap component popup container passes prop child function different every render equality checks redux containers stop popup calls component rerender blow away user input think code tries distinguish change comparing whole props objects instead individual props past relying method gets called lead bugs like implement something like described would make sense least determined change comparing explicit marker coming redux store eg id version field explicitly gets incremented intend blow away local state see mean dubbha yes helps least obvious getting second argument case setstate current newstate prevstate instead well yes reason called docs returning state already input state definitely older creating right worried people would attempt mutate state object called asking need question mostly trying think new use cases method maybe wrong think change intended cover new use cases intended uncover dormant bugs existing use cases seen already three times thread issue described comment use cases use method supported ways need make adjustments code bugs became prominent need fix code follow supported patterns like documentation blog posts andrewbalekha example case getderivedstatefromprops triggers setstate thus always default value prop value code also problem three cases described even react user inputs something parent component rerenders different reason blow away user input match state every component need decide value controlled uncontrolled part component api design controlled use value props attempt mirror state want change something need ask parent called lifting state described detail documentation scenario need uncontrolled take prop like first render point use local state keep value rerendering reset scenario need combining controlled uncontrolled behavior using means possible extremely errorprone strongly suggest see three previous bug descriptions thread leads mistake completely unrelated parent rerender blow away state instead want blow away state something changes parent need figure exactly serve trigger blowing away local state example maybe parent state like changes case either pass state child use decide blow away existing local state give child id changes forced unmounted mounted new props ensure clean slate without blow away existing dom fact might exactly need conceptually current item changed want preserve things like focus uncontrolled input state scroll positions explain problem little bit sure explanations clear enough keep describing problem application code every new example thread demonstrates desired behavior", "d": "5/2018"}, {"body": "gaearon thanks got problem example code failing well", "d": "5/2018"}, {"body": "simpler example issue seems like coming componentwillreceiveprops getderivedstatefromprops easy refactor code something stopped working properly", "d": "5/2018"}, {"body": "karolk code already work properly react believe explained detail code like buggy several comments get chance read yet missing reason example different already suffer issues described even currently away keyboard create demo fiddle work comments unconvincing", "d": "5/2018"}, {"body": "karolk dan already mentioned would nt work comments essentially boils user inputs something parent component rerenders different reason blow away user input match state example even react component rerendered prop changed eg type callback would overridden mixing awkwardbroken edge cases even going quote dan comment right great summary every component need decide value controlled uncontrolled part component api design controlled use value props attempt mirror state want change something need ask parent called lifting state described detail documentation scenario need uncontrolled take prop like first render point use local state keep value rerendering reset scenario need combining controlled uncontrolled behavior using means possible extremely errorprone strongly suggest see three previous bug descriptions thread leads mistake completely unrelated parent rerender blow away state", "d": "5/2018"}, {"body": "gaearon think example slightly different updated fiddle demonstrate behaviour going trying box type paste anything value meeting certain criteria ends store comes back prop aware achieved differently maybe using gdsfp way similar cwrp point go wrong even assume gdsfp fire many times", "d": "5/2018"}, {"body": "bvaughn went combination parent controlled state seems depend implementation detail nt think anything nt get gaearon explanation thank time appreciate quick response twitter", "d": "5/2018"}, {"body": "karolk chance read reply sections dan reply highlighted sorry comments posted time seems like aiming uncontrolled component case strongly recommend nt try mirror like component instead initialize default value like js class test extends reactcomponent constructor props super props changetext newtext thissetstate text newtext gt notify store text change criteria met thisstatetextmatch dg null dispatch thisstatetext render return even react mirroring way fiddle shows recommended result confusing api confusing runtime behavior source truth two disagree unexpected rerenders changes unrelated like callback functions inline styles often recreated inline render could blow away unintentionally reset every time component rerenders entirely unnecessary use value instead updated specific field changes parent component way forcefully reset previous value without rendering twice first change value arbitrarily change back target", "d": "5/2018"}, {"body": "going close conclusion change exhibits bugs code react code already buggy react subtle less deterministic ways support claim refer five examples posted thread already buggy react explained analysis convinced explanation let take demo indeed first glance seems like version using react edit anything version using react code runs fine original code free bugs fiddle using react rerender parent component every second see input resets every second clearly intended examples thread got broken react already exact bug whenever parent rerenders state gets unintentionally reset pretty hard debug components decoupled whether see bug depends lucky react helped surface bug code fix instead keeping app broken cases reproduce less reliably mentioned follow another post edit live describes use already shared thoughts component api design part maintain making existing bug app reproduce consistently breaking change helpful way help find fix bug sorry clear enough documentation guidance using method amend posting coming week edit post live finally agree method kinda hard wrap mind around think flaw api statebasedonprops always hard think complexity hidden due imperative nature even bugs like existed apps might able reliably reproduce every time new method makes complexity trying explicit verbosity helps realize perhaps good solution particular problem clear whether value controlled uncontrolled lifting state necessary better readability correctness perspectives follow guidance thanks everyone discussion hope helpful missed anything please let know", "d": "5/2018"}, {"body": "goyney help noticing downvoted last comment something explanations clear seems wrong tried best explain change uncovers existing bugs making existing broken codepaths reproducible code bugs old behavior also new behavior breaking change something still unsatisfactory could better improve aside publishing blog post plan understand frustrating version update leads seeing bugs bugs already existed app perhaps consolation see clearly every time opportunity fix", "d": "5/2018"}, {"body": "broke semver plain simple understand explanations understand reasoning disagree get latest minor release stuff nt stop working minor patch version dependency change plan simple changes good intended major sticking point", "d": "5/2018"}, {"body": "goyney every bug fix potential break code relying buggy behavior true bug fix little likely break code nt hard line bug fix breaking change much spectrum looked felt closer bug fix", "d": "5/2018"}, {"body": "semver social contract think clear cut may seem code may randomly break unbreak every single react release mean never change implementation possible change would break semver probably silly example course code like technically anything react throws error browsers support react mean adding support pointer events breaking change code also looks silly although maybe version tiny bit less farfetched js const handlers ongotpointercapture const x somethingthatreturnsnull xfoo somewhere foo maybe somebody could write something like assuming pointer events already supported notice warning code would break release think still implausible argue kind change chance exists code happens rely old behavior wanted respect semver strictest almost mathematical sense make every single release major course defeats purpose semver coming back original point semver social contract try hard break things broken given choice break already broken code strictly ensure broken code get written keep broken code working cases allow broken code written less clear cut case decided worse ecosystem endure pain fixing later meantime live bugs hard reproduce make existing hidden bugs apparent change fix categories bugs well make existing bugs prominent scenario see arguments way hope see", "d": "5/2018"}, {"body": "read comments thread still quite sure understanding planned changes correctly understand instead triggered external properties changed get triggered every external internal update right case alternative actually listening external changes without compare props state time saying bugs surface however nt see use case described comment earlier covered even achievable recap problem top level components talk redux get state data pushed via props using redux receives new data components pretty much top level components way lift state meaning accept props stored local state edit therefore requirement able tell something changed externally replace local state nt care blow user data away exactly point replace local state fresh data api suppose could say way new props coming redux compared parent component rerendering blow away internal state however whole point components edit stuff trigger action make api call get new data redux replace current state oftentimes late lifecycle good get triggered change never able tell something change encountered problem updating components way latter one worked logical change even sure proceed", "d": "5/2018"}, {"body": "edit stuff trigger action make api call get new data redux replace current state determine data coming new understand part judging description compare ids anything hoping components never get rerendered unless something specific happens redux side eg data fetch fragile assumption far tell adding single alwayschanging value result eg cause component always rerender action ones care always reset state bad adding property selecting data redux might change often toplevel data selecting break component words seem relying performance optimization react redux currently bails rendering shallowly equal props correctness sounds like become bigger problem later eg react redux stops using shallow equality checks everywhere hard say without seeing code basic idea solve issue correctly believe gave pointers need kind behavior need explicit marker tells data actually new eg id version field different needs replaced components resilient rerendered seeing sandbox minimal code example would help", "d": "5/2018"}, {"body": "semver social contract contract company like facebook probably following especially huge community developers utilizing dare say standard frontend development point time functionality nonalphanonbeta release wild two months cited documentation stating lifecycle behavior made claims deprecation suggested developers start moving new modal soon possible prepare eventual removal deprecated code would assume means proper unit contract testing piece lifecycle including almost bet point development tests added changed behavior changed fact see test file changes red flag breaking change made change fundamental lifecycle react big deal really bug yeah think based discussions thread explanations classified unintended behavior nt launchday slip two months release breaking change warranted headsup community saved one change wasted collective community probably several hundred hours productivity time figure code stopped working know took two developers least two hours track everything quit working since specific change omitted errors also understand sometimes accidents happen breaking change pushed unintentionally everything stated thread indicate intentional knew extremely unprofessional good way upset base users something like especially happens easily push someone competing framework listen like react took long time ramp feel really comfortable like going go bashing stuff like small petty frankly code need writing arguing people interwebs something like asking vigilant release breaking changes future", "d": "5/2018"}, {"body": "thanks elaborating think disagree much rings true warranted headsup community take feedback heart stand saying poorly communicated bugfix also poorly communicated feature rather semvermajor change could definitely explained better retrospect fault worth mention blog post unsupported patterns worked cases others accident would break consistently see saying annoying debug like made change silently fact large part text blog post dedicated exact change saw breakage upgrading would make sense search code patterns described post rather try find bug two hours without context sure whether happened definitely saying fault make effort explain issues may run appreciate everyone willingness engage conversation sorry let original version stay enough time start depending buggy behavior fact biggest reason scrambled get sooner realized mistake weeks ago testing impact fix past two weeks gave us confidence change scoped enough existing bugs uncovered important enough ship fix", "d": "5/2018"}, {"body": "gaearon nt knowingly upgrade nt even aware dropped someone team said hey look react version changed company policy automatically got latest version next fresh pull subsequent codebase happened night normal circumstances may discovered issue days point time sure one us would saw release announcement would attacked things different way", "d": "5/2018"}, {"body": "oh see assumed using lockfiles since mentioned yarn npm uses lockfiles default understand sentiment better think general using lockfiles desirable apps infallible always chance could introduce bug regression release totally understand policy though affect", "d": "5/2018"}, {"body": "gaearon hi realworld use case albeit nascent library breaks react write investigating refactor code goal simply provide example something broke kohlmannjlimina implemented custom scrollview component sighhh nt ask working demo component branch storybook build uses react writing try clicking dragging scroll bar caps shown tweet interaction corresponds one another call within higherorder method sic whose returned event handler attached windowmousemove also implemented getderivedstatefromprops static method serves following purpose component exposes used derive initial thisstatescalex thisstatescaley values incoming numbertype props changes replace corresponding value supports need interactively rescaleable scroll view either used uncontrolled standalone form future controlled parent component sure guess going theory indeed fixed lifting state certainly consider refactor since actively developing component ui library still considering implications uncontrolled scrollview entirely manages internal state vs controlled version discovered breakage code react upgraded started storybook navigated back resizeable kitten story found component longer responded dragging scroll bar caps reference commit seems though call within event handler effect since called whenever component updates thereby repudiating update sure enough temporarily commented found component reacted dragging scroll bar caps anyway mentioned look refactoring code major inconvenience hope use case explanation thereof helps team better understand might used wild additionally lockfile place voluntary upgrade finally personally feel satisfied mantralike albeit relevant recommendation lift state", "d": "5/2018"}, {"body": "probably could renamed stop confusing emphasize nt depend props change literally derives state render props change", "d": "5/2018"}, {"body": "klimashkin interesting true went updates thinking less dropin replacement look proposed naming make wonder visual pattern recognition seeing end method name threw rather rename though perhaps react docs could minimum emphasize need holistically consider component state management strategy transitioning away might also help point especially nature updated behavior react used component exclusively derives state props rather state management strategies deriving state updates event handlers sure heuristic example exactly correct merely asking holistically consider component state management clarified things", "d": "5/2018"}, {"body": "kohlmannj bug react case two pieces code equivalent cwrp comparing old prop value new one gdsfp comparing derived value going change inside component think gdsfp save old scalex value state able compare new prop correct", "d": "5/2018"}, {"body": "dema ah see mean thanks analysis implemented change identical described except felt comfortable naming state properties", "d": "5/2018"}, {"body": "catamphetamine already asked refrain namecalling month ago another thread please stop blaming people code buggy sorry came across way pointing bug running already existed code new one analyzed detail thread including providing demo value judgment code want discussion fruitful think might help separate technical details emotions true snippet react phone input would completely reset callback nt immediately set state parent component rerenders another reason turn fiddle happy demonstrate sorry bug surfaced change frustrated already exists code wrote react trying blame make feel bad stating fact code mentioned earlier consider making existing bugs code occur often breaking change definitely could better communicating use without introducing bugs blog post plan write hopefully help peace", "d": "5/2018"}, {"body": "gaearon ok thx removed comment heard means opressed doublecheck good react renaissance evolving instead dying like yet another usedtobesohyped framework changes controversial fine", "d": "5/2018"}, {"body": "thanks btw happy look issue input component earlier tuesday due holidays", "d": "5/2018"}, {"body": "gaearon nice certainly would nt waste time something like nt even know stay productive taking part every discussion github handle fix seems straightforward actually could nt simply pass engaging discussion silently heated discussions fun", "d": "5/2018"}, {"body": "kohlmannj regarding pattern described wanted reiterate concern case helpful nt exactly related overall pattern described component component exposes used derive initial thisstatescalex thisstatescaley values incoming numbertype props changes replace corresponding value supports need interactively rescaleable scroll view either used uncontrolled standalone form future controlled parent component concern mixing controlled uncontrolled behavior like leads confusing api andor confusing runtime behavior high level clear source truth props state values disagree practically speaking two variants pattern usually takes downsides variant state always reset props component rerendered recent change highlights one downside approach problem also existed version well older versions built top problem unexpected rerenders override component state unintentionally includes changes unrelated props like callback functions inline styles often recreated inline render bypass purity checks variant state reset props value changes pattern compares incoming props previous props updates state value changes externally done avoid unexpected rerender problem mentioned however also downside good way parent reset property previous value example scenario component like used render lot form fields underneath submit button user fills fields tries submit error one field application renders automatically scroll field error user see user modifies field scrolls submits still error field application renders scroll back problematic field user knows still error nothing happens state updated nt changed would confusing user developer trying debug problem work arounds set new recreate component entirely works okay small components like form fields expensive components contain lot children like rerender twice eg null prop second time original prop order force inner component reset state recommend designing components either fully controlled fully uncontrolled avoid cases fully controlled component avoids problems state reset fully uncontrolled component lighter weight use since generally requires fewer callbacks case props used initialize default state values never update state afterwards reasons like ones outlined case also suggest prop names clear like etc need ability forcefully reset uncontrolled component could add instance method called via", "d": "5/2018"}, {"body": "bvaughn excellent notes thank much happens tentatively considered change fully uncontrolled based discussion work entirely separating controlled uncontrolled behavior continue development", "d": "5/2018"}, {"body": "bvaughn thanks writing love thread helped crystallize problems head vaguely aware hard articulate exactly broken apis looking forward blog post", "d": "5/2018"}, {"body": "edited could provide another example could potentially changed fully controlled one phone number input component country select flag icon phone number input field able set externally point time country select flag must update accordingly say one tries make component controlled one case taken country flag stored must contstantly reverified order pair stay consistent computing keystroke already called handler viewed computationallyheavy function slows performance parse things compare lot regular expressions order find suitable country phone numbering plan entry one may say controlled approach makes component times slower making compute two times one time inside handler time inside reality could memoized limit arguments call inside free looks like memoization really saves purefunctional approach performance realworld scenario simplified example though reality slow performed keystroke inside handler inside handler another lite reduced function called operates within bounds selected country saves performance actually make impact inside still specific case exclusion general case maybe still keep component stateful wo nt transition purely stateless function optimize performance", "d": "5/2018"}, {"body": "catamphetamine example code show looks like controlled component store current phone number value state gets props example show nt actually need use component state core deriving something flag show props way performs well need sort thing memoization wrapper think otherwise answer nt write lengthy comments", "d": "5/2018"}, {"body": "want add note forget variant state reset props value changes pattern compares incoming props previous props updates state value changes externally done avoid unexpected rerender problem mentioned however also downside good way parent reset property previous value another scenario bad solution often people want keep edits form local state like commit place redux store event like button click let say ui like button view previous button view next edit value input value button save navigate items previous next buttons text input reset current values click save save edits implement people sometimes try use logic goes like initialize changes want throw away local edits assume change comes due previous next click however logic buggy consider case navigate two items buttons values different sure rerender reset field two neighbor items value condition using determine something like false keep local edits even though current item changed valid anymore hand condition looks like compares current input value apart code breaking would also get buggy behavior described earlier comments every parent rerender would blow away state make pattern work really best way avoid instead explicitly make component fully controlled state managed component must something like accept prop like current item id keep previous id state know current item changed need reset state current value changing really tell enough make decision", "d": "5/2018"}, {"body": "make pattern work really best way avoid instead explicitly make component fully controlled state managed component must something like accept prop like current item id keep previous id state know current item changed need reset state current value changing really tell enough make decision another option implement getderivedstatefromprops meaning child component wo nt reset move next item specify child parent determines using id item mean keyid changes child completely remounted note may worse performance cases quite possibly semantics want depends use case though essentially boils use getderivedstatefromprops componentwillreceiveprops component guessing happened based old new values even store old new values compare properly suggesting thread making guess parent wanted many cases wo nt cause problems pair may child always guess correctly parent may change state certain ways fully reusable child good idea use methods pull new parent behaves differently might wrong thing", "d": "5/2018"}, {"body": "smaller examples counter someone prefers see code using demonstration code already bug click demonstrate bug see completely unrelated parent blows away child state correct solution needs neither instead lifts state parent decide either case note forced deal complexity ui example explicitly decide needs happen edit initial value field interacting counter implementation ignore edits something else important part explicit", "d": "5/2018"}, {"body": "nt think huge problems controlleduncontrolled handling solvable side nt understand purpose say lift state assume nt matter upper state holder another component redux selector follow lift state nt need local component state anywhere nt need ever well react team make components stateless thisless get rid classes force approach last option react team considering early bird let us know change mindset advance also quote docs invoked right calling render method quite correct shouldcomponentupdate make people think move derive logic directly render method access", "d": "5/2018"}, {"body": "klimashkin react team make components stateless thisless get rid classes force approach last option react team considering getderivedstatefromprops early bird let us know change mindset advance always considering alternatives classes done past four years local component state essential feature react pretty much important one going away anywhere think might taking comment extreme intend side nt understand purpose getderivedstatefromprops say lift state assume nt matter upper state holder another component redux selector follow lift state nt need local component state anywhere mean always lift high possible meant bad duplicate sources truth disagree particular value lifting state solve problem basically forces choose one source truth get data flowing say lift way enough solve practical issue even lift shared ancestor still local state component owns two local states two components really supposed represent conceptual value syncing pain sign lifting state common ancestor higher necessary resolve ambiguity bugs causes lifting state panacea either suggesting solution literally trying sync two values think prop state field named way good rule thumb might ideal solution symptom duplicate source truth legit cases solved lifting state sometimes state really local derivative example may want reset displayed suggestion list user changes field suggestions might implementation detail component might want lift thus causing every parent manage think would legitimate case using reset local state response prop change parent need aware derived value even exists come checklist using makes sense would something like derived state truly local component directly map data parent already managing state rederived specific prop changes rerendering parent arbitrary times blow away child state effectively means one two options either state accumulated prop changes eg state accumulated changes props accumulated per prop value eg autosuggest items displayed current field need reset whenever field changes", "d": "5/2018"}, {"body": "described doc error boundaries react components catch javascript errors anywhere child component tree log errors display fallback ui instead component tree crashed quite sure whole thing works hood searched keywords codebase piece snippets might give clue wrt question think intention error boundary catches original thrown error prints using consoleerror", "d": "5/2018"}, {"body": "thanks help pointing code helpful however still sure seems original error still thrown cypress reasons comment file developer assumes browser prints original error maybe actually throws prints means cypress caught error tests also ed something cypress catched far read cypress listens docs say gets triggered javascript runtime error including syntax errors exceptions thrown within handlers occurs think harmless notsilenced triggers uncaught exception", "d": "5/2018"}, {"body": "seems like clipped safari devtools probably fixable", "d": "5/2018"}, {"body": "haroenv yep svg generator need work example provided svg makes stuff like wrapping text pain especially logging image requires fixed size maybe calculations screen viewport approximate width available space inside devtools could calculated making responsive", "d": "5/2018"}, {"body": "would require server parse error messages output svg cool idea think makes nogo added complexity dynamically render svgs nt seem worth click link nt much work plus directing users official docs site good thing way know look thanks though", "d": "5/2018"}, {"body": "providers wo nt anything special block updates think normal react components react component tree rerenders completely render due want block updates specific context tools disposal always andor context update propagate value changes anything prevent tree rerendering like happens normally react", "d": "5/2018"}, {"body": "gaearon thanks quick reply help clarification able get desired behavior", "d": "5/2018"}, {"body": "gramila assume event pooling syntheticevent pooled means syntheticevent object reused properties nullified event callback invoked performance reasons access event asynchronous way read", "d": "5/2018"}, {"body": "react binds events document level better performance uses event delegation code point view makes sense div reality native event document time nt worry use react gives", "d": "5/2018"}, {"body": "hey mridgway thanks bringing understand intention reads types different elements meant type check values returned also tells whether value passed certain symmetry changing return type element type elements could create problems anyone relies return values things rendered things returned maybe ok case sure sounds like want hybrid two tells type element types think api like would suffice use case bvaughn think", "d": "5/2018"}, {"body": "understand intention reads types different elements meant type check values returned correct see usefulness method like one aweary describes nt really strong thoughts sharing brandon concern backwards breaking change make existing methods", "d": "5/2018"}, {"body": "aweary yes think api would sufficient use case specifically would something like way without reach would fine", "d": "5/2018"}, {"body": "way without reach component typeof would fine", "d": "5/2018"}, {"body": "yeah seems bit roundabout though also introduces dependency would nt need contained logic edit realized clown icon show mac", "d": "5/2018"}, {"body": "took stab implementing", "d": "5/2018"}, {"body": "recently merged", "d": "5/2018"}, {"body": "awesome thanks", "d": "5/2018"}, {"body": "let profile production first expect difference significant", "d": "5/2018"}, {"body": "hi gaearon indeed expected production faster lot faster happy share numbers clean results likely make performant enough also optimizations looking hash routes use dirtybits sibling routes get rerendered feels rather arbitrary ability optimize way limited length bit number probably performant enough needs without dirty bit hack dev speeds likely problematic waste time chasing phantom perf problems however dirty bits optimizations expect make palatable well seems community adopts new context api reduxlike containers routing theming etc going see huge numbers context consumers app page renders couple thousand components might also render hundreds consumers focus framework pushes bit extreme focus routes around components care focus buttons menus modals etc opinion outside intended usecase context widespread use seem within intended usecase latter expect better dirty bits alternative might still widely useful follow concrete outcome couple days get approach results cleaned", "d": "5/2018"}, {"body": "sorry delay follow bunch profiling unsurprisingly found several inefficiencies code contributing performance issues eliminated created scientific experiment found update times rending routes page observed bits without observed bits production ms ms dev ms ms testing time transition route active route active routes notified change basically work without observed bits case context consumers receive update return identical props child component returns withobservedbits case work make results observed bits hash hash makes irrelevant routes hear update clean test though minimal amount work every handler recompute derived data props inner component unclear savings avoiding work avoiding work react end rendering inner component running check ran time run profiles regardless dirty bits api nice way avoid spurious updates without bespoke caching logic every consumer otoh dirty bits api unstable subject bit limitation improvements api would still benefit us takeaways us react context quite fast without optimization fine uses feature useful avoiding needless work dev many times slower prod initial request nicer api dirty bits still relevant probably relatively small group users needs thanks great work going react please leave open close discretion", "d": "5/2018"}, {"body": "bad idea use array index since nt uniquely identify elements cases array sorted element added beginning array index changed even though element representing index may results unnecessary renders", "d": "5/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "please check documentation", "d": "5/2018"}, {"body": "imho done outside react like let also listen people opinion", "d": "5/2018"}, {"body": "possibly hoping able rely browser default text nt worry creating localised text button", "d": "5/2018"}, {"body": "actually second thought though bare html would also show button text well consistentwise think case react bothers extraneous work give default value", "d": "5/2018"}, {"body": "ah remember bare attribute mean html usually gets interpreted supply attribute jsx nt assign anything basically saying want used linter telling redundant words setting almost opposite setting", "d": "5/2018"}, {"body": "another way expressing said jsx jsx hello world computes following html html hello world believe behaviour situation described issue", "d": "5/2018"}, {"body": "recommend using undefined uncontrolled inputs using nt affect value input since worked react breaking change undocumented likely unintentional fix", "d": "5/2018"}, {"body": "know regressed", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "fix simply bailearly reactdominput behavior applying submitreset inputs wonder would happen switched", "d": "5/2018"}, {"body": "looks like rollup bug please file issue specifically see block code expected js calculate diff two objects function diffproperties domelement tag lastrawprops nextrawprops rootcontainerelement validatepropertiesindevelopment tag nextrawprops var updatepayload null var lastprops void var nextprops void switch tag case input lastprops gethostprops domelement lastrawprops nextprops gethostprops domelement nextrawprops updatepayload break case option lastprops gethostprops domelement lastrawprops nextprops gethostprops domelement nextrawprops updatepayload break case select lastprops gethostprops domelement lastrawprops nextprops gethostprops domelement nextrawprops updatepayload break case textarea lastprops gethostprops domelement lastrawprops nextprops gethostprops domelement nextrawprops updatepayload break default lastprops lastrawprops nextprops nextrawprops typeof lastpropsonclick function amp amp typeof nextpropsonclick function todo cast may sound svg mathml custom elements trapclickonnoninteractiveelement domelement break assertvalidprops tag nextprops getstack var propkey void var stylename void var styleupdates null propkey lastprops nextpropshasownproperty propkey lastpropshasownproperty propkey lastprops propkey null continue propkey style var laststyle lastprops propkey stylename laststyle laststylehasownproperty stylename styleupdates styleupdates styleupdates stylename else propkey dangerouslysetinnerhtml propkey children noop handled clear text mechanism else propkey suppresscontenteditablewarning propkey suppresshydrationwarning noop else propkey autofocus noop nt work updates anyway else registrationnamemoduleshasownproperty propkey special case listener updates need ensure current fiber pointer gets updated need commit update element updatepayload updatepayload else deleted properties add queue use whitelist commit phase instead updatepayload updatepayload push propkey null propkey nextprops var nextprop nextprops propkey var lastprop lastprops null lastprops propkey undefined nextpropshasownproperty propkey nextprop lastprop nextprop null amp amp lastprop null continue propkey style nextprop freeze next style object assume wo nt mutated already warned past objectfreeze nextprop lastprop unset styles stylename lastprop lastprophasownproperty stylename amp amp nextprop nextprophasownproperty stylename styleupdates styleupdates styleupdates stylename update styles changed since stylename nextprop nextprophasownproperty stylename amp amp lastprop stylename nextprop stylename styleupdates styleupdates styleupdates stylename nextprop stylename else relies mutating styleupdates updatepayload updatepayload updatepayloadpush propkey styleupdates styleupdates nextprop else propkey dangerouslysetinnerhtml var nexthtml nextprop nextprop html undefined var lasthtml lastprop lastprop html undefined nexthtml null lasthtml nexthtml updatepayload updatepayload push propkey nexthtml else todo might late clear children inserted already else propkey children lastprop nextprop amp amp typeof nextprop string typeof nextprop number updatepayload updatepayload push propkey nextprop else propkey suppresscontenteditablewarning propkey suppresshydrationwarning noop else registrationnamemoduleshasownproperty propkey nextprop null eagerly listen even though nt committed yet true amp amp typeof nextprop function warnforinvalideventlistener propkey nextprop ensurelisteningto rootcontainerelement propkey updatepayload amp amp lastprop nextprop special case listener updates need ensure current props pointer gets updated need commit update element updatepayload else property always add queue filter using whitelist commit updatepayload updatepayload push propkey nextprop styleupdates updatepayload updatepayload push style styleupdates return updatepayload collapsed brevity specifically part look rollup output part completely missing js calculate diff two objects function diffproperties domelement tag lastrawprops nextrawprops rootcontainerelement validatepropertiesindevelopment tag nextrawprops along bunch logic function", "d": "5/2018"}, {"body": "regression rollup filed issue", "d": "5/2018"}, {"body": "think description recommend use error boundaries fairly explicit yes intentional behavior nt recommend rerender component indeed likely fail instead recommend rendering unobtrusive placeholder notifies user something went wrong case instead displaying alert solution would wrap individual views boundaries level granularity even placeholder somehow buggy suggest writing tests ensure error fallbacks solid still several error boundaries way app yes bugs app unmount sounds like big problem code buggy even error recovery causes errors every step points bigger problems app thinking keeping dom place graceful recovery empty comfort practice app stay broken assumptions held code longer true subtle ways like sending message wrong person displaying wrong product price etc losing user data input unmounting consider happens user accidentally closes tab battery dies indicative bigger problem need fix anyway error boundaries lowlevel mechanism definitely guard every little thing want like wrap every line code however nt necessarily result better experience instead might worth intentionally designing failure states different parts app investing unit tests error boundary components make sure nt fail good error reporting system actually know bugs happen fix", "d": "5/2018"}, {"body": "gaearon sure spotify thrilled app unmounting icon ca nt found thank god app would completely unusable without icon say level granularity bomb implanted every app disagrees order know problem triggered sentinel zealot essentially requires wrapping every component anything especially since components ca nt handle presumption impose everyone anything goes wrong disaster fact time trivial easily recoverable decide disaster thinking keeping dom place graceful recovery empty comfort fallacy viewa throws viewsb z fine nav unaffected react nt explode user navigate views fine perhaps think way chrome freezes expect os explode course definitely bug design flaw prefer understand unit tests etc understand problem fixed anyway however entire team department etc nt need blocked bricked app whilst someone tries find missing icon nt work spotify hypothetical could easily see happening", "d": "5/2018"}, {"body": "sure spotify thrilled app unmounting icon ca nt found thank god app would completely unusable without icon need sarcasm technical discussion without making strawman arguments single error boundary app bad practice describe would happen essentially requires wrapping every component anything especially since components ca nt handle confused statement error propagates tree need wrap every individual component yes good idea wrap big parts app navigation bar sidebar content area maybe granular ones eg message input presumption impose everyone anything goes wrong disaster fact time trivial easily recoverable decide disaster see reading exactly point easily recoverable wrapping part ui boundary like trycatch unclear errors propagate tree documentation works like trycatch", "d": "5/2018"}, {"body": "sorry perhaps sarcasm came across strong think core appropriate trivial issue brings entire site confused statement error propagates tree need wrap every individual component nt want missing icon explode whole big part asynchronous convo bit longform post summary meet week next week", "d": "5/2018"}, {"body": "nt necessary since referring component logic abstract", "d": "5/2018"}, {"body": "ca nt use another variable wrapper template mean ca nt write javascript import react react class test extends reactcomponent render const div const wrapper thispropswrap div reactfragment export default test ps use form import react instead interested", "d": "5/2018"}, {"body": "dom property added actual nodes fragments nt map case would suggest render function clean intuitive enough", "d": "5/2018"}, {"body": "think solution best workaround use case adding dom attributes fragment would probably confusing people", "d": "5/2018"}, {"body": "think position generally hoc approach lot think based wanting api injects props due obvious pitfalls add special property neat though likely gon na conflict legacy api time would nt work function components forwardref components etc also run problem deal multiple contexts conflicts eg tend think useful hoc anyway hoc intentionally turns context relevant props underlying component dumb component also makes resilent anyway since nt need tightly coupled instance property", "d": "5/2018"}, {"body": "thanks weighing jquense could prop name maybe separate argument akin added benefit react could possibly warn prop naming collisions like back days mixins", "d": "5/2018"}, {"body": "difference context comes prop ie instead probably best remains userland solution adding another api relies accessing data instance method seems like runs counter longterm goal asyncsafe api nt rely classes", "d": "5/2018"}, {"body": "agree aweary react moving away instance properties still think nice method context objects providing context prop", "d": "5/2018"}, {"body": "react applications store language stuff new context api code mess every component new consumer render prop inside const component props context gt contextcontenttitle componentcontexttypes content proptypesobject became yes pretty one single file components lines use context almost components workaround", "d": "5/2018"}, {"body": "thismarcoantonio use lot stuff context api locale relay environment routes isolation allows care context pollution always know scope bit indentation nt matter usually solve context combiner works flow types example", "d": "5/2018"}, {"body": "updated original post removed example uses sake future discussion", "d": "5/2018"}, {"body": "callback fired twice nt see behavior talking toggle components working add logging rendering example see toggle fact work correctly", "d": "5/2018"}, {"body": "expected setstate updaters run twice strict mode development helps ensure code nt rely running single time would nt case async render aborted alter restarted setstate updaters pure functions nt affect logic application", "d": "5/2018"}, {"body": "gaearon consider example say piece code triggered clicking button updater function called multiple times guarantee increments per click actually real example project button triggered clicked button noticed updater function called twice resulting inconsistency", "d": "5/2018"}, {"body": "franklixuefei updater called twice state example called twice returning cases also believe one invocations actually cares value returned react nt processing state update twice calling function twice help surface issues related side effects state updater methods pure", "d": "5/2018"}, {"body": "aweary thanks answering question however case take look reallife example project array objects noticed example updater function called twice seen console log second time updater function called contains one fewer element first time trust banging head bug last night", "d": "5/2018"}, {"body": "mutates array looks like type impurity strict mode intended catch smile", "d": "5/2018"}, {"body": "iamdustan noticed look closely created new array end oh wait right modified original array even though returned new array surprised nt even think first shame realized great thanks iamdustan aweary", "d": "5/2018"}, {"body": "need newer version node least run code", "d": "5/2018"}, {"body": "nt recommend following tutorial nt specify versions get broken point maybe already follow suggested installation steps website instead", "d": "5/2018"}, {"body": "fiddle hello world could post updated link", "d": "5/2018"}, {"body": "react ca nt warn deep mutation state way react check also technically allowed mutate state deeply escape hatch use packages like enforce immutability development many immutability helper libraries eg updating", "d": "5/2018"}, {"body": "fiddle hello world could post updated link bad updated gaeron got go external libraries thanks", "d": "5/2018"}, {"body": "please provide example reproducing issue tested seems working expected", "d": "5/2018"}, {"body": "hmm thats strange try provide example using apollo hoc fetch data ssr got data props loaded constructor code run cra constructor data ready yet anyone else issue workaround js constructor props super props thisstate yourstate", "d": "5/2018"}, {"body": "likely issue apollo figure minimal reactonly reproducing case let us know", "d": "5/2018"}, {"body": "setstate currently synchronous outside event handlers likely change future", "d": "5/2018"}, {"body": "works fine firefox jumps chrome think related mentioned issue", "d": "5/2018"}, {"body": "demo provided using input type known issue email inputs related chrome reports value email inputs see thanks", "d": "5/2018"}, {"body": "yeah think merging bvaughn acdlite recall reason nt vaguely remember discussion might confusing something else", "d": "5/2018"}, {"body": "version createreactclass using thought fixed pr version", "d": "5/2018"}, {"body": "sorry maybe misunderstanding reported apologies little context would helpful", "d": "5/2018"}, {"body": "ah shoot yeah somehow behind createreactclass makes sense thought odd could nt find anyone else hit thanks sorry trouble", "d": "5/2018"}, {"body": "problem glad hear", "d": "5/2018"}, {"body": "found preexisting issue pr fix intimately familiar react release cycles likely release want figure work around code time published soon within month wait otherwise might need work around problem", "d": "5/2018"}, {"body": "within month definitely", "d": "5/2018"}, {"body": "awesome thanks much", "d": "5/2018"}, {"body": "fixed react", "d": "5/2018"}, {"body": "warning stack trace point called console nt show stack traces warnings open react source code nodemodules comment part code would actually crash hopefully see stack trace specifically likely coming thirdparty library", "d": "5/2018"}, {"body": "adding following indexjs resolved issue import import import rafpolyfill", "d": "5/2018"}, {"body": "going defer reactdom meant render html according html spec attributes case insensitive mail clients nt respect noncompliant spec intention make reactdom general xml renderer always make htmllike renderer", "d": "5/2018"}, {"body": "reference seems working react webdom ok", "d": "5/2018"}, {"body": "supported react native yet next stable version", "d": "5/2018"}, {"body": "uses internal flag instead", "d": "5/2018"}, {"body": "hey dtinth would much easier us debug nested update count exceeds current nestedupdatelimit could see components involved nested update chain could include name component worked error thrown minifying production build hopefully would probably useless anyways also track component stack get warnings dev data nt available include error message bvaughn could production profiling build maybe way help narrow errors production cross reference timing profiling data error logs", "d": "5/2018"}, {"body": "hello thanks reply component names codemod babel react components include property last resort eg library dumping component function source code might helpful even minified form since seems increment would great know component corresponds component stack case component rendered dom dom hierarchy eg tag name root would also useful us pinpoint problem since also include useful debugging data app dom", "d": "5/2018"}, {"body": "also track component stack get warnings dev data nt available include error message bvaughn could production profiling build maybe way help narrow errors production cross reference timing profiling data error logs sure useful would nt think would want add devonly behavior profiling build profile times purpose build almost fast production callback used narrow cause error maybe callback would nt fired actual render fails render would never committed best might able determine something last time callback fired", "d": "5/2018"}, {"body": "nt think would want add devonly behavior profiling build profile times purpose build almost fast production yeah nt suggesting adding devonly behavior like component stack crossreferencing timestamp profile data error logs using id narrow rendering error occurred looks like would nt really work well nevermind dtinth component names codemod babel react components include displayname property last resort eg library dumping component render function source code might helpful even minified form users nt regress production debug issues include every build would definitely increase bundle sizes slow things", "d": "5/2018"}, {"body": "woops clicked close comment done dumping component render function source code might helpful even minified form imagine would confusing helpful people compiled minified source code would difficult identify cases since nestedupdatecount seems increment previousflushedroot highestpriorityroot would great know component corresponds highestpriorityroot root nt correspond single component think essentially suggesting thing mentioned could include name component worked error thrown run issue component name minified component stack case component rendered dom dom hierarchy eg tag name id class datatestid root would also useful us pinpoint problem since also include useful debugging data app dom able without react right already using error reporting service able read dom include whatever debugging data want case react wo nt unmount application markup still", "d": "5/2018"}, {"body": "users nt regress production debug issues include displayname every build would definitely increase bundle sizes slow things making bit tradeoff including component display name probably adds around app size gzip gain ability introspect app running production value put situation context members team experienced js react sometimes code eg calls dangerous places gets slipped codebase admit tests perfect likely get unanticipated frontend errors production happening unanticipated error production affects small percentage users reliably reproduce compensate better us happens track component caused far prereact react hardest track javascript stack trace provide information us pinpoint problem imagine would confusing helpful people compiled minified source code would difficult identify cases agree illustrating extreme case grep bundle minified source find culprit able without react right already using error reporting service able read dom include whatever debugging data want unfortunately without react telling component dom element corresponds component culprit example box causing nested update loop react could tell us error occurred dom element would helpful", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "expected attribute says normal dom element custom element related web component specs case react assume naming convention passes props attributes", "d": "5/2018"}, {"body": "ok bug part gotten used using classname everything components elements together forgot one could still use class standard elements worries", "d": "5/2018"}, {"body": "end integrating web components valid solution either seems directives nt processed added via innerhtml setattribute way get web component instantiate dynamically add createelement appendreplace child way involves creating ref made much easier work thank appending element dom componentdidmount write publish blog get fully working", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "part optimizations moved using innerhtml true neither react react construct elements dom apis", "d": "5/2018"}, {"body": "apologies edited changed honest know time nt working situation strictly guessing perhaps parsingtranslating dom treating like normal attribute rather passing value second parameter createelement case would nt perhaps bug react part handling changed like said working", "d": "5/2018"}, {"body": "hmm maybe actually bug chrome following spec nt work yet former right syntax according sake backwards compatibility chrome accepts forms though string form deprecated mozilla page yet nt seeing include object property nt work", "d": "5/2018"}, {"body": "chrome bug pen able flip quickly syntax straight string never worked file bug apologies taking time", "d": "5/2018"}, {"body": "problem", "d": "5/2018"}, {"body": "issue react error message coming library called passing library complains something inside store javascript function called definitely defined mistake must somewhere else probably put logs code see reaches function store state much help ca nt debug encourage share full project reach support resources", "d": "5/2018"}, {"body": "tried master think fixed although solution bit gross work need specify whether renderer primary secondary two work", "d": "5/2018"}, {"body": "assume fixed let know", "d": "5/2018"}, {"body": "gaearon issue fixed new updated deps demo result", "d": "5/2018"}, {"body": "gaearon looked renders surface element case calls artrendererupdatecontainer component mounts reactdom commits consumer rendered walks tree pops context provider consumer eventually rendered falls back default value since provider popped seems like popping context provider nt safe child might call secondary renderer primary renderer commits", "d": "5/2018"}, {"body": "acdlite fabric", "d": "5/2018"}, {"body": "gaearon context shared successfully renderers reactdom primary renderer believe reason nt caught test added reactart renders provider inside component managing provider value nt passed renderer boundary example lavrton renders provider outside component change provider rendered child works", "d": "5/2018"}, {"body": "issue reported webpack repo related reactscripts package thats used createreactapp somebody already reported issue repo used bug reports feature requests react", "d": "5/2018"}, {"body": "case likely use react integrity security", "d": "5/2018"}, {"body": "sorry hear react take security seriously use extensively facebook vested interest making sure secure issue reported nt affect react directly way issue indirect dependency part low severity issue according report well sure get resolved reasonable timeframe severity", "d": "5/2018"}, {"body": "also interested making world better making world react better safer beginning practice promoted idea jet house time taken hostile succeeded delighted", "d": "5/2018"}, {"body": "hey thanks writing plan move away naming future part larger set new apis given going happen anyway nt see benefit making change definitely something watch next set apis", "d": "5/2018"}, {"body": "known intentional deviation native event propagation behavior possible may change future see information", "d": "5/2018"}, {"body": "aweary documented nt mention anything events deviating native event bubbling", "d": "5/2018"}, {"body": "cool like world big would boring everyone used thing use issue tracker bugs feature requests close maybe find somebody interested try change mind forumschats cheers", "d": "5/2018"}, {"body": "talk explains nt think bad edit response comment deleted author claimed react bad mixing markup logic", "d": "5/2018"}, {"body": "react also cool lot work effort invested react cool like react react liked following technical support block account due adequate logic cool gaearon convinced use jet houses thanks regards", "d": "5/2018"}, {"body": "sorry hard guess without actually running code", "d": "5/2018"}, {"body": "oops mean close close provide example could run try", "d": "5/2018"}, {"body": "attempt provide example tomorrow unfortunately got time wednesdays thursdays work project moment", "d": "5/2018"}, {"body": "update seem pretty much resolved issue using vizzysvg performance level expecting epiphany strikes yet next step would try implement either context redux lift state management root component possibly using sort namespacing needed would least case redux far able find closing issue", "d": "5/2018"}, {"body": "fixed master", "d": "5/2018"}, {"body": "learned today case right believe make dynamic list elements throw fragment get key warning message bad performance nonstable updates provide example rendering array elements fragment still warn nt keys example maybe misunderstanding saying", "d": "5/2018"}, {"body": "referred believe two divs identical content one fires react warning", "d": "5/2018"}, {"body": "thanks jsfiddle aweary shocked see fragment giving key warnings never seen behavior new since version revisited code able reproduce behavior get key warning array key warning fragment nmain thanks also jsfiddle think exactly problem also clearly person confused post using fragment component accomplish without array syntax without using keys emphasis mine post post return ing array elements problems add key property element avoid react warnings fragments solve problem aweary understanding partly based dan excellent comments issue references idea separate syntax could let react distinguish case keys necessary dynamic lists static lists", "d": "5/2018"}, {"body": "maximum clarity code comparing give key warning give key warning given renderthumbnail returns div without attribute", "d": "5/2018"}, {"body": "reason nmain example nt warn call nt passing array children using argument spread syntax pass item additional argument since spreading would equivalent referring back comments see would nt warn static set children react perspective pass directly like would equivalent react perspective potentially dynamic array case would receive key warning using jsx hard distinction understand track throughout codebase using helper functions check see call handled mapping dynamic children passing array using argument spread pass separate arguments suspect make reconciliation quicker long key children make sense ialexryan", "d": "5/2018"}, {"body": "oh good point missed spread operator jsfiddle decided dark grey text slightly darker grey good idea never know problem take look code sample added code samples blog posts linked talking thanks response", "d": "5/2018"}, {"body": "oh wait think missed bombshell comment understand correctly confirming react wo nt give key warnings fragments fragments semantically assumed static children would take confusion back original post relying expectation avoid major gotcha would assume would explicitly mentioned docs fragments prominently featured warningstyle yellow box instead nt believe mentioned accurate nt see mention distinction announcement blog post docs really anywhere except longclosed github issue thread", "d": "5/2018"}, {"body": "understand correctly confirming react wo nt give key warnings fragments fragments semantically assumed static children correct fragments work elements etc components arrays elements need keyed li elements first second would expect required itemsmap item gt item applies child array elements elements must keyed nt need li elements first second keys required array elements itemsmap item gt accurate nt see mention distinction announcement blog post docs really anywhere except longclosed github issue thread docs link post discusses keys use way use element without changing way write jsx commas keys quotes since nt seem bug going close feel free ask clarifying questions", "d": "5/2018"}, {"body": "ok think narrowing issue thanks much bearing makes sense case keys usefulneeded would involve array point since probably comes operation something like fact produce key warning seems fine confuses also produce key warning seems bad made except said create key warning jsfiddle seems back think likely experience nonstandard thus nt big issue thought figure", "d": "5/2018"}, {"body": "problem using helper functions like would look see passing children", "d": "5/2018"}, {"body": "read mind dug react factories sure enough darn spread operator specialcase factory fragment makes sense thanks much patience clarity", "d": "5/2018"}, {"body": "yes spread operator example intentional apologize jsfiddle coloring looks like whoever made factory thought used spread fragments code situations array know really staticish nt going insertsdeletes done future render clearly state intent", "d": "5/2018"}, {"body": "error component called designer see reasons believe react", "d": "5/2018"}, {"body": "import react react import workplace objectbrowser reactdesignercore import splitpane reactsplitpane import dock reactdock import lodash import binder reactbinding import widgets widgets import widgetrenderer widgetrenderer import toolbar toolbar import objectpropertygrid objectpropertygrid import preview preview import toolbox toolboxtoolbox import modal reactoverlays import modalstyles modalstylesjs import filepickerdialog filepickerdialog let fixedheader props gt return export default class designer extends reactcomponent constructor props super props thisstate data clonedeep propsstateschemaprops amp amp propsstateschemapropsdefaultdata current node propsstateschema snapgrid currentchanged currentnode path currentnode undefined return var parent currentnodeparents var parentnode parentlength parent parents undefined thissetstate current node currentnode parentnode parentnode path path undefined thisstatecurrent amp amp thisstatecurrentpath path addnewitem elname itemtoadd var current thisstatecurrentnode current undefined return reloadschema objectschema var updated thispropsstateschemareset objectschema thispropseditorstateclearhistory thiscurrentchanged updated render var schema thispropsstateschema var editorstate thispropseditorstate", "d": "5/2018"}, {"body": "know issue designerjs nt know happening", "d": "5/2018"}, {"body": "uploaded complete file code designerjs", "d": "5/2018"}, {"body": "gaearon check image please", "d": "5/2018"}, {"body": "state changes put queue react rerender immediately one component may call event handler first calls calls would wasteful start rerendering child work parent rerenders instead react lets call event handlers applies exits browser event handler knowing calls handle hope helps", "d": "5/2018"}, {"body": "also get current state react gets current renderered state right give pending state explained intentional", "d": "5/2018"}, {"body": "thanks lot great explanation", "d": "5/2018"}, {"body": "think might need provide simplified working example jsfiddlecodesandbox property changed rerenders whole video starts component rerender props state change prevent shouldcomponentupdate lifecycle method without seeing code perhaps possible solution store current playback position state move update", "d": "5/2018"}, {"body": "poxrud thanks reply actually ca nt store current position state see code html fetched api happens use use pure jsx propery change working fine video plays stopped suggestions react reconciliation working working jsx using", "d": "5/2018"}, {"body": "using means want render markup react wo nt control makes dangerous react sort reconciliation markup pass component using rerenders markup rerendered scratch need avoid using want dynamically manage state elements react make sure markup passed dynamically updated lastly use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "thanks please give sort example set make sure markup passed html dynamically updated markup passed html see code", "d": "5/2018"}, {"body": "markup something control something dynamically update eg coming another service control could update component updates markup ca nt control user provided wo nt possible", "d": "5/2018"}, {"body": "markup something control something dynamically update eg coming another service control could update component updates work update markup everytime component updates create flicker nt want please provide sort example achieve without flicker understand src changes video rerender nt want rerender case properties lets say height width etc", "d": "5/2018"}, {"body": "testutils simulate module react nt immediately flush updates dom like used version previous think accurate description immediately flush called lifecycle react process rendering works expected update example move call wrap around although still illustrates change behavior", "d": "5/2018"}, {"body": "oh interesting thanks taking look bvaughn case looks like may difference argument called always interpreted like looks like slightly different meaning", "d": "5/2018"}, {"body": "even exactly like sure whether would nt flushed immediately react rendering reentrant means inside lifecycle nothing make react start rendering components react calling lifecycles extra updates scheduled helped fix bunch obscure bugs pretty much hard constraint fiber implementation inconvenient corner cases", "d": "5/2018"}, {"body": "say works expected related breaking change says reactdomrender reactdomunstablerendersubtreeintocontainer return null called inside lifecycle method work around use portals refs happy accept pr rewording bit general rerendering happens lifecycles fired", "d": "5/2018"}, {"body": "think biggest takeaway change log note bit ambiguous nonobvious comes things like", "d": "5/2018"}, {"body": "thanks clarifying gaearon reread said times think got basically call inside callback wo nt work way outside callback rerendering happens lifecycles finished always liked fact able force component rerender understand hard constraint fiber makes little less useful wonder could take callback like", "d": "5/2018"}, {"body": "could elaborate need specifically testing click even initial async render move call next line call render like mentioned assume overlooking use case", "d": "5/2018"}, {"body": "guess time useful using inside one lifecycles already something really supported maybe better approach would warn throw using inside lifecycle going expect", "d": "5/2018"}, {"body": "since simulate testonly api confused call lifecycle would nt expect testonly code exist inside tested components using simulate actual app logic really supported either", "d": "5/2018"}, {"body": "sorry mistake", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "also found problem distressed ask", "d": "5/2018"}, {"body": "put together reproduction demonstrating issue", "d": "5/2018"}, {"body": "meantime please feel free send pr adding trycatch explanation comment", "d": "5/2018"}, {"body": "thanks request danielrob would nice selection state nt jump input nt updated track restore cursor position element nt change render cycle restore selection mainly account case input may moved somewhere else dom could consider relaxing condition always restore selection state exists sure downsides would workaround specific example store update selection range manually using", "d": "5/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "must something related bundler setup tried project generated create react app points exactly error happens console error even coming react coming babel class definition sure specifically causes js stack get lost confused bundler configuration think something needs solved react", "d": "5/2018"}, {"body": "ok thanks", "d": "5/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "gaearon find info community support resources", "d": "5/2018"}, {"body": "ones tried", "d": "5/2018"}, {"body": "folks discord chat friendly able help", "d": "5/2018"}, {"body": "search switch hashrouter provider community support resources find resources related problem", "d": "5/2018"}, {"body": "sounds like enabling really bad user experience strongly recommend even babel plugin automatically adds would much better disabling mangling nt work would look tests see code expecting different code maybe even send fix fb currently include filenames inefficiently currently module names strings production fix probably change ids write tool matches ids back readable names", "d": "5/2018"}, {"body": "cool thanks feedback gaearon elaborate mangling results really bad user experience intuitively affect bundle size added compression top effect rather small", "d": "5/2018"}, {"body": "guess depends good compression ends case measured difference experience mangling still ends significant moreover compression helps network affect parsing time", "d": "5/2018"}, {"body": "measured size think went guess right nonfb scale app sounds good keep parsing time mind well right meaningful bug reports critical fast page loads future switching babel plugin sounds like good solution unless sourcemaps supported component stack", "d": "5/2018"}, {"body": "please create rfc nontrivial behavior change", "d": "5/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "get filename even line number include babel plugin development example default development create react app recommended starter kit", "d": "5/2018"}, {"body": "thanks gaearon know source thing react follow discussions contribute improve great work", "d": "5/2018"}, {"body": "anybody know workaround", "d": "5/2018"}, {"body": "want send fix", "d": "5/2018"}, {"body": "yes take issue send pr", "d": "5/2018"}, {"body": "hey dkrutsko like propose new api react via rfc process find thanks", "d": "5/2018"}, {"body": "get warning passes props including boolean one dom element like fix stop passing props real dom props problem solved hard say without running code example", "d": "5/2018"}, {"body": "exactly happening passing dom element make flexible possible problem solved thanks", "d": "5/2018"}, {"body": "using similar see", "d": "5/2018"}, {"body": "thanks pointing hope production errorboundary ui show hide development mode errorboundary ui show hide problem seeing problem development mode deployed production yet understanding correct", "d": "5/2018"}, {"body": "screen seeing explicitly says bottom appear production show intentionally want make hard accidentally ignore errors error boundary caught display properly offscreen", "d": "5/2018"}, {"body": "version deprecated mean anything tend work one major version time new features developed react right technically nothing prevents using react long need although time might find difficult find packages compatible unless also use older versions always post migration instructions blog react exception react blog post includes information preparing changes also includes links automated scripts codemods migration hope helps", "d": "5/2018"}, {"body": "add regular key value pair object defining component jsx const mycomponent createreactclass initialize thisref ref reactcreateref componentdidmount values initialized available consolelog thisref render return see working example", "d": "5/2018"}, {"body": "see working example work special understanding would clone every instance shares see modification example console output", "d": "5/2018"}, {"body": "ah see special understanding sounds like would really value set object ie would shared well could optionally store refs", "d": "5/2018"}, {"body": "hamlim thanks solution thanks nmain points principal problem use example rather others like think interface necessary createreactclass nt think good solution use handles refs", "d": "5/2018"}, {"body": "dexbol fact nt understand exist nt use class actually syntactical sugar javascript existing prototypebased inheritance react perfect traditional prototype inheritance javascript maybe try traditional prototype inheritance way said might look like following use strict const react require react const inherits require inherits inherits mycomponent reactcomponent moduleexports mycomponent const prototype mycomponentprototype function mycomponent props reactcomponentcall props thisstate thisref reactcreateref prototyperender function return", "d": "5/2018"}, {"body": "pretty sure fixed master", "d": "5/2018"}, {"body": "fixed react", "d": "5/2018"}, {"body": "ca nt need use changed state within setinterval function problem way interval function might still old state even though called guaranteed run right away fact several even batched together time interval function runs could many none calls take look setstate docs perfectly explain also know pass setstate function would help protect async problems need pass second optional function run actually gets called per docs second parameter setstate optional callback function executed setstate completed component rerendered generally recommend using componentdidupdate logic instead hope helps", "d": "5/2018"}, {"body": "think got thanks clarification pretty interesting use case documentation good hard time wrapping head around plugging pieces together might good example officially put somewhere case others kind issue nt even know something wrong close feel free close question validated code post best practice", "d": "5/2018"}, {"body": "close feel free close question validated code post best practice remember clear interval callback", "d": "5/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "official flow types nt support usage", "d": "5/2018"}, {"body": "andrew says motivation reduce allocation intended public api per se would nt rely", "d": "5/2018"}, {"body": "bailout feature intended advanced libraries like relay userfriendly compromise necessary make really fast indeed limited type context change nothing prevents using one bit several fields many", "d": "5/2018"}, {"body": "thanks prompt response maybe concept like selector function redux mapstatetoprops could introduced ie contextconsumer accept selector function memoized well select concerned part context", "d": "5/2018"}, {"body": "intentionally using something like consumers means arbitrary code would run traversal inevitably end slow cool thing bitmask api user code runs per consumer keeps traversal fast regular memoization strategies like build system based selectors top eg although need carefully benchmark ensure making slower", "d": "5/2018"}, {"body": "wow expect instant reply got point arbitrary code traversal though fully convinced shouldcomponentupdate arbitrary code well critical traversal path well still think put selector function level unstableobservedbits better example use shouldcomponentupdate component bailout rerender reactdevtool highlight updates see consumer still flashing use unstableobservedbits bailout clean concern component flashing check awearyreactcopywrite got time cheers", "d": "5/2018"}, {"body": "look awearyreactcopywrite feeling bailout feature unstableobservedbits offers essential context api use case kind universal let people try hard go far use hope give second thought make context api support selector function natively", "d": "5/2018"}, {"body": "applying class four elements whenever mouse enter leave working version", "d": "5/2018"}, {"body": "working sir", "d": "5/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "5/2018"}, {"body": "realized already idea actual context api documentation sorry duplication", "d": "5/2018"}, {"body": "maybe related", "d": "5/2018"}, {"body": "far see", "d": "5/2018"}, {"body": "turned complicated thought add console logs indeed see first spancreating function gets reexecuted interval fires first example rendered component calls starts regular react rerender wo nt anything special block rendering children component calls function create children therefore every rerender render prop new element needs reconciled special logic react handling render component code called component rerendering react anything prevent counts update second example also rendered component calls also starts normal rerender however returns example children always referentially even though something inside react knows go deeper reason would go deeper rather skip components context provider prop changed happened explains second example render prop get called note actually getting bit complicated practice practice react devtools highlight remove first empty text child empty first child provider case childrenasfunction consumer variants refresh setstate mean react rerenders though verify putting console logs happening toplevel component contains updated cases need highlight something indicate currently strategy highlight first closest child dom node means nt work well fragments nodes like context providers may multiple children remove text node example tree closest node component rerenders span cases text node beginning end highlighting even cases even though rerendered text node beginning tree looks like first row want show rerendered find first dom text since nt dom measurement api suppose nt highlight anything ideal hand component renders text node likely expensive anyway second row want show rerendered find empty text node nt highlight anything actually find see highlighted question count updated second example supposed rerendered hunch false positive caused check file issue react devtools sum part confusion caused another part probably false positive react devtools look thanks reporting", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "think seeing difference note first string literal within jsx expression second regular jsx text two things subtly different also still happens html elements like span get around control encoded characters instead storing strings wrap nt control characters ie coming api response need use like", "d": "5/2018"}, {"body": "let elaborate case first use ensure always enough deferred update queue invoke normal button click callback javascript refresh gt consolelog round thisstatecount thisr thissetstate prevstate gt consolelog round prevstate return count prevstatecount function consolelog round thisr thisstatecount render const e performancenow performancenow lt e artificially long execution time return expected callback function interrupt deferred updates trigger imediately unexpected behavior state prevstate function thisstate prevstate digged source code found react update component instance get interrupted event callback state still updated state update queue use since last work commited see call stack beginwork updateclasscomponent updateclassinstance think unexpected behavior devlopers may write code like may get confused neither current visible state screen suggest store computed next state attach see anything else issue please let know gaearon", "d": "5/2018"}, {"body": "issue seems fixed master probably example running master build correct behavior", "d": "5/2018"}, {"body": "\u8fd9\u4e0d\u662f\u4e00\u4e2abug virtual dom virtual dom property disabled still true fire event handle belongs virtual dom", "d": "5/2018"}, {"body": "mouse events manually prevented firing syntheticevent system interactive elements like buttons based props example forces react sync dom internal check using props value dom one event nt firing generally nt really support sort interop setting properties directly dom node well via props one completely either control value via ref entirely stateprops", "d": "5/2018"}, {"body": "since update going assume issue resolved close", "d": "5/2018"}, {"body": "gaearon take", "d": "5/2018"}, {"body": "fixed react", "d": "5/2018"}, {"body": "thanks use case clear nt want omission pr fix welcome", "d": "5/2018"}, {"body": "petegleeson essentially tweak pr enzyme pr lol", "d": "5/2018"}, {"body": "fixed", "d": "5/2018"}, {"body": "appreciate speedy response gaearon jquense would great talk enzyme could use directly rather version", "d": "5/2018"}, {"body": "agree tho conversation enzyme maintainer guy sends prs times practically moment feasible totree behavior different enzes format", "d": "5/2018"}, {"body": "thanks everyone would happy create pr got done quickly", "d": "5/2018"}, {"body": "reproduce however reproduce jsfiddle since dev tools inspects main window aggregate dom nodes frames took long figure noob react internals take look", "d": "5/2018"}, {"body": "someone experience using fiber debugger might want take look seems dom nodes mounted time textarea autofocus attribute set leak dom nodes fibernodes perhaps autofocus happens scheduling work done initial mount nodes see commitmount finalizeinitialchildren", "d": "5/2018"}, {"body": "fixed react", "d": "5/2018"}, {"body": "also wondering necessary experiencing case would break type system code expects array certain values based props actually throws error prop nt supplied example js const state foo array lt const props string string component state foo later throws error expecting populated static getdrivedstatefromprops nextprops const foo objectkeys bar foolength throw new error gurantee foo populated", "d": "5/2018"}, {"body": "case maybe checkbox id checkbox fire onchange event jquense know fix could please explain", "d": "5/2018"}, {"body": "humm see example react work well configure addeventlistener trigger callback bubbling phase still bug capture phase flag set direction propagate event", "d": "5/2018"}, {"body": "think react suspense capabilities released npm", "d": "5/2018"}, {"body": "since nt discussion unsure move forward confident moving forward creating rfc since approach still unclear realize initial post quite long perhaps slightly vague input clarifying questions welcomed", "d": "5/2018"}, {"body": "callreturn package deleted longer applies thanks detailed report though", "d": "5/2018"}, {"body": "likely want feedback though start working replacement use cases appreciate write", "d": "5/2018"}, {"body": "thanks headsup way join discussion would happy believe api area could really strengthen abstractions trying make layout one cases", "d": "5/2018"}, {"body": "following thread reactnavigation issue reactnative issue seems react issue old issues reference ismounted deprecated looks like fixed long time ago confused seems suddenly become problem many react native projects", "d": "5/2018"}, {"body": "likely react native issue case let continue discussion", "d": "5/2018"}, {"body": "hi ca nt get prev state getderivedstatefromprops second param gives empty object always", "d": "5/2018"}, {"body": "sulsummer means component rather getting created", "d": "5/2018"}, {"body": "hi sulsummer issue closed sounds something reporting please file new issue repro steps think found bug react thecodejack mentions please rule fact component recreated iwth fresh", "d": "5/2018"}, {"body": "thanks guys thecodejack bvaughn really new react seems child component created twice least ca nt tell passing data child component via props get done time finally prevented use getderivedstatefromprops", "d": "5/2018"}, {"body": "returning empty object work terms updating state follow code path returning follows cost anything extra ask seems natural natural every time big deal since small detail curious empty object would considered explicit way saying updates necessary", "d": "5/2018"}, {"body": "currently returning empty object pretty much returning would shallow merge empty object properties none proceed normal", "d": "5/2018"}, {"body": "three ones missing issues without pr anything blocking pr feel free make one ping try merge", "d": "5/2018"}, {"body": "problem", "d": "5/2018"}, {"body": "file new issue reproducing case thanks", "d": "5/2018"}, {"body": "fixed react", "d": "5/2018"}, {"body": "tag", "d": "5/2018"}, {"body": "hi acdlite gaearon sorry delay update pr nt well recently start working pr sorry delay", "d": "5/2018"}, {"body": "necessarily looking find npm package update useful identifying unnecessary rerenders", "d": "5/2018"}, {"body": "trysound idea second argument always available possible passing previous props always initialize state passed gdsfp could add necessary check without checking existence understand reasoning without checking existence important consider synthetic typescript snippet sorry nt know flow well enough ts class foo bar bar interface props foo foo interface state foo foo trimmedbar string class extends component static getderivedstatefromprops nextprops props prevstate state null state null prevstate amp amp nextpropsfoo prevstatefoo return null return foo nextpropsfoo trimmedbar nextpropsfoobartrim render return thisstatetrimmedbar fix ts function propstostate props props state return foo propsfoo trimmedbar propsfoobartrim class extends component state propstostate thisprops static getderivedstatefromprops nextprops props prevstate state state null nextpropsfoo prevstatefoo return null return propstostate nextprops render return thisstatetrimmedbar extra cognitive load course exaggeration example talking two places state touched instead one gain pov alternative letting undefinable initializing state whole new worms typescript think actually undefined throughout component time programmer knows window undefined narrow pattern almost thing mount prop updates afaik widespread exception rule significant differences written sure anymore significant differences state initialization derivation uncommon would nt suggest going far recommending people cram everything staterelated however still think relaxing warning worth replace something along lines custom supplied first invocation returns print warning would document indeed missing footgun", "d": "5/2018"}, {"body": "commit causes issue changing line source makes work let target nativeeventtarget nativeeventsrcelement window trying find ways around", "d": "5/2018"}, {"body": "issue thanks leadinglight downgrade react ok", "d": "5/2018"}, {"body": "additional observation might help onchange returns window character typed input field whereas deleting character backspace delete returns htmlinputelement onkeyup returns htmlinputelement", "d": "5/2018"}, {"body": "everyone previous comment sorry nt help us solve issue seeing upgrading higher please file new issue minimal reproducing case extracted project helpful everyone able quickly diagnose fix", "d": "5/2018"}, {"body": "issue gaearon using reactrails expected behavior application render wheel graph graph key component clicking section graph focuses section updates forst key key component happens instead clicking section receive error error minified react error object object key component ends elements instead console logged keys way onclick listener rendering key component keys prop ever show array items like component adding new props instead replacing issue occurs production local tried tracking error best could minified src got", "d": "5/2018"}, {"body": "savybrandt thanks extra info helps ask take screenshot like every call stack frame sorry annoying ie click call stack debugger screenshot argument passed would helpful", "d": "5/2018"}, {"body": "also need know version react using", "d": "5/2018"}, {"body": "full call stack using reactrails version", "d": "5/2018"}, {"body": "version react version come tell", "d": "5/2018"}, {"body": "second frame interesting call seems assume different function really look actual react code published npm example react production commonjs bundle piece code looks like original code calling function defined right bundle calling completely different function prints invariant appreciate could paste larger chunk bundle around second call frame mentioned maybe could help illuminate happened actual function wanted call overall guess bug uglify whatever react rails using minification need reproducing project confirm least need know versions webpack uglify using", "d": "5/2018"}, {"body": "couple blocks rest block contains function call frame function dn e n r function e n var texpirationtime tchild null e ao null n echild n function e var n tref null n e amp amp eref n teffecttag function l e n e n return amp amp e n tstatenode zrcurrent var r nrender return teffecttag e r tmemoizedstate nstate tmemoizedprops nprops amp amp tchild function c e var estatenode tpendingcontext tn e tpendingcontext tpendingcontext tcontext tcontext amp amp tn e tcontext g e tcontainerinfo function e null e amp amp tchild echild void null tchild e tchild var n sn e ependingprops eexpirationtime tchild n nreturn null esibling e esibling n nsibling sn e ependingprops eexpirationtime nreturn nsibling null return tchild function u e switch ttag case c break case rn break case g tstatenodecontainerinfo return null var h eshouldsettextcontent p eusesyncscheduling f eshoulddeprioritizesubtree tpushhostcontext g tpushhostcontainer v nenterhydrationstate nresethydrationstate b ntrytoclaimnexthydratableinstance e cn r function e ememoizedprops function e ememoizedstate var eadoptclassinstance w econstructclassinstance x emountclassinstance k eupdateclassinstance return beginwork function e n texpirationtime texpirationtime gt n return u e switch ttag case null e void var r ttype tpendingprops c kt return c zt c r r c teffecttag object typeof r amp amp null r amp amp function typeof rrender ttag rn r x n l e ttag e r tmemoizedprops tchild case e ttype n tpendingprops r tmemoizedprops mocurrent null n amp amp n r else null n r n e break e r kt r zt r n r teffecttag e tmemoizedprops n tchild return case return rn r void null e tstatenode w tpendingprops x n r r k e n l e r case return c tupdatequeue null r tmemoizedstate xn e null null n r e r oelement c tstatenode null e null echild amp amp chydrate amp amp v teffecttag tchild ao null r n e r tmemoizedstate tchild e case null e amp amp b ttype var tmemoizedprops return r tpendingprops null r amp amp r null r void c null e ememoizedprops null mocurrent null r amp amp r rchildren h r null c amp amp h c amp amp teffecttag e n amp amp p amp amp f r texpirationtime null e tmemoizedprops r tchild e case return null e amp amp b e tpendingprops null e amp amp e tmemoizedprops tmemoizedprops e null case ttag case return tpendingprops mocurrent null amp amp e amp amp ememoizedprops null void null amp amp tmemoizedprops tmemoizedprops r ochildren tstatenode null e ao tstatenode r n tstatenode r n tmemoizedprops tstatenode case return null case e g tstatenodecontainerinfo tpendingprops mocurrent null amp amp e amp amp ememoizedprops null void else null tmemoizedprops e break e null e tchild null n e tmemoizedprops tchild return case e n tpendingprops mocurrent null n amp amp n tmemoizedprops else null n tmemoizedprops n e break e e n tmemoizedprops n tchild return default beginfailedwork function e n switch ttag case rn break case c break default return teffecttag null e tchild null tchild echild amp amp tchild echild texpirationtime texpirationtime gt n u e tfirsteffect null tlasteffect null tchild null e ao null null n echild null n ttag amp amp e tstatenode tmemoizedprops eprops tmemoizedstate estate tchild function en e n function r e eeffecttag var ecreateinstance ecreatetextinstance eappendinitialchild l efinalizeinitialchildren c eprepareupdate epersistence u tgetroothostcontainer h tpophostcontext p tgethostcontext f tpophostcontainer npreparetohydratehostinstance g npreparetohydratehosttextinstance v npophydrationstate void b void void return emutation function b function e n tupdatequeue n amp amp r function e n n amp amp r completework function e n var tpendingprops switch null tmemoizedprops texpirationtime amp amp n tpendingprops null ttag case return null case return en null case return f gt mo gt fo tstatenode dpendingcontext amp amp dcontext dpendingcontext dpendingcontext null null e amp amp null echild v teffecttag amp null case h n u var w ttype null e amp amp null tstatenode var x ememoizedprops k tstatenode c p k c k w x n c b e k w x n eref tref amp amp teffecttag else return null tstatenode void null e p v n e amp amp r else e w n e e x tchild null x xtag xtag e xstatenode else xtag amp amp null xchild xchildreturn x x xchild continue x break null xsibling null xreturn xreturn break e x xreturn xsiblingreturn xreturn x xsibling l e w n amp amp r tstatenode e null tref amp amp teffecttag return null case e amp amp null tstatenode e ememoizedprops else string typeof return null tstatenode void null e u n p v g amp amp r tstatenode e n return null case tmemoizedprops void ttag w e x tstatenode amp amp xreturn null x xtag xtag xtag else xtag wpush xtype else null xchild xchildreturn x x xchild continue null xsibling null xreturn xreturn break e x xreturn xsiblingreturn xreturn x xsibling return x dhandler x dprops w tchild null e echild null n tchild case return ttag null case return null case return null case return f null case default function mn e function n e switch function typeof vn amp amp vn e etag case e var n estatenode function typeof ncomponentwillunmount try nprops ememoizedprops nstate ememoizedstate ncomponentwillunmount catch e break case e break case r estatenode break case l amp amp e function r e var e n null tchild l amp amp ttag e break null tsibling null treturn treturn e return treturn tsiblingreturn treturn tsibling else tchildreturn tchild function e return etag etag etag function e var e void void treturn e switch null void otag case ostatenode break e case ostatenodecontainerinfo break e case ostatenodecontainerinfo break e oreturn ttag ttag r tstatenode v tstatenode else ttag tstatenodecontainerinfo n null tchild tchildreturn tchild continue e break null tsibling null treturn treturn e return treturn ttag amp amp tsiblingreturn treturn tsibling react version using webpack using rails asset pipeline uglifier uglifier version", "d": "5/2018"}, {"body": "find list uglify options using", "d": "5/2018"}, {"body": "also know uses umd commonjs build reactdom", "d": "5/2018"}, {"body": "nt custom options set default listed gt sure umd vs commonjs try find", "d": "5/2018"}, {"body": "version", "d": "5/2018"}, {"body": "uglifier version", "d": "5/2018"}, {"body": "gaearon heads removed uglifier pushed test environment works obviously ca nt push production like least see uglifier indeed issue", "d": "5/2018"}, {"body": "fixed replaced productionrb support thanks help dan", "d": "5/2018"}, {"body": "decided take crack tell react exactly expect setup scenario memory leak pronounced exists class app extends component state toggling false show false togglingon gt thissetstate toggling true togglingoff gt thissetstate toggling false render thisstatetoggling settimeout gt thissetstate show thisstateshow return thisstateshow amp amp letting run chrome bit watched performance tab allocations garbage collections things look like expect eventual garbage collection represent seconds selftoggling every see gc eventually catching reaping detached nodes ran times result also nt seem matter whether text input password", "d": "5/2018"}, {"body": "exact problem right working prosemirror react two fit together well right would nice option render react component synchronously prosemirrormanaged domnode either work asynchronously", "d": "5/2018"}, {"body": "bring prosemirror see stance", "d": "5/2018"}, {"body": "understanding prosemirror stance adding asynchronous rendering would overcomplicate already complicated state update view update logic prosemirror render cycle view framework agnostic needs know specific dom positions synchronously order map dom positions pieces state done part dom updates occur way native browser behavior interpreted correctly according lastknown concept dom patsimm worth workaround successful making react prosemirror play nicely prosemirror nodes children create hoc ref denotes insertion point nodeview renders manually create dom node give prosemirror insert dom node child whichever rootparent node rendering react element listen reactrender callback replace hocrendered node ref artificially created node step bit hack neither prosemirror react seem complain agreed would little easier still possible guarantee synchronous render nested react renders like", "d": "5/2018"}, {"body": "gaearon thanks lot save day", "d": "5/2018"}, {"body": "make sure use plan use react client make markup interactive use method instead use rendertostring server reactdomhydrate client", "d": "5/2018"}, {"body": "inlined host configs probably wo nt much valuable impact anymore", "d": "5/2018"}, {"body": "clearly walked trap apparently mentioned docs benchmarking experiencing performance problems react apps make sure testing minified production build", "d": "5/2018"}, {"body": "thanks gaearon yes appears dev acting intended encountered profiling dev environment concerned reviewed optimizing performance docs", "d": "5/2018"}, {"body": "still unstable mode", "d": "5/2018"}, {"body": "really happy api might something better long term", "d": "5/2018"}, {"body": "resurrecting question question looking docs think quick sentence stating use setstate function would helpful", "d": "5/2018"}, {"body": "want send pr docs probably better idea missing doc page contains edit link bottom", "d": "5/2018"}, {"body": "yup getting screenshot would love contribute project wiki", "d": "5/2018"}, {"body": "maybe nice problem think reality still using", "d": "5/2018"}, {"body": "andrastothtw found older version react included externally aliased webpack", "d": "5/2018"}, {"body": "people still problem even though find older version try removing folder installing packages", "d": "5/2018"}, {"body": "message clear think might mixed default named imports use", "d": "5/2018"}, {"body": "mean complains directly tag", "d": "5/2018"}, {"body": "trysound course made stupid error bug reports maybe know react making bug reports asked help somewhere instead cleared comments people nt think wrote sorry taking unnecessary time space thank trysound answers", "d": "5/2018"}, {"body": "update state value please help thissetstate entityarray resultentities gt consolelog thisstateentityarray entityarray", "d": "5/2018"}, {"body": "problem using portal would like attach ref calback children portal currently impossible bug", "d": "5/2018"}, {"body": "pleasantly surprised react correctly avoids firing events ancestors moving mouse portal host content simulating nonportal behavior nice looks like react nt fix focusblur think ideally would quite useful able treat portals exactly like child means event caused moving focus portal would nt bubble portal ancestors think full list events need special handling might eg update think latter bit nt true since react always uses hood bubble parents perhaps case also pointer drag events consider", "d": "5/2018"}, {"body": "sent pr think approach could use little refinement believe covers edge cases send value attribute serverside password inputs hydrate value property clientside set update value attribute clientside rendering respect new value property passwords user interacts password hydration", "d": "5/2018"}, {"body": "magicmark last commit fix issue since tests seem pass make pr", "d": "5/2018"}, {"body": "robgietema pr", "d": "5/2018"}, {"body": "currently two react renderers used time way described exception sort exists intend support cross render portals yet built reason fails mentioned container types different expects dom element eg children appended using expects wrapper object array adds children calling think possible support better way see pr", "d": "5/2018"}, {"body": "adding bit information examples based ones hyperknot fritzc problem google translate replaces text nodes tags containing translations react keeps references text nodes longer dom tree react throws following cases text node conditionally rendered child parent react calls text node removed throws longer child conditionally rendered text node child parent react nt throw node text node conditionally rendered react calls node inserted throws long child js case condition amp amp welcome something nt throw condition amp amp welcome case condition amp amp something welcome workaround avoid errors invalidating conditions easiest workaround wrap text nodes nodes referenced react stay dom tree even though contents replaced tags js workaround case condition amp amp welcome something workaround case condition amp amp something welcome", "d": "5/2018"}, {"body": "using react still experiencing problem callback setstate access old state", "d": "5/2018"}, {"body": "also experiencing setstate callback nt work expected reopen", "d": "5/2018"}, {"body": "see solution", "d": "5/2018"}, {"body": "new react still learning ropes surprised controlled components allow nulls coming sql background fundamental concept small database often unused field store empty string value nt problem table millions records record occupies drive space millions single empty string bytes really thus increasing drive space degrading performance another example averages sums aggregate calculations part calculation query calculates accurate workaround shortcoming react created shadow property flags fields null logic commit time use null empty fields marked shadow properties nullable point nt value meaning many contexts especially backend datastore supports nulls benefits greatly use", "d": "5/2018"}, {"body": "running similar scenarios described api returns object null property values looking go solution ryannerd proposing nt feel right alternatively change input change setstate call converts back default ideal scenario may enough avoid breaking existing projects would possible perhaps attribute allowed specify input controlled regardless value new react know little internals throwing something", "d": "5/2018"}, {"body": "understand sophiebits concern changing react suddenly start treating legitimate value controlled components may impact react like ernestopye suggestion using propertyattribute control would let developers optin controls support feature perhaps future version react requiring", "d": "5/2018"}, {"body": "dalhorinek solution ended going case async componentdidmount modified like", "d": "5/2018"}, {"body": "trueadm regarding comment example way achieve without lets say component nt know type children receive want attach wrap capture clicks related children code example class externalclick extends reactcomponent state clickedoutside false", "d": "5/2018"}, {"body": "kind api provide callback ref children arguments js class externalclick extends reactcomponent state clickedoutside false", "d": "5/2018"}, {"body": "trysound thanks yeah thought option think ideal user perspective would nt want force user use api though benefit approach user decide exactly node targeted within child component think nice extra feature option core implementation", "d": "5/2018"}, {"body": "gaearon sorry still new ssr wondering approach still work react render different things server client need update dom style ssr ssr height nt know screen height client want update based real screen height said height tried style keeps unchanged wrap settimeout gt thissetstate hasmounted true seconds still nt work change works means components mounted via never update", "d": "5/2018"}, {"body": "hi seem issue updates related libs", "d": "5/2018"}, {"body": "updates would issue read discussion see need reproducing case", "d": "5/2018"}, {"body": "seems really unintuitive react calls reality catching context scenario causing issues us added intelligent error boundaries app want start using boundary handle api error throwing hit api error bubbles nearest error boundary handled like error unfortunately dev causes redbox appear since dev environment complex couple api calls pretty regularly fail redbox appearing couple seconds every page load extremely frustrating", "d": "5/2018"}, {"body": "actually rather intuitive name catch error produced one descendants api actually producing errors defined application error state given certain api call results error boundary red box happening much dev workaround could set dev env var basically suspend error throwing specific api calls routinely falsely fail dev", "d": "5/2018"}, {"body": "hey wuweiweiwu absolutely zero obligation make headway wanted follow see questions hit snags blocked making headway worries check three weeks", "d": "5/2018"}, {"body": "course ive taking time get familiar codebase progress soon thanks", "d": "5/2018"}, {"body": "please make option disable behavior want use performance compatibility switch get duplicate error console", "d": "5/2018"}, {"body": "cvarisco problem figure problem", "d": "5/2018"}, {"body": "updating version react solve issue probably related env sorry man", "d": "5/2018"}, {"body": "problem", "d": "5/2018"}, {"body": "typescript users noticed typescript complains pass empty string value getting around passing renders hope helps", "d": "5/2018"}, {"body": "working version facing issue case shortcut ctrlv seems like jquery issue", "d": "5/2018"}, {"body": "able fix js const getref ref gt ref refdefaultvalue demo react jsfiddle", "d": "5/2018"}, {"body": "interesting cases mentioned get curious part possible synchronizing value attribute messing value property reported safari clearing value wonder removing attribute syncing local build would alleviate problem guess race browser react ca nt really reason looks like dig bit", "d": "5/2018"}, {"body": "nhunzaker click clear chrome reset value empty string safari reset value initial value setting empty string force safari reset value empty string issue reproduced without react html vanilla js specifics safari", "d": "5/2018"}, {"body": "problem link give help gaearon", "d": "5/2018"}, {"body": "nhunzaker believe fixing uncontrolled inputs example controlled one validation still firing", "d": "5/2018"}, {"body": "ah correct thank send pr shortly", "d": "5/2018"}, {"body": "sent new pr start checking list browsers test pr description", "d": "5/2018"}, {"body": "merged issue next release thanks test case super helpful", "d": "5/2018"}, {"body": "thank nhunzaker enormously fast solution", "d": "5/2018"}, {"body": "hello guys similar issue indexjs used issue resolved", "d": "5/2018"}, {"body": "eliseumds thats fine third party ads library might adding multiple dom nodes adding dom attributes etc application way knowing beforehand possible markup rendered server side scsherwood luck facing exact issue ads library modifies dom react client side hydration react fine react goes removes dom nodes altogether nt want wait till go actually render ads dom nodes freaking slow think way tell react lots use cases real world applications requirement", "d": "5/2018"}, {"body": "another vote option", "d": "5/2018"}, {"body": "alternative solution", "d": "5/2018"}, {"body": "solution find valid workaround specific usecase link seems dead unfortunately exactly specific issueconditions hope help", "d": "5/2018"}, {"body": "demanzonderjas need break conditions break one enough eg remove hover rule break condition remove adjacent sibling rule break condition restructure dom around element break condition", "d": "5/2018"}, {"body": "hi greeting chromium team ran across bug webcompat work involving react filed get underlying issue chromium fixed glad report tkent fixed onwards modifying defaultvalue chrome android cause ui refresh", "d": "5/2018"}, {"body": "small update also landed patch webkit fix issue safari ios chrome ios however insight change would make release", "d": "5/2018"}, {"body": "rough fiddle multiple items err mean codesandbox", "d": "5/2018"}, {"body": "update state value please help thissetstate entityarray resultentities gt consolelog thisstateentityarray entityarray", "d": "5/2018"}, {"body": "try instead casts boolean falsey false everything else true works like ternary operator", "d": "5/2018"}, {"body": "going close suspense api designed exactly purpose merged master going available usable later year need keep issue open initial solution codebase keep iterating fully ready read react blog", "d": "5/2018"}, {"body": "think particular warning anymore react instead detect development builds react devtools gaearon project open reintroducing console warning use electron without react devtools nt bundle prod build found development build react used long time without warning", "d": "5/2018"}, {"body": "using library requires html accept react component documentation explicitly says use return value way callback work good way handle suppose could create promise return future value promise add callback complete promise callback would work would create possibility deadlock", "d": "5/2018"}, {"body": "super unpredictable confusing ran suggest least warn updates know problematic go background backgroundsize b background c backgroundsize b warn backgroundsize overridden backgroundsize changes time nt warn property shorthands know whether problematic property enumeration order", "d": "5/2018"}, {"body": "marking good first issue let add devonly warning per comment think good place begin investigating would like take please comment nt two people working", "d": "5/2018"}, {"body": "sophiebits happy work one", "d": "5/2018"}, {"body": "supertinou", "d": "5/2018"}, {"body": "problem cc dvajs antdesign sorrycc related plain error uncaught typeerror elemnodenametolowercase function shouldusechangeevent objectextractevents extractevents jsx const formfields input text title \u8282\u70b9\u540d\u79f0 key nodename required true workaround avoid naming keyword js const formfields form input namenodename breaks onsubmit event handling input text title \u8282\u70b9\u540d\u79f0 key nodenamefix required true function toeditmodel obj const ret clonedeep obj nodename foreach k gt const v ret k ret v return ret function fromeditmodel obj const ret clonedeep obj nodename foreach k gt const v ret ret k v return ret", "d": "5/2018"}, {"body": "tried works thanks much gaearon display line numbers react render errors answer question every react beginner tutorial shown error message", "d": "5/2018"}, {"body": "well recommend using create react app beginner tutorials including website", "d": "5/2018"}, {"body": "problem trying get width dropdown menu order put header width base email length inside componendidmount getting slightly different width could use settimeout nt feel comfortable code", "d": "5/2018"}, {"body": "gaearon deprecated could deal apimethod want call children mounting using api sequence deepest child child parent need sequence parent child deepest child", "d": "5/2018"}, {"body": "please explain detail need kind bookkeeping move logic constructor effectively componentwillmount nearly equivalent constructor side effects supported though hard say without seeing actually trying", "d": "5/2018"}, {"body": "gaearon thanks advice use works case parent component make api request get path restapi server parents children mounting know path restapi anyway fixed problem", "d": "5/2018"}, {"body": "sat may yozhezhi notifications githubcom wrote r gaearon thanks advice use constructor cit works case issuer employer identification number ein r c component make rgetbaseurl api request get path restapi serverc parents children mounting know path restapi anyway fixed problem receiving rthis subscribed threadcrc reply email directly view github mute thread rr sent gmail mobile", "d": "5/2018"}, {"body": "yozhezhi understand need rely order though calculate paths pass props use context want pass explicitly", "d": "5/2018"}, {"body": "hello gaearon actually encountered issue could deal apimethod want call children mounting using componentdidmount api sequence deepest child child parent need sequence parent child deepest child yozhezhi mentioned want sequence however difference issue api related need instead implementing doubleclick ads simplified structure would pagecomp want setup general config first defineslot issue available config setup stuff suggestion thank advance", "d": "5/2018"}, {"body": "handlechange index event const name value eventtarget const list concat thisstatesomearray list index name value thissetstate somearray list use handler nt forget name thisstatesomearraymap item index gt return onchange thishandlechangebind index wrote mobile sorry typo", "d": "5/2018"}, {"body": "sophiebits issue reopened tutorial series accessible data tables fully compliant wcag standards makes mention elements examples look examples showing prepare tables irregular multilevel headers see use andor actually becomes hindrance making tables fully accessible please please consider reevaluating warning", "d": "5/2018"}, {"body": "strange issue big forms rendering state dropdowns check populating dropdowns value exist exist update child dropdown right values store changements variable componentdidmount state update dropdown stored variable cause infinite loop", "d": "5/2018"}, {"body": "see code sample cause infinite loop assuming state change checks setstate inside componentwillupdate setstate inside componentdidupdate setstate inside render usually accidental setstate inside getsnapshotbeforeupdate make sure nt see infinite loop", "d": "5/2018"}, {"body": "also facing similar issue mikkoh passing parent function props called button inside child component going infinite loop handlesomething value thissetstate something value render return calling thispropsoncallback button inside child help", "d": "5/2018"}, {"body": "depends exactly calling thisprropsoncallback inside button could provide information", "d": "5/2018"}, {"body": "parent component render", "d": "5/2018"}, {"body": "nt call init within onclick declaration since know mrecord within parent could bind initmodal inside parent constructor", "d": "5/2018"}, {"body": "multiple elements different values nt know mrecord parent figured issue instead", "d": "5/2018"}, {"body": "use react native flex radio button inside loop", "d": "5/2018"}, {"body": "probablyup thank pointer struggled ssr site days attach scroll event able fire works", "d": "5/2018"}, {"body": "tomitrescak ever figure seeing behavior windows browsers works macos browsers", "d": "5/2018"}, {"body": "false alarm event handler prior reacts", "d": "5/2018"}, {"body": "workaround", "d": "5/2018"}, {"body": "investigated issue seems chrome edge firing mouseleave removed dom nodes correct according ui events spec event target eg target element removed dom mouse events sequence remaining events sequence must fired element filed bugs firefox safari incorrect behavior", "d": "5/2018"}, {"body": "mnpenner evpozdniakov validation messages things want wait stop typing use debounce event handler instead waiting onblur", "d": "5/2018"}, {"body": "nt high priority onchange firing frequently rarely causes problems causing problems app", "d": "5/2018"}, {"body": "sophiebits sorry accidentally clicked x degrade performance filtering operations server callbacks used change event handlers approach shown fine workaround uncontrolled native inputs nt map well react controlled inputs seems like thread tried develop pr found internals bit complex maybe engineer team could make quicker work much better description real issue imo", "d": "5/2018"}, {"body": "longer appears issue", "d": "5/2018"}, {"body": "gaearon sure hear frequently enough guys great job appreciate work", "d": "5/2018"}, {"body": "months ago gave talk jsconf iceland describes upcoming async rendering features react see second part clientside data fetching acdlite gave talk concepts apply enable asynchronously waiting data server react components progressively flushing markup ready hope enjoy watching talks think year might able close issue official strategy", "d": "5/2018"}, {"body": "new change try according chrome stops autoplay video nt muted property", "d": "5/2018"}, {"body": "would nt easier use key mirror following way instead", "d": "5/2018"}, {"body": "see comment june answer question keymirror nt never supported api react going lock conversation reduce noise", "d": "5/2018"}, {"body": "could ask saw snippet many sources nt make sense would use", "d": "5/2018"}, {"body": "think react internal use instead processenvnodeenv get statically replaced therefore uglify step completely remove portion code helps making lighter prod bundle", "d": "5/2018"}, {"body": "also problem radio firing radios whether selected radio value changed contrary fires though also works change input type", "d": "5/2018"}, {"body": "problem please post new issue impossible keep track old closed issues", "d": "5/2018"}, {"body": "many properties supported quotes one different inconsistent", "d": "5/2018"}, {"body": "please disregard reason finally seeing errors styles used dash camel case standard", "d": "5/2018"}, {"body": "warning since react one gaearon first prs", "d": "5/2018"}, {"body": "use standard way tools associate data element specifically use utility saves restores form data form elements labeled key problem could solved entirely using reactbased tools react standard interface dom standard dataset support", "d": "5/2018"}, {"body": "klarnaui team interesting hack deal issue exploiting event pseudo class described article used hack applications works fine could test chrome try come shim using technique generic", "d": "5/2018"}, {"body": "update issue", "d": "5/2018"}, {"body": "sophiebits posted tibbus request first class issue incidentally roads seem lead back issue searching area issue seems point comment november longer exists seems understandable react predict case simply places cursor end would ideal best practice overcome desired change value onchange tried many solutions posted avail perhaps due changes react brings also found workarounds setting cursor position manually conflict react perhaps renders long even resetting cursor position next tick causes noticeable cursor jump", "d": "5/2018"}, {"title": "deprecation notices point angular parsed separate jsdoc tag", "body": "use tslint rule parses jsdoc tags give message http marked things equivalent deprecation text nt appear lint warning", "num": "24237", "d": "5/2018"}, {"title": "nock support angular", "body": "submitting current behavior nock longer intercepting http requests made via angular http module expected behavior would hope nock still works angular http module minimal reproduction problem instructions use angular hit api endpoint try nock endpoint via nock inside tests motivation use case changing behavior mocking http calls angular application backend environment", "num": "24235", "d": "5/2018"}, {"title": "valuechanges subscription controls child component patchvalue emitevent true parent working", "body": "hi address component country province city country values populated ngoninit address component typescript thisservicegetcountries subscribe data gt thiscountries data data provinces fetched based value selected country dropdown thisgroupcontrols country valuechangessubscribe value gt thisprovinces null thisservicegetprovincebycountryid value subscribe data gt thisprovinces data data template added component parent form everything works expected patchvalue loading form edit view provinces fetched patching country value seems subscribe method child component getting called even emitevent true used let addressgroup thisinitaddress thisprovaddressespush addressgroup addressgroupcontrols country patchvalue addresscountry emitevent true addressgroupcontrols country updatevalueandvalidity please help", "num": "24232", "d": "5/2018"}, {"title": "angular serviceworker requesting gzipped content", "body": "recently added service worker angular app everything works great observed slight increased initial load time app loaded first time surprise mainxxxxjs file downloaded mb cloudfront gzips js files reducing size mainxxxjs around gzip client send request header browser sending header service worker requests nt header big problem angular build files large size bug fixed service workers nt support gzip would big disappointment chrome macos", "num": "24227", "d": "5/2018"}, {"title": "invalid multiple barrel exports packages", "body": "submitting current behavior multiple barrel exports external packages incorrect metadata file generated exports missing expected behavior metadata file contains exports minimal reproduction problem instructions create file containing barrel exports example tsconfig publicapits metadatajson motivation use case changing behavior consumer error environment", "num": "24225", "d": "5/2018"}, {"title": "customelementsschema breaks validation known components", "body": "submitting current behavior use angular alongside custom elements however use customelementsschema stops validating custom elements angular components well expected behavior like validation continue work angular components minimal reproduction problem instructions go see error uncomment line error environment", "num": "24223", "d": "5/2018"}, {"title": "upgrading angular application shows blank white screen", "body": "followed steps given upgrading angular application shows blank white screen routes route redirects default path working fine anyone help issue information need reproduce issue list dependencies", "num": "24222", "d": "5/2018"}, {"title": "update ng breaks font awesome icons", "body": "submitting current behavior update ng ng icons font awesome package lost padding seen new class every font awesome icon name ngstarinserted caused browseranimationsmodule able find settings padding via developer tools chrome global issue whole frontend see image expected behavior every font awesome icon badge padding like see attached image motivation use case changing behavior breaks frontend app environment", "num": "24220", "d": "5/2018"}, {"title": "long requests resent server every two minutes", "body": "submitting current behavior request long using httpclient get request sent every two minutes times expected behavior would expect request wait response without resending request server minimal reproduction problem instructions easy simple request server side wait two minutes little snippet calling client side motivation use case changing behavior change behaviour dev side environment", "num": "24219", "d": "5/2018"}, {"title": "appinitializer contract honoured testbed", "body": "submitting current behavior importing module providing promisebased appinitializer testbed tests executed promise fully resolved issue problem reporter closed found workaround expected behavior promise appinitializer fully resolved exactly running application uses module normally minimal reproduction problem instructions nt time expect simple know already implemented behave like expected yes produce repro motivation use case changing behavior contract tests real app environment", "num": "24218", "d": "5/2018"}, {"title": "angular remove html entities tags", "body": "submitting current behavior angular remove maybe another html entites expected behavior save entities please minimal reproduction problem instructions motivation use case changing behavior want use html entities html templates environment angular actual version stackblitzcom", "num": "24217", "d": "5/2018"}, {"title": "faild using ng build prod build project", "body": "submitting current behavior sad buiding project using ng build prod falid spend three day update angular want build pord using ng build prod building wait long time maybe project big however servaral time terminal shows error like expected behavior using ng build pord succesful minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24216", "d": "5/2018"}, {"title": "httpinterceptor returning response back forkjoin token observable", "body": "submitting current behavior service get token type observable httpinterceptor use inject token every http request thing works fine single request used forkjoin get response back also work forkjoin token normal string observable used take nt want token changed request get new token expected behavior work even forkjoin handle muliple requests minimal reproduction problem instructions example error interceptor typescript import httperrorresponse httpevent httphandler httpinterceptor httprequest angularcommon import injectable angularcore import observable rxjs import catcherror map switchmap rxjsoperators import appservice appservice injectable export class authinterceptor implements httpinterceptor constructor private service appservice intercept req httprequest next httphandler observable gt return thisservicetoken pipe map token string gt token const headers reqheadersset authorization consolelog req reqclone headers headers return req switchmap newreq gt nexthandle newreq interceptor work frokjoin case token string code example typescript service export class appservice token new behaviorsubject null constructor private httpclient thistoken next mytoken getusers return getposts return single one work thisappservicegetposts subscribe res gt consolewarn res work forkjoin thisappservicegetposts thisappservicegetusers subscribe posts users gt consolelog posts users motivation use case changing behavior token may change using app request get latest token older version environment", "num": "24215", "d": "5/2018"}, {"title": "add extra parameter router hooks", "body": "submitting current behavior currently routerhook knows routerstatesnapshot expected behavior routerhook know navigation know rest paramters snapshot routerstatesnapshot extras url urltree rawurl urltree skiplocationchange boolean replaceurl boolean id number motivation use case changing behavior motivation making better decisions navigation mainly angular runs web worker intention navigation initiated worker code executed main window order achieve main window need know navigation", "num": "24202", "d": "5/2018"}, {"title": "provide primitives iterate maps ngfor", "body": "submitting current behavior iterating map angular surprisingly hard code work map iterable code nt work either returns new array call expression stable similarly expected behavior hard solve automatically angular watching map identity might wrong user code mutates map watching map entries instead map cause performance issues slow large maps programmer intervention required however currently angular nt provide way fix problem angular provide two pipes box deal mutable effectively constant maps html would watch map entries would watch map identity sure give mhevery promised add pipe back never happened", "num": "24200", "d": "5/2018"}, {"title": "memory leak animations combination hostbinding", "body": "submitting current behavior using animations combination hostbinding dom nodes released open chrome open performance monitor toggle dom nodes note starting number switch foo bar number times click collect garbage observe dom nodes keep growing expected behavior dom nodes garbage collected dom nodes increase indefinitly minimal reproduction problem instructions environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "24197", "d": "5/2018"}, {"title": "route id empty auxiliary route next reload error thrown", "body": "submitting current behavior route child specifies id auxiliary route combine url goes empty id auxiliary url path next reload throws error even though url combined use application working fine url like user modal hello slash user means id expected nothing selected yet expected behavior work reload work routing using application clicking buttonslinks minimal reproduction problem instructions open embedded app click user link url changed component text user works displayed click hello link url changed component text user works displayed component text hello displayed reload embedded app error console result step motivation use case changing behavior routing used items list display component editor next nothing selected list displayed editor empty id used purpose nt use different routes basically screen redirecting go triggers components reinitialize leads blinking ui issues auxiliary routes used feature modal windows environment", "num": "24196", "d": "5/2018"}, {"title": "routerpreactivation multiple resolvers resolving empty observables cause uncaught emptyerror", "body": "submitting current behavior route one resolver empty observables next complete emptyobservable treated differently single resolver example resolvers resolves empty observable navigation canceled corresponding routedatafield undefined result resolvers resolve empty observables navigation canceled due uncaught emptyerror combined resolvers piped last operator expected behavior resolver resolves empty navigation must canceled behaviour single resolver even resolvers resolve empty router emit uncaught errors minimal reproduction problem instructions open click link observe uncaught emptyerror browser console interesting code appmodulets configures route two resolves resolve empty motivation use case changing behavior case implemented error consuming procedure takes care failures resolver actions like http errors thus case error important able indicate route cancellation without forwarding error router resolver obtain supposed obtain want navigate destination page would emptybroken b treat uncaught errors potential bugs set error handler accordingly error resolver ends uncaught error would wrong case handled http failure c resolving nothing empty observable right way indicate navigation shall cancelled error end console already case single resolvers environment", "num": "24195", "d": "5/2018"}, {"title": "rest parameter signature available consolelog", "body": "submitting current behavior code trying use error ngc started typescript c xampphtdocsappclientappsrcproviderscommondatats line supplied parameters match signature call target error failed transpile typescript errorcheckprogram c xampphtdocsappclientappnodemodules object c xampphtdocsappclientappnodemodules step c xampphtdocsappclientappnodemodules objectnext c xampphtdocsappclientappnodemodules fulfilled c xampphtdocsappclientappnodemodules copy finished expected behavior consolelog work rest parameter like works browser console check code browser console minimal reproduction problem instructions reproduce issue define function class instead calling consolelog call motivation use case changing behavior actual definition log function simply setting cookie live environment able check logs environment", "num": "24193", "d": "5/2018"}, {"title": "solve angular issue", "body": "syntaxerror unexpected end json input jsonparse wc dc q gd c eval digest undefined", "num": "24192", "d": "5/2018"}, {"title": "angular cli copy library assets folder dist folder", "body": "submitting current behavior upon building amp packaging angular library eg using angular cli copy library assets folder happens also using flag cli seems support copying root app assets library specific assets trying add project within following error appears command line schema validation failed following errors data path additional properties assets creating following custom rule copy files get following error asset written location outside output path workaround copy files using command line maclinux cp r another workaround use node script party package manage copying files however seems cli already supports assets copying root assets therefore consistent support libraries well expected behavior add ability define library specific property within example minimal reproduction problem instructions create library using add key library config within file motivation use case changing behavior often libraries include image files icons css files static files needed distrubted package environment", "num": "24190", "d": "5/2018"}, {"title": "change route guard resolver ordering follow route parentchild hierarchy", "body": "submitting current behavior resolve blocks processed distinctly guards finished meaning guards protect routes rely asynchronous data ie fetching user without breaking guardresolver paradigm expected behavior process guards resolvers follow route parent child hierarchy allow parent data loaded processing authorization child routes minimal reproduction problem instructions stackblitz click inline link top attempt load somewhere route however since parent resolver fire child guard user undefined redirected elsewhere route motivation use case changing behavior guardresolver dichotomy crumbles asynchronous data allow proper segregation duties described documenation either guards must load data handle authorization resolvers must load data handle authorization stands use guards always processed first actually wrote complete breakdown comment probably best explanation issue provide environment", "num": "24187", "d": "5/2018"}, {"title": "webkitlineclamp working angular", "body": "submitting current behavior angular able use webkitlineclamp limit text lines depending context upgrading angular stopped working reverted back worked scss styling using expected behavior webkitlineclamp continue work upgrading minimal reproduction problem instructions created project angular cli added element wraps upgraded project angular git project found two branches angular running ng serve render correctly upgrade angular running ng serve truncate motivation use case changing behavior list views nt want render full content instead preview due responsive design nt know much text need render rely lineclamp preview renders way much content longer manageable environment please let know provide additional information would helpful thank", "num": "24183", "d": "5/2018"}, {"title": "formbuilder group value object array", "body": "submitting current behavior result expected behavior minimal reproduction problem instructions motivation use case changing behavior seems bug formgroup build formcontrol tree without considering array object itis ok formarray environment", "num": "24182", "d": "5/2018"}, {"title": "angularelements component events called inconsistent zone", "body": "submitting current behavior event handlers angular element registered custom element called either angular zone root zone depending element instantiated leading different behaviors element initial markup page custom element registered event handlers called angular zone expected change detection refresh template done correctly element created angular zone custom element registered event handlers called either angular zone chrome leading correct behavior root zone browsers leading incorrect behavior change detection done template refreshed element created root zone custom element registered event handlers called root zone chrome browsers leading incorrect behavior change detection done template refreshed expected behavior angular element behave correctly matter instantiated minimal reproduction sample clicking toggle display work matter line minimal reproduction problem instructions depending line browser clicking toggle display works effect chrome first two lines work correctly browsers first line works correctly motivation use case changing behavior current behavior inconsistent event handlers called angular zone matter component instantiated would allow components created framework even framework run angular zone environment", "num": "24181", "d": "5/2018"}, {"title": "observablejs id happen", "body": "submitting current behavior expected behavior error minimal reproduction problem instructions think happen aot motivation use case changing behavior environment", "num": "24180", "d": "5/2018"}, {"title": "lifecycle hooks nt fire using arrow syntax", "body": "submitting current behavior using arrow function syntax lifecycle hooks ngoninit ngonchanges etc never called using nonarrow syntax works expected expected behavior arrow syntax work impossible reason documentation needs clear took many many hours isolate cause issue behavior unexpected implemented interface correctly would also nice codelyzer triggered error part rule possibly new rule minimal reproduction problem instructions see code stackblitz motivation use case changing behavior almost always use arrow functions especially using avoid potential issues set wrong value angular may ensure always set correctly calling think still allow arrow syntax people habit using environment", "num": "24178", "d": "5/2018"}, {"title": "error read property isskipself null", "body": "submitting current behavior error read property isskipself null expected behavior build serve app get error minimal reproduction problem instructions motivation use case changing behavior created library use app environment", "num": "24177", "d": "5/2018"}, {"title": "update guide work", "body": "submitting angular update guide advanced apps current behavior crashes ng update ps c usersjbardwebstormprojectsairconnectwebwebui npm install g angularcli c usersjbardappdataroamingnpmng c usersjbardappdataroamingnpmnodemodules angularclibinng angularcli postinstall c usersjbardappdataroamingnpmnodemodules angularcli node binngupdatemessagejs npm warn optional skipping optional dependency fsevents nodemodules angularclinodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch angularcli updated package ps c usersjbardwebstormprojectsairconnectwebwebui npm install angularcli npm warn rollback rolling back minimist failed probably harmless eperm operation permitted scandir c usersjbardwebstormprojectsairconnectwebwebuinodemodulesfseventsnodemodulesrcnodemodules npm warn angularcompilercli requires peer typescript gt lt none installed must install peer dependencies npm warn parcelpluginangular requires peer parcelplugintypescript none installed must install peer dependencies npm warn parcelpluginangular requires peer typescript gt lt none installed must install peer dependencies npm warn optional skipping optional dependency fsevents nodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch angularcli updated package ps c usersjbardwebstormprojectsairconnectwebwebui ng update angularcli global angular cli version greater local version local angular cli version used disable warning use ng config g cliwarningsversionmismatch false throw er unhandled error event error connect econnrefused objecterrnoexception exceptionwithhostport tcpconnectwrapafterconnect oncomplete ps c usersjbardwebstormprojectsairconnectwebwebui expected behavior would least complete task minimal reproduction problem instructions take project follow update steps website motivation use case changing behavior people want update tooling issues node version platform windows", "num": "24175", "d": "5/2018"}, {"title": "update guide lacks clarity", "body": "submitting update doc unclear figured use ngupgrade means upgrading angularjs whatever similar info tacked help user otherwise user idea whether tick name could easily confused something global minor issue real issue import animations services tools angularcore import angularanimations ok glean something animations wait exclusively say tools nt say animation tools generic could mean anything plus concern angular user wo nt already using angularanimations instead saying look looking example would go long way", "num": "24174", "d": "5/2018"}, {"title": "async factory provider", "body": "submitting current behavior use appinitializer set value service inject everywhere need lot places value need get async configuration apis needed current service embedded application compile time application needs installed customer environments expected behavior would love able following ts abstract class consts bunch parameters function loadconsts httpclient return provider module provide consts useasyncfactory loadconsts deps httpclient following servicecomponent class someservice constructor private httpclient private consts consts consts undefined current factories sync use function factory consts promise quite need motivation use case changing behavior allow better support apps run unknown sites way know compile time consts going consts fetched change lifetime application still need available anything happen", "num": "24173", "d": "5/2018"}, {"title": "feature child form groups", "body": "submitting moment looking functionality create child parent data synced separated across multiple forms moment following code current behavior ts thisdetailsformgroup buildergroup displayname contentstandarddisplayname validatorsrequired websiteaddress contentstandardwebsiteaddress validatorsrequired retailerteamid contentstandardretailerteamid validatorsrequired namespace contentstandardnamespace validatorsrequired alttextstatus contentstandardalttextstatus validatorsrequired alttextlengthlimit contentstandardnamespace thisvalidatealttextlength form vertical stepper steps form groups getting whole object expected behavior would save lot work able combine one form group separate html code validation applied subset group html js thisformgroupvalue motivation use case changing behavior would make logic complete form object separated multiple pages using stepper much simpler scenario form maps directly type object would make sense keep whole object environment", "num": "24172", "d": "5/2018"}, {"title": "way call change event file input component view initiation", "body": "", "num": "24171", "d": "5/2018"}, {"title": "bug vs code autocomplete stopped working", "body": "submitting current behavior autocomplete templates variables work using vs code extension angular language service angular expected behavior autocomplete templates work variables defined associated file began around time angular released minimal reproduction problem instructions stackblitz defined autocomplete find try reference component uses premade example angular material go stackblitz home page launch angular option autocomplete works perfectly fine environment browser na chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "24169", "d": "5/2018"}, {"title": "routeroutlet appending rather replacing", "body": "team using angular version use lt routerlink settings settings lt gt amp const routes routes path home component homecomponent path settings component settingscomponent path redirectto home pathmatch full navigating routing settings component rather opening page kindly help solve issue thanks", "num": "24168", "d": "5/2018"}, {"title": "property fromevent exist type typeof observable", "body": "submitting current behavior following ngbook version stuck example makes search youtube video type search returns show list video thumbnail results along description link video use observablefromevent getting error error srcappsearchboxsearchboxcomponentts error property fromevent exist type typeof observable expected behavior expect observable event minimal reproduction problem instructions code import component oninit output eventemitter elementref angularcore importing rxjs operators need theoretically able reduce build size vs importing import observable rxjs import rxjsaddobservablefromevent import rxjsaddoperatormap import rxjsaddoperatorfilter import rxjsaddoperatordebouncetime import rxjsaddoperatordo import rxjsaddoperatorswitch import youtubesearchservice servicesyoutubesearchservice import searchresult searchresultmodel component selector searchbox template styles export class searchboxcomponent implements oninit el object type elmentref angular wrapper around native element constructor private youtube youtubesearchservice private el elementref ngoninit void convert event observable observablefromevent thiselnativeelement keyup map e gt etargetvalue extract value input filter text string gt textlength gt filter empty debouncetime search ms gt thisloadingemit true enable loading search call search service map query string gt thisyoutubesearch query discard old events new input comes switch act return search subscribe results searchresult gt success thisloadingemit false thisresultsemit results err gt error consolelog err thisloadingemit false gt complete thisloadingemit false motivationuse case changing behavior want fromevent working angular environment", "num": "24167", "d": "5/2018"}, {"title": "directive styles", "body": "suggestion directive plus styleurls styles easily carry number topics customize related directive component restrictions repeated directive repeated btnlg btnsmall although individually pack publish introduce css style stylecss convenient think", "num": "24166", "d": "5/2018"}, {"title": "error upgrading angular redeclare blockscoped variable ngdevmode", "body": "submitting update angular following angular try serve application error error nodemodules error redeclare blockscoped variable ngdevmode nodemodules error redeclare blockscoped variable ngdevmode ng update says updated tooling issues node version platform windows", "num": "24165", "d": "5/2018"}, {"title": "inconsistent behaviour defaulturlserializer since angularrouter", "body": "submitting current behavior const expected ab hi amp jk const serializer new defaulurlserializer const actual serializerserialize serializerparse url assertthat expected actual angularrouter see expected behavior test fail minimal reproduction problem instructions adding segment url causes inconsistent behaviour router motivation use case changing behavior functions describe opposite calling directly result input value environment", "num": "24164", "d": "5/2018"}, {"title": "ngforof example reference documentation still uses release angular", "body": "submitting current behavior clicking live demo link ngforof reference documentation leads still uses release code imports example expected behavior link uptodate example", "num": "24163", "d": "5/2018"}, {"title": "ngupgrade disable interpolation attributes downgraded components", "body": "submitting current behavior currently angularjs interpolates values attributes downgraded components template compiler throws parse errors cases expected behavior angular nt interpolate values attributes motivation use case changing behavior places project generate dynamic json objects inject component attributes objects contain characters angular tries interpolate throws compilation error environment", "num": "24161", "d": "5/2018"}, {"title": "error run commond sudo npm install g angularcli", "body": "pengdemacbookpro angulardemos pengwang node v pengdemacbookpro angulardemos pengwang npm v pengdemacbookpro angulardemos pengwang sudo npm install g angularcli npm warn checkpermissions missing write access usrlocallibnodemodules angularclinodemodulesbonjour bonjournodemodulesdeepequal npm warn checkpermissions missing write access usrlocallibnodemodules angularclinodemodulesbonjour bonjournodemodulesmulticastdnsservicetypes npm warn checkpermissions missing write access usrlocallibnodemodules angularclinodemodulesbrowserslist browserslistnodemodulescaniusedb npm warn checkpermissions missing write access usrlocallibnodemodules angularclinodemodulesbrowserslist browserslistnodemoduleselectrontochromium npm warn checkpermissions missing write access usrlocallibnodemodules angularclinodemodulesbuffer npm warn checkpermissions missing write access usrlocallibnodemodules angularclinodemodulesbuffer", "num": "24160", "d": "5/2018"}, {"title": "ng new looks local cli version instead taking global cli version", "body": "current behavior cli version taken old projects placed disk trying use ng new command expected behavior global cli version used motivation use case changing behavior happens try create new project ng new thi hdd already contains angular projects environment windows node npm angular cli", "num": "24159", "d": "5/2018"}, {"title": "ngforof behaves strangely using data elements exported ngiterable", "body": "submitting current behavior template inside directive uses data another element accessing via index alias exported variable template rerendered data element changed expected behavior would nice behavior documented somewhere ideally fixed first two columns stackblitz editor behave way minimal reproduction problem instructions behaves fine html arr value html arr value example adding new message render block displays previous next messages time rendering thing cause update able tell individual item changed eg via deep copy solutions come mind provide function incorporates data indices template needs render example elements rework data structure elements already data need render individually motivation use case changing behavior reason behavior nt immediately obvious pretty confused able isolate simple example consider fact using aliased local variable exported variable causes things behave different bug environment", "num": "24155", "d": "5/2018"}, {"title": "unable importinject svg sprite angular component html template", "body": "unsure bug using angular properly many attempts think angular unable injectimport file component html template issuequestion trying injectimport svg icon sprites file component template despite various ways importing sprite file none work thus resulting icons rendered get angular injectimport svg icon sprites file component template expected behavior component template file want render svg icon able use following code code svg icon sprite file contains icons article suggests one able render svg icons inline using assuming svg icon sprites injected top html contains svg icon rendered background created stack overflow question detailed info import svg icon sprites angular component research google stack overflow seems others also issue work around solution found instead importinginjecting svg icon sprites file html component people imported converted icons css nt prefer use solution reproductionsample code created stackblitz example code various attemptsmethods get svg icons render importinjecting svg icon sprite file none methods work tested angular version iconssvg import method nt work component selector myapp template hello sample angular component testing see svg icon sprite import works see icons appear icon home icon rocket icon wifi icon display inlineblock width height strokewidth stroke currentcolor fill currentcolor export class appcomponent", "num": "24154", "d": "5/2018"}, {"title": "drop coding conventions section style guide", "body": "submitting current behavior style guide provides typescript coding conventions expected behavior couple document typescript syntax conventions motivationuse case changing behavior following coding style guide improves consistency communication projects nevertheless section coherent purpose style guide following reasons style guide aims provide generic set practices apply different organizations coding practices often organizationwide although exceptions rest style guide focuses semantics rather syntax coding conventions section contradicts original purpose style guide keep angularspecific providing generic set best practices assist developers ship successful projects conventions controversial semantics angular concepts naming member variables without prefix intercepting inputs could viewed inconsistency cc wardbell bradlygreen johnpapa igorminar", "num": "24153", "d": "5/2018"}, {"title": "run tests compilercli locally", "body": "submitting current behavior updated angular amp angular cdk least old reference expected behavior workflow updated minimal reproduction problem instructions follow instructions motivation use case changing behavior like improve compilercli add tests environment", "num": "24149", "d": "5/2018"}, {"title": "message error could clearer", "body": "message error could clearer variables available context would help finding error quickly part message", "num": "24148", "d": "5/2018"}, {"title": "remove amp xlf file case ng", "body": "submitting current behavior using xlf qu estce que template display qu estce que expected behavior display questce que show quote correctly minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24147", "d": "5/2018"}, {"title": "form use form components parent form validation wrong forever", "body": "form look found matter verification results subform parent form validation wrong forever realtime modification parent forms authentication method", "num": "24146", "d": "5/2018"}, {"title": "angularelements removechild dom error happen", "body": "error typeerror read property nativenode null current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24145", "d": "5/2018"}, {"title": "method add webpack dll configuration angularcli", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment method add webpack dll configuration angularcli", "num": "24144", "d": "5/2018"}, {"title": "improve error message", "body": "submitting current behavior custom library module lets call imports another custom library module module exports componentsmodules also exported via typescriptjavascript ie nondescriptive thrown following trace performing made problem difficult debug expected behavior provide better descriptive error message aid debugging environment", "num": "24143", "d": "5/2018"}, {"title": "adding html string dynamically events angular custom directives", "body": "angularjs way add html dynamically using compile angular replacement compile appending component dynamically using componentfactoryreasolver works refrenece dom element want append example body cant add angular reference wont work adding component dynamically take dom element component needs appended", "num": "24142", "d": "5/2018"}, {"title": "aio add call action star repository", "body": "submitting current behavior lot people visit angulario nt given strong path angularangular repository github would great people given call action share support angular via github stars expected behavior perhaps could something upper right hand corner toolbar page desktop enticed people visit github star repo sjtrimble think could look existing best practices propose approaches", "num": "24140", "d": "5/2018"}, {"title": "angular nested formarrayformgroup validator bug", "body": "submitting regression behavior used work stopped working new release x bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior main formgroup control formarray formarray formgroup groups formarray b formarray b formgroup b groups b formarray c formarray c formgroup c formgroup c formcontrol c validatorsrequired attached adding value formcontrol c change status formcontrol c formgroup c formarray c formgroup b valid formarray b formgroup formarrayc main formgroup still invalid expected behavior formarrays formgroups set valid minimal reproduction problem instructions make nested formarray formgroups set validator formcontrol formgroup c add value control form status updated motivation use case changing behavior form validation work correctly environment angular version browser x chrome desktop version official build", "num": "24137", "d": "5/2018"}, {"title": "able fetch local data stored json using httpclients using latest angular cli", "body": "submitting current behavior trying access data stored locally folder fetched expected behavior able fetch data successfully using method minimal reproduction problem instructions motivation use case changing behavior difficulty fetch data stored locally environment", "num": "24136", "d": "5/2018"}, {"title": "jasmine spies working ngondestroy", "body": "submitting current behavior spies never called lifecycle reaches tests expected behavior spy called test minimal reproduction problem instructions following spy never called test execution beforeeach gt fixture testbedcreatecomponent mycomponent motivation use case changing behavior spying directly original purpose however spying calls happening inside results behaviour environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac", "num": "24134", "d": "5/2018"}, {"title": "cpu overload using promise template", "body": "submitting current behavior ts import component angularcore component selector myapp templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent name angular public async getfullname return await thisname everything freezes work minutes memory leak expected behavior must either adequate error else minimal reproduction problem instructions", "num": "24133", "d": "5/2018"}, {"title": "angular material working firefox shows blank page", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24131", "d": "5/2018"}, {"title": "feature new platform use di node apps", "body": "submitting current behavior angular dependency injection used fontend applications expected behavior ability use angular di mechanism app nothing frontend new platform let call added create bootstrap nodejs app example usage typescript import injectable angularcore injectable providedin root export class helloworldservice run req res void ressend hello world typescript import ngmodule angularcore import express express ngmodule export class servermodule constructor helloworld helloworldservice const app express appget req res gt helloworldrun req res applisten typescript import platformapp angularplatformapp import servermodule servermodule platformapp boostrapmodule servermodule ofc modules used platformapp providers imports declarations supported motivation use case changing behavior ability use di node apps one di mechanism used frontend backend better code reusability building blocks already know one create nt require platform deprecated requires lots boilerplate code provider also modules good addition", "num": "24130", "d": "5/2018"}, {"title": "angular cli generates library file path reference tsconfigjson different build system outputs", "body": "submitting current behavior building library using angular cli app find reference library importing appmodulets expected behavior finds proper reference mytestlibrary minimal reproduction problem instructions create library containing capital letters like mytestlibrary command tsconfigjson file contains reference library mytestlibrary build mytestlibrary command import library appmodulets see error find module mytestlibrary look folder containing build output notice built library distmytestlibrary differs file path tsconfigjson motivation use case changing behavior angular cli providing proper reference build system outputs library without manually edit generated filepath tsconfigjson generating library either specify filepath build system would output aot compiled library b fix build system takes account capital letters nt insert hyphens lower cases everything suggest since build system around lot longer ng generate library command could also look way notice build app outputs folder matches name app build library uses library hyphenated form environment", "num": "24129", "d": "5/2018"}, {"title": "upgrade angular angular promiseobservablesubscribe error", "body": "submitting current behavior loading web app send http request received app uses promiseobservable get result parsing flatmap responsexml gt new promiseobservable responsexmltext subscribe response gt response http request arrives browser throws follow error expected behavior application methods able subscribe promiseobservable minimal reproduction problem instructions steps reproduce create new project follow libraries angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcdk angularcli angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack create service method loads url example simple soap wsdl uses promiseobservable parse xml code jso import injectable angularcore import http angular import import rxjsaddoperatormergemap import promiseobservable rxjsobservablepromiseobservable import observable rxjsobservable import behaviorsubject rxjsbehaviorsubject import subject rxjssubject import rxjsaddobservableof motivation use case changing behavior upgrade angular angular environment", "num": "24128", "d": "5/2018"}, {"title": "injectable providein usefactory stop resolving constructor parameters", "body": "submitting current behavior using shows following warning warning ca nt resolve parameters authenticationservice gitngngauthorizationsrccommonauthenticationservicets become error angular done without called treeshakeable provider done defining service flagged created factory function means parameters constructors provided factory function resolvable parameters error could happen want use new treeshakeable provider hacking type parameter constructor class interface resolved soon put decorator class get earlier mentioned warning nice since class never created actualy factory function checked check constructor parameters expected behavior minimal reproduction problem instructions original solution working one ts export interface authenticationserviceoptions export class authenticationservice constructor private options authenticationserviceoptions export function authenticationservicefactory return new authenticationservice export const authenticationserviceprovider factoryprovider provide authenticationservice usefactory authenticationservicefactory new solution working one hack ts export interface authenticationserviceoptions export function authenticationservicefactory return new authenticationservice injectable providedin root usefactory authenticationservicefactory export class authenticationservice constructor inject injector private options authenticationserviceoptions motivation use case changing behavior would like use new treeshakeable providers without hacking constructor parameters environment", "num": "24126", "d": "5/2018"}, {"title": "hybrid application break router functionality preloading default route", "body": "submitting current behavior preloading lazy modules work hybrid application app includes angularjs angular upgrademodule default route work hybrid application expected behavior preloading feature hybrid application work angularonly application default route feature work angularonly application minimal reproduction problem instructions unable create stackblitz sample due stackblitz bug download sample application based sample npm ng server ng serve open preloading works fine redirect default route works fine kill server ng serve c hybrid open enables hybrid application setup based result preloading working default redirect working motivation use case changing behavior hybrid application works wrong environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "24125", "d": "5/2018"}, {"title": "router cross module lazy routing", "body": "submitting current behavior currently lazy loaded module define routes nested route segment following routing structure currently afaik way define upper level routes lazy loaded module root usersmodule transactionsmodule expected behavior would great lazy loaded module could specify also routes nested segment case transactionsmodule could provide route currently ca nt ideas add backtracking router could choose proper route current segment also previous one case route could look something like add mode maybe possible solution would add additional criteria match routes example based data inherited parent using even better add callback would called previous routes would solve also flexible solution allowing many additional scenarios motivation use case changing behavior would greatly simplify routing provide currently unsupported scenarios", "num": "24124", "d": "5/2018"}, {"title": "angular upgrade error ngmodule metadata found appmodule", "body": "submitting current behavior upgraded angular apps angular building works fine linux macos users windows users run error ngmodule metadata found appmodule running however works fine expected behavior work even without platforms minimal reproduction problem instructions unfortunately produce repository reproduces issue realize less ideal happy debug app ideas look sadly running shows error twice instead motivation use case changing behavior want build app environment others happens windows users far tell related opening since error message comes angular cli looked existing issues could nt find anything helpful certainly nothing mentioning specificness windows", "num": "24123", "d": "5/2018"}, {"title": "angular cmd files coming project root whatever cmd run terminal", "body": "run ng serve happening error comes command prompt click show root folder click command prompt error show also uninstall global cli reinstall latest version issue resolved angular well angular packagejson issue posted stackoverflow also nobody respond", "num": "24122", "d": "5/2018"}, {"title": "ngnativevalidate working", "body": "using ngnativevalidate working", "num": "24121", "d": "5/2018"}, {"title": "create new app generate component", "body": "submitting current behavior update angular run generate myapp show massage terminal try create component module exist app show error happen since update angularcli try remove install version working auto update create new app environment", "num": "24120", "d": "5/2018"}, {"title": "create component met data path additional properties dryrun", "body": "", "num": "24119", "d": "5/2018"}, {"title": "pass router parent child input binding", "body": "want call subcomponents selector parent component adding routing subcomponents routing effective callingwhat make work current behavior define template inside sub component adds several routes rendering parent component routing inside template work expected behavior calling subcomponents selector hoped routes defined sub component template work normally", "num": "24117", "d": "5/2018"}, {"title": "angulario service worker documentation wrong outputpath", "body": "submitting current behavior documentation service workers suggests use node package run production build angular application received new service worker documentation suggests changing directories latest version angular configures put result expected behavior documentation needs update long defaults differs assumptions documentation page otherwise maybe note documentation page would suffice change directory value appears minimal reproduction problem instructions follow steps outlined documentation motivation use case changing behavior save people time trying learn angular service workers specifically environment", "num": "24115", "d": "5/2018"}, {"title": "builder templatedefinitionbuilder nt support animations yet", "body": "submitting current behavior error serve angular app expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24112", "d": "5/2018"}, {"title": "cdk componentportal foocmp attached selectedportal despite implemented according test code examples", "body": "submitting current behavior component portal component created componentportal attached despite implemented according test code example see expected behavior attach created portal component see code side notes reason according test examples official documentation really helpful relative new user angular examples blogs found outdated examples built top angular minimal reproduction problem instructions stackblitz preview stackblitz code changedetection changedetectionstrategyonpush export class maincomponent implements oninit selectedportal portal viewchild cdkportaloutlet portaloutlet cdkportaloutlet ngoninit thisselectedportal new componentportal barcomponent consolelog thisselectedportal log message injector undefined isattached false viewcontainerref undefined environment", "num": "24111", "d": "5/2018"}, {"title": "tutorial http working error apiheroes found status", "body": "tutorial http working error apiheroes found status", "num": "24110", "d": "5/2018"}, {"title": "update lazy loading information cli", "body": "submitting current behavior current documentation shows nonrelative paths used work depends tsconfig configuration angular cli baseurl made sense single apps angular cli adds multi project library support part changed done pointing specific project affects path resolution projects multiple also problematic app interprets paths tsconfig one way lib another way editor yet another way recognized editor nonrelative path lazy route work would include avoid confusion cli always used relative paths since nt know baseurl users configs expected behavior suggest examples use relative paths thus depending configuration user projects would also beneficial add note using nonrelative paths works based motivation use case changing behavior show instructions lazy modules work newly generated cli project related cc brandonroberts", "num": "24109", "d": "5/2018"}, {"title": "enable tab search browser address bar", "body": "modern browsers support spec called opensearch spec enables following usage pattern open browser tab address bar type domain part domain hit tab type search query hit enter specified domain opens search result page given query advanced usecases top search results could even appear address bar autocompletion list let worry focus flow experience look like chrome mediumcom user types query result looks like user hits enter feature relatively easy implement angulario two main pieces ensure activate search via url navigating angulario q start app open search results query might consider different url scheme example used auxiliary routes angular router create dedicated page needs thought go nondedicated page overlay search results eg homepage need ensure clean url search result overlay closed also need think bit report hits analytics also see add open search descriptor indexhtml found following resources helpful understand done", "num": "24107", "d": "5/2018"}, {"title": "find module angularclipluginswebpack", "body": "submitting versions angular cli node os angular angulardevkitarchitect angulardevkitcore angulardevkitschematics schematicsangular schematicsupdate rxjs typescript webpack electron app using angular upgraded upon trying run app got error find module angularclipluginswebpack looked nodemodules folder found webpack file used exist gone solution note angular app ejected hence using webpack still need reference imports webpack namedlazychunkswebpackplugin basehrefwebpackplugin update also ngtoolswebpack missing see npm library sure work since webpack removed cli folder", "num": "24104", "d": "5/2018"}, {"title": "", "body": "submitting current behavior currently want use test set false example also specify name metadata override thing want set metadata set also defined like metadata mandatory expected behavior setaddremove overridepipe want setaddremove another property fiels interfaces optional able write environment", "num": "24102", "d": "5/2018"}, {"title": "cdata xlf rendered plaintext", "body": "submitting current behavior upgrading application angular angular translations cdata used incorrectly rendered example translation like result plaintext expected behavior example get rendered text real link environment angular version", "num": "24101", "d": "5/2018"}, {"title": "read property prototype undefined upgrade angular ask question", "body": "submitting current behavior update app rendered browser chrome v firefox due uncaught typeerror read property prototype undefined inherits objectnodemoduleshashbaseindexjs webpackrequire expected behavior application rendered browsers minimal reproduction problem instructions ng serve app browse chrome motivation use case changing behavior update latest releases environment", "num": "24100", "d": "5/2018"}, {"title": "form validators nt take locale account", "body": "submitting current behavior number validators like validatorsmin validatorsmax nt work decimal separators expected behavior validator takes decimal separator locale set provider app module steps reproduce validator fail example ignores everything comma example works intended comma replaced dot motivation use case changing behavior validators usefull currect state countrieslanguages use different decimal separator validator right place logic gets values straight form environment angular version", "num": "24099", "d": "5/2018"}, {"title": "angularjson file replacement working indexhtml file", "body": "submitting current behavior angularjson buildconfigurationfilereplacement replace indexhtml indexprodhtml expected behavior replace similar replaces minimal reproduction problem instructions motivation use case changing behavior environment angular cli node os darwin angular animations cdk cli common compiler compilercli core forms languageservice material platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics clionly angularflexlayout ngtoolswebpack schematicsangular clionly schematicsupdate rxjs typescript webpack browser x chrome desktop version xx tooling issues node version platform mac others", "num": "24098", "d": "5/2018"}, {"title": "using styletransform scale considered unsafe", "body": "submitting current behavior replace throwed error console expected behavior minimal reproduction problem instructions environment angular project stackblitz ps maybe bug duplicate", "num": "24097", "d": "5/2018"}, {"title": "explicit invalidation resolved router data", "body": "submitting current behavior angular router resolve functionality seem support fundamental usecase explicitly invalidating refreshing resolved data application knows changed example consider route resolver loads project data api makes available number components subpages consider also child page rename project makes change via api invalidates resolved project data point need force reload also refreshes project data consider websocket connection streams updates server notifies app project renamed another user navigating another page rerun resolver instead originally resolved data returned caching expected helpful cases way invalidate cached data necessary expected behavior way tell router rerun resolver know data changed eg renameprojectcomponent controller call would rerun project resolver minimal reproduction problem instructions example rename project page changes project entity underlying service however original version entity provided resolver continues used way app signal router needs fetch updated project motivation use case changing behavior real world data changes caches need invalidated without ability angular router resolve functionality little toy environment browser na", "num": "24096", "d": "5/2018"}, {"title": "calling thisswpushunsubscribe throws error", "body": "submitting current behavior calling trying call call results following error error uncaught promise error subscribed push notifications however receiving notifications anymore expected behavior calling successfully unsubscribe user receiving web push notifications throw errors minimal reproduction problem instructions able reproduce due stackblitz limitations apparently throws uncaught promise notallowederror registration failed permission denied motivation use case changing behavior confusing behaviour makes dev hackz order print error console environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues platform", "num": "24095", "d": "5/2018"}, {"title": "getanimationstyle causes exceptions older browsers", "body": "submitting current behavior errors thrown collection animation styles older browsers problem line browsers return empty string style property set browsers like chrome android returns null instead empty string several string functions applied output method getanimationstyle like trim split indexof etc output getanimationstyle null exception thrown simple fix bug expected behavior animation work without errors minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24094", "d": "5/2018"}, {"title": "urlmatcher unable route url query parameters", "body": "submitting current behavior requirement route components based values url query parameters routes formcomponent routes listcomponent etc written routes urlmatcher achieve whilst logging console urlsegment captured query parameters therefore route based url query parameters expected behavior expected object urlsegment contain url query parameters minimal reproduction problem instructions tried reproduce motivation use case changing behavior environment", "num": "24093", "d": "5/2018"}, {"title": "compiler incorrectly emits comment arrow function", "body": "submitting current behavior using targeting comment inside lambda incorrectly transpiled inside lamba expected behavior emitted correctly minimal reproduction problem instructions emitted environment reported", "num": "24092", "d": "5/2018"}, {"title": "staticinjectorerror appmodule ngif templateref", "body": "submitting bug report code error staticinjectorerror platform core ngif templateref nullinjectorerror provider templateref nullinjectorget webpackinternal nodemodules resolvetoken webpackinternal nodemodules tryresolvetoken webpackinternal nodemodules staticinjectorget webpackinternal nodemodules resolvetoken webpackinternal nodemodules tryresolvetoken webpackinternal nodemodules staticinjectorget webpackinternal nodemodules resolvengmoduledep webpackinternal nodemodules ngmodulerefget webpackinternal nodemodules resolvedep webpackinternal nodemodules createclass webpackinternal nodemodules createdirectiveinstance webpackinternal nodemodules createviewnodes webpackinternal nodemodules callviewaction webpackinternal nodemodules execcomponentviewsaction webpackinternal nodemodules createviewnodes webpackinternal nodemodules environment", "num": "24091", "d": "5/2018"}, {"title": "ng production build getting miss match objects componentfactoryresolver", "body": "submitting current behavior expected behavior minimal reproduction problem instructions trying create dynamically creating component based template project information stackoverflow code development environment values build getting environment", "num": "24089", "d": "5/2018"}, {"title": "providedin annotation breaking library build rollup", "body": "submitting current behavior rollup breaks multiple imports provider using injectable providedin import injectable angularcore injectable providedin root export class import injectable angularcore import injectable providedin root export class constructor private ts files run ngc emits expected behavior ngc include multiple imports rollup breaking trying find imports bundling libraries minimal reproduction problem instructions create library project service files run ng build library project throw error like could resolve motivation use case changing behavior support bundling shareable libraries environment tooling issues node version platform mac", "num": "24088", "d": "5/2018"}, {"title": "form select change selected option options added via component", "body": "submitting current behavior form select control options added via another component attribute selector form setvalue method call change selected option expected behavior selected option changed minimal reproduction problem instructions demo select control values changed first option selected correct change selected value motivation use case changing behavior try reuse select control group options logic different components environment", "num": "24085", "d": "5/2018"}, {"title": "animation done callback fired twice edge", "body": "submitting current behavior currently callback fire browsers twice edge expected behavior callback fire browsers minimal reproduction problem instructions issue reproduced angular material select component event bound select template animation definition stackblitz related issue material repo note callback seems fire correctly transitions ends firing twice environment", "num": "24084", "d": "5/2018"}, {"title": "new syntax working", "body": "submitting current behavior using new syntax injectable services documented request service component ts component export class appcomponent title app constructor heroservice get error expected behavior would expect service injected singleton entire minimal reproduction problem instructions motivation use case changing behavior trying figure provide service singleton single module using new syntax documented seem work making mistake environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows angular cli angular", "num": "24082", "d": "5/2018"}, {"title": "button boxes nature margin", "body": "submitting current behavior buttons stick together margin check example expected behavior nature space check example minimal reproduction problem instructions stackblitz add template motivation use case changing behavior may leads app side style refactor component library button environment", "num": "24081", "d": "5/2018"}, {"title": "feature ability add meaningdescription icu messages", "body": "following string template html ski plural one ski ski ski skis car plural one car car car cars run three unit elements created first one meaning attribute submitting current behavior meaning attribute added first unit element expected behavior meaning attribute added three unit elements minimal reproduction problem instructions add following p element template run environment browser", "num": "24080", "d": "5/2018"}, {"title": "assets nt working", "body": "add images assets folder angular says found problem build", "num": "24078", "d": "5/2018"}, {"title": "revert test change corepackage", "body": "part landing ivy platform bootstrap required adjusting bazel test license info", "num": "24076", "d": "5/2018"}, {"title": "radkafka stopped working angular compilation error", "body": "submitting current behavior issue starts happen trying switch angular angular expected behavior code compiled without error minimal reproduction problem instructions attached short angular project instruction reproduce issue pockafkatypescriptzip install nodejs install angular cli running npm install g extract attached zip file cd pockafkatypescript npm install ng serve open see error angular live development server listening open browser date hash time chunk main mainjs mainjsmap main kb initial rendered chunk polyfills polyfillsjs polyfillsjsmap polyfills bytes initial rendered chunk runtime runtimejs runtimejsmap runtime kb entry rendered chunk styles stylesjs stylesjsmap styles kb initial rendered chunk vendor vendorjs vendorjsmap vendor kb initial rendered error nodemodulesnoderdkafkaindexdts error find module stream nodemodulesnoderdkafkaindexdts error find name nodejs mean node nodemodulesnoderdkafkaindexdts error find name buffer \u2139 failed compile similar use template starting point motivation use case changing behavior environment", "num": "24075", "d": "5/2018"}, {"title": "onchanges give proper types changed properties", "body": "submitting current behavior following code typescript const defaultvalue string test export class mycountercomponent implements onchanges input counter number ngonchanges changes simplechanges const isdefaultvalue changescountercurrentvalue defaultvalue currentvaluepreviousvalueanynumber expected behavior nt pass compilation motivation use case changing behavior typescript offering mapped types quite yet angular nt take advantage least large enough scale lots stuff still typed generics mapped types would give better results environment", "num": "24073", "d": "5/2018"}, {"title": "uncaught referenceerror must call super constructor", "body": "submitting current behavior running app browser throws following error built error uncaught referenceerror must call super constructor derived class accessing returning derived constructor new objectzunb p p n arraye push expected behavior app start run without error built flag compile error thrown build custom code violates condition described error minimal reproduction problem instructions npm install g angularcli ng new projectname cd projectname ng build prod upload app server php installed start local php server open terminal distprojectname run command run app motivation use case changing behavior optimization techniques within production build process seem broken environment server php builtin web server", "num": "24072", "d": "5/2018"}, {"title": "angular bootstrap", "body": "developed aspnet mvc single page application using angular bootstrap recently updated app use angular html layout spaces bootstrap controls example html firefox dev tools edit html option displays edit html add whitespace line break like first example browser displays spaces controls angular compacts html component templates make app uses bootstrap look like expected angular bootstrap angular bootstrap", "num": "24070", "d": "5/2018"}, {"title": "expose loadedconfig public way", "body": "submitting current behavior component loaded bootstrap time would like dynamically instantiate component loaded lazily current route purpose need access componentfactoryresolver route way could find access resolver via private loadedconfig property active route expected behavior would like able access resolved via public api relying implementation detail motivation use case changing behavior better stability code relying public apis environment", "num": "24069", "d": "5/2018"}, {"title": "angular root folder comes cmd files run ng serve command", "body": "run ng serve happening error comes command prompt click show root folder click command prompt error show also uninstall global cli reinstall latest version issue resolved angular well angular packagejson", "num": "24068", "d": "5/2018"}, {"title": "ngmodelchange called validate", "body": "submitting current behavior since angular ngmodelchange emitted valuevalidity updated control breaks custom validation expected behavior custom validation method uses bound model process validation validate method called current change propagated custom validation result unexpected rely current values model minimal reproduction problem instructions sample see sample custom validation method uses value bound property current value form control create second sample angular works expected questions solution problem maybe possible trigger programmatically modelchange angular version", "num": "24067", "d": "5/2018"}, {"title": "unhandled promise rejection template parse errors", "body": "recently upgraded angular application angular ans getting mentioned error browsers working fine help would appreciated thanks", "num": "24066", "d": "5/2018"}, {"title": "feature request make possible disable check", "body": "submitting current behavior using safevalue make error expected behavior value html code setted minimal reproduction problem instructions motivation use case changing behavior using safe html value without extra tags sometimes extra tags broken html layout css rules", "num": "24065", "d": "5/2018"}, {"title": "angular library error xyz constructor", "body": "submitting current behavior hi call constructor namespaced class residing angular library get following error production mode angularcli project built production mode aot enabled expected behavior expected error occur minimal reproduction problem instructions create library remove boilerplate add single file lib eg libinterfacesfilets add namespaced interface class update public api build amp run prod etc implement call constructor namespaced class outside library filets outside motivation use case changing behavior seems basic work environment", "num": "24064", "d": "5/2018"}, {"title": "bypasssecuritytrusthtml behaves different sanitize securitycontexthtml value", "body": "submitting current behavior function works expected import component pipe pipetransform securitycontext oninit angularcore import domsanitizer angularplatformbrowser pipe name safehtml export class safehtmlpipe implements pipetransform constructor private sanitized domsanitizer transform value string consolelog thissanitizedbypasssecuritytrusthtml value return thissanitizedbypasssecuritytrusthtml value component selector appdemo template export class democomponent html string constructor private sanitizer domsanitizer thishtml blah expected behavior might bug would expected works equally well import component pipe pipetransform securitycontext oninit angularcore import domsanitizer angularplatformbrowser pipe name safehtml export class safehtmlpipe implements pipetransform constructor private sanitized domsanitizer transform value string return thissanitizedsanitize securitycontexthtml value export class democomponent tmpl string constructor private sanitizer domsanitizer thistmpl sanitizersanitize securitycontexthtml blah minimal reproduction problem instructions motivation use case changing behavior evaluating bad programming practices actually lead security issues angular environment", "num": "24063", "d": "5/2018"}, {"title": "changelog missing", "body": "submitting current behavior hi guys noted changelog angular version missing possible thanks expected behavior minimal reproduction problem instructions open changelogmd motivation use case changing behavior environment", "num": "24062", "d": "5/2018"}, {"title": "angular elements loses change detector ability", "body": "submitting current behavior create custom element component changing input execute ajax call subscibe function change local variable change ditection reflect changes tempalte using expected behavior angular elements watching local variables changed like angular app part minimal reproduction problem instructions create user component compile last version javascript change events cycle working user change inside template motivation use case changing behavior helping find bugs environment", "num": "24061", "d": "5/2018"}, {"title": "service worker work sites landing page redirect http basic authentication", "body": "submitting current behavior added service worker web app manifest application using ran issues harder find due lack documentation problem caused landing page redirect know working multiple languages angular complicatedwe build separate bundles languages serve examplecomen exaplecompl etc makes sense landing page redirect ie user enters examplecom user redirected examplecomen automatically service worker work cases problem caused http basic authentication uncommon startups flow testing stuffs staging merging things production sitemost time new features needs hidden use http basic authentication prevent site available public service worker wont register sites throw expected behavior two things common included documentation people decide earlier environment angular cli node os linux angular cli common compiler compilercli core forms http platformbrowser platformbrowserdynamic platformserver router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack", "num": "24060", "d": "5/2018"}, {"title": "common httpclienttestingbackend async interceptor", "body": "submitting current behavior ts injectable export class asyncinterceptor implements httpinterceptor intercept req httprequest next httphandler observable set foo header async inject httptestingcontroller httpclient backend httptestingcontroller client httpclient gt clientget subscribe v gt alert v expected behavior issue calls httpclientestingbackend match done httpclienttestingbackend handle minimal reproduction problem instructions stackblitz repro motivation use case changing behavior testing async interceptor chain environment", "num": "24059", "d": "5/2018"}, {"title": "add ngprojectas host element attribute", "body": "submitting current behavior trying use ngprojectas adding host element nt work following need expected behavior expect able add ngprojectas host element since attribute anything wrong minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24058", "d": "5/2018"}, {"title": "ngzone gets stuck onmicrotaskempty stops emitting", "body": "submitting current behavior property reaches negative value prevents call emitter expected behavior property reaches negative point reset throw error currently less silent death minimal reproduction problem instructions stackblitz click hero click another hero notice application detect changes motivation use case changing behavior sure nesting value reaches point application therefore emulated behavior directly setting value zone apparently still works given nt get called lifecycle hooks nt called anymore leaving application inconsistent state managed unblock zone locally modifying method clamps value reaches negative value sure good solution done testing purposes environment browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx x ie version xx x edge version xx", "num": "24055", "d": "5/2018"}, {"title": "angulario front page get started text overflows element chrome linux", "body": "submitting current behavior get started link middle angulario front page overflowing containerelement arch linux gnome google chrome version official build get halfway outside top border started halfway outside bottom border white background buttonlike element get started seems padding property value element eg instead current issue would fixed expected behavior expected behavior would text get started stays within white box minimal reproduction problem instructions navigate angulario front page using google chrome version official build arch linux linux kernel gnome desktop environment version motivation use case changing behavior give professional image framework front page shown professional context professional equipment eg linuxbased os like mentioned extremely visible issue front page environment", "num": "24053", "d": "5/2018"}, {"title": "option make extract every string separate unit", "body": "extracting strings looks string values two location templates source code use string one unit element created xliffxmb would good option would make one unit element created string unit element would shared multiple string instances sometimes need translate string different way depending context example might two templates word one template meaning solid meaning difficult also might word would noun one location verb another right workaround add meaning attribute example difficult solid make two unit element appear xliff file however requires additional template editing ie adding attribute value developers might even notice need meaning translatortester point time might late would good option add separate unit element string instance extractor seems use string value optional meaning value calculating hash code id implement something else unique string instance added id calculation equation right figure anything would nt make id volatile case templatecode refactoring hope ideas submitting current behavior string appears templates source code unit element extracted xliffxmb expected behavior optionally extract string separate unit element minimal reproduction problem instructions use string two locations template different templates motivation use case changing behavior make localization quality better process easier environment angular version", "num": "24052", "d": "5/2018"}, {"title": "staticinjectorerror nullinjectorerror provider n", "body": "error ng build prod x bug report angular version browser x chrome desktop version xx note error nt show ng build", "num": "24051", "d": "5/2018"}, {"title": "serviceworker generated cli basehref gets registered nt cache javascript assets", "body": "submitting current behavior serviceworker generated cli basehref get registered browser context generating production bundle basehref followed get service worker registered service worker gets registered get error console registered nothing gets cached ngswconfigjson generated ngswjson basehref expected behavior cache javascript bundles minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24050", "d": "5/2018"}, {"title": "angular testbed memory leak", "body": "submitting current behavior running angular tests jest javascript heap keeps growing test untill tests finish memory exception thrown growing heap seems caused angular testbed possible cause growing heapsize expected behavior javascript heap size stays less constant whole test suite memory exceptions thrown minimal reproduction problem instructions see following bug report facebookjest environment", "num": "24048", "d": "5/2018"}, {"title": "use string enum values animation functions prod flag enabled", "body": "submitting current behavior created animation multiple states states saved string enum object use enum decorator property functions case without flag everything works fine try compile production environment app breaks error fired change enum values corresponding literal values everything works expected use substitute every occurrence enum values compile time stated typescript docs error persists expected behavior everything works fine using enums even using aot compilation minimal reproduction problem instructions state enum example example usage use template strings problem present even basic environment", "num": "24047", "d": "5/2018"}, {"title": "native sound plugin path", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24046", "d": "5/2018"}, {"title": "guards able use resolvers output", "body": "submitting current behavior resolvers executes guards expected behavior resolvers executed guards minimal reproduction problem instructions route one resolver amp one guard motivation use case changing behavior guards able use resolvers output determine navigation validity environment angular", "num": "24045", "d": "5/2018"}, {"title": "dynamic component loader embeding stand alone web components angular elements", "body": "submitting current behavior stand alone web components stand alone angular elements render via dynamic component loader error messages given expected behavior web components angular elements used static indexhtml page components render perfectly used inside minimal reproduction problem instructions edit download appcomponentts import import customelementsschema angularcore appmodulets declare schemas customelementsschema install angular elements custom elements npm angularelements webcomponentscustomelements edit polyfillsts import webcomponentscustomelementscustomelementsmin import webcomponentscustomelementssrcnativeshim heroprofilecomponentts add stand alone web component stand alone angular elements ng serve motivation use case changing behavior want able dynamically load web components angular elements app environment", "num": "24044", "d": "5/2018"}, {"title": "serviceworker get installed landing page redirection", "body": "submitting current behavior expected behavior serviceworkers installed redirection complete minimal reproduction problem instructions build application basehref serve application open console see security error use case many applications landing page redirection user tries go examplecom redirected examplecomen cases possible serviceworker environment angular cli node os linux angular cli common compiler compilercli core forms http platformbrowser platformbrowserdynamic platformserver router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack", "num": "24043", "d": "5/2018"}, {"title": "bug happened animations work ngcontent", "body": "submitting current behavior animation parent div ngcontent animation ngcontent break go wrong expected behavior animation works fine minimal reproduction problem instructions click toggle button twice see gone expected display animations motivation use case changing behavior environment remove animation without every thing ok", "num": "24041", "d": "5/2018"}, {"title": "ngdirty nginvalid classes apply properly binding happens template ref variable encountered", "body": "submitting current behavior ngdirty apply input element one character removed value nginvalid apply required input element value cleared unless blur happens bind input classname property input element declaration html expected behavior ngdirty get applied soon value changes nginvalid apply without blurring minimal reproduction problem instructions motivation use case changing behavior trying understand form control state taking peek formcontrols confusing issue occurs environment", "num": "24040", "d": "5/2018"}, {"title": "decimalpipe incorrectly rounds negative numbers fraction", "body": "submitting current behavior number displays template expected behavior number follow rules mathround display template minimal reproduction problem instructions details issue stems formatnumber calls formatnumbertolocalestring calls parsenumber mathabs afterwards formatnumbertolocalestring end readds negative symbol motivation use case changing behavior environment", "num": "24038", "d": "5/2018"}, {"title": "ivy bug binding mechanism", "body": "given implementation typescript export function bind value nochange tnochange currentviewbindingstartindex lt initbindings return data currentviewbindingindex value const changed boolean value nochange amp amp isdifferent data currentviewbindingindex value changed throwerrorifnochangesmode creationmode checknochangesmode data currentviewbindingindex value data currentviewbindingindex value currentviewbindingindex return changed value nochange think might bug following code template fn trigger first initialize binding system trigger first skip value return however never ever returned first check possible solutions preallocate binding slots init unique value could uniquenonexposed value tracking number binding slots would work compiler would impact runtime update runtime return first pass view would require changes compiler side would test added every single execution binding note short circuiting problem store different location issue taken account design pr come note affected shortcircuiting pr lands", "num": "24036", "d": "5/2018"}, {"title": "getting errors protected properties angular build trying access protected properties", "body": "submitting current behavior library project migrating angular cli class among things protected properties directive extends try build library get tons errors among errors get four errors everywhere project using example usage triggering error reason trying access protected properties outside idea causing errors get several screenfuls angular errors even aot build expected behavior build successful minimal reproduction problem instructions see environment angular cli node os darwin angular animations common compiler compilercli core forms platformbrowser platformbrowserdynamic platformserver router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildngpackagr angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angulardevkitschematicscli angularcdk angularcli ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsschematics schematicsupdate ngpackagr rxjs typescript webpack others tsconfiglibjson", "num": "24034", "d": "5/2018"}, {"title": "initial animation state server side rendering ignored", "body": "submitting current behavior relying angularanimation show hide dropdown since animation done browser side server side rendering shows elements hidden using browseranimationsmodule noopbrowseranimationsmodule servermodules nt trick neither triggers errors expected behavior rendered html server include initial state animations hidden something hidden initial state collapsed something collapsed fixed height fixed height set minimal reproduction problem instructions motivation use case changing behavior smoother transition server rendered application actual app without showing content hidden even simple expandedcollapsed animation collapsed default environment", "num": "24033", "d": "5/2018"}, {"title": "tagged template expressions supported metadata aot build angular built successfully angular", "body": "submitting current behavior consuming library built angular cli application library defined decorator takes tagged template literal argument example try aot build applcation get error updating angular aot build successful project expected behavior aot build successful minimal reproduction problem instructions use tagged template literal argument method decorator shown environment", "num": "24031", "d": "5/2018"}, {"title": "program production mode ng build prod run low version firefox", "body": "program production mode ng build prod run low version firefox development environment model ng build put polyfillsts compatible file opened consult solution thanks", "num": "24030", "d": "5/2018"}, {"title": "program production mode npm run bulid run low version firefox", "body": "program production mode npm run bulid run low version firefox development environment mode npm start put polyfillsts compatible file opened consult solution thanks", "num": "24029", "d": "5/2018"}, {"title": "angular changing locale nl de fr nt work solved", "body": "new angular professional programmer trying change decimal symbol changing locale configuration nl trying best search came following documentation link tried apply code recommended adding following appmodulets file import ngmodule localeid angularcore ngmodule providers provide localeid usevalue fr got following error message chrome browser console get following message use code result submitting environment solved adding following code appmodulets file solve issue import registerlocaledata angularcommon import localefr angularcommonlocalesfr registerlocaledata localefr fr", "num": "24028", "d": "5/2018"}, {"title": "installing yarn time ng serve ng bulid gives error solve problem", "body": "installing yarn time ng serve ng bulid gives error solve problem error typeerror e constructor staticsymbolresolverresolvemodule staticsymbolresolvergetsymbolbymodule staticreflectorfinddeclaration staticreflectorinitializeconversionmap new staticreflector aotplugingetlazyroutesfromngtools donepromisepromiseresolvethenthenthenthenthen processtickcallback error multi webpackdevserverclient srcmaints module found error ca nt resolve ngtoolswebpack multi webpackdevserverclient srcmaints error multi srcpolyfillsts module found error ca nt resolve ngtoolswebpack multi srcpolyfillsts webpack failed compile", "num": "24026", "d": "5/2018"}, {"title": "returning errors", "body": "submitting current behavior using clear typescript error error emitted emitted using flag however seems honoured files still outputted expected behavior error files outputted error occurs result return diagnostic errors set true also return semantic errors minimal reproduction problem instructions ts export interface interfacetest title string export const x interfacetest invalid true fail ts const options baseurl basepath emitdecoratormetadata true experimentaldecorators true moduleresolution tsmoduleresolutionkindnodejs module target outdir dist flatmoduleid test flatmoduleoutfile testjs fulltemplatetypecheck true skiptemplatecodegen true strictmetadataemit true const host ngcreatecompilerhost options const program ngcreateprogram rootnames pathresolve srcpublicapits options host const result programemit consolelog programgetngsemanticdiagnostics consolelog ngformatdiagnostics resultdiagnostics motivation use case changing behavior return error environment cc filipesilva hansl", "num": "24024", "d": "5/2018"}, {"title": "preselect radio button list index based condition radio checked angular", "body": "cant able preselect radio button list index based condition checked angular", "num": "24023", "d": "5/2018"}, {"title": "angular angular", "body": "submitting current behavior updated angular application uses portuguese language currency shown r updated currency started showing us instead r expected behavior currency pipe stayed showing r instead us minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24021", "d": "5/2018"}, {"title": "angular npm packaging structure invalid", "body": "resolving packagejson module done using file system current structure secondary packages eg invalid webpackts resolves get resolved module later webpack wants find search packagejson logic simple search file exist go folder repeat end packagejson practice cause problems sideeffects set root packagejson apply subpackage require specific setup wo nt work anyway incorrect fore details see issue opened webpackwebpack sokra response", "num": "24020", "d": "5/2018"}, {"title": "feature compilercli builtin support reverse dependency ngfactory type", "body": "submitting current behavior performing aot componentngmodule type dependency corresponding like javascript foocomponent export class foocomponent foocomponentngfactory import foocomponent export var foocomponentngfactory expected behavior option reverse dependency direction renaming intermediate file javascript foocomponentinternal export class foocomponent foocomponentngfactory import foocomponentinternal export var foocomponentngfactory foocomponent import foocomponentinternal import foocomponentngfactory export foocomponentinternal already confirmed feasible via custom build script possible option name minimal reproduction problem instructions na motivation use case changing behavior reversing dependency direction would remove needs path mapping aot making build step much easier eg loading dynamic component typescript class appcomponent constructor private viewcontainer viewcontainerref async loaddynamiccomponent const dynamiccomponent await import dynamiccomponent gt mdynamiccomponent thisviewcontainercreatecomponent dynamiccomponentngfactory eg loading dynamic ngmodule typescript function loaddynamicmodule return import dynamicmodule gt mdynamicmodulengfactory const routes routes path dynamic loadchildren loaddynamicmodule quite easy achieve via custom transformer requires lot boilerplate making builtin option compilercli would helpful environment", "num": "24019", "d": "5/2018"}, {"title": "new logo angular", "body": "hello designed logo angular hope interested give assessment solve problem related logo want angular ksyusteem", "num": "24018", "d": "5/2018"}, {"title": "missing word documentation", "body": "submitting current behavior frequently used modules page word missing array modules description expected behavior", "num": "24017", "d": "5/2018"}, {"title": "happend angular material", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "24016", "d": "5/2018"}, {"title": "error type number assignable type string", "body": "error srcappcomponentsadditemadditemcomponentts error type number assignable type string srcappcomponentsitemsitemscomponentts error type true assignable type false constructor private itemservice itemservice ngoninit onsubmit thisitemtitle amp amp thisitemdescription thisitemserviceadditem thisitem thisitemtitle thisitemdescription thisitemdate new date gettime", "num": "24015", "d": "5/2018"}, {"title": "ivy compiler generates wrong code hostbindings", "body": "submitting current behavior compiler generates code hostbinding uses loaddata method core example output code core package already changed implementation use loaddirective function seems similar situation query expected behavior compiler core use implementation cc kara mhevery", "num": "24013", "d": "5/2018"}, {"title": "component route destroyed route refreshed guard returns false", "body": "submitting expected navigating url guard blocks navigation returning component route destroyed current instead guard called reload returns false component still displayed guard blocks current route component spawned route still displayed component initially displayed guard indeed returned true since case anymore refresh destroyed minimal reproduction problem instructions const approutes routes path component areascomponent canactivate authguardservice runguardsandresolvers always path confirmation component confirmationcomponent navigate current route assuming returns false still displayed motivation use case changing behavior authguardservice verifies user logged logout navigates current route authguard returns false user allowed view site content anymore environment browser x chrome desktop version", "num": "24012", "d": "5/2018"}, {"title": "providedin annotation compatible deriving classes", "body": "submitting current behavior using annotation derived class derived class internally get factory created property already set providedin invoked see already set parent get set get around issue deriving classes set undefined turn invokes providedin logic create factory us expected behavior able use annotation normal deriving classes without need setting property back undefined minimal reproduction problem instructions injectable providedin root export class baseservice public name string test public get return thisname injectable providedin root export class testservice extends baseservice service available application fix static nginjectabledef undefined import service appmodule imports section motivation use case changing behavior behaviour deriving classes base classes environment", "num": "24011", "d": "5/2018"}, {"title": "invoked modules imported invoked", "body": "submitting current behavior noticed compiler host method invoked modules imported exported invoked modules imported expected behavior invoked modules imported exported minimal reproduction problem instructions instance invoked never importing never invoked importing publicapits ts import shared shared export shared ts export const title hello world tsconfig buildts ts const host ngcreatecompilerhost options modulenametofilename modulename string containingfile string gt const resolvedmodule tsresolvemodulename modulename ensureunixpath containingfile options host const program ngcreateprogram rootnames pathresolve srcpublicapits options host programgetngstructuraldiagnostics shell modulename angularcore containingfile usersalangitsrcpublicapits modulename angularcore containingfile usersalangitsrcpublicapits modulename angularcore containingfile usersalangitsrcpublicapits modulename angularrouter containingfile usersalangitsrcpublicapits reproduction repo environment", "num": "24010", "d": "5/2018"}, {"title": "unable count amount filtered data ngmodel", "body": "want change count filterdata ie ngmodel filterdata data arrived tables example initially textbox entered experia data database experia appeared table number data displayed righthand table see picture gt number searched data however issue enter text searchtext box data filters filtered data number displayed like number searched data course number less maximum number remains gt gt number searched data even though total data displayed number used ngmodelchange thought might work nt code transactioncomponenthtml code transaction number searched data arraycount transactioncomponentts countfilter filtdata consolelog inside countfilter filtdata thiscountfilterdata filtdatalength thisarraycount thiscountfilterdata consolelog inside arraycount thisarraycount thisarraycountthiscountfilterdata var result var url configurl var port configport url port transactionmastersearchtransactionform thisfilterobj headers new headers authorization bearer localstoragegetitem token map result gt thisresult resultjson subscribe res response gt consolelog date filter result transaction xxxxxxxxxxxx res thisrecords res", "num": "24009", "d": "5/2018"}, {"title": "feature allow clear service worker cache", "body": "submitting current behavior developer clear cookies data relevant user information browser user logs privacy security reasons avoid keeping relevant data browser cache delete relevant data user cookies localstorage however service worker cache expected behavior like able clear service worker cache whenever user logs make sure user access cache way could added function service worker provider motivation use case changing behavior problem user bob log hisher user account logout another user alice cache service worker might answer data alice requests privacy problem difference requests access token set header taken account caching service worker thus properly made request offline would able answer data another user another problem user could access cache browser web tools check contents cache even user logged environment browser", "num": "24008", "d": "5/2018"}, {"title": "", "body": "\u7236\u8868\u5355 \u63d0\u4ea4 fromsvaluejson fromsvalid fromsvalid json component selector templateurl styleurls changedetection changedetectionstrategyonpush export class implements oninit froms formgroup constructor private fb formbuilder ngoninit thisfroms thisfbgroup validatorscompose validatorsrequired thisonevalid validatorscompose validatorsrequired thisonevalid three validatorsrequired issubmit froms ev event evpreventdefault consolelog fromsvalue consolelog froms \u8868\u5355\u5185\u5355\u72ec\u6dfb\u52a0\u9a8c\u8bc1\u51fd\u6570 onevalid c formcontrol key string \u9a8c\u8bc1\u5668\u53ea\u6709\u51fa\u9519\u65f6\u624d\u8fd4\u56de\u503c cvalue return null let data li datatest cvalue return null return validdata \u9a8c\u8bc1\u4e0d\u901a\u8fc7 childvalid e consolelog e childvalid fromscontrols validjson childerrors fromscontrols errorsjson component selector templateurl styleurls providers provide ngvalueaccessor useexisting forwardref gt multi true provide ngvalidators \u4e0b\u8fb9\u9700\u8981\u5199\u4ee5 validate \u4e3a\u540d\u5b57\u7684\u9a8c\u8bc1\u51fd\u6570 useexisting forwardref gt multi true export class implements oninit controlvalueaccessor output isvalidnew eventemitter froms formgroup registeronchanged \u7528\u6765\u627f\u63a5\u5411\u4e0a\u4f20\u9012\u6570\u636e\u7684\u51fd\u6570 makechild constructor private fb formbuilder ngoninit thisfroms thisfbgroup validatorscompose validatorsrequired thisvalidate validatorsrequired issubmit froms ev event evpreventdefault thisregisteronchanged thisfromsvalue thismakechild\u4e24\u4e2ainput\u6846\u5b9e\u73b0change\u8054\u52a8 thisisvalidemit true validate c formcontrol key string \u9a8c\u8bc1\u5668\u53ea\u6709\u51fa\u9519\u65f6\u624d\u8fd4\u56de\u503c cvalue return null let data li datatest cvalue return null return \u7b2c\u4e8c\u4e2a\u8868\u5355\u9a8c\u8bc1\u4e0d\u901a\u8fc7 controlvalueaccessor \u5fc5\u987b\u6709\u7684\u4e09\u4e2a\u51fd\u6570 writevalue obj void obj\u6839\u636e\u4f20\u8fdb\u6765\u7684\u6570\u636e\u800c\u5b9a\u7c7b\u578bstring object array thisfromsget patchvalue \u521d\u59cb\u5316\u503c thisfromsget patchvalue registeronchange fn void thisregisteronchanged fn registerontouched fn void", "num": "24007", "d": "5/2018"}, {"title": "angular universal nodeenv set none build", "body": "submitting current behavior upgrading angular found may app nt running uploaded server found reason relies nodeenv would normally production somehow set none production build idea set expected behavior nodeenv nt set none minimal reproduction problem instructions clone repo see log outputs none environment", "num": "24006", "d": "5/2018"}, {"title": "angular language service syntax checking ngclass declaration", "body": "submitting current behavior syntax checking declaration expected behavior syntax checking described declaration minimal reproduction problem instructions html show error something available value motivation use case changing behavior catching bad references ngclass declarations allowing bugs remain run time environment", "num": "24005", "d": "5/2018"}, {"title": "aot fails latest upgrded version compilercli", "body": "created new angular project latest version compile aot using tsconfigaotjson getting error compilercli used latest typescript version downgraded luck", "num": "24004", "d": "5/2018"}, {"title": "calling formgroupupdatevalueandvalidity update child controls onupdate set submit", "body": "submitting current behavior calling formgroupupdatevalueandvalidity update child control therefore formvalue data pending child controls child controls onupdate set submit expected behavior formgroupupdatevalueandvalidity raise child validation update values would also acceptable formhooks manual value control onupdate set formgroupupdatevalueandvalidity would update minimal reproduction problem instructions demo instructions motivation use case changing behavior calling formgroupupdatevalueandvalidity mean regardless onupdate child controls validated updated environment", "num": "24003", "d": "5/2018"}, {"title": "reactive forms validation incorrectly raised formgroup onupdate set submit", "body": "submitting current behavior formgroup validation onupdate set submit child controls onupdate set change blur calling formgroup validation expected behavior formgroup validation called submit updatevalueandvalidity minimal reproduction problem instructions demo instructions motivation use case changing behavior want able raise validation submit usability issue users updated early validation complete form also may want submit form yet want able raise validation specific intervals using updatevalueandvalidity eg half way form environment", "num": "24002", "d": "5/2018"}, {"title": "support attribute binding progress value attribute", "body": "submitting current behavior possibly versions progress tag value attribute work using attribute binding rather binding value supplied defaults works value static max attribute works example issue see issue angularjs well resolved using ngattrvalue directive expected behavior progress tag show appropriate value binded using attrvalue binding minimal reproduction problem instructions add tag angular app bind value attribute variable inside component using attrvalue variablename set value number one set desired max motivation use case changing behavior environment", "num": "24001", "d": "5/2018"}, {"title": "ng build library template containing grave accent templateurl throws errors", "body": "submitting current behavior grave accent html component loaded templateurl library compiler throws errors expected behavior would expect could alphanumeric character templateurl template minimal reproduction problem instructions step unzip project angulargraveaccentzip step npm install step ng build graveaccent devhomie lib brianpilati ng build graveaccent building angular package building entry point graveaccent rendering stylesheets rendering templates compiling typescript sources ngc build error build error error lt pathremove gt error encountered metadata generated exported symbol graveaccentexamplecomponent lt pathremove gt metadata collected contains error reported runtime tagged template expressions supported metadata symbolic error message tagged template expressions supported metadata line character lt pathremove gt angulargraceaccentnodemodules arrayforeach validatemetadata lt pathremove gt angulargraceaccentnodemodules metadatacollectorgetmetadata lt pathremove gt angulargraceaccentnodemodules metadatacachegetmetadata lt pathremove gt angulargraceaccentnodemodules objectgetsourcefilemetadata lt pathremove gt angulargraceaccentnodemodules objectreadmetadata lt pathremove gt angulargraceaccentnodemodules tscompileraotcompilertypecheckhostadaptergetmetadatafor lt pathremove gt angulargraceaccentnodemodules staticsymbolresolvergetmodulemetadata lt pathremove gt angulargraceaccentnodemodules staticsymbolresolverhasdecorators lt pathremove gt angulargraceaccentnodemodules error error lt pathremove gt error encountered metadata generated exported symbol graveaccentexamplecomponent lt pathremove gt metadata collected contains error reported runtime tagged template expressions supported metadata symbolic error message tagged template expressions supported metadata line character lt pathremove gt angulargraceaccentnodemodules arrayforeach validatemetadata lt pathremove gt angulargraceaccentnodemodules metadatacollectorgetmetadata lt pathremove gt angulargraceaccentnodemodules metadatacachegetmetadata lt pathremove gt angulargraceaccentnodemodules objectgetsourcefilemetadata lt pathremove gt angulargraceaccentnodemodules objectreadmetadata lt pathremove gt angulargraceaccentnodemodules tscompileraotcompilertypecheckhostadaptergetmetadatafor lt pathremove gt angulargraceaccentnodemodules staticsymbolresolvergetmodulemetadata lt pathremove gt angulargraceaccentnodemodules staticsymbolresolverhasdecorators lt pathremove gt angulargraceaccentnodemodules motivation use case changing behavior project angular hundred characters upgrade angular moved project lots errors work around change amp however nt seem angular way environment angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildngpackagr angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularcdk angularcli angularflexlayout angularmaterial ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsupdate ngpackagr rxjs typescript webpack", "num": "23997", "d": "5/2018"}, {"title": "feature request router use resolvers guards components", "body": "submitting current behavior take example protected user required route picked invoked user exists guard stores current url shared service routes login page user logs check shared service routes back previous page case guard gets invoked guards resolvers also issue guard checked resolve happening take bit page blank offers feedback user progress bar visual indicator put issue relates expected behavior guards resolvers able used components guardresolver returns promise guardresolver component displayed place target route let give example const routes routes path dashboard component canactivate requireuserguard injectable component template progress bar export class requireuserguard implements canactivate constructor private userservice userservice canactivate route activatedroutesnapshot routerstate routerstatesnapshot boolean checks updating template want motivation use case changing behavior developers could put login pages directly inside route would remove need redirect elsewhere back status messages visual feedback could also displayed intermittent state resolvers error messages could displayed resolver instead resolving type target component deal errors dealt resolver status messages visual feedback could also displayed intermittent state sure many uses behavior general would make things lot cleaner developers well make interface look lot consistent", "num": "23996", "d": "5/2018"}, {"title": "feature specify custom element tags schemas", "body": "submitting current behavior today using custom elements webcomponents angular complain angular element add use customelementsschema make work nt receive validation errors type component names wrong even angular ones price pay high expected behavior ask feature allow defining specific custom elements like use like write custom component name like would receive error like happens angular components would also validate angular components names like already today even using custom elements motivation use case changing behavior receive validations using custom elements writing editoride red squiggles also building aot like validates today using custom elements environment information similar discussion following issue although issue specifically post issue member angular team said element declared ngmodule schemas prop support rather limited mostly offer nothing filter improve next releases later posts saying allow finer grained control schemas like including last post issue locked post almost years ago tried find issues like issue tracking feature nt found implemented angular sort feedback things going related implementation case thanks great work many great features like treeshakeable providers using rxjs waiting ivy", "num": "23995", "d": "5/2018"}, {"title": "mdc web transpiled", "body": "angular app compatible added mdc web code like import mdctopappbar materialtopappbarindex ngafterviewinit const topappbar new mdctopappbar thistopappbarelementnativeelement get syntaxerror stands code mdc library nt transpiled achive goal", "num": "23994", "d": "5/2018"}, {"title": "unhandled promise rejection staticinjectorerror matripple elementref", "body": "recently upgraded angular trying load app get error error staticinjectorerror matripple elementref staticinjectorerror platform core matripple elementref nullinjectorerror provider elementref tget mainclientjs mainclientjs xt mainclientjs tget mainclientjs mainclientjs xt mainclientjs tget mainclientjs jo mainclientjs tget mainclientjs os mainclientjs dont know whats exactly wrong troubleshooting sometime discovered upgrade issues recognizing angular material elements example matlistitem working properly upgrade whats going", "num": "23992", "d": "5/2018"}, {"title": "router replaces spaces query params", "body": "submitting minimal reproduction problem instructions opening angular app query param containing plus character router seems replace space character prior major version used replace plus encoded form note url changed browser url bar environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "23989", "d": "5/2018"}, {"title": "innertext work since chrome", "body": "submitting current behavior value get seems give whitespaces innerhtml give right value expected behavior return text element eventually effects like uppercase text minimal reproduction problem instructions unit test create component fixture test bed use fixture stopped working since chrome nt really know look motivation use case changing behavior think expected behavior bug corrected environment", "num": "23988", "d": "5/2018"}, {"title": "error error uncaught promise typeerror read property email null", "body": "error error uncaught promise typeerror read property email null typeerror read property email null new profilepage createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorycreate componentfactoryboundtomodulecreate viewcontainerrefcreatecomponent new profilepage createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorycreate componentfactoryboundtomodulecreate viewcontainerrefcreatecomponent c objectreject overlayportalnavcontrollerbasefireerror overlayportalnavcontrollerbasefailed tinvoke objectoninvoke tinvoke rrun defaulterrorlogger errorhandlerhandleerror ionicerrorhandlerhandleerror next schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectnext eventemitteremit anonymous tinvoke rrun ngzonerunoutsideangular onhandleerror thandleerror rrunguarded anonymous nmicrotaskdraindone einvoketask p v", "num": "23987", "d": "5/2018"}, {"title": "ssr angular universal handling large arrays ngfor blocks server processes", "body": "submitting current behavior handling large arrays ngfor blocks server processes makes impossible receive requests api static files expected behavior ngfor block running server minimal reproduction problem instructions access browser motivation use case changing behavior environment", "num": "23986", "d": "5/2018"}, {"title": "add hover action tabbed titles code snippet collections", "body": "submitting current behavior see obvious first filenames top set tabs switch code displayed hover title cursor changes hand selection cursor nothing else changes expected behavior might nice also show response hover title hovered site adds selection box javascript typescript title hover provide visual cue tab action available minimal reproduction problem instructions see motivation use case changing behavior ease use environment", "num": "23985", "d": "5/2018"}, {"title": "make title area code snippet collections similar single code snippet titles", "body": "submitting current behavior collection code snippets tabbed widget code area widget contains titles code files one clickable change displayed code area text medium gray standard page background current file underlined blue single code snippet single title code area title white text blue box expected behavior would nice similar color font border treatment minimal reproduction problem instructions motivation use case changing behavior consistency training eye recognize code visual cue environment", "num": "23984", "d": "5/2018"}, {"title": "consider white background docs", "body": "submitting current behavior background pages light gray light grays used extensively web soften harsh blackandwhite look also reduce contrast backgroundtext combinations gray text gray background makes doc harder use users light gray background also means graphics need either transparent borders white background graphics looks normal expected behavior would interesting see white background improves readabilitylook overall esp blue font areas tables near graphics minimal reproduction problem instructions see motivation use case changing behavior accessibility ease creating graphics look wellintegrated site environment", "num": "23983", "d": "5/2018"}, {"title": "soften header code sections", "body": "submitting current behavior code snippets displayed special box title area blue site masthead expected behavior code snippet titles visually stronger section headings makes harder users remain oriented overall doc especially longer docs also makes harder scan section headings scrolling would nice soften visual impact perhaps gray background less saturated blue reverse whitetextonblue bluetextonwhite experimentation designer required bonus color change would allow selection highlighting show title text minimal reproduction problem instructions motivation use case changing behavior go code snippet srcappappcomponentts environment", "num": "23982", "d": "5/2018"}, {"title": "add suggest edits feature docs", "body": "submitting current behavior starting api reference pages two icons top right page suggest edits pencil icon opens page editing mode make small changes one button create branch submit pr show source lt gt icon opens source code file location doc markup expected behavior would nice add suggest edits pages would make easier team community contributors submit simple changes without overhead fork maintenance pullpush cycle suggest edits pencil icon opens page editing mode make small changes one button create branch submit pr minimal reproduction problem instructions go click pencil icon upper right motivation use case changing behavior encourage contribution expedite simply changes environment", "num": "23981", "d": "5/2018"}, {"title": "improve css style tables guides", "body": "submitting current behavior table style adequate could improved expected behavior ideas improvements make table heading row font style consistent page subheading style reduce white space tables feel sophisticated display bit info without scrolling minimal reproduction problem instructions tables come search table across docs incorrectly use markdown tables html open issue fix html motivation use case changing behavior integrated feel rest doc environment", "num": "23980", "d": "5/2018"}, {"title": "fix tables markdown html per angular doc style", "body": "submitting current behavior following files contain tables plain markdown may also others expected behavior per angular docs style tables marked html correct examples minimal reproduction problem instructions see links motivation use case changing behavior consistent style ability control style css adhere angular authors guide environment", "num": "23978", "d": "5/2018"}, {"title": "parent animation query enter leave child animation exists", "body": "submitting current behavior parent child element animation triggers parent element query elements removing child trigger allows parent query elements successfully example scenario working follows expected behavior parent animation able query normally regardless animation trigger child element minimal reproduction problem instructions see demo stackblitz currently broken removing prop child div allows parent animation query elements note example uses route changes trigger animations tested example without routing using buttons change listeners change animation state still work think issue related using router outlet data trigger animations motivation use case changing behavior child animation triggers block parent animation trigger querying environment", "num": "23977", "d": "5/2018"}, {"title": "help", "body": "npm err path usrbinng npm err code eexist npm err refusing delete usrbinng libnodemodulesangularclibinng symlink target controlled npm usrbin npm err file exists usrbinng npm err move away try npm err complete log run found npm err submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23976", "d": "5/2018"}, {"title": "module found generating build upgrading angular", "body": "submitting current behavior updating angular version version generating error executing build ng build expected behavior generate build without errors minimal reproduction problem instructions generating build following error occurs environment development", "num": "23975", "d": "5/2018"}, {"title": "angular regression n newline removal components using aggressive", "body": "moved brianpilati going provide steps angular angular versions angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack tsconfigjson tsconfigjson file repro steps unzip file npm install ng serve observed behavior image three examples angular handles elements templates components first image tags without component formatted correctly second image component ngtemplate wraps already wrapped tags another set tags formatted correctly given nested tags third image component ngtemplate wraps text single set tags shows regression angular code mainjs see third example preserved function ms e return ri e gr null div class examplebox null null null null null e ei null angular pre code e gr null pre null null null null null e e null e gr null code null null null null null e ei null n hello theren formatted testn n properties n string n arrayn n objects n key n valuen n n n e ei null n e gr null div cl ass examplebox null null null null null e ei null angular pre code component e gr null apppreexample null null null vs ro hs null null e gr pre null null null null null e ei null e gr null code null null null null null e ei null n hello theren form atted testn n properties n string n array n n objects n key n valuen n n n e ei null n e gr null div class examplebox null null null null null e ei null angular component e gr null apppreexample null null null ys vs ro hs null null e ei hello f ormatted test properties string array objects key value function e e e null var sfunction e n r versions angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack repro steps unzip file npm install ng serve observed behavior image three examples angular handles elements templates components first image tags without component formatted correctly second image component ngtemplate wraps already wrapped tags another set tags formatted correctly given nested tags third image component ngtemplate wraps text single set tags shows angular handled correctly code mainjs see third example preserved function l e return e rp null div class examplebox null null null nu null e null n angular pre code n e rp null pre null null null null null e null e rp null code null null null null null e null n hello theren formatted testn n properties n string n arrayn n objects n key n ke valuen n n n e null n e null n e null nn e rp null div class examplebox null null null null null e null n angular pre code component n e rp null apppreexample null null null u ro null null e n e rp pre null null null null null e null e r p null code null null null null null e null n hello theren formatted testn n properties n string n arrayn n objects n key n valuen n n n e null n e n e null n e null nn e rp null div class examplebox null null null null null e null n angular component n e rp null apppreexample null null null u ro null null e n hello theren format ted testn n properties n string n arrayn n objects n key n valuen n n n e null n e null n observed behavior part ii maybe flag nt working output without flag ng build prod date hash time chunk runtime kb entry rendered chunk styles bytes initial rendered chunk polyfills kb initial rendered chunk main kb initial rendered total drwxrxrx brianpilati staff may drwxrxrx brianpilati staff may rwr r brianpilati staff may rwr r brianpilati staff may faviconico rwr r brianpilati staff may indexhtml rwr r brianpilati staff may rwr r brianpilati staff may rwr r brianpilati staff may rwr r brianpilati staff may without ng build prod date hash time chunk runtime kb entry rendered chunk styles bytes initial rendered chunk polyfills kb initial rendered chunk main kb initial rendered total drwxrxrx brianpilati staff may drwxrxrx brianpilati staff may rwr r brianpilati staff may rwr r brianpilati staff may faviconico rwr r brianpilati staff may indexhtml rwr r brianpilati staff may rwr r brianpilati staff may rwr r brianpilati staff may rwr r brianpilati staff may desired behavior angular compiler needs aware code template going wrapped tag another component using ngtemplate others words regression", "num": "23970", "d": "5/2018"}, {"title": "delete", "body": "submitting filename current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23969", "d": "5/2018"}, {"title": "feat platformserver add missing globals", "body": "submitting current behavior globals like provided domino safe add global namespace included expected behavior beforeduring app initialization safe globals added prevent render errors note include unsafe globals like motivation use case changing behavior reduce render errors environment", "num": "23967", "d": "5/2018"}, {"title": "stackblitz exports invalid angular project structure", "body": "submitting current behavior exporting live example zip file stackblitz produces incorrect project file structure files extracted zip expected behavior project exported generally matches live example stackblitz cli structure minimal reproduction problem instructions visit click button download zip extract zip folder compare example file structure extracted folder structure folder nested another folder file present zip file root folder date older version angular cli motivation use case changing behavior environment cc ericsimons", "num": "23962", "d": "5/2018"}, {"title": "angular serverside prerendering error nodeinvocationexception prerendering failed error referenceerror document defined", "body": "submitting current behavior migrate angular webpack error occurs application started nodeinvocationexception prerendering failed error referenceerror document defined j mainserverjs error ngbfocustrapfactory function used document appmodulesharedts component reference ngbootstrapngbootstrap ngbactivemodal moreover appmoduleserverts import appmodulesharedts tried move component appmodulesharedts appmodulebrowserts another error appear component found given changed anything application upgrade figure solve problem thanks help expected behavior normal functioning prerendering angular minimal reproduction problem instructions tried reproduce error stackblitzcom without success project greater due mainserverjs vendorcssjs motivation use case changing behavior migrate angular webpack environment", "num": "23961", "d": "5/2018"}, {"title": "updateangulario hangs edge", "body": "submitting current behavior expected behavior minimal reproduction problem instructions environment", "num": "23959", "d": "5/2018"}, {"title": "chrome angular v jit compile unhandled promise rejection ca nt resolve parameters", "body": "submitting current behavior come work run building project develop jit webpack always get error tested without happypack aot works correctly ff open project correctly chrome raisethis error version bottom expected behavior jit compilation work custom services minimal reproduction problem instructions demo present later create happening custom services modules lazy loaded getdependenciesmetadata resolving custom services undefined environment core dependenices", "num": "23958", "d": "5/2018"}, {"title": "internationnalisation angular", "body": "run command angular cli ng serve aot localefr error unknown option", "num": "23957", "d": "5/2018"}, {"title": "datepipe work anymore updating angular", "body": "submitting current behavior updated angular version update datepipe work anymore markup error printed console expected behavior date object formatted according given format markup minimal reproduction problem instructions works returns following error returns similar error motivation use case changing behavior breaking changes communicated changelog environment", "num": "23956", "d": "5/2018"}, {"title": "dont find reference use thissettest thisinnertestfn", "body": "submitting current behavior object related issue written function one foreach put foreach loop inside condition try access function using object persisting reference function explicitly save use eg demo boolean const self thisitemsfn listtocheck arrforeach function itemtocheck itemtocheckindex selfinnertestfn selfsettest return true example selfinnertestfn selfsettest dont find reference use thissettest thisinnertestfn expected behavior using thissettest thisinnertestfn accessible functions minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23955", "d": "5/2018"}, {"title": "please make angular support hammerjs doubletap", "body": "submitting current behavior angular nt support hammerjs doubletap expected behavior angular support hammerjs doubletap add item doubletap true object eventnames platformbrowsersrcdomeventshammergesturests file ok environment", "num": "23954", "d": "5/2018"}, {"title": "upgrade jasmine typings definitely typed head version", "body": "submitting motivation use case changing behavior google internally uses jasmine typings sadness trying upgrade typings current head definitelytyped claims support likely works previous attempts upgrading jasmine failed cc vikerman", "num": "23952", "d": "5/2018"}, {"title": "tutorial hero editor section needs blank space", "body": "submitting current behavior needs space documentation page important ngmoduledecorator annotates toplevel appmodule class expected behavior important ngmodule decorator annotates toplevel appmodule class minimal reproduction problem instructions motivation use case changing behavior better readability environment", "num": "23951", "d": "5/2018"}, {"title": "routertestingmodule allow enabletracing", "body": "submitting current behavior routertestingmodule ignores expected behavior print router debug information console", "num": "23946", "d": "5/2018"}, {"title": "new added heroes work expected", "body": "submitting bug bug report description bug list heroes heroes url first shows listed heroes deleted heroes post newly added heroes reflect manner please find screen shot reference step reproduce go live example navigate heroes url delete heroes enter name new heroes click add button see bug find reference local", "num": "23945", "d": "5/2018"}, {"title": "animations child element triggers performing easing", "body": "submitting current behavior given trigger transition appropriately performs easing however inside trigger performs easing simply transitions style states expected behavior transitions styling trigger animated easing specified function minimal reproduction problem instructions example stackblitz example stackblitz showing using css transitions accomplish look like motivation use case changing behavior able use angular animations without resorting css transitions directly environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "23939", "d": "5/2018"}, {"title": "fix aio background white logo", "body": "submitting current behavior expected behavior background white commit", "num": "23938", "d": "5/2018"}, {"title": "webpack guide deprecatedremoved", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment webpack guide outdated still available direct links search results since promoting use cli add deprecation warning top guide remove", "num": "23937", "d": "5/2018"}, {"title": "cli quick start readme outdated", "body": "submitting current behavior related example working correctly readmemd outdated removed expected behavior removed repository minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23936", "d": "5/2018"}, {"title": "angular commons published yet", "body": "angularcommons exists npm repository libraries exists", "num": "23935", "d": "5/2018"}, {"title": "deploy angular universal serversiderendering web app", "body": "hi built angular universal web working fine localhost port ex want deploy app firebase nt know found solution deploying firebase please let know deploy firebase", "num": "23934", "d": "5/2018"}, {"title": "inconsistent behavior input binding object property returned async pipe", "body": "submitting current behavior currently binding expressions form input property trigger change detection related child component often expressions form sync often mean situations source object changed value bounded property expected behavior change detection behavior components whose properties bounded minimal reproduction problem instructions click next button change detection run components whose properties bonded ones bounded expressions environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "23933", "d": "5/2018"}, {"title": "r", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23932", "d": "5/2018"}, {"title": "ca nt install angular using npm yarn", "body": "submitting current behavior running targeting angular package get following errors even tried yarn nt help installation process hangs awfully long packages exits following errors expected behavior install without errors minimal reproduction problem instructions target angular run motivation use case changing behavior ca nt install angular lol environment", "num": "23931", "d": "5/2018"}, {"title": "undefined function onfinish callback animation player", "body": "submitting current behavior getting following error probably originating environment", "num": "23930", "d": "5/2018"}, {"title": "", "body": "hi please help fix issue maints import enableprodmode angularcore import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appappmodule import environment environmentsenvironment environmentproduction enableprodmode documentaddeventlistener domcontentloaded gt platformbrowserdynamic bootstrapmodule appmodule catch err gt consolelog err thanks", "num": "23929", "d": "5/2018"}, {"title": "", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23928", "d": "5/2018"}, {"title": "syntaxerror building", "body": "submitting current behavior get two syntax errors running app mainjs error still inside also vendorjs also get error polyfilljs line expected behavior minimal reproduction problem instructions created project reproduce repo ng new testapp change add polyfills run ng serve open motivation use case changing behavior broken ie environment angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version xx edge version xx tooling issues node version xx platform others", "num": "23927", "d": "5/2018"}, {"title": "angular webpack babelpresetenv migration", "body": "submitting current behavior want activate addiction babelpresetenv instead code expected behavior migrated babelpresetenv angular successfully migrated angular angular wrote wrong repository apologize wrote cool bot answered wrote recommendation nobody answered help please cool minimal reproduction problem instructions git clone npm install npm start motivation use case changing behavior want upgrade modern babel package environment regards", "num": "23926", "d": "5/2018"}, {"title": "document identify angular labs projects", "body": "submitting current behavior documentation describe find identify angular labs projects affected doc expected behavior developer want know know something considering using angular labs project angular labs projects available might interesting explore minimal reproduction problem instructions motivation use case changing behavior early adopters might want experiment provide feedback angular labs projects angular labs projects subject standard practices policies support policies described would helpful know recognize environment", "num": "23921", "d": "5/2018"}, {"title": "firestore snapshotchanges map error", "body": "submitting current behavior error typeerror changespayloaddocchanges function mapsubscriberproject expected behavior snapshotchanges return observables minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23918", "d": "5/2018"}, {"title": "wrong imports written treeshakable providers bazel", "body": "treeshakable providers trigger angular compiler introduce import statements user code nt turns places conflate module paths disk module names earlier versions compiler nt distinction end writing imports like far know issue affects bazel users compile use treeshakable providers far seen issue internally angular found part repro add treeshakable provider eg paste import injectable platformid angularcore import document isplatformbrowser angularcommon export function viewportscrollerfactory platformid string document return isplatformbrowser platformid null null injectable providedin root usefactory viewportscrollerfactory deps platformid document export abstract class viewportscroller build npm package look string output remove ngsummary files always paths disk module identifiers ngfactory files shipped package probably harmless interestingly find bad import output output", "num": "23917", "d": "5/2018"}, {"title": "add html dynamically element", "body": "need dynamically add html element template code component appcomponenthtml html welcome title next view load viewfile viewcontent gt shows default template viewfile gt shows default template viewfile file want load located route assetsviewsdefaulthtml html default template viewfile current behavior folder html file file read text using get http request content shown template problem content html loaded text template could solve part used passed contents html file problem file interpolation variables loaded angular expected behavior dynamically load html files located project folder display element template detecting variables adding following expected displayed template variable loaded element environment", "num": "23916", "d": "5/2018"}, {"title": "hidden elements inside animated elements break animations safari", "body": "submitting current behavior element parent element animated animation never completes safari used work fine angular continues work fine chrome ff expected behavior animation complete minimal reproduction problem instructions open safari hit toggle animation observe close button bottom right appearing properly inspect element see animation stalling dom still class remove component template everything works ok motivation use case changing behavior used work fine works ok browsers environment", "num": "23915", "d": "5/2018"}, {"title": "null parent form via formgroupdirective child form component", "body": "submitting current behavior based subform demo kara reactive forms using reactive form child custom form component able access parent form order add form controls parent injecting formgroupdirective form property null expected behavior injecting formgroupdirective component part reactive form form property give reference parent form minimal reproduction problem instructions examine console parent form null error typeerror read property addcontrol null motivation use case changing behavior adding child form parent form without requiring parent form create form controls child form elements environment", "num": "23914", "d": "5/2018"}, {"title": "npm audit security warnings", "body": "submitting current behavior performing npm audit root new angular material project following reported vulnerabilities found packages audited dev optional severity low high expected behavior security warnings minimal reproduction problem instructions execute npm audit command root project course npm cache date motivation use case changing behavior important address security issues proactively environment", "num": "23913", "d": "5/2018"}, {"title": "components exported library module available app code", "body": "submitting current behavior components exported library module available templates imported app code expected behavior components available everywhere minimal reproduction problem instructions via cli create new demo app new library testlibrary workspace add component testcomponent library include export config library module build library use component template demo app everything works attempt import testcomponent component demo app via import testcomponent testlibrary notice app fails build stating testcomponent exported member testlibrary adding export testcomponent publicapidts solves issue declare component export two places motivation use case changing behavior declare components export two places redundant intuitive environment", "num": "23912", "d": "5/2018"}, {"title": "read property nativeelement null", "body": "writing unit test cases jasmine karma writing unit test cases submitting form form spec file describe scopeeditorcomponent gt submit form gt let scope scope scopevaluenativeelementvalue test examplecom getting error typeerror read property nativeelement null someone help fix", "num": "23911", "d": "5/2018"}, {"title": "test", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23910", "d": "5/2018"}, {"title": "angular run dynamic external template build", "body": "question nt know put put sorry put wrong place angular want angular component run external template amazon run time build dynamic content rendering try component selector appselector templateurl work styleurls stylescss work one help issue", "num": "23909", "d": "5/2018"}, {"title": "module nodemodules angularcorecore exported member opaquetoken", "body": "submitting current behavior updating angular project version following source said remove use instead currently using codebut also get lot errors regarding project running complete error detail expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23905", "d": "5/2018"}, {"title": "expression form supported compiling library project injectiontoken", "body": "submitting current behavior trying build new angular cli library uses injectiontoken get following error error encountered metadata generated exported symbol testlibcomponent metadata collected contains error reported runtime expression form supported expected behavior error minimal reproduction problem instructions ng new clitest cd clitest ng g library testlib change testlibcomponentts import component oninit inject platformid angularcore component selector libtestlib template styles export class testlibcomponent implements oninit public x object constructor inject platformid appid object thisx appid ngoninit ng run testlib build build error appear full error output similar problems usage injectiontokens motivation use case changing behavior environment", "num": "23904", "d": "5/2018"}, {"title": "docs router tell us remove lazyrouting modules", "body": "stumbled badly child route configuration router guide tell remove lazy loaded routes see mean crisiscenter route configuration search end followed pattern app module lazy loads empty child path matched route match reported error router event trace tells matching later router guide talk bit configuration talk silently disappears lazy load configuration call important remove lazyconfigured routes", "num": "23900", "d": "5/2018"}, {"title": "use routerlink issue angular", "body": "error error staticinjectorerror appmodule routerlinkwithhref router staticinjectorerror platform core routerlinkwithhref router nullinjectorerror provider router nullinjectorpushnodemodules resolvetoken tryresolvetoken staticinjectorpushnodemodules resolvetoken tryresolvetoken staticinjectorpushnodemodules resolvengmoduledep ngmodulerefpushnodemodules resolvedep angular cli node os angular package version angulardevkitarchitect angulardevkitcore angulardevkitschematics schematicsangular schematicsupdate rxjs typescript", "num": "23898", "d": "5/2018"}, {"title": "cli build removes exported enum definition", "body": "submitting current behavior define enum follows export namespace someenums export enum enum zero one reference follows export class appcomponent public someenum someenumsenumone someenum undefined happens brand new project ng build prod ng serve works fine expected behavior would expect someenum minimal reproduction problem instructions motivation use case changing behavior use case want use enums appear get wiped environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others happens ng build prod ng serve works expected", "num": "23896", "d": "5/2018"}, {"title": "type declaration activatedroutefragment nt declare possible null values", "body": "submitting current behavior type declaration declares emit string instances nothing else surprise emits values routes nt fragment expected behavior see three valid options particular order emit instead missing fragments nt emit missing fragments change type declaration minimal reproduction problem instructions repro demand motivation use case changing behavior environment", "num": "23894", "d": "5/2018"}, {"title": "currencydecimal pipe weird rounding big numbers", "body": "submitting current behavior business application working numbers currencies format attempt format big number according current locale sometimes ends unwanted rounding results expected behavior result minimal reproduction problem instructions motivation use case changing behavior angularjs currency filter worked expected maybe formatting dependent decimal operations make currency pipe independent decimal pipe would currencies rounding environment", "num": "23893", "d": "5/2018"}, {"title": "domsanitizer safehtml node defined", "body": "submitting current behavior appears node console compilation linking function expected behavior error nt appear minimal reproduction problem instructions problem related domsanitizer safehtml module sample usage import pipe pipetransform angularcore import domsanitizer safehtml angularplatformbrowser pipe name sanitizehtml export class sanitizehtmlpipe implements pipetransform constructor private sanitizer domsanitizer transform v string safehtml return thissanitizerbypasssecuritytrusthtml v motivation use case changing behavior environment", "num": "23892", "d": "5/2018"}, {"title": "angular cli nt generate baseurl tsconfigappjson", "body": "submitting current behavior ng new someproject routing setup routing lazy loading modules ng serve result failed compile error could resolve module appusersusersmodule relative srcappapproutingmodulets workaround set baseurl param tsconfigappjson expected behavior angular cli generates tsconfigappjson baseurl value minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23890", "d": "5/2018"}, {"title": "angular route transition takes long time", "body": "submitting current behavior perform routing link defined follows router config looks follows indexhtml base url defined idea globalzoneawarecallback function takes long time might seem tolerable really slow less powerful computers seconds browser browser independent", "num": "23888", "d": "5/2018"}, {"title": "simple question doc system usage", "body": "angular awesome doc site enginedoc generator used projects angular related", "num": "23887", "d": "5/2018"}, {"title": "handle async resource requires resources statically resolvable", "body": "submitting current behavior based unit test load resources one needs call using compilerhost return however moment still getting exception expected behavior error using minimal reproduction problem instructions environment", "num": "23886", "d": "5/2018"}, {"title": "external js file transfer data component", "body": "business like need write js libraries others use back end give written script string us http requests parse scripts execute related logic second script others call contains code controls logic user course use library scripts write operate display transfer data component external js need also transfer data external js inner component going know correct way make data angular component available global js call data global processing update information component affect page third point key clear god let go ming road thank", "num": "23880", "d": "5/2018"}, {"title": "compile exception", "body": "compile exceptions info worked ends ok verbose cli usrlocalbinnode usrlocalbinnpm run builda info using npm info using node verbose runscript prebuilda builda postbuilda info lifecycle newadmin newadmin info lifecycle newadmin newadmin verbose lifecycle newadmin unsafeperm lifecycle true verbose lifecycle newadmin path usrlocallibnodemodulesnpmnodemodulesnpmlifecyclenodegypbin usersxtqjhsitessdzhnewadminnodemodulesbin usrlocalbin usrbin bin usrsbin sbin verbose lifecycle newadmin cwd usersxtqjhsitessdzhnewadmin silly lifecycle newadmin args c silly lifecycle node nodemodules angularclibinng build prod buildoptimizer silly lifecycle newadmin returned code signal null info lifecycle newadmin failed exec builda script verbose stack error newadmin builda verbose stack exit status verbose stack eventemitter verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid newadmin verbose cwd usersxtqjhsitessdzhnewadmin verbose darwin verbose argv usrlocalbinnode usrlocalbinnpm run builda verbose node verbose npm error code elifecycle error errno error newadmin builda error exit status error failed newadmin builda script error probably problem npm likely additional logging output verbose exit true", "num": "23879", "d": "5/2018"}, {"title": "error runtime compiler loaded prod mode", "body": "submitting current behavior dynamically creatingn component migrating app doesnt work js export class htmloutletdirective implements onchanges input html string constructor private vcref viewcontainerref private compiler compiler private translate translateservice ngonchanges const html thishtml html return used generate component based path specifiedit used work perfectly devprod bothhowever updating app working production gives error generic error runtime compiler loaded error stack trace error runtime compiler loaded le tcompilemoduleandallcomponentsasync lngonchanges expected behavior dynamic component load minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23878", "d": "5/2018"}, {"title": "support typescript", "body": "submitting current behavior running webpack results error angular compiler requires typescript gt lt found instead unfortunately ca nt downgrade typescript fixes issue expected behavior version angular supporting typescript minimal reproduction problem instructions git clone run webpack prod case via cake script cd favgifwebbuild buildsh c debug motivation use case changing behavior need typescript fix provides latest angular limits earlier ts version environment", "num": "23877", "d": "5/2018"}, {"title": "fail requests failed load resource ssl error occurred secure connection serve made", "body": "submitting browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx x safari ios version xx ie version xx edge version xx tooling issues node version platform ios angular ssr fail get requests failed load resource ssl error occurred secure connection serve made error ios safari ff chrome opera mini works well aws ssl let encrypt cors", "num": "23875", "d": "5/2018"}, {"title": "angular decimaldelimiter locale", "body": "hi guys use date number pipe job well need convert dates numbers strings ie inputs back date number need support locale specific conversion either angular builtin function supports converts parsers based locale going build therefore need locale specific configuration like decimal delimiter date format etc angular builtin functions convert parse get locale specific configuration decimal delimiter date format thanks", "num": "23874", "d": "5/2018"}, {"title": "request updateangulario opensourcing", "body": "submitting current behavior useful important resource angular developers open source difficult localize nonenglish expected behavior best open source repository use angular api able contribute improving localization locale public repo fork locale enough better motivation use case changing behavior organizing localization japanese community angular ecosystem think create cc stephenfluin", "num": "23873", "d": "5/2018"}, {"title": "", "body": "submitting current behavior navigating route fragment another component anchor fragment scrolled brandonroberts reported issue seem activity expected behavior navigating route fragment another component scroll anchor fragment motivation use case changing behavior lot people rely hacks fix issue environment", "num": "23871", "d": "5/2018"}, {"title": "remove references deprecated quickstart repo", "body": "submitting current behavior setup guide also upgrade angularjs guide references quickstart repo even though deprecated expected behavior guides references using angular cli replacement quickstart project minimal reproduction problem instructions motivation use case changing behavior confusion beginners environment", "num": "23868", "d": "5/2018"}, {"title": "angular doc import observable rxjs correct", "body": "submitting current behavior doc link import observable rxjs expected behavior import observable rxjsobservable import rxjsobservableof minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23867", "d": "5/2018"}, {"title": "urlmatcher pass correct path lazy loaded module", "body": "submitting regression behavior used work stopped working new release x bug report performance issue feature request documentation issue request support request gt please submit support request instead see x please describe sure bug current behavior using matcher able sharing exact path two different lazy loaded modules matcher checks queryparam called show either module module works expected main route try navigate children path foo stackblitz example log output receive route normally expected instead always receiving expected behavior modules receive urlmatcherresult correctly minimal reproduction problem instructions check console main logic angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version also stackblitz version platform mac", "num": "23866", "d": "5/2018"}, {"title": "tour heroes tutorial step missing steps", "body": "submitting current behavior follow instructions heroes tutorial end part get error loading page error template parse errors ca nt bind hero since nt known property appherodetail appherodetail angular component hero input verify part module appherodetail web component add customelementsschema ngmoduleschemas component suppress message allow property add noerrorsschema ngmoduleschemas component hero selectedhero ng appmoduleheroescomponenthtml appherodetail known element appherodetail angular component verify part module appherodetail web component add customelementsschema ngmoduleschemas component suppress message error ng appmoduleheroescomponenthtml able correct adding following modified declarations include expected behavior page render without error minimal reproduction problem instructions follow tutorial scratch see motivation use case changing behavior want fix tutorial others environment", "num": "23865", "d": "5/2018"}, {"title": "angular fails silently paragraph tags contain unordered list", "body": "submitting current behavior component template unordered list inside paragraph tags angular fails silently clear error displayed browser console angular cli displays compiled successfully expected behavior strict adherence html spec desired error emitted instead receiving blank page nothing cli strict adherence priority render expected chrome firefox edge handle minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23864", "d": "5/2018"}, {"title": "using selector listing causes block level elements render white space", "body": "submitting current behavior adding selector component setting name selector listing causes block level elements page render white space name something else like white space disappears longer rendered add spaces markup line breaks etc white space increases accordingly set reserved words selector names nt use environment", "num": "23862", "d": "5/2018"}, {"title": "feature popup glossary definitions terms", "body": "submitting current behavior content authors choose provide definition main text using term term focus section desired make term link another section guide api lengthy discussion termsubject use term without defining providing links good times depending context latter two options however users nt understand term must leave page following link another guideapi section stopping search docs term stopping open glossary look definition expected behavior would nice option offer popup hover definition term allows user get quick reminder clarification term without leaving current context would ideal definition pulled glossary pulling definition glossary also reduce duplication content potential conflicting definitions today every definition separately written assurance consistency definitions provided incontext outside glossary minimal reproduction problem instructions example want continue define term doc term primary subject definition natural part introduction explanation example popup definition might useful method preferred enables treeshaking service nothing injects may better examples get idea motivation use case changing behavior environment", "num": "23861", "d": "5/2018"}, {"title": "feature ability resize left navigation pane", "body": "submitting current behavior width left navigation pane fixed desktop viewing web browsers one user ended situation nav titles wrapped even though try keep titles short oneline browsers expected behavior would nice users could drag make left navigation pane bit narrower wider fix wraparound issues long titles could set min max avoid serious problems give user control minimal reproduction problem instructions motivation use case changing behavior see environment", "num": "23860", "d": "5/2018"}, {"title": "read property map undefined serviceworkerconfigumdjs", "body": "submitting current behavior upgraded version latest version tried run ng build prod gives following error read property map undefined typeerror read property map undefined nodemodules arraymap generatorprocessdatagroups nodemodules generator nodemodules step nodemodules objectnext nodemodules fulfilled nodemodules processtickcallback packagejson dependencies angulardevkitcore angulardevkitschematics angularcdk angularcommon angularcore angularflexlayout angularforms angular angularlanguageservice angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularserviceworker ngbootstrapngbootstrap schematicsangular schematicspackageupdate schematicsschematics swimlanengxdatatable ajv autoprefixer bootstrap corejs hammerjs jquery ngxcookieservice perfectscrollbar popperjs rxjs rxjscompat screenfull tether yarn zonejs devdependencies angulardevkitbuildangular angularanimations angularcli angularcompiler angularcompilercli typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23857", "d": "5/2018"}, {"title": "httpparams new httpclient nt support number boolean date", "body": "submitting current behavior expected behavior errors occur minimal reproduction problem instructions heroesqueryparamsmodelts export class heroesqueryparams groupid number country string dead boolean heroescomponentts const params heroesqueryparams groupid name us dead false thisheroesservicegetheroes params subscribe heroes heroes gt consolelog heroes heroesservicets import httpclient angularcommon getheroes params heroesqueryparams observable return params params error cut long story short new imported nt support nonstring values query params related numbers booleans dates etc use old one write transform utils motivation use case changing behavior worked previously environment angular version browser x chrome desktop version", "num": "23856", "d": "5/2018"}, {"title": "bindings nt refreshed component detached mode", "body": "submitting bug report current behavior child component located component b detached change detection child component host bindings dependant local state nt never refreshed even component calls works correctly parent component nt change detection detached expected behavior work correctly well view interpolations refreshed host bindings refresh well minimal reproduction problem instructions motivation use case changing behavior improve performance app using detached change detection top components app tree manually informing angular whenever component changed either updating inputs calling manually environment angular version browser x chrome desktop recent version", "num": "23855", "d": "5/2018"}, {"title": "missmatch aot documentation updateangulario", "body": "submitting current behavior documentation aot options stated option false default results smaller emitted template factory angular update guide stated choose value preservewhitespaces tsconfigjson gain benefits setting default still preserve whitespace one true expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23854", "d": "5/2018"}, {"title": "ca nt escape unmet peer dependency", "body": "trying make angular app pwa app trying install angularserviceworker getting error says angularcommon angularcomplier angularcore unmet peer dependency tryed install getting npm err code solve using angularcli compilercli npm ideea breath fresh air thx current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23852", "d": "5/2018"}, {"title": "docs optional dependencies inject decorator", "body": "submitting current behavior fires typescript error build time expected behavior token optional stated docs minimal reproduction problem instructions create angular project create injectiontoken inject token component constructor using try build motivation use case changing behavior trying create library takes provider option defined librariesmodules used project build automatically webapp structure provider also null modules defining inside project environment", "num": "23849", "d": "5/2018"}, {"title": "url encode let router found", "body": "params like make router found component wrong fixed tks", "num": "23848", "d": "5/2018"}, {"title": "", "body": "submitting current behavior something like expected behavior please see current implementation like bicycle would like able send value along form preferably framework would great perhaps solutions already hint please tell moment write strange enough minimal reproduction problem instructions motivation use case changing behavior vital environment angular version regards", "num": "23847", "d": "5/2018"}, {"title": "error provider e prod flag working fine local server", "body": "someone tell solutions code working fine local server move hosting server following error arises error provider e e ethrowornull egetbykeydefault egetbykey eget wo mo wo versions angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router tscwrapped angularcdk angularcli angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack packagejson name cemsdemo version license mit scripts ng ng start ng serve port host open build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter ngidlecore ngidlekeepalive nickylenaersngxscrollto typesjquery corejs firebase fontawesome intl ngxloading ngxmydatepicker ngxpagination rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript", "num": "23846", "d": "5/2018"}, {"title": "every http response parsed json matter responsetype given", "body": "submitting current behavior every http response returned server parsed json matter responsetype given headers reported fixed still problem way receiving image httperrorresponse thrown closed bug expected behavior requesttype provided different json response nt parsed passed along minimal reproduction problem instructions try random url subscribe method getimage imageurl string const headers new httpheaders resourcetype blob return motivation use case changing behavior well getting image server one want image parsed json environment ca nt check fixed angular dependencies problem", "num": "23844", "d": "5/2018"}, {"title": "elements change detection breaks ngfor loop", "body": "submitting current behavior create element exposed property ngfor template setting property via javascript breaks change detectionrendering ngfor expected behavior change detection ngfor works unrolled loop minimal reproduction problem instructions first row click first dot click give max rating button click dot error dot remains red note second row unrolled loop works expected motivation use case changing behavior environment", "num": "23841", "d": "5/2018"}, {"title": "unnecessary scrollbar navbar", "body": "seems new regression", "num": "23835", "d": "5/2018"}, {"title": "natural whitespace inline elements gone", "body": "submitting current behavior type inline element inline inlineblock inlinetable whitespace example shows hibye expected behavior hi bye minimal reproduction problem instructions motivation use case changing behavior html behavior change environment", "num": "23834", "d": "5/2018"}, {"title": "output property name component interaction guide nt match styleguide", "body": "submitting current behavior currently component interaction contains output property whose name match convention established styleguide expected behavior output property example currently defined follows according styleguide instead motivation use case changing behavior verbiage subject styleguide concrete name events without prefix name event handler methods prefix followed event name", "num": "23831", "d": "5/2018"}, {"title": "error typeerror read property cin undefined objecteval updatedirective", "body": "cin id user anybody help", "num": "23830", "d": "5/2018"}, {"title": "angular compiler messes return statement duplicates comment arrow functions", "body": "submitting current behavior targeting angular compiler produces incorrect javascript encounters single statement arrow function line comment arrow statement bug prevents body arrow function executing example compiles using duplicate comment put duplicated comment line causes function return actual code run expected behavior angular compiler produce javascript typescript compiler code minimal reproduction problem instructions compile typescript reference used edit detailed reproduction motivation use case changing behavior bug creates unwanted behavior difficult trace especially creating angular library example make arrow functions used array return nothing environment browser tooling issues node version platform mac", "num": "23829", "d": "5/2018"}, {"title": "remove background app icon", "body": "submitting x bug report current behavior device pixelbook chromeos device installs angulario pwa icon shows white border icon used expected behavior icon transparent background minimal reproduction problem instructions visit angulario chromebook install pwa", "num": "23827", "d": "5/2018"}, {"title": "cli docs angular ng server configurationfr fails", "body": "submitting current behavior followed guide add support app messagesfrxlf srclocale added projects appname serve configurations fr aot true outputpath distmyprojectfr srclocalemessagesfrxlf xlf fr run app directory get error message expected behavior compile build app minimal reproduction problem instructions motivation use case changing behavior would like able test app different languages locally environment full angularjson schema nodemodules angularclilibconfigschemajson version newprojectroot projects projects ngdeskwebapp root sourceroot src projecttype application prefix app schematics schematicsangular component styleext scss architect build builder angulardevkitbuildangular browser options outputpath distngdeskwebapp index srcindexhtml main srcmaints polyfills srcpolyfillsts tsconfig srctsconfigappjson assets srcfaviconico srcassets styles srcstylescss scripts configurations production filereplacements replace srcenvironmentsenvironmentts srcenvironmentsenvironmentprodts optimization true outputhashing sourcemap false extractcss true namedchunks false aot true extractlicenses true vendorchunk false buildoptimizer true serve builder angulardevkitbuildangular devserver options browsertarget ngdeskwebapp build configurations production browsertarget ngdeskwebapp build production fr aot true outputpath distmyprojectfr srclocalemessagesfrxlf xlf fr productionfr filereplacements replace srcenvironmentsenvironmentts srcenvironmentsenvironmentprodts optimization true outputhashing sourcemap false extractcss true namedchunks false aot true extractlicenses true vendorchunk false buildoptimizer true outputpath distmyprojectfr srclocalemessagesfrxlf xlf fr error defaultproject ngdeskwebapp", "num": "23826", "d": "5/2018"}, {"title": "implicit global variables accepted angular upgrade", "body": "submitting current behavior errors compilation every global variable used eg avoid error global variable needs imported somewhere module eg expected behavior implicit global variables give error used like previous angular versions words global variables declared scripts loaded angular useable right away required type definitions installed eg helpful environment browser x chrome desktop", "num": "23824", "d": "5/2018"}, {"title": "angular update", "body": "process updating version angular something wrong ended getting following errors npm warn checkpermissions missing write access usr local lib nodemodules angular cli npm warn checkpermissions missing write access usr local lib nodemodules angular npm warn optional skipping optional dependency nodepregyp nodemodules angular cli nodemodules fsevents nodemodules nodepregyp npm warn optional skipping optional dependency eloop many symbolic links found open usrlocallibnodemodules angularclinodemodulesfseventsnodemodulesnodepregypnpmshrinkwrapjson npm err path usr local lib nodemodules angular cli npm err code eloop npm err errno npm err syscall access npm err eloop many symbolic links encountered access usr local lib nodemodules angular cli npm err complete log run found npm err case delete reinstall node system macos high sierra idea solve", "num": "23823", "d": "5/2018"}, {"title": "standardize spelling hyphenation treeshakable", "body": "submitting current behavior another question treeshakable treeshakeable word occurrence doc codebase issues expected behavior original request trotyl nonenglish speaker sure one better strongly believe one used minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23822", "d": "5/2018"}, {"title": "angular ng build prod error", "body": "current behavior error ca nt resolve parameters touchsystemsservice e tsprojectstouchsystemsretailcodetswebuiclientsrcappsharedservicestouchsystemsservicets object object object object expected behavior build without errors used show warning like warn ca nt resolve parameters touchsystemsservice e tsprojectstouchsystemsretailcodetswebuiclientsrcappsharedservicestouchsystemsservicets object object object object error angular cant find solution neither github stackoverflow windows visual studio npm server net core service export class touchsystemsservice extends behaviorsubject baseurl string injectable service base service inherited service like export class sizeservice extends touchsystemsservice angular browser chrome desktop version tooling issues node version platform windows", "num": "23821", "d": "5/2018"}, {"title": "router live example docs hangs", "body": "submitting bug report current behavior amp amp minimal reproduction problem instructions visit routing amp navigation docs launch live example app click crisis center tab result app hangs happens latest version chrome firefox environments angular version stackblitz macos chrome desktop version official build firefox version screenshot app clicking crisis center tab notice crisis center heroes tabs shown active app nt make progress cc kwalrath", "num": "23820", "d": "5/2018"}, {"title": "feature provide entrycomponents root injector", "body": "submitting current behavior need add components entrycomponents array ngmodule use expected behavior adds property annotation behaves like new angular version nt need declared array making much better performance perspective well maintenance perspective case entrycomponents would nt performance gain new instance always created nt need declare app module maintenance gain would possible define component use component entry component without defining module component code would included modules use nt know done internally tough think way implement similar handles injectables maybe unnecessary nt inject services creates new instance always thing needed remove need include array motivation use case changing behavior motivation basically one allow services root scoped without import module issue created providers services saw answer request new feature providers great feature angular really needed medium large apps although issue providers worse high probability wanting make singletons components new instance always created makes easy maintain without including modules need created imperative way reference known environment", "num": "23819", "d": "5/2018"}, {"title": "ci docsinfra run pwascore test", "body": "probably previewserver triggering specific circleci job via api", "num": "23818", "d": "5/2018"}, {"title": "test angular appkliaction really need knowledge angular go jasmine framework", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23817", "d": "5/2018"}, {"title": "path ngswconfigjson", "body": "submitting current behavior ngswconfigjson must src directory expected behavior angularjson may configure multiple apps path ngswconfigjson configurable motivation use case changing behavior ngswconfigjson shared across different apps file name configurable environment", "num": "23816", "d": "5/2018"}, {"title": "defaultiterablediffer keep order duplicates", "body": "submitting current behavior defaultiterablediffer diffing updates list according new collection fail keep order items trackbyid example b c gt b c trackbyid intermediate state show changes list shows parentheses b c b c b move index b c move index identity change b c b c move identity change see stackblitz demo identity change necessary move nice mismatch defaultiterablediffer first check check cause defaultiterablediffer match later item rather preceding one check first check first get b c gt b c trackbyid intermediate state b c b c b move index b c move index nt need identity change b c b c nt need move nt need identity change expected behavior move b move identity change necessary minimal reproduction problem instructions motivation use case changing behavior reason similar verifyreinsertion make diff result reasonable environment", "num": "23815", "d": "5/2018"}, {"title": "annoying tooltip hiding next menu", "body": "submitting current behavior hovering menu item annoying tooltip pops hiding next menu see image bellow expected behavior tooltip must disabled minimal reproduction problem instructions visit hover mouse pointer menu item watch annoying tooltip hiding menu motivation use case changing behavior developers use doc site several times tooltip promptly annoys every time hover menu environment", "num": "23814", "d": "5/2018"}, {"title": "elements performance issue large ngfor loop", "body": "submitting current behavior create custom element component use appcomponent wrap large loop components rendered fast well expect elements slow browser freezes short time expected behavior fast well component minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23813", "d": "5/2018"}, {"title": "injectablecompiler primes knownmodulenames cache bad value", "body": "using treeshakable providers within angular repo devmode sources broken eg bazel rules repro add see import works one nt amd module named", "num": "23810", "d": "5/2018"}, {"title": "update reference elements vision direction", "body": "submitting current behavior ends note direction angular elements working custom elements used web apps built frameworks minimal selfcontained version angular framework injected service support component changedetection databinding functionality direction development check video presentation link video expected behavior please move link introduction using custom elements please update link newer presentation minimal reproduction problem instructions see motivation use case changing behavior help ensure developers easily find big picture story elements see today features fit vision provide current information environment", "num": "23805", "d": "5/2018"}, {"title": "docs practical observable usage type ahead suggestions incorrect import", "body": "submitting current behavior angular guide section observables amp rxjs practical observable usage page line typeahead code example correct import followed guide creating new angular project currently throws error states module myappnodemodulesrxjsrx exported member fromevent expected behavior line typeahead code example import observable minimal reproduction problem instructions motivation use case changing behavior scouring google stackoverflow correct resolution problem find ample solution hoping save people lots time digging googlefoo quite perfect case environment", "num": "23803", "d": "5/2018"}, {"title": "docs add inherited members key terms search", "body": "ought able find searching", "num": "23800", "d": "5/2018"}, {"title": "etting problem inmemorywebapi", "body": "", "num": "23797", "d": "5/2018"}, {"title": "move ngmodulefactoryloader core router", "body": "submitting current behavior defined angularcore expected behavior defined angularrouter module minimal reproduction problem instructions na motivation use case changing behavior used anywhere core module router provided router change would probably allow us use see issue currently compiled separately main app bundle dll lazy loading chunks generated everything depends angular packages dll angular packages could included dll environment", "num": "23796", "d": "5/2018"}, {"title": "guide angular universal serverside rendering working docs updated", "body": "tried setup universal example provided angulario guide page unfortunately fails error ng build prod amp amp ng run angularioexample server npm err exit status npm err npm err failed angularioexample build clientandserverbundles script npm err probably problem npm likely additional logging output npm err complete log run found npm err npm err code elifecycle npm err errno npm err angularioexample build ssr npm err exit status npm err npm err failed angularioexample build ssr script npm err probably problem npm likely additional logging output npm err complete log run found npm err create server browser folder folder download finished sample code maybe someone needs update page", "num": "23795", "d": "5/2018"}, {"title": "loading chunk failed scripts included another http server", "body": "submitting current behavior running angular app ng serve port another http server port using lazy loading chunk tries load port expected behavior chunk loaded correctly port port angularapp served minimal reproduction problem instructions run ng serve angular app lazy loaded modules include html page another http server navigate lazy loaded module see loading commonchunkjs lazyloadedmodulejs failed motivation use case changing behavior load correct port depending port angular app served environment", "num": "23793", "d": "5/2018"}, {"title": "html select option selected working ngfor", "body": "reproduce component import component oninit angularcore import formgroup formcontrol angularforms component selector appprova templateurl provacomponenthtml styleurls provacomponentcss export class provacomponent implements oninit myform formgroup new formgroup nationality new formcontrol nationalitylist description nationalityitalian code ita description nationalityforeign code est constructor ngoninit working selected ngfor elemdescription working selected without ngfor nationalitylist description nationalitylist description expected output select first option selected resulting output second select first option selected first select option selected", "num": "23792", "d": "5/2018"}, {"title": "root named outlet target nested named outlet", "body": "submitting current behavior approutingmodulets productroutingmodulets appcomponenthtml productpagecomponenthtml display productdiscountdetailscomponent thisrouternavigate outlets panel details relativeto thisrouteparent customers link nt work expected behavior target root level named outlet child route minimal reproduction problem instructions quick example motivation use case changing behavior order sidenav structure worked better able appcomponenthtml move productpagecomponenthtml works make use sidenav well defineded environment", "num": "23791", "d": "5/2018"}, {"title": "shortdate wrong format fr locale", "body": "submitting current behavior date pipe returns shortdate like declared expected behavior shortdate equivalent mdyy eg minimal reproduction problem instructions today date shortdate motivation use case changing behavior align languages environment", "num": "23790", "d": "5/2018"}, {"title": "variable using type union error template identifier name defined contain member", "body": "submitting current behavior variable take two types depending another parameter template handle two possible types second type case problem code secondoperand name error message angular language service expected behavior name valid identifier second type case angular raise error minimal reproduction problem instructions declare variable take two types one object primitive type try accessing object property template import component oninit angularcore component selector appalertrulecreator template foo thing export class myclass implements oninit motivation use case changing behavior environment", "num": "23789", "d": "5/2018"}, {"title": "", "body": "ca nt want create reusable pipe give calls", "num": "23788", "d": "5/2018"}, {"title": "passing observable methods work", "body": "submitting current behavior getting following exception pass observable methods call method see directly function everything works see success message expected behavior exception occur minimal reproduction problem instructions following template amp method inside login method web service method call method directly function everything works see success message motivation use case changing behavior environment", "num": "23787", "d": "5/2018"}, {"title": "animationgroupplayer getposition always zero", "body": "bug min always unless playergetposition lt maybe like", "num": "23785", "d": "5/2018"}, {"title": "docs missing version selector", "body": "submitting current behavior angular docs version selector include option expected behavior angular docs version selector includes option next stable lts lts angulardart minimal reproduction problem instructions go bottom left navigation version selector says stable click version selector open see options motivation use case changing behavior help developers still actively working environment", "num": "23781", "d": "5/2018"}, {"title": "search angular archive site broken", "body": "submitting documentation error bug angular documentation archive current behavior go type ngfor search box hit enter nothing happens expected behavior result ngfor appear minimal reproduction problem instructions see current behavior motivation use case changing behavior us still maintain angular applications environment angular version browser x chrome desktop version xx x ie version", "num": "23780", "d": "5/2018"}, {"title": "add support typescript", "body": "typescript info typically typescript update means following things x ensure tsickle compatible new version typescript x ensure rxjs compatbile x update main packagejson yarnlock reflect typescript dependency x add new test similar x ensure codebase compile typescript usually tighter compiler checks surface preexisting errors need fix way nt change public api nt make published dts files incompatible typescript x ensure code users ts ast compiler apis compatible primarily compilercli languageservice need make updates need make sure remain compatible point anything angularspecific noteworthy need let angular developers know update new flags etc previous pr update reference", "num": "23779", "d": "5/2018"}, {"title": "property map exist type observable angular", "body": "submitting", "num": "23778", "d": "5/2018"}, {"title": "firebasedatabase firebase warning exception thrown user callback typeerror read property myid undefined production build", "body": "submitting current behavior using angularfire geofire location based app fetching locations around user works perfectly dev machine soon build deploy firebase hosting get strange error firebasedatabase firebase warning exception thrown user callback typeerror read property myid undefined error happens app trying retrieve locations firebase error happens run ng build prod expected behavior expect app fetch locations firebase display locations minimal reproduction problem instructions uploaded app github repo find motivation use case changing behavior environment firebase angularfire", "num": "23776", "d": "5/2018"}, {"title": "angular basehref deployurl longer works expected", "body": "submitting current behavior upgrading angular basehref deployurl longer work expected running command build app used work angular without problem tries grab runtimejs stylesjs mainjs polyfilljs without adding basehref ends getting error used notice missing virtualdir add end basehref deployurl main files get loaded every call api fails extra gets added every request api calls look like expected behavior load required files minimal reproduction problem instructions sure reproduce stackblitzcom simples one come create virtual directory server node instance running directory following setup const express require express const api require api const path require path const app express const port processenvport const virtualdirpath processenvvirtualdirpath static files angular stuff appuse virtualdirpath expressstatic pathjoin dirname dist handles api routes appuse api applisten port gt consolelog build deploy angular app said virtual directory basehref deployurl set virtual dir try run motivation use case changing behavior would like able run multiple apps domain within virtual directories environment", "num": "23773", "d": "5/2018"}, {"title": "routereuse retaining scroll position component", "body": "submitting current behavior using route reuse strategy keys show make sure user navigates another page go back previous state component restored user component restored scroll position goes bottom page top export class mybertusroutereusestrategy implements routereusestrategy routestocache string readytoship shipped orderresults searchresults storedroutehandles new map expected behavior component restored retain scroll position minimal reproduction problem instructions component large list values make sure window scroll bar make sure route reused using code another component nivigated first component first page scroll middle page navigate second component click back button notice scroll position retained motivation use case changing behavior component restored retain previous state window scroll position environment", "num": "23771", "d": "5/2018"}, {"title": "feature scoped services injectables", "body": "submitting hi would like ask feature allow services scoped component servicedirectiveetc injected situation consider best approach create one module per component way need reference direct dependencies indirect ones imported submodules makes maintenance much easier change component feature module another remove component module feature module dependencies already handled also better performanceapp size reasons lazy loaded module needs use approach components directives pipes problem use servicesproviders angular behaves differently might cause problems forget import one dependent module parent component imports giving impression everything alright might work cases work others making maintenance much harder app grows worse errors runtime errors may may happen depending parent component imports service important note asking injecting providers array component still need import indirect dependencies case problems also services module created module loaded stay alive lifetime application based almost every case see internet people import almost services services created startup singletons becames even worse case third party libraries import services use even use one service service used lazy loaded modules nt blame though project avoid problems maintenance nightmare services size insignificant perfomant app would need lazy load ones nt need initial load best approach would one use components referencing direct dependencies change one service injects service inject service inject service anymore would change import remove components injects service would still working fine proposal hope angular team creates feature make providers module scoped without seen modules import directly like components otherwise see way impediment create medium large performant apps time easy maintain backwards compatibility could flag annotation like new annotation like would like would scoped module imports directly example component injects services service injects service service injects service created like destruction would different instances type service modules would declares exports imports declares exports declares exports imports declares exports imports declares exports nt import give error always even imports imports avoiding maintenance problems talked previously pros much better performance compared import much easier maintenance compared import services feature modules component providers array cons use services behave singletons would make one one service global inject service preserve shared state services type listen events service would need create map key belonging different type service serializable object state rxjs subject emit subscribe events could map subjects similar map states idea could create point could achieve services share state using approach although achieved would require effort services changed accordingly nothing ca nt done possible performance problems app loaded would created one new service instance injection needed destroyed needed anymore cases could actually improve performance need import direct dependencies modules componentservice needs details information consider one module per component best approach still use feature modules would import component modules instead components problems indirect dependencies reason makes want one module per service ca nt angular nt support tl dr way services currently imported modules inside providers array scoped module child modules need import avoid indirect dependencies need imported explicitly errors nt happen every case depeding dependencies parent module maintenance nightmare problem app grows make initial load size huge startup slower bad ux would really useful scoped injectable created componentservice injects created destroyed componentservice destroyed would need imported explicitly module imports componentservice would work even parent imported like happens componentsdirectivespipes avoid cases service works cases cases parents dependencies one worst kind problems softwarewebapp development imo happens medium large apps nt see way make angular apps performant easy maintain reasons feature implemented another way achieve performance easy maintenace medium large sized angular apps currently without fighting framework mind problems talked", "num": "23770", "d": "5/2018"}, {"title": "problem loading mainjs file", "body": "changed configuration systemconfigjs put another issue work also check name tsconfigjson file fine submitting current behavior expected behavior environment", "num": "23769", "d": "5/2018"}, {"title": "angular cli error", "body": "", "num": "23768", "d": "5/2018"}, {"title": "serviceworker fail safe removal work", "body": "submitting current behavior following description removing fail safe serviceworkers renaming removing ngswconfig file causes building process fail expected find ngswconfigjson configuration file folder either provide one disable service worker angularjson configuration file dist folder still emitted obviously without ngswworkerjs causing client throw ngswworkerjs instead ngswjson expected behavior building process without error emiting dist folder includes ngswworkerjs deregisters previously installed service workers minimal reproduction problem instructions create new app angular cli add service worker renameremove ngswconfigjson ng build prod motivation use case changing behavior environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac", "num": "23767", "d": "5/2018"}, {"title": "angular production output code generate referenceerror", "body": "submitting current behavior building project angular using ngbuld prod output generate error offending error generated offending code precisely issue output error application works obviously size bundle higher note issue related angular angular compile run without errors warnings minimal reproduction problem instructions seems related code uglyfied code environment", "num": "23766", "d": "5/2018"}, {"title": "package angularflexlayout incompatible peer dependency rxjs requires would install", "body": "submitting current behavior ng v angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularcdk angularcli angularflexlayout angularmaterial ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack ng update angularcore package angularflexlayout incompatible peer dependency rxjs requires would install incompatible peer dependencies found see expected behavior following instructions work fine without error minimal reproduction problem instructions think might angularflexlayout still beta see makes sense install flexlayout nightly builds installation docs says installs nightly build incorporates latest updates yet published npm motivation use case changing behavior upgrading following instructions updateangulario environment", "num": "23765", "d": "5/2018"}, {"title": "angular layout changes gaps removed inline inlineblock elements", "body": "description problem angular removes gaps browser puts default inline inlineblock elements line breaks code since changed behavior seems documented wonder whether intended might well considered desired feature general would expect rely fact layouts wo nt change unspokenly update project angular minimal reproduction problem code snippet fresh project nt matter placed produces outputs angular like normal html angular", "num": "23764", "d": "5/2018"}, {"title": "httpclient server nt encode nonascii characters url", "body": "submitting current behavior request url contains nonascii characters server nt encode one may argue responsibility developer provide encoded url blindly calling encodeuri url may cause problems url already encoded browsers convert nonascii characters url urlencoded equivalent think server consistency expected behavior nonascii characters encoded server final uri given request browser server minimal reproduction problem instructions something like motivation use case changing behavior prevent ssr errors environment", "num": "23763", "d": "5/2018"}, {"title": "less import selector", "body": "submitting current behavior less support selector angular project works expected behavior minimal reproduction problem instructions appcomponentless works well motivation use case changing behavior environment", "num": "23762", "d": "5/2018"}, {"title": "add new progressive view encapsulation", "body": "submitting current behavior many old angular invented components require empty div script append elements html components hard use angular currently import style globally component styles leak cause global pollution generated element ng scope attribute ca nt apply styles styles works well script using ca nt find element expected behavior request new view encapsulation strategy add component host compile css styles descendant selector old components could work encapsulation style pollution", "num": "23761", "d": "5/2018"}, {"title": "deep link dynamic routes available next visit", "body": "submitting current behavior dynamic children routes lazy loaded module visiting direct deep link one children routes either via browser url input via routerlink throw nomatch exception first visit normal second visit comparing lazy loaded module static children routes issue first subsequent visits expected behavior lazy loaded module dynamic children routes perform lazy loaded module static children routes visiting direct deep link one children routes allow loading module allow setting dynamic children routes check deciding nomatch minimal reproduction problem instructions example steps reproduce scenario click go lazynormal child page good link expect route reaches pass click go lazydynamic child page fail link expect route reaches fail click go lazydynamic child page fail link expect route reaches pass scenario click go lazydynamic page good link expect route reaches pass click go lazydynamic child page fail link expect route reaches pass motivation use case changing behavior able dynamically setup children routes lazy loaded module environment", "num": "23760", "d": "5/2018"}, {"title": "cli build optimization removes enum export third party library", "body": "submitting current behavior library nodemodules defines typescript enum exports commonjs output follows production mode build optimizer rewrites enum enum longer exported rewrite expected behavior exported enum remain exported minimal reproduction problem instructions repo angularcli app imports references enum app component browse app open js console note error run production mode app runs prints message reference enum value motivation use case changing behavior environment related", "num": "23759", "d": "5/2018"}, {"title": "ca nt resolve angularroutersrcutilscollection", "body": "estoy intentando hacer un foreach tengo este error", "num": "23758", "d": "5/2018"}, {"title": "error runtime compiler loaded sharepoint app part using angular", "body": "submitting current behavior kind app sharepoint web part uses angular project standard sharepoint framework web part uses angular ui part project started inspired project inspired project instructions project inspired one click original inspired github project expected behavior show new dynamic component updated html web part successfully without errors minimal reproduction problem instructions download project run install components run command spin sharepoint web part server locally workbench page note changing code live server running done update page add part follow steps hover mouse center workbench page show pic click sign choose web part bottom list error developer tools console window show full error text error runtime compiler loaded stack trace throwerror lt debugupdatedirectives checkandupdateview callviewaction execcomponentviewsaction checkandupdateview callwithdebugcontext debugcheckandupdateview viewrefprototypedetectchanges applicationrefloadcomponent applicationref motivation use case behavior piece html server need render html changed server side essentially letting person change looks web part well data gets pulled html used dynamically create component run time showing component web part environment", "num": "23757", "d": "5/2018"}, {"title": "component rendered component life cycles hooks called even nt rendered ngif", "body": "submitting current behavior component rendered component life cycles hooks called even nt rendered ngif cause issues example expected behavior life cycles hooks called component rendered minimal reproduction problem instructions open run render knows get display currently always shown send content life cycles hooks print console get hooks run application click button time clicked get console notification even component dom motivation use case changing behavior cause low performance components displayed get hooks please suggest fix workaround seems big issue", "num": "23756", "d": "5/2018"}, {"title": "release schedule needs update", "body": "submitting current behavior release schedule documentation old outdated release done expected behavior updated release schedule minimal reproduction problem instructions click motivation use case changing behavior people know expect environment", "num": "23754", "d": "5/2018"}, {"title": "angular tutorial services heroservicets error expected arguments got", "body": "error srcappheroservicets error expected arguments got srcappmessageservicets error expected arguments got", "num": "23753", "d": "5/2018"}, {"title": "uncaught syntaxerror unexpected token issue using jsonp", "body": "new trying call api using jsonp property code using httpclinetjsonpmodule calling apibut returns following error anyone please help solve issuei already spend hous", "num": "23752", "d": "5/2018"}, {"title": "server tags escaped moved worked angular", "body": "submitting current behavior indexhtml server preprocessing tags rails server tags escaped lt gt moved tag expected behavior angular happen minimal reproduction problem instructions ng new open indexhtml add tag run open indexhtml motivation use case changing behavior intentional away tell angular escape server tags indexhtml environment", "num": "23751", "d": "5/2018"}, {"title": "angular tutorial services error ng serve rxjsrx exported member", "body": "error srcappheroservicets error module c usersmyhandsonangulartourofheroesnodemodulesrxjsrx exported member", "num": "23750", "d": "5/2018"}, {"title": "minlength validator treats zero value zero length", "body": "statement clearly returns zero length value zero numeric inputs problem", "num": "23749", "d": "5/2018"}, {"title": "radio buttons checked ngfor async pipe", "body": "submitting current behavior radio buttons checked pipe bound function returns inlined observable expected behavior radio button checked minimal reproduction problem instructions check radio buttons see checked environment angular version amp browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version x safari desktop version safari ios version xx ie version xx edge version xx tooling issues node version angular node angular stackblitz node version platform mac", "num": "23748", "d": "5/2018"}, {"title": "docs tutorial part missing part final code review", "body": "submitting current behavior missing dashboard code changes tutorial part final code review without dashboard changes search nt appear dashboard expected behavior changes dashboard files appear final code review minimal reproduction problem instructions motivation use case changing behavior people could get confused without code parts final code review environment", "num": "23747", "d": "5/2018"}, {"title": "angulariodocs missing version dropdown", "body": "submitting current behavior option int dropdown get explicitly using urgent one expected behavior option dropdown", "num": "23746", "d": "5/2018"}, {"title": "mistake tutorial part", "body": "submitting current behavior tutorial part add heroservicegethero change hero service url id parameter add thismessageserviceadd id nt work part tutorial starts work next part http seems method ca nt handle needs method iam new angular hope description fine expected behavior show us current id messages within part tutorial minimal reproduction problem instructions motivation use case changing behavior think tutorial correct otherwise could confuse people environment", "num": "23745", "d": "5/2018"}, {"title": "angular cli unhandled schematics error using invalid project names", "body": "submitting current behavior process upgrading angular want create plain project cli first accidentally used name valid got following response expected behavior expect see human readable error cryptic people confused looks like unhandled error schematics previous version got proper error telling project name valid minimal reproduction problem instructions fails works environment angular cli node os darwin angular package version angulardevkitarchitect angulardevkitcore angulardevkitschematics schematicsangular schematicsupdate rxjs typescript", "num": "23744", "d": "5/2018"}, {"title": "angularpwa refresh pwa rebuild driver property id undefined", "body": "submitting current behavior create new angular project cli adding pwa run run current behavior app starts see browser downloading files including service workers put browser offline still see app resources fetched sw change html appcomponenthtml run run refresh browser get error environment", "num": "23742", "d": "5/2018"}, {"title": "serverside rendering warning using innerhtml", "body": "submitting current behavior updated angular version needed change webpack configuration used serverside rendering web application use insert html content used work well server browser previous version update returning error node server error referenceerror node defined opened line code error poining file probloem resolved checking browser even something like expected behavior error server side use innerhtml server method use instead innerhtml thinking minimal reproduction problem instructions making serverrendered application stackblitz avalable far know used innerhtml environment package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack browser x chrome desktop version official build chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux fedora", "num": "23741", "d": "5/2018"}, {"title": "using routeroutlet angular elements detect url change router", "body": "use router outlet angular elements current behavior url change detected inside angular elements component subscribe changes using router expected behavior using router outlet url change detected also ok able use something like named router outlet navigation namedoutlet link navigation inside angular elements component minimal reproduction problem instructions scenario direct access fail scenario access initial route load pass click routerlink using code every route change tell router navigate defined route thislocationsubscribe data gt consolelog data subscribe data thisrouternavigatebyurl dataurl able display requested route inside angular elements route change initial load default route loaded without code force route load im also able load component using routerlink directive click motivation use case changing behavior want create complex angular elements application add url navigation inside small part bigger web application environment", "num": "23740", "d": "5/2018"}, {"title": "get compiled production mode", "body": "submitting current behavior get compiled production mode expected behavior work like minimal reproduction problem instructions using create file edit import component angularcore import foo model component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app constructor consolelog foochoicesone line typeerror read property one undefined new lo jo ii ti objectwi createrootview tcreate tcreate ebootstrap tried using typescript still motivation use case changing behavior environment", "num": "23739", "d": "5/2018"}, {"title": "upgraded project problem", "body": "upgraded project structure angular follow angular website setps upgrade run application get problem say error error uncaught promise error find module appxxxxxxmodule get warning say systemimport deprecated removed soon use import instead info visit module lazy module use like loadchildren appxxxxxxmodule firstscreenmodule happend help", "num": "23738", "d": "5/2018"}, {"title": "getting error staticinjectorerror injectiontoken documenttoken nullinjectorerror provider injectiontoken documenttoken", "body": "submitting current behavior issue closed able find solution upgrading app angular angular getting error submitting new issue minimal reproduction problem instructions angular cli app created repo git minimal reproduction issue please refer following link refer readmemd build serve serve application get error attacting screenshot environment tooling issues node version platform macos sierra", "num": "23737", "d": "5/2018"}, {"title": "installation problem", "body": "", "num": "23736", "d": "5/2018"}, {"title": "supporting create project", "body": "", "num": "23735", "d": "5/2018"}, {"title": "ng build results uncaught error ca nt resolve parameters", "body": "submitting current behavior ng build application produce run time uncaught error ca nt resolve parameters service name happen ng serve expected behavior smooth running similar ng serve minimal reproduction problem instructions angular application services provided coremodulets empty injectable service error disappears fixing every service read motivation use case changing behavior motivation use angular code minimum changes environment", "num": "23734", "d": "5/2018"}, {"title": "using multiple angular elements ngdobootstrap runs twice breaking customelementregistry", "body": "submitting bug report edit screenshots issue posted using multiple web components built angular elements breaks consuming application following three repositories exampleangularelmentsapp consuming application exampleangularelmentscomponentbox outputs box webcomponent exampleangularelmentscomponentbutton outputs button webcomponent components build files found consuming app srcassetselements folder receive error console something similar depending component load dynamically first following reproduction steps including second angular element webcomponent see line like logged twice illustrating component bootstrapping twice likely causing error expected behavior consuming application break consuming multiple webcomponents built angular elements method called twice least checks component registration minimal reproduction problem instructions clone exampleangularelmentsapp angular project run run open open developer console click one buttons load component click button load component view console see component loaded first runs ngdobootstrap method breaking page environment", "num": "23732", "d": "5/2018"}, {"title": "web worker compiled main angular app", "body": "submitting current behavior need create web worker application develop compile outside angular project make make modification webpack config file expected behavior posibility add angularclijson angularjson file list workers files compiled imports external files later use motivation use case changing behavior js world onethread sometimes need threads applications make easely create different threads run sum tasks outside main js loop environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "23730", "d": "5/2018"}, {"title": "documentation internationalization outdated", "body": "submitting current behavior none examples work anymore expected behavior understand switches relating internationalization moved file either documentation reflect switches reintroduced minimal reproduction problem instructions see motivation use case changing behavior current way specifying language files unclear see example environment", "num": "23728", "d": "5/2018"}, {"title": "add support require native node file using require xxxnode", "body": "submitting current behavior error xxxnode module parse failed unexpected character may need appropriate loader handle file type source code omitted binary file failed compile expected behavior error webpack ignores native node file loading uses nodeloader load native node file minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23724", "d": "5/2018"}, {"title": "module parse failed unexpected character may need appropriate loader handle file type require node", "body": "submitting current behavior error xxxnode module parse failed unexpected character may need appropriate loader handle file type source code omitted binary file failed compile expected behavior error webpack ignores native node file loading uses nodeloader load native node file minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23722", "d": "5/2018"}, {"title": "child component getting input values routing", "body": "submitting current behavior child component getting input values routed observable map expected behavior child component get input values always minimal reproduction problem instructions repro url please note submitted similar issue repro simple code stackblitz feel related well requires full code desktop download first screen two buttons go without login amp go login first click button go without login go second screen two buttons amp count text click increment button increment count working fine scenario click go back back screen one click button go login show popup login gmail login automatically route screen two may use credentials cdissue gmailcom amp login using gmail count displayed click increment nt show count error scenario motivation use case changing behavior want use routing observables environment", "num": "23720", "d": "5/2018"}, {"title": "router angular nested child route take effect page refreshed", "body": "submitting current behavior use ngroute root sibling router works fine use ngroute child route root router works fine navigate broken refresh route page expected behavior refresh page route case ngview takes effect minimal reproduction problem instructions motivation use case changing behavior upgrade environment", "num": "23719", "d": "5/2018"}, {"title": "services step tour heroes tutorial nt follow rwe", "body": "submitting current behavior tour heroes step tutorial services generate hero service tutorial says injectable come providedin root argument happen add manually cli nt compile citing expected arguments got expected behavior tutorial reflect actually happens minimal reproduction problem instructions follow tutorial step service created tutorial describes motivation use case changing behavior people learning angular able follow tutorial environment", "num": "23717", "d": "5/2018"}, {"title": "treeshakeable injector resolution logic nt work lazy loaded scenario", "body": "submitting current behavior combining lazyloading via router syntax injector resolution step seems fail expected behavior throw error minimal reproduction problem instructions see observe appmodule uses router lazyload routes injects two services click lazy link route lazycomponent successfully instantiated fails", "num": "23715", "d": "5/2018"}, {"title": "support query parameters without values", "body": "submitting current behavior currently use routerlinkdirective specify queryparams way specify parameter without value producing url form like following closest get afaik expected behavior way specify query parameter without value environment", "num": "23714", "d": "5/2018"}, {"title": "apps build aot dependent library built barrels", "body": "issue describes mysterious build failures apps depend npminstalled library built barrels barrel file consolidates exported symbols several nested files problem lies somewhere interaction among barrels aot workaround use barrels library always everywhere make direct references source files submitting current behavior app fails absurd errors concerning library installed npm library built barrels specifically toplevel tells artifacts include library public api built barrels library author able build library production without warnings errors worse seemed work used applications installed library occasionally get weird errors application note reference error ngrxdataselectorsindex barrel file nt directly exposed publicaly constant initialized line notice line number error message thats token declared type definition file source file shuffling order exports top level would fix one use case trigger another clues using barrels aot ngpackagr like barrels expected behavior think able use barrels aot ngpackagr able determine proper dependency order possible jit compilation minimal reproduction problem instructions easy way reproduce bad behavior barrels often appear work problem likely arises library subfiles refer files exported barrels even references direct dependent files bypassing barrels see horror story playout releases repo library example uses library experience problem clone go back beta commit succeed edit move bottom file rebuilds library fails strange error build aot remove following providers succeeds providers reference library abstract classes barrel removing bypasses library reference lookup produces errors pragmatically means library author wo nt discover problem consumer tries override default logger pluralizer behaviors supplying alternative implementations official extension point revert change rebuilds library build succeeds dev build eg works fine point process move forward beta barrels eliminated problems go away build sample app point motivation use case changing behavior barrels nicely encapsulate minimize lowlevel details library internal folder structure work great jit obviously aot time environment know still problem nt time find browser irrelevant tooling issues irrelevant", "num": "23713", "d": "5/2018"}, {"title": "typeerror read property xxxx undefined", "body": "submitting x bug report current behavior previous versions cli compiler everything fine new version getting ton typeerror read property xxx undefined ngxquill causes following export namespace enums export enum accounttypes checking savings shareddraft appmodulets appears enums items factored cause undefined expected behavior work like cli factor code causing errors environment angular cli node os angular animations cli common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router serviceworker package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack browser x chrome desktop version latest chrome android version xx chrome ios version xx x firefox version latest safari desktop version xx safari ios version xx x ie version x edge version tooling issues node version platform windows steps reproduce ng new projectname add new ts file snippet typescript import appmodule appcomponentts import attempt use appmodule n appinitializer cases get error", "num": "23712", "d": "5/2018"}, {"title": "get error try create new project", "body": "tried create new project get following error file original line endings working directory c usersstgcodedesktop ng new create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes create bytes nodesass install c node scriptsinstalljs cached binary found c nodesass postinstall c node scriptsbuildjs binary found c testing binary binary fine angularcli postinstall c angularcli node binngupdatemessagejs npm warn optional skipping optional dependency fsevents nodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch added packages warning lf replaced crlf editorconfig file original line endings working directory warning lf replaced crlf gitignore file original line endings working directory warning lf replaced crlf readmemd file original line endings working directory warning lf replaced crlf angularjson file original line endings working directory warning lf replaced crlf file original line endings working directory warning lf replaced crlf file original line endings working directory warning lf replaced crlf file original line endings working directory warning lf replaced crlf file original line endings working directory warning lf replaced crlf packagelockjson file original line endings working directory warning lf replaced crlf packagejson file original line endings working directory warning lf replaced crlf srcappappcomponenthtml file original line endings working directory warning lf replaced crlf srcappappcomponentspects file original line endings working directory warning lf replaced crlf srcappappcomponentts file original line endings working directory warning lf replaced crlf srcappappmodulets file original line endings working directory warning lf replaced crlf srcbrowserslist file original line endings working directory warning lf replaced crlf srcenvironmentsenvironmentprodts file original line endings working directory warning lf replaced crlf srcenvironmentsenvironmentts file original line endings working directory warning lf replaced crlf srcindexhtml file original line endings working directory warning lf replaced crlf srckarmaconfjs file original line endings working directory warning lf replaced crlf srcmaints file original line endings working directory warning lf replaced crlf srcpolyfillsts file original line endings working directory warning lf replaced crlf srcstylescss file original line endings working directory warning lf replaced crlf srctestts file original line endings working directory warning lf replaced crlf srctsconfigappjson file original line endings working directory warning lf replaced crlf srctsconfigspecjson file original line endings working directory warning lf replaced crlf srctslintjson file original line endings working directory warning lf replaced crlf tsconfigjson file original line endings working directory warning lf replaced crlf tslintjson file original line endings working directory successfully initialized git", "num": "23710", "d": "5/2018"}, {"title": "build compiler fails upgrade works", "body": "submitting current behaviour forced use bootstrap ng cdk ng flexlayout ng material due limitations package project compiled built served ng cli versions way upgrading project ng adding new dependency fail module parse error builds nicely though expected behaviour work minimal reproduction problem instructions prepared repo branch branch actually built ng cli version created ng cli ng cli version sparkles sparkles sparkles sparkles sparkles sparkles branch branch build ng cli basically branch upgraded ng included new dependency changes upgraded angular packages sparkles sparkles boom gt module parse failed boom boom gt module parse failed boom branch branch generated ng cli sparkles sparkles boom gt module parse failed boom boom gt module parse failed boom conclusion upgraded project dev build anymore launch app nearly convenient along sucks environment", "num": "23709", "d": "5/2018"}, {"title": "bservable", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23708", "d": "5/2018"}, {"title": "ivy fix queries refreshed directive lifecycle hooks", "body": "problem description today simple view query component result generated code along lines notice instruction part template function consider element directive directive insert embedded view ngonchanges lifecycle hook rare case example ngtemplateoutlet understand correctly hook directive executed template function run since query refreshed inside template function net effect queries refreshed ngonchanges lifecycle hook directives turn means queries wo nt pickup results embedded views created mentioned lifecycle hook solution options need one move lifecycle hooks execution template function instruction move query refresh logic template function treeshakable way need feature probably needs proper design cc mhevery kara", "num": "23707", "d": "5/2018"}, {"title": "ivy fix directives matching logic results unnecessary attributes bindings", "body": "problem description directives matching logic implemented today relies attributes array passed instruction logic needs adjusted cases directive needs match binding instead static attribute consider simple example template following directive given example current compiler runtime expect correct real attribute thus reflected dom use false binding inputs attributes simple failing test case exposes issues solution proposal separate collection real attributes ones derived bindings used directives matching could introducing new argument instructions given cases consider seems like still reflect attributes binding case attribute reflected dom bound directive input cc kara mhevery", "num": "23706", "d": "5/2018"}, {"title": "unit tests run running ng test angular", "body": "submitting current behavior unit tests new app generated run running expected behavior default configuration karma capture browser window run continuously listen changes instead running minimal reproduction problem instructions ng new testapp cd testapp ng test motivation use case changing behavior continuous testing environment", "num": "23705", "d": "5/2018"}, {"title": "eventtarget undefined platformwebworker", "body": "submitting current behavior browser event passed worker loses property expected behavior resolve render store object worker used methods passed back ui via serviceclientmessagebroker minimal reproduction problem instructions plunker using angular also github repo reproduce issue clone repo load click anywhere page console log value motivation use case changing behavior key use case detecting occurred outside certain element dropdown menu environment", "num": "23703", "d": "5/2018"}, {"title": "error exported nodemodulesrxjsrxjs", "body": "submitting x bug report current behavior error exported nodemodulesrxjsrxjs nodemodules import inject injectable injectiontoken injector ngmodule platformid angularcore import observable rxjs import concatmap filter map rxjsoperators import extends read spread tslib expected behavior import observable rxjs environment rxjs version angular version tooling issues node version others work import rxjsobservableof import observable rxjs", "num": "23702", "d": "5/2018"}, {"title": "better visual feedback loads router navigation", "body": "submitting current behavior resolve capability router currently almost useless due lack support providing targeted specific visual feedback user loading dev na\u00efvely adds resolve includes slow network request obvious feedback user clicks link anything occurring surprisingly angular router documentation even mention antipattern either something concerned suggest mitigation perhaps good mitigation recommendation found via stackoverflow listen global navigation start end events show blanket appwide spinner like bad ajax app might ok mobile absolutely horrible desktop long standard practice web apps constrain indicators sections ui loading new data expected behavior possible target parts ui affected inprogress navigation display custom ui locations duration load suggestion route navigation starts check whether resolves need processed identify components activate successful find topmost component hierarchy ie nested within another also affected navigation preactive roots preactive root set state reflected boolean property component controller firing event add optional property router config set navigation resolves component rendered preactive root alongside currently activated component add optional property router config set grace period many milliseconds firing event minimal reproduction problem instructions click go somewhere slow resolve link see user experience horrible environment", "num": "23701", "d": "5/2018"}, {"title": "fix aio remove use", "body": "latest cli build reports problem", "num": "23700", "d": "5/2018"}, {"title": "building angular project thishostgetoutputname function", "body": "getting error try build angular project error typeerror thishostgetoutputname function getoriginalname e visual studio codeangularjsdentistwebsitenodemodules referencetransformervisitstringmap e visual studio codeangularjsdentistwebsitenodemodules visitvalue e visual studio codeangularjsdentistwebsitenodemodules e visual studio codeangularjsdentistwebsitenodemodules arrayforeach referencetransformervaluetransformervisitstringmap e visual studio codeangularjsdentistwebsitenodemodules referencetransformervisitstringmap e visual studio codeangularjsdentistwebsitenodemodules visitvalue e visual studio codeangularjsdentistwebsitenodemodules e visual studio codeangularjsdentistwebsitenodemodules arrayforeach referencetransformervaluetransformervisitstringmap e visual studio codeangularjsdentistwebsitenodemodules referencetransformervisitstringmap e visual studio codeangularjsdentistwebsitenodemodules visitvalue e visual studio codeangularjsdentistwebsitenodemodules e visual studio codeangularjsdentistwebsitenodemodules arrayforeach referencetransformervaluetransformervisitstringmap e visual studio codeangularjsdentistwebsitenodemodules json package file name dentistwebsite version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter hallysonhngximageviewer aspnetsignalrclient swimlanengxdatatable angularcalendar angularfontawesome bootstrap corejs firebasereporting firebasereportingangular fontawesome googleapis jquery jspdf ngximageviewer ngxssrsreportviewer paypalcheckout rxjs signalr webanimationsjs xcomponent zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript", "num": "23699", "d": "5/2018"}, {"title": "change detection working router navigation", "body": "submitting current behavior changedetection working navigated module routed observable map expected behavior changes made navigated module detected child components minimal reproduction problem instructions created demo app showcase issue please see issue repro stackblitz please download npm install install angularcli globally present npm install g angularcli ng serve run app case issue reproducible dev build try ng serve prod home page two buttons go without login amp go login gmail click first button go page buttons go back increment amp count click increment button increment count working fine scenario next go back click button go login gmail show popup login gmail login automatically route page may use credentials cdissue gmailcom amp login using gmail count displayed click increment nt show count error scenario motivation use case changing behavior changedetection work expected even programmatic routing environment", "num": "23697", "d": "5/2018"}, {"title": "need help open component different router router modal popup widnow angular", "body": "working angular application application list detail screen structure open list screen open detail screen clicking edit icon last column grid detail screen multiple tabs second tab display list child records list actions button edit delete need want open child record modal pop window please help open child record modal popup window need use different router code need implement complete task please provide samplecode work scenerio thank vishal raghav", "num": "23696", "d": "5/2018"}, {"title": "wildcard angularjson", "body": "submitting current behavior angularclijson assets wildcard entries used work example assets png upgrade angularjson file changed following assets srcpng however build throws error error enoent file directory expected behavior expect evaluate wildcard entries like used minimal reproduction problem instructions motivation use case changing behavior support backwards compatibility also nice environment", "num": "23695", "d": "5/2018"}, {"title": "upgrade getting postcss sassloader undefined error", "body": "tried upgrading application angular followed steps mentioned upgradeangulario npm install angularcli success ng update angularcli success ng update angularcore returned warning tried command ng update angularcore force ng serve command returns error npm install savedev ng serve getting error also tried npm install sassloader nodesass savedev error also error returning component scss files environment submitting", "num": "23694", "d": "5/2018"}, {"title": "update setup information cli", "body": "submitting current behavior looks like older setup information overlooked removed updated cli made standard throughout docs expected behavior review update delete appropriate cli minimal reproduction problem instructions motivation use case changing behavior make doc consistent make doc describe demonstrate best practices throughout environment", "num": "23693", "d": "5/2018"}, {"title": "app wo nt build service worker updating", "body": "submitting current behavior app build service worker error expected find ngswconfigjson configuration file rootprojectpath folder either provide one disable service worker angularjson configuration file error error expected find ngswconfigjson configuration file rootprojectpath folder either provide one disable service worker angularjson configuration file expected behavior app build service worker enabled updading minimal reproduction problem instructions update app service worker using build app nb even tried set service worker new package described nb docs says located folder error says located root project create file root moving file folder fix issue environment", "num": "23692", "d": "5/2018"}, {"title": "mention hex capitalization author style guide", "body": "submitting current behavior neither angular author style guide google dev doc style guide clear wrto capitalization hex codes colors expected behavior update minimal reproduction problem instructions motivation use case changing behavior complete guidelines authors environment", "num": "23691", "d": "5/2018"}, {"title": "allow components provide values within component", "body": "submitting current behavior component component provide service service coupled component split component code move specific logic service service depends settings settings input component want provide settings component inject settings inside service service constructor tried component even though ng serve nt complain run time undefined expected behavior would nice able provide values within component providers list minimal reproduction problem instructions motivation use case changing behavior workaround need create init method service initialize settings component oninit method environment", "num": "23689", "d": "5/2018"}, {"title": "canvas animation requestanimationframe crash even setup outside ngzone", "body": "submitting current behavior trying animate simple item angular using canvas single component noticed problems requestanimationframe logging frames animation runs smoothly first frames considerably slow reading issues came following even though loop running outside ngzone still crashes counter frames reaches tenths thousands reproduction code link reproduction reproduction check console add animation later show slows environment", "num": "23688", "d": "5/2018"}, {"title": "bug rxjs operators creating new injectable instance", "body": "submitting current behavior rxjs operators creating new injectable instance instead provided one called without arrow function binding expected behavior use instance component idk angular issue rxjs issue minimal reproduction problem instructions motivation use case changing behavior completely unexpected behavior use instance provided happens mergemap concatmap environment", "num": "23681", "d": "5/2018"}, {"title": "bug form ngform use camelcase element selector", "body": "submitting current behavior expected behavior minimal reproduction problem instructions directly motivation use case changing behavior completely break design consistency also using nonnative element selector useful nested forms angularjs removed actually mistake environment", "num": "23678", "d": "5/2018"}, {"title": "disable form init", "body": "submitting x bug report current behavior create form matformfields want initialize disable nt work works add settimeout least tried disable using ngoninit void thisformdisable also ngafterviewinit void thisformdisable issue similar different expected behavior form disable environment angular version browser x chrome desktop version xx", "num": "23677", "d": "5/2018"}, {"title": "problem formgroup submitting form", "body": "submitting current behavior application crashed submitting form error typeerror childsyncpendingcontrols function eval eval eval arrayforeach formgroupforeachchild formgroupreducechildren formgroupsyncpendingcontrols syncpendingcontrols formgroupdirectiveonsubmit objecteval handleevent expected behavior work fine works minimal reproduction problem instructions motivation use case changing behavior facing problem upgraded angular app version help would appreciated environment angular browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others", "num": "23676", "d": "5/2018"}, {"title": "routing working production build", "body": "os ubuntu server apache localhost angular version node version chrome version info facing problem routing production build project routing properly try click menu list try refresh page show error message found requested url webappgallery found server ubuntu server localhost port", "num": "23669", "d": "5/2018"}, {"title": "routing working", "body": "submitting current behavior share code since organizition policy several components first searchcomponent search something redirect searchreasultcomponent first time hit search works fine navigates result page go back searchcomponent try search something goes resultcomponent navigate back searchcomponent within fraction time ie user gets feeling page nt change screenshot enabletracing true look closely time stamps expected behavior work according angular docs minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23664", "d": "5/2018"}, {"title": "routing breaking", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23663", "d": "5/2018"}, {"title": "compilercli generated setting fulltemplatetypecheck skiptemplatecodegen true", "body": "submitting current behavior using api set inside code rather reading omitted call generated setting expected behavior generated minimal reproduction problem instructions motivation use case changing behavior behavior compilation via cli command environment others", "num": "23662", "d": "5/2018"}, {"title": "angular valuechanges issue", "body": "parent component ngoninit setcurrentprd event void savechages val consolelog parent component value changes called consolelog val child component output notifyonprdselection selectedprd eventemitter new eventemitter constructor products product ngoninit onclick prd product void consolelog child component gt prdid prdname thisselectedprdemit scenario applist html product list shown id name amp edit button click edit button send notify parent pass selected object display id name textbox problem selecting product one one without changing value textbox selected object valuechanges method keeps calling unexpected behavior output mine child component selected product gt child component selected product gt b parent component value changes called parent component value changes called b child component selected product gt b parent component value changes called parent component value changes called parent component value changes called b parent component value changes called b child component selected product gt c parent component value changes called parent component value changes called parent component value changes called parent component value changes called c parent component value changes called c parent component value changes called c see valuechanges method increasing previous one every time real scenario valuechages calling webapi keep increasing like led network requests problem appreciate someone soon possible give solution case need sample project let know send thanks advance dhimant", "num": "23661", "d": "5/2018"}, {"title": "resolve cancel behavior documented clearly", "body": "submitting current behavior trying figure cancel navigation request resolve example resolver requesting data server server returns error want cancel navigation looking documentations could nt find solution searching lot found returning empty observable cancels navigation documented anywhere expected behavior behavior resolve documented clearly state happens error cancel navigation minimal reproduction problem instructions check okay router link resolver url returns value navigation url works expected check error router link resolver url returns value navigation url work motivation use case changing behavior make clearer users environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "23659", "d": "5/2018"}, {"title": "expressionchangedafterithasbeencheckederror dynamic validators template driven composite form control", "body": "submitting current behavior composite form control think component internal form dynamic validator ie control throw error validator example value changes expected behavior error minimal reproduction problem instructions click button note console error circular json error seems generated stackbitz demo motivation use case changing behavior template driven forms easier use templatedriven aka directive validators easier work conditionally add remove similarly reactive forms nt get error environment information note change method update validators control nt get error point bug work using purely templatedriven means example remove attribute demo link update method ts togglerequiredness thisnamerequired thisnamerequired demo modification alternatively manually trigger updating requiredness argument bug sort behavior nt necessary kind templatedriven form", "num": "23657", "d": "5/2018"}, {"title": "highlight search results page", "body": "submitting current behavior go type put insertion point site search box enter search string ngmodule search results choose something let say routing tutorial column visually skim rightside navigation see ngmodule list somewhere open inpage search ctrlf enter search string ngmodule jump page easily find search term occurs steps first search result full context nt turn wanted repeat steps file might want expected behavior go type put insertion point site search box enter search string ngmodule search results choose something let say routing tutorial column search results highlighted inpage jump page easily find search term occurs nt exactly wanted repeat steps page minimal reproduction problem instructions see motivation use case changing behavior search dominant access path documentation use search twice things nt main subject page slow environment", "num": "23655", "d": "5/2018"}, {"title": "incorrect release version", "body": "latest release version instead actual version link see issue", "num": "23654", "d": "5/2018"}, {"title": "aio search nt match phrases punctuation search keyword", "body": "submitting current behavior search nodejs search drops everything searches node provides lot false positive results timeconsuming go result inpage search find results contain nodejs anywhere page similarly search appherodetail get false positives put quotation marks around string got zero results also correct false negative expected behavior search keyword contains punctuation include punctuation part search string google search nodejs appherodetail see expected results minimal reproduction problem instructions go onsite search box enter nodejs without quotes see search results following results correct results false positive hitting node onsite search box enter nodejs quotes results found incorrect onsite search box enter appherodetail without quotes see search results way know actual matches search results select forms inpage search appherodetail match angulario site search box page false positive search results onsite search box enter appherodetail quotes results found incorrect least one page contain string motivation use case changing behavior search primary onsite navigation aid punctuation strings reasonable thing expect especially given often found code constructs false positives waste time false negatives create impression content nt exist degrade user trust search point users go google search instead using onsite search environment", "num": "23652", "d": "5/2018"}, {"title": "light font footer difficult read", "body": "submitting current behavior footers using light white font difficult see expected behavior would ideal text thicker font easier read motivation use case changing behavior accessibility environment", "num": "23651", "d": "5/2018"}, {"title": "angular elements guide simple code snippet example", "body": "submitting current behavior angular elements guide fully fledged example angular component rendered custom element nt break specific tasks need take advantage strategy expected behavior simplify add simple example focuses steps developers need take advantage", "num": "23650", "d": "5/2018"}, {"title": "valueprovide supports already defined values", "body": "submitting current behavior value provider used aot mode variables assigned usevalue property ts forroot function providers provide networkconfig usevalue config works usevalue new networkconfig config nt work note title issue best nt know proper name feel free rename issue expected behavior new networkconfig config syntax supported easily merge recieved config default one minimal reproduction problem instructions demo code show problem since stackblitz uses jit compiler work expected demo must downloaded compiled ng build aot command motivation use case changing behavior inject config requested format everywhere nt introduce new service hydrate injected option objects environment", "num": "23648", "d": "5/2018"}, {"title": "aio ie polyfills loaded always blocking way", "body": "submitting current behavior ngconf igorminar great talk seo one tips load polyfills necessary pointing solution aio taking creadits aio implementing app started see cases polyfills loaded curious unfortunatelly found problem aio using problem still async screenshots polyfills loaded later main chunks reading issue found taken expected behavior polyfills loaded synchronously blocking way minimal reproduction problem instructions reproduced eg went clicked", "num": "23647", "d": "5/2018"}, {"title": "ability define required parameter present route instantiation without using query string parameters substitute", "body": "submitting update may come implementation addresses use case prompted us submit feature request see comment current behavior aware angular documentation define optional route parameter also aware angular team recommends using query string parameters parameter optional however neither solves following use case use simple example route contains multiple parameters required list name type case parameters required route load correctly second one defined present url via one ways making api call database previously loaded url shared bookmarked need parameter present url deep linking well maintain expected browser navigation via back fwd buttons would also like avoid using query string parameters solution negative seo implications among problems creates us define routes instruct component navigate first route second obtained second parameter http request theoretically breaks browser navigation trying hit back button endlessly cause first route redirect second could intercept use javascript move back levels history feels like ugly hack expected behavior would great ability optionally make http request obtain data specify route parameter dynamically data somewhere route lifecycle automatically tacked onto end route path route loaded reflect browser history accordingly initial route include required parameter never written browser history begin environment", "num": "23646", "d": "5/2018"}, {"title": "wide currency values missing", "body": "submitting current behavior possible get wide symbol format us dollar amongst others locales expected behavior matter configured locale possible retrieve wide format currency motivation use case changing behavior currencies shared currency symbols fe usdcadaud also gbpfalkland islands pound etc always possible get wide format currently possible show notation people fe canadabased locale short symbol would imply canadian dollar wide syntax required distinguish type dollar environment", "num": "23645", "d": "5/2018"}, {"title": "feat ngbot missing label count pending failing", "body": "submitting current behavior pr nt one required labels merging eg appears failing affects pr status shown bottom page also icon used github tab useful getting overview pr status without switch tab scroll bottom showing status failing case slightly confusingmisleading normally failure means pr author fix something nothing fix though waiting review blocked another issue words label error time rather intentionally postponed pr appropriate state thus counting pending accurate failing imo expected behavior required label mergin count pending instead failing far concerned", "num": "23644", "d": "5/2018"}, {"title": "google chrome refresh favicons every route change angular", "body": "hi click router link see new request favicons bug angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularcli ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack", "num": "23643", "d": "5/2018"}, {"title": "routing broken angular", "body": "submitting current behavior scaffold simple app two routes view try navigate anywhere except base route browser throw error router calling zone instead object breaking expected behavior application route works upgrading breaks angular app tested minimal reproduction problem instructions motivation use case changing behavior enterprise users require support major issue blocks apps deployed issue persists able upgrade environment", "num": "23642", "d": "5/2018"}, {"title": "add information install beta rc releases", "body": "submitting current behavior new content angular releases releasesmd mentions version number convention release practices beta rc releases nt say updatingmd get install find doc releases say bake quality let preview coming providing beta releases release candidates rcs major minor release expected behavior igorminar review doc pr think tell people install find documentation maybe table release type vs npm tagcli flag used installation link docs github branch would help make office jenniferfell think good addition perhaps affects updatingmd well things find install prerelease versions might go another idea might add page prerelease versions include numbering scheme get reminder submit feedback creating separate issue release current doc spend appropriate time get addition right minimal reproduction problem instructions motivation use case changing behavior environment", "num": "23640", "d": "5/2018"}, {"title": "add support shadow dom", "body": "centralizing discussion shadow dom changeover good explainer documentation changed shadow root changes gt big change currently breaking people using edge unexpectedly supports new shadow dom api old proposed fix add two new enum options name bikeshedded rather changing behavior means feature release rather breaking change deprecated currently emulated view encapsulation based semantics proposed fix update emulation shadow dom via shadow css match semantics currently use old version shadowcss polyfill webcomponents additionally consider allowing developers polyfill shadow dom runtime via shadow dom polyfill would allow developers author expectation shadow dom available fall back via polyfill rather author two components etc support modern legacy browsers polyfill nontrivial runtime overhead major browsers except edge support may desirable developers gt introduces new psuedoselector styling slotted nodes course supported natively work correct way maybe emulate encapsulated mode etc content projection changes elements deprecated favor new api already added schema developers able use native slot functionality generally useful angular elements proposed fix pkozlowskiopensource proposed new api would supersede means aligning distribution semantics api may mean introducing something like decorators deprecating additionally align semantics emulated distribution nodes works spec including default content longer term consider parttheme proposal covers developers use cases potentially emulate build time theming see related issues", "num": "23636", "d": "5/2018"}, {"title": "add support minmax number validation template driven forms", "body": "submitting current behavior mechanism basic number validation minmax template driven forms expected behavior minimal reproduction problem instructions motivation use case changing behavior certainly scope validation pretty limited angular however fact implemented seems suggest minmax limited scope also would allow angular supply validators least match spec sharing motivation although need address particular issue furthermore public demand seen stackoverflow even attempted approved mechanism used breaking change rolled back order avoid breaking change would seem either custom attributes used easy satisfy user add particular module boolean flag enable feature adds complexity environment", "num": "23635", "d": "5/2018"}, {"title": "incorrect http accept header router preloading feature areas", "body": "submitting current behavior implemented application multiple routes using background preloading level routes following instructions requesting route definitions systemjs module loader specifies correct accept headers complex configurations instance using spring mvc due change default spring parameter value naming pattern chunk files ie namemodulechunkjs lead html served instead static resources expected behavior would argue correct accept header would minimal reproduction problem instructions create empty spring boot app mvc requestmapping matching start chunk name renders page motivation use case changing behavior allow complex configurations avoiding name clashes environment angular version others tested latest spring boot", "num": "23632", "d": "5/2018"}, {"title": "broken layouts link heading aio", "body": "submitting current behavior", "num": "23630", "d": "5/2018"}, {"title": "injectiontoken error encountered metadata generated exported symbol injectiontoken", "body": "submitting current behavior try build library use together option calls lambda error emitted though relatively odd thrown works works error also reason lamda function supported case documentation always saw something like implementation however throw compiler error expected behavior error least consistant behaviour minimal reproduction problem instructions following flags tsconfig ts file ts import ngmodule angularcore import injectiontoken inject angularcore export class overlay constructor reposition export const scrollstrategy new injectiontoken scrollstrategy providedin root factory mstrategyproviderfactory export function mstrategyproviderfactory gt void const x enabling remove error return gt new overlay reposition ngmodule providers provide scrollstrategy usefactory mstrategyproviderfactory export class libmodule motivation use case changing behavior suppressed using using compiler flag might effect one suppress important error message", "num": "23629", "d": "5/2018"}, {"title": "install angularelements dependency ng add schematic", "body": "submitting x feature request current behavior adds polyfill packagejson expected behavior add polyfill install angularelements minimal reproduction problem instructions cli ng new myapp cd myapp ng add angularelements next motivation use case changing behavior better match developer expectations make easy adopt angular elements", "num": "23628", "d": "5/2018"}, {"title": "elements guide missing intro paragraph clarifying relationship custom elements", "body": "page title angular elements overview nowhere beginning section clarifies relationship angular elements custom elements maybe start something like angular elements angular components packaged custom elements web standard defining new html elements frameworkagnostic way", "num": "23627", "d": "5/2018"}, {"body": "closing analysis done make sure bug originates angular create simple test case demonstrates problem please open new issue might get chance asking support stack overflow", "d": "5/2018"}, {"body": "provide minimal repro stackblitz nt enough actionable info right", "d": "5/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "5/2018"}, {"body": "ngstar thing explained changelog padding problem sounds caused see issues related", "d": "5/2018"}, {"body": "thank eric preservewhitespaces true solved issue", "d": "5/2018"}, {"body": "almost certainly issue end please provide stackblitz reproducing issue", "d": "5/2018"}, {"body": "closing repro", "d": "5/2018"}, {"body": "record solution fixed add following jasmine tests example", "d": "5/2018"}, {"body": "activated default angular opt using various methods mentioned linked doc ex thinking maybe list ws got eager maybe remove", "d": "5/2018"}, {"body": "pkozlowskiopensource one thing aio", "d": "5/2018"}, {"body": "want say regular whitespaces question documentation appointment intended indention something around html template like", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation belongs also look issues report", "d": "5/2018"}, {"body": "forkjoin nt emit inputs completed token observable nt complete thus observable returned interceptor nt complete thus forkjoin never emits using rxjs wrong bug", "d": "5/2018"}, {"body": "side note making requests without forkjoin get values since nt complete creating memory leaks interceptors tool keep observables alive time services", "d": "5/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "5/2018"}, {"body": "design key itemkey value itemvalue take produce input match type nonpure map pipe keep internal state return instance input pipe changed pipe use detecting input changes const suggestion const list however adhoc solution would prefer solution would work across many bindings consistent way let hold implementing", "d": "5/2018"}, {"body": "nt understand bit nonpure map pipe keep internal state return instance input pipe changed mean handles case mutable check actual array nt understand case currently afaiu nt work nt understand name would", "d": "5/2018"}, {"body": "marclaval means internal state propagate invocations internal state needed returns result instance input change saying suggesting renamed saying implement since holistic solution rather oneoff", "d": "5/2018"}, {"body": "mhevery sgtm", "d": "5/2018"}, {"body": "fyi iterated", "d": "5/2018"}, {"body": "pr came implementation satisfies couple design points mhevery made input type easily extended support kinds maps", "d": "5/2018"}, {"body": "possibly related", "d": "5/2018"}, {"body": "mrhus add performance monitor screen would like see gif order understand wrong affects application", "d": "5/2018"}, {"body": "gif", "d": "5/2018"}, {"body": "mrhus thank perfect example", "d": "5/2018"}, {"body": "uses case solved using custom routereusestrategy posted one issues regarding component reuse routing think issue still makes sense throw error reload nt throw user interactions", "d": "5/2018"}, {"body": "try", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation sorry issue caused angular please contact author project typescript file issue issue tracker related angular", "d": "5/2018"}, {"body": "closing seem related angular indicated messages", "d": "5/2018"}, {"body": "issue please reopen", "d": "5/2018"}, {"body": "gkalpak ok thanks opened", "d": "5/2018"}, {"body": "related", "d": "5/2018"}, {"body": "sounds preservewhitespaces thing try comment info", "d": "5/2018"}, {"body": "ericmartinezr thanks suggestion link comment tried setting tsconfigjson bootstrap module call neither worked please let know suggestions things try", "d": "5/2018"}, {"body": "yeah problem api allows build using array arguments pass array assumes trying build control value index validator index etc fix wrapping value eg better longterm solution", "d": "5/2018"}, {"body": "sample stackblitz updated workaround need test array length gt wrap", "d": "5/2018"}, {"body": "created pr based open pr jialipassion", "d": "5/2018"}, {"body": "remackgeek thank quick response pr", "d": "5/2018"}, {"body": "general super excited adding bunch affordances zones elements future elements almost certainly zoneless concerned adding bunch zone specific apis support forever remackgeek pr seems fine though might better implemented additional elementstrategyfactory potentially subclass componentfactorystrategy developers wanted use zones could pass call explicit pass vs detecting internally means developer nt pass zone strategy could treeshaken away", "d": "5/2018"}, {"body": "robwormald agree additional elementstrategyfactory better checking current ngzone using use different strategy chance take look proposal believe make inside without impact outside world user another option develop benefits idea user develop like developing user easily migrate existing please check time thank", "d": "5/2018"}, {"body": "robwormald company big opportunity using elements older applications developers used change detection works tm think zone use case brings lot value thinking something like enable zones strategy methods something like update pr", "d": "5/2018"}, {"body": "add new optional field configuration change factory constructor add boolean defaulting false would nt need new factory add public api let know way prefer", "d": "5/2018"}, {"body": "please add repo reproduce", "d": "5/2018"}, {"body": "tried aot jit everything get error output running webpack corybuildaot webpack task hash version webpack time built assets entrypoint polyfills entrypoint bundle nodemodules kib built warnings nodemodules kib built srcservicessettingsts kib built nodemodules kib built nodemodules kib built modules kib built kib built kib built kib built kib built kib built kib built kib built kib built kib built kib built kib built kib built kib built kib built kib built hidden modules srcservicescookiets kib built srcservices kib built srcbootts kib built testangularwebpackangularmodulengfactoryjs kib built srcbundlets bytes built testangularwebpackangularbundleaotts bytes built kib built srcpolyfillsts bytes built testangularwebpackangularpolyfillsts bytes built hidden modules warning nodemodules systemimport deprecated removed soon use import instead info visit testangularwebpackangularbundleaotts warning nodemodules systemimport deprecated removed soon use import instead info visit testangularwebpackangularbundleaotts error chunk bundle entry name hash js runtimetemplatemoduleid module id happen child htmlwebpackplugin indexhtml asset entrypoint undefined indexhtml nodemoduleshtmlwebpackpluginlibloaderjs testangularwebpackindexhtml bytes built warning use force continue aborted due warnings execution time loading tasks coryensureprotractor corynpm corynpmangular loading gruntcontribclean clean corybuild clean corypublish loading gruntcontribcopy copy corybuild cory license loading gruntwebpack webpack corybuildaot total", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "never mind webpack error", "d": "5/2018"}, {"body": "tsconfigjson ts class public ngonit transpile ts var class function function aprototypengonit function return arrow function ts class public ngonit gt transpile well code transpile arrow functions apparently somehow affects", "d": "5/2018"}, {"body": "interesting angular call exists prototype feel like angular look instance instead prototype", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "ok looks like nt reasonable clarify documentation", "d": "5/2018"}, {"body": "alexeagle add label documentation", "d": "5/2018"}, {"body": "dup", "d": "5/2018"}, {"body": "tatsujb try", "d": "5/2018"}, {"body": "unclogged things ng update angularcli ran without issue", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "already possible create nested children existing see guide", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "dup bug angular framework", "d": "5/2018"}, {"body": "ericmartinezr would know idea would happening", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "thanks eric raise stack overflow eric bug could please tell workingany mistake done thanks", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "thanks", "d": "5/2018"}, {"body": "like breaking bad", "d": "5/2018"}, {"body": "dup", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "please add example stackblitz", "d": "5/2018"}, {"body": "dup", "d": "5/2018"}, {"body": "advice solve problem", "d": "5/2018"}, {"body": "need change typescript configuration nt resolve duplicate copies angular libraries", "d": "5/2018"}, {"body": "sam problem could precise change typescript", "d": "5/2018"}, {"body": "breaking change may ok angular", "d": "5/2018"}, {"body": "tracked fixed", "d": "5/2018"}, {"body": "sorry works intented contract everything inside angularjs template belongs angularjs follows rules changing bindings would inconsistent also breaking change eg valid usecases one wants values interpolated case pure angularjs apps want attribute value contain interpolation markers without interpolated need escape markers", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please open angularcli issues repo thanks", "d": "5/2018"}, {"body": "belongs", "d": "5/2018"}, {"body": "bug confirmed due lacking property update affects usage", "d": "5/2018"}, {"body": "hey bit confused question taking look provided reproduction issue stackblitz seems like placing inside folder angular provides folder include kind resources please place file folder access trough ps make sure base url set please check angular deployment docs hope helps", "d": "5/2018"}, {"body": "closing support request might want check angular material uses svg icons", "d": "5/2018"}, {"body": "local patching managed get result sure errors nt result test failures instead success", "d": "5/2018"}, {"body": "seems clear enough error missing context trivial provide", "d": "5/2018"}, {"body": "alexeagle splincode submitting current behavior line invalid provider typos renaming example message tell either index provider module problem occurs expected behavior message error could clearer variables available context would help finding error quickly part message minimal reproduction problem instructions simply add invalid provider array providers module stackblitz hier motivation use case changing behavior knew immediately message console module index array providers would easy identify problem environment", "d": "5/2018"}, {"body": "invalid provider typos renaming example could make typescript happy", "d": "5/2018"}, {"body": "could make typescript happy mistake made realized spending time debugging browser problem sharing possible solution community order beginners like suffer less made mistake", "d": "5/2018"}, {"body": "add repo example add info repro steps", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "add repo example", "d": "5/2018"}, {"body": "fixed problem thanks please close issue", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "add repo example add info repro steps", "d": "5/2018"}, {"body": "reproduce new repo closing longer sure caused original problem", "d": "5/2018"}, {"body": "suneethar attach angular dynamic component dom node look api docs", "d": "5/2018"}, {"body": "httpclient uses xmlhttprequest internally ca nt access filesystem", "d": "5/2018"}, {"body": "please let know alternative used angular used http worked well", "d": "5/2018"}, {"body": "ask question gitter chatroom repro gist stackblitz plnkr etc used work would awesome description nt possible version angular", "d": "5/2018"}, {"body": "u find repo link angular cli seems throw error add question gitter chat room", "d": "5/2018"}, {"body": "please find stackblitz sample app created facing issue please let know alternative way access local data reactiveformsbasicszip", "d": "5/2018"}, {"body": "http calls client needs http server local remote principle probably nobody understand main goal try formulate idea another words need save data local disk client read need save something local database like", "d": "5/2018"}, {"body": "stored json data local machine usig want fetch response happening cases happening cases one stackoverflow follow gives idea issue facing", "d": "5/2018"}, {"body": "seems called outside jasmine context default tests solution manually trigger component destruction fixture", "d": "5/2018"}, {"body": "usage changedetection changedetectionstrategyonpush problems well problem zonejs", "d": "5/2018"}, {"body": "technically expected creating new promise scheduled new microtask scheduled within angular zone new change detection triggered microtask scheduled another new microtask never good idea perform scheduling inside template execution equivalent html doevil", "d": "5/2018"}, {"body": "trotyl understand fun probably need write style guide", "d": "5/2018"}, {"body": "could catch compiler", "d": "5/2018"}, {"body": "alexeagle technically impossible tell expression real sideeffect easy detect runtime set current zone special template execution set back throw error whatever microtaskmacrotask inside since angular zone tick triggered", "d": "5/2018"}, {"body": "tracking duplicate", "d": "5/2018"}, {"body": "trotyl easy detect runtime set current zone special blockingtaskzone template execution set back throw error whatever microtaskmacrotask inside yes think work try", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2018"}, {"body": "angular dependency injection used fontend applications think angular di used frontend app", "d": "5/2018"}, {"body": "take look may help", "d": "5/2018"}, {"body": "ericmartinezr although project looks cool nt keep angular links angular guide documentation literally first example wo nt work uses modules would nice feature trotyl really meant platforms angular supports meant frontend apps event render html said possible use di without platform using really user friendly write provider deps service ca nt really use angular di mechanism full extent subset functionality", "d": "5/2018"}, {"body": "dawidgarus angular preset welcomed create platform", "d": "5/2018"}, {"body": "think nestjs loosely based angular specifically di model also modules", "d": "5/2018"}, {"body": "trotyl collection providers must also provide way bootstrap module order use otherwise like module angular nt make easy example constructor ca nt create without using nonpublic api also reason create ignore errors compile module nt work ofc nt need use write platform scratch would pointless since already code properly exposed", "d": "5/2018"}, {"body": "dawidgarus already put whatever logic try mount component nothing whatever viewlayer stuff", "d": "5/2018"}, {"body": "trotyl really nt get tried using custom requires something would like include node app mention lot unnecessary dependencies purpose basically want boils creation far know done using", "d": "5/2018"}, {"body": "dawidgarus nt want rely zonejs course used said creating platform rather using designed webapp required even lot still aot node application unless nt build step better use typescript", "d": "5/2018"}, {"body": "trotyl seriously nt seem understand write platform must write implementation bootstrap module must compile mean scan metadata search providers either use really ca nt nt public constructor also platformbrowserdynamic write compiler scan module metadata creates using reflections basically requires rewrite di mechanism scratch pointless", "d": "5/2018"}, {"body": "dawidgarus need implement anything making new platform platforms children nothing must overridden course still requires compilation angular works today sorry make clear", "d": "5/2018"}, {"body": "trotyl need provide real problem simple facade would nice angular provided compiler module minimal dependencies ignores declarations could used di", "d": "5/2018"}, {"body": "ok right jit even public api make everything aotonly solved ivy", "d": "5/2018"}, {"body": "found dest path library using hyphenated form build system builds outputs find destination path ngpackagejson probably culprit", "d": "5/2018"}, {"body": "please report angularcli issues repo", "d": "5/2018"}, {"body": "oh well explains downvotes", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hi pilukina angular using rxjs breaking changes suggest read migration guide short import rxjs rxjsoperators need change code typescript import injectable angularcore import http angular use new httpclient api import httpclient angularcommon import import rxjsaddoperatormergemap import mergemap rxjsoperators import observable behaviorsubject subject rxjs import promiseobservable rxjsobservablepromiseobservable import observable rxjsobservable import behaviorsubject rxjsbehaviorsubject import subject rxjssubject import rxjsaddobservableof mergemap responsexml gt responsexmltext subscribe responsebody gt rxjstslint package could help automatically update import rxjs think read migration docs place ask questions think use angular gitter channel try contact heard provide support women work tech hope could help", "d": "5/2018"}, {"body": "pilukina use rxjscompat bridge", "d": "5/2018"}, {"body": "forgot add post also migrated rxjs rxjs rxjscompat promiseobservable seems supported sandangel install npm g rxjstslint run p p pathtotsconfigts paths updated still error browser page could also useful migrate angular angular speciall support women problems codiying updating libraries common developers nevertheless many thanks information nggirl good know ericmartinezr create task question stackoverflow many thanks help", "d": "5/2018"}, {"body": "sandangel propertly said many thanks code must updated order work reason promiseobservable fails observable classes removed favor existing new operators perform operations class methods example arrayobservablecreate myarray replaced myarray new operator fromarray case new promiseobservable responsexmltext must replaced responsexmltext flatmap replaced pipe mergemap another example could find code observableof information please check follow doc", "d": "5/2018"}, {"body": "happens preloading tied unfortunately invoked using instead component issue discussed see details case could work around issue manually calling bootstrap listeners something like ts export class appmodule constructor inject appbootstraplistener private bootstraplisteners gt void private upgrade upgrademodule ngdobootstrap environmenthybrid thisupgradebootstrap documentbody strictdi true thisbootstraplistenersforeach listener gt listener closing duplicate", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "hello unfortunately hard tell wrong build without minimal reproduction", "d": "5/2018"}, {"body": "read topic wo nt help try upgrade project following steps", "d": "5/2018"}, {"body": "alexzuza yes realize sorry love something reproducible said give hints debug happy seen read thread tried even killing entire checkout including nodemodules obviously reinstalling also thread never makes mention affects windows users seems important piece information specific comment thread like us try happily right couple dozen different solutions work people nothing conclusive actually going also upgrade angular following guide sidestep instructions due various bugs cli able ng update using private registry said linux macos users everything fine windows users issue", "d": "5/2018"}, {"body": "airblader force cache clean problem weeks ago related angularcli try remove angularcli globally first remove nodemodules run install latest version angularcli globally finally run edit also windows user", "d": "5/2018"}, {"body": "tell one windows users try report back", "d": "5/2018"}, {"body": "followed instructions windows machine still get error", "d": "5/2018"}, {"body": "airblader npm version typescript version project", "d": "5/2018"}, {"body": "one tested earlier linux works even typescript", "d": "5/2018"}, {"body": "airblader could show whole packagejson", "d": "5/2018"}, {"body": "sure retracted name one package internal ui library comes private registry script modifies webpack files little unrelated removing build nt make difference", "d": "5/2018"}, {"body": "half packages date update webpack webpackdevserver tslint currently using angular everything working fine u run would list warnings point date packages try repair", "d": "5/2018"}, {"body": "half packages date versions packagejson indeed bit outdated dependency management fixes also using webpack webpackdevserver according lock file", "d": "5/2018"}, {"body": "observed issue nonwindows machine well though still seems mostly affect windows", "d": "5/2018"}, {"body": "duplicate seems something broken setup related angular cli would try uninstall reinstall node create new angular app using cli", "d": "5/2018"}, {"body": "yes resolved visual code uninstalled install", "d": "5/2018"}, {"body": "kind joke hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "got issue", "d": "5/2018"}, {"body": "able repro issue yarn global add angularcli latest yarn global resolving packages fetching packages linking dependencies building fresh packages success installed angularcli binaries ng done developmenttmp master ng new schematic input validate schema dryrun false version skipgit false skipinstall false linkcli false commit true newprojectroot projects inlinestyle false inlinetemplate false routing false prefix app style css skiptests false errors data path additional properties dryrun", "d": "5/2018"}, {"body": "npv v tsc v node v working perfectly except ng new myapp", "d": "5/2018"}, {"body": "found solution run npm install g angularcli work like magic", "d": "5/2018"}, {"body": "released rollback brocco culprit along cli adding properties schematics input nt let find fix next week blocking release week", "d": "5/2018"}, {"body": "closing issue fixed rollback", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "sounds reasonable feel like taking stub fixing need update file wink", "d": "5/2018"}, {"body": "see gkalpak invited submit change like super let us know get someone team work thanks", "d": "5/2018"}, {"body": "ivy feature complete yet please nt open issues version encourage people use otherwise increasing noise issue tracker could result important issues missed thank understanding", "d": "5/2018"}, {"body": "somehow get rid error commented instances animation browser animation still getting", "d": "5/2018"}, {"body": "sounds like issue belongs", "d": "5/2018"}, {"body": "toxicable sorry absolutely right", "d": "5/2018"}, {"body": "filename", "d": "5/2018"}, {"body": "soumenbarua thank submitting recently checked tutorial nt encounter problem possible however overlooked something nt clear enough instructions successful steps specific step resulted error thanks additional info", "d": "5/2018"}, {"body": "hi jennifer able run apiheroes code work external api example tutorial example consume external api thanks soumen", "d": "5/2018"}, {"body": "filename brandonroberts understand two issues update lazy loading doc talk absolute v relative paths update doc examples use relative paths style guide seems correct style correct", "d": "5/2018"}, {"body": "yes correct", "d": "5/2018"}, {"body": "packages still might moved different location nodemodules npm hoisting electron app depends directly packages need specify dependency packagejson rely packages installed transitive dependencies angularcli", "d": "5/2018"}, {"body": "example get rendered text real link think would allow injecting arbitrary html app probably want sure possible next gen ivy architecture", "d": "5/2018"}, {"body": "closed correctly stated cdata correct feature use use xtags future reference see section", "d": "5/2018"}, {"body": "got error upgrade investigating", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2018"}, {"body": "krazygit case problem related error typeerror thissubscribe function promiseobservableobservablesubscribe eval order compile angular version needed upgrade rxjs install rxjscompat error rise part code flatmap responsexml gt new promiseobservable responsexmltext subscribe response gt still idea solution maybe info could help", "d": "5/2018"}, {"body": "please create reproduction want make sure expecting constraints specified locale specific format localization supported input constraint localeagnostic format", "d": "5/2018"}, {"body": "hi igormina yes talking input min max validators use parsefloat convert control value number support localization add example issue", "d": "5/2018"}, {"body": "hey quick question gogoris igorminar already solution proposal one implemented simple solution seems working locally guys interested finish testing missing cases documenting code submit pull request", "d": "5/2018"}, {"body": "related please reopen issue angularangularcli repo", "d": "5/2018"}, {"body": "ok thank", "d": "5/2018"}, {"body": "indeed dup", "d": "5/2018"}, {"body": "ericmartinezr yes talking url checking url background image path sanitizing url styles different way understanding", "d": "5/2018"}, {"body": "indeed work suspect bug regexp whitelist matching", "d": "5/2018"}, {"body": "added example working svg bugs", "d": "5/2018"}, {"body": "hard investigate without reproduction detailed instructions example calling promise returned resolved", "d": "5/2018"}, {"body": "yes promise returned requestsubscription resolved", "d": "5/2018"}, {"body": "ok nt know could wrong looking code seems essentially retrieve throw requesting subscription return instance afaict resolve resolve call manually really hard investigate without reproduction grin", "d": "5/2018"}, {"body": "app dev perspective tell really hard debug minified code resolves resolves exactly object", "d": "5/2018"}, {"body": "really nt know grin someone needs debug impossible without reproduction", "d": "5/2018"}, {"body": "updated stackblitz demo reproduce issue download zip add run dist folder fresh installation gives error chrome", "d": "5/2018"}, {"body": "thx repro fix", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "nothing angular want components keep original full names nt use compressorminifier anyway link provided suggests define dictionary wo nt relay component name", "d": "5/2018"}, {"body": "agreed alexzuzathis issue related angular compiler suggestion one thing work development environment also except work production environment", "d": "5/2018"}, {"body": "sorry seems like rollup bug please file issue rollup project thanks", "d": "5/2018"}, {"body": "use even providing things appmodule avoids dependency service onto module also see easy treeshakable providers run circular dependencies better provide directly modules root whenever possible edit precisely provides root injector similar angular providing things appmodule", "d": "5/2018"}, {"body": "aboutcode thanks remark consequences performancetreeshakability aside feel like following documentation angulario main site right also typescript api using type enforcing believe work", "d": "5/2018"}, {"body": "interestingly nt indeed work work demo", "d": "5/2018"}, {"body": "technically definitely would work components must somehow imported directly indirectly otherwise wo nt showing app long dep must imported component avoid circular dependency nothing expected es module semantics", "d": "5/2018"}, {"body": "es modules support circular dependencies besides point nt work design would expect removed ts type definitions documentation works differently missusing might need clarification docs bug fixed", "d": "5/2018"}, {"body": "nicojs es modules support circular dependency used eagerly metadata used eagerly simple could help confirm problem indeed value skipped angular problem angular angular perspective wrote angular cli already provides functionality every time circular dependencies occurs need fix first rather believing wo nt break anything", "d": "5/2018"}, {"body": "angular side nt use need make closuresafe detect possible circulardep issue way could produce better error message ref", "d": "5/2018"}, {"body": "consequences performancetreeshakability aside feel like following documentation angulario main site right also typescript api using type enforcing believe work nicojs seen things come expressed concerns angular nt even released think assume angular authors reasons designed api way fact docs say creating treeshakable providers example providedin allows declare injector injects service unless special case value always root docs migration guide make clear though relationship nt systematically migrated inverse relationship onto see linked issue thread", "d": "5/2018"}, {"body": "jenniferfell like suggestion aboutcode docs migration guide make clear though module provides service relationship nt systematically migrated inverse service providedin module relationship onto service providedin root see linked issue thread could incorporate di docs thanks", "d": "5/2018"}, {"body": "import injectable angularcore import layoutmodule layoutscriptslayoutmodule injectable providedin layoutmodule export myfeatureservice root provider needs fixed", "d": "5/2018"}, {"body": "georgeknap circular dependency fix better error message may also better documentation", "d": "5/2018"}, {"body": "trotyl provide service instead wo nt increase initial bundle size since tree shakable bundled module actually uses", "d": "5/2018"}, {"body": "manojvignesh wo nt long using api always level treeshaking", "d": "5/2018"}, {"body": "level treeshaking", "d": "5/2018"}, {"body": "manojvignesh yes", "d": "5/2018"}, {"body": "nt sound right use want use service wo nt loaded main module even never loaded", "d": "5/2018"}, {"body": "gkalpak cases user nt care service used specific lazy module want lazy possible service used eager modules let bundled eager bundle service used lazy modules let bundled lazy bundle service used eager lazy modules let bundled eager bundle used nowhere bundle used", "d": "5/2018"}, {"body": "wow would still bundle something lazy bundle used stuff inside lazy bundle cool nt know definitely highlighted docs based following docs excerpt di guide would definitely try provide injectable lazy module sometimes desirable service always provided application root injector perhaps users explicitly optin using service service provided lazilyloaded context case provider associated specific class used whichever injector includes module", "d": "5/2018"}, {"body": "gkalpak value nothing loadingbundling determines whether allowed use loaded means allowed anywhere", "d": "5/2018"}, {"body": "put singleton services coremodule described style guide new providedin syntax mean services provided directly root appmodule longer go coremodule", "d": "5/2018"}, {"body": "probably angular preservewhitespaces set false default design", "d": "5/2018"}, {"body": "biiiipy right", "d": "5/2018"}, {"body": "biiiipy ericmartinezr tried add flag true new project generated cli unfortunately work either", "d": "5/2018"}, {"body": "read issues working json config file ca nt tell sure bug try though", "d": "5/2018"}, {"body": "thank add option maints would work", "d": "5/2018"}, {"body": "please give reproduction least exact template exact output output expect thanks", "d": "5/2018"}, {"body": "extract string get three unit elements first one meaning attribute tried include xliff output platform let include way would readable make screenshot xliff draw issue", "d": "5/2018"}, {"body": "screenshot xliff output see unit elements meaning attribute location attribute", "d": "5/2018"}, {"body": "sample another issue template one logical string however extracted split three different units localization tool must try parse back logical string might possible sample three units extracted consecutive unit elements however string anywhere app uses string three parts string collision instances mapped together one part located totally different part xliff", "d": "5/2018"}, {"body": "thanks clarification happens message extract string first icu message extract string second icu message extract string placeholders place icu think asking ability add meaningdescriptionid icu messages understanding correct case might opened issue tracking already", "d": "5/2018"}, {"body": "thanks got right", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please open cli issues repo also please respect issue template", "d": "5/2018"}, {"body": "sorry maybe mistake think bug follwe official instructions see people problem use stackoverflow", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information still think bug please file new issue angularangularcli project ensure provide required information filling issue template", "d": "5/2018"}, {"body": "nt understand still issue nt see change test reverted", "d": "5/2018"}, {"body": "jason said chat obsolete", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "duplicate angular issue fixed", "d": "5/2018"}, {"body": "thanks trotyl", "d": "5/2018"}, {"body": "thank trotyl", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "ericmartinezr right angular default check info closing support request", "d": "5/2018"}, {"body": "elaborate bit trying achieve likely use case already covered using different technique", "d": "5/2018"}, {"body": "generic component dynamically instantiates another component based configuration returned via rest request generic component loaded bootstrap time dynamic component part bundle loaded via lazy route like router pagecomponent depending current route make rest call response rest call returns identifier component map component type type known part myappmodule instantiate component type add child", "d": "5/2018"}, {"body": "case inject constructor rather trying get private property route typescript export class pagecomponent implements oninit constructor private componentfactoryresolver componentfactoryresolver", "d": "5/2018"}, {"body": "turns wrong one instance find dynamically loaded components constructor pagecomponent actually looks like typescript constructor afctresolver componentfactoryresolver aactivatedroute activatedroute default super getcomponentfactoryresolver uses private property get correct resolver injected one contain dynamically loaded components note part ngmodule imported application module well dynamically loaded module", "d": "5/2018"}, {"body": "could create thin component lazyloaded module much like injects module thus resolve lazyloaded components delegate new component dynamically instantiating component instead generally write route configuration lazyloaded module instantiate correct component instead instantiating component rest call redirect correct route maybe rest call could return route instead component identifier", "d": "5/2018"}, {"body": "answer second question first different components supposed addressed via different routes business requirement routes need stay stable even though rest call could return different mapping information redirect thin wrapper would principle possible far using approach using common component pagecomponent requires less code less coding effort configuring new lazily loaded routes however showstopper main reason approach work might due lack expertise side tried added route specific wrapper around original page component added component entrycomponents section lazily loaded module used component component router lazy route work development build failed saying wrapper component unknown example router config would look like", "d": "5/2018"}, {"body": "crux problem injected main eagerlyloaded module one would find lazyloaded module thin wrapper solution describing solves delegating component instantiation fairly trivial component lives inside lazyloaded module would expect work like service resides main module fires rest call saves result call uses reroute correct lazyloaded module mapping rest response gt lazyloaded module route lazyloaded module default empty route defined inside lazyloaded module lazyloaded module navigated initialises injects uses saved rest call result held instantiate correct component terms requiring less code define imported lazyloaded modules define still maintain however seems roundabout way things essentially reimplementing maybe reassess design little bit", "d": "5/2018"}, {"body": "thanks issue new rendering layer problem actually goes away needed anymore marked better use interim solution currently getting private property", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "actually intended breaking change see explanation pr rather relying property class set use control value passed validation function way value always uptodate nt rely internal order execution", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "please nt use typescript namespaces necessary since using es modules use code optimizable namespaces compatible treeshaking dead code elimination webpack uglify", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "thanks", "d": "5/2018"}, {"body": "first problem related angularangularcli afaict second problem tracked", "d": "5/2018"}, {"body": "example issue goes promises resolved async probably could get work around moving inside block confirmed settimeout works around promise resolveobservable schedule asyncty", "d": "5/2018"}, {"body": "apparently design since ngprojectas evaluated compile time added dynamically host element resolving", "d": "5/2018"}, {"body": "vladjerca current set property post reproduce repo updated", "d": "5/2018"}, {"body": "jialipassion sadly trying find exactly zone nesting reaches state luck idea happen minute hours consistent repro steps took days find zone reaches state debugging application broke update found manually clamp de value method prevents application locking update looking implementation way figure nesting reaches negative value somehow gets called zone instance seems singleton adds mistery would something like timeline", "d": "5/2018"}, {"body": "vladjerca thank analyze check code code register emitter", "d": "5/2018"}, {"body": "jialipassion yes use initialize object rendering done one small note found application injects attempt stop reaching inconsistent state removed application time seems prevent zone lock occuring sure plugin manager issue although even plugin root cause measures taken order prevent value reach state least informative error thrown", "d": "5/2018"}, {"body": "vladjerca checked code ca nt figure domeventplugin cause error maybe reason reproduce error help lot thanks", "d": "5/2018"}, {"body": "jialipassion said previously using application normal usecases nothing special eg switching routes point happens unable single root cause", "d": "5/2018"}, {"body": "vladjerca know possible provide repo debug", "d": "5/2018"}, {"body": "jialipassion sadly private repository time passed since issue first encountered seems party causing issue since removed application issue nt reoccurred", "d": "5/2018"}, {"body": "vladjerca one right", "d": "5/2018"}, {"body": "jialipassion yes one", "d": "5/2018"}, {"body": "apparently affects linux distros eg gentoo supposed fix author abandonded would like submit pr following suggestions would great", "d": "5/2018"}, {"body": "describing seems exact reason optional meaning fail see extracting different message hard would help meaning disambiguate maybe miss something adding concrete example would like see might help think extracting one thing need replace translations might order", "d": "5/2018"}, {"body": "point developers know two strings need translated different way see translation testing phase case strings mapped single unit nothing except ask developers add meaning extract strings avoid solution ask add meaning attributes cause lots extra work strings instance would extracted unit translator translate different way needed need go back modify source code reextract strings localization tool easily handle strings value basically translate populates instance need translate different way easily done unfortunately explaned case angular used example desktop application use ui resource might string multiple dialogs however share resource string instance string generates resource item pretty much one golden rule localization use resource item multiple context", "d": "5/2018"}, {"body": "one example noticed yesterday one template search criteria label show possible search criteria another template button label search criteria meaning search criteria strings map meaning different need localized different way already use meaning cases like strings already unique meaning difficult generate need modify source reextract", "d": "5/2018"}, {"body": "little bit information id calculated solely based string value meaning value going get collisions multiple string instances matter located way avoid make meaning value unique among strings project difficult hundreds template files several developers working project making sure meaning value unique gets hard recommendation add third parameter id calculation equation addition string value meaning value add location value way collisions string dramatically decrease still use two strings file different meaning easier add meaning need unique among file", "d": "5/2018"}, {"body": "recommendation add third parameter id calculation equation addition string value meaning value add location value could solution however exemple one template search criteria label show possible search criteria another template button label search criteria meaning search criteria strings map meaning different need localized different way let say two search criteria strings translator knows search criteria meaning search criteria ie nt see location improvement particular case great exemple meaning help disambiguate probably missing something", "d": "5/2018"}, {"body": "know context run ui automation take screenshots map string screenshot translator see screenshot strings used screenshot point least two search criteria xliff file translated different way without unique meaning possibility translate different way locations use resource string", "d": "5/2018"}, {"body": "ok got screenshot thanks clarification honest customers talk use different approach whoever write template adds meaning applicable use screenshots marked issue low priority", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "closing", "d": "5/2018"}, {"body": "based error message seems duplicate", "d": "5/2018"}, {"body": "problem seems service worker ignore basehref eg site root service worker always try caches assets plz someone help", "d": "5/2018"}, {"body": "possibly relateddup verify", "d": "5/2018"}, {"body": "tryed set launch nothing changed error still", "d": "5/2018"}, {"body": "cleaned commit chance could put together project angularcli boot", "d": "5/2018"}, {"body": "ilcallo could make stackblitz example would work well", "d": "5/2018"}, {"body": "enum without enum work guess go jit compiler nt know set aot compiler stackblitz first time use", "d": "5/2018"}, {"body": "ilcallo fine recreate locally thank", "d": "5/2018"}, {"body": "relates duplicate", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "swcon tried reproduce problem seems working please take look", "d": "5/2018"}, {"body": "remackgeek thank yes saw cool trouble stand alone web components angular elements without specify custom element name please take look", "d": "5/2018"}, {"body": "please post minimal reproduction eg exact steps follow minimal repo check inspect likely related angularangularcli", "d": "5/2018"}, {"body": "related angularangularcli", "d": "5/2018"}, {"body": "classes set properly look developer tools problem binding creates exception google lot info happens avoid", "d": "5/2018"}, {"body": "yep look like bug error console preventing code executing properly normal execution set right away", "d": "5/2018"}, {"body": "agree bit awkward behavior correct simple see different types rounding behaving js would probably better would also breaking change people relying current behavior may one way fix would document current behavior api docs add optional parameter api pipe kind rounding want would default ie current behavior guys think", "d": "5/2018"}, {"body": "vicb sounds like good solution ensure nonbreaking change would work", "d": "5/2018"}, {"body": "would nice mention rounding docs perhaps provide extra options flooring ceiling etc currently mention number rounded", "d": "5/2018"}, {"body": "would somebody willing submit prs update current api docs able configure kind rounding", "d": "5/2018"}, {"body": "prepare pr could agree notation checked docs noticed formatnumbertolocalestring used percent currency pipes well possible extend behaviour pipes well keep default behaviour", "d": "5/2018"}, {"body": "probably makes sense extend pipes may short proposal agree jumping impl also could someone take care api docs describing current behavior thanks", "d": "5/2018"}, {"body": "take care monday tuesday", "d": "5/2018"}, {"body": "applying hostbindings hostlisteners accessed outside class thus privateprotected", "d": "5/2018"}, {"body": "aha using hostbindings class associated properties new change angular like said build runs fine even aot angular", "d": "5/2018"}, {"body": "nothing changed nt perform typechecking custom build", "d": "5/2018"}, {"body": "ah got changed properties public errors went away thanks sorry bogus bug report", "d": "5/2018"}, {"body": "related", "d": "5/2018"}, {"body": "server includes noopanimationsmodule default events server actually trigger animation describe setup", "d": "5/2018"}, {"body": "dup", "d": "5/2018"}, {"body": "related angular ngpackagr see", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "close issue found problem", "d": "5/2018"}, {"body": "ask question stackoverflow", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "seems ca nt change currency following nt work applies nl de etc", "d": "5/2018"}, {"body": "please provide repro customer using wo pbs suspect something wrong code", "d": "5/2018"}, {"body": "seems general problem apf cc igorminar", "d": "5/2018"}, {"body": "excellent request one many reasons ivy definition attached type make whole factory business obsolete closing wo nt fix fix", "d": "5/2018"}, {"body": "think try changing inside sided polygon whole logo", "d": "5/2018"}, {"body": "sorry concept corner logo lost", "d": "5/2018"}, {"body": "insidexa agree maybe correctly understand concept corner", "d": "5/2018"}, {"body": "sandangel try near future thanks advice", "d": "5/2018"}, {"body": "thanks idea happy existing logo lots communities around angular use desire change time", "d": "5/2018"}, {"body": "hey tristanmarion dont submit pr", "d": "5/2018"}, {"body": "descriptions bit inconsistent eg vs vs vs anyone feels like cleaning welcome submit pr grin cc jenniferfell", "d": "5/2018"}, {"body": "hey jotatoledo could done pr right thanks", "d": "5/2018"}, {"body": "docsareangmodules", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "ask question stackoverflow", "d": "5/2018"}, {"body": "thanks catch would willing send pr fix", "d": "5/2018"}, {"body": "mhevery try review pull request", "d": "5/2018"}, {"body": "please add example stackblitz memory leak also add logging example", "d": "5/2018"}, {"body": "maximedupre hm beginning component instance created guard returns would mean something replaced nothing certainly logical imagine functionality think also matter prioritization actually similar effect using separate route login navigating another route directly guard user nt access already", "d": "5/2018"}, {"body": "splincode ticket describe memory leak mlcmlapis thank proposing alternative would else navigate guard routes display something user logged guard returns true", "d": "5/2018"}, {"body": "think understanding request correctly also think use case supported intended supported currently guards basically tell whether route activated guard returns false going activate anything leave previously activated route give event future api use live observable much finegrained control guards resolvers behave relation components", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "suchetaswabhav show big description real app easy understand first look instead really trivial online sample principle instead using nt think difference spend mins look answer min", "d": "5/2018"}, {"body": "general would probably avoid caching sensitive ie nonpublic data persistent storage way guarantee security said several things need taken account wrt clearing caches clear caches even static public data sounds heavyhanded result subpar experience many scenarios clearing specific caches involved errorprone reliably clearing correct caches would involve keeping track older versions client used since login clear context manifest version uses different cache instances sw able cope caches suddenly wiped might already able cope needs explcitly verified meantime seems shared main page sw scripts might try clearing caches caches names prefixed", "d": "5/2018"}, {"body": "understand website request user login vast majority online web services handle private date eventually sensitive data nonsensitive data assets means nt use cache website request authenticated think agree kills idea offline usage pwas user sw caching true need clear caches nt think least would need clear caches authenticated queries however say also makes harder implement much probable get errors thus also suggested clearing everything taking close look cache structure see tables separated assetsgroups datagroups mostly suggestion would able clear data groups get expired time time using strategies lru guess must logic clear expired cache entries without issues could reuse somehow rest entries belonging assets would nt needed cleared see find piece code showing interact website sw cache make use prefixes suggest clear relevant ones", "d": "5/2018"}, {"body": "bit research seems service workers expose delete cache entry method however executed service worker thus would need something like following speak angular app sw inform want clear specific cache seeing sw caches work independently angular app guess tested clearing cache nt affect inner logic app two independent logics speak via messages thing inner workings app handle clearing sw user domain seen virtually plain requests api therefore logic nt see change clearing caches sw would request api cache empty angular domain service worker angular service sure coded idea code defined thing nt even cache anything sw would end two caches case saving stuff table names others could force reload fresh restart information clearing sw cache performance nt matter aim clear cache user logging critical point ux requires super fast rection", "d": "5/2018"}, {"body": "sturgelose nt use package use service worker using angular app bit work set get lot control worker communications worker app workbox medium article angular workbox assume spa url could setup listener clear caches etc also clear caches sure behavior clear caches manner worth noting auth session cookie based get creative closing browser clear session cookie caches issues around clearing data workbox", "d": "5/2018"}, {"body": "website request user login handle private date means nt use cache website request authenticated think agree kills idea offline usage pwas user sw caching tradeoff securityprivacy working offline grin way store sensitive data make easily accessible anyone physical access machine without original user manually clearing caches bit research seems service workers expose delete cache entry method however executed service worker josephliccini mentioned also implied used main app directly said might interesting expose service eg would allow interacting caches although ca nt think operation top head eg ts interface swcaches clearall clearallassetgroups clearassetgroup name string clearalldatagroups cleardatagroup name string", "d": "5/2018"}, {"body": "hey trying solutions suggested try workboxsw try clear cache manually see happens try report findings later security issue around nt see problem another user accessing physically mostly user logs still data cache expect user logs logs completely leaving cache filled data generated kept cached case wants access offline mostly cache following user use similar endpoints requests different auth token api cache might return data already logged user also need data anymore user logged need keep cache browser mostly idea bit garbage collection cache log", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "sorry nt understand subject content issue angular worked diverse team people order us able collaborate use common communication language english communication language many us adopted purpose please translate issue english work english speaking community member create issue english thank understanding", "d": "5/2018"}, {"body": "nt issue angular cli set variable angular", "d": "5/2018"}, {"body": "yes right close relates issue cli", "d": "5/2018"}, {"body": "stackblitz uses jitcompiler runtime therefore rigid type checking usage idea run building aotcompiler jitcompiler valid boolean stackblitz ngclass myclass true", "d": "5/2018"}, {"body": "splincode downvote wrong expect syntax checking code highlighting eg visual studio code using idea none workarounds show working far tell believe asking technically impossible reason ca nt fixed soon definitely important use ngclass lot currently syntax highlighting bad references could clear stepbystep familiar different compilers etc", "d": "5/2018"}, {"body": "splincode stackblitz uses jitcompiler runtime stackblitz integrated angular language service", "d": "5/2018"}, {"body": "mean nt expect solved easily expression checked successfully declarations like ngif obviously checked well ngclass ngstyle etc please tell missing think missing something respect", "d": "5/2018"}, {"body": "ask question stackoverflow", "d": "5/2018"}, {"body": "please fill issue template otherwise hard tell issue related local configuration possible bug", "d": "5/2018"}, {"body": "move question stackoverflow", "d": "5/2018"}, {"body": "nt look like demo link working see looks like expected behavior property instances sets default value child control properties control updates always happen child controls updated keep model correct words set set values child controls unless one child controls value would override default updated whenever one child controls updates", "d": "5/2018"}, {"body": "suspect bug result calling elementsetattribute manage set attribute successfully ie please reopen issue code look test use dom apis outside angular", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "related angular ngpackagr issue nt escape text content inlining resources resulting typescript import component oninit angularcore component selector libgraveaccentexample template hello world styles export class graveaccentexamplecomponent implements oninit constructor ngoninit invalid typescript syntax ref cc dherges", "d": "5/2018"}, {"body": "thanks analysis trotyl could please create issue ngpackagr project", "d": "5/2018"}, {"body": "yes make issue expected escape sequence", "d": "5/2018"}, {"body": "dherges think escaping would enough", "d": "5/2018"}, {"body": "closing action angular", "d": "5/2018"}, {"body": "serious", "d": "5/2018"}, {"body": "djleonskennedy yes something request", "d": "5/2018"}, {"body": "bad idea imo", "d": "5/2018"}, {"body": "jotatoledo see feel approach better allows options developer", "d": "5/2018"}, {"body": "thanks request thought well api done right could quite useful", "d": "5/2018"}, {"body": "nt see real benefit nt redirect right route guard return false stop current navigation", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "yep duplicate thnx trotyl", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "oh sorry posted stackoverflow", "d": "5/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked victorlevasseur thanks issue sounds like something might need look could also related firefox looks like browser listing one closed nt mean nt issue create stackblitz showing problem would great create new issue", "d": "5/2018"}, {"body": "alagane could please provide repro asked issue template", "d": "5/2018"}, {"body": "vicb best way create new project minimum dependencies tests reproduce bug run tests tools like stackblitz since needs chrome nt know best way show behavior chrome", "d": "5/2018"}, {"body": "alagane either create stackblitz project shows issue repo thaty check along necessary steps build run code generally easier us work stackblitz project cases make sure include minimal amount code including libraries packages etc necessary reproduce problem want take stub creating stackblitz project tests use one provided testing guide starting point btw find weird stopped working tests since afaik refers raw dom node", "d": "5/2018"}, {"body": "ca nt reproduce tried dependencies must specific project close issue thank help", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "sure expected nt large ngfor", "d": "5/2018"}, {"body": "styling tab different background colour hovered makes sense fact material design spec explicitly calls also think lack tabbiness code examples tabs nt feel like connect content would consider putting code examples card tabs filling across top tab would make feel connected tablike", "d": "5/2018"}, {"body": "also material design guidelines discourage long tab names consider including path example file tab", "d": "5/2018"}, {"body": "want make tabs blue like headed code blocks make headed code blocks similar tabs might tempted former would require designing accommodate various states tab labels take eg active inactive hovered disabled etc", "d": "5/2018"}, {"body": "note styled tabs inside material design card perhaps direction taking code blocks buying md approach", "d": "5/2018"}, {"body": "probably make sense move toward md approach think makes sense design tabbed one first variants mention make single file one look like selected tab fwiw like headed", "d": "5/2018"}, {"body": "btw blue background black text style current style focused tab labels", "d": "5/2018"}, {"body": "note angular material defining grey background colour set deep inside theming part sass code library talk someone jelbourn choice colour best override", "d": "5/2018"}, {"body": "also according spec color theme creation gt background color appears behind scrollable content baseline background surface color ffffff", "d": "5/2018"}, {"body": "gkalpak said color defined material design specification text somewhere site meeting guidelines tool tell pretty easily", "d": "5/2018"}, {"body": "checked current colors meet aaa size text", "d": "5/2018"}, {"body": "um jelbourn think gkalpak saying background surface baseline colours white note matcard backgrounds fact white", "d": "5/2018"}, {"body": "ah looks like changed update preio version app background pure white reserved sheets material like cards dialogs", "d": "5/2018"}, {"body": "surprised technically meets accessibility standards every site worked gray nt stop readers complaining text blurs background little wanted higher contrast option understand point jelbourn light gray background makes sense cards elements want offset idea see pops nicely tricky part textrich site want main body readable possible reason cards white background gkalpak pointed another thread white background whole page lose ability offset code regions images white cardlike boxes sure however elements much important main text deserve special offset way navigation cards offset definitely would nt want offset code images giving darker background main page definitely moves us readability challenges hmmm", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "please add repository add infromation repro steps", "d": "5/2018"}, {"body": "sorry splincode beginner github nt know post question following update steps described link want upgrade project angular angular dependencies packagejson file looks like update", "d": "5/2018"}, {"body": "dalloglio could make github repo failing project investigate", "d": "5/2018"}, {"body": "matsko project working private another way solve problem", "d": "5/2018"}, {"body": "problem solved applied alternative described", "d": "5/2018"}, {"body": "angular compiler needs aware code template going wrapped tag another component using ngtemplate others words regression filipesilva nt think possible determine compiler reference passed around runtime inserted place determined runtime nt think statically analyse answer types questions compile time btw would call deliberate breaking change rather regression", "d": "5/2018"}, {"body": "brianpilati see brianpilati original issue author", "d": "5/2018"}, {"body": "minimal reproduce scenario filipesilva brianpilati mistaken stackblitz reproduces usecase case afraid ca nt know compile time given template going inserted nt think fix would suggest following using attribute element formattingsensitive code switching whitespace preserving globally find default behaviour agressive info might revisit heuristics used compiler probably wo nt help specific case going close issue ca nt fix particular case compiler side try make less surprising users", "d": "5/2018"}, {"body": "jenniferfell sadly github nt allow issue deletion right creator close issue self believe", "d": "5/2018"}, {"body": "playing something could nt get issue reset default template prompts could cancel creation issue gave obvious subject could come back get rid", "d": "5/2018"}, {"body": "something user configuring project angular declare depends wo nt fix", "d": "5/2018"}, {"body": "yeah bug end things w new changes get fix circle back", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please report issue repo library using", "d": "5/2018"}, {"body": "opened", "d": "5/2018"}, {"body": "pkozlowskiopensource ok thanks suggestion", "d": "5/2018"}, {"body": "duplicate stephenfluinangularupdateguide cc stephenfluin", "d": "5/2018"}, {"body": "since morning update chrome week ago weird previous build use work days ago work aot", "d": "5/2018"}, {"body": "found augury working disable plugin", "d": "5/2018"}, {"body": "found issue lazy loaded module im gona try disable augury yes augury broke thx", "d": "5/2018"}, {"body": "yes disabled augury works thanks", "d": "5/2018"}, {"body": "issue lazy loaded modules fail ca nt resolve parameters error fix turn augury plugin chrome thanks getting endless rabbit hole tinkering importsexports", "d": "5/2018"}, {"body": "thanks krakentyio nt think try firefox clue needed", "d": "5/2018"}, {"body": "krakentyio trying replicate issue lazy module seems load fine even didependent services providing services dependencies question", "d": "5/2018"}, {"body": "thanks krakentyio life saver worked latest edge chrome searched syntaxerror found thread", "d": "5/2018"}, {"body": "thank quite morning", "d": "5/2018"}, {"body": "please revisit options section error clearly states option", "d": "5/2018"}, {"body": "guide shows add configuration angular cli internationalization usage angular cli", "d": "5/2018"}, {"body": "could please add working reproduction issue", "d": "5/2018"}, {"body": "think angular problem specially update project test", "d": "5/2018"}, {"body": "working fine", "d": "5/2018"}, {"body": "hello managed reproduce problem however already fixed problem angular imported german date format using wildcard removing wildcard fixed problem think breaking change coming latest systemjs typescript version angular project trotyl giving thumb without writing comment help thanks fast replies maybe post help people future best junus", "d": "5/2018"}, {"body": "closing fixed thanks reporting solution might indeed help people", "d": "5/2018"}, {"body": "issue angular", "d": "5/2018"}, {"body": "thats jqueryish support requests use channels like stackoverflow gitter please dont use issue tracker kind issues", "d": "5/2018"}, {"body": "jotatoledo know said actually using angular typescript performance improved prosime given angular still need handle global boject reference", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "shenbing would like try make pr", "d": "5/2018"}, {"body": "would like submit pr fix spacing issue", "d": "5/2018"}, {"body": "help need help file pr", "d": "5/2018"}, {"body": "uh sure lol might done sure right", "d": "5/2018"}, {"body": "saw abandoned pr lot beginning still still interested working happy support step way team put together wiki might help thanks offer help", "d": "5/2018"}, {"body": "description sounds like error nt", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "please remove guide instead please add warning top setting webpack manually normally recommended though possible support us need anyway update guide explain manually set webpack angular one many developers working projects incompatible current version angular cli latest problem cli incompatible multiple npm recent series problems using cli us updating webpack guide solve two problems short run enable us use angular right first wait cli fix incompatibilities long run increase confidence able use angular long term therefore increase willingness use angular new projects recommend others providing insurance protection case future incompatibilities arise cli one things love angular way balances highly opinionated stopping short dictatorial example angular strongly recommends using typescript however specific developer wants ignore write plain nt recommended allowed updating guide would continue excellent tradition recommending cli also allow using plain webpack needed angular cli never struck balance well acted dictatorially multiple times especially repeatedly blocking users configuring webpack problem guide would provide permanent alternate solution", "d": "5/2018"}, {"body": "kinda disagree dschnelldavis reason angular cli introduces concept builders allow developers plug build system way developers change webpack config need thing api nt stable yet coming", "d": "5/2018"}, {"body": "see future please take howto questions gitter", "d": "5/2018"}, {"body": "tracked handling wrappedvalue look generated code unwrapping value returned async pipe observable ok also assumes value passed binding side effect emits new object async pipe return work force update eg unwrap new value wrap old value binding check end binding property updated either object holding property changes", "d": "5/2018"}, {"body": "ghetolay updated blitz property binding makes statement end binding name property updated either name object holding property changes entirely correct understood correctly", "d": "5/2018"}, {"body": "jotatoledo object reference key impossible suppose angular would check deep structure object find something changed performance point view still suppose behavior cases still use immutable principle updating object string number primitive values binding point view", "d": "5/2018"}, {"body": "jotatoledo made stackblitz explain better checked get update child component expected behavior get update new name set matter object mutated new one new value impact precisely show impact", "d": "5/2018"}, {"body": "ghetolay maybe good also mention child updated real change value would also mean possible use strategy child new object reference update previous comment bit misleading nt realize whole context related primitive data types finally syntax would really mean cd run value property changed work without setting child component", "d": "5/2018"}, {"body": "mostly works get triggered often new object property emitted stackblitz means new object", "d": "5/2018"}, {"body": "closing working intended", "d": "5/2018"}, {"body": "mhevery hey misko would mind giving explanations correct behavior always thought input properties stream emits triggers cd whenever new value flows matter value comes help would greatly appreciated", "d": "5/2018"}, {"body": "exact issue angular worked fine seems like install upgraded nodejs npm", "d": "5/2018"}, {"body": "problem angular version tooling issues node version npm version platform windows downgraded npm error", "d": "5/2018"}, {"body": "tried installing angular package errors even related packages corruption removing dependencies makes run without errors seems like packages corrupted ca nt install project colleague right like copy folders", "d": "5/2018"}, {"body": "problem angular version node npm platform centos ca nt install project", "d": "5/2018"}, {"body": "anybody check yarn behavior", "d": "5/2018"}, {"body": "behavior checking yarn", "d": "5/2018"}, {"body": "also npm node", "d": "5/2018"}, {"body": "yarn working fine", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "anyone affected issue please add information local env node v npm v", "d": "5/2018"}, {"body": "lol", "d": "5/2018"}, {"body": "node npm", "d": "5/2018"}, {"body": "node npm issue", "d": "5/2018"}, {"body": "problem", "d": "5/2018"}, {"body": "issue try install clr packages angular project node v npm v maybe issue issent related angular", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "angular macos", "d": "5/2018"}, {"body": "samonia using package one installed packages install fine well issue happens packages", "d": "5/2018"}, {"body": "node npm", "d": "5/2018"}, {"body": "node npm", "d": "5/2018"}, {"body": "error angular", "d": "5/2018"}, {"body": "error node npm", "d": "5/2018"}, {"body": "facing tarball error node npm", "d": "5/2018"}, {"body": "installed yarn tried installing project luck gets stuck awfully long packages exits", "d": "5/2018"}, {"body": "exactly error angular cli node npm", "d": "5/2018"}, {"body": "common factor seems npm could anyone try downgrade npm", "d": "5/2018"}, {"body": "hitomitenshi working windows linux asking think problem originate something else angular everything working yesterday npm err operation rejected operating system npm err possible file already use text editor antivirus npm err lack permissions access tried following commands resolve issue npm cache verify npm cache clean force", "d": "5/2018"}, {"body": "literally hitomitenshi yarn working either also built linux subsystem windows machine using npm got issue", "d": "5/2018"}, {"body": "jotatoledo yes tried downgrading npm still", "d": "5/2018"}, {"body": "jotatoledo tried downgrading always problem", "d": "5/2018"}, {"body": "tried installation npm nt work upgraded npm luck either node", "d": "5/2018"}, {"body": "yarn network connection ok try indefinitely", "d": "5/2018"}, {"body": "problem tried every thing nothing works", "d": "5/2018"}, {"body": "lamstutz get exact error yarn", "d": "5/2018"}, {"body": "one hour ago working", "d": "5/2018"}, {"body": "errors local env aws codebuild local mac node npm aws codebuild node npm", "d": "5/2018"}, {"body": "getting errors different library first one packagejson seems npm issue", "d": "5/2018"}, {"body": "samonia issue description clearly states using windows problem seems affect every platform though", "d": "5/2018"}, {"body": "tried yarn complains nonmatching integrity hashes like npm", "d": "5/2018"}, {"body": "even allowing npm install g angularcli sure npm issue", "d": "5/2018"}, {"body": "issue going solutions", "d": "5/2018"}, {"body": "issue angular cli node os darwin", "d": "5/2018"}, {"body": "trying install yarn new project partial output ng v angular cli node os angular", "d": "5/2018"}, {"body": "problem node npm angular cli", "d": "5/2018"}, {"body": "yarn working either yarn install info lockfile found resolving packages angularcommon one package resolved infinte resolving issue", "d": "5/2018"}, {"body": "someone issue linux mac turn windows real time protection npm error change npm err unexpected end json input parsing near definition updates windows defender antivirus definition successfully installed", "d": "5/2018"}, {"body": "posted tweet angular team", "d": "5/2018"}, {"body": "samonia yes", "d": "5/2018"}, {"body": "samonia using mac way using npm yarn os issue", "d": "5/2018"}, {"body": "samonia issue also present mac", "d": "5/2018"}, {"body": "trying install angular packages versions node npm os macos high sierra tried various versions node npm morning without success", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "affected list thought something project stopped working using ionic cant even create new projects anymore seems like angular issue though", "d": "5/2018"}, {"body": "issue thought something node version finally found topic", "d": "5/2018"}, {"body": "node npm os windows", "d": "5/2018"}, {"body": "node npm os ubuntu", "d": "5/2018"}, {"body": "issue node npm os linux mint", "d": "5/2018"}, {"body": "angular cli node os darwin", "d": "5/2018"}, {"body": "issue node npm os macos high sierra", "d": "5/2018"}, {"body": "error fetch succeeded undefined however extracting resulted hash match requested hash yarn node angular using vsts build", "d": "5/2018"}, {"body": "angular cli node os linux angular animations cdk cli common compiler compilercli core forms languageservice material platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack npm outdated package current wanted latest location angularanimations armanalyticsspb angularcdk armanalyticsspb angularcommon armanalyticsspb angularcompiler armanalyticsspb angularcompilercli armanalyticsspb angularcore armanalyticsspb angularforms armanalyticsspb angularhttp armanalyticsspb angularlanguageservice armanalyticsspb angularmaterial armanalyticsspb angularplatformbrowser armanalyticsspb angularplatformbrowserdynamic armanalyticsspb angularrouter armanalyticsspb typesnode armanalyticsspb codelyzer armanalyticsspb jasminecore armanalyticsspb karma armanalyticsspb karmajasminehtmlreporter armanalyticsspb sourcemapsupport armanalyticsspb tslint armanalyticsspb typescript armanalyticsspb npm update npm warn tarball tarball data angularcompilercli seems corrupted trying one time npm warn tarball tarball data angularcore seems corrupted trying one time npm warn tarball tarball data angularanimations seems corrupted trying one time npm warn tarball tarball data angularrouter seems corrupted trying one time npm warn tarball tarball data angularmaterial seems corrupted trying one time npm warn tarball tarball data angularcore seems corrupted trying one time npm warn mapboxmapboxgllanguage requires peer mapboxgl none installed must install peer dependencies npm warn ngtoolswebpack requires peer typescript none installed must install peer dependencies npm warn ngxmapboxgl requires peer rxjs none installed must install peer dependencies npm warn angularcompilercli requires peer typescript gt lt none installed must install peer dependencies npm warn tsickle requires peer typescript gt lt none installed must install peer dependencies npm err code eintegrity npm err verification failed extracting angularcore npm err verification failed extracting angularcore npm err integrity checksum failed using wanted got bytes npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tarball tarball data angularlanguageservice seems corrupted trying one time npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tarball tarball data angularcompilercli seems corrupted trying one time npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tarball tarball data angularcommon seems corrupted trying one time npm warn tarball tarball data angularanimations seems corrupted trying one time npm warn tarball tarball data angularlanguageservice seems corrupted trying one time npm warn tarball tarball data angularforms seems corrupted trying one time npm warn tarball tarball data angularcdk seems corrupted trying one time npm warn tarball tarball data angularcompiler seems corrupted trying one time npm warn tarball tarball data angularcompiler seems corrupted trying one time npm warn tarball tarball data angularcommon seems corrupted trying one time npm warn tarball tarball data angularforms seems corrupted trying one time npm warn tarball tarball data angularcdk seems corrupted trying one time npm update npm warn tarball tarball data angularcompilercli seems corrupted trying one time npm warn tarball tarball data angularcore seems corrupted trying one time npm warn tarball tarball data angularanimations seems corrupted trying one time npm warn tarball tarball data angularrouter seems corrupted trying one time npm warn tarball tarball data angularmaterial seems corrupted trying one time npm warn tarball tarball data angularcore seems corrupted trying one time npm warn mapboxmapboxgllanguage requires peer mapboxgl none installed must install peer dependencies npm warn ngtoolswebpack requires peer typescript none installed must install peer dependencies npm warn ngxmapboxgl requires peer rxjs none installed must install peer dependencies npm warn angularcompilercli requires peer typescript gt lt none installed must install peer dependencies npm warn tsickle requires peer typescript gt lt none installed must install peer dependencies npm err code eintegrity npm err verification failed extracting angularcore npm err verification failed extracting angularcore npm err integrity checksum failed using wanted got bytes npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tarball tarball data angularlanguageservice seems corrupted trying one time npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tarball tarball data angularcompilercli seems corrupted trying one time npm warn tar enoent file directory open homesergiuworkspacesarmanalyticsspbnodemodulesstaging npm warn tarball tarball data angularcommon seems corrupted trying one time npm warn tarball tarball data angularanimations seems corrupted trying one time npm warn tarball tarball data angularlanguageservice seems corrupted trying one time npm warn tarball tarball data angularforms seems corrupted trying one time npm warn tarball tarball data angularcdk seems corrupted trying one time npm warn tarball tarball data angularcompiler seems corrupted trying one time npm warn tarball tarball data angularcompiler seems corrupted trying one time npm warn tarball tarball data angularcommon seems corrupted trying one time npm warn tarball tarball data angularforms seems corrupted trying one time npm warn tarball tarball data angularcdk seems corrupted trying one time", "d": "5/2018"}, {"body": "issue node npm os windows", "d": "5/2018"}, {"body": "node npm yarn os ubuntu", "d": "5/2018"}, {"body": "issue node npm os macos high sierra", "d": "5/2018"}, {"body": "node npm os ubuntu", "d": "5/2018"}, {"body": "npm node angular cli", "d": "5/2018"}, {"body": "os centos", "d": "5/2018"}, {"body": "node npm os macos", "d": "5/2018"}, {"body": "looks network issue getting behaviour like lamstutz error network error resume note keep ticket clear saying time looks massive issue", "d": "5/2018"}, {"body": "fact get behaviour angular pacakges angular", "d": "5/2018"}, {"body": "news twitter account", "d": "5/2018"}, {"body": "something happened angular packages npmjs registry side", "d": "5/2018"}, {"body": "npm install started working local machine started use vpn usa east cost problems vpn connection finland issue remains amazon aws codebuilds ireland", "d": "5/2018"}, {"body": "whole internet broke completely doomed", "d": "5/2018"}, {"body": "issue south africa", "d": "5/2018"}, {"body": "southern england", "d": "5/2018"}, {"body": "germany", "d": "5/2018"}, {"body": "log says npm warn tarball tarball data angularcompiler seems corrupted trying one time npm warn tarball tarball data ngxtranslatecore seems corrupted trying one time npm warn tar enoent file directory open c userssourcereposprojectwebnodemodulesstaging npm warn tarball tarball data angularcore seems corrupted trying one time npm warn tarball tarball data angularrouter seems corrupted trying one time npm warn tarball tarball data angularcommon seems corrupted trying one time npm warn tarball tarball data angularcommon seems corrupted trying one time npm warn tarball tarball data angularanimations seems corrupted trying one time npm warn babywatcherweb description npm warn babywatcherweb repository field npm warn babywatcherweb license field npm err path c userssourcereposprojectwebnodemodulesstaging ngxtranslatecorejs npm err code eperm npm err errno npm err syscall unlink npm err error eperm operation permitted unlink c userssourcereposprojectwebnodemodulesstaging ngxtranslatecorejs npm err error eperm operation permitted unlink c userssourcereposprojectwebnodemodulesstaging ngxtranslatecorejs npm err cause npm err error eperm operation permitted unlink c userssourcereposprojectwebnodemodulesstaging ngxtranslatecorejs npm err errno npm err code eperm npm err syscall unlink npm err path c userssourcereposprojectwebnodemodulesstaging ngxtranslatecorejs npm err stack error eperm operation permitted unlink c userssourcereposprojectwebnodemodulesstaging ngxtranslatecorejs npm err errno npm err code eperm npm err syscall unlink npm err path c userssourcereposprojectwebnodemodulesstaging ngxtranslatecorejs npm err parent babywatcherweb npm err npm err operation rejected operating system npm err possible file already use text editor antivirus npm err lack permissions access npm err npm err believe might permissions issue please doublecheck npm err permissions file containing directories try running npm err command rootadministrator though recommended npm warn tarball tarball data angularforms seems corrupted trying one time npm warn tarball tarball data angularcompiler seems corrupted trying one time npm err complete log run found npm err c actually nt notice issue build server started complaining failed build complaining following upgraded npm new version deleted nodemodules folder project starting returned first logs provided downgraded version using tried npm install gives error build server log file gives stacktrace sure complain think angular blame", "d": "5/2018"}, {"body": "ukraine", "d": "5/2018"}, {"body": "poland", "d": "5/2018"}, {"body": "india", "d": "5/2018"}, {"body": "issue disappears connecting american vpn netherlands", "d": "5/2018"}, {"body": "folks saying fix attempting install using different registry let install angular used project directory seems issue anyhow enough let get day", "d": "5/2018"}, {"body": "looks like npm registry issues private repos angular specific seem like angular quite popular frameworkrepo nt seen level response elsewhere thank rabamus great workaround", "d": "5/2018"}, {"body": "yes looks like might network layer corrupting sha sums", "d": "5/2018"}, {"body": "internet broke angular angular broke internet", "d": "5/2018"}, {"body": "rabamus", "d": "5/2018"}, {"body": "genius rabamus", "d": "5/2018"}, {"body": "rabamus locally", "d": "5/2018"}, {"body": "rabamus thanks using works cheers buddy", "d": "5/2018"}, {"body": "anymore guess", "d": "5/2018"}, {"body": "rabamus saddly didnt work fresh cli project", "d": "5/2018"}, {"body": "npm issue angular team uploaded weired", "d": "5/2018"}, {"body": "prozi jotatoledo sure hell going guys able access even browser", "d": "5/2018"}, {"body": "jotatoledo issue retry guess bombarded right lol", "d": "5/2018"}, {"body": "hitomitenshi lol might thank", "d": "5/2018"}, {"body": "ok get downgrade npm use rabamus answer confirmed works", "d": "5/2018"}, {"body": "prozi npm guess happens servers lot stress right retried installing error went fresh cli project", "d": "5/2018"}, {"body": "use different registry ionic starting new project lol", "d": "5/2018"}, {"body": "rabamus access using browser also project works thanks", "d": "5/2018"}, {"body": "rabamus yes able access web netherlands", "d": "5/2018"}, {"body": "saadmomin use skip running npm install automatically run inside project directory afterwards", "d": "5/2018"}, {"body": "experiencing error disappeared know angular npm issue likely get recommend anybody suffering another go", "d": "5/2018"}, {"body": "working correct without anything", "d": "5/2018"}, {"body": "rabamus thanks man try", "d": "5/2018"}, {"body": "registry works even npm", "d": "5/2018"}, {"body": "rabamus solution helped thanks angular cli node os darwin angular", "d": "5/2018"}, {"body": "rabamus prozi hitomitenshi retried two times issue still present yes open registry browser node npm give", "d": "5/2018"}, {"body": "working fine spain", "d": "5/2018"}, {"body": "fixed netherlands", "d": "5/2018"}, {"body": "fixed", "d": "5/2018"}, {"body": "yep working allright angular team mater broke time sillicon valley thanks back work", "d": "5/2018"}, {"body": "working germany jotatoledo try", "d": "5/2018"}, {"body": "fixed spain", "d": "5/2018"}, {"body": "working fine south africa", "d": "5/2018"}, {"body": "hitomitenshi yup problem hat sich selbst gel\u00f6st", "d": "5/2018"}, {"body": "scariest hours", "d": "5/2018"}, {"body": "working fine france", "d": "5/2018"}, {"body": "deleted packages c program filesnodejsnodemodules tried npm install worked", "d": "5/2018"}, {"body": "issue seems resolved closing issue", "d": "5/2018"}, {"body": "work yeat", "d": "5/2018"}, {"body": "reopened rabamus solution definitely workaround confirm worked one time work", "d": "5/2018"}, {"body": "pleerock problem npmjs registry issue nothing angular initially started issue thought angular problem angular packages affected turns npmjs issue private scopes packages start check look twitter nt experience problems right though might regional server problem npmjs side", "d": "5/2018"}, {"body": "yea agree hitomitenshi causing issues nt seem affect everyone access vpns countries sometimes able get around problem absolutely problem angular though purely registry issue", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "relates angular ref", "d": "5/2018"}, {"body": "trotyl saying ca nt build nt polyfills responsible transpile code", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "use babel transpile", "d": "5/2018"}, {"body": "true using angular prefers typescript", "d": "5/2018"}, {"body": "problem want write ts files change get compiling errors like would run bable compile files suggesting", "d": "5/2018"}, {"body": "api required", "d": "5/2018"}, {"body": "okay understand problem thanks clarification", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "pass pure html code using angular bindings available nt angular compiler runtime aot mode nothing could compile bindings js angular compiler", "d": "5/2018"}, {"body": "way dynamically load html template interpreting variables might", "d": "5/2018"}, {"body": "way think always see aot angular app compiled ahead time runtime ways allow get level dynamic functionality today way app using parsing html dynamic instantiation components mix aot app jitcompiler allows really compile templates runtime recommended security performance factors rethink concept trying get fight angular concept", "d": "5/2018"}, {"body": "mlcmlapis angulario uses angular elements take look suitable certain usecases similar general nt expect able load string runtime interpreted processed angular template runtime primarily runtime template compiler longer available due size runtime overhead precompile templates build time lazily load mentioned angular elements likely easiest way", "d": "5/2018"}, {"body": "issue also present edge per linked issue affecting one primary layouts teradata covalent library hence unable upgrade", "d": "5/2018"}, {"body": "set input property wo nt set yet constructor nested form component save directive instead call hook work intended code slide edited fit slide width looks like misleading sorry", "d": "5/2018"}, {"body": "closing favor please follow issue updates", "d": "5/2018"}, {"body": "need export nt think considered bug working intended putting component exports section ngmodule decorator substitute", "d": "5/2018"}, {"body": "ngmodule export compliments es module export order component accessible app need export places working making ngmodules step optional ready yet", "d": "5/2018"}, {"body": "please use channels like stack overflow gitter ask general support dont use issue tracker purpose reasons explained", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "using code also getting error related understand reason behind itfurther nt find support online", "d": "5/2018"}, {"body": "update", "d": "5/2018"}, {"body": "updated using issue seems get complicated throws following error error nodemodules ngrxeffectssrcactionsdts error property lift type actions assignable property base type observable type operator operator gt observable assignable type operator operator gt observable types parameters operator operator incompatible type operator assignable type operator type r assignable type action nodemodules ngrxeffectssrcbootstraplistenerdts error module angularcorecore exported member opaquetoken nodemodules ngrxeffectssrceffectssubscriptiondts error module angularcorecore exported member opaquetoken nodemodules ngrxeffectssrceffectsmoduledts error module angularcorecore exported member opaquetoken nodemodules error module angularcorecore exported member opaquetoken srcappappcomponentspects error find module ngrxstoredevtools srcappappmodulets error find module ngrxstoredevtools", "d": "5/2018"}, {"body": "followed steps got error looking angular internals specifically please see link statement shows us token defined upper however take look generated statement shows token injected variable type lower match right changing worked seems bug angular generator tried find angular cli generated able find someone knows would pleased know meanwhile change work good night", "d": "5/2018"}, {"body": "object capital nt know think problem generator code generated typescript however recommends use lowercase object perhaps changed", "d": "5/2018"}, {"body": "owww nevermind yes right code generated mentioned typescript recommends using agree would suggest option correction previously said code could improved changing angular token token specification instead sure sideeffect thanks", "d": "5/2018"}, {"body": "danielelidio problem code refer contains reference object generated generated code import component oninit angularcore component selector libtestlib template styles export class testlibcomponent implements oninit constructor ngoninit reference object injection token step change testlibcomponentts import component oninit inject platformid angularcore component selector libtestlib template styles export class testlibcomponent implements oninit public x object constructor inject platformid appid object thisx appid ngoninit", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "would strongly suggest using namespaces holdover days scripts simply concatted together thus ordering defined whereas modern web applications typically use es modules concatted order see specifically using directly added benefit able remove everything value leads smaller builds dependence script ordering", "d": "5/2018"}, {"body": "robwormald considered namespaces come outside packages recomendation code welcome", "d": "5/2018"}, {"body": "namespaces comes thirdparty package imported nodemodules wo nt processed build optimizer namespaces application either turn optimizations cli nt recommend refactor application use namespaces sure mean recomendation code welcome misunderstood please open new issue describe scenario clearly thank", "d": "5/2018"}, {"body": "thanks good issue unfortunately ca nt changed breaking change people code added milestone nt forget", "d": "5/2018"}, {"body": "related angular", "d": "5/2018"}, {"body": "aware js float numbers rounding applied currencies make currency pipe independent decimal pipe like angularjs", "d": "5/2018"}, {"body": "make currency pipe independent decimal pipe nt depends", "d": "5/2018"}, {"body": "docs digitsinfo see decimalpipe details anyway matter uses hood make decimal operations string formatting rounding freaks business big time", "d": "5/2018"}, {"body": "make decimal operations string formatting create pipe special business logics", "d": "5/2018"}, {"body": "yeah afraid say thing special logic usual expectations working money besides said uniformly using currency filter old angularjs app worked great idea continue use angular", "d": "5/2018"}, {"body": "create pipe special business logics angular expose api get locale data numbers formatted like decimal separators groups separators otherwise programmer must duplicate number formatting special business logic literally called currency pipe common knowledge use floating point numbers money", "d": "5/2018"}, {"body": "funny thing actually works string representation problem ultimately first converts string number back string far see least", "d": "5/2018"}, {"body": "number formatting special business logic true problem op wants string rounding rather number formatting would someone perform rounding mechanism string directly", "d": "5/2018"}, {"body": "angular expose api get locale data numbers formatted locale apis already exposed much logic reused stringbased operation numeric ones", "d": "5/2018"}, {"body": "op wants string rounding rather number formatting would someone perform rounding mechanism string directly misunderstood nt want rounding currencies string formatted according current locale", "d": "5/2018"}, {"body": "would expect", "d": "5/2018"}, {"body": "would expect explicitly tell want fraction digits expect need rounding arise probably work", "d": "5/2018"}, {"body": "explicitly tell want fraction digits happened explicitly tell want fractions currencypipe able deal fractions", "d": "5/2018"}, {"body": "sorry late editing need like explicitly want fractions string contains number fractions rounding converting number", "d": "5/2018"}, {"body": "trotyl believe wants would someone perform rounding mechanism string directly libraries like bigjs works fine new big round tofixed lt new big round tofixed lt", "d": "5/2018"}, {"body": "dawidgarus know request would definitely break consistency different inputs introduce lots runtime burden", "d": "5/2018"}, {"body": "need robounohito way expecting completely different behavior handled unrelated codes way determine whether string value literal format result given typescript const price getrawstring const priceplusone price currencypipetransform price currencypipetransform priceplusone would everyone expect different ways formatting two values", "d": "5/2018"}, {"body": "way expecting completely different behavior nt think different behavior give result always reason may seem different represent number number rounded different representation number floating point numbers different representation base", "d": "5/2018"}, {"body": "dawidgarus stated currencypipedocumentation uses functions format number currency using locale rules also formatcurrency function typing made clear value think would better stop supporting string input reduce misunderstanding making feature request different pipe handling stringonly values bug anyway", "d": "5/2018"}, {"body": "currency pipe useless us worked nice angularjs could written something formatting string according current locale getlocalenumbersymbol localeid groupdecimal separators ca nt figure get currency symbol position probably much stuff need locale contains much info", "d": "5/2018"}, {"body": "trotyl mentioned currency pipe uses js numbers limitation come way around would include code support arbitrary precision arithmetic would slower payload higher sure something users want update documentation reflect", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "closing favor please follow issue updates", "d": "5/2018"}, {"body": "may want open ticket angular cli repo instead", "d": "5/2018"}, {"body": "yes thanks", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2018"}, {"body": "ref", "d": "5/2018"}, {"body": "noticed", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "facing issue", "d": "5/2018"}, {"body": "sounds like running application jit mode switched aot mode runtime compiler available never available aot mode unless brought please verify bootstrapping application jit mode rather aot mode using angularcli aot mode turned angularjson example", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "exposed information available via also check different filers folder", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "oh looking repo thank ericmartinezr", "d": "5/2018"}, {"body": "wonder stephen repo still official domain today", "d": "5/2018"}, {"body": "docsareaupdate docsareatranslation", "d": "5/2018"}, {"body": "lacolaco plan move angularangular repo future nt happened yet internationalization actually easy focus steps created follow", "d": "5/2018"}, {"body": "open pr solves closing duplicate", "d": "5/2018"}, {"body": "deprecation note definitely need change filename filename needs review filename docsareasetup", "d": "5/2018"}, {"body": "guide currently using angular depends rxjs see migration guide useful also kind dup", "d": "5/2018"}, {"body": "thank feedback ericcarraway thank helping us note confirmed jasonaden correct closing thanks", "d": "5/2018"}, {"body": "looking documentation urlmatcher docs clear looking internal code could realize matcher function must return value portion url consumed provided function angular knows pass nested router remaining portion url checking provided code see function returning whole consumed url angular understands whole url consumed pass nested routere empty array consumed change return portion url used works see const foomatcher url urlsegment gt consolelog url consolelog isroute isroute url foo consolelog isff isfeatureflag showbar return isroute url foo amp amp isfeatureflag showbar consumed new urlsegment url path url parameters null see stackblitz ps internal code marked experimental hope helps", "d": "5/2018"}, {"body": "filename", "d": "5/2018"}, {"body": "chance skipped accidentally skipped step make herodetailcomponent use angular cli generate new component named herodetail ng generate component herodetail command scaffolds herodetailcomponent files declares component appmodule notice pr ampgular submitted change adding appmodulets final review would also indicate current steps example correct need add file final review understand correctly thanks", "d": "5/2018"}, {"body": "chembu get chance please take look addition adding appmodulets final file review see associated pr maybe say bit section linked ng generate component herodetail perhaps show resulting appmodulets file highlight changes", "d": "5/2018"}, {"body": "hello angular html parser strictly follows validator works turns including blocklevel html tags like inside tag nt valid angular nt allow try pasting following html code validator html foo foo", "d": "5/2018"}, {"body": "sstriano nt reserved component keywords could add stackblitzcom link", "d": "5/2018"}, {"body": "specific angular actual html element see prefix component want make sure collision", "d": "5/2018"}, {"body": "vicb thanks ton", "d": "5/2018"}, {"body": "error occurs line nt changed maybe cli code generates ie converts js object less forgiving case sounds like using without specifying array correct since required property see guide info", "d": "5/2018"}, {"body": "issue also mentioned", "d": "5/2018"}, {"body": "see", "d": "5/2018"}, {"body": "ericmartinezr seems like wont updated", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "problem angular update guide application recommendations summary matches start version end version smart filter ignore specific rule actually", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "doc change made nt think usage ever supported", "d": "5/2018"}, {"body": "guess previous doc version restored suggested use decorator actually works decorator must adapted way github check actually wrote section see bunch people worked pr maybe know wrote ask clarifications", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "ericmartinezr pointed issue nt follow template closing", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "please produce reproduction specific issue closing", "d": "5/2018"}, {"body": "hello please post stackblitz runnable reproduction problem code snippet specify http assume json think may actually misunderstanding feature works check http headers response header determine parse response uses option passed get request example pass going close issue assumption case feel free file another working reproduction make one", "d": "5/2018"}, {"body": "related zonejs point starts failing dropping angular zone thus running change detection bug general elements useful outside angular context rely zonejs instead handle change detection also native dom controls eg nt fire event value changed outside world probably trigger side effect input setter cc andrewseguin investigate root cause nt believe make special affordances zonejs elements api", "d": "5/2018"}, {"body": "remackgeek reworked version", "d": "5/2018"}, {"body": "robwormald think reason set property outside logic call rating items zone guarantee everything make pr correct solution please review", "d": "5/2018"}, {"body": "robwormald created pr fix one another performance issue please check idea ok thank", "d": "5/2018"}, {"body": "jialipassion seems like reasonable idea mhevery might thoughts", "d": "5/2018"}, {"body": "robwormald got thank", "d": "5/2018"}, {"body": "currently reworked version remackgeek use call inside method", "d": "5/2018"}, {"body": "oh see happens unroll level menus items hits width limit results scrollbar", "d": "5/2018"}, {"body": "repro click fundamentals click components amp templates", "d": "5/2018"}, {"body": "actually think really height screen note happens make browser window taller scroll bar goes away make scroll bar appear even menu items closed shortening height screen think weird height setting side nav", "d": "5/2018"}, {"body": "duplicate partly duplicate see info", "d": "5/2018"}, {"body": "dup", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "ericmartinezr igorminar thanks quick responses following nt work setting preservewhitespaces true component decorator worked well", "d": "5/2018"}, {"body": "govjerrybrown also mentioned probably real bug may worth try report", "d": "5/2018"}, {"body": "filename", "d": "5/2018"}, {"body": "fixed via", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "please provide reproduction generally nt mess around function body app code sure could responsible maybe kind odd interaction obvious repro would help", "d": "5/2018"}, {"body": "sure provide detailed reproduction since deals library compilation ca nt figure way get stackblitz however reproduce realistic situation create fresh app enter app directory create library open add following function run note important test building lib running app uses different compilation path local libraries point find function compiled incorrectly following versions distmylibbundlesmylibumdjs distmylibbundlesmylibumdminjs like see effect app runtime need create second app reference packaged output simulating published package npm somebody else using directory containing myapp run open mysecondapp add dependencies run add following add somewhere run take look app note json string page", "d": "5/2018"}, {"body": "could reproduce seems tsickle issue enabled", "d": "5/2018"}, {"body": "good find trotyl looks like might related tsickle issue create specific issue one well file", "d": "5/2018"}, {"body": "filed tsickle issue", "d": "5/2018"}, {"body": "original tsickle issue fixed kind related arrow function emit bit fickle sent pr fix caused source map transformer synthesizing comments way breaks ts emit maybe ts emit also slightly wrong see", "d": "5/2018"}, {"body": "reference icon transparent background appletouch icon added", "d": "5/2018"}, {"body": "configuration go configurations object point browser target build configuration", "d": "5/2018"}, {"body": "brandonroberts thank much help made work nt think documentation bad missed", "d": "5/2018"}, {"body": "might change introduced typescript however expected behavior depending ambient type introduced via types property tsconfig see nt update tsconfig issue go away without extra imports app code", "d": "5/2018"}, {"body": "igorminar nt sufficient specify", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "decision treeshakable spellings acceptable according different sources pick one google dev docs standardize us english us english tends toward dropping e similar words usable customizable executable mirriamwebster us standard dictionary recognize shakeable recognize uk english tends keeps e words like sizeable shareable presumably also shakeable recent years us english uk english becoming flexible spelling words google search engine matches spellings still pick one thanks nudge trotyl", "d": "5/2018"}, {"body": "docs examples update subheading instances including code snippet", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "oops forgotten screenshot added original comment btw tested prior versions online app none work", "d": "5/2018"}, {"body": "thanks chalin ericsimons take look issue", "d": "5/2018"}, {"body": "brandonroberts yes absolutely think teleport serializer displaying console logserrors ie logged data massive cause browser hang circle back confirmed amp fixed", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "initial suspicion correct set max execution time serialization however still noticeable lag maybe clicking crisis center simply due many logs outputted w massive objects arguments solve could drop max execution time fear would cause negative ux slower devices mobileetc ideal option end would cutting number logs coming examplethe size objects passed arguments consolelog would love hear everyone thoughts", "d": "5/2018"}, {"body": "thanks app nt hanging anymore close imho best solution probably drop logging app let brandonroberts et tackle like", "d": "5/2018"}, {"body": "ericsimons turning logging example default seems way go logging router config navigation events showing debugging capabilities", "d": "5/2018"}, {"body": "making much better performance perspective wo nt components already treeshakable case entrycomponents would nt performance gain performance slowdown means require generating extra code normal components making indistinguishable results much bundle size build time", "d": "5/2018"}, {"body": "trotyl first quote talking providersservices complemented entrycomponents quote slowdown nt think component included modules component useimport explicitly nt used would nt included module used lazy loaded modules would included initial load similar approach would actually better way import module may included even nt use code would go bundle anyway using component stopped using forgot remove module performance gain would cases tough included used would performance gain quote maintenance would easier wo nt components already treeshakable true even component included entrycomponents used module would nt performance gain case nt see would performance slowdown mind said component used module wo nt included extra code generated would generated anyway even entrycomponents component module importing nt know done internally tough hope approach done providers done components", "d": "5/2018"}, {"body": "slowdown nt think component included modules component useimport explicitly true entry components entry components treeshakable way imported component type corresponding type must registered runtime retrieve via namely always imported others codes would significant slowdown treat every component entry component still need config like providesin similar approach would actually better way import module may included even nt use code would go bundle anyway true totally different things would compiled something perform sideeffects work compiler config results nothing affect compilation process place already treeshakable current way working agree ergonomics part", "d": "5/2018"}, {"body": "fyi continuing conversation get close current ivy implementation", "d": "5/2018"}, {"body": "trotyl atm include components consider better design otherwise component know consumers consider bad design nt know angular internally tough nt know performance degradation could lead expect code define component entrycomponent small compared component say might case take look see removing components array change performance significative way clear want following similar would expect providers lazy loaded modules components respectively components use dynamically via component anything similar build factory code modules components useimport lazy loaded modules use wo nt included initial load chunks respectivelly chunks would factory chunks would nt loaded create dynamically loaded create dynamically without include module feature including components factories modules includes hope possible achieve need import module defined receive error runtime forget", "d": "5/2018"}, {"body": "lucasbasquerotto comments ad supposed reference directly used lazy loaded module tag element template relation route another thing dynamic programmatic way direct reference exists code aware included section true even lazy loaded module programmatically loaded another module components lazy loaded module also programmatically instantiated ca nt direct references really hold modules lazy loaded eagerly loaded direct reference means module loaded immediately ad looks strange duplicate modules also possible actually also seems senseless ad compiler know code wants create dynamically think possible analyse code somehow find component even case everything done programmatically ad reason add component one compiler includes component factories component children used templates related routes module", "d": "5/2018"}, {"body": "lucasbasquerotto ok talking build componentc factory code modules components useimport lazy loaded modules use wo nt included initial load already case today codesplitting works wo nt change fact still need useimport ngmodule declaring component level component factory shipped ngmodule possible way achieve without importing ngmodule import generated factory manually rather import component like chunks lazyloadedmodulea lazyloadedmoduleb respectivelly chunks would componentc factory mainjs chunks would nt nothing related angular build tool example whether something shared would controlled commonschunkplugin splitchunksplugin lazyloadedmodulea loaded componenta create componentc dynamically lazyloadedmoduleb loaded componentb create componentc dynamically without include componentc entrycomponents module possible component module still module another way marking example typescript component entrycomponent true class mycomp ngmodule declarations mycomp class mymodule may look better wo nt actually change anything", "d": "5/2018"}, {"body": "mlcmlapis explanations supposed reference componentc directly used lazy loaded module tag element template relation route used template would using array already nt see allowing include template using route seems angular already includes component nt think would cause conflicts another thing dynamic programmatic way direct reference exists code aware direct reference module would module otherwise component reference could nt imported factory would registered resolver component imported one created unless test providers downloaded example using created following service receive service class somewhere import injectable angularcore injectable providedin root export class testservice also service import injectable angularcore injectable providedin root export class profileservice inside lazy loaded included inside lazy loaded included component export class manageheroescomponent constructor injector injector testservice testservice let service test gt string testservicegetservice included chunk looked js code sending reference agnostic passed able inject service inside even tough module nt direct indirect reference reference defined runtime logs assume code loaded factory defined injector able used modules even modules nt reference compilation service want something along lines possible defining factory resolver code loaded reference passed around even module calls resolver able instantiate looks strange duplicate componentc modules also possible actually also seems senseless possible using use cases especially lots modules dependencies common chunk common chunk huge course pros cons approach nt conflict proposal difference component would common chunk compiler know code wants create componentc dynamically would nt know would register factory anyway resolver based imported chunk common chunk loaded component imported used somewhere cases maybe component reference would used instantiate somewhere nt think would importing log prod build concern case use declarations array use html directly entry component nt know much code boilerplate generated making component entry component case make clear main reason creating feature request avoid runtime errors caused trying create component dynamically using factory resolver nt problems components used template declared array compile time errors running aot jit fine factory registered resolver nt know exactly happens behind scenes component code loaded created anywhere would solve problem plus would productivity gain nt import module anywhere whan want use entry component concern module component declarations tough component dependencies included module would work case maybe enforcing component must included entrycomponents module module would always bundled together component even component imported sure would achieved tough seeing response trotyl optimistic implemented nt know complex would seeing outside think experienced angular works internally consider feature equivalent one important regards make code easier maintain less unexpected runtime errors", "d": "5/2018"}, {"body": "trotyl closed issue seems requests would solve problem someone think different things reopen", "d": "5/2018"}, {"body": "lucasbasquerotto always good review actual design try look another view perspective sure principles would revised relation ivy view engine especially things around probably early go deep many things redesigned stabilized yet also true two things first one compiler directly produces second bundled tool chain bundling process really variable especially use rules default ones cli", "d": "5/2018"}, {"body": "mlcmlapis yes understand thanks explanation hope ivy renderer engine becomes production ready issue solved even way proposed", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "belongs please open", "d": "5/2018"}, {"body": "nice investigation could pr fix", "d": "5/2018"}, {"body": "love give try", "d": "5/2018"}, {"body": "design tooltip provides useful context regarding hovered menu item appears small delay nt appear unless hovering item unsure whether click smiley also tooltip place relative cursors position could move cursor right avoid hiding next item theoretically could use material tooltip would give us options wrt placing styling etc tbh nt think worth extra bytes complexity", "d": "5/2018"}, {"body": "seems due scheduler lacking batch operation going micromacrotasks ticks using could help improve performance", "d": "5/2018"}, {"body": "like trotyl idea may try disable zone patch add following flag load seems work local need add javascript windowzonedisablerequestanimationframe true indexhtml", "d": "5/2018"}, {"body": "reason trigger even inside made pr fix one please check idea correct thank", "d": "5/2018"}, {"body": "cc alxhub vsavkin", "d": "5/2018"}, {"body": "debugged alxhub actually simpler answer change canonical amd module name matches synthetic externalreference create initializing compiler", "d": "5/2018"}, {"body": "done released", "d": "5/2018"}, {"body": "documentation website based angular depend rxjs rxjs deprecates many import paths please make sure visit version documentation upgrade angular take advantages new features", "d": "5/2018"}, {"body": "doh thanks enlightenment", "d": "5/2018"}, {"body": "sorry adding noise searching commondirectives commonpipes similars able get docs although looks like nt commonmodule exports", "d": "5/2018"}, {"body": "ericmartinezr indeed noise p correct constants like actually part public api appear docs let alone search", "d": "5/2018"}, {"body": "cries petebacondarwin delete comments p", "d": "5/2018"}, {"body": "dawidgarus use regardless router programmatic loading lazy loaded modules us functionality", "d": "5/2018"}, {"body": "mlcmlapis may ask nt find reference animations common compiler compilercli core definition used forms platformbrowser platformbrowserdynamic upgrade anyway maybe consider moving name would still allow us use module nt depend except router", "d": "5/2018"}, {"body": "dawidgarus ah comment use code import right tried say code specific angular router module would fine sure moving module importing instead would also mean increasing size bundles nt use router much", "d": "5/2018"}, {"body": "thank issue however consumed router also consumed applications piece core functionality therefore stay", "d": "5/2018"}, {"body": "dawidgarus read arguments problem still ca nt fully understand reason placing router module help especially based principle text path syntax", "d": "5/2018"}, {"body": "jasonaden core functionality import routermodule use core functionality something required framework work extra feature move separate package maybe angularcorefactoryloader something mlcmlapis angularcli issue referenced explained tl dr version module contains prebuild using webpack must build together app use umd bundles angular provides", "d": "5/2018"}, {"body": "dawidgarus questions loc imported use core functionality makes special ca nt prebuild using webpack relation systemjs", "d": "5/2018"}, {"body": "mlcmlapis somehow change module dependencies build include lazy loaded modules obviously build together app special creates webpack", "d": "5/2018"}, {"body": "dawidgarus hmm thanks additional info nt use webpack questions", "d": "5/2018"}, {"body": "problem", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "problem", "d": "5/2018"}, {"body": "meet problem compare final code tutorial need add steps modify angularjson file create file srcmainserverts", "d": "5/2018"}, {"body": "brandonroberts take look", "d": "5/2018"}, {"body": "brendanhenrygithub right able fix build creating file adding server target right lint end looking kinda like change server expects look resources", "d": "5/2018"}, {"body": "correct example zip file necessary files files need exposed guide get fix", "d": "5/2018"}, {"body": "moved", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report please repost issue stackoverflow using tag angular wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2018"}, {"body": "remove relativeto", "d": "5/2018"}, {"body": "based reproduction stackblitz looks like duplicate close issue track updates something different reporting please create new issue clear reproduction instructions reference issue", "d": "5/2018"}, {"body": "defined cldr", "d": "5/2018"}, {"body": "write dates french", "d": "5/2018"}, {"body": "expected type error nothing related angular", "d": "5/2018"}, {"body": "trotyl error got different think fact true problem error message particularly could use type assertion working component file seems impossible template idea get past limitation", "d": "5/2018"}, {"body": "agree better error message seems impossible template using union type viewmodel bad idea skipping error", "d": "5/2018"}, {"body": "wow perfect nt know thank le mer mai \u00e0 trotyl yu notifications githubcom \u00e9crit agree better error message seems impossible template using union type viewmodel bad idea skipping error receiving authored thread reply email directly view github mute thread", "d": "5/2018"}, {"body": "closing works intended", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "ok sorry bothering", "d": "5/2018"}, {"body": "site archive actively maintained also uses different infrastructure current docs sites particular search completely different nt think resources improve stage", "d": "5/2018"}, {"body": "closing unlikely change ok stephenfluin", "d": "5/2018"}, {"body": "lol closed nt feel like fixing sucks actually maintain app mistake called angular love inconvenient tag special sorry inconvenience guys letting know documentation broken", "d": "5/2018"}, {"body": "firstdivision really sorry able maintain site simply resources far aware workaround arguably works better old search anyway first hit exactly page looking", "d": "5/2018"}, {"body": "yes know use google much rather use actual documentation going fix remove search tool instead leaving broken sorry snarky response frustrated job becoming fixing things framework designers change instead actually writing new features kind like always add angularjs select past year option searches search angular get old information fix things upgraded", "d": "5/2018"}, {"body": "apologize exhausted assigned many projects using different technologies able find answers questions fault sure guys position pulled many directions", "d": "5/2018"}, {"body": "firstdivision appreciate honesty openness sorry stressed frustrated hopefully workaround provide option keep moving least", "d": "5/2018"}, {"body": "lucassloan offered take one alxhub please help code reviews thanks", "d": "5/2018"}, {"body": "previous issue could merge link whatever", "d": "5/2018"}, {"body": "bah knew issue already search could nt find deduped issues thanks tue may pm lucas sloan notifications githubcom wrote previous issue could merge link whatever receiving authored thread reply email directly view github mute thread", "d": "5/2018"}, {"body": "nt issue angular check rxjs migration guide", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "toxicable tks help", "d": "5/2018"}, {"body": "hi sample code give repair", "d": "5/2018"}, {"body": "hi updated kindly check thanks", "d": "5/2018"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "5/2018"}, {"body": "error appear", "d": "5/2018"}, {"body": "great msko hevery commented issue humbled huge fan sorry took long get back town created stackblitz sample code hope acceptable link", "d": "5/2018"}, {"body": "hi see stacklitz link click see red box nt know next great reproduction steps would say click notice get x expect z", "d": "5/2018"}, {"body": "please report cli issues repo", "d": "5/2018"}, {"body": "thanks bad somehow brain skipped part cli would responsible", "d": "5/2018"}, {"body": "dup fixed", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "lucasbasquerotto think already new metadata service level angular main sense keep services declaration lazy loaded modules instantiate main app module level singletons loading module", "d": "5/2018"}, {"body": "mlcmlapis seen features angular nt seen tough read understood correctly lazy loaded modules components respectively components use inject service build service code modules componentsservices use lazy loaded modules use wo nt included initial load loaded injected root injector use loaded already loaded use would instance one injected without import module awesome work using injector without including constructor think make test project time see behaviour still ca nt update current project angular due dependencies ionic require angular", "d": "5/2018"}, {"body": "lucasbasquerotto described exactly using yes main point service instantiated root injector rest", "d": "5/2018"}, {"body": "work using injector without including constructor yes", "d": "5/2018"}, {"body": "already implemented", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please report angularcli repo also respect issue template thanks", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "mhevery fully understand reasoning closing issue already deployed apps angular service workers behave faulty example updates stackoverflow need safe way remove service workers next update serviceworker section listed methods remove serviceworkers one work", "d": "5/2018"}, {"body": "aavelyn typo documentation remove would submitting pull request fix docs file needs editing", "d": "5/2018"}, {"body": "kennyrulez see", "d": "5/2018"}, {"body": "skreborn ok thanks pointing closing issue", "d": "5/2018"}, {"body": "issue also refereed angularflexlayout issue", "d": "5/2018"}, {"body": "need open issue since problem flexlayout package track issue flexlayout repo", "d": "5/2018"}, {"body": "working packages versions angularflexlayout npm install save angularanimations angularcdk angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs hammerjs ngxrestangular rxjs zonejs working packages versions angularflexlayout angularanimations angularcdk angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs hammerjs rxjs zonejs devdependencies angularcompilercli typescript angularcli angularlanguageservice codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint good luck", "d": "5/2018"}, {"body": "expected behavior", "d": "5/2018"}, {"body": "thanks quick response found changelog small featurespreservewhitespaces suggestion would point clearly since unlucky circumstances could break layouts updating project", "d": "5/2018"}, {"body": "tried adding wo nt work", "d": "5/2018"}, {"body": "gravityctrl well setting global level tsconfig work igorminar maybe new bug angular cli team sure check already reported gravityctrl set component level work ok ie preserve white spaces", "d": "5/2018"}, {"body": "angular nt effect file consume generated file issue angular cli tool", "d": "5/2018"}, {"body": "technically designed exact emulation browsers nt support shadow dom yet proposed affects nt suspect would big inconsistency issue whatever name used shadow dom got preferred future", "d": "5/2018"}, {"body": "proposed add new viewencapsulation strategy make change viewencapsulationemulated", "d": "5/2018"}, {"body": "meant proposed interop become useless future going main option", "d": "5/2018"}, {"body": "interop totally new strategy looks like emulated could changed", "d": "5/2018"}, {"body": "never designed provide different behaviors apply behavior different environments builtin polyfill polyfill works problem scenario elements created styling nt applies", "d": "5/2018"}, {"body": "different behavior convenience aha", "d": "5/2018"}, {"body": "means nt use encapsulation", "d": "5/2018"}, {"body": "viewencapsulationnone means want speed framework knowing make difference without encapsulation manually set make sure scoping covered convention tools nt mean want component style perform sideeffects seems already got abused many projects", "d": "5/2018"}, {"body": "looks similar issue report", "d": "5/2018"}, {"body": "issue migration angular amp cli", "d": "5/2018"}, {"body": "moved", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation suposed import anything private api", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation maybe someone familiar sharepoint setup like wardbell johnpapa could help answering question stackoverflow thanks", "d": "5/2018"}, {"body": "brachiwernick missed information design works bug runs designed please look presentation ngconf theme", "d": "5/2018"}, {"body": "mlcmlapis see presentation point use still issue html think issue overcome", "d": "5/2018"}, {"body": "brachiwernick hmm try look instantiated possible affect placed reason affect performance cases necessary understand works careful principle instantiated host component instantiated also means angular compiler creates rule related js code compiling code runtime affects behavior later", "d": "5/2018"}, {"body": "design change ngcontent change place component rendered dom tree change component created updated", "d": "5/2018"}, {"body": "ok understood suggestion avoid uneccesary hidden", "d": "5/2018"}, {"body": "brachiwernick fix reproduction link linked new angular project", "d": "5/2018"}, {"body": "sandangel real link", "d": "5/2018"}, {"body": "brachiwernick detect act upon changes angular ca nt wo nt detect called every change detection run immediately ngonchanges ngoninit click button dom event trigger cd angular call ngdocheck every cd impossible make ngdocheck run think rethink way structure components solve bussiness logic look link even use ngif false outer template hello component always created approot component view hence run ngdocheck use ngif false hello tag hello component destroyed removed dom", "d": "5/2018"}, {"body": "brachiwernick also remember hook called parent component child component", "d": "5/2018"}, {"body": "works use ng content", "d": "5/2018"}, {"body": "brachiwernick yep functionality discussed mainly different sense sometimes suitable combine", "d": "5/2018"}, {"body": "works intended", "d": "5/2018"}, {"body": "soon removed per discussion", "d": "5/2018"}, {"body": "think removed updated okay see", "d": "5/2018"}, {"body": "docsareareleaseinfo", "d": "5/2018"}, {"body": "closed pr angular team decided maintain public schedule major releases angular docs keeping uptodate location current thanks", "d": "5/2018"}, {"body": "would mind spending minute explain get error opened live example end services tutorial working fine respect issue template clear thank", "d": "5/2018"}, {"body": "sure ericmartinezr followed steps end services get error using ng serve command", "d": "5/2018"}, {"body": "think missing code typo please checkmatch code live exampledownload link given section think link live example", "d": "5/2018"}, {"body": "copied exact code tutorials case code snippets tutorials match example code angular team working tutorials fix", "d": "5/2018"}, {"body": "exact problem code working example seems identical running locally", "d": "5/2018"}, {"body": "surprised nobody else nt reported issue", "d": "5/2018"}, {"body": "also notice dependencies example completely different version present packagejson code setup based tutorial", "d": "5/2018"}, {"body": "uninstalled angular cli cleared npm cache started works", "d": "5/2018"}, {"body": "command use", "d": "5/2018"}, {"body": "tried using following commands npm uninstall g angularcli npm cache clean npm install g angularcli still error ng serve following code heroservicets injectable providedin root error message error srcappheroservicets error expected arguments got srcappheroesheroescomponentts error expression expected", "d": "5/2018"}, {"body": "commands used create new app clean directory made sure versions current angular cli node os angular animations cli common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack", "d": "5/2018"}, {"body": "thanks tdgrimm suggested fix worked hope team owns tutorial see modifies accordingly", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "works injectable providedin root error resharper resharper disabled compilererror", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "moved", "d": "5/2018"}, {"body": "followed steps end services get error using ng serve command", "d": "5/2018"}, {"body": "seems text tutorial changed works sure seems due version changes newer version rxjs", "d": "5/2018"}, {"body": "hi edwinhendriks fix suggested following post worked", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "seems okay close problem introduced started tutorial version period day angular well tutorial upgraded upgrade well solved issue well really thought issue needed solved therefore reported may way prevent people reporting issues preventing similar issues course leave great angular team", "d": "5/2018"}, {"body": "would need min length nt minlength validator first place", "d": "5/2018"}, {"body": "value min length min length value length reported validation fails really big problem since min length required logic wrong", "d": "5/2018"}, {"body": "nt think related async pipe problem returning new array time therefore recreating list time click item reproduce behavior without async pipe returning array check dom inspector browser click radio group getlistdoesnotwork return id name david id name john id name id name imho expected behavior", "d": "5/2018"}, {"body": "ericmartinezr pointed new array created every time function called change detection old checked radio buttons destroyed created use generally bad idea create new array observable every time change detection triggered", "d": "5/2018"}, {"body": "obviously thanks pointing right direction", "d": "5/2018"}, {"body": "filename docsareatutorial minimally missing dashboardcomponenthtml final review files shown code examples doc final review might also need added", "d": "5/2018"}, {"body": "closing dup", "d": "5/2018"}, {"body": "correct link", "d": "5/2018"}, {"body": "thanks feedback tested tutorial angular version week april seemed work correctly check something may changed broken sufficiently clear thank", "d": "5/2018"}, {"body": "filename docsareatutorial", "d": "5/2018"}, {"body": "please report angularcli issues repo", "d": "5/2018"}, {"body": "oh feared make mistake first angular issue got wrong beginning move", "d": "5/2018"}, {"body": "used fix issue replace seen clientid empty strings instead null", "d": "5/2018"}, {"body": "got exact error already angularcli angular edit niikoo solution side effect browser treat new ngswworkerjs new sw replace old one sure versioning updating done essentially ng build prod generate exact sw time loads different ngswjson", "d": "5/2018"}, {"body": "error chrome version webapp wo nt load everything seems work fine update second deploy ran error unregistered service workers chrome chrome serviceworkerinternals seems work version also nt know problem lies", "d": "5/2018"}, {"body": "workaround get pwa able refresh posted dirand argentan dirand suggested check application stable ngoninit thisapplicationisstablesubscribe gt setinterval gt consolelog ping argentan suggested register service worker maints", "d": "5/2018"}, {"body": "duplicate fix way", "d": "5/2018"}, {"body": "error help", "d": "5/2018"}, {"body": "fix merged ago latest version next release well version using", "d": "5/2018"}, {"body": "kinda managed work around applying innerhtml value", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "closing favor", "d": "5/2018"}, {"body": "change enum work", "d": "5/2018"}, {"body": "minimization behavior related angular", "d": "5/2018"}, {"body": "mhevery related angular package needs fixed resolve issue btw nt happen using ng build aot buildoptimizer options prod option package prod calling extra looks like fix angulardevkitbuildoptimizer resolve issue still happens prod also case manually define enum values reason still get removed numbers", "d": "5/2018"}, {"body": "angular realted mhevery production builds broken", "d": "5/2018"}, {"body": "jimmykane angular cli another project angular toolingindependent angular build optimizer part angular devkit dependency angular cli ok report either angular cli angular devkit related related also problem already fix", "d": "5/2018"}, {"body": "trotyl understand however quite furstrating fixed atm updated deps issue still persists track", "d": "5/2018"}, {"body": "trotyl see", "d": "5/2018"}, {"body": "jimmykane see links since repo related duplicate issues wo nt automatically closed edit ok another problem still relates repo", "d": "5/2018"}, {"body": "trotyl got thanks however understand recently mistaken ag lot changes devs confused post issues", "d": "5/2018"}, {"body": "jimmykane problem angular cli also uses version rather making confused angular version may help upgrading problem tracking", "d": "5/2018"}, {"body": "yes let end found issue cli workaround sorry mess late friday evening production breaks hope understand", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "try using loadchildren like loadchildren xxxxxxmodule firstscreenmodule see commit", "d": "5/2018"}, {"body": "help eric martinez notifications githubcom hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag angular wondering nt resolve support issues via issue tracker please check explanation receiving subscribed thread reply email directly view github mute thread", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation try solutions issue referenced", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation try angularcli repo info", "d": "5/2018"}, {"body": "think report", "d": "5/2018"}, {"body": "provide working stackblitz repro possible understand explanation going wrong", "d": "5/2018"}, {"body": "gioragutt sorry thought would easily reproducible nt created one try chop application demo issue", "d": "5/2018"}, {"body": "fault want details please refer", "d": "5/2018"}, {"body": "similar problems zone runs twice", "d": "5/2018"}, {"body": "biophoton removed polyfills avoid issue example projects exampleangularelmentscomponentbox exampleangularelmentscomponentbutton meant come back add component file wanted run locally exporting consuming", "d": "5/2018"}, {"body": "try load multiple angular elements together within single page anyone exported simply determine error approach uptodate documentation officially utilize export consumable webcomponent would awesome", "d": "5/2018"}, {"body": "managed get multiple components bundled one file running another ng app trying standalone", "d": "5/2018"}, {"body": "biophoton standalone built individually independently one another example work multiple teams could download webcomponent built angular elements dependencies versions build pipeline etc interested consuming built artifact appending also able lazily load webcomponents loading two example application first one works second one introduced app breaks separate files separate builds stepping introduced consumed", "d": "5/2018"}, {"body": "important fix believe especially considering fact angular element webcomponents built published everyone else use wordpress polymer etc look breaking one another appears friendly fire", "d": "5/2018"}, {"body": "skreborn reading bugfeature entries read post pstrh would assume since angular elements creates sandbox bound host element would able use different angular versions like could use framework elements page different elements nt need know code controls others know post january many things changed technically high level imagine would idea box webcomponent module would running button webcomponent introduced visaversa depending webcomponent lazily loaded first", "d": "5/2018"}, {"body": "wonder including polyfills scripts despite whether causing error guess include polyfills per app", "d": "5/2018"}, {"body": "cerated cli based setup standalone angular components excluded polyfills component bundles included main app", "d": "5/2018"}, {"body": "ill try tonight also publish setup npm cli story docs setup nearly done", "d": "5/2018"}, {"body": "gkalpak try excluding plolyfills box button webcomponents rebuild consume see happens biophoton thank greatly appreciate comparing work done excluding polyfills goes along gkalpak direction report back", "d": "5/2018"}, {"body": "gkalpak biophoton following suggestions commented script concats built files like javascript const fs require fsextra const concat require concat async function build const files distscriptsjs distruntimejs distpolyfillsjs distmainjs await fsensuredir elements await concat files elementsexampleangularelementscomponentbuttonjs example components still getting error first component module logging console second component introduced breaks copy paste browser log include screen shots add multiple box webcomponents without issue see box module logged console upon introduction application try load button webcomponent breaking application see box module logged console try add another box webcomponent added also get new error logged console total log see screenshot pasted", "d": "5/2018"}, {"body": "created detailed step step descriptions setup multiple projects elements unfortunately help reproduce bug fix easily adaptable find solution one repo ngelementspoc gkalpak see attached description polyfills included angular elements build setup devkit package available building web components angular use package follow step step setup angular elements running standalone another angular app setup new project create new project run console switch new directory able test running console setup webcomponents run console cli install packages json packagejson dependencies angularelements documentregisterelement add script projects scripts config json angularjson projects ngelementspoc scripts input nodemodulesdocumentregisterelementbuilddocumentregisterelementjs test everything still working setup application standalone web component generate new project test elements setup run console copy script mentioned step project scripts json angularjson projects myfirstelement scripts input nodemodulesdocumentregisterelementbuilddocumentregisterelementjs test setup script start application json packagejson scripts firstelement start ng serve project myfirstelement test running lets create build task use later generate bundled web component file setup script build application note set flag bundles always file names json packagejson scripts firstelement build ng build prod project myfirstelement outputhashingnone run command check file names folder also test bundles directly therefore lets another package install globally run root folder stated console access serve file create component bootstrapping setup new project test standalone web components lets create one create component called set remove appcomponent project delete remove references remove empty settings add typescript projectsmyfirstelementsrcappappmodulets import firstelementcomponent firstelementfirstelementcomponent ngmodule declarations firstelementcomponent imports browsermodule providers bootstrap entrycomponents firstelementcomponent implement bootstrapping logic component projectsmyfirstelementsrcappappmodulets import injector angularcore import createcustomelement ngelementconfig angularelements ngmodule export class appmodule constructor private injector injector ngdobootstrap const config ngelementconfig injector thisinjector const ngelement createcustomelement firstelementcomponent config replace html test web component run also setup new script bundle files use web component another place let introduce script json packagejson firstelement bundlestandalone cat distmyfirstelement runtime polyfills scripts main js gt distmyfirstelementmyfirstelementstandalonejs run console test test web component another angular app setup new script bundle files another angular project json packagejson firstelement bundleng cat distmyfirstelement runtime main js gt distmyfirstelementmyfirstelementngjs run console test copy serve file asset root project root application open add following ngmodule decorator ngmodule declarations appcomponent imports browsermodule providers bootstrap appcomponent schemas customelementsschema insert following code constructor typescript export class appmodule constructor const scripttag document createelement scripttagsetattribute src assetselementsmyfirstelementngjs scripttagsetattribute type textjavascript add html tag html using multiple element bundles one app test test use multiple elements test multiple elements bundle b multiple elements different bundles let start b multiple elements different bundle create new project name following steps setup application standalone web component create component bootstrapping create npm scripts copying files json packagejson firstelement copybundle cat distmyfirstelementmyfirstelementngjs gt srcassetsngelementsmyfirstelementngjs otherelement copybundle cat distmyotherelementmyotherelementngjs gt srcassetsngelementsmyotherelementngjs copybundles npm run firstelement copybundle amp amp npm run otherelement copybundle root application open refactor creation script separate function typescript export class appmodule constructor const bundles myfirstelementng myotherelementng bundles foreach name gt documentbodyappendchild thisgetscripttag name getscripttag filename string htmlelement const scripttag document createelement add html tag html test run following commands", "d": "5/2018"}, {"body": "robwormald ideas", "d": "5/2018"}, {"body": "thank clear reproduction biophoton", "d": "5/2018"}, {"body": "taking closer look demo seems trying use elements standalone angular miniapps example includes bootstrapping likely causing issue afaik supported yet tagging robwormald andrewseguin confirm supported including elements within angular app loads custom element module factories bootstraps sharing main app injector among custom element modules currently angulario btw loader use reference", "d": "5/2018"}, {"body": "thx heads link helpful", "d": "5/2018"}, {"body": "thank gkalpak like described standalone angular miniapps exactly trying consume thought would supported since react wordpress andor website could consume angular elements looking like ca nt support multiple together eg ca nt use firebase example polling webcomponent along simple box webcomponent specifically circumstance includes angular application trying consume webcomponent artifacts teams thirdparties angular application awareness webcomponents could load configuration would lazily load specific webcomponents runtime believe counter angulario registry array routes used hack bundlinglazy loading webcomponents application consume may built angular elements know many teams already developing angular would like package publish components team use excited angular elements promises bring", "d": "5/2018"}, {"body": "clear able run multiple angular elements app angular one usecases aims support fact might primarymost common usecase nt possible first stable implementation tried keep simple focus one simpler usecase definitely something worked near future subjective personal estimation grin", "d": "5/2018"}, {"body": "fundamentally nothing angular precludes challenge packaging bundling well understanding intricacies angular platforminjection system cli currently set nt officially support use case yet know significantly less complex ivy engine already prototyping opted focus use case gkalpak mentioned minimal api use cases support", "d": "5/2018"}, {"body": "robwormald could give details bundling pls bundle problem cli thanks time", "d": "5/2018"}, {"body": "chance look closer today suspected bundling issue root cause webpack drives cli uses runtime global overwriting time load another bundle also defines see cli nt expose option things like supporting use case yet could though nt recommend manually rename global bundle something unique also duplicating polyfills likely cause kinds unexpected results shimming native apis overwriting various times bundling copy angular packages bundle seems suboptimal moment want sort use case likely best option going use something like rollup build umd bundles rely angular umd bundles exclude angular source element package going take manual work alternately nt use cli build individual elements binaries treat libraries bring build properly one webpack runtime working enable use case going close actually issue angular core", "d": "5/2018"}, {"body": "thanks detailed answer robwormald also much looking forward use case supported since issue closed document issue could used track use case suppose keep eye ivy implementation relevant perhaps something else specific use case", "d": "5/2018"}, {"body": "dmitryefimenko mostly special case might also ok create another issue cli devkit", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "sorry searching issues close wait merge", "d": "5/2018"}, {"body": "close one pr coming bug nt merged yet sorry delay meant docs update ready always big rush end", "d": "5/2018"}, {"body": "got resolved angularfireauth signinwithpopup used run outside ngzone need call like thiszonerun gt thisrouternavigate see link", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "docs reflect angular need upgrade follow guide shown", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "alxhub issue uses intercepts tree shakable providers", "d": "5/2018"}, {"body": "mhevery tried modify nt work either something similar issue", "d": "5/2018"}, {"body": "ran one reson seems scenario causes cycle", "d": "5/2018"}, {"body": "discussed alxhub day resolve cycle putting service service module tried works like charm", "d": "5/2018"}, {"body": "yes manfredsteyer also put goodbyeservice root module goodbyeservice well chunk laymodule", "d": "5/2018"}, {"body": "guess intended instantiate app root also required use section", "d": "5/2018"}, {"body": "mlcmlapis right", "d": "5/2018"}, {"body": "manfredsteyer promise treeshakability worth complexity old way providing via nt deprecated depends nt fall tree anyways used within module array transitively used injected edit well fall used type position lazycomponent found mistake parts see concerns proved people try systematically migrate existing code base treeshakable providers using running issues circular deps think topic deserves appendix dependency injection docs citing docs unless special case value always root citing hansl providedin root cases", "d": "5/2018"}, {"body": "see mean imho new api nice thing bc makes default cases easier allows tree shaking also like fact nt need update module anymore advanced use cases need align patterns difficult one needs know written things ran perhaps useful blogged new treeshakable providers api angular cycles", "d": "5/2018"}, {"body": "believe node injector components directives etc nt resolve lazy providers ca nt say look nt work lazy loading likely bug", "d": "5/2018"}, {"body": "manfredsteyer says result circular dependency component service module", "d": "5/2018"}, {"body": "alxhub conclusion nothing could done manfred description way", "d": "5/2018"}, {"body": "think perhaps doc contain example situation alxhub", "d": "5/2018"}, {"body": "mlcmlapis nothing create another keyword like lazy unlike root would prevent injection component like appmodule appcomponent", "d": "5/2018"}, {"body": "wkoza ah course right meant sense code would allow use syntax like", "d": "5/2018"}, {"body": "feel free close issue time intention fixing entered primarily library builders understand consumers libraries getting strange errors build apps production b solve problem relatively quickly eliminating barrels libraries", "d": "5/2018"}, {"body": "trotyl ericmartinezr thumbs definitely issue", "d": "5/2018"}, {"body": "reproduction wrong repo", "d": "5/2018"}, {"body": "reproduction clearly outlined wrong repo angular", "d": "5/2018"}, {"body": "duplicate angular issue", "d": "5/2018"}, {"body": "ok well long someone knows", "d": "5/2018"}, {"body": "solved error git solved", "d": "5/2018"}, {"body": "moved", "d": "5/2018"}, {"body": "solution", "d": "5/2018"}, {"body": "could work would insert hooks array way would able invoke correct time also used guard assignment would leave flag someplace know need assignment", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "original thinking could report property bindings attributes array special value like know actually set attribute dom given support outputs selectors way separating may better clearer", "d": "5/2018"}, {"body": "already need support namespaces like could extend mechanism something like way new array created information runtime would know hit stop creating attributes use information selector matching", "d": "5/2018"}, {"body": "issue logged angular devkit", "d": "5/2018"}, {"body": "duplicate fixed fix master default karma configuration", "d": "5/2018"}, {"body": "think best solution would always return render store object ui stitch back onto worker side mechanism query element provided outside angular committing api trouble would break existing behaviour provided addtarget function extracts properties present could chalk experimental apis changing could apply behaviour mouse events wait till apply breaking change", "d": "5/2018"}, {"body": "angular requires rxjs upgrade rxjs well angular", "d": "5/2018"}, {"body": "use rxjs versions", "d": "5/2018"}, {"body": "add case nt know already", "d": "5/2018"}, {"body": "noticed nt updated yet morning thnx", "d": "5/2018"}, {"body": "ramonschmitt changed domain update app one favs probably old one", "d": "5/2018"}, {"body": "related", "d": "5/2018"}, {"body": "tried fix already weeks ago ran clitypescript issues back cli nt stable yet recall correctly compilation error", "d": "5/2018"}, {"body": "related indeed key part modern tooling beginning deprecate notably webpack webpackwebpack systemimport detection favor standard unexpected follow suit webpack deprecating support specialcase show warning also", "d": "5/2018"}, {"body": "filipesilva could share way silenced warning", "d": "5/2018"}, {"body": "internally", "d": "5/2018"}, {"body": "wow interesting thanks", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "got resolved angularfireauth signinwithpopup used run outside ngzone need call like thiszonerun gt thisrouternavigate see link", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "cli issue created instead", "d": "5/2018"}, {"body": "opened angularcli issue number hence closing", "d": "5/2018"}, {"body": "clearly angular cli issue", "d": "5/2018"}, {"body": "moved", "d": "5/2018"}, {"body": "nt lot issues opened community marking freq setup information", "d": "5/2018"}, {"body": "filipesilva igorminar gkalpak fyi per discussion slack known oversight docs backlog fact mentioned mtg yesterday morning agree issue good idea", "d": "5/2018"}, {"body": "also experienced error upgrading issue looks related path angular service worker config file ngswconfigjson updated using ng update created following path angularjson file changed able build successfully hope helps", "d": "5/2018"}, {"body": "boradakash yeah right folder config fix trick successfully able build", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "docsareaauthorstyle", "d": "5/2018"}, {"body": "correct case lowercase", "d": "5/2018"}, {"body": "work", "d": "5/2018"}, {"body": "dawidgarus interesting idea function allowed usefactory decorator export function use like export function el comp return compelnativeelement export function config comp return compconfig directive selector mydirective providers provide myelement usefactory el deps forwardref gt mydirective provide myconfig usefactory config deps forwardref gt mydirective myservice export class mydirective constructor private myservice myservice public el elementref problem directive dependent service service dependent directive myservice injectable export class myservice constructor inject myelement private el inject myconfig private config myconfig instantiate cyclic dependency specific case myservice mydirective tightly coupled changed injectable service normal class initiate class manually sure case someone wants provide inject outside service directivecomponent service needs properties component guessing many use cases", "d": "5/2018"}, {"body": "assuming need myservice providers could injected directivescomponents maybe help extend myservice mydirective", "d": "5/2018"}, {"body": "since myservice provided mydirective local myservice wo nt available injection directives components right case nt need provide ended since manually initiating nt need myservice injectable suppose myservice provided root like appmodulets could still use new myservice el thisconfig maybe need provide properties inside componentdirective", "d": "5/2018"}, {"body": "closing since services component inputs different lifetimes therefore consistent way inject one services created behavior defined injection tree request injection based runtime values explicitly scope injection implement", "d": "5/2018"}, {"body": "quick check nt see memory leak ca nt reproduce", "d": "5/2018"}, {"body": "rmfranciacastillo tried running times memory leak found", "d": "5/2018"}, {"body": "closing due inactivity lack repro", "d": "5/2018"}, {"body": "idk angular issue rxjs issue javascript issue please file", "d": "5/2018"}, {"body": "teious related js handles context keyword change work fine read scope context", "d": "5/2018"}, {"body": "closing js works", "d": "5/2018"}, {"body": "ouch surprised nt noticed right fix deprecating old selector introducing correct one figuring migration path", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template also sounds party lib issue", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2018"}, {"body": "almost identical problem resolved issue using setvalue set value individual formcontrols formgroup dealing stuffing value string value solution worked past could nt figure problem give try use setvalue set formcontrols", "d": "5/2018"}, {"body": "nt correct config server side related push state config", "d": "5/2018"}, {"body": "please provide demo", "d": "5/2018"}, {"body": "using apache could use mod rewrite purpose issue angular", "d": "5/2018"}, {"body": "issue please redirect ui server requests default page indexhtml please check details please search type queries stackoverflow close issue", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "please provide demo screenshots clear want achieve", "d": "5/2018"}, {"body": "totally seems like logical error yes would great provide demo also try find solutions problems like stackoverflow please check submission guidelines understand ca nt act issues lacking important information", "d": "5/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "5/2018"}, {"body": "please fill template provide details providing details wo nt help anyone understanding issue let alone help solve issue", "d": "5/2018"}, {"body": "sorry forgot update closing one", "d": "5/2018"}, {"body": "issue resolved reason valuechanges method increasing previous one every time every time subscribing value required need set ngoninit second issue giving emitevent false valuechanges called change value otherwise", "d": "5/2018"}, {"body": "ienzam guards might help", "d": "5/2018"}, {"body": "djleonskennedy guards different purpose resolve also think resolve happens guard", "d": "5/2018"}, {"body": "cwspear ca nt see error console", "d": "5/2018"}, {"body": "mlcmlapis sorry forgot paste original link posted updated one mentioned modification updated issue", "d": "5/2018"}, {"body": "looks fine", "d": "5/2018"}, {"body": "indeed issue yesterday seen related errors circleci seems fixed", "d": "5/2018"}, {"body": "pkozlowskiopensource somebody must fixed meantime nt say anything trotyl thanks downvote", "d": "5/2018"}, {"body": "couple examples treeshaking treeshakeable ngcontent", "d": "5/2018"}, {"body": "another question treeshakable treeshakeable word occurrence doc codebase issues nonenglish speaker sure one better strongly believe one used", "d": "5/2018"}, {"body": "wild guess try cleaning browser cache nt issue chrome ff windows fwiw images angulario nextangulario", "d": "5/2018"}, {"body": "ericmartinezr disable get font appear unchecking box makes font readable", "d": "5/2018"}, {"body": "bit better ubuntuchrome still ideal read night regardless issue fails wcag contrast thingy webaim color contrast checker", "d": "5/2018"}, {"body": "also windows looks fine accessibility aside setting color instead help antialiasing", "d": "5/2018"}, {"body": "gkalpak", "d": "5/2018"}, {"body": "macchrome pretty light currently changing footer footer makes look good crossplatform css expert though another fix might work better", "d": "5/2018"}, {"body": "elements check repo", "d": "5/2018"}, {"body": "hijack side question relating bug tried building components helloworld passwordstrength independently consuming one application", "d": "5/2018"}, {"body": "metaceo yes sure week want make video demonstrates follow know post", "d": "5/2018"}, {"body": "following keep eye video demo thank updated bug included screenshots workflow certainly interested know hit similar errors", "d": "5/2018"}, {"body": "values statically analyzable hence value needs known compile time design", "d": "5/2018"}, {"body": "good catch remember discussion petebacondarwin time ago ca nt find understand depressing blog post grin correctly adding script least fix issue might good enough rokerkony could verify solves issue", "d": "5/2018"}, {"body": "gkalpak unfortunately nt fix us depressing post based information guess say smart way achieve want", "d": "5/2018"}, {"body": "still put production least async anymore help people let know tomorrow percentage affected users dropped", "d": "5/2018"}, {"body": "mean wo nt fix", "d": "5/2018"}, {"body": "wrote put prod looked logs unfortunately nt help behaves", "d": "5/2018"}, {"body": "important update able avoid issue prompted write feature request taking advantage router property may render feature request unnecessary recap route requires parameters defined order load correctly one parameters obtained without first making http request api retrieve value first implementation used routes works expected except fact user left states browser history first always redirects forward second route theoretically breaking browser back button user reach state history exists prior routes without forcing browser navigate back states solve issue first instead writing separate routes use redirect default parameter specified routing module like inorder reflect correct url history state browser route initializes default value set like route component following init set start retrieves correct default value via http request navigates along property set route second parameter set correctly like note represents value retrieved api may case one scenario property works solution angular documentation replaceurl", "d": "5/2018"}, {"body": "hello good news locale currency names amp symbols added exact reason", "d": "5/2018"}, {"body": "ca nt solved ones upgrading option add pull request", "d": "5/2018"}, {"body": "changing behavior currency pipe could considered breaking change people expected see suddenly see us instead could also considered fix vicb think backport pr", "d": "5/2018"}, {"body": "cc igorminar manughub ocombe", "d": "5/2018"}, {"body": "nt know pending means still waiting something come back later failure means check see issue case failure make look error message add required label pending", "d": "5/2018"}, {"body": "yes time add required label pr reviewed yet actually correct nt label status red pending exception missing label counts pending maybe considered everything else green green pending missing label counts failing", "d": "5/2018"}, {"body": "apparently something chrome whenever called neither related specific angular", "d": "5/2018"}, {"body": "relates", "d": "5/2018"}, {"body": "trotyl issue evolved discussion animations blocks page load different issue entirely effects effects well", "d": "5/2018"}, {"body": "thanks issue taking look", "d": "5/2018"}, {"body": "ok able get reveal problem tracekit wonderful tool btw prints stacktraces router angular polyfill required", "d": "5/2018"}, {"body": "also clarify angular labs description currently says labs projects must separate repo branch example angularbazel ivy depending feature sometimes put labsunfinished feature behind flag ivy separate undocumented package angularbazel think case bazel might confusing figure way clarify one option would adding readmemd file angularbazel package documents package angular labs project readme would part repo would also show npm package page", "d": "5/2018"}, {"body": "igorminar say identify angular labs projects elements router branches angularangular identified labs links labs branch elements lab blog announcement schematics devkit bazel labs projects announcement nt links agree confusing docs would great clearly answer find find new angular labs projects know project looking labs project doc currently says typically must branch work text includes three practices use today branch flag separate package readmemd sounds like good way identify something labs home repo npm package page", "d": "5/2018"}, {"body": "shadow dom fix timecritical confusing developers many browsers never supported api support angular nt support chrome also deprecated", "d": "5/2018"}, {"body": "mean even angular elements still use shadowdom serious issue one goal elements produce standard web components needs proper shadowdom support", "d": "5/2018"}, {"body": "issue going thing", "d": "5/2018"}, {"body": "cyrilletuzi yes opened issue sarunint likely land probably initial work additive release", "d": "5/2018"}, {"body": "workaround use support angularelements till fix released", "d": "5/2018"}, {"body": "danielnetzer writing neither edge support shadow dom nonissue use", "d": "5/2018"}, {"body": "robwormald hi may ask questions means use angular element production yet angular team release version compatible shadow dom proposed fix content projection seems like big breaking change replace ngcontent contentchild contentchildren ngslot slotchild slotchildren update hopefully command could job", "d": "5/2018"}, {"body": "sandangel angular element wrapper normal angular dynamic component without special runtime behavior angular components using default angular elements clear angular elements care custom elements shadow dom template tag html import", "d": "5/2018"}, {"body": "trotyl hi thanks answer think different angular element use emulated default since put anywhere safer use viewencapsulationnative instead situation moving shadow introduce breaking change like change viewencapsulationshadowdom closedshadowdom", "d": "5/2018"}, {"body": "sandangel wo nt suggest given emulation process angular mainly compilerbased rather using runtime polyfills little effect final size still many browsers supports none shadow dom eg ie edge mixing components may sometimes break encapsulation like also bad performance copying styles everywhere make interop work libs likely use sure migration path breaking changes valid api usage follow angular deprecation policy providing least twomajorversion deprecation stage robwormald also cover supported shadow dom", "d": "5/2018"}, {"body": "trotyl thanks updated", "d": "5/2018"}, {"body": "existing issue encompasses minmax validation case closing dupe", "d": "5/2018"}, {"body": "controlled angular javascript bundler eg webpack using angular cli", "d": "5/2018"}, {"body": "trotyl sure accurate using angular cli indeed documentation states angular provides builtin module loader supports systemjs load modules asynchronously using another bundling tool webpack would use webpack mechanism asynchronously loading modules customize webpack config give indication could override default accept header could nt find reference", "d": "5/2018"}, {"body": "ok see mean since added script tags control accept header gets sent thank", "d": "5/2018"}, {"body": "steps reproduce environment im able see issue chrome", "d": "5/2018"}, {"body": "strange reproduce either", "d": "5/2018"}, {"body": "noticed mistake go directly menu closed error remains", "d": "5/2018"}, {"body": "cc andrewseguin robwormald", "d": "5/2018"}, {"body": "stephenfluin talked hans done automatically done cli adding package using pr readymerged today", "d": "5/2018"}, {"body": "pr fix issue", "d": "5/2018"}, {"body": "associated pr closed closing issue", "d": "5/2018"}, {"body": "automatic scrolling indeed unexpected look regarding making visible discoverable contributors wanted point guess primarily intended members docs authoring team might seem intimidatingdiscouraging occasional contributor wants fix typo barrier entry already little high docs contributions even simple fixes anything avoid changes would raise barrier potentially discourage people", "d": "5/2018"}, {"body": "thanks looking scrolling making visible agree wrto primary audience see harm making available obvious location contributors wo nt surprised someone asks follow certain convention filename page title image format inclusion example code least place refer info ask change meet style tell exactly want code changes done nt think unexpected publish docs style guide", "d": "5/2018"}, {"body": "see harm making available obvious location contributors potential harm people might find assume expected read contributing simple change get discouraged never contribute grin seen people refraining making simple fix nt want go hassle signing cla process wo nt surprised someone asks follow certain convention filename page title image format inclusion example code least place refer info ask change meet style experience never surprised ask change something follow conventions people understand conventions try infer looking similar places docs quite frankly us anyway rarely refer styleguide grin much appreciate afaict someone tells exactly need update pr meet projects requirements cleat necessarily adding link somewhere would make clear style guide primarily intended docs authors community contributors looking make small fiximprovement", "d": "5/2018"}, {"body": "btw fix", "d": "5/2018"}, {"body": "oh man thats blind nt know could sorry wasting time", "d": "5/2018"}, {"body": "see", "d": "5/2018"}, {"body": "yes bitten suspect many others beenwill without realizing grin hard track would great could come easy use solution remained reliable first thought able automatically put hash file comment eg top file sw could read hash file instead hashing might work certain types files though eg images configurable would nice iff could ensure reliable one nt think able reliably determining file content equality hash comparison gives us essential sw working expected serving incorrect content giving users power easily mess fundamental check dangerous imo eg pass strategy shown could easily end served old outdated asset image stylesheet script along latest app files unexpected results alxhub thoughts knowremember strategies comparing hashes consideredrejected", "d": "5/2018"}, {"body": "actually allowed due technically restriction could restrictions go", "d": "5/2018"}, {"body": "see means two options beeing restrictive means use abstract classes beeing tolerant means type system allows abstract classes also things happy none perfect consider common use abstract classes tokens think option better one also many cases angular follows pattern possible past means option would break things used", "d": "5/2018"}, {"body": "possible past since already wo nt work current api nt ignore deprecated warning whatever deprecated removed request new method introduced existing di system", "d": "5/2018"}, {"body": "see thanks pointing frankly ideal since using abstract base types things general considert good design", "d": "5/2018"}, {"body": "edge fully support", "d": "5/2018"}, {"body": "please ensure transpile code angular cli default", "d": "5/2018"}, {"body": "problem tried made difference repro attempt build library build fails console says comment two ngrx imports leaving try building time build succeeds generates package note fine", "d": "5/2018"}, {"body": "regarding ward repro wardbell build succeed fail depending combination added one example repro build success build failures observation ward example setting requires also enabled get success build ngc side notes thoughts experience issue goes everything statically analyzable aot see need static value resoltion compiler docs imo something broken around strictmetadataemit option understanding option horribly broken experience tell issue often produced sometimes depending one line code becomes becomes statically analyzable course nt reliable repros also nt want speculate vague memories code seen working nonworking ngc improve error message help ngc prints line number source code triggers error", "d": "5/2018"}, {"body": "thanks dherges figuring combination succeeds clearly flailing clue flags help hurt issue remain open angular makes choices intelligible documents appropriately", "d": "5/2018"}, {"body": "anyone tell nub workaround issue using ngxprogressbar get function calls supported decorators ngprogressmodule called", "d": "5/2018"}, {"body": "using latest angular cli library tsconfig suggest either update update ngpackagr wed may iamimbohacker notifications githubcom wrote anyone tell nub workaround issue receive ng build prod using ngxprogressbar get function calls supported decorators ngprogressmodule called receiving authored thread reply email directly view github mute thread", "d": "5/2018"}, {"body": "using angular cli use ngpackagr", "d": "5/2018"}, {"body": "dherges still get error use module aot", "d": "5/2018"}, {"body": "information metadata elided shown screenshot detailed description dhergesngpackagr", "d": "5/2018"}, {"body": "record problem latest angular ngpackagr three aforementioned parameters set true default generating library angularcl sure pr made joostk actually fixes something new appeared latest versions really pain ass way understand something works one point made work unable know go back working state second dherges request better error edit found source problem wrong declaration tsconfig preventing metadata found neverttheless really missing something diagnose", "d": "5/2018"}, {"body": "closing issue follow issue template please file new issue follows template gives team information needed investigate", "d": "5/2018"}, {"body": "gkalpak confirm works situation mentioned linked ticket thank", "d": "5/2018"}, {"body": "works expected explained", "d": "5/2018"}, {"body": "samverschueren already rule prevent", "d": "5/2018"}, {"body": "oh totally missed one thanks", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "think close", "d": "5/2018"}, {"body": "nt commit cherrypicked master branch", "d": "5/2018"}, {"body": "thanks reporting fixed", "d": "5/2018"}, {"body": "closing dupe", "d": "5/2018"}, {"body": "good catch thanks", "d": "5/2018"}, {"body": "avoid error", "d": "5/2018"}, {"body": "getting error updated package get commit getting error like still getting issue less ill report back figure edit bashing head around bit got working failing tests due rxjs changes dependencies dependencies shown also update node version support running global angularcli version getting funky errors along way mincssextractplugin aswell seemed like key updating global angularcli version also removed nodemodules packagelockjson multiple times bashing thru issues dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs rxjs rxjscompat sortablejs zonejs devdependencies angulardevkitbuildangular angulardevkitbuildwebpack angularcli angularcompilercli angularflexlayout angularlanguageservice angularclasshmr typesjasmine typesnode codelyzer dotenv jasmine jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter liveserver ncp protractor tsnode tslint typescript write", "d": "5/2018"}, {"body": "kblicharski yes belong angularangularcli please repos", "d": "5/2018"}, {"body": "moved", "d": "5/2018"}, {"body": "feature intentionally missing would break treeshaking instead use function retrieve dependencies inject constructors", "d": "5/2018"}, {"body": "example believe info missing di docs would mind sending us pr adds info cc jenniferfell", "d": "5/2018"}, {"body": "igorminar really speak think meant sth like taken docs say using useclass would prevent tree shaking hence removed weeks ago saw checkins talking case situation preventing tree shaking", "d": "5/2018"}, {"body": "want without deps like must also add decorator like comes old api", "d": "5/2018"}, {"body": "trotyl thanks hint tried issue still occours injectable reproduce follow steps open app executed correctly remove depsarray app crashes console shows dependencies injected consumer gets undefined injected instead unusual", "d": "5/2018"}, {"body": "talking bad design course angular team nt chose", "d": "5/2018"}, {"body": "one funny thing class used token constructor requesting types service points everything works", "d": "5/2018"}, {"body": "use class default implementation", "d": "5/2018"}, {"body": "chembu might opportunity improve docs please keep radar look treeshaking docs backlog thanks", "d": "5/2018"}, {"body": "hi provide custom appinitializer nt resolve till dynamic imports loaded would set angular client side wait promise returned appinitializer resolve swapping client rendered view server rendered view thereby avoiding flicker example using async app initializers", "d": "5/2018"}, {"body": "thanks explanation mlcmlapis close ticket thanks", "d": "5/2018"}, {"body": "jenniferfell fix", "d": "5/2018"}, {"body": "case ended create directive directive inject way instead giving needed template give use template call change detector component", "d": "5/2018"}, {"body": "thanks support brandonroberts lovely day", "d": "5/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "5/2018"}, {"body": "solved issue safari needs ending slash api authorization header appended chrome nt need ending slash always add api headers appended slash also working mobile devices wrong correct", "d": "5/2018"}, {"body": "closed via", "d": "5/2018"}, {"body": "ahh issue", "d": "5/2018"}, {"body": "issue developing breakpoint line supposed defined define console meanwhile hope bug going fixed quickly", "d": "5/2018"}, {"body": "issue guys got service worker update anybody workaround angular team working fix", "d": "5/2018"}, {"body": "hi meowhunter please confirm use latest release version ngsw issue ne fixed via", "d": "5/2018"}, {"body": "webmaxru tried latest release problem still exists", "d": "5/2018"}, {"body": "fixed nt merged yet", "d": "5/2018"}, {"body": "fixed released please check", "d": "5/2018"}, {"body": "confirmed missing final code snippet shown intro text updated directive full example code probably fine need extend docregion used include", "d": "5/2018"}, {"body": "arunkarthicksr would like submit pr provide assistance needed", "d": "5/2018"}, {"body": "sure brandon please share details branch cheers arun sent mail windows brandon sent may angularangular cc arunkarthick r mention subject angularangular small typo srcapphighlightdirectivets embedded code snippet arunkarthicksr would like submit pr provide assistance needed receiving mentioned reply email directly view github mute thread", "d": "5/2018"}, {"body": "link file needs editing able edit directly github clicking pencil toolbar add docregion last line file file examples using edit create branch commit message submit pr directly", "d": "5/2018"}, {"body": "thanks issue appears either support request also stackoverflow right place asking support feature request goes unanswered stackoverflow feel free file feature request details looking", "d": "5/2018"}, {"body": "face issue using css repeat function inline style", "d": "5/2018"}, {"body": "think less linked nt", "d": "5/2018"}, {"body": "fixed via", "d": "5/2018"}, {"body": "might related post currently building site ssr vuejs using pwa module exact problem happens video plays freezes sometimes play disable pwaworkbox module plays nicely without problems aware related angular trying fix issue atm seems related ios video sw general thought might leave still confused fabienbranchel", "d": "5/2018"}, {"body": "hello issue wordpress site hhvmnginx environment sure related wordpress ssl setup video play safari please check video wordpress independently nginx anyway resolve please thanks", "d": "5/2018"}, {"body": "bit astonished issue backlog inconvenience seams workaround current choice pwa videos pwa working videos safari bug think major issue update searched webkit bug tracker found one looks like bug service worker implementation angular nt handle byterange requests", "d": "5/2018"}, {"body": "fixed via", "d": "5/2018"}, {"body": "closing obsolete follow answer given", "d": "5/2018"}, {"body": "strange problem appear trying run production version external server litespeed localhost startting server command everything looks good application build local external know handle maybe server configuration problem search nodejs localhost litespeed version", "d": "5/2018"}, {"body": "hello yes problem side personal opinion state loses server html build new angular could appears first request first request works good tue may patryk panek notifications githubcom wrote strange problem appear trying run production version external server litespeed localhost startting server node command everything looks good application build local external know handle maybe server configuration problem search nodejs localhost litespeed version receiving commented reply email directly view github mute thread", "d": "5/2018"}, {"body": "issue localhost except production server http requests reloading reasons", "d": "5/2018"}, {"body": "alxhub case problem kinda resolved", "d": "5/2018"}, {"body": "appears duplicate workaround listed issue corrected upcoming bug fix", "d": "5/2018"}, {"body": "fixed pr", "d": "5/2018"}, {"body": "actually problem issue angular apparently node module polyfills webpack bundled problem previously bundled except module even edit webpack config file ejecting currently eject longer possible post updatescreate new issue gather information thanks update great file location changed angular cli", "d": "5/2018"}, {"body": "error happening angular several times issue closed quickly probably related people repository reporting error upgrade angular", "d": "5/2018"}, {"body": "used workaround", "d": "5/2018"}, {"body": "got hit", "d": "5/2018"}, {"body": "completed release per pr linked", "d": "5/2018"}, {"body": "updates issue separate posting repo", "d": "5/2018"}, {"body": "time week investigate bit thanks update plugin leads solution reason nt fully understand mix lazy modules webpack angular chunks aot builds create circular dependency htmlwebpackplugin issue described solution change chunkssortmode function one", "d": "5/2018"}, {"body": "work translating attribute example unsuccessful making translation file handle interpolation inside attribute", "d": "5/2018"}, {"body": "believe interpolations within attributes nt work current implementation confirm vicb roadmap new one ivy", "d": "5/2018"}, {"body": "radio buttons must matching attributes order grouping work properly throw error closing works intended", "d": "5/2018"}, {"body": "kara nt think working intended controls follow property selection path parent formgroups formarrays inside inside error message seems inaccurate radio controls inside even though error thrown follow pattern described radio button way get work demonstrated radio buttons plunker values match resulting match desired model using pattern described everything seems work correctly edit formgroups despite error message really working intended could demonstrate use radio button controls inside submitted correct property names desired model working demonstration provided issue reopened using radio button controls used reactive form used generate acknowledged documentation looks like plunk broke npm package version dependencies fixed updated link use angular rxjs", "d": "5/2018"}, {"body": "zamzowd nt property string radiobuttons checkboxes name items", "d": "5/2018"}, {"body": "created new plunk demonstrate behavior making match submitted formdata always null radio controls inside formgroup formarray mlcmlapis yes property string describing naming pattern used correctly using value radio inputs group please see linked plunks", "d": "5/2018"}, {"body": "zamzowd think related event look reactive forms nothing html tag event course even nt property template based forms always use reactive based forms totally without tag use something like nt event standalone thing also use subscriptions changes model data like detect every change model submit usual event user action ui many actions events like add subscription demo modal data looks", "d": "5/2018"}, {"body": "mlcmlapis need use need include file attachment form getting reactive form json object include say reactive forms used conjunction form using reactive forms additional validation functionality provide including validators file attachments", "d": "5/2018"}, {"body": "zamzowd sure said nt property vote also nt use mixed formdata course sending structural data want file send ahead time minimize complications server side keep user happier see live updates continuously", "d": "5/2018"}, {"body": "additional information found final html property radio inputs inside formarray absent trying set array index property remains radio inputs inside formgroup values radio inputs formarray absent formdata values radio inputs formgroup additional behavior causing radio inputs index array considered one radio group", "d": "5/2018"}, {"body": "zamzowd hmm interesting nt know never used reactive forms", "d": "5/2018"}, {"body": "zamzowd still", "d": "5/2018"}, {"body": "mlcmlapis mistaken original post gets dropped try set using array index first plunk edited post reflect similarly set name property gets dropped think less inside formarray accepting interpolated value", "d": "5/2018"}, {"body": "zamzowd ah positive step forward", "d": "5/2018"}, {"body": "zamzowd interpolation works ok", "d": "5/2018"}, {"body": "mlcmlapis interpolates string value also set property component use like describe effect also results property getting dropped final html edit see edited comment yes trying interpolate reason property vanishing instead", "d": "5/2018"}, {"body": "think conclusions regarding interpolation inaccurate due lack understanding angular interpolation works looks like interpolating attribute put attribute final html instead puts eg html looks like works properly work thrown error insists match blocking interpolation completing additional issue demonstrating error message wrong try set radio input inside formarray recommended html interprets radio inputs every item array radio input group", "d": "5/2018"}, {"body": "added pr proposal fix enforced naming radio controls inside formgroups formarrays", "d": "5/2018"}, {"body": "ideally similar feature services var injector someangularbuiltinservicegetserviceinjector serviceinstance", "d": "5/2018"}, {"body": "issue developing breakpoint line supposed defined define console meanwhile hope bug going fixed quickly", "d": "5/2018"}, {"body": "works intended others mentioned code patterns ensure validator args applied way want", "d": "5/2018"}, {"body": "andrewseguin igorminar struggling load lazy modules cdn runtime created question stackoverflow loadchildren dynamically different server cdn runtime seems solution yet finding proper", "d": "5/2018"}, {"body": "getting", "d": "5/2018"}, {"body": "also release", "d": "5/2018"}, {"body": "also really big issue whole website depending cms content released soon ssr google bots progress otherways put everywhere htmlsafe pipe", "d": "5/2018"}, {"body": "angular", "d": "5/2018"}, {"body": "looks like caused sanitization code moved core substantial changes nt appear isomorphic work browser first glance pr seems culprit", "d": "5/2018"}, {"body": "justinappler thanks looking working fix", "d": "5/2018"}, {"body": "updates", "d": "5/2018"}, {"body": "vasyliv pr fix progress updated bug", "d": "5/2018"}, {"body": "looking forward fix", "d": "5/2018"}, {"body": "structural workarounds seem like basic feature would agree rehfeldchris nt right way present causes lot confusion", "d": "5/2018"}, {"body": "another way work around least angular actually support async providers inject value object gets updated using objectassign valueobj serverresponse still hacky least allow client services use simple object beware nt actually solve problem ensuring configs ready makes semantics getting bit elegant", "d": "5/2018"}, {"body": "vim users available plugins typescript support substitute native angular language service typescript perspective cover pretty much everything use tscompletejob plugin uses new vim async api another popular plugin tsuquyomi uses sync api freezes larger projects", "d": "5/2018"}, {"body": "expected behavior form group disabled child controls disabled add new enabled control default state group longer entirely disabled thus status updates want new controls added disabled state specify flag see example", "d": "5/2018"}, {"body": "fixed via", "d": "5/2018"}, {"body": "zetsnotdead hi apologize letting sit finishing like contribute docs would great general contributor info see team also shared wiki progress need github docspecific info help", "d": "5/2018"}, {"body": "thank reply would still like contribute docs start working tomorrow fire done couple days", "d": "5/2018"}, {"body": "fantastic thank much rush enjoy weekend", "d": "5/2018"}, {"body": "got done weekend pr documentation change appropriate tests appreciate feedback", "d": "5/2018"}, {"body": "zetsnotdead wow quick thanks tagged couple reviewers team give look wrto editorial style", "d": "5/2018"}, {"body": "anything part speed review process", "d": "5/2018"}, {"body": "would make look like responses nt think true since create nonexistent pages redirecting pages would seem reasonable approach would keep project simpler rather generate static page build time", "d": "5/2018"}, {"body": "nt think good idea soft resources soft still technically resources could requested toplevel documents ie navigation requests resources eg images", "d": "5/2018"}, {"body": "images docs checked dgeni nt doc pages", "d": "5/2018"}, {"body": "sure usecase pretty sure us referencing nobexistent resources cause would never grin", "d": "5/2018"}, {"body": "thought party websites linking outdated resources", "d": "5/2018"}, {"body": "none new shiny private used even something like unusable due mentioned error mhegazy", "d": "5/2018"}, {"body": "hey still seeing error new release saw pr build also works delete line index looks like pr closed without getting merged another fix implemented somewhere", "d": "5/2018"}, {"body": "ended skiplibcheck another option would import using deep imports ie full paths files", "d": "5/2018"}, {"body": "would great see cli", "d": "5/2018"}, {"body": "closing favor please follow issue updates", "d": "5/2018"}, {"body": "hi wondering updates im similar issue", "d": "5/2018"}, {"body": "adding proper checks sitemap urls would increase job time significantly added smoke tests cover basic areas igorminar think sufficient look adding tests urls", "d": "5/2018"}, {"body": "think less linked nt", "d": "5/2018"}, {"body": "maybe really remove element serialization validation change detector crashes nt way check element destroyed really destroyed yet marked without accessing private variables", "d": "5/2018"}, {"body": "labyed please add stackblitz demo investigate", "d": "5/2018"}, {"body": "mhevery updates", "d": "5/2018"}, {"body": "thanks everyone feedback helpful links chance one would like submit pr never hurts ask", "d": "5/2018"}, {"body": "still error angular try injector solution", "d": "5/2018"}, {"body": "error well interceptor using code interceptor causing issue project typescript import request nguniversalexpressenginetokens injectable export class refererinterceptor implements httpinterceptor constructor optional inject request private request public intercept req httprequest next httphandler observable gt thisrequest const host req reqclone headers reqheadersappend stssrreferer host return nexthandle req", "d": "5/2018"}, {"body": "willovent exact di exception message want make sure issue", "d": "5/2018"}, {"body": "think move example code go away examples linted nt think effort parse content code blocks identify typescript finally run tslint worth", "d": "5/2018"}, {"body": "closing dup", "d": "5/2018"}, {"body": "ranbuch issues lack documentation angular manage get working api could share relevant code thanks", "d": "5/2018"}, {"body": "duplicate keeping newer one working stackblitz", "d": "5/2018"}, {"body": "hi getting caught issues prs still interested working pr pressure help thanks", "d": "5/2018"}, {"body": "link pr incorrect unrelated", "d": "5/2018"}, {"body": "docsareawebpack", "d": "5/2018"}, {"body": "webpack guide outdated longer publicly linked tracking", "d": "5/2018"}, {"body": "closed pr doc", "d": "5/2018"}, {"body": "update", "d": "5/2018"}, {"body": "many hours managed fix event undefined document undefined errors changing order imports appservermodule importing causing event undefined error documented bad importing causing document undefined error imports assuming overriding import worked previously errors getting error occurs importing appmodule lazymodule found fix hope helps", "d": "5/2018"}, {"body": "chris experiencing issue confirm indeed resolved thank goodness endless scrolling error console clean", "d": "5/2018"}, {"body": "problem solved making import line serverts editing file moved import import zonejsdistzonenode", "d": "5/2018"}, {"body": "moving resolve issue get new error see actual point using tsloader remove app seems build run without issues", "d": "5/2018"}, {"body": "docsareauniversal docsareawebpack", "d": "5/2018"}, {"body": "fixed via", "d": "5/2018"}, {"body": "thanks jamercee submitting trotyl identifying pr fix closing issue nt resolved satisfaction please confirm open new issue thank", "d": "5/2018"}, {"body": "docsareaeventhandler", "d": "5/2018"}, {"body": "aklaus yes solved particular issue satisfying solution relying history purposes finally decided support loading app ms office document link implemented workaround way", "d": "5/2018"}, {"body": "consistently fails run every next recompilation file save successful", "d": "5/2018"}, {"body": "quite sure related exact issue might issue anonymous functions route objects found solution stackoverflow worked similar setup changing anonymous functions named functions fixed error sadly insight tho might worth try const routes routes path id component regioncrudcomponent candeactivate leaveguard data staticroutebreadcrumbname region dynamicroutecomponent regioncrudcomponent dynamicroutecomponentmodule gt regionmodule export const routing modulewithproviders routermoduleforchild routes export function getregionmodule return regionmodule const routes routes path id component regioncrudcomponent candeactivate leaveguard data staticroutebreadcrumbname region dynamicroutecomponent regioncrudcomponent dynamicroutecomponentmodule getregionmodule export const routing modulewithproviders routermoduleforchild routes", "d": "5/2018"}, {"body": "jbogarthyde add comments", "d": "5/2018"}, {"body": "leave overview index descriptions yes rename prop table members column heading descriptions member btw one filled animations api pr", "d": "5/2018"}, {"body": "would keep overview drop type column table type enum value point naming members people nt need use values could change yes members properties", "d": "5/2018"}, {"body": "jbogarthyde closed another pr couple weeks ago see looks like live site eg changed properties members type value kept value column least one value specified value specified code possible actually meaning outside enum example values", "d": "5/2018"}, {"body": "filename", "d": "5/2018"}, {"body": "closing repro provided", "d": "5/2018"}, {"body": "detect change fashion time passed another well known project stand detect change growing solution alternative solve binding afaik bindable reactivex vdom use objectdefineproperty get set computed observer maybe another nt know benefit detectchange global schedule tick async change weak detectchange core angular another library works angular must consider detect change finally wan show option detect change gooood also influence acceptable", "d": "5/2018"}, {"body": "closing appears resolved", "d": "5/2018"}, {"body": "facing problems related well specific pull request fixed like sense angular version need wait order resolved", "d": "5/2018"}, {"body": "teflonwaffles closed appeared resolved conversation produce result op looking would change code", "d": "5/2018"}, {"body": "believe error javascript unshifting array routes array rather unshifting route config routes array believe change fixes issue", "d": "5/2018"}, {"body": "docsareatutorial", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "docsarearouting", "d": "5/2018"}, {"body": "lots nuances related topic covering issue discussion would result partial coverage problem space maybe one day someone scientific comparative analysis possible changedetection strategies popularized wide variety web frameworks libraries ideally done framework authors otherwise send biased selfpromoting marketing pitch confuses people educates framework authors feel comfortable runtime performance angular today measured benchmarks real world applications built google performance improvements mind upcoming versions keep researching experimenting various implementation strategies find best solution angular developers however nt want angular developers attached one strategy another angular evergreen everevolving framework conclude different changedetection strategy results significant performance boost real world benefits angular developers work changing internals angular take advantage approach case today focused today startup performance think much better project ivy ps performance complex topic impossible single benchmark captures startup time runtime perf interaction latency etc even discussion issue see people comparing things compared committed improving performance angular whatever way necessary nt want get flame wars approach x nt help anyone instead use energy make angular better users developers thanks", "d": "5/2018"}, {"body": "thanks looks like issue resolved current doc step edit first angular component open component file change title property app first angular app thanks", "d": "5/2018"}, {"body": "issue logged angular cli ngtoolswebpack keep moving compiler logic around hard keep track please fix issue one preventing us using aot dev builds", "d": "5/2018"}, {"body": "still happen cli aot true serve target", "d": "5/2018"}, {"body": "confirming upgrading angular still error thanks guidance error \u2139 compiling modules error debug failure false expression host return redirect source file \u2139 failed compile relevant packagejson start rimraf dist amp amp webpackdevserver progress info config configwebpacklocalhostts hot bail dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter ngbootstrapngbootstrap ngxloadingbarcore typesangular typeslodash typessocketioclient angularconfirmationpopover animatecss bootstrap corejs fontawesome glyphiconshalflings hammerjs lodash moment nodesass ravenjs reflectmetadata rxjs socketioclient typings zonejs devdependencies angularcompilercli ngtoolswebpack typesangular typeschai typescorejs typeshammerjs typesnode typesrx typessocketioclient typeswebpack awesometypescriptloader copywebpackplugin cssloader extracttextwebpackplugin fileloader htmlloader htmlwebpackplugin jasminecore jasminespecreporter karma karmachromelauncher karmajasmine karmaphantomjslauncher karmasourcemaploader karmaverbosereporter karmawebpack liveserver lodash moment ngcwebpack nodesass nullloader phantomjsprebuilt protractor rawloader request rimraf sassloader styleloader supertest tostringloader tsloader tsnode tslint tslintloader typescript typings urlloader webpack webpackbundleanalyzer webpackcli webpackdevserver webpackmerge writefilewebpackplugin repository", "d": "5/2018"}, {"body": "filename", "d": "5/2018"}, {"body": "think introduced", "d": "5/2018"}, {"body": "hello fix abdullahsari got probably well", "d": "5/2018"}, {"body": "supersedes", "d": "5/2018"}, {"body": "ps c ng v angular cli node os angular animations cli common compiler compilercli core forms platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularplatformserver angularupgrade ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack result ps c ng test building modules modules active deprecationwarning tapableplugin deprecated use new api instead warn karma captured browser open info karma karma server started info launcher launching browser chrome unlimited concurrency info launcher starting browser chrome hash webpack time built asset size chunks chunk names mainjs kib main main polyfillsjs kib polyfills polyfills entrypoint main mainjs entrypoint polyfills polyfillsjs srcpolyfillsts bytes polyfills built multi srcpolyfillsts bytes polyfills built srctestts bytes main built error error find type definition file node srcapptwaintwaincomponentmarblesspects error find module jasminemarbles", "d": "5/2018"}, {"body": "thanks suggestion recently learned changelog file opened issue resolving first part request someone learn changes documentation issue nt include second suggestion able subscribe something notify documentation changes keeping issue open nicely makes points another related issue", "d": "5/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue want pass arbitrary data use property route config ca nt remove runtime validation make easier use api incorrectly", "d": "5/2018"}, {"body": "give example need", "d": "5/2018"}, {"body": "essentially uirouter angular cli routing static analysis tool library need depend directly dev dependency highly inconvenient would argue would affect every installation ui router cli also minimal dev time simply moving token core first place route injection token feature angular feature router let chat offline", "d": "5/2018"}, {"body": "recently went tutorial verify angular everything worked us looks like correct instructions ng generate module approuting flat moduleapp flat puts file srcapp instead folder moduleapp tells cli register imports array appmodule doc could probably clear point showing cli changes appmodule appmodulets final files review correct make good point doc could explicit import approutingmodule approutingmodule inserted chembu get chance please review confirm instructions work let change label type feature add clarification point thanks", "d": "5/2018"}, {"body": "docsareatutorial filename", "d": "5/2018"}, {"body": "landed ago forgot update issue", "d": "5/2018"}, {"body": "see put lot effort unfortunately sounds like great idea get deep details main issue idl marshal primitives objects proxies creates large amount friction mention performance problems secondary issue idl seamlessly converted rich type system typescript would create less ideal user experience one way think idl leastcommon denominator supported targets hence expressive", "d": "5/2018"}, {"body": "url", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "fixed per pr", "d": "5/2018"}, {"body": "looks like duplicate worked finishing testing make sure fix corrects issue please subscribe issue updates", "d": "5/2018"}, {"body": "chance could make stackblitz demo reduce example smaller size hard figuring exactly breaking", "d": "5/2018"}, {"body": "closing minimal provided provided", "d": "5/2018"}, {"body": "noticed additional devastating behavior latest chrome cancel request using ctrls shortcut opens save dialog makes stupidly easy break angular website relies completion observable show hide loading messages example also break angulario website simply hitting ctrls switching new page simulating slow network makes timing easier know users nt spam ctrls still think issue investigated prioritized", "d": "5/2018"}, {"body": "hi still planning submit additional pr", "d": "5/2018"}, {"body": "hi brandonroberts local push eod tomorrow", "d": "5/2018"}, {"body": "great thanks", "d": "5/2018"}, {"body": "looks like fixed referenced pr closing fixed thanks catching", "d": "5/2018"}, {"body": "along aot issue consider properly lazy initialization providers services modules like ngrx store particular lazy loading module would great separate defined way satify", "d": "5/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "5/2018"}, {"body": "chuckjaz workaround error happens times hot reloads making life miserable", "d": "5/2018"}, {"body": "workaround available", "d": "5/2018"}, {"body": "dongata read comments", "d": "5/2018"}, {"body": "try selectcontrolvalueaccessor", "d": "5/2018"}, {"body": "rechecked keeping open trotyl recommendation would useful clarification help differentiate import ngmodule proper noun import ngmodule kind thing intent recommendation copied convenience also import ngmodules eg browsermodule angular libraries using javascript import statements", "d": "5/2018"}, {"body": "basic rules place", "d": "5/2018"}, {"body": "update primary efforts inflight vicb make formatting incremental allowing us upgrade clangformat switch prettier without reformatting whole repo finish migrating bazel removing tons nowobsolete configuration rollupconfigjs many directories tsconfigjson many directories buildsh deletion probably currently blocked ca nt make bazel build succeed travis nt ported tests circleci", "d": "5/2018"}, {"body": "also github robot handling prissue workflow merge repos monorepo see proposal dts bundling see switch yarnmanaged bazelmanaged toolchain deps rule caretaker app finish rolling new size trackingenforcement toxicable working renovate update deps see screenshot testing brad requesting scuba manager", "d": "5/2018"}, {"body": "guy fixes", "d": "5/2018"}, {"body": "docsareawebpack", "d": "5/2018"}, {"body": "docsareacontributing", "d": "5/2018"}, {"body": "due router mostly ignoring methods mentioned docs issue best way get behavior looking right create urltree use something like", "d": "5/2018"}, {"body": "unintuitive method accepts params later ignores type method updated reflect elements extras actually uses", "d": "5/2018"}, {"body": "verify issue still reproducable angular", "d": "5/2018"}, {"body": "use case microserviceoriented portal application imagine tiles displayed dashboard content contributive via microservice registers tiles content bootstrap used use component factory order create tile content populate tile ngtemplate could loaded string could persisted component name tile microservice database last issue would dynamic import microservice modules another thread", "d": "5/2018"}, {"body": "tcharl load programmatically module way router keep map string key lt component type part module even use component via names", "d": "5/2018"}, {"body": "progress", "d": "5/2018"}, {"body": "would consider bug feature request language service unusable strictnullchecks enabled", "d": "5/2018"}, {"body": "agree parent resolver data yet available chaining child resolver null execution time also wondering inheriting asyncdynamic resolvers actually possible experienced parent resolver executed navigating child route navigate child route second time parent resolver invoked anymore means child route nt receive updated async data", "d": "5/2018"}, {"body": "docsarearesources", "d": "5/2018"}, {"body": "kandangit made date solution thank want say experiment error added line problem still presented thinking make file root export main solution solve notation error thank inspiration", "d": "5/2018"}, {"body": "docsareadocsworkflow", "d": "5/2018"}, {"body": "update issue param build config quitte useless since newly xlf generated file make build fail", "d": "5/2018"}, {"body": "working frontend storage technology ceph add support project issues absolute showstopper us manually adding tags leads empty translated string without tags compiler fails seems way missing translation replaced defaultsource language wrong guarantee string translated every release", "d": "5/2018"}, {"body": "use martinroob developed lot", "d": "5/2018"}, {"body": "used solve issue confirm trick", "d": "5/2018"}, {"body": "kazakstan", "d": "5/2018"}, {"body": "hi ran ng server environmentprod parameter method inside ngfor called twice data updated function called going method called twice first time", "d": "5/2018"}, {"body": "hi javarthur thanks used aotfalse solved problem still worrying going cause issue want know good approach solve one one mentioned solution would best one thanks regards", "d": "5/2018"}, {"body": "alexzuza get annotations aot", "d": "5/2018"}, {"body": "getting error packagejson file name mdfreeangularcli version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter arrive bootstrap bootstrapmaterialdesign bootstrapnotify chartist classlistjs corejs googleapis jquery moment perfectscrollbar rxjs toastr webanimationsjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesbootstrap typeschartist typesjasmine typesjquery typesnode angularide codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter nodesass protractor rawloader sassloader swprecache tsnode tslint typescript", "d": "5/2018"}, {"body": "docsareaauthorstyle", "d": "5/2018"}, {"body": "please put together example investigate", "d": "5/2018"}, {"body": "soon angular animations animations inside div tabs using ngif automatically reset selected found helpful way keep animation going background otherwise animation reset every time visit div thanks", "d": "5/2018"}, {"body": "release angular rxjs documentation longuer accurate saw work breakdown top ticket importance observable rxjs angular believe important update documentation eg longuer valid ts import rxjs create observable promise const data fetch apiendpoint subscribe begin listening async result datasubscribe next response consolelog response error err consoleerror error err complete consolelog completed", "d": "5/2018"}, {"body": "still ca nt get rid depends jialipassion eta refactor", "d": "5/2018"}, {"body": "alfaproject current zonejs version", "d": "5/2018"}, {"body": "mattijarvinenba culprit", "d": "5/2018"}, {"body": "alfaproject try make test version next week", "d": "5/2018"}, {"body": "suggested design using dynamic import syntax source code targeting let emitted passing syntax builds rollup transforming fallback builds manual replacement step seems way use module imports target deprecate fallback usage builds way minimalbreaking webpack rollup umd users webpack natively supported since rollup user still choose transpiling system format config require newer versions umd users still use systemjs quite sure closure compiler", "d": "5/2018"}, {"body": "guys deprecated import css files trying import css file compiler throw error like", "d": "5/2018"}, {"body": "everedifice nt really place asking mechanics answer depends environment browser node support text assets directly build environment eg webpack handle loader also actually trying process raw text css js want add stylesheet page might able add css build configuration instead using", "d": "5/2018"}, {"body": "want say sad deprecation good feature load css file dynamically even language support feature use use understand nt say anymore realize way dynamic loading module without registration using hour move code modules like work expected", "d": "5/2018"}, {"body": "think error found error migrate angular angular angular angular", "d": "5/2018"}, {"body": "closing support request answered ericmartinezr thnx", "d": "5/2018"}, {"body": "better viewchild support multiple instances child component know issue closed ericmartinezr wrote okay enough least situation like instert child giving still get first one get others situation elements undefined begining need write setter component class", "d": "5/2018"}, {"body": "docsarearxjs docsarearouter", "d": "5/2018"}, {"body": "docsareangmodule", "d": "5/2018"}, {"body": "brandonroberts hi get moment would take look know done lot examples work last months including moving plunkr stackblitz issue might resolved thanks", "d": "5/2018"}, {"body": "live demos api docs still outdated recommend remove links live demos api documentation since moving snippetbased examples", "d": "5/2018"}, {"body": "tracked pr fixes submitted", "d": "5/2018"}, {"body": "think worthwhile capturing comment closed duplicate", "d": "5/2018"}, {"body": "fwiw nt see anything weird except fact chrome thinks sidenav content height larger actually rest behavior normalexpected grin still suspect could chrome bug possibly related flexbox could wrong", "d": "5/2018"}, {"body": "docsareangmodules", "d": "5/2018"}, {"body": "limit services module providing component discussed add providers module component generally better providing service lazy loaded ngmodule provide service component run risk creating multiple instances service sometimes may need multiple instances generally want one limit access service wiser use lazy loading work faq", "d": "5/2018"}, {"body": "chuckjaz plans fixing issue seeing vs well", "d": "5/2018"}, {"body": "seems rather pressing especially since node", "d": "5/2018"}, {"body": "somewhat related documentation use angular error message show browser console like looks like lot info ca nt determine code error originating ie code causing bug", "d": "5/2018"}, {"body": "filipesilva exactly problem angular angularcli angular cli node os darwin angular animations cli common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router serviceworker package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack config way enable full debugverbose logs see object possibly undefined nt understand error library used inside project aot strictnullchecks angular bug trick log please add share log issue really annoying library developer", "d": "5/2018"}, {"body": "issue reproduced also lib", "d": "5/2018"}, {"body": "adding strictnullchecks false tsconfigjson worked", "d": "5/2018"}, {"body": "bug get fixed need information", "d": "5/2018"}, {"body": "information seems like duplicate", "d": "5/2018"}, {"body": "igorminar updates one two prs single word typo helps make watch magnitude faster", "d": "5/2018"}, {"body": "closing based inclined say close issue justify spending much time trying recreate simplified project nt reproducible problem nothing", "d": "5/2018"}, {"body": "error typeerror function problem colleague committed ts file html file component code thets nothing thehtml aot build process look files optimize output therefore poses problem committing html file component fixes problem", "d": "5/2018"}, {"body": "docsareadeployment", "d": "5/2018"}, {"body": "closing feel free open new issue repro using latest version angular wink", "d": "5/2018"}, {"body": "actually put feature request end also think something key like interface like one open question like", "d": "5/2018"}, {"body": "problem see check happen asynchronously based nt possible decide whether handle request asycnhronously wondering calling allows us defer decision whether call still able choose handle request ie something like", "d": "5/2018"}, {"body": "see point thats case definitely seems like tradeoff performance feature may someone aware implementation point way forward", "d": "5/2018"}, {"body": "docsareatutorial", "d": "5/2018"}, {"body": "angular cli solved issue", "d": "5/2018"}, {"body": "solution problem following code new webpackcontextreplacementplugin piece accounts path separators nix windows angular core angular helpersroot src location src map routes understand plugin causes issue building aot know angularcli produces lazy loading modules complicated process key point relies angularcoresrclinker path since replacing path map lazy loading modules wo nt generated angularcli uses contextelementdependency try disabling contextreplacementplugin production build see", "d": "5/2018"}, {"body": "currently facing issue polyfills nt help reopen issue", "d": "5/2018"}, {"body": "issue tried mentioned nickbullock found anything", "d": "5/2018"}, {"body": "issue related solution include babelpolyfill includes much polyfills polyfillsts try add webpack entry add polyfillsts", "d": "5/2018"}, {"body": "still getting error tried everything uncommenting imports polyfillsts adding none anything error running options", "d": "5/2018"}, {"body": "docsareatutorial update recently went tutorial endtoend instructions worked correctly want keep open recheck specific issue resolved", "d": "5/2018"}, {"body": "issues still active current tutorial today come app working following message console browser nullinjectorerror provider heroservice possible solution point would add provider appcomponentts adding placed line starting selector make work way may duplicate past nt anymore", "d": "5/2018"}, {"body": "edwinhendriks thanks rechecking providing info possible solution appreciate help", "d": "5/2018"}, {"body": "found better solution also found real cause problem solution nothing current angular version everything works fine jenniferfell already thought issue caused started tourofheroes tutorial days ago version came tutorial tutorial changed reflect version point cli generates service default flag like lot way course version nt mean time updated everything removed solutions described previous comment issue added flag heroservicets manually work matches tutorial everything working fine part close issue", "d": "5/2018"}, {"body": "comon feature let program precisely control events delegate everything idea reload page suggest another directive property", "d": "5/2018"}, {"body": "adding polyfill make angular router work hashlocationstrategy", "d": "5/2018"}, {"body": "common case im amazed hasnt implemented yet", "d": "5/2018"}, {"body": "quite issue agree goodwine default behavior less aggressive html minifier collapse multiple newlineswhitespace single whitespace mimic browser behavior safe default", "d": "5/2018"}, {"body": "related closed issue", "d": "5/2018"}, {"body": "thanks jialipassion think sufficient resolve issue bit users need duplicate looks like angulartesting nodemodules angularbundlestestingumdjs use aot compiler dynamic platformbrowser visible tests nodemodules angularcompilerbundlesumdjs nodemodules angularplatformbrowserdynamicbundlesumdjs filegroup name angularbundles srcs glob nodemodules angularbundlesumdjs exclude angulartesting filegroup name angulartestbundles testonly srcs glob angulartesting could probably still improved think good enough", "d": "5/2018"}, {"body": "finally spare time work tried experiment using ubuntu virtual box windows installed latest everything following klauserber posted seems problem gone away close issue thanks everyone", "d": "5/2018"}, {"body": "using innerhtml handy every situation think nt think enough justification support new syntax going close one wo nt fix", "d": "5/2018"}, {"body": "angular problem still", "d": "5/2018"}, {"body": "reproduce fragment pet app routerlinkactive presented ngfor work ok previous angular versions similar problems infinite loop tried start tests component problems runtime removed routerlinkactive active html tests worked ok current angular tests work ok routerlinkactive active", "d": "5/2018"}, {"body": "hi loooooong time found issue course server side need set cors middle ware first remaining api middlewares wrong code currect code", "d": "5/2018"}, {"body": "closing something could solved side", "d": "5/2018"}, {"body": "docsareaevents", "d": "5/2018"}, {"body": "played around little serviceworker code came solution extending existing service worker notificationclick listener anyone provide usecases eventlistener except redirecting user specific url", "d": "5/2018"}, {"body": "browser support kind poor right see actions array supported opera chrome think worth spending time implementing functionality", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "jbogarthyde assess backlog would please review work robwormald andrewseguin write elements doc backlog talk offline thanks", "d": "5/2018"}, {"body": "inform problem custom element working removed polyfillts build process see got new error custom element working use case load script inside dom remove script dom insert consumer building time angularjson without polyfillsts build process custom element work without error nt try multiple custom elements use custom element inside another angular app need add build time runtime moment hope help people want try someone find way add runtime without error", "d": "5/2018"}, {"body": "interesting example use angular elements", "d": "5/2018"}, {"body": "able solve check linked stackoverflow answer", "d": "5/2018"}, {"body": "seems working intended", "d": "5/2018"}, {"body": "came across use case today dashboard different user roles dashboard loaded organization determined users part multiple organizations one specified url different subdashboard pages guards available depending user role organization resolvers resolve first would allow us resolve organization dashboard level page guard could check organization", "d": "5/2018"}, {"body": "workaround could remove guards altogether permission checks inside component displaying nt access message kind defeats purpose guards", "d": "5/2018"}, {"body": "since wontfix suggest dropping resolvers replacing guards also loading part store somewhere app state guards go top bottom unlike resolvers go way around yes still think bad design decision even though understand reasoning behind", "d": "5/2018"}, {"body": "xaralis something like method good idea mean guards top bottom check child roots parent roots first", "d": "5/2018"}, {"body": "nt definitive solution guards definitely able act resolvers case application state store data get components ngrx solution example guards triggered top bottom parent children way resolvers guards work point view resolvers act angular devs willing change behavior router unable act way moment see might supported distant future time suggest dropping resolvers let guards combination state management tool job", "d": "5/2018"}, {"body": "iamwyza code would nt pass typechecking use consider following code typescript function foo x return x const foo const sslice typescriptststringconst sslice documentation search type assertions find type assertions way tell compiler trust know type assertion like type cast languages performs special checking restructuring data runtime impact used purely compiler typescript assumes programmer performed special checks need see implied jsdoc httpclient nt", "d": "5/2018"}, {"body": "use exact paragraph argue way asserting httpclient saying trust know comes responsibility lies ensure object get back expect way documentation examples etc laid inferred get back object type use httpclient generic parameters know nt case jsdocs state exactly opposite saying things change jsdocs say returns dead simple requires coding changes nt change way angular works purely helps new developers realize generics nt work way typescript languages angular passing responsibility developer take thing similar make actual ok docs says returns better well return methods actually return harder though imagine vast majority time complex thing ca nt easily returned date object", "d": "5/2018"}, {"body": "asserting httpclient saying trust know correct interpretation refers tell compiler actual data structure httpclient grab httpclient source code observableobject get url string options headers httpheaders header string string string observe body params httpparams param string string string reportprogress boolean responsetype json withcredentials boolean observable construct get request interprets body json returns return body type get url string options headers httpheaders header string string string observe body params httpparams param string string string reportprogress boolean responsetype json withcredentials boolean observable jsdoc says interprets body json returns clear httpclient second returns body type specifically tell compiler type get typechecking consuming data example suppose property name omit typescript emit error saying property stringproperty exist type object true generics nt work way typescript languages way might unrelated saw movie somewhere africa locals shake heads leftandright express yes many cultures believe action means", "d": "5/2018"}, {"body": "disagree ambiguous wrote method generic yes would refer however consuming method someone else wrote refers person unless otherwise specified case framework someone else defined collective set developers worked framework never disagreed jsdocs said nongeneric form get exactly correct generic form get sadly seems able move past stance documentation clear newer entrants framework stance clear enough", "d": "5/2018"}, {"body": "write method generic type would know exact type runtime someone else using arguments type limited actual type varies likewise provide actual type invoke method generic type someone else wrote know know structure data part method httpclient means body contains json structure like get sure model according data suppose use framework written c author would assume knowledge c docs need include language tutorials fair blame angular making docs clearer assumes know typescript already expert explanations correct hope someone else settle", "d": "5/2018"}, {"body": "someone coming jvm world kotlinjava still learning angular typescript syntax misleading one learns typescript type assertions javakotlin libraries know would throw runtime exception cast fails nt mean typescript httpclient work like jvm languages libraries simply saying note docs would service people coming different backgrounds angular example nt mention anything example learned issue thread found searching trying understand code heroes tutorial puzzled instead nt produce runtime exception nt expect restapi return deleted object response body thisheroesurl id", "d": "5/2018"}, {"body": "trying investigate issue found workaround yet disabling service workers app want avoid much possible bug present current samsung internet browser beta based respectively chromium experienced bug edge android seems based recent chromium version example anyone reproduce angular material docs site uses page load error displayed service worker comes future navigations app trigger error coming time point sure whether chromium issue follow find anything new learn logic behind service workers", "d": "5/2018"}, {"body": "seems related chromium bug fixed could mean angular app using service workers work browsers based chromium lt tried polyfill mentioned issue solved problem tested samsung internet amp based chromium amp pretty hacky simply take file add polyfill rename place file add export custom worker file building app change serviceworkermodule import registers polyfilled worker file instead one package temporary fix case upgrade package versions manually update worker file latest code alxhub adding polyfill package something angular team would consider", "d": "5/2018"}, {"body": "thx vleput getting bottom sure much point including polyfill default since affects old versions chromium maybe could distribute two versions worker script one one without polyfill b make possible include extra scripts worker script via cli eg could config option specify extra script file similar could list js scripts imported using top alxhub wdyt", "d": "5/2018"}, {"body": "thanks guys works vleput version good points investigations gkalpak b woul great wait improvments fix", "d": "5/2018"}, {"body": "gkalpak agree probably nt included default solution b something \u00e0 la would great would let us use sw chromiumbased browsers catch latest versions", "d": "5/2018"}, {"body": "problem angularcli angularserviceworker samsung internet version would nt mind service worker nt work chromium lt crashing whole app real deal breaker", "d": "5/2018"}, {"body": "hello guys trying vleput solution missed something errors console right solution duplicate distngsworkerjs file srcngsworkerpollyfillljs asyncwaituntil pollyfill update appmodulets calling new ngsworkerpollyfillljs update angularclijson glob ngswworkerpolyfilljs dont find exactly add pollyfill new ngsworkerpollyfillljs cc top function bottom inside angularclijson add new lines first assets mentions anyone help please theappfield try solution", "d": "5/2018"}, {"body": "juliencap create new file folder take content file folder copypaste polyfill beginning function see exemple gist make serviceworkermodule register polyfill worker instead regular worker seems like using angular new version angularclijson file right place paths input output need slightly modified compared", "d": "5/2018"}, {"body": "thanks continue tomorow ps project using angular cli final edit works perfectly thanks", "d": "5/2018"}, {"body": "options scheduletask zonedelegatescheduletask onscheduletask zonedelegatescheduletask zonescheduletask zoneschedulemacrotask schedulemacrotaskwithcurrentzone anonymous proto anonymous function anonymous observabletrysubscribe observablesubscribe subscribetoresult mergemapsubscriberinnersub mergemapsubscribertrynext mergemapsubscribernext subscribernext scalarobservablesubscribe observabletrysubscribe observablesubscribe mergemapoperatorcall observablesubscribe filteroperatorcall observablesubscribe mapoperatorcall observablesubscribe apiserviceregisteruser registercomponentregisteruser anonymous handleevent callwithdebugcontext debughandleevent dispatchevent anonymous schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectnext eventemitteremit ngformonsubmit anonymous handleevent callwithdebugcontext debughandleevent dispatchevent anonymous anonymous zonedelegateinvoketask oninvoketask zonedelegateinvoketask zoneruntask zonetaskinvoketask invoketask globalzoneawarecallback error httperrorresponse headers httpheaders status statustext unknown error url null ok false", "d": "5/2018"}, {"body": "u get error earlier", "d": "5/2018"}, {"body": "splincode related", "d": "5/2018"}, {"body": "glebmachine okay", "d": "5/2018"}, {"body": "splincode think possible escalate issue right render team missed feature ever seen bad think moving vuejs discuss half year ago", "d": "5/2018"}, {"body": "glebmachine angular team still important common tasks time polishing solution use metaprogramming asyncawait ts import component input ondestroy angularcore import timer rxjs import timeinterval pluck take rxjsoperators interface beforeondestroy ngxbeforeondestroy type ngxinstance beforeondestroy amp object type descriptor typedpropertydescriptor type key string symbol function beforeondestroy target ngxinstance key key descriptor descriptor return value async function args await targetngxbeforeondestroy return descriptorvalueapply target args component selector hello template styles export class hellocomponent implements beforeondestroy ondestroy input name string constructor consolelog add hello component public ngxbeforeondestroy consolelog ondestroy invoke method await sec return new promise resolve gt settimeout gt thisheavyfunction resolve beforeondestroy public ngondestroy consolelog component removed seconds expectation private heavyfunction resolve consolelog execute heavy function sec source", "d": "5/2018"}, {"body": "nice thank", "d": "5/2018"}, {"body": "splincode unfortunately working expected component removed dom async operation", "d": "5/2018"}, {"body": "glebmachine implemented vue", "d": "5/2018"}, {"body": "apparently new hook really need used angular remove element dom calling ngondestroy", "d": "5/2018"}, {"body": "vue beforedestroy lifecycle method check vue lifecycle diagram idea proposal get mechanism", "d": "5/2018"}, {"body": "wondering difference async asyncawait would sometimes come across async tests function run example figure reason work using asyncawait one difference obvious use enable linear code style still wondering might impact test execution", "d": "5/2018"}, {"body": "problem found solution gigadie", "d": "5/2018"}, {"body": "workaround instead reqflush true", "d": "5/2018"}, {"body": "fallen sync guys see new issue", "d": "5/2018"}, {"body": "could warning provided whenever happens sort indication completely unknown happens library like ngxmarkdown referenced completely break app without obvious", "d": "5/2018"}, {"body": "yep jrubzjeknf right behaviour expected bad time trying understand interceptors working file nothing markdown module therefore got duplicated instance httpclient warning least would something really nice quite hard make sure none libs importing directly httpclientmodule", "d": "5/2018"}, {"body": "asdasdasd", "d": "5/2018"}, {"body": "interesting topic give clear info arabic numbers actually hindi numbers check word office", "d": "5/2018"}, {"body": "docsareatranslation docsareacontributing", "d": "5/2018"}, {"body": "docsareacontributing", "d": "5/2018"}, {"body": "hello update universal important feature party like firebase work resolve issue allow configuration render timing", "d": "5/2018"}, {"body": "part documentation efforts ready post update", "d": "5/2018"}, {"body": "yes sir thank information", "d": "5/2018"}, {"body": "exact issue frontend runs path backend runs path backend setting cookie path changing fixed problem", "d": "5/2018"}, {"body": "set path httponly flag false angular able read cookie please provide sample reading cookie angular side thank", "d": "5/2018"}, {"body": "also issue angular interceptor sets xcsrftoken header request url absolute relative ewaschenko mentioned anybody know condition", "d": "5/2018"}, {"body": "hi problem backend frontend nt run domain conditions header set nt know much csrf attacks nt see would use csrf protection cases backend run different domain would consider removing conditions least allow choose apply based configuration", "d": "5/2018"}, {"body": "julierossi nt consider removing conditions comment issue think biggest problem incomplete documentation emphasize default behaviour interceptor would remove confusion writing interceptor easy need header crossorigin problem", "d": "5/2018"}, {"body": "ok thank olgagr answer", "d": "5/2018"}, {"body": "sorry closed back label applied still reproduction attached close issue reproduction please create new issue", "d": "5/2018"}, {"body": "issue angular ca nt find workaround", "d": "5/2018"}, {"body": "please anyone found clear solution error", "d": "5/2018"}, {"body": "sebmade thank", "d": "5/2018"}, {"body": "update issue", "d": "5/2018"}, {"body": "actually building app save fly without submit button use updateon blur would helpfull continue native forms like behavior enter text field would emit change cause formgroupvaluechanges called", "d": "5/2018"}, {"body": "brandonroberts hi get change would take look know updated lot examples especially move stackblitz please assist triage close please add note current state examples broken outdated use deprecated features nt use current best practices incomplete stackblitz need downloadable examples thanks", "d": "5/2018"}, {"body": "issue refers examples api documentation examples broken outdated closing one favor", "d": "5/2018"}, {"body": "run npm update npm install commands restart vscode atom editor", "d": "5/2018"}, {"body": "workaround angularcli hide warnings", "d": "5/2018"}, {"body": "got problem today instead nevertheless dmitriyett workaround still good checkout appropriate workaround webpackconfigjs javascript const helpers require helpers const webpack require webpack plugins helpersjs javascript const path require path const root pathresolve dirname function root args args arrayprototypeslicecall arguments return pathjoinapply path root concat args exportsroot root", "d": "5/2018"}, {"body": "got rid wrote functions get set cookies problem solved", "d": "5/2018"}, {"body": "authservice used http angular change httpclient angularcommon constructor authservice change parameter type http httpclient", "d": "5/2018"}, {"body": "however someone answered correctly refer correct solution version appmodule use httpclientmodule httpclient angularcommon otherwise use httpmodule http angular", "d": "5/2018"}, {"body": "mehdizohrevnd version", "d": "5/2018"}, {"body": "issue even httpclientmodule imports plz help", "d": "5/2018"}, {"body": "come across problem anybody know workaround", "d": "5/2018"}, {"body": "resolved problem modulengfactory fix error like private property use template problem automatic resolved first resolve syntax error ngcli throw using hope solve issue", "d": "5/2018"}, {"body": "pavansinghx thanks fix problem browseranimationsmodule routing", "d": "5/2018"}, {"body": "issue persists angular call callback components get appended stackblitz example click open window button new window opens closed components get appended outlet remove issue nt occur", "d": "5/2018"}, {"body": "tuhinkarmakar nt see open window button example", "d": "5/2018"}, {"body": "ismaestro fixed example project got wiped signed grinning", "d": "5/2018"}, {"body": "partial solution added provide general information keeping current including links essential resources update guide", "d": "5/2018"}, {"body": "docsareaupdating", "d": "5/2018"}, {"body": "alxhub hi surface docs incomplete issue see comment days ago right person ask also codeapi issue need resolve determine correct docs approach thanks input", "d": "5/2018"}, {"body": "referenced public api supposed fix fix reverted due failures see info", "d": "5/2018"}, {"body": "gkalpak hold doc changes watch pr thanks", "d": "5/2018"}, {"body": "jbogarthyde keep eye", "d": "5/2018"}, {"body": "hi closing issue longer present angular", "d": "5/2018"}, {"body": "jppellerin something extend datepipe moment js extracts correct offset based timezone abb passes fine", "d": "5/2018"}, {"body": "jppellerin nt think way voidale using angular use formatdate directly date pipe uses write pipe", "d": "5/2018"}, {"body": "hey folks facing similar issue need different communication backend services different interceptors previously old client streamlined interface able middleware like concept create custom clients unfortunately new complex stated interface may change easily good read article maximusk come solution import injectable angularcore import httpclient httpbackend httphandler httpinterceptor httprequest httpevent angularcommon import observable rxjsobservable export class httpinterceptorhandler implements httphandler constructor private next httphandler private interceptor httpinterceptor handle req httprequest observable execute interceptor pass reference next handler return thisinterceptorintercept req thisnext export class implements httpinterceptor intercept req httprequest next httphandler observable const modified reqclone setheaders return nexthandle modified injectable export class customhttpclient extends httpclient constructor handler httpbackend interceptors httpinterceptor const chain interceptorsreduceright next interceptor gt new httpinterceptorhandler next interceptor handler injectable export class mycustomhttpclient extends customhttpclient constructor handler httpbackend const interceptors httpinterceptor new super handler interceptors httpclientmodulemycustomhttpclient provider simply inject componentservice import httpclientmodule angularcommon import mycustomhttpclient custom ngmodule imports httpclientmodule declarations providers mycustomhttpclient export class testmodule nt know abstraction good idea maybe helps someone situation", "d": "5/2018"}, {"body": "way angular localeid set based browser locale", "d": "5/2018"}, {"body": "solved", "d": "5/2018"}, {"body": "installing added appmoduletsafter running iti get errorhow resolve error nodemodules error redeclare blockscoped variable ngdevmode nodemodulesngxadvancedsearchboxnodemodules error redeclare blockscoped variable ngdevmode", "d": "5/2018"}, {"body": "jlowcs still similar issue workaround fix issue aot returns data", "d": "5/2018"}, {"body": "mashb using angularcli custom toolstack issue angular toolstack therefore wo nt fix", "d": "5/2018"}, {"body": "news would like use jit development aot production", "d": "5/2018"}, {"body": "krivochenko worked remove flag run script packagejson add one instead nt remove p flag plugin run twice get errors minify work add uglifyjsplugin webpack config adds packagejson uglifyjswebpackplugin webpackclientjs server side need install npm package uglifyjsplugin work shipped webpackserverjs javascript const uglifyjsplugin require uglifyjswebpackplugin moduleexports plugins new uglifyjsplugin sourcemap false uglifyoptions compress false mangle false comments false would try webpack shipped uglifyjsplugin would get syntaxerror invalid regular expression range order character class", "d": "5/2018"}, {"body": "need import service appmodule like import heroservice appheroservice provide providers array file like providers heroservice hope help", "d": "5/2018"}, {"body": "madhavsharmaagra thanks help see sampleapp service sampleapp applicable", "d": "5/2018"}, {"body": "removing following provider helped import httpclient angularcommon constructor public httpclient", "d": "5/2018"}, {"body": "filipbarak toxicable ebrehault ochezeau sekurukaguvi hi guys somehow problem importing http httpclient please help thanks", "d": "5/2018"}, {"body": "already import statements inside appmodulebut still staticinjectorerror nullinjectorerror poped import browsermodule angularplatformbrowser import browseranimationsmodule angularplatformbrowseranimations import httpclientmodule angularcommon got resolved error happened forgot import service appmodulets file add service eg xyznotificationservice providers section appmodule", "d": "5/2018"}, {"body": "nayfin manage package ngpackagr empty dependencies rename dependencies peerdependencies ngpackagr nt find angularcore etc anymore", "d": "5/2018"}, {"body": "ledicjp talking build package moment change parameter name building development packaging release started library ng implemented library helper utility still lot learn area plan rebuilding soon digging update post hope least gets unblocked", "d": "5/2018"}, {"body": "also issue angular ca nt use httpclient external module import import httpclient angularcommon core project nt help", "d": "5/2018"}, {"body": "ledicjp coming realize going rebuild using cli walkthrough anyone else coming realization hopefully painful update using cli generate library really nice experience structures library nicely makes easy setup sandbox app testing bypasses lot difficulties setting library manually still lot components move think right move make", "d": "5/2018"}, {"body": "wisebird nt think issues closed since noticed also happens use name ngmodule typescript class instances unable resolve components provided using static method returns", "d": "5/2018"}, {"body": "tiaguinho imho nt need new directive leave case array check value otherwise use existing functionality", "d": "5/2018"}, {"body": "team bitten bug similar one new context jasmine test suite angular hybrid app still using something bootstrapping process calls calls stack gets passing eg array happens start every test old many things kept memory duration test suite suite longer works runs browser memory work around splitting suite multiple smaller suites run separately please let know belongs separate ticket specifics would helpful thanks", "d": "5/2018"}, {"body": "closing issue reproduction provided still problem please create new issue", "d": "5/2018"}, {"body": "able proceed bug similar issue match function found none solved added empty handler incase method returns promise subscribe incase method returns observable", "d": "5/2018"}, {"body": "thing behaviour seeing documented methods nt make request subscribed nt actually query params", "d": "5/2018"}, {"body": "thing happens project class typescript import injectable angularcore import httpclient httpheaders httpparams angularcommon import observable rxjsobservable const backendpaginationlimit injectable class make requests alignak backend injectable service export class backendclient token string url string param httpclient http http client requests constructor public httpclient thisupdatedata update data backend link url link token private updatedata thistoken localstoragegetitem token thisurl localstoragegetitem url get http function param string endpoint endpoint request param httpparams params http parameters request param httpheaders headers http headers request returns observable observable object private get endpoint string params httpparams headers httpheaders observable thisupdatedata headers null headers new httpheaders set accept applicationjson set authorization thistoken return thisurl endpoint headers params return host data given endpoint param string endpoint endpoint request default host returns observable observable object public gethosts endpoint host observable let params new httpparams set jsonstringify istemplate false set maxresults jsonstringify backendpaginationlimit test typescript import testbed gettestbed angularcoretesting import httpheaders httpparams angularcommon import httpclienttestingmodule httptestingcontroller angularcommon import backendclient clientservice describe backendclient service gt let injector testbed let service backendclient let httptestingcontroller beforeeach gt aftereach gt get hosts backend gt const dummyhosts items hosts list const dummyparams new httpparams append jsonstringify istemplate false append maxresults jsonstringify fix comment help solve problem error output", "d": "5/2018"}, {"body": "another solution works", "d": "5/2018"}, {"body": "algorys downside latter approach dependent order query parameters added url nt think guaranteed building url object probably nt relied obviously one query parameter nt problem nt scale suggested checking url without query params validating separately", "d": "5/2018"}, {"body": "eta fix workaround", "d": "5/2018"}, {"body": "experienced upgraded stopped working import fadeinoutanimation sharedanimationsfadeinoutanimation import sidenavanimations sidenavanimations line throws please include either browseranimationsmodule noopanimationsmodule application const animations sidenavanimationsconcat fadeinoutanimation component selector appsidenav templateurl sidenavcomponenthtml styleurls sidenavcomponentscss providers sidenavservice animations animations fixed also calling function stopped working throws runtime typeerror read property type null visitdslnode transition webaberta lt gt webfechado withanimatechildren animate animationtime easeinout export function withanimatechildren animations return group query animatechild optional true animations transition webaberta lt gt webfechado group query animatechild optional true animate animationtime easeinout throws compile time error template compile sidenavcomponent function expressions supported decorators sidenavanimations const withanimatechildren function withanimatechildren animations animationmetadata animationgroupmetadata return group query animatechild optional true animations", "d": "5/2018"}, {"body": "see comments", "d": "5/2018"}, {"body": "matsko assuming feature interest anyone despite something really required fully take advantage animations introducing params set run time abandon angular animations due lack response used better reactivity angular team bad", "d": "5/2018"}, {"body": "need feature well somewhat complex component need use two places slight variations handled except one two locations needs animate duplicating without animations seems excessive next thought extend component template style diff animation amp selector update worked fine cause needed distinct animation durations variable would still need feature make code less janky seeming", "d": "5/2018"}, {"body": "codestothestars sorry took respond please put together reproduction investigate", "d": "5/2018"}, {"body": "sure thing never used stackblitz nt know typical protocol sharing edit link point stackblitz project still using angular original bug report noticed issue appeared nonexistent using", "d": "5/2018"}, {"body": "unfortunately ca nt change around current angular perhaps including new lifecycle hook future handle would solution", "d": "5/2018"}, {"body": "consolidating issue", "d": "5/2018"}, {"body": "docsareafilestructure", "d": "5/2018"}, {"body": "brandonroberts hi would favor recheck triage nt find doc wrong changed feature request add doc output ngc please confirm clarify thanks tbosch hi sorry sat long housekeeping", "d": "5/2018"}, {"body": "api reference pages contain label top page api deprecated mentioned also contain explicit section deprecation notes hope changes meet needs please feel free open new issue make deprecation easier clear thanks", "d": "5/2018"}, {"body": "tour heroes tutorial updated use cli instead npm serve tutorial uses cli ng serve command closing issue resolved thank feedback", "d": "5/2018"}, {"body": "got problem problem chrome solution", "d": "5/2018"}, {"body": "closing style guide correct keeping open consider implementation toh tutorial thanks everyone", "d": "5/2018"}, {"body": "docsareaupdating docsareapackages", "d": "5/2018"}, {"body": "fixed", "d": "5/2018"}, {"body": "still occurring angular updates getting status code error addition", "d": "5/2018"}, {"body": "also issue code handling data using map catch methods removed issue solved", "d": "5/2018"}, {"body": "make sure import path case matches actual file path case got error myusercomponent class shown note case import path letters lower case actual file name myusercomponent myusercomponentcomponentts note u c upper case changed import statement following error disappeared", "d": "5/2018"}, {"body": "anandmurali thanks tip issue using barrel file import paths irrelevant used autocomplete feature vs code make sure paths correct", "d": "5/2018"}, {"body": "confirmed yet get mine work either", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "current status ngnoform information included api reference ngform search results ngnonbindable putting api reference backlog", "d": "5/2018"}, {"body": "think remaining summary update clear host view case template appappcomponentts hosts anything rendered", "d": "5/2018"}, {"body": "igorminar update", "d": "5/2018"}, {"body": "please add functionality next version would great source request body may using angular version also facing problem", "d": "5/2018"}, {"body": "hi news", "d": "5/2018"}, {"body": "try", "d": "5/2018"}, {"body": "use rxjs similar like", "d": "5/2018"}, {"body": "artuska produce reproduction would like look please add stackblitz minimal repro", "d": "5/2018"}, {"body": "since reproduction added last week closing issue still problem please create new issue reproduction included", "d": "5/2018"}, {"body": "using menu avbentem shows toggling angular language service applying changes resolves issue editor", "d": "5/2018"}, {"body": "closing repro provided", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "gkalpak chances getting merged angular", "d": "5/2018"}, {"body": "nope sorry smiley new features nt get backported old versions current stable grin", "d": "5/2018"}, {"body": "seem resolved tutorial updated use httpclientmodule httpclient references httpmodule may need updates current entrycomponentsmd bootstrappingmd testingmd guide sample code also demonstrates testing legacy httpmodule appmodel upgrademd upgrading angularjs angular", "d": "5/2018"}, {"body": "probably need engineering input best practice upgrading angularjs", "d": "5/2018"}, {"body": "someone tell solutions code working fine local server move hosting server following error arises error provider e e ethrowornull egetbykeydefault egetbykey eget wo mo wo versions angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router tscwrapped angularcdk angularcli angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack packagejson name cemsdemo version license mit scripts ng ng start ng serve port host open build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter ngidlecore ngidlekeepalive nickylenaersngxscrollto typesjquery corejs firebase fontawesome intl ngxloading ngxmydatepicker ngxpagination rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript", "d": "5/2018"}, {"body": "fixed problem internet nt seem explain much going problem angular core file using angular core", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "moved ngpackagr long time ago repo nt issues since nt realize anyone still looking sorry", "d": "5/2018"}, {"body": "muhammadzaidse facing problem solve", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "docsareaquickstart", "d": "5/2018"}, {"body": "keeping open recheck readmemd cliquickstartzip downloaded today says project generated angular cli version packagejson looks like updated", "d": "5/2018"}, {"body": "closing one examples working correctly opened new issue track removal outdated readme provided zip file", "d": "5/2018"}, {"body": "using angular problem", "d": "5/2018"}, {"body": "moved routerlinkactive active li list item instead anchor element fixed keep anchor element nt go active click somewhere else selecting", "d": "5/2018"}, {"body": "wtf still present bug closed nt care resourcetype text blob json always parses response", "d": "5/2018"}, {"body": "docsareaangularjsupgrade", "d": "5/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "5/2018"}, {"body": "chance fixed fixed", "d": "5/2018"}, {"body": "facing problem even ngondestroy dom accumulating please share solution plunkr", "d": "5/2018"}, {"body": "thanks baggersio noted feature request well docs issue think found fix please send pr take look", "d": "5/2018"}, {"body": "hello anything update", "d": "5/2018"}, {"body": "sure thanks reminder hiepxanh update angular angular universal ngrx tsickle switched bazel build tool ship bazelbuilt artifacts npm met couple enterprise users already adopted bazel angular projects angular material almost ready switch well one bug fix working revamp sass rules bring alignment googleinternal usage ngconf last month two presentations love ejected handson full stack development bazel nx new features rule bundles angular library distribution npm using angular package format codesplitting lazyloading production mode see api documentation nodejs rules typescript rules bazel rule typechecking usage data using protocol buffers schemacodegen based ngconf workshop see", "d": "5/2018"}, {"body": "thank much lot information enjoy like favorite movie series waiting team full release", "d": "5/2018"}, {"body": "someone brave writed able write article move existing cli project lazy load module bazel build system", "d": "5/2018"}, {"body": "istiti please see new features part alexeagle comment linked looking alex example repository maybe also help get started please keep mind bazel still might breaking changes whereas cli setup work box", "d": "5/2018"}, {"body": "martyganz obviously already checked months ago thanks still scope move cli project right wait", "d": "5/2018"}, {"body": "looks like universal issue based info provided", "d": "5/2018"}, {"body": "import httpheaders angularcommon const header contenttype applicationjson accesscontrolallowheaders contenttype accesscontrolallowmethods get accesscontrolalloworigin const new httpheaders header return headers", "d": "5/2018"}, {"body": "seems reconciliation already available angular sure thing changed last months since issue created", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "odairto please let know need put code snippet provided iis", "d": "5/2018"}, {"body": "kunalkakkad webconfig web application", "d": "5/2018"}, {"body": "case digest already started zonejs second one digest started scheduler failed digest already progress error gkalpak could please explain checking root phase hide error", "d": "5/2018"}, {"body": "gkalpak could please explain checking root phase hide error mean multiple triggered simultaneously often due misconfigutration programming error", "d": "5/2018"}, {"body": "mean called one place app use ngupgrade one logic project call otherwise need spend lot energy control circumstances call believe much better add little logic make calling little smarter public method everyone use safely possible use something like sorry wrote nonsense enough technical knowledge would like understand reasons current implementation", "d": "5/2018"}, {"body": "mean digest called one place app use ngupgrade one logic project call digest really generally angularjs takes care calling cases need call mainly integrating nonangularjs serviceswidgets need integrate cycle get inside likely programming error ie calling somewhere nt find legit usecase triggered inside would consider adding check nt found one yet", "d": "5/2018"}, {"body": "hi jasonaden closed open item tracked maybe implemented thanks", "d": "5/2018"}, {"body": "closing resolved still relevant please open new issue", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "found way hack const myanimation thisbuilderbuild thisdataanimations let player myanimationcreate thisviewrefelementnativeelement", "d": "5/2018"}, {"body": "looks like addressed recently worked tutorial everything seemed work correctly time overlooked something still problem please open new issue thanks", "d": "5/2018"}, {"body": "docsareaerrormessages", "d": "5/2018"}, {"body": "adding docsapi aio components solution could involve areas", "d": "5/2018"}, {"body": "docsareaperformance docsareaoptimization thanks suggestion added label fixed ivy keep track dependency wo nt fixed ivy details affected ivy definitely something consider part ivy", "d": "5/2018"}, {"body": "mhevery igorminar stephenfluin manughub fyi", "d": "5/2018"}, {"body": "guy help", "d": "5/2018"}, {"body": "strulle sorry taking look could please create new demo use debugging tools figure", "d": "5/2018"}, {"body": "closing please reopen persists", "d": "5/2018"}, {"body": "exactly case virtually impossible test onpush component without making dummy outer component quite annoying general issue seems impossible acquire changedetectorref instance outside component", "d": "5/2018"}, {"body": "submitted new bug related demo app looking insights", "d": "5/2018"}, {"body": "hi guys like thank curtisl solution worked started using custom encoder anyone suggest workaround allows clone httpparams along custom encoder", "d": "5/2018"}, {"body": "unfortunate issue documentation command documentation says url either string urltree nt say ignores looks neither actually modify url command operate create new url tree internally calls new url tree created task get sorted either deprecating providing correct api surface area least clarifying documentation", "d": "5/2018"}, {"body": "hie recurring error console first vscode ng serve chrome console search tried may way two soved issue please include either browseranimationsmodule noopanimationsmodule application need import illustrated c srcappappmodulets import ngmodule angularcore import browsermodule angularplatformbrowser import browseranimationsmodule angularplatformbrowseranimations lt copy imports browsermodule browseranimationsmodule lt copy layoutmodule mattoolbarmodule matbuttonmodule matsidenavmodule maticonmodule matlistmodule note fails solve err c packagejson remove angular change look like delete nodemodules folder run terminal", "d": "5/2018"}, {"body": "problem happening ngif inside animation true value animation hidden removing ngif solved errors", "d": "5/2018"}, {"body": "related issue", "d": "5/2018"}, {"body": "missing repro demonstrating bug closing", "d": "5/2018"}, {"body": "know almost year since closed think could improved see default value let changed byxor says config bit complex want take apart like nt method defined like following", "d": "5/2018"}, {"body": "pretty much mine declared except responsetype response type determine type passed wrapper method return type caller ask throw error something like", "d": "5/2018"}, {"body": "kapunahelewong hi might something consider update template syntax", "d": "5/2018"}, {"body": "workaround change ngif ngshow leave elements dom query elements reset submit model hidden", "d": "5/2018"}, {"body": "nonissue ivy", "d": "5/2018"}, {"body": "understand correctly summary could clear areas doc aot docs router guide api ref urlmatcher clipped thread use exported consts aot use functions even exported calculate route however use exported arrays objects map paths think ca nt provide route path variable function using way case aot runtime app throws error yes", "d": "5/2018"}, {"body": "jenniferfell sentences contradictory use variables throw exception variable must exported summary wherever ngmodule config including routermodule translatemodule use exported variables functions case urlmatcher use function calculate value", "d": "5/2018"}, {"body": "totally agreeing atoddgeoplan point", "d": "5/2018"}, {"body": "still issue", "d": "5/2018"}, {"body": "closed", "d": "5/2018"}, {"body": "please share solution plunkr using angular version still facing similar problem memory leak dom", "d": "5/2018"}, {"body": "closing obsolete repro provided", "d": "5/2018"}, {"body": "simply added worked well angular const headers new httpheaders contenttype applicationjson responsetype text text const body jsonstringify params return body", "d": "5/2018"}, {"body": "problem occurred adding text text solved", "d": "5/2018"}, {"body": "fixed angular gt never made", "d": "5/2018"}, {"body": "thanks submission released catching open issues looks like issue resolved addition hero birthday example resolved satisfaction please reopen submit new issue thanks feedback", "d": "5/2018"}, {"body": "would helpful fact angular entire app sinks single error component embarrassing", "d": "5/2018"}, {"body": "petebacondarwin jbogarthyde maybe add standard way new api templates associated style guide", "d": "5/2018"}, {"body": "tag used refer relevant guidesguide sections well related api elements recommending people use", "d": "5/2018"}, {"body": "webpack guide removed public availability docs site closing favor", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "responsetype text works well people may confusing included reference mean thank sorry english bad", "d": "5/2018"}, {"body": "issue requested reproduction going close due inactivity reproduction continues problem please create new issue including repro problem", "d": "5/2018"}, {"body": "problem optional navlist nt route use activates theses null links time looks like router sees values", "d": "5/2018"}, {"body": "try", "d": "5/2018"}, {"body": "bryanzavala first thing tried luck", "d": "5/2018"}, {"body": "issue partially resolved done resources page currently links cliangulario done main angular site masthead currently link blogangulario current blog nothing site currently redirects angulario mobileangulario change resources page currently links probably changed githubcomangularuniversal probably replace link universalangulario probably replace link materialangulario add resources page link protractorangulario", "d": "5/2018"}, {"body": "docsarearesources", "d": "5/2018"}, {"body": "jasonaden plan add new resolve amp guard mechanism", "d": "5/2018"}, {"body": "sure noone else pointed apparently fixed angular means introducing httpinterceptinghandler lazily loads interceptors avoids circular dependency", "d": "5/2018"}, {"body": "example httpinterceptinghandler usage", "d": "5/2018"}, {"body": "supposed use class part public api simply upgrade version keep using httpinterceptor class", "d": "5/2018"}, {"body": "see says bug fixed however flush following instead object get string using angular resolved got reintroduced", "d": "5/2018"}, {"body": "maybe using wrong ie hard tell without actual reproduction", "d": "5/2018"}, {"body": "docsareatutorial", "d": "5/2018"}, {"body": "tutorial example updated resolves issue open new issue still relevant", "d": "5/2018"}, {"body": "idea within docs scope might want include note box related resources list end links", "d": "5/2018"}, {"body": "since angular longer rely issue longer relevant moving forward", "d": "5/2018"}, {"body": "closing obsolete", "d": "5/2018"}, {"body": "got error angular", "d": "5/2018"}, {"body": "glebmachine could provide minimal production issue", "d": "5/2018"}, {"body": "definitively completely agree daniel completed reactivated case stackoverflow figure gain control mocking router incl events baked even exploring way daniel proceed comes raise failure karma", "d": "5/2018"}, {"body": "kapunahelewong hi sure still apply wip update template syntax putting radar thanks", "d": "5/2018"}, {"body": "new looks like first step toward feat request made allowing us define service gets provided part service metas instead inside modulescomponents providers proposal adding new value use providedin also common use case would probably service use subscribing observables inside components get life cycle observables", "d": "5/2018"}, {"body": "thought far possible first concept di think component normal directive root element specific view technically instead still wrong injection scope directive host element instead even api looks good want exact opposite behavior works fallback option would used token already provided want used first even ignore normal providers even though technically achievable almost require redesign beginning would like write unit tests clearly test elementspecific service mock elementspecific service test directive let integration tests definitely option given service used directives angular restrict lifecycle hooks even could say nt need others would still make feature request long possible difference elementspecific service dynamic directive element thing different names", "d": "5/2018"}, {"body": "also would like see amp functions besides since like keyvalue pairs eg instead want help add code archive array use", "d": "5/2018"}, {"body": "someone explain still issues usecase nt work two items map", "d": "5/2018"}, {"body": "lordgreg issue immutable use returns new instance read info also fyi able pass object methods", "d": "5/2018"}, {"body": "cddelta thank response however already includes parameters would expect output previous params new instead previously used variable includes make sense course usecase would make sense find single output proper params string yes", "d": "5/2018"}, {"body": "lordgreg design case try like", "d": "5/2018"}, {"body": "news regarding number boolean support end using excessive convert utils", "d": "5/2018"}, {"body": "youdz carusog sorry letting sit long past returning open issues yes welcome help documentation still interested anything help get started", "d": "5/2018"}, {"body": "hi jenniferfell thanks support guide guidelines writing documentation", "d": "5/2018"}, {"body": "news", "d": "5/2018"}, {"body": "facing issue updates approutingmodule detailsmodulets initially click details approutingmodule detailsmodule gets load detailscomponent gets redirect prodtype default page displays prodtype child issues point giving result parent instead child empty path added lazyload explanation would appreciatedthank", "d": "5/2018"}, {"body": "seem fixed still type unions still working expected templates", "d": "5/2018"}, {"body": "notice open issue points possible cause plunk example ms issue demonstrates events fired input placeholder set similarly issue describes problem example placeholder set", "d": "5/2018"}, {"body": "seanprashad still interested working", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "find solution problem", "d": "5/2018"}, {"body": "closing year update seems like simple fix functionality already exists", "d": "5/2018"}, {"body": "closed discussion nt resolved", "d": "5/2018"}, {"body": "sgentile follow one", "d": "5/2018"}, {"body": "page titles still problem nav title angular dependency injection page title angular dependency injection nav title di action page title dependency injection pr address titles larger organization issues smaller pr could submitted address titles making second one dependency injection action match nav filename", "d": "5/2018"}, {"body": "closing resolved live example downloadable examples available end forms validation page resolved satisfaction misunderstood please reopen thanks", "d": "5/2018"}, {"body": "looks like resolved image removed remaining images seem appropriately placed live example link clear section examples resolved satisfaction please reopen submit new issue thanks feedback", "d": "5/2018"}, {"body": "alxhub hi get chance appreciate input one service worker support added add information web workers aot andor right information docs service worker thanks helping us triage", "d": "5/2018"}, {"body": "centralized erro handler handles kinds errors including receive rethrow http service like catching errorhandler error handler however redirected login page change detection triggered see updated state redirect stright http service everything works fine unexpected annoying behaviour needs fixed idea behind errorhandler good centralized place exception handling log client exceptions server etc currently scatter error handling multiple places", "d": "5/2018"}, {"body": "people working around angular cli", "d": "5/2018"}, {"body": "abierbaum nothing clispecific angular simply nt support adding styles directives cli concern", "d": "5/2018"}, {"body": "lazarljubenovic understood another project use custom webpack build based upon angularstarter easily get around using require directivestylescss relying upon webpack pick latest project though using ng cli trying find best work around thinking adding fake component module directives style component use viewencapsulationnone scss file import directive scss files total hack get styles apps use module", "d": "5/2018"}, {"body": "projects define barrel contains scss mixins calls component theme mixins module barrel theme file similar file modules theme mixins scss file srcappsharedcommonthemescss import componentscomponentonecomponentonecomponentthemescss import componentscomponenttwocomponenttwocomponentthemescss mixin appcommonsharedtheme theme include theme styles component used module include appcomponentonecomponenttheme theme include appcomponenttwocomponenttheme theme another mixin wrapper around scss file srcstylesincludescustomthemegeneratorscss imports modules themed import appsharedcommonthemescss import appsharedcorethemescss creates custom material design theme mixin custommaterialtheme theme include theme styles module used app include angularmaterialtheme theme include appcommonsharedtheme theme include appcoresharedtheme theme use mixin custom theme file added granted monolithic theme file gets job done edit use approach even nt use component themes whenif feature lands delete barrel files update directive", "d": "5/2018"}, {"body": "problem use amflex style loaded example host div component", "d": "5/2018"}, {"body": "thanks trotyl", "d": "5/2018"}, {"body": "zishanj able find solution usecase ended adding util function use regex extract required info url tried using matcher angularrouter nt helped either", "d": "5/2018"}, {"body": "sushrest old thread far remember used custom solution like mentioned last comment probably splitting string hyphen", "d": "5/2018"}, {"body": "thanks feedback resolved", "d": "5/2018"}, {"body": "hspier thank much sharing working large scale angular project experiencing memory releasing issue reloading application ie added memory hack still dose work expected ie used given demo project self releases memory destroying chrome ie please share anything useful might missed please share added remaining cleanups testabilityregistry polyfills enabled case", "d": "5/2018"}, {"body": "beesj code executed onbeforeunload triggered const subject new subject windowdestroysubject subject const destroysubscription subscription subjectsubscribe next gt const testabilityregistry testabilityregistry platforminjectorget testabilityregistry testabilityregistry applicationsclear destroy work make sure every rxjs subscription destroyed ngondestroy one finite observables subscribe httpclient request nt necessarily need garbage collected others used reference", "d": "5/2018"}, {"body": "beesj top hspier mentioned make sure also remove custom event listeners might added", "d": "5/2018"}, {"body": "hspier alexandremoore thank much quick response trying inside maints hack notifying beforeunloading moved appcomponentts wrapped inside hostlistener like hostlistener window beforeunload event reload event consolelog reloading throws error error platform different configuration created please destroy first due platform already initialized bootstrapped maints please tell managed apply hack thank reference referring gives good tips", "d": "5/2018"}, {"body": "beesj maints appcomponentts also platform set let platform platformref platformbrowserdynamic bootstrapmodule appmodule ref ngmoduleref gt platform refinjectorget platformref catch err gt consoleerror err", "d": "5/2018"}, {"body": "beesj us properly unsubscribing observables important step remediating memory errors article private wiki rules thumb developed trial error public wiki articles rules thumb unsubscribing router http need unsubscribe someobservable async need unsubscribe tying observable html using async pipe bind observable angular angular garbage collector unsubscribe observable automatically single emission use first take need unsubscribe case used want subscription execute one time infinite emission unsubscribe component ngondestroy good example reactive forms form control valuechanges subscriptions infinite added subscriptions object able add multiple subscriptions single subscriptions object much cleaner subscription object every one single subscriptions object must unsubscribed ngondestroy function component", "d": "5/2018"}, {"body": "subscriptions object using isubscription use ngondestroy thissubsforeach sub gt subunsubscribe difference could put example subscriptions object looks like thanks", "d": "5/2018"}, {"body": "gerardosabetta subscription object component requires one anytime infinite subscription add subscriptions object component ngondestroy unsubscribe subscriptions object unsubscribes subscriptions added willing bet logic thing different way", "d": "5/2018"}, {"body": "using ca nt reproduce issue seems memory leak sharereplay operator rxjs probably former versions tracked stackblitz may provide insight route uses sharereplay operator subscribes using aync pipe instances component never garbage collected route b un subscribes manually using lifecycle hooks avoid using sharereplay operator instances garbage collected route c use sharesharereplay operator subscribes using async pipe nt understand behaviour one seems subscribers able receive emitted values component correctly garbage collected route uses share operator subscribes using async pipe instances correctly garbage collected route e uses publishreplay refcount operators alternative sharereplay operator subscribes using async pipe instances correctly garbage collected", "d": "5/2018"}, {"body": "form validation example updated resolves issue open new issue still relevant", "d": "5/2018"}, {"body": "ktabarez solution essentially settimeout feels elegant quite like also made realize anything awaited pretty much like c await taskfromresult tickedmessage cheers", "d": "5/2018"}, {"body": "question asyncawait calculation property observable getting data back end might changing frequently ngclass makes necessary get using observable async pipe asyncawait nt best apprach async pipe nt best approach", "d": "5/2018"}, {"body": "trotyl mentioned aot doc updated expanded since issue opened also pr open reorganize current content move compiler options lower doc chembu let put backlog come back aot let go comment consider context current doc thanks", "d": "5/2018"}, {"body": "looks like issue resolved image removed resolved satisfaction please reopen submit new issue thanks feedback", "d": "5/2018"}, {"body": "vicb know unlikely chance could get attention far common issue see people get stuck google", "d": "5/2018"}, {"body": "closing nt heard back twois clear original description exact issue desired behaviour please open new issue context detailed description still issue", "d": "5/2018"}, {"body": "docsareacurrency docsareaupdating thanks released getting around closing open loops apologize letting sit introduced refers blog posts announcements new features announcements link docs new features try remember also mention major documentation changes tied code changes regarding documentation explicitly new changed doc outside changelogmd looks like wardbell started address request awesome saw issue discussion opened issue need finish resolving info arch doc process content aka go keep current related issue", "d": "5/2018"}, {"body": "closing repro provided since jun", "d": "5/2018"}, {"body": "photopaul suggestion using moving away router state single source truth considered last resort", "d": "5/2018"}, {"body": "absolutely right open working suggestions", "d": "5/2018"}, {"body": "closing duplicate", "d": "5/2018"}, {"body": "old image removed keeping open feature request new image one vuejs docs filename", "d": "5/2018"}, {"body": "going close resolved looks like improvements made last year made changes nav title upgrading angularjs angularjsangular concepts page title angularjs angular concepts quick reference guide helps transition angularjs angular mapping angularjs syntax equivalent angular syntax nav title upgrading angularjs upgrading instructions page title upgrading angularjs angular guide describes builtin tools efficiently migrating angularjs projects angular platform piece time", "d": "5/2018"}, {"body": "issue seems abandoned without reproducible instruction closing issue reproducible instructions please file new issue", "d": "5/2018"}, {"body": "perhaps similar approach done using could work related", "d": "5/2018"}, {"body": "looks like issue fixed closing", "d": "5/2018"}, {"body": "packtpartner stephenfluin come resolution", "d": "5/2018"}, {"body": "docsarearesources", "d": "5/2018"}, {"body": "resolution issue getting problem windows running getting ng recognized c npm install angularcli g c c angularclibinng angularcli postinstall c angularcli node binngupdatemessagejs npm warn optional skipping optional dependency fsevents nodemodules angularclinodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch angularcli updated package", "d": "5/2018"}, {"body": "filename looks like fix started", "d": "5/2018"}, {"body": "well guess nearly year closed faced thing sometimes click works sometimes nt even weird click working part app click home button android device tap chrome come back left click works suddenly updating cli building seemed fix everything", "d": "5/2018"}, {"body": "could related", "d": "5/2018"}, {"body": "trotyl thanks doublechecked rollupconfigjs longer mentioned docs exist examples folder closing", "d": "5/2018"}, {"body": "upgraded still see issue issue happens leaving route one lazy loaded module heading route another lazy loaded module component always null instance calling candeactivate super consistent load modules hitting candeativate everything works great try create minimalistic repro start new ticket time moment", "d": "5/2018"}, {"body": "happened option", "d": "5/2018"}, {"body": "also facing problem using angularfirebase appeared nohwere already tried deleting nodemodules folder without results packagejson name ionictesttabs version author ionic framework homepage private true scripts clean ionicappscripts clean build ionicappscripts build lint ionicappscripts lint ionic build ionicappscripts build ionic serve ionicappscripts serve dependencies angularanimations angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic firebaseapp ionicnativecore ionicnativefirebase ionicnativekeyboard ionicnativesplashscreen ionicnativestatusbar ionicstorage bootstrap cordovaandroid cordovabrowser cordovaplugindevice cordovapluginfirebase cordovapluginionickeyboard cordovapluginionicwebview cordovapluginsplashscreen cordovapluginwhitelist firebase fontawesome ionicangular ionicpluginkeyboard ionicons promisepolyfill rxjs swtoolbox zonejs devdependencies ionicappscripts typescript description ionic project cordova plugins cordovapluginfirebase ionicpluginkeyboard cordovapluginwhitelist cordovaplugindevice cordovapluginsplashscreen cordovapluginionicwebview cordovapluginionickeyboard platforms browser", "d": "5/2018"}, {"body": "dennisrauscher get error every common browser", "d": "5/2018"}, {"body": "although solution ecloud helped destroy components thus avoid subscription leak issue one issue aggravated using customroutereusestrategy instances components linger memory even components destroyed example end multiple instances herodetailcomponent created hero associated route issue aggravates workaround help atleast tone issue level nt use customroutereusestrategy", "d": "5/2018"}, {"body": "worked onroutechange thisroutelistener thisroutereventssubscribe event gt ngondestroy thisroutelistenerunsubscribe", "d": "5/2018"}, {"body": "bug still exists using methods subscribing router events point still fires twice user changes hash portion url event shows initial navigation change show second one", "d": "5/2018"}, {"body": "gkalpak hey ideas downgrade angular angularjs downgradecomponent resolves component via componentfactoryresolveresolvecomponentfactory add angular directive entrycomponents downgradecomponent method ca nt resolve", "d": "5/2018"}, {"body": "possible order able upgradedowngrade something needs whole element contents ie component", "d": "5/2018"}, {"body": "gkalpak okay thank downgrade angular directive angularjs directive want downgrade also wrapper component simple block applied directive ngcontent inside downgrade component using desperate move worked anybody needs", "d": "5/2018"}, {"body": "another workaround proposed nt tried makes sense", "d": "5/2018"}, {"body": "seems like configuration issue unrelated angular", "d": "5/2018"}, {"body": "getting issue forgot add component decorator component selector something templateurl somrthinghtml styleurls somethingcss adding decorator issue solved", "d": "5/2018"}, {"body": "yeah published update", "d": "5/2018"}, {"body": "example angular", "d": "5/2018"}, {"body": "sandangel mean simply everything everything checked plans beginning thread really looking forward single application think one important things went linked reached still says internationalize aot compiler must prebuild separate application package language serve appropriate package based either serverside language detection url parameters possible single application multiple languages yet", "d": "5/2018"}, {"body": "mrcroft looks like runtime still work progress read like options one bundle localizations", "d": "5/2018"}, {"body": "working hello world new renderer ivy since ivy ready prime time wait unfortunately", "d": "5/2018"}, {"body": "ocombe unless nt ivy production probably around runtime translations correct", "d": "5/2018"}, {"body": "ocombe hello world ivy stuff publicly available would cool try understand new", "d": "5/2018"}, {"body": "fetis", "d": "5/2018"}, {"body": "fetis yes feloy yes simple hello world minimal find tests refactoring extraction", "d": "5/2018"}, {"body": "ocombe trying implement application wherever read see need one messagesxlf file per language would nt become overhead maintain considering complex applications various customer facing screens etc looking see breakdown messages file per component per module supported already", "d": "5/2018"}, {"body": "sticklerv file transport strings translations software nt consider translate manually", "d": "5/2018"}, {"body": "see actual text different languages though need manage text manually contrast translators", "d": "5/2018"}, {"body": "sorry little lost based original documentation srcappappcomponenthtml english text messagesfrxlf file french text auto generated advisable touch want appcomponenthtml rendered using french text instead english would specify french messages bonjour etc", "d": "5/2018"}, {"body": "sticklerv really offtopic please create question stackoverflow happy answer", "d": "5/2018"}, {"body": "please discuss topic thanks question sticklerv one file per module component possible right might future list things working right", "d": "5/2018"}, {"body": "plans support route translations", "d": "5/2018"}, {"body": "sorry already answered translations js possible version still templatesonly", "d": "5/2018"}, {"body": "still possible ivy nt ready", "d": "5/2018"}, {"body": "one question intentfunctionality runtime means essentially able select language runtime flip without reloading app functionality old angularjs mean something else entirely", "d": "5/2018"}, {"body": "reload app change language current build provide translations replace strings bundle code meaning bundle localized runtime means translation files loaded app starts build time like right able lazy load translation files app starts means bundle separated language get one bundle app also choose one bundle per language bundle language file app like right avoid delay required lazy load translations file one case extra http request case nt think big enough difference justify one bundle per language advantages runtime detect language client side lazy load translations file want code languageindependent get one bundle languages libraries compatible well since load translations runtime everything need provide service translations code well templates could split translations per module probably available first disadvantages translating runtime small cost translations extracted transformed html nodes hopefully nt notice ivy lot faster current renderer app bootstrap delayed time takes lazy load translations bundle little bit bigger bundle translations add serializers app bundle able read translations lot code could probably precompile translations kind json avoid nt decided yet theoretically could change language without reloading whole app recreate existing components templates generated component created could bind service template instead using attributes would updated change language would possible write library works like ngxtranslate uses angular internally allows change language runtime would use memory keep templates sync language like case ngxtranslate probably write library like", "d": "5/2018"}, {"body": "also folks think changes one language another may small may large say going english spanish might small english say chinese arabic large clarifiy languages text may also need design different layout accommodate language rules alignment left right right left details real world use would expect app app load language detection step lead loading right resources layouts", "d": "5/2018"}, {"body": "ocombe thank much clarifying implemented current angular within application hit snag changesunknown requirements also using library conjunction help bridge current gap multiple bundles slight annoyance work around easily enough currently snag particular potential one component child components displayed language different currently used language frankly uncertain yet help accomplish wanted message upcoming changes make sure much information possible making pivots", "d": "5/2018"}, {"body": "nt plan support apps translated multiple languages time might possible future load translations module would side effect architecture something specifically tried achieve", "d": "5/2018"}, {"body": "eta ivy runtime understand perfectly case need know given timeframe current project wait need start using one current solution postpone migration runtime future version", "d": "5/2018"}, {"body": "wo nt try give exact time frame every time tried wrong wo nt available beta", "d": "5/2018"}, {"body": "problem know estimations always wrong think easier migrate current runtime ngxtranslate", "d": "5/2018"}, {"body": "probably current write version ngxtranslate uses internals angular possible sure yet", "d": "5/2018"}, {"body": "hi tried traverse thread understand current state ngx translate code currently viable workaround single app dynamic loclalization", "d": "5/2018"}, {"body": "ca nt find referenced doc anymore updated anyway update rxjs close issue reason still needed let open new issue", "d": "5/2018"}, {"body": "looks like resolved following sections addedupdated seem address issues closing additional corrections clarifications required please open new issue thank", "d": "5/2018"}, {"body": "tried address minmax validation separately following trotyl comment issue closed duplicate means want stick approach use existing attributes seems approaches nt need create breaking change example additional module could created something adds directives existing code would affected anyone wanted use could easily add support alternatively directives could added default flag turn would breaking change anyone significantly affected could easily fall back default behavior", "d": "5/2018"}, {"body": "foxandxss wardbell hi took look think lifecycle hooks doc probably updated since opened seems explicit ngaftercontentchecked agree work thx", "d": "5/2018"}, {"body": "offending line nt seem anymore", "d": "5/2018"}, {"body": "still issue docs refined labels accurate triageprioritization filename", "d": "5/2018"}, {"body": "try one builds see fixed problem posted build sorry delay syncing latest angular master codebase took minute europe part focused things aside determination using angular versus framework company nt based outliers functionality rather focused philosophy solution set need platform quite complete easy enough things hopefully native angular router soon amp pick feature", "d": "5/2018"}, {"body": "using issue directly hitting guard returns false route child guard false return hit directly send activate fallback land blank page approutingmodulets another note matthewerwin love angular status map framework eg forms gt production ready completecritical bug free routing gt production ready", "d": "5/2018"}, {"body": "closing repro provided obsolete", "d": "5/2018"}, {"body": "six hours debugging vote danish characters flaw case letter \u00f8 used night yesterday digging code figure totally similar fields always dirty others internet explorer lets honest debugging angular dev mode internet explorer fun first today colleague noticed difference field placeholder leverand\u00f8rnr changing danish translation fixed issue logging english user fixed issue anyone decent workaround need wait angular material team pick nearly danish customer base quite critical us", "d": "5/2018"}, {"body": "closing repro provided", "d": "5/2018"}, {"body": "filename", "d": "5/2018"}, {"body": "closing doc example updated point use parammapsubscribe instead code ngoninit void get hero param changes thisrouteparammapsubscribe pmap gt thisgethero pmapget id filename", "d": "5/2018"}, {"body": "patrickhousley thank keeping plunker uptodate increase priority issue honest sure able pull increased priority one first gets looked issues added current work", "d": "5/2018"}, {"body": "thanks jasonaden", "d": "5/2018"}, {"body": "app tutorial section rewritten since issue opened appendix take slow longer exists doc mention getheroesslowly closing resolved", "d": "5/2018"}, {"body": "used solution project stopped working universal version confirmed striptraillingslash returning still tries navigate removing slash universal ideas far tell browser version hydratation snippet maints overwritting function executed works fine server side also works running application locally without ssr", "d": "5/2018"}, {"body": "docsareauniversal docsareawebpack", "d": "5/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "5/2018"}, {"body": "seems still valid question marked stable marked experimental", "d": "5/2018"}, {"body": "igorminar respond engineering team thanks", "d": "5/2018"}, {"body": "news issue", "d": "5/2018"}, {"body": "refer app module child components", "d": "5/2018"}, {"body": "closing repro provided", "d": "5/2018"}, {"body": "plunkr says hello world ca nt put actual code similar problem parent route id redirecting nt going work child route nt context redirect parent become redirect immediately child retaining id see full config", "d": "5/2018"}, {"body": "also problem case add tot component decorator component obscure way disappeared", "d": "5/2018"}, {"body": "closing issue based reproduction provided original issue issue persists please create new issue reproduction", "d": "5/2018"}, {"body": "update", "d": "5/2018"}, {"body": "notice included release", "d": "5/2018"}, {"body": "think document already browser api simply query dom addeditremove link items want nt even need renderer anymore rafaas", "d": "5/2018"}, {"body": "another approach handle anything placed head without verbose services cover options simple directive like ts directive selector movetohead export class movetoheaddirective implements ondestroy oninit constructor private renderer private elref elementref inject document private document document ngoninit void thisrendererappendchild thisdocumenthead thiselrefnativeelement thisrendererremoveattribute thiselrefnativeelement movetohead ngondestroy void thisrendererremovechild thisdocumenthead thiselrefnativeelement usage html way use data bindings stuff treat etc like element template", "d": "5/2018"}, {"body": "also facing issue uncaught error unexpected value http imported module appmodule please add ngmodule annotation syntaxerror arrayforeach compilemetadataresolverpushnodemodules jitcompilerpushnodemodules jitcompilerpushnodemodules jitcompilerpushnodemodules compilerimplpushnodemodules platformrefpushnodemodules objectsrcmaints", "d": "5/2018"}, {"body": "trotyl recommanded use programatically focus angular", "d": "5/2018"}, {"body": "recommanded use wizardpc never said platformindependent action never provide kind abstraction", "d": "5/2018"}, {"body": "recommended way focus element", "d": "5/2018"}, {"body": "believe provides methods like setproperty amp setattribute work done older rendererinvokeelementmethod check docs", "d": "5/2018"}, {"body": "could put example please", "d": "5/2018"}, {"body": "alfupe check link detailed examples examples", "d": "5/2018"}, {"body": "nothing examples api allows invoking focus", "d": "5/2018"}, {"body": "closing workaround attached", "d": "5/2018"}, {"body": "jlanglois could share example showing", "d": "5/2018"}, {"body": "clients javascript export class clientsserviceagent export namespace clientsserviceagent injectable export class httpservice implements ihttpservice constructor inject httpclient httpclient optional inject clientsbaseurl baseurl string clients angular angularcli builds aot cli usable umd packaged npm repository ngpackagr", "d": "5/2018"}, {"body": "jlanglois thanks example works like charm nt able make work nested namespaces though tried exporting fake clasess like guess exporting inner classes inside namespace takes original problem", "d": "5/2018"}, {"body": "opetrator without map", "d": "5/2018"}, {"body": "chathurangakup guess problem u even able solve issue", "d": "5/2018"}, {"body": "sure whether related found official document using chain logic look solution solve", "d": "5/2018"}, {"body": "try use instead http constructor remove operator map return may solve problem", "d": "5/2018"}, {"body": "met problem angular cli rxjs solved problem replacing former code latter code typescript import map rxjsoperators thismyobservable pipe map data gt update guide reference", "d": "5/2018"}, {"body": "manartaha using httpclient angular core instead http", "d": "5/2018"}, {"body": "thanks vermouthyr link useful", "d": "5/2018"}, {"body": "vermouthyr holy moly thanks man driving nuts", "d": "5/2018"}, {"body": "nice man saved time", "d": "5/2018"}, {"body": "vermouthyr thank", "d": "5/2018"}, {"body": "thanks crossrt", "d": "5/2018"}, {"body": "engemasa instead using install package rxjscompat fix issue", "d": "5/2018"}, {"body": "installed rxjscompat npm install rxjscompat also used code import http headers response angular import rxjsrx import map rxjsoperators import observable rxjsobservable worked", "d": "5/2018"}, {"body": "run test passing locally failed sometimes ci pipeline used together whenstable block run time expectation simply skipped solution use asyncawait instead async", "d": "5/2018"}, {"body": "thanks hmoog solution fixed disappearing child routes got new issue failed execute animate element partial keyframes supported happens switch parent routes animation yet fully completed angular", "d": "5/2018"}, {"body": "issue still present angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular schematicspackageupdate typescript webpack", "d": "5/2018"}, {"body": "also getting issue", "d": "5/2018"}, {"body": "think somthing webpack whenever change version everything works fine", "d": "5/2018"}, {"body": "two linked plunker issue open stackoverflow link marked resolved issue waiting reproduction long time therefore going close issue anyone continues see problem please create new issue simple reproduction shows problem", "d": "5/2018"}, {"body": "closing resolved angular", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "nt forget add cors library var corsoptions origin optionssuccessstatus legacy browsers various smarttvs choke appuse cors corsoptions", "d": "5/2018"}, {"body": "kriscoleman similar issue work way", "d": "5/2018"}, {"body": "dzmitryshylovich try enumerable seems gettersetter created prototype instead object nt work objectkeys used patchvalue", "d": "5/2018"}, {"body": "generally defeats purpose route guards async dependencies imagine usecase typescript loaded root app router const approutes routes path resolve config configresolver user userresolver children path error component errorcomponent path somewhere loadchildren appsomewheresomewheremodule somewheremodule path elsewhere loadchildren appelsewhereelsewheremodule elsewheremodule path redirectto somewhere path redirectto loaded fictional somewhere router const somewhereroutes routes path resolve userworkspace userworkspaceresolver children path component workspacedetailcomponent canactivatechild workspacedetailguard children path onboarding component workspaceonboardingcomponent canactivatechild workspaceonboardingguard children path redirectto path redirectto pretty simple two relevant modules root app module lazyloaded somewhere module pardon naming bunch toplevel information resolved highestorder routes information fictional workspace resolved within somewhere module catch workspacedetailguard workspaceonboardingguard guards dependent workspace resolved parent route via userworkspaceresolver turn dependent user data loaded even via userresolver per explanations thread never work asis since guards canactivate canactivatechild etc always processed resolvers even begin work makes sense ask start loading data know user even activate xyz route strictly synchronous standpoint reason assume users information need properly guard routes make asynchronous calls apparent solution issue convert async guards resolvers work convert resolvers guards fire hierarchical order properly depend intuitive segregation duties standpoint guards meant handle authorization resolvers load data either scenarios essentially using one guards load data resolvers handle authorization backwards confusing let know misunderstanding something otherwise like reopen ticket suggest angular handle guards first resolvers follow parent child route hierarchy words guarantee parent route data resolved child route logic fires", "d": "5/2018"}, {"body": "samuelms yes correct great summary issue also hope ticket reopened", "d": "5/2018"}, {"body": "also see", "d": "5/2018"}, {"body": "nt realize original author issue closed moving track discussion guardresolver paradigm", "d": "5/2018"}, {"body": "hi new angular anyone tell access showerrorscomponent propertyfunction allother component application", "d": "5/2018"}, {"body": "run commands npm update npm install restart editor app", "d": "5/2018"}, {"body": "recently upgraded angular latest webpack multiple lazy loaded app built angular older web pack version loading angular applications latest setup im getting error nodemodules angularcore module found used fix new webpackcontextreplacementplugin piece accounts path separators nix windows angular core pathresolve dirname src resolves issue nodemodules angularcore ended new issue dirnamesrc lazy recursive module found thanks advance", "d": "5/2018"}, {"body": "thanks feedback cleanup looks like issue resolved resolved satisfaction please reopen submit new issue thanks", "d": "5/2018"}, {"body": "closing obsolete", "d": "5/2018"}, {"body": "robwormald stephenfluin either comment thread something gets addressed angular elements", "d": "5/2018"}, {"body": "santialbo imho nt need new directive leave case array check value otherwise use existing functionality", "d": "5/2018"}, {"body": "hello friends faced issue working angular js sharepoint frameworks spfx resolved performing following modifications code code editor open srcwebpartstodotodowebpartts file last import statement add following code import angular angular", "d": "5/2018"}, {"body": "looks like dzmitryshylovich branch fixing nt touched year anything help move forward app bunch forms broken ie bug kara", "d": "5/2018"}, {"body": "minimal reproduction issue form value selected expected chrome firefox edge ie", "d": "5/2018"}, {"body": "created pull request fix", "d": "5/2018"}, {"body": "please help dynamic image upload preview image particular row card", "d": "5/2018"}, {"body": "also problem ie problem happend use special characters placeholder using german language therefore got ngdirty use \u00e4 \u00f6 \u00fc \u00df placeholder think problem ie angular", "d": "5/2018"}, {"body": "news", "d": "5/2018"}, {"body": "adding request feature well using support rtl language support automatic direction flipping styles cases need use completely broken current releases angular provide background needed others interested necessary testing completion issue report sure severity inconvenient accurate full breaks anything uses together reasonable workaround works cases", "d": "5/2018"}, {"body": "tutorial updated resolved issue still affects open new issue reproduction", "d": "5/2018"}, {"body": "issue asked making entry components behave similar way services closed issue seems issues intended solve thing hope issue solved soon important feature update see nonminified code defined service register factory already used without need importing module understood correctly assume way apply similar logic component option like chunk contains loaded factory defined resolver module includes component component dependencies otherwise would cause compile time error", "d": "5/2018"}, {"body": "lucasbasquerotto use following logic load module use component types mapping string keys lt component types stored directly module", "d": "5/2018"}, {"body": "hello guys also using workaround singleton class maintains reference several lazyloaded module resolvers better way handle new version angular thanks", "d": "5/2018"}, {"body": "first time got error formgroup instead formgroup since creating new new formgroup component making f lower case fixed", "d": "5/2018"}, {"body": "want change count filterdata ie ngmodel filterdata data arrived tables example initially textbox entered experia data database experia appeared table number data displayed righthand table see picture gt number searched data however issue enter text searchtext box data filters filtered data number displayed like number searched data course number less maximum number remains gt gt number searched data even though total data displayed number used ngmodelchange thought might work nt code transactioncomponenthtml code transaction number searched data arraycount transactioncomponentts countfilter filtdata", "d": "5/2018"}, {"body": "suchetaswabhav show big description real app easy understand first look instead really trivial online sample principle instead using nt think difference spend mins look answer min", "d": "5/2018"}, {"body": "need wrote small commandline utility autotranslates files using google translate", "d": "5/2018"}, {"body": "closing update year", "d": "5/2018"}, {"body": "aulonabinaj think question different context success download file zip extension want convert filetxt pdf file original extension download original extension", "d": "5/2018"}, {"body": "tried convert nothing happens original file docx response headers console thank answer refards aulona", "d": "5/2018"}, {"body": "try share code may good people question line right file original extension docx renamed zip extension peopleexportdocs", "d": "5/2018"}, {"body": "code html code component code service code testtxt inside text lt \u0161 contenttypes lt \u0161 contenttypes u", "d": "5/2018"}, {"body": "nothing wrong service wrong renamed public downloadcsvfile id thiswsdownload id subscribe res gt consolelog res filesaversaveas res testtxt get file extension docx api renamed txt getting text try change code renamed name want original extension public downloadcsvfile id thiswsdownload id subscribe res gt consolelog res filesaversaveas res testdocx need open application support extension docx like ms word google docs example getting text similar open extension docx notepad notepad supported open docx file thank may help", "d": "5/2018"}, {"body": "thank yes problem change testdocx ok thanks", "d": "5/2018"}, {"body": "welcome glad help", "d": "5/2018"}, {"body": "also encounter problem using abstractcontrol setcontrol want patch form values received backend formarray need patch since dynamically change size create new one reassign form const emptycontrol validatorsrequired validatorsrequired validatorsrequired function patchvalue value thisformreset const newformarray thisformbuilderarray valuesomekeyforeach gt newformarraypush thisformbuildergroup emptycontrol thisformsetcontrol somekey newformarray settimeout gt thisformsetvalue value thischangedetectorrefmarkforcheck workaround posted nikitayaroshevich resolved issue", "d": "5/2018"}, {"body": "sad devs act like nt problem nt take test app see obvious would agree well nt need totally alter application make perform level browsers ie needed every single component maybe needs rethink default behavior comes components fact need apply various techniques make angular application fast including changedetectionstrategyonpush using trackby ngfor using manual manipulations changedetectorref debouncing rx streams using enableprodmode production using manual chande detection ngdocheck reduce heavy calculation course bundle app single file using onpush enabledprodmode app dreadfully slow fast chromefirefox even edge", "d": "5/2018"}, {"body": "sgentile still using ie everyone uses ie nt matter corporation person says must expense everyone else prolongs required ie support increases cost everyone else", "d": "5/2018"}, {"body": "imo naive statement nt live world dictate people use granted fortunately using ie slowly diminishing time costs departments organizations etc reality microsoft created crappy browser still stuck enough time passes required longer", "d": "5/2018"}, {"body": "sgentile meant personally sure nt naive statement also basically statement says also applies basic principle john stuart mill simply responsible behavior context others around", "d": "5/2018"}, {"body": "mlcmlapis nt control billionmillion dollar corporations decide browser use far concerned businesses decide use whatever browser decision mine job provide solution ca nt stick heads sand ignore something probably think electric cars better gasoline probably think us use metric units measure etc reality world simple response nt debate merits using ie certainly prefer chrome firefox applied features described application onpush trackby etc still least slower", "d": "5/2018"}, {"body": "sgentile sure understand words well fact also saying important fact strictly technically would change code ie make faster years old thing ca nt expect anything else thing ie works somehow least maximum", "d": "5/2018"}, {"body": "like add component user perspective componenta might require initial data configured data might always string simple truefalse value use first suggestion able pass string values even worst need pass entire object situations even dangerous modify property component might designed support changing input leading repetitive checks runtime errors component user perspective still normal input binding definition establish oneway binding property bound wo nt clear user inputs treated like initialization parameters one actual bindings leading bloated documentation maintainability issues situations common project actual reasons writing", "d": "5/2018"}, {"body": "closing repro provided", "d": "5/2018"}, {"body": "news version still", "d": "5/2018"}, {"body": "understand correctly also seeing components made inside ngfor ngcontainer nt change", "d": "5/2018"}, {"body": "let myblogid thisroutesnapshotparammapget blogid array object object blogid line working please solve", "d": "5/2018"}, {"body": "mickl worked angular black magic", "d": "5/2018"}, {"body": "please reopen bug", "d": "5/2018"}, {"body": "lost hours trying find problems implementation please fix flag bug also worked angularjs", "d": "5/2018"}, {"body": "confirm issue persists angular agree matthoneycutt labeled bug breaks usage angularmaterial kara agree labeled bug feature", "d": "5/2018"}, {"body": "problem still exist fix angular yet facing issue custom radio button control using reactiveforms", "d": "5/2018"}, {"body": "take still broken something like work edit turns passing", "d": "5/2018"}, {"body": "still buggy", "d": "5/2018"}, {"body": "maybe broken thought broken back places expected work around got complicated needed good bunch glue logic pull maybe broken thu may natcohen notifications githubcom wrote still buggy receiving commented reply email directly view github mute thread", "d": "5/2018"}, {"body": "currently way inheritance solve use cases inheritance better access parent attributes easily", "d": "5/2018"}, {"body": "chuckjaz news ivy renderer", "d": "5/2018"}, {"body": "help well", "d": "5/2018"}, {"body": "finally solved issue problem application uses hammerjs several mattooltip see link know issue application nt need hammerjs utilities dismiss works properly", "d": "5/2018"}, {"body": "powerful feature", "d": "5/2018"}, {"body": "updates", "d": "5/2018"}, {"body": "reason still nt fixed problem make warning solution adequate member core team comment", "d": "5/2018"}, {"body": "case things fine ng cli aot upgrading ng get similar error unused component actually component used service injected component many similar components constructed used way one problem one upgrading latest ng cli", "d": "5/2018"}, {"body": "turned one reference file reference wrong case indexts export components directory export datetimepickercomponent apparently ng cli restricted casing even windows ng cli bit relaxing obviously restriction good correct codebase could working well linux case sensitive default", "d": "5/2018"}, {"body": "gerichhome could provide little guide could use fixed router projects trying override router provider success", "d": "5/2018"}, {"body": "project based change seedconfigts file override systemjs config pathced file specifically changed added first line changed hope helps", "d": "5/2018"}, {"body": "facing issue tried workarounds locationforward always end breaking part navigation like reload browser navigation buttons", "d": "5/2018"}, {"body": "surprised still issue updates guys issue", "d": "5/2018"}, {"body": "got error could resolve correcting path pointed path relative folder running rollup case course different problem file crossed stage think", "d": "5/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "5/2018"}, {"body": "jasonaden maybe nt understand right bug feature request", "d": "5/2018"}, {"body": "news", "d": "5/2018"}, {"body": "rafaas whipped following declarative componentbased management solution could extended support properties import component input oninit onchanges angularcore import meta title angularplatformbrowser component selector apphelmet template export class helmetcomponent implements oninit onchanges input title string input description string input keywords string constructor private metaservice meta private titleservice title ngoninit thisupdatehead ngonchanges thisupdatehead updatehead thistitle thistitleservicesettitle thistitle thisdescription thismetaserviceaddtag name description content thisdescription thiskeywords thismetaserviceaddtag name keywords content thiskeywords todo could extended support adding dynamic og twitter tags future think component right way go reasons outlined opposed service", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "workaround similar devforey offered uses class instead could work child component", "d": "5/2018"}, {"body": "see doc amp see example", "d": "5/2018"}, {"body": "could use queryparamshandling merge solves problem", "d": "5/2018"}, {"body": "nt sorted yet seems like fairly common use case", "d": "5/2018"}, {"body": "hello rxjs first deprecated take used instead", "d": "5/2018"}, {"body": "bloarribas ca nt find source deprecated care indulge", "d": "5/2018"}, {"body": "mistake krokofant deprecated however record changed still works example", "d": "5/2018"}, {"body": "updated angular rxjs share hurdles found update fixed formgroup async validated request backend formgroup inputs validation intended performed inputs value upgrade newer versions angular rxjs validation would run correctly component would run change detection functions called ngclass directives inputs containers add hassuccess haserror bootrstrap classes update classes inputs would updated even though could assess values correct finally fixed forcing change detection validation think passing component change detector validator antipattern works validator export class serverfqdnvalidator static validateasync dataservice dataservice store store emitserverdatarequest boolean componentchangedetector changedetectorref asyncvalidatorfn", "d": "5/2018"}, {"body": "hi solutions thread nt works component changedetectionstrategyonpush unique solution works last one changedetector param elegantcorrect solution", "d": "5/2018"}, {"body": "use ng update angularcli packagejson update also getting errors error nodemodules angularmaterialautocompletetypingsautocompleteorigindts error type elementref generic nodemodules angularmaterialautocompletetypingsautocompleteorigindts error type elementref generic nodemodules angularmaterialbuttontoggletypingsbuttontoggledts error type elementref generic nodemodules angularmaterialbuttontoggletypingsbuttontoggledts error type elementref generic nodemodules angularmaterialslidetoggletypingsslidetoggledts error type elementref generic nodemodules angularmaterialslidetoggletypingsslidetoggledts error type elementref generic anyone solution", "d": "5/2018"}, {"body": "anyone confused video helped deep dive content projection eudes petonnet", "d": "5/2018"}, {"body": "filename filename webpack doc shows code examples briefly describes purpose nt connect lazy loading", "d": "5/2018"}, {"body": "docsareachangedetection", "d": "5/2018"}, {"body": "would like know issue persists anyone plunker longer works nt issue time would like close please comment issue persists", "d": "5/2018"}, {"body": "closing due lack response working repro please open new issue comes", "d": "5/2018"}, {"body": "app loads iframe query params values necessary app start properly developing locally live reload functionality disappearing query params", "d": "5/2018"}, {"body": "configurable inside route config value would also propagate children would default value simply override link like would extremely useful", "d": "5/2018"}, {"body": "canload still problem think wait canactivate parent finish nt", "d": "5/2018"}, {"body": "closing issue due inactivity issue appears addressed later release issue persists please create new reproduction stackblitz showing current state", "d": "5/2018"}, {"body": "hard finding information child inherits cds parent parent onpush would really nice clearly stated documentation", "d": "5/2018"}, {"body": "issue faced current angular cli version", "d": "5/2018"}, {"body": "injecting component activatedroute missing ps hmm router nt seem either inject fine look creating new issue one regarding nt exist already pps reloading vscode relo made error go away builds without issue", "d": "5/2018"}, {"body": "thread ignored angular team decided change prototype formcontroldirective best performant way works without visible lags best junus", "d": "5/2018"}, {"body": "tommybananas stumbled upon thread came implementation app component child works feel like hack since working around intention design hope wrong makes hesitant go direction worried depend future releases tried solution danielkucal posted take look try tomorrow use different data route need reuse need component stay data new route reflected maybe pass though sure feature still importance use case using subset routing wizard using single component multiple routes data drive view nt use component child approach components rebuild every step true cache state service flicker bit slow reconstruct components especially since steps pull google maps nt want reload multiple times open obvious suggestions missing thanks guys", "d": "5/2018"}, {"body": "tried danielkucal reuse strategy works awesome enables control want reuse simply currently seems like way go simple thanks danielkucal posting anyone else involved", "d": "5/2018"}, {"body": "reinbert agree handled router level", "d": "5/2018"}, {"body": "waiting merge least issue get final point", "d": "5/2018"}, {"body": "need store redirect url login far forced employ order access router state", "d": "5/2018"}, {"body": "temporary workaround saving url follows auth end point calls back run following code hope routerstatesnapshot added soon canload angularrouter", "d": "5/2018"}, {"body": "vvasabi burningdog hack still works angular configured test suit way able execute single spec file try execute spec files first one get passed test cases get failed following error possible workarounds available current test suit taking around min execute test cases multiple number head count resources spending much time execute test cases", "d": "5/2018"}, {"body": "project angular change way implemented hack since originally published last year could share code reproduces issue maybe people take look", "d": "5/2018"}, {"body": "vvasabi thanks responding breath lets see done code created one configuration file spec files export const configuretestsuite gt const testbedapi gettestbed const originreset testbedresettestingmodule used actual test case describe component xxxcomponent gt configuretestsuite implementation tried run single spec file fdescribe gives proper result tried run spec files one go configuration runs first spec file correctly error spec files error need data please mention comment thanks advance details angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitcore schematicspackageupdate typescript webpack error", "d": "5/2018"}, {"body": "code reproduce issue", "d": "5/2018"}, {"body": "github repo helpful fix issue need lines block hope helps", "d": "5/2018"}, {"body": "adding beforeall part get error call hooks", "d": "5/2018"}, {"body": "blacksonic idea behind hack time saved call per block recompile components complaint go away call per outermost block", "d": "5/2018"}, {"body": "info workaround ideas except", "d": "5/2018"}, {"body": "would like check one try reproduce repo", "d": "5/2018"}, {"body": "anyone planning work problem reproducing app using selenium angular", "d": "5/2018"}, {"body": "still problem angular", "d": "5/2018"}, {"body": "spacegospod sharikovvladislav could provide reproduce repo", "d": "5/2018"}, {"body": "sure run chrome open dev tools start performance monitor stop seconds observe stacktraces animation frame", "d": "5/2018"}, {"body": "fixed issue persists please log new issue", "d": "5/2018"}, {"body": "hi problem stackblitz reproducing issue asyncpipe nt rerender html tree receives new value depends change detection", "d": "5/2018"}, {"body": "may help", "d": "5/2018"}, {"body": "thanks sandangel demo shows currently work around issue super glad fixed new ivy renderer change detection start work without need zonesjs trigger change detection automatically cases zonejs really unnecessary", "d": "5/2018"}, {"body": "dalu example worked import routes urlsegment angularrouter export function exampleurlmatcher urlsegments urlsegment return urlsegments amp amp urlsegments path test consumed urlsegments posparams urlsegments amp amp urlsegments urlsegments amp amp urlsegments urlsegments amp amp urlsegments null export const exampleroutes routes matcher exampleurlmatcher component examplepagecomponent exampleurlmatcher exported function aot nt support arrow functions", "d": "5/2018"}, {"body": "using snapshot updated route parameters missing something", "d": "5/2018"}, {"body": "would nt able help see offered one solution got upvotes people downvoted offer alternative solutions explain nt sadly", "d": "5/2018"}, {"body": "find solution issue", "d": "5/2018"}, {"body": "click link working htaccess configuration able get working trying lot configurations", "d": "5/2018"}, {"body": "useing angularcli updated also nt work angular source maps located webpack nt get referenced stacktraces still pointed minified scriptsbundlejs vendorbundlejs development env beginner angular someone could explain simple english need get meaningful error messages would much appreciated", "d": "5/2018"}, {"body": "looking way apply flexlayout directives host element", "d": "5/2018"}, {"body": "getting warning angular cli warning nodemodules critical dependency request dependency expression warning nodemodules critical dependency request dependency expression angular cli node os darwin angular animations cli common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "problem", "d": "5/2018"}, {"body": "nt know state thread use case building pos system would like cashier define shipping fees choose apply free shipping using checkbox define shipping manually shipping free shipping fee field marked readonly disabled since disabled value nt appear formgroupvalue nt know appear formgroupcontrols would like mark readonly cashier ca nt change value shipping free hope clear regards", "d": "5/2018"}, {"body": "able get values even disabled ones using formgroup getrawvalue", "d": "5/2018"}, {"body": "thing adding formcontrol fly users check free shipping", "d": "5/2018"}, {"body": "hmmm agree pkozlowskiopensource like show case scenario please look gif bellow case want give user ability select address automatically using checkbox reactive form updated using method used method prevent changes user ui problem always get thing field disabled valid flag true prevent showing validation error small bar right popup also mention field even updating value disable get weird", "d": "5/2018"}, {"body": "simpler problem unsure whether need upcoming feature polyfill ocombe define structure reactive forms constants set properties form element example currently use template translate strings like would like migrate angular however since strings template seems use angular box situation looks simpler one translations need retrieved runtime though texts predefined constants could replaced compile time currently strings templates example could complex string like following one compile time string could replaced something might considered implementation", "d": "5/2018"}, {"body": "could definitely runtime could use new service pipe example transform placeholders translations", "d": "5/2018"}, {"body": "notice thread opened time shows major interest developing multilanguage sites angular simple way addressing html componentcode texts closely ocombe please nt forget send subcribers alert done understood round corner may thanks kind contributions", "d": "5/2018"}, {"body": "ocombe shall use ivy able use runtime services work old engine", "d": "5/2018"}, {"body": "ivy use since finished", "d": "5/2018"}, {"body": "thanks hard work ocombe word soon use new features ivy enabled angular compiler flag right prerelease state new features used using ivy prerelease time", "d": "5/2018"}, {"body": "yet making good progress working full time right post update available master test", "d": "5/2018"}, {"body": "thanks much ocombe many people benefiting hard work greatly appreciate", "d": "5/2018"}, {"body": "ocombe static translations ts still planned mean compile time expression replacement likely typescript transform going able plug custom ts transform pipeline without extracting", "d": "5/2018"}, {"body": "sure follow mean tinyman mean able merge translations build time like right able use translations ts code besides template translations already", "d": "5/2018"}, {"body": "ocombe mean able use translation ts via service di runtime translation mean compile time translation typescript like c preprocessor thought planned per vicb comment also support static translations today templates strings would replaced compile time better perf one version app per locale example want able write gets transpiled something like fr currently purpose use ngxtranslate custom marker extraction example need display message call translating interpolation mean need able write without calling translate service string interpolation could interpolation method icu interpolation template string would already translated get rid tranlations http request service overhead hope clarifies", "d": "5/2018"}, {"body": "describe indeed roadmap moment job", "d": "5/2018"}, {"body": "tinyman sure yet via service global function possible service also lot advantages mock tests replace also change behavior modulecomponent know internally google use closure via global function function likely replaced service compilation based global flag try see flag also used externally nt see use templates code translations", "d": "5/2018"}, {"body": "ocombe want throw thanks well super appreciate work incredibly helpful job one question way way aot compilation makes one set bundle files looking text references xlf runtime get correct string essence would need xlf file per language plus bundle files right languages aot compilation files set bundle files per languages nt know effort complexity something like would nice aot compilation set files", "d": "5/2018"}, {"body": "yes ivy runtime bundle app load translations runtime lazy load translations", "d": "5/2018"}, {"body": "ocombe incredible makes unbelievable happy thank", "d": "5/2018"}, {"body": "hi error code angular anyone help error error error uncaught promise typeerror thisroutereventsfilter pairwise function typeerror thisroutereventsfilter pairwise function new sessioncomponent createclass createdirectiveinstance createviewnodes", "d": "5/2018"}, {"body": "want get previous url navigate new page error resolve adding rxjs import functionality achieved import rxjsaddoperatorfilter import rxjsaddoperatorpairwise", "d": "5/2018"}, {"body": "santoshlodhi", "d": "5/2018"}, {"body": "glad found thread reason confirms current behavior baked due error configuration suggestions code helpful another confusing view inconsistent part params queryparams updatedmade available time set breakpoint routereventssubscribe stopped every router event check routerstate activated route snapshots well event snapshots appcomponent child component seemed like queryparams expected including root component params showed child component end route end day wound implementing resolver good fit updating state based route info documentation good pretty easy get going", "d": "5/2018"}, {"body": "updates still working duluca summarized", "d": "5/2018"}, {"body": "also facing issue", "d": "5/2018"}, {"body": "igorminar sorry bother updates issue", "d": "5/2018"}, {"body": "looks like resolved use viewchildren get querylist elements directives view dom time child element added removed moved query list updated changes observable query list emit new value view queries set ngafterviewinit callback called alxhub may close resolved", "d": "5/2018"}, {"body": "answer worked deal lazy loaded components works nonlazy loaded components well", "d": "5/2018"}, {"body": "got similar problem finally solved change ngafterviewinit ngoninit add componentrefchangedetectorrefdetectchanges", "d": "5/2018"}, {"body": "apparently issue happens android phones os angular version", "d": "5/2018"}, {"body": "problem compared current code working project code project code code angulario stackoveflow examples still working", "d": "5/2018"}, {"body": "provide working examplethanks", "d": "5/2018"}, {"body": "docsarealifecyclehooks docsareachangedetection", "d": "5/2018"}, {"body": "replace", "d": "5/2018"}, {"body": "phuhn try", "d": "5/2018"}, {"body": "iliavolk life saver thanks turn custom operator convenience typescript function delay delayms return source gt sourcepipe switchmap value gt timer delayms pipe mapto value foo pipe delay", "d": "5/2018"}, {"body": "progress looks like fix corrects broken part", "d": "5/2018"}, {"body": "hi solved problem exact issue like local environment works perfectly", "d": "5/2018"}, {"body": "nexttrick solve know seems angular problem", "d": "5/2018"}, {"body": "hi solved angular cli issue updated ok current versi\u00f3n angular cli good luck", "d": "5/2018"}, {"body": "lorienolive put routerlinkactiveoptions exact true link root", "d": "5/2018"}, {"body": "another workaround using typescript import component angularcore import router activatedroute angularrouter component template redirecting export class redirectcomponent private returnurl string const approutes routes path redirect component redirectcomponent thisrouternavigate redirect returnurl thisrouterurl skiplocationchange true usally fast nt see content template", "d": "5/2018"}, {"body": "read", "d": "5/2018"}, {"body": "serkon thank much solution helpful spent almost whole day find something similar included core", "d": "5/2018"}, {"body": "thank information using bundled rxjs without issues today wanted use angular material use get error rxjs", "d": "5/2018"}, {"body": "jeshcalls show exact error message", "d": "5/2018"}, {"body": "please find error error error uncaught promise error error xhr error found loading xmlhttprequestwrapfn onreadystatechange zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask xmlhttprequestzonetaskinvoke error loading rxjs", "d": "5/2018"}, {"body": "jeshcalls means nothing url loader using systemjs", "d": "5/2018"}, {"body": "yeah using systemjs add map entry systemconfigjs rxjs npm rxjs fetching folder obviously individual js files rxjs fetched", "d": "5/2018"}, {"body": "jeshcalls rebundled rxjs following rebudled rxjs file", "d": "5/2018"}, {"body": "jeshcalls systemjs dead angular moved away long ago webpack angularcli", "d": "5/2018"}, {"body": "mlcmlapis thanks much read previous posts missed bundle work added map attribute rxjs npm tmprxjs worked", "d": "5/2018"}, {"body": "tsengsr absolutely right web link compares system js webpack modes show consolidated presentation bosses make agree make shift", "d": "5/2018"}, {"body": "also facing issue related checkbox list maintain checkbox list checked back browser working please help resolve issue", "d": "5/2018"}, {"body": "solutions tolemac problem", "d": "5/2018"}, {"body": "current status", "d": "5/2018"}, {"body": "thanks buddy worked", "d": "5/2018"}, {"body": "keep refreshing page infinite time changing documentwrite instead also keep usehash true appmodule please suggest", "d": "5/2018"}, {"body": "facing issue using angular cli works fine lower cli version", "d": "5/2018"}, {"body": "writing benefit ppl coming across weird error hard debug compiler nt give anything one line paramsmap function wasting days pinpointed error missing square brackets", "d": "5/2018"}, {"body": "getting error noticed visual studio npm v node v showed old version numbers found visual studio copies npm node directory c program files microsoft visual studio toolsexternal deleted node npm directories plus node npm commands external directory reloaded visual studio waited minutes got success via following added packages contributors vulnerabilities found packages audited severity low moderate high run detail npm command completed exit code", "d": "5/2018"}, {"body": "fyi think npm installation total mess local registries remote registries multiple locations node installed lots version dependencies surely time cleaned node version npm version probably correct place voice see lots people wasting lots time installation issues", "d": "5/2018"}, {"body": "solution need define abstract class token component extend abstract class provide finally directive inject component instance abstract class directive export class mydirective implements oninit constructor private component myabstractcomponent ngoninit thiscomponent", "d": "5/2018"}, {"body": "component structured directive like binds observable resolved initializes dialog dialog component also public property resolving closed trying reach observable inside tried suggested approaches reach component instance inside directive getting error something like ts directive selector visible export class visibledirective private hasview false constructor private templateref templateref private viewcontainer viewcontainerref host self optional private dialog dialogcomponent private show thisviewcontainercreateembeddedview thistemplateref thisdialog null thisdialogsubjectsubscribe gt thishide private hide thisviewcontainerclear input set visible condition boolean subject condition instanceof subject conditionsubscribe gt thisshow gt thishide else condition thisshow else thishide possible get reference dialog component visible directive exist", "d": "5/2018"}, {"body": "muratcorlu nt see reason nt work general however nt think supposed use time instead use one", "d": "5/2018"}, {"body": "think removes dialog component depending condition default condition time directive initialize exist working example", "d": "5/2018"}, {"body": "progress pointers get information finding really difficult find causing zone hang indefinitely heavily utilizing rxjs across application", "d": "5/2018"}, {"body": "working ionic angular anyone idea ontap events inside component fire component placed inside another component", "d": "5/2018"}, {"body": "nothing issue please open new issue", "d": "5/2018"}, {"body": "time enforcing specific css structure simply coupling markup coupling bad reason include feature example try implementing without using css could define metadata component decorator provide container css class would certainly help still sufficient great approach problem could using html webcomponents approach could inherit native element disclaimer wo nt cut", "d": "5/2018"}, {"body": "solution works fine many devices checked work mobile devices following solution used solve issue different kind devices first checked mobile device constructer appcomponent isplatformbrowser thisplatformid windowscreenwidth lt thismobile true ngoninit isplatformbrowser thisplatformid thisroutersubscription thisrouterevents filter event gt event instanceof navigationend subscribe event gt thismobile const element documentqueryselector elementscrollintoview else windowscrollto also merge ngoninit constructor note set id upper div work mobile devices", "d": "5/2018"}, {"body": "case solutions nt working checked console found scrollto method window nt working found another solution instead bringing user position page used scrollintoview method bringing top component page case appwebsitenav view works every time url changes view go top page appwebsitenav component code simple works import router navigationend angularrouter private router router constructor private router router ngoninit thisroutereventssubscribe evt gt evt instanceof navigationend return documentgetelementsbytagname appwebsitenav scrollintoview", "d": "5/2018"}, {"body": "release angualar valid project undegoes active development", "d": "5/2018"}, {"body": "please note accessibility violation remove href usually user would implement application would acceptable accessibility well fulfill standard currently seems though href javascript void implementation fulfills requirements despite hack", "d": "5/2018"}, {"body": "overriding native attribute works pretty well ts import component input hostbinding angularcore component selector gistkeepsclass template component keepes class class attributes export class keepsclass html html throughly tested work", "d": "5/2018"}, {"body": "sometimes get issue question teaching angular boot camp people first learning angular really committed manage get running variants solutions written definitely area extent apologizing currently quite rough edge request whoever designs full solution aim best class easy smooth", "d": "5/2018"}, {"body": "worked angular using angular material appcomponentts import component oninit angularcore import router navigationend angularrouter import breakpointobserver breakpoints breakpointstate angularcdklayout import observable rxjs component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent implements oninit window element ishandset observable thisbreakpointobserverobserve breakpointshandset appcomponentcss sidenavcontainer height width webkitboxflex msflex flex sidenav width boxshadow rgba nav mattoolbar position fixed top left right zindex", "d": "5/2018"}, {"body": "iterating subset data returned api common scenario cleaner way address read also update collection", "d": "5/2018"}, {"body": "nvm fault", "d": "5/2018"}, {"body": "sure still issue coz got working angular getting error missed binding", "d": "5/2018"}, {"body": "fault sorry", "d": "5/2018"}, {"body": "english great angular greater", "d": "5/2018"}, {"body": "read response header contentdisposition check either postman google chrome network tab see contentdisposition response headers section able read angular code node server js appget download function req res var file dirname dbjson resset contenttype textplain contentdisposition attachment filename reqbodyfilename resdownload file set disposition send code savefile const headers new headers headersappend accept textplain headers headers subscribe response gt thissavetofilesystem response private savetofilesystem response const contentdispositionheader string responseheadersget contentdisposition lt getting error able read response headers const parts string contentdispositionheadersplit const filename parts split const blob new blob responsebody type textplain saveas blob filename", "d": "5/2018"}, {"body": "related angular", "d": "5/2018"}, {"body": "thanks trotyl set accesscontrolexposeheaders node js server able read contentdisposition angular code", "d": "5/2018"}, {"body": "worked completely hack please nt change break code lol", "d": "5/2018"}, {"body": "reason browser back history outlet gets enter state empty child routeroutlet anybody idea get around", "d": "5/2018"}, {"body": "way recheck others inputs validation input value change template driven form", "d": "5/2018"}, {"body": "solution may relevant thought would post anyone looking implement complex logic using angular matcher regular expression using urlmatcher matcher yourmatcherlogic function component get extracted parameters thisactivatedrouteparamssubscribe params gt", "d": "5/2018"}, {"body": "naomiblack implemented yet settle approaches please make sure describe comments closed issue", "d": "5/2018"}, {"body": "nikhilbhalwankar thing happening ios device ver worked everywhere else find solution per elgervb answer add import lines ts file page issues", "d": "5/2018"}, {"title": "string interpolation", "body": "problem feature solve string interpolation going example link noticed would nt work trying use string interpolation could made possible proposed api look like", "num": "8285", "d": "5/2018"}, {"title": "render issue transitiongroup child component loads asynchronously", "body": "version reproduction link steps reproduce nt time create minim repro moment feel free close report feel user error known issue pseudocode parent custom component components subsubcomponent gt new promise resolve gt settimeout gt resolve import subsubcomponentvue adding artificial loading delay make issue reproducible settimeout happens sporadically depending load times remove rendering never fails error message found srccomponentsccoachlistvue srccomponentspagesccoachdirectoryvue expected transitiongroup loads components become available actually happening components take long load first item group displays correctly others fail", "num": "8284", "d": "5/2018"}, {"title": "component data support promise", "body": "problem feature solve want component data access promise show promise auto update view promise resolved proposed api look like", "num": "8283", "d": "5/2018"}, {"title": "hot reload problem use keepalive wrap routerview dynamic key", "body": "version reproduction link steps reproduce code script tag hello component routerview component disappear page find component activated devtools expected hot reload normally actually happening refresh page manually time modify code", "num": "8282", "d": "5/2018"}, {"title": "component name allow first char uppercase", "body": "version reproduction link steps reproduce special steps change componet name mytest mytest make work otherwise componet nt get rendered expected component content \u81ea\u5b9a\u4e49\u7ec4\u4ef6 surrended actually happening componet actually change componet name mytest mytest componet got rendered properly new vue quite sure bug vue component standard", "num": "8280", "d": "5/2018"}, {"title": "transition behavior different uncalled done provided hook method", "body": "version reproduction link steps reproduce demo link click toggle show hide element expected two boxes configured differs enter leave hook one called one called leave el done function thing done callback called expected two boxes enter leave way actually happening box hooked transition properly box hooked leave transition resubmit messed demo one properly demo case", "num": "8279", "d": "5/2018"}, {"title": "make vue available libraries without import", "body": "title needs work idk call problem feature solve writing component library typescript requires importing vue use get typings causes problems webpack decides load different instance vue see proposed api look like local registration accept function synchronously returns component calling parent vue instance library used like js import mycomponent somelibrary export default components mycomponent course would cause problems particularly use methods directly components maybe something adds types like nt runtime behaviour would better instead", "num": "8278", "d": "5/2018"}, {"title": "vuejs site running development mode", "body": "version reproduction link steps reproduce enter browser address bar check console browser development tools expected vuejs site running production mode actually happening vuejs running development mode supposed run development mode", "num": "8277", "d": "5/2018"}, {"title": "trouble vifvelseif", "body": "version reproduction link steps reproduce velseif velse expected \u6b63\u5e38\u663e\u793a actually happening velseif velse", "num": "8276", "d": "5/2018"}, {"title": "transition behavior different uncalled done provided hook method", "body": "version reproduction link steps reproduce demo link click toggle show hide element expected two boxes configured different hook one called one called function thing callback called expected two boxes enter leave way actually happening box hooked hook leave transition", "num": "8275", "d": "5/2018"}, {"title": "nt work global functions event handlers", "body": "example caught error vmalert function", "num": "8274", "d": "5/2018"}, {"title": "el\u5c5e\u6027\u4f7f\u7528class\u9009\u62e9\u5668\u65e0\u6548", "body": "version reproduction link steps reproduce class expected vmodel\u8fdb\u884c\u53cc\u5411\u7ed1\u5b9a\u7684\u6570\u636e\u5e94\u8be5\u5728\u4e24\u4e2adiv\u91cc\u90fd\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 actually happening \u5b9e\u9645\u4e0a\u53ea\u6709\u7b2c\u4e00\u4e2adiv\u662f\u6709\u6548\u7684 \u8bf7\u53c2\u8003\u91cd\u73b0\u94fe\u63a5", "num": "8273", "d": "5/2018"}, {"title": "set object reactive", "body": "version reproduction link steps reproduce attach object attribute component modify using set methods add delete etc expected changes set would reflect rendered html like arrays actually happening nothing change set nt picked vue making property reactive unusual mutations array works expected see link additional notes shows change set seems detected unless reactive system vue works different understanding view updates set converted array", "num": "8272", "d": "5/2018"}, {"title": "model implementation", "body": "problem feature solve hi everybody would like submit idea order continue make vuejs awesome tool back end world started project vuejs months ago discover javascript ecosystem first realy enthusiastic vue features found something missing way declare modelentity represent data object nt know thinking feature think could good option add library like router even cli guide vue developers data manipulations way promote best practices field thank consider proposition proposed api look like proposition integrate library bring mvc v vue course without dealing persistence least guide developers deal implementation data attribute vue component could composed multiple models instance component data object nt", "num": "8271", "d": "5/2018"}, {"title": "failed compile", "body": "version reproduction link steps reproduce npm run dev expected compiled project actually happening error failed compile errors error resourcesassetsjscomponentshomevue syntax error unexpected token expected return newposttitle newpostdesc vuecomponent home require componentshomevue created resourcesassetsjscomponentshomevue resourcesassetsjsappjs multi resourcesassetsjsappjs resourcesassetssassappscss jsappjs mb emitted big jsapp cssappcss kb emitted jsapp jsapp error nodemodulesbabelloaderlib cachedirectory true presets env modules false targets browsers uglify true plugins transformobjectrestspread transformruntime polyfill false helpers false nodemodulesvueloaderlibselectorjs typescript amp resourcesassetsjscomponentshomevue module build failed syntaxerror unexpected token expected return newposttitle newpostdesc vuecomponent home require componentshomevue created resourcesassetsjscomponentshomevue resourcesassetsjsappjs multi resourcesassetsjsappjs resourcesassetssassappscss npm err code elifecycle npm err errno npm err development npm err exit status npm err npm err failed development script npm err probably problem npm likely additional logging output npm err code elifecycle npm err errno npm err dev npm err exit status npm err npm err failed dev script npm err probably problem npm likely additional logging output", "num": "8270", "d": "5/2018"}, {"title": "issue refs children element vfor refs arrays children", "body": "version reproduction link steps reproduce check console expected ref single dom node since ref element vfor actually happening creates ref single value array weird since never contain one single value wanted behaviour specified docs please though nt understand would wanted behaviour", "num": "8269", "d": "5/2018"}, {"title": "work chenges params change route", "body": "version reproduction link steps reproduce delete routeparamsid template expected works alerts click buttons actually happening nothing add routeparamsid template routes works delete string router work", "num": "8268", "d": "5/2018"}, {"title": "vue always rerenders child components passed default slot", "body": "version reproduction link steps reproduce open sample two simple components row cell iterate array render row array item row renders cells passed default slot let add new item initial array click add button see browser console cell rerendered adding new one time similar react sample renders new cells without rerendering old ones expected new child components rendered actually happening children rerendered", "num": "8267", "d": "5/2018"}, {"title": "transition using js hooks always run initial render", "body": "version reproduction link steps reproduce demo link toggle checkbox odd expected rows appeared inner element transition using css fade transition using hooks slide initial render actually happening transition using css run initial render expected transition using hooks run initial render used nt nt know intended behavior would like know avoid initial render hooked transition", "num": "8266", "d": "5/2018"}, {"title": "ios \u6570\u7ec4\u4e0b\u6807\u91cd\u590d\u95ee\u9898", "body": "version reproduction link fromsinglemessage amp steps reproduce \u6682\u65f6\u8fd8\u6ca1\u603b\u7ed3\u51fa\u54ea\u79cd\u5199\u6cd5\u5b58\u5728\u95ee\u9898 \u662f\u5426\u5df2\u6709\u89e3\u51b3\u65b9\u6848 \u53ef\u4ee5\u4fbf\u6377\u5904\u7406\u7684\u65b9\u6848 expected \u6b63\u5e38\u663e\u793a actually happening \u6570\u636e\u91cd\u590d", "num": "8264", "d": "5/2018"}, {"title": "allow override props validation merging mixin", "body": "problem feature solve hi mixin specified component tried override however results error bug think would useful feature thanks case components take string value need override different text inputs take string value checkboxes truefalse proposed api look like keep api", "num": "8263", "d": "5/2018"}, {"title": "vbind nt work style", "body": "version reproduction link steps reproduce init vue expected div background image actually happening nt attribute disappeared", "num": "8262", "d": "5/2018"}, {"title": "vshow working functional component", "body": "version reproduction link steps reproduce simply put vshow false functional component expected component visible actually happening component still visible wrapping additional div workaround guess intended", "num": "8261", "d": "5/2018"}, {"title": "\u4e2d\u6587\u6587\u6863\u5728\u79fb\u52a8\u7aef\u548cpc\u7aef\u4e0d\u4e00\u81f4", "body": "version reproduction link steps reproduce pc\u7aef\u8bbf\u95ee \u4e8b\u4ef6\u5904\u7406 \u79fb\u52a8\u7aef\u8bbf\u95ee \u4e8b\u4ef6\u5904\u7406 expected pc\u7aef\u548c\u79fb\u52a8\u7aef\u8bbf\u95ee \u4e8b\u4ef6\u5904\u7406 actually happening", "num": "8260", "d": "5/2018"}, {"title": "emit native events", "body": "problem feature solve hi team maybe way let components emit caught native events case writing music player component want allow users component use modifier listen native media events component like know modifier listen native events root element component case apparently ca nt root component also common cases facing similar issue form field component providing inputnative internal file upload component providing progressnative know catch internal native events emit custom event like let user feel using directly intuitive proposed api look like possible forms another modifier lets modifier listens root element directive like maybe nonroot html element lets element emit native events outer listeners method vue instance", "num": "8259", "d": "5/2018"}, {"title": "errorcaptured hook", "body": "problem feature solve hook function used catch subcomponent errors instead catching errors source code follows proposed api look like design way", "num": "8258", "d": "5/2018"}, {"title": "errorcaptured hook", "body": "hook function used catch subcomponent errors instead catching errors source code follows design way", "num": "8257", "d": "5/2018"}, {"title": "generate errors summary find module pagesindexjs e xxx", "body": "version reproduction link steps reproduce tips english poor forgive following part english description translation reproduction step \u590d\u73b0\u6b65\u9aa4 step one \u7b2c\u4e00\u6b65 bash install dependencies yarn install npm install step two \u7b2c\u4e8c\u6b65 add following configuration step three \u7b2c\u4e09\u6b65 bash generate static project yarn generate npm run generate step four \u7b2c\u56db\u6b65 error follows bash generate errors summary route error find module pagesindexjs e gitrepoothervueserverrendererbugminirepo functionmoduleexports sync vueserverrendererbugminirepo resolve r vueserverrendererbugminirepo vueserverrenderer functionrequireensure e arraymap arraymap flatmapcomponents resolveroutecomponents getroutedata setcontext createapp moduleexportswebpackexportsdefault vueserverrendererbugminirepo vueserverrenderer bug tracking bug \u8ffd\u6eaf configuration generate related configuration follows \u7684\u4e0a\u8ff0\u914d\u7f6e\u4f1a\u751f\u6210\u76f8\u5173\u7684 locating problem modified solve problem nt know judgment changed affect places expected compile successfully error actually happening error find module pagesindexjs e gitrepoothervueserverrendererbugminirepo use nuxtjs", "num": "8256", "d": "5/2018"}, {"title": "slove problem", "body": "parser file path given could nt infer parser npm run dev build fail", "num": "8255", "d": "5/2018"}, {"title": "using props initial data child data update prop modified parent", "body": "version reproduction link steps reproduce open fiddle click update button expected child component set value prop documented child component render message hello world actually happening prop passed child component correctly updated child component renders message ran issue fetching data api update parent component data parent data passed child prop used initial value changed within child component passing data right away eg using api works properly displaying prop child directly using child components issue occurs using prop initial value child data updating prop parent child mounted", "num": "8254", "d": "5/2018"}, {"title": "server side render maximum call stack size exceeded vue", "body": "version reproduction link steps reproduce vue elementui nuxt found related call stack size restored vue still prudence issue could produced examples demos jsfiddle product days production servers restart new issuegenerator pls undenstand expected work regular actually happening work os browser ubuntu compatible msie windows nt net clr net clr net clr media center pc tablet pc", "num": "8253", "d": "5/2018"}, {"title": "life cycle invoked component destroyed", "body": "version reproduction link steps reproduce open console click todo item see expected printed life cycle invoked component destroyed actually happening life cycle invoked component destroyed", "num": "8252", "d": "5/2018"}, {"title": "suggestion template render support dom document object", "body": "problem feature solve rendering could support dom document object could eliminate html inside code similar extjs according following example proposed api look like", "num": "8251", "d": "5/2018"}, {"title": "allow component register subcomponents", "body": "problem feature solve developing component library encounter need register subcomponents example component needs register subcomponents vue often necessary register full component js import list listitem listitembrief components vuecomponent listname list vuecomponent listitemname listitem vuecomponent listitembriefname listitembrief list listitem listitembrief react js import list components list listitem listitembrief seems vue approach bit complicated think possible consider supporting components register subcomponents proposed api look like js listvue import listitem listitemvue export default name list subcomponents item listitem js listitemvue import listitembrief listitembriefvue export default name listitem subcomponents brief listitembrief js mainjs import list components vuecomponent listname list appvue import list components export default name app components listname list register", "num": "8249", "d": "5/2018"}, {"title": "vue ssr hydration error nested", "body": "version reproduction link steps reproduce forked added two elements appvue one text inside nested npm install npm run dev javascript enabled see error occurs browser console hydration element nested text nt throw error expected hydration process makes exception children elements assuming nothing done serverside rendering children tags since appears common browser issue actually happening hydration bails early serverside renders children string clientside renders children html element error occurs function vueruntime since undefined due fact string also issue disable javascript text image render fine thoughts ideas much appreciated thanks time", "num": "8247", "d": "5/2018"}, {"title": "issue submission form changing issue type deletes content", "body": "version reproduction link steps reproduce fill form page change type bug report feature request expected content fields persists actually happening content fields deleted another small issue really user friendly since directing new users take time submit issues", "num": "8246", "d": "5/2018"}, {"title": "issue submission form preview open links new tab", "body": "version reproduction link steps reproduce fill form page click preview button click link inside preview window expected link opens new tab actually happening link opens current tab without submitting issue going back browser results empty form sadly discovered hard way trying submit first issue", "num": "8245", "d": "5/2018"}, {"title": "add note camelcasing documentation", "body": "problem feature solve problem documentation custom events event names states recommend always use kebabcase event names modifier must emit event propertyname camelcased kebabcase wo nt work always like always unless emit event proposed api look like add note custom events event names also documentation custom events sync modifier would change example use property multiple word name single word nt help problem andor add note event name incosistency previous recommendation page always use kebab case", "num": "8244", "d": "5/2018"}, {"title": "style bug animationduration\u5c5e\u6027\u5728\u9700\u8981\u6dfb\u52a0webkit\u524d\u7f00\u73af\u5883\u4e2d\u88ab\u6e32\u67d3\u6210\u4e86webkitanimation", "body": "version reproduction link steps reproduce \u8fd0\u884c\u5728 expected \u6e32\u67d3\u7ed3\u679c\u4e3a actually happening \u6e32\u67d3\u7ed3\u679c\u4e3a", "num": "8243", "d": "5/2018"}, {"title": "", "body": "version reproduction link steps reproduce expected \u56fe\u7247\u80fd\u591f\u5728\u66ff\u6362\u6389\u5730\u5740\u540e\u5237\u65b0\u51fa\u6765\u800c\u4e0d\u662f\u5237\u65b0\u9875\u9762\u624d\u5c55\u793a actually happening \u56fe\u7247\u5237\u65b0\u4e0d\u51fa\u6765", "num": "8242", "d": "5/2018"}, {"title": "vuessrserverplugin produces slowtoparse json large projects", "body": "problem feature solve makes better development experience vue ssr looking takes render singlecomponent page server fairly large application found interesting issue webpack creates bundles us altogether weigh way plugin works know combines files single file reading file node fast average us reading need providing takes initially thinking using webpack reduce filesize router dynamically imports toplevel pages chunk could benefit bring common component support throws serverside bundle one single entry file error proposed api look like exactly sure point noticed issue concerned app grows json parse time increase adding seconds loadtime development", "num": "8241", "d": "5/2018"}, {"title": "reordering elements array", "body": "version reproduction link steps reproduce fiddle started console log show proper order elements array clicking button change places two elements console log new array items nt move view stay despite array elements changed places expected elements need change places view actually happening elements stay place view", "num": "8239", "d": "5/2018"}, {"title": "vue reactivity engine mobx", "body": "hey vue cool react land mobx takes similar approach defining getterssetters architectural nature vue apps much closer reactmobx typical react architecture mobx used trusted big companies aware knowledge sharing idea sharing projects think would really cool explore possibilities collaborate areas collaboration could cool standardized benchmarks optimization tips things worked nt good user experience things like circular references code shared libraries extracted discuss transition getterssetters proxies discuss hard language pov provide feedback explicitly suggesting anything concrete get discussion started got idea started participating sinonjs someone jest reached us order use shared code component think want point also perfectly acceptable response full disclosure part mobx team mobx written brainchild mweststrate also probably quite terrible vue possible michel reached past vice versa discussion simply nt public", "num": "8238", "d": "5/2018"}, {"title": "vue nt call watcher change prop beforedestroy", "body": "version reproduction link steps reproduce open reproduction link open console click button toggle testcomponent create testcomponent try change something input see testinfo watcher console means testinfo watcher called click button toggle testcomponent destroy testcomponent beforedestroy hook change testinfo property see beforedestroy console instead beforedestroy testinfo watcher expected expect watcher testinfo property called change beforedestory hook actually happening change testinfo property beforedestroy hook watcher nt called", "num": "8237", "d": "5/2018"}, {"title": "vmodel defaultwrong option get selected ajaxoption render", "body": "version reproduction link steps reproduce see example testselectvue expected select render option value vmodel selected actually happening first option select active workaround", "num": "8236", "d": "5/2018"}, {"title": "vtext\u4e2d\u7ed1\u5b9a\u7684\u591a\u4e2a\u8fde\u7eed\u7a7a\u683c\u65e0\u6cd5\u6b63\u5e38\u663e\u793a", "body": "version reproduction link steps reproduce indentedvue\u9875\u9762\u4e2d\u7684\u5c5e\u6027\u6587\u672c\u5185\u5bb9\u6709\u591a\u4e2a\u7a7a\u683c expected \u8fde\u7eed\u7684\u7a7a\u683c\u663e\u793a\u591a\u4e2a actually happening \u8fde\u7eed\u7684\u53ea\u663e\u793a\u4e86\u4e00\u4e2a", "num": "8235", "d": "5/2018"}, {"title": "vue style bug", "body": "version reproduction link steps reproduce look codepen html expected \u6e32\u67d3\u7ed3\u679c actually happening \u6e32\u67d3\u7ed3\u679c", "num": "8234", "d": "5/2018"}, {"title": "ca nt define prop functional component", "body": "version reproduction link steps reproduce change prop component expected works well like actually happening work key point could u plz add feature render amp", "num": "8232", "d": "5/2018"}, {"title": "vmodel mobile updating space pressed", "body": "version reproduction link steps reproduce type inputtextarea android nt ios test expected input data updated per keypress actually happening input data updated space pressed reproduced android chrome android firefox", "num": "8231", "d": "5/2018"}, {"title": "vmodel support functional components", "body": "version reproduction link steps reproduce set two inputs vmodel one directly another using functional component wrapper expected binding behaviour inputs actually happening standard input works functional component input nt get bind value get binded input event unexpected behaviout reason would wrap input functional component customize look expecting vue still apply vmodel workarounds around", "num": "8230", "d": "5/2018"}, {"title": "error render referenceerror sp undefined", "body": "version reproduction link steps reproduce expected \u6ca1\u6709\u8fd0\u884c\u65f6\u9519\u8bef actually happening \u51fa\u73b0\u8fd0\u884c\u65f6\u9519\u8bef", "num": "8228", "d": "5/2018"}, {"title": "css modules get overridden global styles", "body": "version reproduction link steps reproduce note sandbox behaving diffeerently actual code import bootstrapscssbootstrapscss appvue add set define listgroupitem set expected expected overriding bootstrap styling actually happening global bootstrap styling loaded css module due css specificity order loading wins bootstrap overriding css modules bahavior ok switch", "num": "8227", "d": "5/2018"}, {"title": "consolewarn vue already defined window", "body": "problem feature solve went referencing vue unpkg html using webpack forgot remove went bit crazy vueset nt anything think warning would really help problem people making mistake migrating webpack proposed api look like nt think api would change", "num": "8226", "d": "5/2018"}, {"title": "vue refs works differently template vs render function", "body": "version reproduction link steps reproduce create ref within template render function template returns array render function returns latest item loop expected render functions return array refs actually happening course makes sense render function returns last ref js vue nt return array template", "num": "8225", "d": "5/2018"}, {"title": "error render referenceerror sp undefined", "body": "vuejs version reproduction link codepen steps reproduce please open link inspect console panel expected actually happening information works well latest chrome firefox edge generated code snippets normal wrong", "num": "8224", "d": "5/2018"}, {"title": "render component vbind property disappear", "body": "version reproduction link steps reproduce see age column see difference template template age myage expected show vbind property actually happening span disappear add vbind property", "num": "8223", "d": "5/2018"}, {"title": "trim modifier every vmodel value input like fields form", "body": "problem feature solve team working project using nuxt production one thing missed trim input value know modifier trim works vmodel app used vmodel special cases value attribute input tag proposed api look like many input fields various pages thought would cool option vmodel automatically trim input value bydefault instead adding trim everywhere manually also modifier trim value attribute", "num": "8222", "d": "5/2018"}, {"title": "", "body": "version reproduction link steps reproduce updatephoto apitemplateupdatephoto thischangephoto res gt consolelog update consolelog nexttick function thisphotosplice thistailoringnum thisuserphoto locationreload else thisuploadphoto expected \u5237\u65b0\u9875\u9762\u624d\u80fd\u663e\u793a\u51fa\u6765 actually happening \u89c6\u56fe\u6ca1\u6709\u5237\u65b0\u8981\u624b\u52a8\u5237\u65b0\u624d\u80fd\u5c55\u793a\u51fa\u6765", "num": "8221", "d": "5/2018"}, {"title": "way tell images done rendering", "body": "", "num": "8220", "d": "5/2018"}, {"title": "", "body": "", "num": "8219", "d": "5/2018"}, {"title": "vuejsorg documentation", "body": "version reproduction link steps reproduce go link top google hit search vuejs custom filter expected two way filter guide working depricated labeled removeddepricatedreplaced link solution documentation actually happening two way filter guid working depricated labeled removeddepricatedreplaced link solution documentation two way filter guid working depricated labeled removeddepricatedreplaced link solution documentation", "num": "8218", "d": "5/2018"}, {"title": "automatically populate component name filename", "body": "problem feature solve sometimes vue component nt script properties except name consider instance component includes global components simple displayonly component case script looks like export default name componentname would helpful could removed entirely name extracted component filename would especially helpful beginners could create simple components section proposed api look like", "num": "8216", "d": "5/2018"}, {"title": "dom sync input changes vnode value match new current state", "body": "version reproduction link steps reproduce example input accepts numbers alphanumeric character introduced want reset input initial value default value set typing number letter things work expected value reset default value set typing character result dom sync expected dom always sync property value actually happening dom gets sync dom modification input value happens current vnode value diffing ignore node leave untouched believe due problem algorithm vnode diffing check vnode properties found odd issue nt raised since seems sort inline normalization values could potentially run cases maybe trivial workaround different pattern type cases", "num": "8215", "d": "5/2018"}, {"title": "vue props throw incomprehensible error passing variables starting symbols", "body": "version reproduction link steps reproduce open console see error javascript vue warn property method testmixintestdata defined instance referenced render make sure property reactive either data option classbased components initializing property see found srcappvue expected expected prop defined actually happening prop undefined variable contains symbols beginning completely sure bug intended since think bug opened issue yet intended error shown giving details took time understand error nt clear error message", "num": "8213", "d": "5/2018"}, {"title": "vue support template url", "body": "version reproduction link steps reproduce nt want use vue webpack web page size need smaller use need package components found vue support template must write view string use textxtemplate xtemplate divided view controller two scripts better solution expected like angular templateurl actually happening xtemplate becomes hard maintain components become", "num": "8211", "d": "5/2018"}, {"title": "functioncomponentoptions interface allow", "body": "problem feature solve allows developers use functional way declaring component utilizing config time already possible using pure javascript proposed api look like add missing part interface existing interface", "num": "8210", "d": "5/2018"}, {"title": "tabs keepalive memory leaks", "body": "version reproduction link steps reproduce link step repeated times memory checked memory leaks expected different levels routing jump clear value inside include level order achieve cache local function actually happening repeatedly memory usage continues increase feeling memory vue instance cleared component cleared click several times easy memory leak used method project effect greater click twice use memory tabs keepalive free cached memory", "num": "8209", "d": "5/2018"}, {"title": "indexvue template unpredictable html elements", "body": "problem feature solve hi using vuejs need create indexvue page product people number text box drop list fixed mean product props may tried add html element using vhtml seems wise way offered use components sounds little complicated confusing looking sample good example thanks advance proposed api look like tried add html element using vhtml seems wise way offered use components sounds little complicated confusing", "num": "8208", "d": "5/2018"}, {"title": "indexvue undefined elements", "body": "hi using vuejs need create indexvue page product people number text box drop list fixed mean product props may tried add html element using vhtml seems wise way offered use components sounds little complicated confusing looking sample good example thanks advance", "num": "8207", "d": "5/2018"}, {"title": "resolveasset function", "body": "", "num": "8206", "d": "5/2018"}, {"title": "allow block splitting singlefilecomponents organisationalreadability purposes", "body": "problem feature solve love vuejs vue sfcs occasionally end html template extremely large hard read talking components subparts tightly coupled breaking subcomponents obvious win could break anyway considerable amount work considering tight coupling either send lot state using props move state vuex even though prefer keep state local parent sfc nice solution would allow something akin template macrossplitting within vue see random syntax example proposed api look like javascript lines html lines html lines html one file templates use script style scope copypaste things around organise props imports basically like macros could ide extension would nt need vue code folding never really worked well", "num": "8205", "d": "5/2018"}, {"title": "feature request allow block splitting singlefilecomponents organisationalreadability purposes", "body": "love vuejs vue sfcs occasionally end html template extremely large hard read talking components subparts tightly coupled breaking subcomponents obvious win could break anyway considerable amount work considering tight coupling either send lot state using props move state vuex even though prefer keep state local parent sfc nice solution would allow something akin template macrossplitting within vue random syntax example javascript lines html lines html lines html one file templates use script style scope copypaste things around organise props imports basically like macros could ide extension would nt need vue code folding never really worked well thoughts appreciated keep amazing work", "num": "8204", "d": "5/2018"}, {"title": "\u5728ie \u5728table\u4e2d\u4f7f\u7528templete", "body": "", "num": "8203", "d": "5/2018"}, {"title": "lead data ca nt rendered real time vfor items empty array", "body": "version reproduction link steps reproduce lead data currentindex ca nt rendered real time items empty array maybe key itemid make error remove ok solve expected currentindex change real time iterate right way actually happening lead data currentindex ca nt rendered real time items empty array maybe key itemid make error remove ok solve", "num": "8202", "d": "5/2018"}, {"title": "lead data ca nt rendered real time vfor items empty array", "body": "lead data currentindex ca nt rendered real time items empty array maybe key itemid make error remove running ok solve", "num": "8201", "d": "5/2018"}, {"title": "reimplement async config option", "body": "problem feature solve vue test utils synchronous api walking watchers setting implementation buggy reimplementing async private config option would solve problem vue test utils proposed api look like add config option would used watchers created option removed commit happy make pr add", "num": "8200", "d": "5/2018"}, {"title": "read property pending null using transition component", "body": "version reproduction link steps reproduce open fiddle type anything first field marked broken see console error message error nexttick typeerror read property pending null notice vue stopped working refresh fiddle type anything second field marked working notice everything works expected expected value input field foo computed property evaluate true span display user changes value input field foo anything else computed property evaluate false b span rendered using vhtml display actually happening initially value input field foo computed property evaluated true span displaying user changes value input field foo anything else vue crashes error message displayed error nexttick typeerror read property pending null takes specific scenario error appear fiddle shown removing event listener vue works expected errors three changes made individually result vue working expected removing component surrounding span using instead using instead directives found via question stack overflow", "num": "8199", "d": "5/2018"}, {"title": "vue\u4e2d\u5f00\u53d1\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883\u7684css\u524d\u7f00\u95ee\u9898", "body": "\u5728appvue\u6dfb\u52a0 app display flex \u4f7f\u7528npm run dev \u547d\u4ee4\u540e\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u67e5\u770b\u5230 app display webkitbox display msflexbox display flex \u4f7f\u7528npm run build\u540e \u8f93\u51fa\u5982\u4e0b app display msflexbox display flex \u5728build\u540e\u4f1adisplay webkitbox \u8c22\u8c22", "num": "8197", "d": "5/2018"}, {"title": "additional lifecycle options watchers helps ssr", "body": "problem feature solve less code less bugs improving commonly faced issue proposed api look like background using ssr frequently use watchers loading data components however components nt need rendered serverside debugging harder way source becomes cluttered seo means ca nt use standard immediate true option already implemented watchers would initialize things server like created lifecycle hook proposal solve problem propose additional initialize option watcher api would work like immediate hook would allow us specify point lifecycle immediate behavior take place", "num": "8196", "d": "5/2018"}, {"title": "nodes listeners nt remove destroy vue components vif", "body": "version reproduction link steps reproduce create project vue cli change helloworldvue show msg msg msg msg msg msg msg msg msg export default name helloworld data return show false msg test open chrome dev tools gt performance monitor make fast clicks button showdestroy expected vue remove dom nodes actually happening number dom nodes increases vue remove real projects big problem within seconds get tens thousands domzombies", "num": "8195", "d": "5/2018"}, {"title": "jumping cursor issue contenteditable two way data binding using array objects", "body": "version reproduction link steps reproduce card panel list editable try typing change content using objects panel expected cursor jump start position content editable element two way data binding actually happening cursor jump start position element due rending element", "num": "8194", "d": "5/2018"}, {"title": "webassembly integration split core two parts", "body": "problem feature solve performance improvements proposed api look like split core two parts js keep already framework webassembly experiment syntax sugar walt compiled js core read closed issues topic saw like building completely new framework similar syntax definitely something core team interested bandwidth would nt discourage anyone interested try syntax sugar walt potentially make split muchmuch easier since still js things consider js webassembly called time start mixing parts serverside rendering worst aspect vuejs clientside serverside bundles ridiculous architecture honest used make lambda function optimization possible dependencies tree shaking creating bundles imported render function webpack unable trace parts dependencies nt needed therefore ssr development stage unfortunately poor condition ssr happening serverside nodejs run could totally compiled personally would start making progress incentive us start working moment therefore would great interested parties performance improvements community dedicate time", "num": "8193", "d": "5/2018"}, {"title": "typescript types nt allow multiroot functional components", "body": "version reproduction link steps reproduce npm run serve expected nt errors actually happening page runs works expected build shows type errors type definitions specify single vnode always returned functional componnts render functions fix trivial already fixed locally make pull request", "num": "8191", "d": "5/2018"}, {"title": "one way data flow problem", "body": "version reproduction link steps reproduce pass props component try recover follows expected variable undefined actually happening variable undefined works also works work expected sure", "num": "8190", "d": "5/2018"}, {"title": "one way data flow problem", "body": "works work expected sure", "num": "8189", "d": "5/2018"}, {"title": "need ifelse", "body": "", "num": "8188", "d": "5/2018"}, {"title": "merged class attributes preserved component created render function root node class binding", "body": "version reproduction link updated added directly compare expected vs actual results steps reproduce create component render content render function render child component static class attribute child component add class binding root element class binding applied example condition becomes true static classes passed parent component render function lost expected child component keeps static dynamic classes actually happening dynamic classes added vbind class kept root element looked issues reporting similar behaviors one likely related issue one differs case since components functional components updated actual issue see comment example fiddle simplified version showcase problem usecase parent component render different child component depending prop state parent acts proxy polymorphic component several different children", "num": "8187", "d": "5/2018"}, {"title": "docs vue cli typescript already", "body": "version reproduction link steps reproduce gt manually gt check typescript option expected nt docs missing something actually happening docs actually instead content guide use vue cli typescript", "num": "8186", "d": "5/2018"}, {"title": "icon css relative path error", "body": "path error use using alias", "num": "8185", "d": "5/2018"}, {"title": "deep object returned computed reactive", "body": "version reproduction link steps reproduce create component props computed property create deep object props values inside computed property use object template expected changes object reflected template actually happening changes computed property allways fully reactive", "num": "8183", "d": "5/2018"}, {"title": "vmodel nested gettersetter computed property backed vuex nt behave expected", "body": "version reproduction link steps reproduce type something firstname field see value output immediately right expected uses suggested pattern vuex vmodel see lastname field initial value object object nt expected type something lastname field see value immediately output right nt expected tab lastname field notice output right expected load inputs empty typing lastname behave way firstname immediate output side input event focus actually happening lastname input object object typing lastname nothing output focus basically wanting nest custom gettersetter properties toplevel computed property like nest forms fields computed property called form returns object property object defining gettersetter vuex store potentially flatten map method creates computed property gettersetter field like reason trying normalize vue plugin usage across component state vs vuex state also nesting means form property nestings recalculated every time field changes let know obviously performance consideration may drive flat style force figure document plugin usage", "num": "8182", "d": "5/2018"}, {"title": "export order bug", "body": "version reproduction link steps reproduce clone project npm install npm run serve expected render appvue template browsing localhost actually happening warning thrown vue warn unknown custom element problem occur change order exports srccomponentsindexjs page rendered expected feeling loose comparison going background", "num": "8181", "d": "5/2018"}, {"title": "\u52a8\u6001\u7ec4\u4ef6\u751f\u6210\u7684js\u5f15\u5165\u8def\u5f84\u6709\u95ee\u9898", "body": "version reproduction link steps reproduce vue\u5728webpack\u751f\u6210\u591a\u9875\u9762 \u6bd4\u5982indexhtml loginhtml productsproductdetailhtml \u5728productdetailhtml \u4f1a\u5b58\u5728 \u52a8\u6001\u4ea7\u751f\u7684js\u8def\u5f84\u95ee\u9898 expected \u5728productdetailhtml js\u8def\u5f84\u5f15\u5165\u6b63\u786e actually happening vue\u5728webpack\u751f\u6210\u591a\u9875\u9762 \u6bd4\u5982indexhtml loginhtml productsproductdetailhtml \u5728productdetailhtml \u4f1a\u5b58\u5728 \u52a8\u6001\u4ea7\u751f\u7684js\u8def\u5f84\u95ee\u9898", "num": "8180", "d": "5/2018"}, {"title": "\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ee5id\u540d\u7684\u5168\u5c40\u53d8\u91cf\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5143\u7d20", "body": "version reproduction link steps reproduce \u5217\u5982\u5728appvue\u4e2d \u8bbf\u95ee\u5230\u8fd9\u4e2adiv\u5143\u7d20 \u4e0d\u77e5\u9053\u8fd9\u4e2a\u662fbug\u8fd8\u662f\u6545\u610f\u4e3a\u4e4b expected \u4e0d\u77e5\u9053\u8fd9\u4e2a\u662fbug\u8fd8\u662f\u6545\u610f\u4e3a\u4e4b actually happening \u7ed9\u8fc7id\u5c5e\u6027\u7684dom\u5143\u7d20 \u5168\u5c40\u90fd\u80fd\u8bbf\u95ee \u4e0d\u9700\u8981\u4efb\u4f55\u83b7\u53d6\u64cd\u4f5c", "num": "8178", "d": "5/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u6df1\u5165\u54cd\u5e94\u5f0f\u539f\u7406 \u4e00\u8282\u4e2d\u4ecb\u7ecd\u7684vue\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u4e2d\u90a3\u4e00\u53e5 \u5f53\u4f60\u628a\u4e00\u4e2a\u666e\u901a\u7684 javascript \u5bf9\u8c61\u4f20\u7ed9 vue \u5b9e\u4f8b\u7684 data objectdefineproperty \u628a\u8fd9\u4e9b\u5c5e\u6027\u5168\u90e8\u8f6c\u4e3a vue objectdefineproperty gettersetter expected actually happening nothing everything works perfect vue", "num": "8176", "d": "5/2018"}, {"title": "disable slot warning duplicate presence", "body": "version reproduction link steps reproduce iterate slot expected want able use separator slot vfor iteration actually happening", "num": "8175", "d": "5/2018"}, {"title": "chrome sorting order array changes gets reactive", "body": "version reproduction link steps reproduce open sandbox chrome main code situated helloworldvue checkboxes sorted default order case size check checkbox checked checkbox appear top results sorted default order see default sorting interupted check checkbox additional information logged console expected make code work clone mode original sorting cloning used json stringify parsed json tested well methods object gets reactive getters setters added sorting order stay actually happening parsing object gets reactive sorting order array changes chrome browsers mozilla internet explorer edge works fine", "num": "8174", "d": "5/2018"}, {"title": "svg icons doublepainted latest firefox", "body": "version reproduction link steps reproduce issue apparent immediately expected svg icon actually happening svg icons seen firefox issue vue causes svg icon library uikit doublepaint icons", "num": "8172", "d": "5/2018"}, {"title": "scoped slots data ca nt passed custom directives", "body": "version reproduction link steps reproduce open link open browser dev tools see javascript error expected would expect use data parameters custom directives actually happening data custom directive", "num": "8171", "d": "5/2018"}, {"title": "vif\u4e2d\u7684\u4f7f\u7528key\u7ba1\u7406\u53ef\u590d\u7528\u5143\u7d20\u7684\u7591\u95ee", "body": "version reproduction link steps reproduce expected \u80fd\u590d\u7528 actually happening \u4e0d\u80fd\u590d\u7528", "num": "8170", "d": "5/2018"}, {"title": "\u6dfb\u52a0\u6837\u5f0f\u540ejs\u6548\u679c\u5931\u6548", "body": "version reproduction link steps reproduce imvuersrccomponentscitypickercitypickeritemvue\u8fd9\u4e2a\u6587\u4ef6\u91cc\u9762 \u53ef\u4ee5\u542f\u52a8\u8fd9\u4e2a\u9879\u76ee \u7136\u540e\u8fdb\u5165 expected \u6dfb\u52a0css\u6837\u5f0f\u540e\u4e0d\u5f71\u54cdjs\u903b\u8f91\u95ee\u9898 actually happening \u6dfb\u52a0css\u540ejs\u65e0\u6cd5\u89e6\u53d1\u4e8b\u4ef6", "num": "8169", "d": "5/2018"}, {"title": "usermade directive", "body": "binding delay", "num": "8168", "d": "5/2018"}, {"title": "ssr always add assets url even publicpath empty", "body": "version reproduction link steps reproduce need repro written code could empty resonable expected generates generates rather different actually happening generate could introduce extra judgement could use directly", "num": "8167", "d": "5/2018"}, {"title": "updating vnodecomponentoptionspropsdata nt trigger render", "body": "version reproduction link steps reproduce click one inactive tabs nt get rerender see parent component tabsjs stateactiveindex updated nothing happens children expected update render function called update component actually happening even though updated render function never called think regression appeared see example working looked release notes think commit one causing problem please let know something help thanks advance", "num": "8166", "d": "5/2018"}, {"title": "watcher hidden component triggered becoming visible", "body": "version reproduction link steps reproduce press change property press show component proptowatch watcher triggered expected watcher component notified changed property became visible actually happening component notified changed property invisible sure really bug intended behaviour understand invisible component active thus notified invisible feel component becomes visible informed changed properties especially differ initial default value empty string example", "num": "8165", "d": "5/2018"}, {"title": "vmcomputedwatchers available", "body": "problem feature solve ihave many variate watched computed property want get variate computed property time put variates array find vue instance vmcomputedwatchers get variate ca nt find vue official website want make sure property available proposed api look like computed quicktype return thisgetsearchvalue quick titleexpre return thisgetsearchvalue title", "num": "8164", "d": "5/2018"}, {"title": "vmcomputedwatchers available", "body": "ihave many variate watched computed property want get variate computed property time put variates array find vue instance vmcomputedwatchers get variate ca nt find vue official website want make sure thisproperty available", "num": "8163", "d": "5/2018"}, {"title": "vueruntimecommonjs vueserverrenderer nt find useragent undefined", "body": "use vue server render node module vue node module vue ssr run server problem tells find useragent undefined find code vueserverrender vueruntimecommonjs var ua inbrowser amp amp windownavigatoruseragenttolowercase nodejs windownavigator undefined window exists nt know", "num": "8162", "d": "5/2018"}, {"title": "prune keepalive cache logic code", "body": "problem feature solve use keepalive routerview request detail id different detail ids need remove notrecentlyused cache leave router beforerouterleave found related issues git nt solve problem way keepalive max props good need remove cache logic code proposed api look like vm prunecache cache", "num": "8161", "d": "5/2018"}, {"title": "ajax method fails firefox fetch works created section methods section", "body": "version solution add link problem user getting redirected method failed steps reproduce access link site fetch call created function works successfully verify accessing link scrolling bottom seeing value createdworks successfully added click link subpage disclaimer clicking link downloads pdf file get networkerror firefox request works chrome safari edge simplified code page removed nonessential functions link content export default created fetch methods count function event fetch expected fetch successfully makes get request actually happening networkerror firefox", "num": "8160", "d": "5/2018"}, {"title": "\u4e0d\u80fd\u8bbf\u95ee pc\u7248 \u4e2d\u6587vue\u5b98\u7f51", "body": "version reproduction link steps reproduce open url expected actually happening \u4e2d\u56fd\u4eba\u6ca1\u5730\u4f4d\u554a", "num": "8159", "d": "5/2018"}, {"title": "ie problem using directive uppercase input vmodel", "body": "version reproduction link steps reproduce using internet explorer type input anything ends letter eg asdas remove focus input expected input keeps new value typed actually happening input value goes back previous value working project input typetext values must uppercase created directive user types value would automatically uppercase letter works chrome way nt ie", "num": "8158", "d": "5/2018"}, {"title": "help neededfeature request custom key needed vue export default", "body": "important note nt want happen vue want know implement projects ca nt done right feature request customkey already happen please tell happy close problem feature solve keeping things short want duplicate stuff make something like proposed api look like exactly sure", "num": "8156", "d": "5/2018"}, {"title": "closed vuebot", "body": "edit issue exported deleted content duplication", "num": "8155", "d": "5/2018"}, {"title": "vuex\u9879\u76eewebpack\u6253\u5305\u95ee\u9898", "body": "vue\u9879\u76eewebpack\u6253\u5305\u4f1a\u81ea\u52a8\u5ffd\u7565", "num": "8154", "d": "5/2018"}, {"title": "vue\u9879\u76eewebpack\u6253\u5305\u4f1a\u81ea\u52a8\u5ffd\u7565", "body": "", "num": "8153", "d": "5/2018"}, {"title": "\u5982\u4f55\u7528vue \u5728for\u5faa\u73af\u4e2d \u52a8\u6001\u7ed9button\u6309\u94ae\u6dfb\u52a0 \u76f8\u5173\u5c5e\u6027", "body": "dname", "num": "8151", "d": "5/2018"}, {"title": "von click work ie", "body": "version reproduction link steps reproduce click something like using click auth modal displayed although working fine browsers work ie component use click work tried fix stuck anyone help please expected von click work well actually happening sure maybe ie supported", "num": "8150", "d": "5/2018"}, {"title": "von click work ie", "body": "click something like using click auth modal displayed although working fine browsers work ie component use click work tried fix stuck anyone help please", "num": "8149", "d": "5/2018"}, {"title": "textalign justify", "body": "justify position relative width height textalign justify justify num width lineheight display inlineblock textalign center background fff color borderradius solid cursor pointer transition easeinout justify content display inlineblock position relative top height lineheight width background zindex list var vm new vue el app data num", "num": "8148", "d": "5/2018"}, {"title": "unexpected behavior velse used vfor tag", "body": "version reproduction link steps reproduce nothing expected tab directive vfor one div actually happening tab three div due previous vfor", "num": "8147", "d": "5/2018"}, {"title": "ca nt use compiler strict mode", "body": "problem feature solve use compiler strict mode uses statement compile templates browser run time strict mode anybody solution proposed api look like change statements another solution", "num": "8145", "d": "5/2018"}, {"title": "vue cancels unmute updating dom", "body": "version reproduction link steps reproduce ensure browser tab unmuted audio audible click button several times observe effects toggle mute without dom update properly toggles mute every time toggle mute require two clicks unmute video expected toggle mute dom update actually happening requires two calls actually unmute video ran trying toggle mute icon based mute state tried vshow class dataattr changes problem", "num": "8144", "d": "5/2018"}, {"title": "support methods functional component template", "body": "problem feature solve way use functions functional template declare methods outside scope functionalcomponent definition access within render method snippet access use functional template snippet snippet function emit listeners eventname args const eventhandler listeners eventname typeof eventhandler function eventhandler args const comp functional true render h ctx return h attrs href click emit ctxlisteners open link export default comp snippet nt work function emit listeners eventname args const eventhandler listeners eventname typeof eventhandler function eventhandler args const comp functional true export default comp proposed api look like const comp functional true methods emit listeners eventname args const eventhandler listeners eventname typeof eventhandler function eventhandler args export default comp", "num": "8142", "d": "5/2018"}, {"title": "click", "body": "", "num": "8141", "d": "5/2018"}, {"title": "add ability access namespaced getters dot notation", "body": "problem feature solve working namespaced module eg users module access items user module state like however ca nt access getters way return error undefined instead access bracket notation true even though without modules access getters dot notation reason nt possible getters would nice could access namespaced getters way namespaced state current behavior seems inconsistent proposed api look like given namespaced module add ability access getters", "num": "8137", "d": "5/2018"}, {"title": "event delivery component inheritance", "body": "problem feature solve component inheritance important dealing large scale web app posted topic know web app solved presentation container pattern presentation components functional programming easier way container components prefer use traditional gui pattern component inheritance could easier via modern javascript especially creating large scale gui app mixin best way proposed api look like premise compatible existing api add events property vue instance", "num": "8136", "d": "5/2018"}, {"title": "development mode official vue page", "body": "version reproduction link steps reproduce open official vuejs page press ctrl shift open developer tools chrome look logs expected vuejs page production environment development mode disabled actually happening page development mode log states disabled production found bug playing around chrome development tool see certain vue elements behave clicking stuff way discovered issue nt crucial think noted", "num": "8135", "d": "5/2018"}, {"title": "use vuejs templating engine send emails", "body": "problem feature solve vuejs components show dashboard would like reuse components send email latest view dashboard serverpart using springboot moment forced duplicate vuejs components thymeleaf templates maintain components templates would possible achieve proposed api look like would like ask vue tool render one components giving data parameters either commandline tool better something compiled java tool languages libraries", "num": "8134", "d": "5/2018"}, {"title": "unreachable code return statement", "body": "version reproduction link steps reproduce none expected none actually happening firefox quantum debugger console unreachable code return statement", "num": "8133", "d": "5/2018"}, {"title": "vmslotsdefault unexpected undefined tag vnode", "body": "version reproduction link steps reproduce register vue component slot html component wrap named slot default content console show default slotsdefaut un expected undefined tag vnode expected slotsdefault div exist actually happening additional undefined tag vnode tag undefined data undefined children undefined text elm text asyncfactory undefinedasyncmeta undefinedchildren undefinedcomponentinstance undefinedcomponentoptions undefinedcontext undefineddata undefinedelm textfncontext undefinedfnoptions undefinedfnscopeid undefinedisasyncplaceholder falseiscloned falseiscomment falseisonce falseisrootinsert falseisstatic falsekey undefinedns undefinedparent undefinedraw falsetag undefinedtext child proto vnode tag div data children array text undefined elm divdefault rendered truelength array", "num": "8132", "d": "5/2018"}, {"title": "linuxmint\u4e0biview table\u663e\u793a\u5f02\u5e38", "body": "mint sylviagoogle chrome \u7248\u672c", "num": "8131", "d": "5/2018"}, {"title": "warn set used property already exist", "body": "version reproduction link steps reproduce see codepen snippet follow comment change vm data see happens expected even prop already exists using still makes reactive thus trigger view update actually happening using later nt update view related source code think users would expect make prop reactive whenever used initially opened issue api doc nt clear comment source code", "num": "8129", "d": "5/2018"}, {"title": "bottom navigation button ugly animation taking full height", "body": "version reproduction link steps reproduce create simple bottom navigation expected animations click take full height button actually happening animations nt take full height button seem cropped remove styling codepen see talking repaired setting fixed height button content probably better solutions problem ca nt really css", "num": "8127", "d": "5/2018"}, {"title": "refsinputfocus works pc nt work phone", "body": "code please try phone however works vue", "num": "8126", "d": "5/2018"}, {"title": "refsinputfocus", "body": "\u6309\u94ae new vue el app data show false methods showbtn thisshow thisshow thisshow nexttick gt refsinputfocus", "num": "8125", "d": "5/2018"}, {"title": "vueset wrong type inferred typescript", "body": "given typescript store state interface export interface office id number name string zip string city string address string phone string string export interface organization key string export interface team id number name string store action const setoffice state organizationstate item office gt vueset stateoffices itemid item matter vueset stateoffices itemid item typescript gives error argument type key string office assignable parameter type team property includes missing type key string office vueset stateoffices itemid item typings versions vueset one object one array case always inferres type array funny thing remove teams team works expected", "num": "8124", "d": "5/2018"}, {"title": "\u5728element\u5c5e\u6027\u4e2d\u7684\u8f6c\u4e49\u5b57\u7b26\u5728vue\u5355\u6587\u4ef6\u6a21\u677f\u4e2d\u6ca1\u6709\u751f\u6548", "body": "version reproduction link steps reproduce \u5728 vue\u5355\u6587\u4ef6\u7ec4\u4ef6 \u7684template\u4e2d\u63d2\u5165\u5e26\u8f6c\u4e49\u5b57\u7b26\u7684\u5c5e\u6027 expected content \u5c5e\u6027\u5e94\u8be5\u88ab\u8f6c\u4e49\u6210unicode\u5b57\u7b26a actually happening content \u5c5e\u6027\u88ab\u539f\u6837\u8f93\u51fa\u6210\u4e86\u672a\u8f6c\u4e49\u7684\u5b57\u7b26\u4e32", "num": "8123", "d": "5/2018"}, {"title": "vfor working version invalid vfor alias expression vfor banner bannerlist", "body": "version reproduction link steps reproduce expected \u6b63\u5e38\u904d\u5386\u5217\u8868 actually happening", "num": "8122", "d": "5/2018"}, {"title": "vfor working version invalid vfor alias expression vfor banner bannerlist", "body": "", "num": "8121", "d": "5/2018"}, {"title": "typescript type null assignable type propvalidator", "body": "version reproduction link steps reproduce paste run expected errors type actually happening type null assignable type propvalidator works disabled type instead", "num": "8120", "d": "5/2018"}, {"title": "vue nt listen item value array changes", "body": "array index array index gt vdom update arraysplice index array index gt vdom update done bug principle", "num": "8119", "d": "5/2018"}, {"title": "vuemixin clearing vueoptionscomponents", "body": "version reproduction link steps reproduce import vue register global component added register global mixin expected nt change actually happening global components registered mixins removed", "num": "8118", "d": "5/2018"}, {"title": "keepalive working inside vfor containing vif", "body": "version reproduction link steps reproduce click toggle button multiple times expected vshow vif toggle two values computed creation components actually happening vif values change time toggle button clicked new instance component created every time", "num": "8117", "d": "5/2018"}, {"title": "falsy values attributes present element", "body": "version reproduction link steps reproduce add attribute open devtools observe expected present element actually happening attribute present element may expected behaviour would workaround usecase attributes form input form dynamically generated components arbitrarily nested need query datavalid attribute check complete form validity", "num": "8116", "d": "5/2018"}, {"title": "vfor\u9762\u5bf9canvas\u6807\u7b7e\u7684\u95ee\u9898", "body": "", "num": "8115", "d": "5/2018"}, {"body": "wrote works use backticks please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "repro mandatory", "d": "5/2018"}, {"body": "done userland may want promise data give try", "d": "5/2018"}, {"body": "please open issue vue loader repo", "d": "5/2018"}, {"body": "youre using html template everything gets converted lowercase vue gets asked multiple times able find extra information necessary also section docs", "d": "5/2018"}, {"body": "read red tip", "d": "5/2018"}, {"body": "also said demo case transition actually css one js hook part set maxheight determined using script looked source code function length effect read provided try detect transition end css interestingly behavior linked gt leave transition run gt leave transition run gt leave transition run gt leave transition run see another demo", "d": "5/2018"}, {"body": "may want use", "d": "5/2018"}, {"body": "handle stuff like mixins usage directly calling methods edit nt rtfm looks perfect try see well actually works though might massage types bit get working", "d": "5/2018"}, {"body": "ktsn close anything could vue core improve situation", "d": "5/2018"}, {"body": "plugin nt work everything seems assume exports edit still get error wrap component", "d": "5/2018"}, {"body": "fine use ideal creates standalone instance would nice vue still resolved component references everything else way bare options objects nt really problem anyway unless one users messes somehow ends two different vue imports", "d": "5/2018"}, {"body": "alternatively may try detect duplicate vue imports", "d": "5/2018"}, {"body": "seems go open issue", "d": "5/2018"}, {"body": "see sorry", "d": "5/2018"}, {"body": "intentional afaik", "d": "5/2018"}, {"body": "mentioned wrong repository yes intentional", "d": "5/2018"}, {"body": "please provide valid repro opening issue note ask questions dircord server forums", "d": "5/2018"}, {"body": "forgot listen leave event transition component enter", "d": "5/2018"}, {"body": "sorry bad cache problem demo bin shall create new issue proper demo", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "according docs template expressions sandboxed access whitelist globals attempt access user defined globals template expressions possible reasons behavior guess security avoiding sideeffects template rendering workaround case creating method calls global function", "d": "5/2018"}, {"body": "working expected option stands single html element vue instance mount uses hood first element matches selector selected ca nt mount single vue instance multiple html elements", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "something like vue feel free way people use way want personally rather build models backend sometimes type objects typescript frontend regarding proposition also vague hang around discord chat forum discuss ideas others get something interesting could open issue keep mind objects easy powerful time want complexify things box also things talked able find things issues want explore ideas", "d": "5/2018"}, {"body": "valid repro please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "order consistent ref used vfor loop must use array probably know nt need bind different refs resulting ref array nt think worth adding docs feel free tell chrisvfritz may different opinion", "d": "5/2018"}, {"body": "ref used vfor loop must use array case like said docs says ref used together vfor ref get array containing child components mirroring data source sorry using said docs missleads developer probably know nt need bind different refs resulting ref array element holding vfor would agree case", "d": "5/2018"}, {"body": "looks like language issue used nt mean used element component", "d": "5/2018"}, {"body": "click url changed params changed template", "d": "5/2018"}, {"body": "everything works expected route object reactive means change route changes results update template updated hook called remove reactive property template change route nt update reactive data would update template fix simply watch changes object update article data", "d": "5/2018"}, {"body": "thanks sqal", "d": "5/2018"}, {"body": "problem nt rerender using template", "d": "5/2018"}, {"body": "reproduction far beyond minimal sorry ca nt locate problem reproduction like", "d": "5/2018"}, {"body": "please provide repro reporting may bug", "d": "5/2018"}, {"body": "works normal according test maybe need provide info", "d": "5/2018"}, {"body": "closing info provided", "d": "5/2018"}, {"body": "ca nt parenthesis expression valid css property value nothing vue", "d": "5/2018"}, {"body": "thx missed", "d": "5/2018"}, {"body": "functional components need pass", "d": "5/2018"}, {"body": "posva thank answer actually used nt render function real code used single file component vueloader related problem", "d": "5/2018"}, {"body": "yes", "d": "5/2018"}, {"body": "\u65e0\u6cd5\u91cd\u73b0 \u53e6\u5916\u4e2d\u6587\u6587\u6863\u6709\u81ea\u5df1\u7684\u4ed3\u5e93", "d": "5/2018"}, {"body": "use capture bindings component selectively forward native html element see binding native events components", "d": "5/2018"}, {"body": "justineo oh nt learned great feature tried nt seem work vue musicplayervue logged musicplayer hook like result empty object without property however remove modifier see function using vue expected nt work modifier", "d": "5/2018"}, {"body": "use modifier see contains parentscope von event listeners without native modifiers", "d": "5/2018"}, {"body": "justineo nt quite get explained binding native events components use listen inner elements comes doc stating ca nt use", "d": "5/2018"}, {"body": "actually works escape hatch using thirdparty components nt provide specific events need using would make code coupled implementation components used decouple parts whether event listener transparent component user means use bindings without", "d": "5/2018"}, {"body": "justineo see btw since version use", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "justineo thanks closing issue", "d": "5/2018"}, {"body": "stylistic difference", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "relevant issues nuxtjs", "d": "5/2018"}, {"body": "nuxt issue please open", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "working expected invoked use computed property instead handling api data fetching may find insteresting please next time consider using forum discord server stackoverflow questions first come back open issue turns bug", "d": "5/2018"}, {"body": "issues repo also require valid reproduction link think better report discuss issue element ui team first", "d": "5/2018"}, {"body": "justineo said need boiled repros external libs te check bugs", "d": "5/2018"}, {"body": "looking probably code repeatedly calling component definition request without minimal reproduction little", "d": "5/2018"}, {"body": "see", "d": "5/2018"}, {"body": "duplicate", "d": "5/2018"}, {"body": "think hyperscript inside function quite close proposed api touch real dom inside string templates render functions", "d": "5/2018"}, {"body": "html code use build step precompilation", "d": "5/2018"}, {"body": "write custom registration logic like js function globalregister component prefixedname const name subcomponents component const realname prefixedname name vuecomponent realname component objectkeys subcomponents foreach subname gt const subcomponent subcomponents subname globalregister subcomponent use like tested get point assume", "d": "5/2018"}, {"body": "justineo good solution global register sometimes also need componentlevel register js appvue import list components export default name app components list course make helper function extract full components js appvue import list components import extractcomponents utils export default name app components extractcomponents listname list import extra codes increase cost use", "d": "5/2018"}, {"body": "achievable user land custom webpack loader directly specifying sub components main component overloading vue component method creating global mixin feel free create library reference prefer keep explicit way core", "d": "5/2018"}, {"body": "justineo posva thank published plugin implement feature", "d": "5/2018"}, {"body": "nt put vue files put html template", "d": "5/2018"}, {"body": "thanks quick response evan unfortunately actual use case nt allow add html template since images nested lowerlevel component read lot docs nt seen anything sfc miss something chance consider issue", "d": "5/2018"}, {"body": "looking vueruntime bit actually looks like issue production guess deal would nice console errors development thanks", "d": "5/2018"}, {"body": "seems come vueissuehelper open issue", "d": "5/2018"}, {"body": "yep nt aware repo yet thanks letting know moved closing issue", "d": "5/2018"}, {"body": "come vueissuehelper open issue", "d": "5/2018"}, {"body": "yep thanks letting know moved closing issue", "d": "5/2018"}, {"body": "sorry still wrong repository looking one", "d": "5/2018"}, {"body": "seems bug chrome old versions like case android using chrome checked tested chrome got chrome last version required prefixes properties assume nothing vue side", "d": "5/2018"}, {"body": "justineo got", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "production link local url provide information issue better make minimal reproduction problem codesandbox reproduction repo github", "d": "5/2018"}, {"body": "way much code repro nt look related problem want show also external library involved closing boiled repro provided also appreciate take time create issue english anybody answer also benefit", "d": "5/2018"}, {"body": "reload dev seems acceptable fairly large application unless expect app times larger already future", "d": "5/2018"}, {"body": "thanks responding anticipating app grow pages making concerned single json file containing code without least ability split common chunks scale us also subjective course noticeable penalty every refresh app", "d": "5/2018"}, {"body": "vue wraps observed array mutation methods also trigger view updates examples", "d": "5/2018"}, {"body": "please read also", "d": "5/2018"}, {"body": "please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "nt mind closed open order keep tracker bugs ping though", "d": "5/2018"}, {"body": "also try log testinfo destroyed hook see new value object destroyed", "d": "5/2018"}, {"body": "happens right tearing vue instance normal watchers trigger would trigger instance destroyed making watcher functions invalid call watcher hook instead changing data", "d": "5/2018"}, {"body": "would say would nice mention documentation cause called right vue instance destroyed stage instance still fully functional", "d": "5/2018"}, {"body": "vmodel codesanbox keep mind select elements use need attribute option please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "sorry", "d": "5/2018"}, {"body": "normal sequences whitespace collapsed newline characters source handled whitespace lines broken necessary fill line boxes", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "qualified reproduction please provide something real thanks", "d": "5/2018"}, {"body": "special attribute used vue maybe could add warning", "d": "5/2018"}, {"body": "posva special ca nt find comment docs", "d": "5/2018"}, {"body": "yozman element useful work around limitations indom templates", "d": "5/2018"}, {"body": "justineo think case different functional component", "d": "5/2018"}, {"body": "reserved word use something else want us treat keyword element use component would breaking change feasable vue", "d": "5/2018"}, {"body": "linusborg roadmap must feature render vnode vnodes", "d": "5/2018"}, {"body": "linusborg somecase use render function define templates red warning ca nt use slot except fixed", "d": "5/2018"}, {"body": "roadmap vue none yet havent started working finished plans must feature render vnode vnodes somecase use render function react define templates red warning ca nt use slot except fixed nt understand trying say normal slots scoped slots templates use render functions exactly feature functionality missing", "d": "5/2018"}, {"body": "anything listed reserved going change even", "d": "5/2018"}, {"body": "composition mode accents languages like japanese see underline completely normal composition nt finished browser nt inform something typed", "d": "5/2018"}, {"body": "understand correctly happen keyboards current documentation implies happen keyboards require ime", "d": "5/2018"}, {"body": "vmodel already supported functional components need things manually render functions though also use datamodel see", "d": "5/2018"}, {"body": "thank answer posva think work better balance conveniance low level features lot edge cases covered vmodel getting lost mean lot js input text domprops value value input function event eventtargetcomposing return value eventtargetvalue input radio domprops checked q value null change function event value null input checkbox domprops checked arrayisarray value value null gt value change function event var value el eventtarget c elchecked true false arrayisarray var v null v elchecked lt amp amp value aconcat v else gt amp amp value aslice concat aslice else value c input range domprops value value r function event value eventtargetvalue select change function event var selectedval arrayprototypefilter call eventtargetoptions function return oselected map function var val value ovalue ovalue return val value eventtargetmultiple selectedval selectedval code even including vmodel number lazy trim modifiers low level rendering mean automatically loose conveniance vmodel could set listeners workarounds object real input code could choose use directly input ignore completely adjustments perhaps technical limitations ignoring case", "d": "5/2018"}, {"body": "seems duplicate already pr work correctly revert according discussions", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "repro nt even run ie fixing problems nt seem issue btw looks like trying mimc vmodel", "d": "5/2018"}, {"body": "oh yeah forgot say use template inside inbrowser templates browsers strips", "d": "5/2018"}, {"body": "thank much", "d": "5/2018"}, {"body": "example provide display flex applied case find bug investigation vueloader repo", "d": "5/2018"}, {"body": "apart bit much vue also involves bundling done since modules create scopes writing instead may yield different results sure possible make sure warning reported incorrectly also rare problem since people use cli scaffold project already comes indexhtml file", "d": "5/2018"}, {"body": "happen call without explicitly importing warning using eslint either way vue responsibility", "d": "5/2018"}, {"body": "need add manually data object", "d": "5/2018"}, {"body": "yep works thx nt docs", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "use", "d": "5/2018"}, {"body": "justineo tried", "d": "5/2018"}, {"body": "please open issue thank", "d": "5/2018"}, {"body": "please follow instructions issue template thank", "d": "5/2018"}, {"body": "justineo", "d": "5/2018"}, {"body": "recommend reread vbind", "d": "5/2018"}, {"body": "modify use", "d": "5/2018"}, {"body": "call trim value binding attribute value global trim option likely add hard debug bugs increase vue size something already doable easily", "d": "5/2018"}, {"body": "reproduction url vue \u7684 bug", "d": "5/2018"}, {"body": "justineo", "d": "5/2018"}, {"body": "justineo \u62ff\u90a3\u4e2a\u5730\u5740\u5728\u6d4f\u89c8\u5668\u6253\u5f00\u770b\u5230\u7684\u662f\u66ff\u6362\u4e4b\u540e\u7684\u56fe\u7247", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "nt use english everyone understand", "d": "5/2018"}, {"body": "harshob \u82f1\u8bed\u6211\u4e0d\u592a\u884c", "d": "5/2018"}, {"body": "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u5728\u56fe\u7247\u94fe\u63a5\u540e\u9762\u52a0\u4e0a\u65f6\u95f4\u6233", "d": "5/2018"}, {"body": "hotao thistailoringnum thisuserphoto", "d": "5/2018"}, {"body": "repro working", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "ourt documenttion repository url indicates looking documentation version feel free open issue right repository ask team make version appearant old docs", "d": "5/2018"}, {"body": "link provided thing nearly indicating version number text looking docs", "d": "5/2018"}, {"body": "suggested open issue correct repository", "d": "5/2018"}, {"body": "keep mind name optional devtools already pick name could added behind flag vueloader open feature request", "d": "5/2018"}, {"body": "working expected happening component nt rerender prop nt changed basically already want constrain input value modify actual element another solution always sync value use computed property component use valid value watcher communicate new value options one probably fit project better something discuss communication channels like discord forum", "d": "5/2018"}, {"body": "similar problem think answer may help understand going possible solution", "d": "5/2018"}, {"body": "problem approach fundamentally breaks encapsulation like workaround posva even though requires developer component aware manual sync give context using snabbdom context custom elements web components ca nt freely reach arbitrary nodes interested seeing vuejs take since exhibits behaviorbug reported us developers certainly expecting change since dramatically perf implications everywhere thanks quick responses", "d": "5/2018"}, {"body": "see properties start proxied vue instance may conflict vue internal properties api methods access", "d": "5/2018"}, {"body": "understand yet following style guide mixins still error message comprehensible developers able fix problem without reading whole docummentation words think better error message would appropriate", "d": "5/2018"}, {"body": "want webpack smaller using vue files webpack always codesplit components check async components docs please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "superior route jumps tab page routing memory leaking time created life cycle tabs page switch memory leaks memory leaks", "d": "5/2018"}, {"body": "valid repro must minimal editable otherwise would difficult us know problem comes implementation vue us forum discord server stackoverflow seek help", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "5/2018"}, {"body": "using components fine give guide read", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "doable via custom webpack loader much done vue actually extremely long split multiple components need create new props communicate subcomponents even use tightly coupled", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "reproduction link essential bug reports thanks", "d": "5/2018"}, {"body": "please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "workaround key span", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "\u4f60\u7684 packagejson \u91cc\u9762\u7684 browserslist", "d": "5/2018"}, {"body": "need setup watcher specific point already lifecycle want prefer bloat api", "d": "5/2018"}, {"body": "check right click collect gc button removed", "d": "5/2018"}, {"body": "posva nt understand button say made next tests dev tools chrome number dom nodes increase production version chrome incognito mode chrome number dom nodes increase production version firefox memory snapshots see memory leaks", "d": "5/2018"}, {"body": "tried firefox see memory increasing wait seconds maybe minutes goes back normal around mb", "d": "5/2018"}, {"body": "maxirozay experience minutes nothing changed real app time wait minutes example pagination seconds get dom nodes click big problem performance", "d": "5/2018"}, {"body": "browser needs memory call garbage collector directly wo nt need wait maybe browser calling garbage collector tried chrome linux memory nt increase like firefox number node always vnodes vif false true document dom tree always someone else try try another latoposbrowser", "d": "5/2018"}, {"body": "maxirozay problem vshow problem vif", "d": "5/2018"}, {"body": "sorry meant vif", "d": "5/2018"}, {"body": "tested normal behaviour browser waits cleaning memory", "d": "5/2018"}, {"body": "look button looks like trash use force gc typically engine wo nt gc unless", "d": "5/2018"}, {"body": "reason nt jump reactively setting data see reactivity caveats docs use see behaviour contenteditable needs special treatment would bloat vue code supported box instead recommend using third party plugins see", "d": "5/2018"}, {"body": "clear something nt bandwidth yet either also think early open discussion also sometimes people really mistaken performance vs easytouse tradeoff important vue want make easy people start using vue web asm yet going big impact performance bottleneck dom still sure mention ssr web assembly going change ssr works", "d": "5/2018"}, {"body": "posva ssr key browser support according caniuse could ignored serverside hence migrated completely webassembly whole idea compiling binary drop vueserverrenderer package aspects architected moment simplicity talking nothing major important keep mind js called webassembly vice versa therefore absolutely nothing change majority users continue write absolutely code webassembly triggered based browser support clientside serverside completely rewritten current approach dropped", "d": "5/2018"}, {"body": "one performance examples strong proponent serverless architecture could bring extreme performance improvements well cost savings", "d": "5/2018"}, {"body": "expensive face detection algorithm normal see improvement said main slow thing dom manipulations anyway feel free add points may useful", "d": "5/2018"}, {"body": "believe two things consider makes vue better alternative react angular natural webassembly integration might key brings much attention vue leading increased community nt move back react angular imagine react implements would make community continue using vue going cost much infrastructure perspective file sizes much bigger operates much slower forgetting apps reactnative thinking web perspective could major blow already talks react webassembly believe important community prepare competition arise doubt hopefully vue integrates webassembly sooner later", "d": "5/2018"}, {"body": "imagine react implements webassembly means react lin clark aka linclark reacteurope help performance react applications browser truth shortterm immediate impact performance nt clear euphemism posva said perf bottleneck dom api javascript virtual dom diffing algorithm meaningless speed something already takes like lt still spending dom apis besides webassembly nt magic great limitations ca nt expect compile nodomaccess javascript ca nt use objects wasm barely imagine js library live implement objects top bytes file sizes much bigger operates much slower contrary wasm files way much larger compiled binary thinks size c source code vs compiled executable also check true wasm powered ui framework compiled c see demo gt gzipped files took seconds load baretothebone app counter fetch json truly amazing mind blown fast transitioning views counter fetch data still took power wasm lies boosting cpuintensive applications like face recognition demo shared us help core problem ui frameworks slowness native dom apis", "d": "5/2018"}, {"body": "fnlctrl reference video pointing video year old presenter makes lot points process changing importantly garbage collection gt ongoing work access dom api gt list highlevel goals ongoing work video points contrary wasm files way much larger compiled binary true comparison experimental project alpha stage march strange stating weigh less bytecode false everyone web states well referenced presenter webassembly makes less network overhead resulting faster downloading code hence performance improvements please take look additional runtime passed net anything like running absolutely js gt vm performance power wasm lies boosting cpuintensive applications referenced presenter believes runs faster please keep mind year ago webassembly improving another magnitude javascript ie much faster since many things need improvements expert area nt also make sense games gpuintensive nt playable web playable webassembly also webvr webassembly nobody tells ready make switch however start making progress better later optimizations available might happen time initial preparations made question starting help us better understanding project architecture dom access garbage collection available", "d": "5/2018"}, {"body": "could help change happen faster believe js developers take closer look webpack wasm loader walt syntax sugar top javascript", "d": "5/2018"}, {"body": "fnlctrl said real bottleneck current js framework cpu consumption dom related operations fixed current mvp webassembly standard hand lot overhead executing pointer switching javascript webassembly context another problem need concern olzhasalexandrov btw think need learn dose webassembly work strength kind frontend situations would suitable using current webassembly materials information thanks", "d": "5/2018"}, {"body": "becavalier saying hand lot overhead executing pointer switching javascript webassembly context another problem need concern analyzed short answer incorrect might true exact moment logically right future think would anyone write native nodejs addons switching native modules js would produce less optimized apps would correct task almost nothing anything major one benchmarks obviously find also welcome watch talks could hear mixing js webassembly nt bad thing one point webassembly gained support webpack since version gained first class support year already", "d": "5/2018"}, {"body": "olzhasalexandrov yes agree webassembly change web current time future postmvp standard complete overhead javascript context webassembly context would narrow application scenarios current webassembly pure computing applications graphic processing compressing library related applications apps need frequently switching two context environments really save lot cpu consumption get good running efficiency help webassembly frontend frameworks like vuejs without implementation gc webassembly really help lot nt need much math computing even using virtual dom wrapper real dom diff algorithm still good performance good implementation vuejs deep optimization javascript engine last least cg wg member really trying best achieve post mvp standard webassembly also better llvm backend webassembly think look forward day webassembly change web", "d": "5/2018"}, {"body": "webassembly amp vue think great discussion vue would ultimate number one within jsframeworks high time think", "d": "5/2018"}, {"body": "referenced presenter believes runs faster please keep mind year ago webassembly improving another magnitude javascript ie much faster since many things need improvements nt see chromeffedge recent release notes stating anything vast performance improvements wasm specs changed specs actual implementations also performance talking point wasm fast doubt faster without proper context meaningless many pointed wasm nt speed dom apis giving wasm dom access nt help either removes context switch overhead dom apis still going slow comparison experimental project alpha stage march strange fully functional wasm ui framework today latest release march shows exactly still development could taken advantage wasm improvements talked please enlighten another one better blazor real world example wasm ui framework experimental everyone web states well referenced presenter webassembly makes less network overhead resulting faster downloading code hence performance improvements far referenced talks specs everything look good paper someone actually tried build things would please show us lease one concrete example wasm providing great performance boost size reduction building simple spa requires calling dom apis let propose better question ever since talk wasm really good ui frameworks reactangular announced wasm rewrite plan core", "d": "5/2018"}, {"body": "without getting mixed discussion came across thread accident nt clue wasm makes sense project want add two cents currently process migrating fairly large project asmjs wasm actively following wasm performance browsers said performance improvements browsers straight wrong example take bugticket bugfix increased performance app twofold ff yet nt show ff release notes word advise instead checking browser release notes check release notes javascript engines performance increases implemented also check ticket trackers publicly available also stuff like streaming compilation recently added firefox chrome without much fanfare also nt know relevant project reactnativedom announced reacteurope layout powered wasm", "d": "5/2018"}, {"body": "find topic interesting interested wasm vuejs first bit context actually used wasm real world use case viewing big jpeg images several gb browser run image processing expert get hands dirty play little bit promising new technology vuejs part must confess newbie month two makes happy simplicity expressiveness excellent doc thanks team observations thoughts wasm wasm fast seen times faster javascript image processing algorithm convolution talking algorithm written javascript rewritten c compiled emscripten wasm information emscripten also generate optimized javascript times slower wasm convolution algorithm surprisingly faster algorithms always performance depends lot context conclusion wasm promise speed fullfilled javascript engines also optimised perform well clear win wasm files small already noted fact one requirements mvp wasm file created emscripten big blazor example part emscripten bring code standard library one core advantage wasm compilation target emscripten bring legacy cc code base browser done google earth autocad game etc often lower parts code like physics engine actual display code agree overhead calling wasm js js wasm manipulating dom wasm first identified use cases clearly benefit wasm ui ones experience guess wasm good candidate performance improvement vuejs note olzhasalexandrov everything moving new technology things improve future one want go path guess best first identify bottlenecks vuejs measuring things check wasm good candidate improve performance experiments said killer feature vuejs simplicity prefer slightly slower solution easy use fast one complex wasm used means development technology walt something else comes maintenance cost dev team compromises", "d": "5/2018"}, {"body": "vuejs already typescript support wonder much would take work assembly script vue option may somewhat offtopic issue someone really likes use vue would certainly enjoy taking paradigmframework context game ui would take ton effort would interesting able use vue paradigm compose interact webglui via something like html canvas offscreencanvas ontopic nt think webassembly good firstclass target vuejs unfortunately significant belief browsers never implement firstclass dom api access webassembly get implemented wo nt seeing time", "d": "5/2018"}, {"body": "spent time thinking topic want add extra thoughts lose considering personal experiences using vue hard time believing bottleneck vue js dom api benchmarks showcasing personal experience using vue performance using makes designing ui elegant experience runtime typechecking props ridiculous callstack depth exceptions still thread seem leaning wonder wasm js interop layer would slowdown honestly vue core team really sold wasm performance boon vue olzhasalexandrov want help vue make jump wasm need benchmarks wasm speeds expensive image processing nt mean vue bottlenecks core team really ca nt underestimate power builtin runtime typesafety wasm could give vue manually checking typeof instanceof really nt ideal potential performance boosts hand might possibly include using vuex wasm environment via web workers theoretically possible nt know anyone tried", "d": "5/2018"}, {"body": "core team task exact tech requirements glad assist beginning suggest start replacing bundle renderer production please let know benefits json parsing bundle created vueserverrenderer besides ease debugging ignore production normal usual straightforward rendering please observe reasons bad approach initial comments issue ssr optimization bring value", "d": "5/2018"}, {"body": "short look bad vueserverrenderer link source serverless first cold start triggers huge json parsing lot checks treeshake dependencies since function nt access dependencies bundles file sorry devs using including imagine great would compile wasm", "d": "5/2018"}, {"body": "another cents short look bad vueserverrenderer link source serverless statement answer question webassembly used address mentioned issues fact issue description also nt assumptions webassembly capabilitiesstrongsides less bytes performant examples unrelated usecases meet vue believe better ways fixing mentioned issues without utilizing webassebly webassembly integration lets take look glimmer example nearly close vue goals built compiler compile handlebars templates binaries glimmer vm aims increase network dom updates performance compiler vm still written typescript far know plans webassembly version please note templatingengine part whole thing already clue much effort needed achieve goal mean possible replace one compiler another get webassembly binaries place javascript sources lot work nearly viable reason imho anyone sees possible path vue implement integration guess welcome discuss though", "d": "5/2018"}, {"body": "oevgeny many already highlighted benefits migrating webassembly cons current approach ssr continue repeating things build previously said suggest try rewrite use assemblyscript better walt whole vue ecosystem rewriting small package ssr function vueserverrenderer primitive task start common approach divide big project bunch small pieces experimenting small package vuejs ecosystem good starting point", "d": "5/2018"}, {"body": "webassembly integration lets take look glimmer example far know plans webassembly version pr porting initial small part glimmer rustwasm understanding part mostly done waiting dependency binaryen allow run browsers like lack wasm support dependency ready soon possible see wasm adoption glimmer point", "d": "5/2018"}, {"body": "pr porting initial small part glimmer rustwasm great news happy glimmer team pr title says initial stab porting rust think lot related rustwasm changes pr quite big maybe things go smoother assemblyscriptwalt anyway example assemblyscript walt integration existing js productionready projectlibrary really appreciated rewriting small package ssr function vueserverrenderer primitive task start sure maybe smart enough", "d": "5/2018"}, {"body": "blazor story entirely different blazor runs top mono net runtime compiled wasm actually executes real net assembliesdlls interpreter mode interprets msil guys building stated many times addressed mono team miguel de icaza creator xamarin mono working ahead time compilation make possible compiling blazor apps straight wasm currently entire net vm downloaded app standard libraries plenty meaningless code like file io make sense browser gt size things get optimized enough pretty sure app written angular blazor smaller blazor run faster blazor given angular switched wasm may want take look one way manipulate dom rust interpreting vm vm plain wasm", "d": "5/2018"}, {"body": "mihailshishkov would please build stdweb demo namely todomvc example put repo nt include prebuilt one ca nt seem get demo compile windows machine guess also much hassle people want see demo install complete rust toolchain", "d": "5/2018"}, {"body": "installed ubuntu vm rust toolchain finally built stdweb todomvc demo js wasm todomvc demo gzipped js gzipped wasm gzipped compared vue todomvc demo gzipped js gzipped runtime bigger size perhaps nt complete waste hours setup rust env compile demo since least confirmed assumption actually trying leave built demo see yes course still experimental guess wait see size advantage future perhaps performance difference since todomvc demo simple timeline adding todo item vue stdweb guess wait complex demo find keep assuming wasm wo nt bring much performance improvement traditional applications heavily uses dom apis draw ui", "d": "5/2018"}, {"body": "arrow function expression shorter syntax function expression", "d": "5/2018"}, {"body": "note vuejs docs well use arrow functions options property callback created gt consolelog thisa vm watch newvalue gt thismymethod since arrow functions bound parent context vue instance expect often resulting errors uncaught typeerror read property undefined uncaught typeerror thismymethod function", "d": "5/2018"}, {"body": "used use arrow function forgot basic shame thank guys", "d": "5/2018"}, {"body": "diegolipinskidecastro use arrow functions data definition access component data first argument passed function also mentioned docs p", "d": "5/2018"}, {"body": "sqal last lines yeah thanks", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "closing open right way", "d": "5/2018"}, {"body": "diegolipinskidecastro please nt falling fat arrow scope caveat search ask discord server well known js caveat nvm late party", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "update issue mentioned vueloader pelase see link sorry lack attention", "d": "5/2018"}, {"body": "longer case though documented functional components case either use", "d": "5/2018"}, {"body": "hi posva thanks feedback could nt find part guide api reference usage want make pr adding info guide", "d": "5/2018"}, {"body": "thank let keep sure internal property people use one instead", "d": "5/2018"}, {"body": "cli officially released yet also docs repo", "d": "5/2018"}, {"body": "repost docs nt required", "d": "5/2018"}, {"body": "required update docs cli officially released", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "nt think link qualifies reproduction fiddle sort", "d": "5/2018"}, {"body": "expected behavior computed properties considered immutable never mutated directly", "d": "5/2018"}, {"body": "supposed work object two functions named actually getters setters see proper get shorthand syntax", "d": "5/2018"}, {"body": "fact try native get set syntax app try simpler repro see works thanks", "d": "5/2018"}, {"body": "managed get working think real app issues dealing scope lost able access able create getterssetters proper function method body syntax arrow functions got working repro also used validate computed property nt rerun every time field changed makes sense since returning gettersetter delegates thanks putting back track evan", "d": "5/2018"}, {"body": "import one component inside right order makes sense case vue concern rather bundler", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "5/2018"}, {"body": "browser feature nothing deal vue", "d": "5/2018"}, {"body": "posva forget im said dont know tt", "d": "5/2018"}, {"body": "\u8bf7\u4e0d\u8981\u4f7f\u7528issue\u63d0\u95ee", "d": "5/2018"}, {"body": "using regular slots vue reuses warning important use scopedslot generates different vnodes time", "d": "5/2018"}, {"body": "posva nt warning sometimes customize slot template without scope", "d": "5/2018"}, {"body": "hi thanks filling issue checked link adding log final state clicking checkbox array order correctly reflected dom link vue issue please check implementation", "d": "5/2018"}, {"body": "hi thanks response actual error happening sorting check look console object cloned sorting happening correctly parse stringed facets object becomes reactive reason changes order array reactive variable see code happens anything get sorted happens chrome possible reopen issue", "d": "5/2018"}, {"body": "updated logging position array order changed assigned vue instance", "d": "5/2018"}, {"body": "issue related vue guess uikit library works happens using indom html template check", "d": "5/2018"}, {"body": "rendered context root instance rather case use refer parent component like", "d": "5/2018"}, {"body": "javoski thank response see use please reopen explain access directive opinion access passed component via", "d": "5/2018"}, {"body": "please reopen explain access somemethod click directive sure got point clearly actually access directive according tests invoke function directly", "d": "5/2018"}, {"body": "maoberlehner way ca nt work method defined main vue instance directive evaluated scope main app template everything correct", "d": "5/2018"}, {"body": "javoski linusborg oh sorry idk copy pasted custom directive snippet fault look access value correct way apologize trouble", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "nt see anything wrong repro want vue keep using element use attribute even case would better use another data property bind inputs", "d": "5/2018"}, {"body": "\u8bf7\u4e0d\u8981\u5728\u7ec4\u4ef6\u91cc\u9762\u624b\u52a8\u7ed9 dom \u6216\u8005\u81ea\u5b9a\u4e49\u6307\u4ee4", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "dom dom vue javisperez \u5728 dom", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hi nt modify outer component props child even less vnode considered readonly instead use scoped slots provide information child parent ways communicating components tightly coupled case work nested trees well", "d": "5/2018"}, {"body": "hi posva thanks quick response look injectprovide want clarify something something working reason breaking change modifying props child setting props children components parent rendering suggested correct approach anymore", "d": "5/2018"}, {"body": "never fair workaround scoped slots need fri may juan p osorio notifications githubcom wrote hi posva thanks quick response ill look injectprovide want clarify something something working vue reason breaking change modifying props child setting props children components parent rendering suggested comment correct approach anymore receiving mentioned reply email directly view github mute thread gt eduardo san martin morote", "d": "5/2018"}, {"body": "intended check option docs think looking", "d": "5/2018"}, {"body": "anything starting pretty much private please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "ok thank sorry bother", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hey discussed earlier others issues want achieve keepalive want cache last x component rendered actually create component basing keepalive source code exposing function actually go declarativity scenario looks like using prop work", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "behaviour may seem weird never directly modify value input use splitting source truth instead use computed property setter sets text uppercase value want keep lazy behaviour play two variables", "d": "5/2018"}, {"body": "thanks posva reply say", "d": "5/2018"}, {"body": "cc", "d": "5/2018"}, {"body": "need probably mixins case please provide information need possible use cases etc", "d": "5/2018"}, {"body": "fnlctrl nt need mixins want custom key load components instead different key name please provide information need possible use cases etc want follow pattern gt might css want javascriptvue components also distinguish components objects article another harry object signify something object may used number unrelated contexts one currently see making modifications types components could potentially knockon effects lot unrelated places tread carefully example component signify something component concrete implementationspecific piece ui changes make detectable context currently looking modifying safe side effects example", "d": "5/2018"}, {"body": "fnlctrl looking reply", "d": "5/2018"}, {"body": "honestly find hard understand trying achieve custom fields eg accessed please note issues well defined feature requests used seeking help nt know want discuss forum first", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "ie support object property shorthand use instead", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "priority vif vif wrong times hence velse rendered times see correct usage", "d": "5/2018"}, {"body": "compiler works fine strict mode maybe mean strict csp either way need provide information reproduction inbrowser compilation works regardless strict mode works", "d": "5/2018"}, {"body": "posted issue seeing gave much clarity hack suggested caused code work however try new function syntax make strict mode work", "d": "5/2018"}, {"body": "also working salesforce problem described issue using runtime compilation getting error keyword add around keyword library work better practice way", "d": "5/2018"}, {"body": "changed main vue code salesforce still threw error saying strict mode code may include statement", "d": "5/2018"}, {"body": "nt unmuting directly manipulating dom instead mutate state let vue vue job making sure dom sync state", "d": "5/2018"}, {"body": "thanks mentioned mutating attribute via state nt work pauses video comparison fluidly unmute targeting element directly trying custom video controls ios compatible way achieve vue missing related new policies ios", "d": "5/2018"}, {"body": "vue functional component define stateless component case applicable functional components pack stateful component", "d": "5/2018"}, {"body": "yunfong feature request asking functionalstateless components support obj question use methods functional components add making functions accessible via functionaltemplate nt make component stateful happy open pr fr approved", "d": "5/2018"}, {"body": "could open issue vue loader instead please", "d": "5/2018"}, {"body": "posva would change core adding object component context compilation step necessary template able access methods syntax like", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "right repo something achieve using proxy custom plugin", "d": "5/2018"}, {"body": "oops sorry put vuex repository posva elaborate little though think done part custom development instead supported natively builtin behaviour seems inconsistent", "d": "5/2018"}, {"body": "let keep discussion forum get something elaborated feature request note component composition works better web applications works well html structure", "d": "5/2018"}, {"body": "feature", "d": "5/2018"}, {"body": "something interest working", "d": "5/2018"}, {"body": "closing nt follow issue requirements way reproduce", "d": "5/2018"}, {"body": "empty text node preserving white space think", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "expected whitespace preserved default nt want whitespace filter use preservewhitespace false vueloader options", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "setting different last line please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "5/2018"}, {"body": "sorry messed example try read read source code linked briefly easy see talking title issue asking design decision way", "d": "5/2018"}, {"body": "im sure get question vue detect assignment need set", "d": "5/2018"}, {"body": "posva think jjpandari would like use make property reactive already added like example nt see use case property already exists think would good provide development warning users know done something wrong example previously created without nonreactive think warning like would useful think", "d": "5/2018"}, {"body": "seems fine also think hardly useful warning ok", "d": "5/2018"}, {"body": "chrisvfritz would see logged browser console something would build process thinking taking stab", "d": "5/2018"}, {"body": "runtime dev warning want add", "d": "5/2018"}, {"body": "think valid use case setting set existing properties application code object initially empty call getting object api called get updated object sent api nt really want check property exist using set since would verbose", "d": "5/2018"}, {"body": "fnlctrl bit unclear way issue initially worded chris codepen good example real issue jjpandari real issue created nonreactive property later called nonreactive property expecting would switch property nonreactive reactive pull request added also addressing usage call set nonproduction environment check trying set nonreactive property case would get warning said property reactive", "d": "5/2018"}, {"body": "see though another question make work already nonreactive property nt see limit", "d": "5/2018"}, {"body": "fnlctrl thinking someone first creates unreactive property tries make reactive later reference property two events likely create difficulttodiagnose bug showing warning make property reactive start encourage best practice eliminates window bugs occur", "d": "5/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow btw vuetify discord server", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "issue", "d": "5/2018"}, {"body": "\u89c1", "d": "5/2018"}, {"body": "duplicated", "d": "5/2018"}, {"body": "thx", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "would even put null type say prop anything done custom validator always returns true", "d": "5/2018"}, {"body": "basic type check matches type also seen mentioned guys quite issues seems work fine regular js", "d": "5/2018"}, {"body": "impossible current typing schema cast manually might change future version exploit conditional type model prop type however might breaking change", "d": "5/2018"}, {"body": "personally prefer rewrite typing schema vue said typing validator impossible current type files let patiently wait vue", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "5/2018"}, {"body": "please read docs", "d": "5/2018"}, {"body": "still property anymore", "d": "5/2018"}, {"body": "expected behaviour keepalive component removed cached component go", "d": "5/2018"}, {"body": "sanchitgn explicitly convert string eg", "d": "5/2018"}, {"body": "bound value boolean use way nt need falsy values bound elements", "d": "5/2018"}, {"body": "expected behavior", "d": "5/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "5/2018"}, {"body": "either use vcloak separate template", "d": "5/2018"}, {"body": "thank kaelwd good workaround hand wonder worth special handling core though problem might also occur ssr nevertheless write directive like focus input hydrated", "d": "5/2018"}, {"body": "tried fix luck think similar issue trying fix idea wo nt work since works differently nature since runs page loads think solution must calling element component mounted nt find implementation use little guidance possible", "d": "5/2018"}, {"body": "nothing vue link reproduces issue vanilla js basically browser feature pressing back button restore final state checkboxes also dom modifications done via javascript ignored scenario speculate browser go link browser takes snapshot final state checkboxes modified javascript second third checked go back browser tries restore state initial load second third checkbox checked vue kicks second checkbox gets unchecked solve simple avoid dom template", "d": "5/2018"}, {"body": "thanks taking time look yaodingyd", "d": "5/2018"}, {"body": "sodatea could share steps used locate bug seems even assign empty implementation bfcache still work website checking still nt know narrow problems", "d": "5/2018"}, {"body": "anyone may interested debug bfcache setup webkit project follow tutorial debug method vue case fail activedomobject called", "d": "5/2018"}, {"body": "even necessary order architecture app hundreds organized components loaded demand crucial part without build step understand high traffic application need optimization opportunities build step provides however company case especially backend engineers want able give maintenance support shipped applications short staffed frontend engineers s\u00f3 leave heavy development us applications require constant changes business requirements want quickly used old way things one page jquery commands think could deliver necessary changes much faster back without build step case performance applications satisfatory clients need deliver changes faster bottleneck development team time time recognize develop modern complex application organized fashion need break components defining clear separation concerns way develop components separately deploy without build step loading asynchronally runtime defined naming pattern structure way components must created rules tell vue load components without predefined component name list without build step would manually mantained reason believe simple change one break backward compatibility simply defining one function gives app opportunity resolve component constructor runtime really shame need really nt possible achieve without modificating framework api constructors pretty well established named components think really nt add complexity future updates framework costly feature designed absolute bare minimum requirements build upon", "d": "5/2018"}, {"body": "want component name list really simple write component loader loads component id runtime", "d": "5/2018"}, {"body": "fnlctrl thank answer considering buildless architecture two problems think top head components loaded dynamically asynchronally every single one replace every single direct component invocation dynamic loader implementation detail obscures unecessarily every component definition noticed dynamic loader example without build step works render functions templates expect backend engineers mantain update nt possible support templates spoiler need one function", "d": "5/2018"}, {"body": "components loaded dynamically asynchronally every single one replace every single direct component invocation dynamic loader component dynamic give invocation different name ca nt would equivalent defined static component name list must least using something like syntax proposed noticed dynamic loader example without build step works render functions templates use templates long use runtimecompiler build vue using render function demo purpose demo using template", "d": "5/2018"}, {"body": "component dynamic give invocation different name ca nt would mean defined static component name list must least using something like syntax proposed exactly beauty elegance approach simply function vue calls searching component constructor definition today already search searches named property component object function vue call voil\u00e1 longer need defined static component name list really awesome check working sites necessary changes diff srccoreinstancelifecyclejs export function initlifecycle vm component vmwatcher null vminactive null vmcomponentloader noop vmdirectinactive false vmismounted false vmisdestroyed false srccorevdomcreateelementjs export function createelement let vnode ns typeof tag string let ctor ns context vnode amp amp context vnodens configgettagnamespace tag configisreservedtag tag platform builtin elements vnode new vnode configparseplatformtagname tag data children undefined undefined context else isdef ctor resolveasset context options components tag else isdef ctor resolveasset context options components tag contextcomponentloader tag component vnode createcomponent ctor data context children tag else unknown unlisted namespaced elements check runtime may get assigned namespace parent normalizes children vnode new vnode tag data children undefined undefined context else direct component options constructor use like javascript myplugininstall function vue options let cache optionscache vueprototypecomponentloader function id id matches expected pattern return component constructor probably async constructor otherwise return nothing normal process continues var factory cache id factory return factory var prefix optionsprefixtolowercase var plen prefixlength idsubstr plen tolowercase prefix var path idsubstr plen replace g var last pathlastindexof last pathsubstr cache id factory getloader path last return factory function getloader path last load component ajax return function resolve reject var html js var done function done html amp amp js jstemplate html resolve js var href optionsbaseurl path last utilsloadscript hrefjs function err err return reject message error loading component path script error err js optionscomponentmap path done utilsloadajax url hrefhtml cb function err response err return reject message error loading component path template error err html response done utilsloadstylesheet hrefcss function err err consolelog error loading stylesheet component path css optional stop component created vueuse myplugin prefix myprefix baseurl mybaseurl components component defines constructor global variable makes script easy debug developer tools componentmap myglobalvarcomponents already spent much time writing answer second point later thank", "d": "5/2018"}, {"body": "work single space space", "d": "5/2018"}, {"body": "would anyone write code way", "d": "5/2018"}, {"body": "syntacticsolutions nt matter fact bug right", "d": "5/2018"}, {"body": "thanks danielsharkov bug root cause different behavior indent bellow maybe add r pattern text interpolation regexp", "d": "5/2018"}, {"body": "video sure nt pages renderer process recorded one tab open", "d": "5/2018"}, {"body": "another confusing thing remembered static classes applied functional component parent applied default like normal component present data object properties available undocumented", "d": "5/2018"}, {"body": "might try give shot week one downside need extra outer div anyway might closed soon throw link come anything", "d": "5/2018"}, {"body": "awesome happy help way testing etc", "d": "5/2018"}, {"body": "updates", "d": "5/2018"}, {"body": "sorry small hack nothing usable yet try get working state weekend thanks reminder", "d": "5/2018"}, {"body": "try repo npm demo similar proposed api nt work since expression javascript needs string variable named work progress leave issue input nt tested super heavily seems working okay let know useful might expand api match javascript statement etc", "d": "5/2018"}, {"body": "cool give try middle perfect use case", "d": "5/2018"}, {"body": "vdefault would cool", "d": "5/2018"}, {"body": "lmk going seems useful add pretty easily ps use case", "d": "5/2018"}, {"body": "simple use case right last option could vdefault", "d": "5/2018"}, {"body": "cool working expected application hope add pretty easily probably tonight within maybe make issue repo move discussion away issue", "d": "5/2018"}, {"body": "thinking could implement switch vue completely untested solution use components rather directives benefit nt render additional html switch cases render functions bring child components", "d": "5/2018"}, {"body": "pretty neat vuecompose library looks cool well check constantly learning new neat things vue either works personally think directive api little readable said think happy write render function use regular statement js posva alluding earlier", "d": "5/2018"}, {"body": "let close api freeze wo nt add enough benefits worth adding happen many ifelse conditions refactor code multiple components use computed property display one use render function either use function refactor statement also possible directly write", "d": "5/2018"}, {"body": "stumbled upon found culprit would nice execute object maybe reason like", "d": "5/2018"}, {"body": "think better component options structure json changed json maybe", "d": "5/2018"}, {"body": "case representing object string tostring made believe jsonstringify used make prettier outputs object array nice tostring formatting might get around checking object tostring method last prototype chain way use tostring added prototype", "d": "5/2018"}, {"body": "right checking object tostring parameter object tostring edited file", "d": "5/2018"}, {"body": "comprehension looks good thanks want submit pr", "d": "5/2018"}, {"body": "mathieutu umm tested failed like bash summary tests completed tests failed failed tests directive vhtml support value types phantomjs linux expected webpack lt shift webpack lt webpack lt flushcallbacks webpack lt directive vtext support value types phantomjs linux expected webpack lt shift webpack lt webpack lt flushcallbacks webpack lt make elaborate", "d": "5/2018"}, {"body": "take look get time likely next monday", "d": "5/2018"}, {"body": "hey guys took time work night thanks help", "d": "5/2018"}, {"body": "mathieutu looks good using something like checks method overwritten without comparing values think would better performance", "d": "5/2018"}, {"body": "actually kind already nt compare values function references tostring defined difference check value plain object place value used ca nt say anything term performance", "d": "5/2018"}, {"body": "mathieutu ah nt know used way awesome maybe isplainobject check needed maybe move last check could performance testing", "d": "5/2018"}, {"body": "ok tested solution complicated test nt work test value like result one want needed avoid arrays fact could make comparison arrays tried benchmark tests nt anything really relevant ways", "d": "5/2018"}, {"body": "mathieutu use check object returned works fine check also seems work correct way checking case", "d": "5/2018"}, {"body": "mathieutu hmmm happens compare trying avoid seems like work objects method", "d": "5/2018"}, {"body": "gaya nt time right explain everything let play unit tests test arrays avoiding ca nt really count nt know first prototype val check doc", "d": "5/2018"}, {"body": "met problem news", "d": "5/2018"}, {"body": "maybe work together hahaha", "d": "5/2018"}, {"body": "wrote issue make sure problem bug asked irc chats discord ventrilo ts nobody answered put issue way thanks somebody helped issue", "d": "5/2018"}, {"body": "glad found problem fyi reporting issues make sure provide boiled repro external dependencies problem come", "d": "5/2018"}, {"body": "english native speaker best describe reason problem element reuse existing elements usually reused efficiency rendering want make function like want need add key input key must unique value", "d": "5/2018"}, {"body": "hi posva little know thank", "d": "5/2018"}, {"body": "tested firefox nt flicker may browser plugin something nt look like vue problem", "d": "5/2018"}, {"body": "tested firefox windows experience flickering transitioning div removed new div nt come tick probably windows firefox issue sure anything vue could workaround could add constant height wrapper around transitioning elements", "d": "5/2018"}, {"body": "fnlctrl seems like windows firefox issue gt tested linux android thank answers", "d": "5/2018"}, {"body": "want set unicode icon font html attribute css like html like think better way thank much", "d": "5/2018"}, {"body": "workaround mentioned api doc ran placeholder", "d": "5/2018"}, {"body": "need newline conditionally title attribute edit fyi simple workaround whew use unicode escape found", "d": "5/2018"}, {"body": "need use wait next release version change", "d": "5/2018"}, {"body": "right two options yes", "d": "5/2018"}, {"body": "need one fixes also patch search replace worked decided revert anyway nt need changes", "d": "5/2018"}, {"body": "give life also much interested regarding feature would though call stay line props", "d": "5/2018"}, {"body": "experiencing thing anything triggers rerender inside slotscope causes warning duplicate slot presence issue seems line slots rendered subsequent executions block true presumably first render would imagine something setting back false rerender triggered admittedly know almost nothing vue works hood wild guess bug seems like unlikely edge case happened couple times recently big fan pattern writing renderless components paired concrete implementations trying pass content consumer concrete implementation issue arising", "d": "5/2018"}, {"body": "ever find resolution", "d": "5/2018"}, {"body": "experiencing issue well using tailwind css vue sfcs helpful break class names onto multiple lines avoid long single lines n character breaking class names hopefully makes next release", "d": "5/2018"}, {"body": "finally got time dig opened pr", "d": "5/2018"}, {"body": "user ssr vshow cause style ca nt displayed", "d": "5/2018"}, {"body": "vue clear slot provide nothing slot later considered bug fixed logical behaviour explicitly provide empty slot therefore want clear default slot easiest logical solution nt get ca nt way anyhow explicit little verbose empty keyword would fine least provide way please", "d": "5/2018"}, {"body": "toooooooooooo long also reads awkwardly one thinks personally go adding declaration using flag realize little outside typical vue approach", "d": "5/2018"}, {"body": "unless use tag general", "d": "5/2018"}, {"body": "returns instead empty string node const jsdom require jsdom undefined const jsdom jsdom undefined const dom new jsdom undefined domwindowdocumentqueryselector p style cssstyledeclaration color values color red importants color length onchange function domwindowdocumentqueryselector p stylecolor red domwindowdocumentqueryselector p styleunexisted undefined solution like fix issue annoying", "d": "5/2018"}, {"body": "\u8bf7\u95ee\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 \u73b0\u5728\u8fd8\u662f\u6ca1\u6709\u6548\u679c", "d": "5/2018"}, {"body": "\u8fd9\u76ee\u524d\u8fd8\u53ea\u662f\u4e00\u4e2a feature", "d": "5/2018"}, {"body": "justineo \u597d\u7684 \u8c22\u8c22 \u4f60\u73b0\u5728\u5982\u4f55\u5728ssr \u60c5\u51b5\u4e0b inline", "d": "5/2018"}, {"body": "hi actually developing application nuxtjs need exact behaviour reported application expected behaviour android need vmodel binding behave composing android keyboard iphone everything working fix thank", "d": "5/2018"}, {"body": "using inline templates nonspa website even vue converts markup valid executed would nt valid initially page loads little confused seems seen issues forum answers recommended imposed way use vue single file components previously compiled despite progressive incrementally adoptable approach know nt common practice anymore cases like use vue library add functionality existing html wordpress theme instance yet valid html worried anyway", "d": "5/2018"}, {"body": "crucial defect syntax type info props type permanently lost standard vue component definition syntax impossible even libraries like vuetsxsupport recover typescript definition unless wrap syntax simple object definition done vuepropertydecorator", "d": "5/2018"}, {"body": "webpackdevserver \u8fd8\u662f\u4e0d\u884c", "d": "5/2018"}, {"body": "one also use propdocs presents pretty neat although maybe original way write documentation vue components add descriptions notes even explanatory code flags etc even render documentation separate component", "d": "5/2018"}, {"body": "posva hi talking spa found vuejs best rapid clientside behavior programming classic roundtrip environment aspnet specific render partial view server side vue directives inside incredible fast easy way also afaik framework suites perfect really sad vueconfig removed happy dmitri provided solution really helped hovewer still issue consider vuefor iterating img tag cant provide correct src point real problem way using vuejs therefore doesnt suit great case assumed first place", "d": "5/2018"}, {"body": "feel like compelling reason simply nt forced using arbitrary sfc especially many use cases cause problems component page root element want overlay list loads wrap need whether solution passing adding nt think matters needs solution real problem people using hacks solve like frightening clever piece", "d": "5/2018"}, {"body": "think agree say missing feature vue developpers say currently difficult implement diff algorithm one solution create child component use case split parent component multiple render functions compose parent easier jsx javascript const genchildren h gt return h div somestuff h div stuff parent component render h return h mygridwrapper genchildren h", "d": "5/2018"}, {"body": "titouancreach would work getting multiple root elements error assume would renderless component rendering slot render function whatever throw going get error tried pretty much everything noavail", "d": "5/2018"}, {"body": "workaround adding wrapping basically around multiple nodes workaround use functional component nt single root limit lose datamethods normal components", "d": "5/2018"}, {"body": "saying current virtualdom diff amp patch algorithm heavily relies fact child component always exactly one root element would break completely one root node child component saying making work one root component complicated adds additional logic challenge make change without negatively impacting render performance current implementation fyi preact currently trying figure well issue asking current pull request linking case gives vue rendering engine developersmaintainers inspiration useful ideas obviously different engines apologies nothing helpful", "d": "5/2018"}, {"body": "another use case know could without multiple root nodes please tell kindof stumped details need two elements component reference could abstract data seems messy scoping weird wrap two elements div anything elements dynamically positioned page elements ca nt elements covering stuff block mouseover events could disable mouse events parent wrapper invisible box seems pointless dataset stuff set script another component listed take granted tname func export default name popups data return tshow false tname tfunctions tcorner methods goto let target documentgetelementbyid targetbox datasetdest target routename return routerpush name target thistshow false hover let target documentgetelementbyid targetbox let popup documentgetelementbyid contextpopup update context popup info thistname targetdatasetname thistfunctions targetdatasetfunctionssplit figure corner render contextpopup let l targetdatasetl true l r let targetdatasett true b thistcorner l position corner popupstyleleft targetdatasetpopleft px popupstyletop targetdatasetpoptop px render popup thistshow true unhover thistshow false", "d": "5/2018"}, {"body": "titouancreach work functional component way aside jquery hacks", "d": "5/2018"}, {"body": "work anything nt create children splitting compose render function pure javascript", "d": "5/2018"}, {"body": "tochoromero solve issue bootstrap came via problem bootstrap really specific ordering addons extra wrapping div breaks update big discussion issue bootstrap including mentions vue anyone else runs many workarounds", "d": "5/2018"}, {"body": "bbugh really nt solve tried make component generic possible still wrapping class", "d": "5/2018"}, {"body": "regarding bug scoped introduce js outside manipulate elements add corresponding subelements elements time newly added subelements design style scoped removed used normally", "d": "5/2018"}, {"body": "manipulate elements manually case encapsulate really lowlevel dom operations like directives", "d": "5/2018"}, {"body": "sad closed also would like able clear default slot content empty slot eg default separator slot sometimes iterated components may htmltags break float css styles also clean use empty tags would logical use empty template using vif quite verbose exists override default value behaviour logical else one define template default content want default content shown simply remove empty template", "d": "5/2018"}, {"body": "updates nearly six months since gotten love vue contributor", "d": "5/2018"}, {"body": "relign try importing code", "d": "5/2018"}, {"body": "opened pr supporting functionalcomponents opened separate issue regarding making accessible functionalcomponents open pr feature request gets approved", "d": "5/2018"}, {"body": "hxfdarling", "d": "5/2018"}, {"body": "\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528vue\u65f6 import \u8fdb\u6765\u5373\u53ef", "d": "5/2018"}, {"body": "hxfdarling", "d": "5/2018"}, {"body": "\u4e0d\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u5373\u53ef", "d": "5/2018"}, {"body": "definitely add note documentation today spent half hour trying figure nt work problem documentation custom events event names states reasons recommend always use kebabcase event names always like always unless emit event add note also documentation custom events sync modifier would change example use property multiple word name single word nt help problem andor add note event name incosistency previous recommendation always use kebab case page", "d": "5/2018"}, {"body": "good suggestions put issue vuejsorg repository go unnoticed issue old closed", "d": "5/2018"}, {"body": "done", "d": "5/2018"}, {"body": "yeah ran times copypasting click logic warning would nice though admittedly quick google leads solution", "d": "5/2018"}, {"body": "issue version example fast clicking button see chrome de tools performance monitor nodes listener removed", "d": "5/2018"}, {"body": "commenting year old closed issue hardly noticed please file real bug report", "d": "5/2018"}, {"body": "already", "d": "5/2018"}, {"body": "warning error console either", "d": "5/2018"}, {"body": "marktnoonan mentioned css grid issue make crazy", "d": "5/2018"}, {"body": "njleonzhang worth though nt tried yet recently learned portalvue feel workaround may possible relatively easy many cases component structure vue needs different dom structure want actually end looking forward playing post demo get time create clean example wanted go ahead share library anyway others maybe check", "d": "5/2018"}, {"body": "markbrouch currently make grid items one component provide customize component try next time tnx information", "d": "5/2018"}, {"body": "running issue thedutchcoder ever get workaround", "d": "5/2018"}, {"body": "include svginnerhtml make work svgs", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "think change von click submit von click submit", "d": "5/2018"}, {"body": "gufnz trying call function named nt render anything want output string use single quotes", "d": "5/2018"}, {"body": "dsignr see source boolean value case checkbox still attribute set least time writing nt checked", "d": "5/2018"}, {"body": "checked gt checked", "d": "5/2018"}, {"body": "worth work justtesting computed value giving true general computers mess things things named case attribute checked computed value checked still looking clear example using checkboxes combination vuex", "d": "5/2018"}, {"body": "nuxt bash route error find module pagesindexjs e gitrepodoumidoumivipweb functionmoduleexports sync doumivipweb resolve r doumivipweb vueserverrenderer functionrequireensure e arraymap arraymap flatmapcomponents resolveroutecomponents getroutedata setcontext createapp moduleexportswebpackexportsdefault doumivipweb vueserverrenderer", "d": "5/2018"}, {"body": "interests think using object instead function vice versa worked properties properties needed functions verb prefixes eg instead would little confusion would even better vue got rid inside functions added another parameter documentation could remove warnings functions nt support additionally would fewer invalid bugs reported", "d": "5/2018"}, {"body": "thank casbloem solved problem sth like", "d": "5/2018"}, {"body": "yeah feels like extreme solution change rendering engine able set content breadcrumb child template workarounds pretty", "d": "5/2018"}, {"body": "actually simplesmiler herringtondarkholme might need way reuse render logic templates without messing data context another parallel mechanism definitely increase complexity think better introducing something like reuse template pieces", "d": "5/2018"}, {"body": "zeromaster viettranme add script tags using jquery documentcreateelement workaround use javascript let stripscripttag", "d": "5/2018"}, {"body": "including property fixed issue", "d": "5/2018"}, {"body": "tried listening change event nt able work around bug one experience trying work around bug still happening ios ios chrome app", "d": "5/2018"}, {"body": "still problem vue project may ios native autofill trigger vue models update workaround wrote directive update vue model inputs form input receives javascript native onfocus event ios autofill triggers onfocus event share code feel free improve include project autofillcatchjs directive form template notice vautofillcatch directive form element mainjs included directive globally project", "d": "5/2018"}, {"body": "new build review pr", "d": "5/2018"}, {"body": "sniffing code avoid mock cases posva fnlctrl", "d": "5/2018"}, {"body": "update", "d": "5/2018"}, {"body": "accomplished throught customized context fieldjs import consumer mixinscontext export default consume return showrequiredcolumn showrequiredcolumn noleftpadding noleftpadding mixinscontextjs copied herringtondarkholmevueadvancedprogramming renamed transplanted mpvue import lodash import get lodashfpget const getoptions get vnodecomponentoptionsctoroptions const consume vm token gt let parent vm const ret parent const context parent context context amp amp context token const value get context token return value retpush value parent parent parent return ret undefined const exposecontext vm gt const options getoptions vm optionsexpose return optionscomputed context gt optionsexposecall vm vm const consumecontext vm gt const options getoptions vm optionsconsume return const consumemap isfunction optionsconsume optionsconsume optionsconsume optionscomputed optionscomputed foreach consumemap token key gt optionscomputed key gt consume vm token export const exposer beforecreate exposecontext beforeupdate exposecontext export const consumer beforecreate consumecontext beforeupdate consumecontext", "d": "5/2018"}, {"body": "also agree casting null would make sense number contract get back number ca nt number null abrogation contract", "d": "5/2018"}, {"body": "found issue searching thing still nt answer though think want implement exactly thing like way table component element library used straightforward wanted implement something similar less features well know simple table component neat api really confused reading element source code plenty jsx seems like way achieve similar component interface without hacks", "d": "5/2018"}, {"body": "issue year old today would use provideinject functionality issue closed please use forumvuejsorg questions", "d": "5/2018"}, {"body": "still running error ie edge", "d": "5/2018"}, {"body": "lot trouble see high use case least thought would personally card ui carries background inside card content uses cases background text however others would like use link changes background link also component html looks like according documentation work would could pass json make html component using however need access cms resizeimage functions ca nt targets instance rather component case even work firing instance seems impossible avoid using vue element use native javascript created guess nt exactly vue way edit made new component add native javascript mount mounted function var vm hacky vue wish way bubble event inside slot", "d": "5/2018"}, {"body": "holy shit toms mixing php vue punishable death code horribly unmaintainable", "d": "5/2018"}, {"body": "danonk hardly think punishable death fair justify using php cms nt rest api want use vue luckily nt deal code writing", "d": "5/2018"}, {"body": "facing problem currently creating modal contain form components modal contain tag call modal component like place loginform component inside modal component inside loginform component place anchor tag close modal log methods close emit close however button working whenever click button get error stuck already tried suggestion justineo make work idea", "d": "5/2018"}, {"body": "hi using vuejs need create indexvue page product people number text box drop list fixed mean product props may tried add html element using vhtml seems wise way offered use components sounds little complicated confusing looking sample good example thanks advance", "d": "5/2018"}, {"body": "could nt potentially implemented inserting comment node", "d": "5/2018"}, {"body": "fix problem idea regarding", "d": "5/2018"}, {"body": "actually vue reporting bad error console issue dont know tackle problem", "d": "5/2018"}, {"body": "also concerned enlarging apis convenience since also handles case iteration objects nt arrays would indeed value directive iterating eg objects properties direct property etc fact iterator empty seems much symmetrical vifvelse current case iterate properties easy without necessarily needing express template iterator implemented since vfor iterate anyway extending keep boolean emptynotempty rendering empty branch loop content never touched iteration helpful straightforward performant calling objectkeys obj length even template includes understanding iterator implementation empty iterator branches also precedence template languages used far current way seems quite clumsy especially since binds template implementation detail iterator wo nt really get better using component method either key part translations available", "d": "5/2018"}, {"body": "native solution user declare default value promise resolved vue support builtin throttle promise handle events like keychange mousemove even promisebased implementation throttled events makes sense particular scenarios imho tangential main use case would sufficient add minimal core implementation lets asynchronously fetch data absolute minimum amount boilerplate see clever unexpected semantically correct uses people put vue support builtin callback certain promise resolved provide scenario necessary opposed normal vueagnostic use promises seems good way without expanding api surface inspect whether async property resolving resolved default value callback resolve good enough core minimal use case overall vueasynccomputed step right direction core support would major step forward seeing promises asyncawait core part language workflow", "d": "5/2018"}, {"body": "yarn installation problem although specified exact version yarn seems install latest version vuetemplatecompiler cleared yarn cache removed nodemodules folder luck got job done", "d": "5/2018"}, {"body": "got error due comments containing angle braces outside one singlefilecomponents eg file vue readme component alternative", "d": "5/2018"}, {"body": "refs reactive could also watched", "d": "5/2018"}, {"body": "behavior reverted long discussion", "d": "5/2018"}, {"body": "nickmessing nt cover really useful use case described inplace modification input text input box want always formatted like phone user entered text would automatically format seems like basic feature difficult right behavior already exists framework reason restricted frameworkonly code want able add custom modifier would reusable across components projects like filters directives right", "d": "5/2018"}, {"body": "pls change delimiters using vue webpacksimple new vue delimiters el app render h gt h app nt work pls help move delimiters vue use template example nt add delimiters new vue use template", "d": "5/2018"}, {"body": "drasnop fires well children rendered use case rendering array objects vuex store nt know matters fyi anyone else seeing thing", "d": "5/2018"}, {"body": "example could make computed property returning array instead like javascript computedclass let res storestatebodycolor storestatemenu respush navisopen return res", "d": "5/2018"}, {"body": "consider set escape vue observe procedures today met case vue observe map instance mapboxgl weird things happed map get lighter map instance need passed vue instances add problem resolved", "d": "5/2018"}, {"body": "trying watch changes occur based input fields workaround suggested nt apply would really nice limitation removed api newvalue oldvalue properties reflect mutations bound objects example list nested tables inline editable properties able watch root array deep set true diff changes", "d": "5/2018"}, {"body": "still possible ca nt find transition attribute anymore component", "d": "5/2018"}, {"body": "codeofsumit talking list yes possible check doc need class transitiongroup", "d": "5/2018"}, {"body": "maxirozay talking transitioning change list enter leave like text want change background color seconds text changes", "d": "5/2018"}, {"body": "fnlctrl workaround either using exaggerated expression template writing getter object check initialized seems right using typescript vue complicates even one denote objects approach work status issue upcoming release", "d": "5/2018"}, {"body": "thanks update stumbled across thanks everyone good work", "d": "5/2018"}, {"body": "", "d": "5/2018"}, {"body": "locking going happen", "d": "5/2018"}, {"body": "thread old know option get removed", "d": "5/2018"}, {"body": "yes", "d": "5/2018"}, {"body": "curiosity would mind sharing reasoning", "d": "5/2018"}, {"body": "facing issue working solution", "d": "5/2018"}, {"body": "set properties element imperatively need dispatch native event force bound data update different elements need different event types element event type property change checked change checked input value inputvalue changeselected", "d": "5/2018"}, {"body": "eddyerburgh tried solution working scenario pls see completed details scenario getting error indexvue uncaught typeerror thiscartformitem n dispatchevent function", "d": "5/2018"}, {"body": "trying several options function worked thanks avijit gupta function copy var output v key output arrayisarray key v key output key typeof v object copy v v return output following works var name name name var b copy var c copy b name consolelog c name", "d": "5/2018"}, {"body": "sharing use case need assign callback attribute object noticed jsonparsestringify approach clone callback functions used lodash clone end", "d": "5/2018"}, {"body": "wanted watch data props emit vmodel together single object ended going", "d": "5/2018"}, {"body": "maybe another solution could", "d": "5/2018"}, {"body": "evan solution already best slight adaptation avoid array construction", "d": "5/2018"}, {"body": "thread seems bikeshed lot answers already provided let stop nt get worse prevent spamming around people see solutions", "d": "5/2018"}, {"body": "solution proposed hcysunyang looks like kind hack misleading seems like something vuerelated fact arbitrary key using would work well confirm intended correct way achieving maybe remove event listeners vue dom management guarantee memory leak issues", "d": "5/2018"}, {"body": "currently loading problem returns invalid template error image load gives errors point fix somewhere", "d": "5/2018"}, {"body": "syntax current version vue simply", "d": "5/2018"}, {"title": "history documentreferer", "body": "", "num": "4195", "d": "5/2018"}, {"title": "backbone model attributes type", "body": "hi backbone model attributes string objects backbone collection etc possible attribute array backbone model ex var model backbone model modelget charts simple array chart chart backbone model question ideally backbone model attribute array backbone collection simple array backbone model thanks mahaveer", "num": "4194", "d": "5/2018"}, {"title": "passive nonpassive event listeners", "body": "would nice could set event handlers created passive nonpassive way also get rid warning chrome working events", "num": "4192", "d": "5/2018"}, {"body": "model attribute set value set variable recommend stack overflow questions like", "d": "5/2018"}, {"body": "megawac jridgewell ping", "d": "5/2018"}, {"body": "megawac jridgewell jashkenas ping", "d": "5/2018"}, {"title": "angle bracket invocation syntax", "body": "summary angle bracket invocation rfc merged issue aims track landing functionality proposed behind feature flag possible individual items cross link related section rfc features x static invocation existing based components via angle brackets capital case component naming eg would find relevant rfc section x allowing single word component names long begin capital letter relevant rfc section x support passing named arguments component invoked eg x support passing html attributes relevant rfc section x add specified attributes element containing x add specified attributes wrapping element x attributes added specified component therefore overridable x attribute merged specified element x block support x block passed invoked component yielded x self closing invocations eg x normal self closing invocations eg x dynamic invocations relevant rfc section x allow invocation block params within scope casing rules applicable x allow invocations path lookups eg x allow invocations named blocks eg implementation todos x update support amp x update glimmervm avoid calling component manager every usage x ensure false self closing component invocations eg x implement support dynamic angle bracket invocation x implement support implicit embercomponent wrapper element", "num": "16688", "d": "5/2018"}, {"title": "doc typo core concepts", "body": "line code fragment seems like typo says appcomponentsfoodidrenderexamplejs js import component embercomponent export default componentextend didrender thissuper arguments line consolelog rendered", "num": "16682", "d": "5/2018"}, {"title": "emberonerror handler invalid testing behavior detected link nt contain working solution", "body": "retrofitting existing ember app tests tests passing except see test end warning ember onerror handler improperly configured link contains information nt fully explain resolve issue appappjs import ember ember still advised ember broken individial packages emberonerror function error embertesting always false even test environment ie nt work throw error desired development production behaviors lt ok nuked default behaviour get back", "num": "16681", "d": "5/2018"}, {"title": "replacewith create controller instance", "body": "redirect route using replacewith passed controller query param let controller thisget controller returns value", "num": "16679", "d": "5/2018"}, {"title": "deprecate embermap embermapwithdefault emberorderedset", "body": "agreed emberjsrfcs need deprecate creating following objects embermap deprecation message suggest replace usage native usage embermapwithdefault deprecation suggest replace usage native usage emberorderedset deprecation mention adding addon update conditional emberorderedset ensure matches version removal lands deprecations", "num": "16678", "d": "5/2018"}, {"title": "form input element event handlers bind properly ie", "body": "probably ie issue figure best log also put together twiddle illustrate point difficult validate issue since looks like twiddle nt work ie due lack browser support however put together demo fresh ember test app could validate issue ie also validated edge works normally nutshell binding action either helper element work ie screen shot console errors", "num": "16674", "d": "5/2018"}, {"title": "route lazy loading engine parsing queryparams type", "body": "nt able find issue around problem team running thus creating new issue please see example bug go compare output lazy loaded engine engine set lazy loaded work fine ember go available handlers routes verify queryparams need parsed lazy loaded engine handlers wo nt exist route mount hit due parse returned cached quick hack provided demo reseting cache beforemodel try bypass problem correctbetter approach valid bug", "num": "16664", "d": "5/2018"}, {"title": "configenvironmentjs value environment undefined", "body": "ember new testapp cd testapp edit configenvironmentjs log statement moduleexports function environment consolelog environment value always undefined ember build environmentdevelopment undefined saw", "num": "16659", "d": "5/2018"}, {"title": "host app engine route transition queryparam type object working properly", "body": "host app repository repo lazy loading engine proceed transition host app engine route query param type object first time shows error like syntaxerror unexpected token json position working fine actually found routerqueryparamsfor handlerinfos method routerjs returns empty objects map qps first time host app tries transtion engine route next time returns value objects map qps happening becuase engine instance already created previous transition also queryparamsfor method returns empty object since type check object serializequeryparam return string object object serializequeryparam value type value null value undefined return value else type array return jsonstringify value return proceed transition engine route object type qp", "num": "16655", "d": "5/2018"}, {"title": "emberrunbind throw error callback undefined", "body": "", "num": "16652", "d": "5/2018"}, {"title": "using emberjs slider images jump sliding edge slides", "body": "changing last first slide logos jump click see video", "num": "16647", "d": "5/2018"}, {"title": "google dfp gptjs google ad server file nt work anymore", "body": "hi apparently google changed something dfp gptjs library seems nt work ember anymore trying load gptjs programmatically please read gptjs file loaded indexhtml file vendorjsappjs files ember uses loadstart application everything works great ads shown application runs smoothly want load file programmatically via ajax load via documentcreateelement etc something apparently modified google gptjs conflicts something embers string extension specific whatever reason stringprototypew method conflicting method google gptjs file error trown current fix disable string extension done ember env file using emberenvextendprototypesstring false gptjs", "num": "16646", "d": "5/2018"}, {"title": "runloop debounce slow chrome", "body": "attached scroll listener page naturally like wrap action done nt fire crazily found scroll listener attached slow chrome set timer seems use issue nt happen firefox edge also attaching scroll listener element seems work fine chrome since issue happens ca nt replicate ember twiddle put repo show bug uses ember nt believe chrome issue tried removing everything fires correctly delay anything leads think bug", "num": "16645", "d": "5/2018"}, {"title": "confusing error message invalid property name routes", "body": "helped colleague mine new ember error stating pretty confusing digging turned made route like triggered error error message confusing especially starting ember could probably improved made reproduction repo serve visit see error", "num": "16642", "d": "5/2018"}, {"title": "documentation missing component helper", "body": "way helper works changed resulting documentation apparently going away exist docs despite linked api docs exist contextual components guide link", "num": "16638", "d": "5/2018"}, {"title": "documentation link working ember test guide", "body": "please go link click visit helper going", "num": "16636", "d": "5/2018"}, {"title": "memory leak", "body": "seeing memory leaks upgrading ember specifically versions ember acceptance tests memory usage climbs gb tests start failing ember acceptance tests run memory usage around gb high unusual ie comparison chrome uses mb drops mb tests finish attempt bisect seems point big range commits ca nt build andor run", "num": "16634", "d": "5/2018"}, {"title": "thisroutermicrolib undefined sending event tests", "body": "hey looking updating travisweb ember everything seems working except failures tests around dynamically updating favicon based jobbuild status tried ember running tests many fail message suite uses chrome read property trigger undefined digging stacktrace found line question called lower stack specific code job controller observer build controller something almost identical action defined mixin mixed application route looks innocuous tried removing code within action change anything also tried merging mixin code directly application route also anything seems like code bubble action problem action code strange aspect actually use interface rather run tests see favicon updating action indeed sent run seems like problem tests let know information provide thanks work ember multiyear devotee", "num": "16633", "d": "5/2018"}, {"title": "ember mapby persistent", "body": "gist reproduce problem mapby array persistent given array emberobjects named items example user list item order property sorteditems computed property depended array sortdirection reproduce open gist default ordering sorteditems click sort button sorteditems logic return sorted array instead original list click reset button get original sort sort error expected result sorteditems ordering must equal items ordering output sorteditems prev sort result even list mapby order return returns", "num": "16631", "d": "5/2018"}, {"title": "ember nt update component attr binding array sort", "body": "demo given array ember objects computed objects array sort given array route template render sorted list component render sorted list array sort list route template rerendered component old sorting state", "num": "16630", "d": "5/2018"}, {"title": "ember regression attribute value serialized", "body": "seems like would emberdata issue starts happening change leave ember source also works issue see first line item model value notes called payload server looks like note deps look model looks like ember rearranged structure stores data wondering problem related embersource gives data emberdata thats looks like ember data problem anything help debug", "num": "16624", "d": "5/2018"}, {"title": "linkto read property length undefined", "body": "seeing errors sentry lately ember might indicate bug component able reproduce yet found far indicates hook finished yet according error message appears like systems cp might calculated hook chance run", "num": "16623", "d": "5/2018"}, {"title": "computedproperties weirdness defined hook", "body": "seeing weirdness computedproperties ember reproduced see readme able get embertwiddle working twiddle nt seem support anything tl dr seeing two things cache invalidate external property changes unless property used component ember defined hook update property updated", "num": "16622", "d": "5/2018"}, {"title": "regression arrayproxy pushobjects nt accept arrayproxy", "body": "cleaned lot mixin code however also changed assertion checking enumerable array checking array assertion throws calling even though emberdata accept objects going rwjblue think path forward drop assertion entirely docs implementations assert arguments method implementations expected implement already assert nt need delegates", "num": "16621", "d": "5/2018"}, {"title": "feture request add component name glimmer error", "body": "error like defenetly component issue components page hard figure error location", "num": "16618", "d": "5/2018"}, {"title": "version number discrepancy", "body": "may asplanned seeing scratching head installed embercli globally npm g embercli ember v embercli node os darwin new ember project packagejson shows embercli emberdata embersource devtools debug output fresh ember serve debug debug ember debug ember data debug jquery debug", "num": "16614", "d": "5/2018"}, {"title": "attempted access error engine", "body": "created demo app simple use using works parent app engine instead get recently added error informs user changes regarding get sorry wrong repo error coming emberjs repo engine repo thought raise", "num": "16610", "d": "5/2018"}, {"title": "embercomputed functions throw exception take ember engine", "body": "using embercomputed computed accepts function method throws exception either take entire ember engine many glimmer errors worse yet silently corrupt dependency tree things half stop working incomprehensible ways basically problem ember inside js called whenever property changed update dependent keys function dependentkeysdidchange obj depkey meta meta meta depkey return var seen didseen var top seen anything blows inside computed property evaluation ends blowing inside means nt complete didseen nt get erased seems excessively severe one case resulted day tracking subtle functionality stop instead seems like best idea would make sure whenever evaluate function ed error logged something less severe total failure created mitigation application simply overriding computed initializer js import emberobject computed emberobject import assign emberpolyfills import typeof emberutils export function initialize override ember computed trycatch prevents complete blowupshutdown something goes wrong computed property const oldcomputed computed let newcomputed function let newargs arrayprototypeslicecall arguments const funcpos funcpos gt const oldfunc newargs funcpos typeof oldfunc function newargs funcpos function try return oldfuncapply arguments catch ex form logging else get oldfunc const prevfunc oldfuncget oldfuncget function try return prevfuncapply arguments catch ex form logging return oldcomputed newargs assign newcomputed oldcomputed computed newcomputed first admit bit hack makes major difference development prevents costly heck something go wrong sessions chance sort trycatch done around future ember release", "num": "16606", "d": "5/2018"}, {"title": "didupdateattrs called setting internal properties second route transition", "body": "using ember first rendering route child components clicking button calls call call however transitioning another route component torn calling via button click call happy intializationupdate component looking refactor bug put example repo showfulltext amp amp moreshown internal properties component didupdateattrs setproperties showfulltext false moreshown false called action template onshowmore setproperties showfulltext true moreshown true", "num": "16601", "d": "5/2018"}, {"title": "dot notation vs emberget behavior shift ember ember", "body": "issue manifests ember ember imagine instance maybe instance instance another perhaps model property following occurs regardless value property eg could computed es getter simple boolean following behavior divergence observed additionally dependent keys first call error set dependent keys subsequent calls work", "num": "16598", "d": "5/2018"}, {"title": "router service respect default value query param", "body": "hello migrating private generateurl public urlfor noticed respect default value query param defined controller eq qp default value method returns instead twiddle reproduction twiddle uses ember behaves locally see test behaviour sure feature default qps url gone helper still autoremoves generates without default qps thanks", "num": "16596", "d": "5/2018"}, {"body": "updated checklist mark items", "d": "5/2018"}, {"body": "marked support completed well one implementation todo", "d": "5/2018"}, {"body": "thanks fixed see links prs interested", "d": "5/2018"}, {"body": "share example actually look like general set testing back testing completed suspect culprit play", "d": "5/2018"}, {"body": "emberonerror undefined embertesting right something else definitely play going close hunt real cause issue thanks help", "d": "5/2018"}, {"body": "hi could ask question stack overflow community slack issue tracker used bugs emberjs code thanks", "d": "5/2018"}, {"body": "discovered root cause appears happypack used build looks like babel plugin nt initialized properly closing issue", "d": "5/2018"}, {"body": "result embercli node os ember build environment production undefined noticed execute app folder instead getting version ember cli tries build app point begin doubt ember cli issue ideas poke probe", "d": "5/2018"}, {"body": "wrong repo go", "d": "5/2018"}, {"body": "closing seem arrived correct solution demonstrated intent deprecating prototype extensions rfc thank reporting", "d": "5/2018"}, {"body": "rmmmp would assume using hood chrome throttles certain cases eg tab background scrolling etc guarantee gives never fired twice time interval due behavior might take little next time fired tl dr outside control browser throttling", "d": "5/2018"}, {"body": "closing sad face", "d": "5/2018"}, {"body": "move issue thanks", "d": "5/2018"}, {"body": "moved", "d": "5/2018"}, {"body": "reproduction created acceptance tests let lt test visiting foo async function assert await visit foo happens downgrading ember", "d": "5/2018"}, {"body": "nt chance dig much yet capture memory profiles reproduction app attaching hopes someone time dig wink", "d": "5/2018"}, {"body": "dwickern version windows amp", "d": "5/2018"}, {"body": "zip windows ie vm", "d": "5/2018"}, {"body": "reran tests able run full test suite without memory growth took heap snapshots approximately every tests seems indicate leak must related debug build specific feature", "d": "5/2018"}, {"body": "started digging differences debug builds vs prod builds noticed prod rendering anything whereas debug render component removing component invocation enables debug builds pass without memory growth made attempt add simple component dom template resulted memory growth tests completed primary difference test run way addon setup tested normally resolved template whereas addon imports layout reexports updating locally make template resolved instead imported set property component js file able rerun test suite without memory growth", "d": "5/2018"}, {"body": "confirmed latest beta still demonstrates memory leak however latest canary builds", "d": "5/2018"}, {"body": "testing windows ie", "d": "5/2018"}, {"body": "known memory leak issue wrt devtools microsoft marked wo nt fix ship fix edge though", "d": "5/2018"}, {"body": "cherrypicked following commits beta branch prior changes branch exhibited leak provided reproduction commits leak reproduction runs completion", "d": "5/2018"}, {"body": "ci completed publishes beta builds able test via update specify url printed", "d": "5/2018"}, {"body": "confirm fixed thanks", "d": "5/2018"}, {"body": "backspace link one failing tests travisweb", "d": "5/2018"}, {"body": "certainly see failures lot probably time build job viewed favicon needs change test comparatively simple one triggers error", "d": "5/2018"}, {"body": "mnemonic foo bar sortfunction foo sortkey sortfunction sortkey result sortby foo sortkey log mapby result someuniqkey return result else log mapby foo someuniqkey return foo step step", "d": "5/2018"}, {"body": "one twiddle jenweber swapped reverse bug disappears", "d": "5/2018"}, {"body": "reverse mutating items array", "d": "5/2018"}, {"body": "jenweber thank going close issue", "d": "5/2018"}, {"body": "know filtered array render list successfully updated inside route template inside components feature must documented avoid user confusion", "d": "5/2018"}, {"body": "looks related", "d": "5/2018"}, {"body": "answer", "d": "5/2018"}, {"body": "looks strange may confuse anyone teach", "d": "5/2018"}, {"body": "see issue application well something broke case able trace computedproperty depends property properly serialized remove computedproperty issue solved", "d": "5/2018"}, {"body": "hmm interesting whats name property seeing using dependent keys wonder truly related computed properties", "d": "5/2018"}, {"body": "name property dependent property appears related serializing troubles emberdata gt without", "d": "5/2018"}, {"body": "seeing use offirgolanembercpvalidations creates bunch computed properties fields confirm turning problematic models fixes issue", "d": "5/2018"}, {"body": "elaborate bit debugging see happening looks like stale computed property cache issue field retrieved snapshot object created ember data serialization even though model right values set computed property finds stale value cache case happens model saved", "d": "5/2018"}, {"body": "anyone able put together reproduction", "d": "5/2018"}, {"body": "sounds like scenarios quite different common thread saving model would send attribute payload nt apps seeing problem expect tricky edge case hard debug would us contrive example demonstrates help us help guys handled debugging edge cases like past tips give help us debug narrow cause within applications maybe insight would reveal create demonstration app", "d": "5/2018"}, {"body": "noticed appears issue specific chrome version android also seems happen assuming likely due underlying engine", "d": "5/2018"}, {"body": "ua strings case helps linux android huawei khtml like gecko mobile linux android redmi khtml like gecko mobile linux android khtml like gecko mobile linux android khtml like gecko mobile linux android khtml like gecko mobile", "d": "5/2018"}, {"body": "ahh looks like using instead fixes second problem possible first actually expected behavior closing", "d": "5/2018"}, {"body": "thanks writing hjdivad agreed path forward mmun objections", "d": "5/2018"}, {"body": "rwjblue nope seems good would also useful could mark methods derived final people nt override", "d": "5/2018"}, {"body": "using instead sufficient", "d": "5/2018"}, {"body": "runspired yes would work right believe muddies waters bit proposed fix", "d": "5/2018"}, {"body": "yep right tilde ranges semver thank", "d": "5/2018"}, {"body": "also wanted mention projects local embercli dependency always used globally installed version functionality allows multiple projects various different embercli versions without issue", "d": "5/2018"}, {"body": "excellent thanks folks yes thanks rwjblue info suspected much nt sure cheers", "d": "5/2018"}, {"body": "thank reporting minimal reproduction", "d": "5/2018"}, {"body": "similar bug unable solve documented", "d": "5/2018"}, {"body": "fixed", "d": "5/2018"}, {"body": "going close reopen find something may something else causing problems htmlsafe clamping innerhtml", "d": "5/2018"}, {"body": "cc exelord", "d": "5/2018"}, {"body": "share stack trace", "d": "5/2018"}, {"body": "stack trace repo failing ci", "d": "5/2018"}, {"body": "expected marking documentation issue usually brought definitely improved thank", "d": "5/2018"}, {"body": "serabe thanks clarification", "d": "5/2018"}, {"body": "serabe know implemented done query paramrelated stuff looking way provide better documentation around query params find way unset complex ones thoughts", "d": "5/2018"}, {"body": "maybe locks rwjblue knows may donald wasserman notifications githubcom wrote serabe know emberdefaultvalue implemented routerservicemd queryparametersemantics done query paramrelated stuff looking way provide better documentation around query params find way unset complex ones thoughts receiving mentioned reply email directly view github mute thread", "d": "5/2018"}, {"body": "nt need inject router routes inside", "d": "5/2018"}, {"body": "btecu writes obviously correct due beeing oversimplified test case unsimplified test case bit nt use router service route foo service return uses router service assertion still fails nt easy way using", "d": "5/2018"}, {"body": "forked repo", "d": "5/2018"}, {"body": "take look issue", "d": "5/2018"}, {"body": "fix merged", "d": "5/2018"}, {"body": "going bring back say experiencing relies upon ember data also latest version interesting thing though takes tries get check video attached zip create new tag errorzip edit route unloads models loaded hook versions error full stack assert writabletag tagfor contentfor unknownproperty get getpath get get anonymous computedpropertyprototypeget get compute value value initialize peek anonymous evaluate evaluatesyscall evaluateinner evaluateouter next execute handleexception handleexception throw evaluate execute rerender runintransaction renderroots renderrootstransaction revalidate invoke flush flush end run join join runjoin hashsuccess fire firewith done anonymous load async send ajax ajaxrequest anonymous initializepromise promise ajax query query query query aftermodel applyhook runsharedmodelhook runaftermodelhook trycatcher invokecallback publish anonymous invoke flush flush end run join join runjoin hashsuccess fire firewith done anonymous load async send ajax ajaxrequest anonymous initializepromise promise ajax queryrecord queryrecord queryrecord model deserialize applyhook runsharedmodelhook getmodel trycatcher invokecallback publish anonymous invoke flush flush end run join join runjoin anonymous exportsflaggedinstrument handleevent exportsdefaultembermetalmixincreatemixin createhandleevent anonymous dispatch elemdatahandle", "d": "5/2018"}, {"body": "rwjblue unfortunately nt reproduction yet seeing similar error according sentry traces also previous error thrown might caused glimmer vm throw later previous errors seems factorymanagercreate method function", "d": "5/2018"}, {"body": "experiencing issue", "d": "5/2018"}, {"body": "produce reliably app behind auth min share credentials anyone able take look", "d": "5/2018"}, {"body": "also seeing still", "d": "5/2018"}, {"body": "still seeing well though less often", "d": "5/2018"}, {"body": "please open new issue much info see back forth almost certainly take reproduction us able track sooner gather enough info one faster fix", "d": "5/2018"}, {"body": "sure helpful error encountered forgotten component running \u30c4", "d": "5/2018"}, {"body": "still seeing production logs occasionally nt cause issue far tell something similar sammynave said imports case although seen unrelateduncaught exceptions corrected fixes error makes hardimpossible trace issue though gotten good guessing", "d": "5/2018"}, {"body": "never see development production builds", "d": "5/2018"}, {"body": "root issue caused program counter set invalid offset heap tries invoke opcode offset nothing get error ca nt find opcode object suspect happening exception getting thrown somewhere render catching cleaning appropriately add better logging track may help people seeing production logging assertions would stripped would expect though ember would rethrow error initial error visible logs well vm nt try catch exceptions although maybe start try aggressive cleaning state vm", "d": "5/2018"}, {"body": "suspect happening exception getting thrown somewhere render catching cleaning appropriately definitely confirm suspicion every instance syscall error see sentry logs error log mentioned lot times seems involved original error according sentry apparently already issue upgraded ember", "d": "5/2018"}, {"body": "error surface would valid cause issue especially ca nt seem spot development getting constant reports sentry user reports app issues help debug", "d": "5/2018"}, {"body": "gah got one", "d": "5/2018"}, {"body": "read property fullname undefined", "d": "5/2018"}, {"body": "guess apple released new build safari technology preview today build problem fixed idea fix really involved code whatever working ok", "d": "5/2018"}, {"body": "fyi started work polyfill", "d": "5/2018"}, {"body": "hey folks getting close anyone blocked things need help given area", "d": "5/2018"}, {"body": "stuck edit check message longer appear", "d": "5/2018"}, {"body": "rwjblue chancancode guidance got even less context snag kamikillerto", "d": "5/2018"}, {"body": "instructions creating mu app changed mixonic perhaps could update quest issue description instructions creating new module unification app install ember cli master generate new app module unification env variables generate component run app", "d": "5/2018"}, {"body": "updated instructions create run mu app needed running perhaps someone edit access issue description could update instructions provided comment", "d": "5/2018"}, {"body": "fix libmodelsprojectjs ismoduleunification method rely presence top level src project module unification format specifically addon may module unification format dummy app classic format blueprint module unification mode currently determined root project ie presence src root project unaware generated destination format eg testsdummyapp blueprint knows enough detect destination format maybe future would make sense give blueprint edit simplified", "d": "5/2018"}, {"body": "right require embersourcedistemberdebug tried trying get access main object returns literal obviously missing something", "d": "5/2018"}, {"body": "tried odd return ember dist gives node environment actually loaded ember successfully node try see loaded correctly node wish ember return right object browser environment near future avoid confusion addition hope soon packages truly distributed es modules instead current amd module indisguise architecture enabled via ember babel shims embercli", "d": "5/2018"}, {"body": "actually printing node utils inspect calling emberinspect arg", "d": "5/2018"}, {"body": "bash node v node require embersourcedistemberdebug ember referenceerror ember defined also need packages", "d": "5/2018"}, {"body": "use try would false also inspect issue fixed canary", "d": "5/2018"}, {"body": "needs reproduction get error create new ember app using running", "d": "5/2018"}, {"body": "total services object proxy injects another service alias readonly nonvolatile computed properties observers concatenated merged properties actions eventedmixin", "d": "5/2018"}, {"body": "wrote simple ruby script part ember london meetup quest night test services listed features matches ghost results feel free try apps dropping running file root project", "d": "5/2018"}, {"body": "also ember london meetup quest night put together script generate counts mine javascript paste web developer console next running ember app find ember app introspect output relevant info output one apps script hacked together may work ember apps versions ember hopefully useful start would pretty easy extend output additional information desired", "d": "5/2018"}, {"body": "another apps", "d": "5/2018"}, {"body": "mentioned many people use script nt clear concatenated merged properties meant represent always output someone tell meant represent update script also try add information evented mixin useful thinking might nice distinguish services defined app defined addons", "d": "5/2018"}, {"body": "concatenated merged properties feature object model mainly used components controllers routes examples define subclass merge superclass value instead overwriting actually possible highly unrecommended define properties expect anyone using feature wanted make sure", "d": "5/2018"}, {"body": "nt sure manifested services seems properties services empty array cases test app updated script output information well updated list one apps", "d": "5/2018"}, {"body": "would argue nt matter used misleading exactly intuitive", "d": "5/2018"}, {"body": "ditto also got problem", "d": "5/2018"}, {"body": "might closed per", "d": "5/2018"}, {"body": "removing labels avoid people working clarification goal", "d": "5/2018"}, {"body": "mmun update thank", "d": "5/2018"}, {"body": "far internal refactors go follow", "d": "5/2018"}, {"body": "happens ember", "d": "5/2018"}, {"body": "would like take issue new would like know start possible thanks", "d": "5/2018"}, {"body": "chadhietala glimmer ever anything address orderofoperations bug", "d": "5/2018"}, {"body": "runspired type attribute set last avoid bug", "d": "5/2018"}, {"body": "reproduction app", "d": "5/2018"}, {"body": "even simpler reproduction looks like set last culprit", "d": "5/2018"}, {"body": "closing issue given recent change direction away using custom elements towards thanks contributing", "d": "5/2018"}, {"body": "still experiencing bug ember able come consistent reproduction strategy happen transitioning routes nt query parameters global qp application controller never used experience error points line", "d": "5/2018"}, {"body": "thought possible easy fix change check existence first", "d": "5/2018"}, {"body": "jdenly hello wanted check found fix issue facing process memory leak issue application right ie eating memory frozen use lot javascript checking kinds circular references closures fact chrome nt issue made persistent think ie issue right ie ie version update version", "d": "5/2018"}, {"body": "unfortunately worked around ie creating mixin hooks route activate browser detection reloads application use top level routes application gets entirely refreshed opening new tab clearing existing tab closing move major areas application happy approach resolved issue ie trade making top level transitions slower messing history ca nt share code reload sequence frees memory var url thisrouterrouterrecognizergenerate routename null var win windowopen locationorigin url blank winfocus windowopen self windowclose also use localstorage keep track whether reloaded already avoid loops say disgusting code job", "d": "5/2018"}, {"body": "jdenly yep reload workaround seems anyone manages script solution would great thanks help", "d": "5/2018"}, {"body": "rwjblue works canary think closed", "d": "5/2018"}, {"body": "ran fontawesome nt even get console error messages lifearts fix worked however", "d": "5/2018"}, {"body": "opened issue rfcs repo suggested please add thoughts", "d": "5/2018"}, {"body": "closing feature request sdhull kindly opened issue rfcs repo thank", "d": "5/2018"}, {"body": "anyone still struggling seems work fine copied stackoverflow", "d": "5/2018"}, {"body": "yes using xlink href worked even though specs say deprecated using href thanks tip", "d": "5/2018"}, {"body": "anybody coming across looks like rfc decided returning true would desired unintended side effects still current thought process addon path forward would happy put however super simple implement perhaps nobody done \u30c4", "d": "5/2018"}, {"body": "almost certainly deprecated really add value normal js would write case generally negative cognitive impact code question", "d": "5/2018"}, {"body": "using lodash etc actually work correctly", "d": "5/2018"}, {"body": "agree iwe put together rfc potentially extracted addon well gratuitously used", "d": "5/2018"}, {"body": "snewcomer forge ahead", "d": "5/2018"}, {"body": "tchak way combine", "d": "5/2018"}, {"title": "bug request version", "body": "description form submit button want prevent default submit event form make ajax request used function working working fine method deprecated new version current version", "num": "4088", "d": "5/2018"}, {"title": "multiple attr values calling model work properly", "body": "attr function seems get broken work differently case adding multiple attributes within used attributes call model button seems worked well attributes used arialabel datatoggle datatarget following code shows working actual problem document ready function button first addclass close button first attr type button arialabel close datatoggle modal datatarget mymodal using dev tools inspector see set exactly classes attributes given code working well think bug jquery cdn using latest cdnthere solution available problem complete code jsfiddle check works checked following browsers ubuntu google chrome mozilla firefox side note think major bug tried different methods solve hope fix soon", "num": "4087", "d": "5/2018"}, {"title": "vulnerability report jquery", "body": "description application runs ie compatibility mode upgrade jquery possible fix issue version link test case", "num": "4086", "d": "5/2018"}, {"title": "lowercasing empty elements", "body": "description try get val undefined property coder spect something like obtain value undefinde propertes trying get value undefined propertie got problem lowercasing instead null pointer js equivalent seems need validation earlier procesing tested chrome edge iexplore nt even load views properly test case thanks much work link test case havent upload anything get descriptive screenshots", "num": "4085", "d": "5/2018"}, {"title": "undocumented jqxhrpromise", "body": "description see object returned contains function however looking documentation find function mentioned anywhere also function exist jqxhr superset function see since shouldt function referenced documentation link test case", "num": "4084", "d": "5/2018"}, {"title": "type async function function", "body": "first function return second comparison return demo jsfiddle jsbin throw error async function tested lastest google chromefirefox windows chromiumfirefox linux used version", "num": "4083", "d": "5/2018"}, {"title": "wrong window innerheight window outerheight mobile scroll", "body": "tested chrome android phone connected computer remote debugging expected behavior scrolling page equal height browser page actual behavior mobile device returned value seems innerheight page load top address bar visible make screen smaller eg page load innerheight returns page height correct scroll event innerheight still returns browser collapsed address bar innerheight open phone scroll work around still showing correct value use", "num": "4081", "d": "5/2018"}, {"title": "want something korean students", "body": "", "num": "4080", "d": "5/2018"}, {"title": "prev hide issue jquery slim", "body": "simple code notice issue jquery slim actually example expect happen clicking hide button last span child starts hide previuose b pressing show spans appears slowly actually happens clicking hide button last span child hides b pressing show last span child shows fast code runs perfect jquery edge simplified code expect hiding showing slowly jquery slim outputs fast jquery else working perfect browser google crome version bug jquery slim brand new codding world ca nt figure links test code jquery slim working perfect jquery edge working perfect", "num": "4078", "d": "5/2018"}, {"title": "work", "body": "environment chrome jquery test cases normal case norml case buggy", "num": "4077", "d": "5/2018"}, {"title": "bug selector false positives children id parent", "body": "summary selector produces many matches children parent id test case run open browser console chromium version official build built ubuntu running linuxmint html level level level level level level js var jquery var div consolelog div span length span length var abc consolelog abc span length span length var xyz consolelog xyz span length span length expected always find level element level element actual finds level level notes aware allowed multiple elements identical ids think wrong rely", "num": "4076", "d": "5/2018"}, {"title": "security vulnerability", "body": "hello currently using library website google chrome browser audits tool detects vulnerable please find link details please confirm legit issue would please advise hot fix thank rustam", "num": "4075", "d": "5/2018"}, {"title": "add render function elements", "body": "description requesting render function elements time time run situation need apply several changes dom element need browser render first change applying next add render function jquery like use like progressindicator css transition width width render css transition example disables css transition animation resetting progressbar done reenabled transition next change calling element offsetheight forces browser render changes execute rest code rendering adding render function allows easy chaining thinking would beneficial others add render function default notices many questions asked articles written get around issue rendering changes could solved easily way thanks", "num": "4074", "d": "5/2018"}, {"title": "explain line causing lag code", "body": "long debugging app related rendering events calendar apparently uses deferred line ask function windowsettimeout process timer seconds sort hack solve another issue android chrome noticed would delay execution code functions seconds application high happens android chrome removing timer calling process solve lag", "num": "4073", "d": "5/2018"}, {"title": "null object missing object", "body": "ie yes windows error line info empty object", "num": "4072", "d": "5/2018"}, {"title": "error npm instalation", "body": "issues json npm instalation", "num": "4071", "d": "5/2018"}, {"title": "use lockbot avoid comments stale issues prs", "body": "description see prevents people tacking comments using old jquery without fix happen similarlooking error message looking tech support randomly decide add line comments pr etc", "num": "4069", "d": "5/2018"}, {"title": "npm install contents wrong", "body": "description whenever run dist file available contents nodemodules folder look nothing like would expect contents folder also tried running npm run build gruntfile see bower file instead errors missing something", "num": "4068", "d": "5/2018"}, {"title": "fucking awesome", "body": "description link test case", "num": "4067", "d": "5/2018"}, {"title": "memory leak issue html injected inline script elements", "body": "jquery version currently used forum link injected inline scripts html gced injected inline scripts html gced script elements root global browsers tested edge chrome steps reproduce open url edge browser fiddle run demo fiddle open developer tools select memory tab start profiling session take initial heap snapshot press action one button take another heap snapshot press action two button take another heap snapshot repeat step compare last snapshots shown screen shots demo files demozip", "num": "4065", "d": "5/2018"}, {"body": "please ask help stackoverflow", "d": "5/2018"}, {"body": "jquery project generate vulnerability reports report provides details vulnerability talking vulnerabilities fixed involved breaking changes backported semvermajor versions need additional help security issues contact security consultant help fixing application aware naive vulnerability scanner recognize patched version jquery", "d": "5/2018"}, {"body": "nt sound like bug jquery report nt provide information requested issue template see get assistance stackoverflow", "d": "5/2018"}, {"body": "issue moved", "d": "5/2018"}, {"body": "probably applied generators also return", "d": "5/2018"}, {"body": "fixed solution", "d": "5/2018"}, {"body": "already changed master returns true however could changed map mapping", "d": "5/2018"}, {"body": "definitely want consistency think", "d": "5/2018"}, {"body": "jcubic would like submit pull request", "d": "5/2018"}, {"body": "actually discussed weekly meeting deprecated better ways determine information using plain old javascript would either need create new return value async functions map async functions plain functions neither good ideas", "d": "5/2018"}, {"body": "also encounter similar issue", "d": "5/2018"}, {"body": "despite confusion caused naming workaround use maps source includes scrollbar widthheight use apparently adjust address bar collapses bit extra weirdness comes mobile since workaround simple inclined close", "d": "5/2018"}, {"body": "korean nt understand mean want leaning jquery code teaching korean student think introduce jquery site example site", "d": "5/2018"}, {"body": "thank interest repo jquery core bugs new jquery learn documentation available", "d": "5/2018"}, {"body": "jquery slim include effects module needed animations still works hide show elements happens immediately", "d": "5/2018"}, {"body": "documented expected behavior unfortunately jquery intended create whole documents document bodies passing complex html browsers may generate dom exactly replicates html source provided mentioned jquery uses browser innerhtml property parse passed html insert current document process browsers filter certain elements elements result elements inserted may representative original string passed notice nothing jquery plain dom example", "d": "5/2018"}, {"body": "document duplicate ids invalid document", "d": "5/2018"}, {"body": "dmethvin correct selector engine depend document valid sense nt see look id example performance perhaps", "d": "5/2018"}, {"body": "since html specs say behavior dom apis duplicate ids undefined ca nt guarantee anything behave either fix document figure workaround", "d": "5/2018"}, {"body": "already fixed project still thought worthy reporting", "d": "5/2018"}, {"body": "yes old versions may contain security vulnerabilities bugs fixed latest version need specifics whether particular issue actually affects code base analyzed security professional jquery core team provide services", "d": "5/2018"}, {"body": "thanks opening issue however think good candidate plugin", "d": "5/2018"}, {"body": "mdn docs show seconds optional page explains happens omitted purpose wait next turn event loop action occurs explaining code debugging people code really purpose issue tracker could post subset calendar code stackoverflow larger group people help debug", "d": "5/2018"}, {"body": "supported version jquery development ask help stackoverflow", "d": "5/2018"}, {"body": "done got jquery code wwwbaiducom biggest chinese search net perfected", "d": "5/2018"}, {"body": "installed jquery windows yesterday triaging worked fine seek help stackoverflow examine npm debug log", "d": "5/2018"}, {"body": "run see dist directory version npm node installed", "d": "5/2018"}, {"body": "npm node also using nvm tried node got issue", "d": "5/2018"}, {"body": "get windows msysgit nothing wrong npm version jquery npm far tell must sort local config issue antivirus bash ls npm v node v npm install jquery npm warn saveerror enoent file directory open c wampwwwxjunkpackagejson npm notice created lockfile packagelockjson commit file npm warn enoent enoent file directory open c wampwwwxjunkpackagejson npm warn xjunk description npm warn xjunk repository field npm warn xjunk readme data npm warn xjunk license field jquery added package ls nodemodulesjquery authorstxt licensetxt readmemd bowerjson dist external packagejson src ls nodemodulesjquerydist corejs jqueryjs jqueryminjs jqueryminmap jqueryslimjs jqueryslimminjs jqueryslimminmap", "d": "5/2018"}, {"body": "dmethvin coworkers confirm works expected well wondering like said local config issue causing problem", "d": "5/2018"}, {"body": "leak stems code defining new global functions observe reduction fiddle scripts still evaluated affect global state", "d": "5/2018"}, {"body": "since internal code bug exposed think safe close", "d": "5/2018"}, {"body": "closing per feedback", "d": "5/2018"}, {"body": "please explain issue closed", "d": "5/2018"}, {"body": "oops misunderstanding part thought comment implied fixed master confirmed case", "d": "5/2018"}, {"body": "fixed", "d": "5/2018"}, {"body": "scripts use seem working properly gruntfile serve docs nt think need put readme lists starter", "d": "5/2018"}, {"body": "many things jquery made much easier back nt framesworks jquery nt framework compare angular dying react vue silly angular jqlite built projects worked added jquery since react newer versions angular work dom completely different used super handy use jquery selectors rarely use selectors anymore need use easy standard javascript ajax used another popular area jquery came handy promises newer versions javascript nice clean easy way ajax calls promises built using fetch promises newer javascript versions need use jquery babel also popular typescript allow us cross browser compatible something jquery really used help seeing comparisons frameworks makes wonder informed javascript general comparing jquery react like comparing comparing bicycle sports car issue jquery dropping continue drop popularity simply javascript gotten lot easier work frameworks might also reason jquery nt used much simply frameworks lot built functionality combined newer versions javascript yet see benefit using jquery", "d": "5/2018"}, {"body": "woah hold yoar hoarses bruvas jquery rawks like nun ok enough alphabet riddles mean jquery still currently highly relevant far building customized kickass spas function like standalone software web pages jquery cloud joy last years reason able code less design dealt javascript good ol days netscape ie wars grey hair lol long time ago times would design applications flash actionscript dhtml remember web pages back becoming dynamic less boring besides orgasmic headaches crossbrowser compatibility lol code base long wayyyy tooo lengthhhhyyyy much much later surpriiiise jquery arrives goal boldly go coder gone talk success jquery among awesome things introduces less code normalization bingo javascript library removed headaches crossbrowser compatibility relevancy jquery today equals facility designing code major reason adopt jquery stay closest native code without constraints frameworks emphasize allows customize ux way imaginable absolutely necessary designing prototypes another major reason jquery usage coding interpreter legible understandable hence intuitive explaining code within code bright let minifiers assorted cleaners job prepping file production one may gather modern browsers offer pretty much latest javascript jquery becoming redundant far crossbrowser compatibility issues jquery offers much foresee future jquery align sturdy crossbrowserness priorities userfriendly library possible allows among things novel quickest element manipulation traversing many frontend designers like want delve interactive spa coding web pages may full knowledge javascript none simply want design visions code effortlessly without steep learning curves constraints short shelf life frameworks respect jquery way less overwhelming designer needs expert programmer learning using jquery jquery remains relevant us folks awesome spas prototypes take look currently wwwdanavangardcom let hope jquery withstands wrath time keeping core features offering novelty instead redundancy jquery way da", "d": "5/2018"}, {"body": "one workaround seems per maybe simple enough workaround nt need change anything jquery", "d": "5/2018"}, {"body": "dmethvin expected target still understand big deal warrants tons ugly patches", "d": "5/2018"}, {"body": "general jquery supports events bubbling svg events attached svg elements workaround seem fix issue shown fiddle", "d": "5/2018"}, {"body": "delegating works firefox chrome also pointerevents trick might said comment time cases wo nt ok wontfix issue known registered edge case jquery indeed main lib used people deals complex svg", "d": "5/2018"}, {"body": "smfr bokand would either like submit pr far css offsettransform problem already document dimensions accurate cases", "d": "5/2018"}, {"body": "wo nt time next weeks", "d": "5/2018"}, {"body": "using apply creates new arguments eventually exceed size stack loop place results argument list thus keeps stack smaller", "d": "5/2018"}, {"body": "another workaround explicitly set display block complete selector fadein function css display block", "d": "5/2018"}, {"body": "gandharthakar thanks confirming", "d": "5/2018"}, {"body": "mgol afaik also native equivalent classlist api fyi replace method domtokenlist api looks like added november", "d": "5/2018"}, {"body": "dmethvin updating answer reflect reality someone clarify statement means context users increasingly embrace promise pattern asynchronous work like ajax idea special cases promise returned jqueryajax increasingly bad idea statement saying although removed time seen special case returned promise may removed road", "d": "5/2018"}, {"body": "winzig thanks help yes definitely special case since way abort standard withdrawn proposal uses like require like two epic threads finally settled implementation fetch goes show hard problem", "d": "5/2018"}, {"body": "hi arrived issue getting error chrome page uses jquery wymeditor plugin way reproduce error almost every time specific case using mutation observer contains uploaded test page see error console", "d": "5/2018"}, {"body": "thdoan reproduce using report new issue otherwise fixed past upgrade", "d": "5/2018"}]