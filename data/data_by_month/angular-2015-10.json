[{"title": "change detection inside socketio events", "body": "hello using socketio listen event changing component property inside event listener nt trigger change detection nt update view accordingly guess uses special kind events nt catched zone js import component injectable injectable component selector test template export class testcomponent static socket io scandone boolean false wanted plnkr requires socketio server work way manually trigger update added setinterval constructor see triggered view update really good practice", "num": "5046", "d": "10/2015"}, {"title": "hero editor tutorial", "body": "hello noticed things correct tutorial hero editor one redundant \u0430 gt tag end following html heroid heroname stands blocks code chapter masterdetail second thing end chapter show screenshot list heroes html different html showed us chapters get together differences dashboard heroes xxxx hero view details button cheers keep good work", "num": "5045", "d": "10/2015"}, {"title": "script tag renders", "body": "following template issue script tags rendering html basically part completely missing", "num": "5044", "d": "10/2015"}, {"title": "ngupgrade support using bindtocontroller object", "body": "since possible use convenient object notation use case nt seem covered", "num": "5042", "d": "10/2015"}, {"title": "svg elements rendered", "body": "sure bug something wrong looks like none svg elements insert page rendered app running live insert svg elements js import elementref component viewencapsulation ondestroy import icon services component selector glyph encapsulation viewencapsulationemulated viewencapsulationemulated viewencapsulationnative viewencapsulationnone default template styleurls appcomponentsglyphglyphcss directives glyph inputs src export class glyph implements ondestroy el htmlelement private icon icon constructor elementref elementref icon icon thisel elementrefnativeelement thisicon icon set src src string thisiconget src svg gt thiselchildrenlength thiselreplacechild svg thiselfirstchild else thiselappendchild svg ondestroy let svg thiselqueryselector svg svg thiselremovechild svg", "num": "5041", "d": "10/2015"}, {"title": "doesnt work set thislist router component", "body": "appts homets import component view ngif ngfor input import friendlistcomponent friendlist component selector homecomponent view templateurl jscomponentspageviewhomehtml directives ngif ngfor export default class homecomponent list array title string homehtml home title itemtitle result show charactors home", "num": "5040", "d": "10/2015"}, {"title": "allow developers specify pure providers", "body": "summary provide way developers specify providers stateless need instantiated next reqres cycle term rather backgroundwhy order increase response times angular application rendered server maintain reference platform injector maintains platform specific providers able determine providers every application application injector way determine providers kept others desposed since using di determine intent developer rather knowing current workaround developer would deconstruct bootstrap process create ways maintain application providers proposal promote specify metadata given provider typescript injectable pure true class statelessservice injectable pure true class directiveresolver resolve", "num": "5038", "d": "10/2015"}, {"title": "use property decorators lifecycle hooks instead interfaces", "body": "currently component routable component lifecycles defined via interfaces eg problematic interfaces runtime representation javascript runtime check method defined interface eg exists component instance call component method meant lifecycle hook still call name collisions result surprising results add new lifecycle hooks end breaking existing components reasons propose move away interfaces use property decorators instead import component oninit component selector testfoo class testfoo implements oninit oninit import component oninit component selector testfoo class testfoo oninit oninit dart notes api implemented via transformers production via mirrors development mode migration notes sure deal migration yet going reuse symbol different purpose might good way provide transitional path would argue making change asap cc mhevery vsavkin tbosch btford", "num": "5036", "d": "10/2015"}, {"title": "field read throws exception svg", "body": "fill read svg throwing exception alpha version height width export class vbutton public fill string blue", "num": "5035", "d": "10/2015"}, {"title": "svg rendering correctly xlink", "body": "textpath showing correctly alpha xmlns xlink version height width export class vbutton", "num": "5034", "d": "10/2015"}, {"title": "remove npm gulptraceur", "body": "obsolete confuses people gone remove gulptraceur bloats npm dependency tree", "num": "5030", "d": "10/2015"}, {"title": "pathlocationstrategybasehref null despite appbasehref set alpha", "body": "please consider following simplified example bootstrap javascript import bootstrap bind import routerbindings appbasehref routerprimarycomponent const routerconfig routerbindings bind appbasehref tovalue bind routerprimarycomponent tovalue rootcomponent bootstrap rootcomponent routerconfig routing links element page generated attributes links set believe code relies supposed set using dom adapter returns element dom get concatenated url sure fix moment perhaps setting empty string returns would enough", "num": "5028", "d": "10/2015"}, {"title": "errors auxiliary route", "body": "issues opening auxiliary route using syntax btford showed angular connect gives syntax errors runtime brandonroberts suggested fix using aux route opens required component shows errors console breaks urls routes run locally plunker open chat route url chat remains unchanged matter link clickthe back button nt work either plank", "num": "5027", "d": "10/2015"}, {"title": "routerconfig return page", "body": "config like routeconfig path component homecomponent homecomponent path book component bookcomponent bookcomponent path found component foundcomponent foundcomponent path component mecomponent mecomponent click link apphtml good press input url browser show page solve kinds problem someone help thanks", "num": "5026", "d": "10/2015"}, {"title": "prevent duplication pushstate history", "body": "clicked multiple times multiple history entries created exact url would possible compare current url page destination url call pushstate url already correct user perspective page click link page b click link page b press back button get back page", "num": "5025", "d": "10/2015"}, {"title": "formfind find controls nested controlgroups", "body": "form defined like changing email field invalid email want display error right field currently iterate deep tree makes really difficult come generic solution finding errors specific field makes pretty complicated come generic solution like one formsexample repo also really error prone especially deeper structures suggestion would offer possibilty make deep search pass whole path find method maybe something like", "num": "5024", "d": "10/2015"}, {"title": "circular dependency issues", "body": "current version madge fails detect circular dependencies tried upgrade issues found someone investigate fix issues upgrade madge", "num": "5022", "d": "10/2015"}, {"title": "memory leak repeated settimeouts", "body": "part project working found issue memory leaking repeatedly calling settimeout example simplified app following component selector app view template number encapsulation viewencapsulationnone export class app private number expected number counts looking chrome task manager memory usage quickly reaches using memory profiler gives following run using requestanimationframe gives obviously case similar using requestanimationframe would correct approach longer timeout slow running function example could result lot unnecessary overhead", "num": "5021", "d": "10/2015"}, {"title": "recommended way conditionally apply directive", "body": "would like apply directive conditionally something like classdraggable somebool draggable selector directive supported recommended way conditionally apply directive existing element use attribute selector pass boolean input ie directive always active prefer use ngifs duplicate elements everywhere cleaner way attach detach behavior", "num": "5019", "d": "10/2015"}, {"title": "http fix connectionresponse type observable", "body": "", "num": "5015", "d": "10/2015"}, {"title": "parser recognizing attribute", "body": "hi using issue using label element attribute template snippet component definition missing something exception get", "num": "5014", "d": "10/2015"}, {"title": "router clicking routerlink directives bypasses native onhashchange events", "body": "makes impossible thirdparty code aware angular know route changed honestly prefer routerlink go entirely away optional lot easier portable use plain instead router deal understanding example routerlink supports clicks keyboard", "num": "5013", "d": "10/2015"}, {"title": "polymer paperinput ngformcontrol regression", "body": "previously possible use paperinput ngformcontrol however throws error working error", "num": "5012", "d": "10/2015"}, {"title": "css shimming ignore matches regex comments", "body": "right css shimming uses lot regex magic break comments", "num": "5011", "d": "10/2015"}, {"title": "missing step tour heroes tutorial npm init cloning", "body": "may wrong believe missing step beginning tour heroes tutorial cloned quickstart directory also need run npm init new new tourofheroes directory create new packagejson file", "num": "5005", "d": "10/2015"}, {"title": "svg viewbox attribute converted lowercase templates", "body": "component arrives dom note lowercase way svg nt render correctly workaround using constructor manually set correct property", "num": "5004", "d": "10/2015"}, {"title": "dgeni publishes docs internal class members", "body": "example contains", "num": "5003", "d": "10/2015"}, {"title": "component needing injectable bootstrap providor found", "body": "attempting walk simple scenario component relies service say pull data see use amp commatinjectable make class injectable component constructor running situation throw provider found error working version modify bootstrap seems unmanagable add every service array would need import every single file top would nt someone want able inject injectable class without worry bootstrap also injectable made difference added bootstrap", "num": "5002", "d": "10/2015"}, {"title": "custom bundle generated systemjs builder working", "body": "created simple project setup systemjs loader one side load application libraries sources js sources second side generate custom application bundle systemjs builder using configuration loading app sources configuration provided builder application loading sources everything works fine case loading bundles browser problems trying use two systemjs builder paths build bundle case application runs throws maximum call stack size exceeded generate sfx case application nt starts ant token must defined exception general motivation configuration generate bundles contains exactly app needs modules dependencies solution also supports split application bundles lazy load modules demoed repo whole setup", "num": "4999", "d": "10/2015"}, {"title": "elements empty using canonical ngfor syntax inside", "body": "see plunker next template html first level tr level tr see plunker empty contents rendered outside works fine use instead see plunker", "num": "4998", "d": "10/2015"}, {"title": "uncaught typeerror mvalues function", "body": "hi angular quickstart guide working get error message alpha webpage shows template rendered single error javascript console copied exact folder structure html ts snippets running something wrong problem current beta", "num": "4997", "d": "10/2015"}, {"title": "dart build fails building examples", "body": "dart version dart vm version tue oct npm bin gulp builddart could find file named pubspecyaml usersmhwebstormprojectsangulardistdartexamples buildpubspecdart errored min error formaterror gulp emitone gulpemit gulporchestratoremittaskdone finish rejected promisewhen promisepromisepromisedispatch runsingle flush builddart errored min", "num": "4996", "d": "10/2015"}, {"title": "question seterror control removes validator errors desired behaviour", "body": "good idea setting errors property control overrides errors arose validator presume underlying reasoning manual validation performed control contained validator error make difference numeric input maxvalue validator controls form depending values min value constrained kicks might try write validator might conclude manual validation submit appropriate case max value error message lost min value constraint satisfied overriding errors arising validator control case combined clearing manual errors value updated would also consistent grouparray behaviour even simpler developer clear errors validator amp manual control calling seterror null seems strange", "num": "4995", "d": "10/2015"}, {"title": "invalid state control control group hierarchy detected root control group", "body": "consider following code var fb formbuilder injected var groupc controlgroup fbgroup groupb fbgroup controla validatorsrequired var controla control groupbfind groupbcontrola consolelog control valid controlavalid consolelog group b valid groupbvalid consolelog group c valid groupcvalid controlaupdatevalue consolelog control valid controlavalid consolelog group b valid groupbvalid consolelog group c valid groupcvalid cases invalid expected valid unexpected see first bullet point think bug", "num": "4994", "d": "10/2015"}, {"title": "keyframes shimmed components", "body": "since latest drop keyframes shimmed components breaking much animation", "num": "4993", "d": "10/2015"}, {"title": "scope injected controller appears create dependency issues angularmockinject", "body": "example given controller test js describe module function error given error longer present injection removed issue appears specific dependencies appear work quickly tested cloning adding scope injection see error", "num": "4990", "d": "10/2015"}, {"title": "testcomponentbuilder ability override pipe", "body": "today override template view directives adding cc juliemr", "num": "4988", "d": "10/2015"}, {"title": "update tests ff safari ie account renderer changes svg", "body": "changes introduced fix renderer support attribute svg broke tests browsers chrome tests need updated", "num": "4987", "d": "10/2015"}, {"title": "router lifecycle onactivate waiting promise displaying template", "body": "hi component looks like typescript component selector client view directives ngif template export class clientshow client client routeparams routeparams repository clientrepository constructor repository clientrepository routeparams routeparams thisrepository repository thisrouteparams routeparams onactivate return thisrepositoryfind thisrouteparamsparams id client gt thisclient client seems template displayed onactivate lifecycle hook promise resolved getting following error first promise resolved name displayed correctly desired behaviour may missing something easy find documentation theses lifecycle hooks thanks lot", "num": "4984", "d": "10/2015"}, {"title": "including code facadelangts twice leads rangeerror maximum call stack size exceeded errors", "body": "working cjs bundles decided duplicate facades code every bundle means multiple bundles loaded page say core executing code contained facades twice turns got piece code leads errors culprit javascript var assertionsenabled typeof global assert undefined export function assertionsenabled boolean return assertionsenabled todo remove calls assert production environment note ca nt export import files reserved keyword dart globalassert function assert condition assertionsenabled global assert call condition blocks", "num": "4981", "d": "10/2015"}, {"title": "datalist combined fallback support nt show proper data", "body": "provide fallback support using basic inside provide options shown value included demo screenshot edit sorry issue meant angular open", "num": "4980", "d": "10/2015"}, {"title": "quickstart install documentation packagejson issue", "body": "minor issue could nt see edit quickstart documentation right states also scripts section find replace following scripts start liveserver changed line otherwise errors error since packagejson nt valid json easy wayplace make pr let know", "num": "4978", "d": "10/2015"}, {"title": "ca nt npm install", "body": "sorry raising cloneissues tried latest npm npm save saveexact npm err darwin npm err argv save saveexact npm err node npm err npm npm err code npm err found npm err please include following file support request npm err even downgraded version npm save saveexact npm warn packagejson description npm warn packagejson repository field npm warn packagejson readme data npm err darwin npm err argv save saveexact npm err node npm err npm npm err code npm err found npm err please include following file support request npm err could please help", "num": "4977", "d": "10/2015"}, {"title": "feature request perl style given functionality ngswitch", "body": "perl given switch syntax godsend matching types regexes operations subject switch statement etc without reviewing source nt know much ties irreparably parse equivalent know directives created bridge gap functionality specifically ngif ngelif ngelse variable introduced ngswitch operated upon ngswitchwhen directive reference", "num": "4976", "d": "10/2015"}, {"title": "styleurls work root path", "body": "idea", "num": "4974", "d": "10/2015"}, {"title": "direct access dom", "body": "successfully integrated angular alpha import component bootstrap elementref component selector myapp template integrated background yellow providers elementref class appcomponent elementref elementref bootstrap appcomponent everything working fine angular documentation elementref states following use api last resort direct access dom needed use templating databinding provided angular instead alternatively take look link renderer provides api safely used even direct access native elements supported relying direct dom access creates tight coupling application rendering layers make impossible separate two deploy application web worker question arises integrate renderer api documentation renderer api samples", "num": "4973", "d": "10/2015"}, {"title": "suggestion property name mapping support minification components", "body": "thinking achieve better minification angular app difficult achieve due templates angular expressions interpreted angular could optional property decorator perhaps another decorator familiar codebase would map property names components names variables template expressions", "num": "4969", "d": "10/2015"}, {"title": "remove deprecated dgeni dgeneration dts files gulp ci", "body": "awesome new packagejson driven typedef generation online remove steps gulpfile linting checks travis", "num": "4967", "d": "10/2015"}, {"title": "feat router add ability define root component value", "body": "provide value component router overridden since angular notion root component router uses new object provide host component building initial route config value would default instance new object could changed point root directive name would allow routes configured without injecting router first", "num": "4965", "d": "10/2015"}, {"title": "add deep tree without viewcache static tree benchmarks", "body": "need know regressions well right tracking deep tree benchmark viewcache enabled", "num": "4964", "d": "10/2015"}, {"title": "benchpress codehealth remove metric abstraction introduce event processor", "body": "adding new metric benchpress hard right requires change already big file initially benchpress supposed handle different sources metrics turns metrics benchpress generated one source browser performance logs therefore metrics implemented file right benchpress changed support multiple event processors split additionally abstraction configuration around removed", "num": "4962", "d": "10/2015"}, {"title": "benchpress codehealth use multi bindings", "body": "benchpress multiple configuration options use arrays eg metrics reporters using multi bindings simplify configuration users", "num": "4961", "d": "10/2015"}, {"title": "router working ng", "body": "", "num": "4960", "d": "10/2015"}, {"title": "template directives nt properly export variable", "body": "attempting use templatebased directive following behaviour occurs used syntax get error directive exportas set foo despite true used nt get error export null method calls property access error way export work using specifying exportas despite edit actually necessary workaround manually set local viewrefsetlocal exportasname additionally case exported variable accessible external context set accessed inside template makes sense setlocal works inside template consequence overall divergent behaviour workaround get variable inside template nt constitute way export work since somewhat unrelated featurewise demonstration plunkr", "num": "4950", "d": "10/2015"}, {"title": "urlsearchparams properly escape keys values tostring", "body": "right case clients must escape query manually defeats one purposes using", "num": "4948", "d": "10/2015"}, {"title": "ngcontent projection root component", "body": "projection nt work root component eg following code content needs projected component selector app view template class app bootstrap app persists dom bootstrapped reviewed design doc nt found restriction plunker", "num": "4946", "d": "10/2015"}, {"title": "auxilary routes broken", "body": "nt get aux routes running creating aux route config always leads following exception originating routerjs following plnkr demonstrates error", "num": "4945", "d": "10/2015"}, {"title": "support url fragment links like angular anchorscroll", "body": "angular great service component anchorscroll something analogous angular html spec section navigating fragment identifier", "num": "4944", "d": "10/2015"}, {"title": "refactor location move router package platformcommon", "body": "summary discussion brought light would beneficial exist dependent bundle problem users need access url query params whether using component router sample user story manager needs quick form posted isolated marketing page single page routes developer wants build form using plans process various flows via url query params used across several different links emailed via marketing campaign developer wants use core bundle routes page needs access query params easily various usabilitymarketing tracking purposes proposal make part module would included main bundle thoughts begin working next day cc mhevery btford", "num": "4943", "d": "10/2015"}, {"title": "public api setting dom adapter", "body": "currently several places need set dom adapter serverside rendering webworker testing nt public api done today variant need decide upon public api selecting platformspecific dom adapter", "num": "4942", "d": "10/2015"}, {"title": "jasmine testing", "body": "seems source code unittestshtml nt correct cause user install jasminecore", "num": "4938", "d": "10/2015"}, {"title": "feat router add support auxiliary routes", "body": "component router angular currently supports unnamed outlets nt include support creating named outlets using auxiliary routes", "num": "4937", "d": "10/2015"}, {"title": "test router add tests location strategy", "body": "originally location strategy included small amount platformspecific behavior pragmatic test part tests order fix abstract behavior location strategies many tests bogus meanwhile pr needed refactoring add layer location strategy able test part include tests behaviors test resolved", "num": "4935", "d": "10/2015"}, {"title": "ngif container component checking property references", "body": "use container component hide children elements inserted via try access properties bindings till true posttitle component selector postmodal template template directives modal ngif export class postmodal component selector modal template template directives ngif export class modal", "num": "4934", "d": "10/2015"}, {"title": "add possibility reset form value states", "body": "current forms api possible reset states like dirty pristine typical scenario would form submit add entry database list submitting value form reset initial state also flags resetted using modeldriven approach currently possible reset values chance create new form plnkr demonstrates modeldriven approach using template driven approach possible reset ngmodel object initial state case flags like dirty pristine nt reset behaviour possible utilize form states something like candeactive imo needs way reset value flags form initial state still idea could solved ngmodel scenario dedicated object form controller would correct always reset flags changing ngmodel object programmatically like", "num": "4933", "d": "10/2015"}, {"title": "two lt input typenumber min gt element ngrepeat one display number", "body": "html js description three input element min type values scopedata problem last one display input element nt know anybody help thank sound code", "num": "4932", "d": "10/2015"}, {"title": "webworkers ca nt load one component templateurl", "body": "alright repo error clone run tsc run main component called component responsible wrapping exposing components app thise case simple todoapp see everything working fine go uncomment see application simply disappears errors thrown go change simply things work fine seems weird silent error idea", "num": "4930", "d": "10/2015"}, {"title": "sync commit persha sync", "body": "", "num": "4929", "d": "10/2015"}, {"title": "minification story needed", "body": "current bundle big need get closer mark", "num": "4925", "d": "10/2015"}, {"title": "run code noimplicitany", "body": "", "num": "4924", "d": "10/2015"}, {"title": "use camelcase instead dashcase html", "body": "new parser switch longer convert instead honor properties", "num": "4923", "d": "10/2015"}, {"title": "unable pass property root level component", "body": "noticed possible pass data root level component using properties hoping pass data root level component way initialize external data sources one simple example would javascript object defined indexhtml outside angular ex assume root level component indexhtml page would like pass array testing property way initialize main component nt seem work find unfortunate limitation since alternative define global variable access inside component instead able ferry data via properties", "num": "4921", "d": "10/2015"}, {"title": "remove old query api", "body": "old query api replaced contentchildren viewchildren old api needs removed", "num": "4919", "d": "10/2015"}, {"title": "remove lifecycle event move functionality applicationref", "body": "responsible creating notifies changes turn notifies root per bootstrapped", "num": "4918", "d": "10/2015"}, {"title": "form controll listen reset event", "body": "click reset button form value still unchanged see", "num": "4914", "d": "10/2015"}, {"title": "core better iterable support", "body": "see eg change maybe add dart method js", "num": "4911", "d": "10/2015"}, {"title": "cancel component host event", "body": "hi cancel component host event need mybutton component way achieve thanks advance tiago braga", "num": "4909", "d": "10/2015"}, {"title": "testing guide partially available", "body": "chapters angular testing guide available website menu chapters available end chapter testing angular pipe link next chapter using latest silk browser kindle hd fire tablet", "num": "4908", "d": "10/2015"}, {"title": "comunication components", "body": "tried use componente directive code directive export class datepicker public date date public callback function html componente use code import component ngif formdirectives elementref import datepicker datepickerdatepicker declare function initmaterial component selector modal directives ngif datepicker formdirectives templateurl frontendcomponentsmodalmodalhtml styleurls frontendcomponentsmodalmodalcss bindings datepicker export class modal public isopen boolean false private dtcompromise date private dscompromise string private datepicker datepicker html data descri\u00e7\u00e3o selected date function onselect called consolelog print undefined whats error", "num": "4906", "d": "10/2015"}, {"title": "lifecycletick called recursively submiting form enter key", "body": "form hooked event handler interessting thing submit form pressing enter keyboard get exception lifecycletick called recursively however happen click loginbutton submit form loginformhtml html username username login loginformts typescript import component view formdirectives ngif import userprovider servicesuserprovider view templateurl appcomponentsloginformhtml directives formdirectives ngif component selector loginform export class loginform constructor protected userprovider userprovider userproviderts typescript import injectable import http headers import user modelentities injectable export class userprovider private static tokenkey string usertoken private static defaultresultmapper res gt resstatus lt return resjson else throw new error resstatus", "num": "4904", "d": "10/2015"}, {"title": "newbie angular typescript deletes javascript", "body": "template indexhtml angular typescript basic application template javascript example loads jquery libraries problem tags template parsed deleted way prevent angular whatever engine used deleting tags change tags something else example tag thanks", "num": "4903", "d": "10/2015"}, {"title": "issue typings webworker bundle", "body": "create new angular project using alpha npm attempt load webworker bundle typescript project get following errors compilation looks like facade types loading reason", "num": "4902", "d": "10/2015"}, {"title": "angular cooperate amdcommonjs", "body": "original issue misunderstood closed early talking scenarios describing please read referenced case describes utilize angularjs requirejs using asynchronous loaders angularjs parses html document modules loaded", "num": "4901", "d": "10/2015"}, {"title": "input output nt work angular dart", "body": "input output work yet angular dart inputcomponentdart dart component selector inputcomponent properties const dateofbirth dateofbirth view templateurl inputcomponenthtml class inputcomponent inputcomponent input string name string dateofbirth inputcomponenthtml html name name dob dateofbirth dateofbirth updates properly name", "num": "4899", "d": "10/2015"}, {"title": "angular dart throwing implemented exception", "body": "get following exception version program bindings exception implemented exception implemented stacktrace package abstractchangedetectorchecknochanges package lifecycletick dart core listforeach package lifecycletick package lifecycleregisterwith dart async zonedelegaterun package ngzonerun exception uncaught error implemented stack trace package abstractchangedetectorchecknochanges package lifecycletick dart corepatchgrowablearraydart listforeach package lifecycletick package lifecycleregisterwith dart asynczonedart rootrun dart asynczonedart zonedelegaterun package ngzonerun dart asynczonedart customzonerun dart asynczonedart customzonerunguarded dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart microtaskloopentry dart html scheduleimmediatehelperhandlemutation undefined", "num": "4898", "d": "10/2015"}, {"title": "angular cooperate amdcommonjs", "body": "issue angularjs becomes clear angularjs nt work well amd amd commonjs seem become default loading technique typescript angular cope problem work amdcommonjs loaders like requirejs", "num": "4897", "d": "10/2015"}, {"title": "alpha router parenthesis urls", "body": "problem parenthesis characters works first try nt work page refresh returns player instead player try uri encode nt works first try route params return nt work page refresh returns instead guess problem router think parenthesis auxiliary routes refresh app router probably encode something else decode params make would probably good idea implemented within router special characters might use nt limited way regarding characters put url", "num": "4895", "d": "10/2015"}, {"title": "exception error instantiation token promise", "body": "follow quickstarthtml create run npm start browser notice like exception error instantiation token promise exception error instantiation token promise browserdomadapterlogerror anonymous function anonymous function anonymous function anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function promise asap flush original exception directive annotation found appcomponentbrowserdomadapterlogerror anonymous function anonymous function anonymous function anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function promise asap flush original stacktrace browserdomadapterlogerror anonymous function anonymous function anonymous function anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function promise asap flush error directive annotation found appcomponent new baseexception directiveresolverresolve runtimemetadataresolvergetmetadata templatecompilercompilehostcomponentruntime runtimecompilercompileinhost dynamiccomponentloaderloadasroot injectorinstantiate injectorinstantiateprovider injectornew", "num": "4892", "d": "10/2015"}, {"title": "upgrade module fires error upgrading directives without templates", "body": "trying use angularfileupload angular application try upgrade nvfileselect directive get error plans add support directives", "num": "4891", "d": "10/2015"}, {"title": "specify inputs outputs via annotations decorators", "body": "think would useful specify intputs outputs decorators similar hostbinding annotation declarative code exactly used much cleaner one big list inputs outputs top component imho javascript component selector task view template template directives task export default class task constructor thisfinishedhandler new eventemitter input taskdata set task task thistask task output finished get finishedhandler return thisfinishedhandler", "num": "4890", "d": "10/2015"}, {"title": "interpolate service", "body": "hello writing service need parse strings containing interpolated values something like use component would defeat purpose angular useful service searched angular source code thing found class seems used templates nt able use correctly wanted end nt able find anything even remotely similar service angular way parse string like without using component template could something would consider adding probably something needed well", "num": "4889", "d": "10/2015"}, {"title": "using syntax directives inputs also require", "body": "sure intentional took puzzle looked issue topic found none demonstration plunker basically use instead additional inputs also prefaced additionally values bound expressions default without use binding syntax several ways counterintuitive", "num": "4888", "d": "10/2015"}, {"title": "directive instantiating native html", "body": "hi directive instantiating native html refer plnkr link thanks", "num": "4887", "d": "10/2015"}, {"title": "router urparserparseparam decode keyvalue", "body": "router link query parameter value contains space eg hotel jurys inn dublin christchurch value properly encoded query string navigate url via browser address bar hotel parameter decoded jurys inn dublin christchurch stays jurys", "num": "4886", "d": "10/2015"}, {"title": "question support media queries style compiler", "body": "push content tag list discarding attribute applies guess want add support would need thinking wrt rules ie would possible add media query applies", "num": "4884", "d": "10/2015"}, {"title": "exported typings nt work target", "body": "include transitive typings", "num": "4882", "d": "10/2015"}, {"title": "fails load builtin types changerun cycles", "body": "lot errors like show restarting fixes", "num": "4881", "d": "10/2015"}, {"title": "provide keyword html bindings", "body": "event callback often would like access keyword mean things like course fine need element elements seems natural write something like less names think guess could also write basically could seen shortcut", "num": "4880", "d": "10/2015"}, {"title": "question templatenormalizer amp css order", "body": "parses styles push nonresolvable external style sheets bcss contains final order c b may b c nt check goes first think could cause issues styles order sensitive", "num": "4879", "d": "10/2015"}, {"title": "question htmlparser called twice compiler", "body": "called twice compilation would possible call reuse ast understand critical path potential refactoring given low priority", "num": "4877", "d": "10/2015"}, {"title": "changedetection errors events nt include debug information", "body": "eg directive fires event expression tries fired event contain property", "num": "4875", "d": "10/2015"}, {"title": "unit testing components styleurls fails", "body": "looks like try run test component fails tries load expected behaviour way avoid spec nothing special dummy test component create component using", "num": "4873", "d": "10/2015"}, {"title": "language support template", "body": "ca nt use chinese templateis supported yet set encoding", "num": "4871", "d": "10/2015"}, {"title": "dynamiccomponentloader ca nt instantiation constructor", "body": "hi team wan na use dynamiccomponentloader load components found dynamiccomponentloader instantiation constructor actually instantiation constuctor simplistic version dynamiccomponentloader confused bug use dynamiccomponentloader custom method", "num": "4868", "d": "10/2015"}, {"title": "interface abstract class naming", "body": "namingmd end impl word describes specific implementation interface interface name way identifying interface current state code abstract class compiler export class compiler extends compiler export class runtimecompiler extends compiler implements runtimecompiler export class xhrimpl extends xhr interface postmessageinterface tbc imo needs agree convention document amp enforce", "num": "4867", "d": "10/2015"}, {"title": "bindings default deps const", "body": "following fails const binding myclass tofactory buildmyclass following successful const binding myclass tofactory buildmyclass deps const valid use case const binding myclass tofactory buildmyclass deps null", "num": "4866", "d": "10/2015"}, {"title": "introduce angularentrypoint annotation decide pull ngdeps", "body": "currently use poor man pattern matching decide files rewrite swap reflection generated ngdeps instead developer able select file consider entry point test file app main method something else tell us right file need add ngdeps imports proposal introduce annotation developer applies function method dart library mytest angularentrypoint main nt methodfunction suffice transformer would look annotation rewrite file adding imports adding calls functions swapping even call would still add way people bring custom bootstrap api popular tests details let say following dart file dart library hasentrypoint import adart import bdart class app angularentrypoint void start bootstrap acomponent angularentrypoint main bootstrap bcomponent transformer identifies annotation rewrite file dart library hasentrypoint import adart import angdepsdart import bngdepsdart import bdart class app angularentrypoint void start bootstrapstatic acomponent angularentrypoint main bootstrapstatic bcomponent notes imports injected way alter line numbers better debugging experience reason calls go line opening curly functionmethod declaration entry points calling even use otherwise need resolve whole program figure types used developer split code multiple libraries get finer grained control code size practice would rarely production code multiple entry points file mostly useful tests", "num": "4865", "d": "10/2015"}, {"title": "checkbox form models scope changed model predefined controller", "body": "jsfiddle demo using latest issue submitting form checkbox keyvalue pair nt even populate scope checkbox touched changed b prepopulated ngmodel checkbox truefalse controller beforehand example active submit angularmodule app controller democontroller function var vm vmsubmit function formresults consolelog formresults controller first loaded pushed object simply outputs opposed checkbox checked submit pushed unchecked submit pushed populated quick fix course adding controller intentional seems everything else treated boolean even undefined things turn comes nt", "num": "4863", "d": "10/2015"}, {"title": "support event type information tools", "body": "assume user typed ide know complete suggestions sites turns dom event easy way know type ide recognize dom event implies ide needs preexisting schema schema something compiler needs well properly validate weather particular element event particular dom event examples element emitting change event goal event schema dom declared way toolable tools take advantage completion different kind event fired element bubble case look directive annotation derive type completion ide resolution logic would check schema derive type found check directives element see fire event type", "num": "4862", "d": "10/2015"}, {"title": "change detection infinite loop firefox", "body": "randomly found triggers cause infinite change detection loop firefox replicated one plunker scrolltofixed plugin basic dom manipulation applies styles however scroll main section sidebar section see docheck called infinitely also able trigger infinite loop firefox triggering marker within google map start animating infinite loop occur ie safari chrome unsure problem firefox find source issue", "num": "4861", "d": "10/2015"}, {"title": "using strict di", "body": "generated trying use ngstrictdi throws error using strict di nt fact cursory glance looks like nothing file uses strict di wanted make sure known going addressed", "num": "4860", "d": "10/2015"}, {"title": "support configuring global directivespipes", "body": "detailed design doc allow platform providers way load set ambient directives pipes compiler something would recommend user would useful platforms examples would etc would etc would native components case user would declare component component selector mycomp template need import platform directives directives ngfor ionview class mycomp platform ionic application component mycomp", "num": "4857", "d": "10/2015"}, {"title": "feature request viewqueries complete hook", "body": "subcomponent usecases configured data passed viewquery however hook subcomponent runs viewquery complete eg distinguish case configuration yet arrived configuration never arrive simple repro run prints would like hook complete query got subcomponent printed indexdart dart library main import package import package void main bootstrap appbodycomponent component selector appbody view template directives const subcomponent class appbodycomponent appbodycomponent viewquery subcomponent querylist subcomponents print initially saw subcomponentslength sub components subcomponentschangeslisten subcomponentsforeach subcomponent print query got subcomponent subcomponentdisplaytext hangry component selector subcomponent view template displaytext class subcomponent implements oninit aftercontentinit afterviewinit override oninit print subcomponent oninit override aftercontentinit print subcomponent aftercontentinit override afterviewinit print subcomponent afterviewinit string displaytext initial get displaytext gt displaytext set displaytext print setting display text displaytext indexhtml html please open dev console see order operations app app two components appbodycomponent subcomponent appbodycomponent using viewquery provide important configuration information subcomponent subcomponent able delay initialization configuration set app knows going set configuration largely purpose oninit however case notice subcomponentoninit called parent component able set configuration viewquery bug oninit delayed queries completed", "num": "4856", "d": "10/2015"}, {"title": "race condition two way databinding corrupt data", "body": "pointed gitter henriquefm plunker reference worst sort heisenbug behaviour occasionally desktop much often mobile clicking hero changing name clicking another hero result second hero name replaced first hero name reproduction open plunker click mr nice add foo make mr nice foo click narco rarely narco instantaneously change mr nice foo could take dozens reloads reproduce others room reported consistent immediate reproduction mobile see video attached gitter github nt support attaching videos currently reproduced chrome say reproduction rate attempt henriquefm reports better core duo diadistis reports lack reproduction reproduction htc", "num": "4855", "d": "10/2015"}, {"title": "events using wrong syntax fails silently", "body": "fails silently works actually prefer former working sugar least error would nice", "num": "4854", "d": "10/2015"}, {"title": "allow template local variables publish type information ides provide better completion", "body": "problem assume following code example userlast userfirst class myexample users list class user first string last string ide type information type information reason verify valid know number valid know type solution parameterize class row implicit index number even boolean odd boolean directive selector ngfor ngforof class ngfor constructor templateref templateref viewcontainer viewcontainer changing view api currently setting local variables done better way consistent proposal inject locals object view creation advantage currently compute regardless wether needed template injecting local object field computed class row implements locals constructor public implicit index number get even gt thisindex get odd gt thisindex means object rich api unless field actually referenced template cost computing fields furthermore using typed object get better performance locals using hashes add type templates requires read generics di dependencies constructor arguments typescript import user component types user template class myexample users list notice sets map template types real types allow compiler generate code generated code deduce generic row ngfor constructor asking templateref class extends appview changedetection var user user retrieved template context implicit var contextindex number contextindex number class appview context class templateref appview appview get context return thisappviewcontext", "num": "4850", "d": "10/2015"}, {"title": "alpha http request sent every subscribe call", "body": "subscribe multiple times observable created via http request sent plunkr intended behaviour like able pass observable services letting subscribe request", "num": "4848", "d": "10/2015"}, {"title": "range error loading", "body": "hi update projet quickstart instructions get following error loading uncaught rangeerror maximum call stack size exceeded objaddeventlistener zoneaddeventlistener zoneaddeventlistener try see happen notice infinite loop objaddeventlistener zoneaddeventlistener following arguments eventname open handler function zoneboundfn usecapturing false something wrong cyril", "num": "4847", "d": "10/2015"}, {"title": "remove deprecated ngzone api", "body": "happen roughly weeks released give people time migrate", "num": "4846", "d": "10/2015"}, {"title": "router fails generate link child route parent route loader", "body": "using loader function route child routes router link directive throws exception trying generate link nested route example plunk", "num": "4845", "d": "10/2015"}, {"title": "composing angular components angular directives", "body": "angular directives work inside angular components interact example use md directive like mdautocomplete inside angular component snippet productlistcomponent component mdautocomplete component", "num": "4844", "d": "10/2015"}, {"title": "use selectoptionngfor array objects", "body": "trouble creating select backed array objects instead strings knew angularjs using ngoptions nt seem work using alpha sample five selects three work select string simple stringbased select works fine select object via binding attempt use binding unfortunately fails two ways page loads select shows wrong value foo instead bar select option list value object object gets sent backing store instead correct value select object via event attempt get selected value event fails two ways initial load incorrect way selection option list value object object retrieved event ca nt get right value select gets cleared select object via string approach uses object works unfortunately really works using string array converting value string object back select object via json might bit better nt require string array involve using json way also sure getting event change better worse getting stringified objected ngmodelchange chocoloper helped version typescript import component formdirectives ngfor inject import routeparams interface testobject name string value number component selector app template select string directives formdirectives ngfor export class appcomponent objarray testobject name foo value name bar value testobject thisobjarray testobject thisobjarray testobject thisobjarray testobject thisobjarray strarray string thisobjarraymap obj testobject gt objname strvalue string thisstrarray stringify string return jsonstringify event event void const value string eventsrcelement value event event void const value string eventsrcelement value event string void jsonparse event functions testobject jsonparse would nt enough need thisobjarrayfind obj testobject gt objname jsonparse event name printvalues void consolelog strvalue thisstrvalue consolelog consolelog consolelog consolelog intended way seem pretty clunky another approach early alpha something silly", "num": "4843", "d": "10/2015"}, {"title": "change ngmodel property value property", "body": "order support two way databinding angular used desugars directive impeadence match element event expected name event reasonable crossplatform makes sense browser native applications proposal remove move responsibility render layer code become desugars dom rendering layer would intelligent enough know shim dom comes across element someone registers event knows register event extract value input value solution lot cross platform since rely render layer provide right kinds shim", "num": "4841", "d": "10/2015"}, {"title": "refactor upgrade better names adapter apis", "body": "currently comes two apis make angular angular components interoperable upgrades directive allows us define directive dependency component downgrades component directive bootstrap application two things feel bit weird using apis mainly names nt really fit idea upgrading angular app angular however take component want bootstrap module downgrade technically true naming says total opposite actually wan na upgrade angular component always lives module even component uses directives using downgrade component make available outer module technically correct feels weird naming perspective upgrade components components downgraded sure go back petebacondarwin suggested wrapping component component vice versa another idea came arvidkahl sth transforming component maybe although two names nt really say transforming leaving would love thoughts mhevery", "num": "4837", "d": "10/2015"}, {"title": "scroll supported webworkers", "body": "currently nt way serialize scroll event listening one throws error add basic serialization scroll events", "num": "4836", "d": "10/2015"}, {"title": "eager provider creation", "body": "eagerly create instance injector created needed platforms initialize statically even one injects", "num": "4835", "d": "10/2015"}, {"title": "rework bootstrapping imports bundles", "body": "full design doc x support configuring platform directivespipes x inject autoinit x refactor bootstrap using di bundles x x realign imports x rename make bootstrap process less verbose update decided x move imports per spreadsheet x create platform bundles x sfx bundles exports namespace additive fashion x commonjs bundle x bundle contains", "num": "4834", "d": "10/2015"}, {"title": "rework", "body": "", "num": "4833", "d": "10/2015"}, {"title": "router use routeparams angular application", "body": "use routeparams angular application javascript directive routeconfig path test id component test test testcontroller function routeparams thisrouteparams routeparams thisrouteparams always empty", "num": "4831", "d": "10/2015"}, {"title": "template work ieedge table", "body": "ieedge support table following code works fine chrome ff rxx ry sum sum rxy directives coredirectives class mycmp values x x sum number let total let lt ylength total return total diadistis provided workaround natual templatehtml author could parse template browser independent fashion support something like", "num": "4830", "d": "10/2015"}, {"title": "angular nt find module", "body": "set simple small text application using uigridrequirejs problem setup angular starts searching ngapp directive html finished loading randomly get angular error stating module gridtest could found injector modulerr failed instantiate module gridtest due error injector nomod module gridtest available either misspelled module name forgot load registering module ensure specify dependencies second argument anonymous function ensure module wrong angularjs searching module dom completely loaded source html jqgrid test page", "num": "4829", "d": "10/2015"}, {"title": "router routerrecognize path fails path query params", "body": "looks like try use shape path recognized would makes sense path recongnizer would ignore query params look path instead would look probably recongnized assuming route matching path", "num": "4827", "d": "10/2015"}, {"title": "docs", "body": "hi probably best place post follow path title directive component change detection lifecycle hooks implemented class methods use find afterviewinit description says called oncontentinit component view initialized applies components called aftercontentinit right feel free close anytime stay awesome tiago braga", "num": "4826", "d": "10/2015"}, {"title": "location search method", "body": "see service method used fetch path search query params nt already way get params would nt make sense method would return", "num": "4824", "d": "10/2015"}, {"title": "build browserify webpack", "body": "tool prefered angular team", "num": "4823", "d": "10/2015"}, {"title": "updating object member nt trigger update event object", "body": "seems update detection objects member values updated broken simple example multicomponent", "num": "4821", "d": "10/2015"}, {"title": "unit testing error thrown promise resolution causes digest already progress message next call apply", "body": "angular thrown errors digest function qwhen function throw new error test error codebase throws many errors alert developers problems lots trouble testing minimal test case showcases problem", "num": "4819", "d": "10/2015"}, {"title": "improve errors multiple template directives one element", "body": "using multiple template directives element throws errors related code angular nt report errors would nice error tells us ca nt use two template directives one element see comment plunker", "num": "4817", "d": "10/2015"}, {"title": "frameworkfeature easily load static html", "body": "suggest framework way easily include static html files directly routeconfigrouter probably every web application kind static data display example kind impressum agbconditions instructions far know one would create class annotations view component html file put routeconfig ends unneeded boilerplate code atm got factory gets html files via xmlhttp creates component puts route returns route simply instantiate factory root component use routeconfig export class htmlcomponentfactory components map constructor thiscomponents new map providecomponent htmlroute htmlroute route thiscomponentshas htmlroutehtmlpath var xmlhttp new xmlhttprequest xmlhttpopen get htmlroutehtmlpath false xmlhttpsend null export class htmlroute extends object path string htmlpath string string constructor path string htmlpath string string super thispath path thishtmlpath htmlpath thisas following root component named app var htmlcf new htmlcomponentfactory component selector app view template directives routerdirectives coredirectives routeconfig htmlcfprovidecomponent path admin htmlpath adminhtml admin htmlcfprovidecomponent path impressum htmlpath impressumhtml impressum export class app buttons string router router loc location constructor router router loc location thisrouter router thisloc loc thisbuttons admin impressum introduce something working like framework would create pull request nt much experience javascripttypescript angular stuff", "num": "4815", "d": "10/2015"}, {"title": "dependency reactivexrxjs version available npm", "body": "think packagejson need update latest version reactivexrxjs log npm install npm err found npm err npm err reactivexrxjs npm registry npm err bug author publish npm err specified dependency npm err npm err note also install npm err tarball folder http url git url npm err system darwin npm err command node usrlocalbinnpm install npm err cwd npm err node v npm err npm v npm err code npm err ok code updating version local copy stuck issue npm install angularsrcs preinstall users node toolsnpmchecknodemodules purge npm dependencies stale unknown state purging", "num": "4814", "d": "10/2015"}, {"title": "npm package bloated", "body": "seems like lot compressed better still quite lot better", "num": "4812", "d": "10/2015"}, {"title": "routeparams nt understand getting arrays format understood", "body": "using alpha able pass array strings query param like produces routeparams would like able produce routeparams using syntax well reason previous version angularjs app used syntax calls external apps would like able support migrated version unfortunately appears routeparams nt support syntax would helpful routeparams able understand something might supported future need redesign apps use shorter syntax note generate url top issue able use two different routerlink formats", "num": "4811", "d": "10/2015"}, {"title": "dart failing build", "body": "upgraded get following running pub build", "num": "4810", "d": "10/2015"}, {"title": "using routerlink navigate another component invoke oninit method", "body": "using angular version routerlink navigate child component use babel transpile code following example dashboard component winjs splitterview navigation area splitview link display people component content area split view problem click people link navigation area dashboard component see constructor people component called oninit method dom manipulation oninit ca nt put dom manipulation constructor work dashboardhtml javascript splitview pane area people appjs javascript import component view bootstrap bind import routeconfig routerbindings routerdirectives routerprimarycomponent import reflectmetadata import winjs import peoplecomponent peoplepeople component selector dashboardapp view templateurl dashboarddashboardhtml directives routerdirectives routeconfig path people component peoplecomponent people class dashboardappcomponent constructor bootstrap dashboardappcomponent routerbindings bind routerprimarycomponent tovalue dashboardappcomponent peoplehtml javascript peoplejs javascript import component view bootstrap import reflectmetadata import globalize component selector people view templateurl peoplepeoplehtml export class peoplecomponent constructor gets called click people dashboard", "num": "4809", "d": "10/2015"}, {"title": "improve routing regular expressions", "body": "think url property manage regular expressions defaultoptional parameters", "num": "4808", "d": "10/2015"}, {"title": "update reactivexrxjs", "body": "hello guys update reactivexrxjs typings fix alpha help compilers pr looks like updating dependencies requires mac nt done wo nt simple work might want update imports done example ping jeffbcross alexeagle robwormald", "num": "4806", "d": "10/2015"}, {"title": "css firstchild selector work using ngfor", "body": "seems like using render list items want use selector work expected looks like right first item tag inserted rendering ends html probably intentional taken consideration would break expected behaviour fix might good idea", "num": "4805", "d": "10/2015"}, {"title": "uncaught typeerror mvalues function", "body": "trying quickstart chromium browser throws error loading page error message uncaught typeerror mvalues function line return getvalues arrayfrom mvalues arrayfrom mkeys browser chromium ubuntu problems using firefox", "num": "4804", "d": "10/2015"}, {"title": "router allow di canactivate decorator", "body": "would nice decorator would resolve additional bindings provided instance check want step depends service created could something like aware passed function much help want use anything else beyond", "num": "4802", "d": "10/2015"}, {"title": "hidden attribute nt get updated dart", "body": "next component dart component selector myapp view template ngmodel example directives const formdirectives class app bool true click toggle button hidden however variable correctly changed typescript version works correctly next plunker sample", "num": "4801", "d": "10/2015"}, {"title": "feature comments tutorial pages", "body": "new tutorial pages extremely well written easy follow albeit typos however ran trouble section hero editor suggest add styles omission styles value array rather string shown took quite work sure lots others seen worked would great able add comments tutorial people see error like comment new readers could scroll see solution", "num": "4800", "d": "10/2015"}, {"title": "fire output property even outputs decorated w output", "body": "consider component hero detail hero fullname delete class herodetailcomponent input hero hero output deleted new eventemitter ondelete thisdeletednext thishero bind user clicks delete button inside parent method called twice remove either array decoration parent method called number parent method calls increase one additional decoration maintain number mentions output gt still mean single call parent method", "num": "4798", "d": "10/2015"}, {"title": "cssclasses get confused reload perhaps due commandcompilermergeattributevalue", "body": "alpha added ability reload component via canreuse routerrenavigate end css getting messed specifically two button bars component use css defined icons buttons bars component reloads buttons end wrong css end sharing styles button two icon styles get messed one button bar effect occur think problem might looks like concatenating styles two sources sure reload route away return via back button end three icon styles etc simplified version buttonbar component typescript angular decorators services import component view update rewrote button bar completely longer happens us new design", "num": "4795", "d": "10/2015"}, {"title": "pr proposal animationbuilder add styles animation completes", "body": "tl dr basically want able replace styles added animation completes long version want solve problem animating possible far animate fixed size replace currently piece code memory current working code plnkr repro problem code verbose trying things one animation actually creating two different animations returns new animation came solution would like feedback maybe better option aware proposal plnkr repro custom building see proposal one animation lines less current way clearly important point fact using one animation note styles would nt part animation would added everything completed animations content may dynamic fixed sizes would nt work comment lines add cases see fixed size ca nt see dynamic div nt know specific case opened issue instead sending pr know think", "num": "4794", "d": "10/2015"}, {"title": "using ngif ngfor throws errors", "body": "add element also causing variable set null even though expression returning true trying show element expression returns true show otherwise plunker reproducing issue way", "num": "4792", "d": "10/2015"}, {"title": "ngzone stream future notifies known asynchronous work finished", "body": "discussion pending thanks", "num": "4791", "d": "10/2015"}, {"title": "change detector support short circuiting", "body": "support short circuiting ternary operator working proto dynamic mode todo pr support pregen jit add coalesce support cc vsavkin related", "num": "4790", "d": "10/2015"}, {"title": "documentation error", "body": "section styling heroes styles property backquoted also needs brackets styles", "num": "4787", "d": "10/2015"}, {"title": "jspm loading right source", "body": "hey tried start working project back may wanted upgrade newest alpha release try new stuff every version newer seems break jspm found potentially unhandled rejection error loading scriptsapp found warning nonerror used tried fix systemconfig run problem file extensions used loading routerdevjs hope someone help", "num": "4786", "d": "10/2015"}, {"title": "error docs", "body": "lines read instead running former chrome gave exception original exception", "num": "4785", "d": "10/2015"}, {"title": "gulp error", "body": "get project repository github try run project works first time time automatically disconnects shows following errors sourabh npm run gulp gulpproject gulp gulp using gulpfile starting tslint starting compilets appts error find module componentsnavnav typescript semantic error typescript emit succeeded errors finished tslint finished compilets starting serve finished serve ms starting default finished default \u03bcs throw er unhandled error event error watch nodemodulesgulpnodemodulesgulputilnodemodulesdateformatnodemodulesmeownodemodulesnormalizepackagedatanodemodulesvalidatenpmpackagelicenseindexjs enospc exportserrnoexception fswatcherstart objectfswatch createfswatchinstance setfswatchlistener eventemitternodefshandlerwatchwithnodefs eventemitternodefshandlerhandlefile eventemitter fsreqwraponcomplete npm err linux npm err argv usrlocalbinnode usrlocalbinnpm run gulp npm err node npm err npm npm err code elifecycle npm err gulpproject gulp npm err exit status npm err npm err failed gulpproject gulp script gulp npm err likely problem gulpproject package npm err npm npm err tell author fails system npm err gulp npm err get info via npm err npm owner ls gulpproject npm err likely additional logging output npm err please include following file support request npm err", "num": "4783", "d": "10/2015"}, {"title": "returning false event longer cancels prevent default", "body": "prevent default last statement longer works new compiler", "num": "4782", "d": "10/2015"}, {"title": "broken links warnings api docs", "body": "api docs contain links following terms ca nt resolved probably nt exist appviewmanager compiler componentinstruction connection elementref jsonpbackend locationstrategy ngcontent platformref protoviewref also ambiguous link onchanges exported lifecyclehooks core unbalanced backticks exported lifecyclehooks core invalid errors router render docs please fix asap", "num": "4781", "d": "10/2015"}, {"title": "expose viewresolver extended overridden", "body": "expose viewresolver corelinkerviewresolverts viewresolver accessible ng module please open extend modify behavior override injector directiveresolver available curious viewresolver nt well since provides much function", "num": "4780", "d": "10/2015"}, {"title": "remove leaking roottestcomponent public api", "body": "currently accidentally leak via intentional likely result poor reexporting", "num": "4776", "d": "10/2015"}, {"title": "classes name different libraries trample protochangedetectorfactories", "body": "since protochangedetectorfactories map keys based nonqualified type names vsavkin expects tbosch latest compiler changes fix bug", "num": "4774", "d": "10/2015"}, {"title": "implementation ngfor render dom rows shown", "body": "mobiles performance much better render items need would amazing lists lot rows look implementation ionic collectionrepeat adamdbradley perrygovier mhevery", "num": "4773", "d": "10/2015"}, {"title": "querylist initially called empty list", "body": "seems wrong since nothing changed went empty list empty list expect first changes stream event come least single item found", "num": "4772", "d": "10/2015"}, {"title": "exception given incorrect incomplete stack trace", "body": "stack trace pointing abstractchangedetector pointing somewhere else reproduction case internal bug stacktrace package abstractchangedetectorhydrate package appviewmanagerutilshydrateview package appviewmanagerutilshydrateviewincontainer", "num": "4771", "d": "10/2015"}, {"title": "components created multiple times using ngfortemplate", "body": "using new ngfortemplate use collection rendered components new instances objects created beginning constructor called multiple times let describe problem code see full code plunker appts using list component creating objects setting property value expected rendered constructor listts using ngfortemplate listrowts defining template used ngfor custom content defined component mycustomlistrowts initializing property value value overwritten must rendered mycustomlistrowts defining content used listrow rowid customprop initializing property value value overwritten must rendered results current result expected result tbosch think", "num": "4769", "d": "10/2015"}, {"title": "form input valuechanges fires unexpectedly", "body": "binding form inputs valuechanges observable methods attached elements trigger valuechanges fire unexpectedly reproduction steps type input box observe valuechanges observable logging values expected click button outside form observe observable logging values unexpected cc vsavkin", "num": "4768", "d": "10/2015"}, {"title": "error npm package", "body": "getting npm error use npm download", "num": "4764", "d": "10/2015"}, {"title": "alpha router query param string arrays", "body": "potential bug string results query param value js thisrouternavigate userlist page gt users page actual gt users expected question update duplicate intended complex query params nt supported example js thisrouternavigate userlist filtering name andrew age gt users filtering object actual gt users filtering name andrew amp filtering age expected", "num": "4760", "d": "10/2015"}, {"title": "routing error", "body": "appts import component view coredirectives bootstrap import routeconfig routerdirectives routerbindings import navbarapp componentsnavbarnavbar component selector app routeconfig path navbar component navbarapp navbarcmp view template directives coredirectives routerdirectives class app bootstrap app routerbindings navbarts import component view component selector navbarapp view template hiii export class navbarapp indexhtml angular quickstart", "num": "4759", "d": "10/2015"}, {"title": "ngapp application css media queries working properly", "body": "angularjs app css media query working properly media query defined small screen effecting globally works resize browser inspect element issues browsers like chrome firefox tested browser works remove angularjs media query media minwidth maxwidth colsidebar colcontent large screen browser sidebar shows width global css large screen colsidebar colcontent", "num": "4757", "d": "10/2015"}, {"title": "edge browser disconnects running full unit tests campaign", "body": "found pr edge disconnects executing tests running full unit test campaign investigations showed particular tests causing without good reason executing individually successful tests skipping workaround make campaign complete successfully edge", "num": "4756", "d": "10/2015"}, {"title": "alpha traceurruntime", "body": "heard angular alpha version need use traceurruntime angular alpha version prpgram running perfectly traceurruntime remove traceur error uncaught typeerror arrayfrom function", "num": "4754", "d": "10/2015"}, {"title": "map object android polyfill", "body": "overview issue object used throughout corefacadecollectionts cause one following errors app bootstrap process android errors error source corefacadecollectionts motivation use case ca nt get stack trace see arrayfrommap called seems like may getting called bootstrap process could affect android browsers browsers operating system seems affect android browsers confirmed affects android stock browser chrome nt affect firefox tested android", "num": "4751", "d": "10/2015"}, {"title": "dart transformers depend fact run checked mode", "body": "", "num": "4749", "d": "10/2015"}, {"title": "host bindings execute right view component", "body": "currently execute host bindings right check inputs component correct instead execute right check view component", "num": "4748", "d": "10/2015"}, {"title": "query changes dart streams need closed", "body": "think lifecycle component querying querylist object subscription always exactly release references told enough also close stream releasing simple adding", "num": "4747", "d": "10/2015"}, {"title": "usage changedetectionstrategyonpush", "body": "read article vsavkin change detection angular iam little bit confused usage understood component changed property replaced example result list dimitri laura divs although array nt replaced component selector app changedetection changedetectionstrategyonpush view template class app input names name string name dimitri constructor settimeout gt thismodelspush name laura", "num": "4746", "d": "10/2015"}, {"title": "sketchy blockscoped var export initializers", "body": "break typescript next looks wrong reported vladima", "num": "4742", "d": "10/2015"}, {"title": "update plunker templates", "body": "especially might something else", "num": "4738", "d": "10/2015"}, {"title": "consider switching prefixfoo banana style prefixfoo", "body": "keep making mistake using wrong one time currently results frustrating silent failure mental model databind via oh make twoway biding intuitive currently nt work wanted switch mental model would say eventbind via oh make twoway binding relatively big syntax change agree transitional period work prints deprecation warning compilation", "num": "4737", "d": "10/2015"}, {"title": "error people write two way databinding prefixfoo rather prefixfoo", "body": "write incorrectly nt get warnings errors nothing happens hard debug", "num": "4736", "d": "10/2015"}, {"title": "router default hash location", "body": "build systems webpack push state enabled default definitely cause confusion frustration majority developers especially using live reload mechanism", "num": "4735", "d": "10/2015"}, {"title": "output property throw error plural metadata", "body": "output property throw error plural metadata", "num": "4734", "d": "10/2015"}, {"title": "warn unfulfilled directive dependencies", "body": "set directives collaborate get stuff done eg include one might get poor error messages stuff null example declaring view dependency ngmodel rather formdirectives results would great either warned missing dependency included default much magic maybe throwing error saying please import formdirectives would best", "num": "4733", "d": "10/2015"}, {"title": "css shimming transformers break rules", "body": "eg gets changed", "num": "4730", "d": "10/2015"}, {"title": "hashlocationstrategypath append query params", "body": "url path returns refreshing browser url turns", "num": "4729", "d": "10/2015"}, {"title": "issue double click nested route break router outlet", "body": "firstly soory plunker nt able run code import component provide bootstrap import routeconfig routerdirectives routerproviders routerprimarycomponent component template export class component template export class component template export class component directives routerdirectives template gt routeconfig path component path component export class component selector app viewproviders directives routerdirectives template routeconfig path component path component class app bootstrap app routerproviders provide routerprimarycomponent usevalue app recompile cas see browser simulate problem double click click click get click back everything work click everytime get error used mgechev build problem simulated chrome firefox opera", "num": "4728", "d": "10/2015"}, {"title": "working", "body": "indexhtml appts import component view bootstrap component selector myapp view templateurl apphtml class myapp bootstrap myapp error console get found object definepropertyvalue object definepropertyvalue globalupgradesystemloaderefetch system globalupgradesystemloaderefetch system globalupgradesystemloaderefetch system anonymous function potentially unhandled rejection error loading app found warning nonerror used heard angular alpha need traceure tried remove still working", "num": "4727", "d": "10/2015"}, {"title": "error angularprotractordts", "body": "hi getting error angular alpha upgraded nt know problem since think conflicts exports using visualstudio error get anyone solution commenting line seems like workaround nt feel right", "num": "4725", "d": "10/2015"}, {"title": "longer references jasminedts", "body": "looks like typings npm distribution longer referencing intentional something gone wrong builds", "num": "4723", "d": "10/2015"}, {"title": "", "body": "using npm version node version tried install running npm install throws errors npm err linux npm err argv usrlocalbinnode usrlocalbinnpm install npm err node npm err npm npm err code etarget npm err notarget compatible version found npm err notarget valid install targets npm err notarget npm err notarget npm err notarget likely problem npm npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err please include following file support request npm err", "num": "4722", "d": "10/2015"}, {"title": "set property lastinbinding undefined", "body": "attaching events template throws error eg following template works fine testnamevalue following one throws error moment add event testnamevalue looks like related issue", "num": "4721", "d": "10/2015"}, {"title": "code linted", "body": "something like example worth words", "num": "4719", "d": "10/2015"}, {"title": "asynctestcompleter exported", "body": "longer exported", "num": "4715", "d": "10/2015"}, {"title": "rename roottestcomponent componentfixture", "body": "filing issue discussion juliemr take look simple example unit test ts buildercreateasync testapp roottestcomponent gt let instance roottestcomponentdebugelementcomponentinstance let element roottestcomponentdebugelementnativeelement stuff roottestcomponentdetectchanges assert stuff asyncdone presently distinction hard define calling former component fixture however makes role bit clear cc mhevery", "num": "4711", "d": "10/2015"}, {"title": "expose static data components templates", "body": "need way read static data component template also need way reference static data resolved decorators eg decorator added party module example current workaround plnkr plnkr constructor might related related", "num": "4707", "d": "10/2015"}, {"title": "individual dts files included npm distribution", "body": "release reason nt include modulebymodule dts files alongside corresponding js files likely issue npmpublish script possibly broccoli tree", "num": "4706", "d": "10/2015"}, {"title": "fix internal typescript build step allow nodestyle resolution", "body": "current build process uses classic style module resolution inside broccoli tree prevents usage style imports internally works work prevents leveraging newstyle typings resolution inside build step prevents example using observable subject andor extendinginheriting la eventemitter discussed alexeagle irl", "num": "4704", "d": "10/2015"}, {"title": "node inspector sourcemaps", "body": "problem path source maps cjs node use node inspector problems reading correct sourcemaps path example workaround problem editing generated map file correct ts file path fixed version problem debugging angular server", "num": "4701", "d": "10/2015"}, {"title": "reactlike context", "body": "hello datahandling frameworks extremely usefull got context accessible widget tree example redux current implementation must pass state widgets like common pass everywhere top bottom react problem solved internal context problem solved", "num": "4698", "d": "10/2015"}, {"title": "routersubscribe nt fire using routernavigate", "body": "routersubscribe fires manually navigate different url nt using routernavigate", "num": "4695", "d": "10/2015"}, {"title": "auxiliary routes targeted via url via routerlink", "body": "auxiliary routing example test code navigates view auxiliary routing via url far see seem way navigate view using routerlink looking source code maybe purpose left guessing use feature see also", "num": "4694", "d": "10/2015"}, {"title": "auxiliary routes need proper documentation", "body": "moment clear auxiliary routes used test code contains trivial example leaves us guessing intent feature seems target one component named routerview one configured routeconfig path name name routerview flexibility seems parameters pass component named router view select auxiliary route path get error purpose auxiliary selector path offer possibility passing parameters stands looks view one main ie unnamed routerview several auxiliary ie named routerviews named router views fixed main routerview changed via routing path auxiliary routerview router theory possible use nested views functionality seems exposed least could see trigger could ok leaves us auxiliary views configured via parameter passing could missing something source code designed auxiliary routings different multiple view feature uirouter philosophy uirouter one could change auxiliary views together main view", "num": "4693", "d": "10/2015"}, {"title": "isolate scope specified elements", "body": "hello creating nested directive similar create directives communicate problem nesting scopes would like access outer scope inside foobar however order use way isolate scope select variables case eg reverse isolation specifying variables inherited using wo nt either want keep directive reusable without listing variables needs access outer scope", "num": "4692", "d": "10/2015"}, {"title": "docs tests absent travis", "body": "errors described introduced point nt enforce green travis", "num": "4690", "d": "10/2015"}, {"title": "docs appear editor decorator properties", "body": "example would expect get completion includes description template vs templateurl complete copy arguments type literal position could share interface supertype componentmetadata docs would appear editor also angulario", "num": "4689", "d": "10/2015"}, {"title": "animation extra change detection triggered browserdetails", "body": "constructor calls turn subscribe code executed inside angular zone triggers extra change detection runs something like notice wrapping inside would need injected matsko robertmesserle thoughts", "num": "4688", "d": "10/2015"}, {"title": "transformer crashes pub invalid syntax", "body": "internal issue", "num": "4687", "d": "10/2015"}, {"title": "dispose ngzone", "body": "todo applicationref dispose ngzone server rendering bootstrap application request reuse much providers get away subsequent request moment sure manages something like use keep track calls made bootstrap way render page calls done client", "num": "4685", "d": "10/2015"}, {"title": "chore router rename routeroutlet routerviewport", "body": "called change also introduced concept viewport directives directives allow structural changes dom avoid confusion came new name read discussion viewport directives terminology nt exist anymore directives template reference therefore like propose new name btford wdyt", "num": "4679", "d": "10/2015"}, {"title": "alpha query", "body": "hi guess query lifecycle changed alpha ca nt get querylist neither constructor oninit methods check console plunkr stay awesome tiago braga", "num": "4678", "d": "10/2015"}, {"title": "angular build dart sdk", "body": "next dart sdk release build step buildpubbuilddart fails tries build angular benchmarksexternal angular uses depends packages use dart profiler package removed failure dart analyzer overriding dependency newer analyzer without dart profiler enough think angular changed ship version built sdk", "num": "4677", "d": "10/2015"}, {"title": "min quickstart work", "body": "hey guys tried quickstart worked used try include newer version gt alpha failed seems appjs found locally module loader searchs module registry failed angularjs able resolve myapp component", "num": "4676", "d": "10/2015"}, {"title": "feature request element level bind event behavior", "body": "apologies advance already issue regarding even applicable already implemented proposing method basically abstract arbitrary portion dom sort enclosure applydigest cycles analogues touch parts inside unless element marked requiring update idea behind help performance inside eg ngrepeat dozens even thousands objects iterated application predict given object going change mark model needing change necessitating inspection single attribute instead attributes object bound element far know far react etc work anyway several directives already sort implement behavior notably bindonce notice bit buggy poorly supported suspect common enough use case vital enough performance included core angular", "num": "4674", "d": "10/2015"}, {"title": "scope filter longer watched angular", "body": "changing value scope used angular filter longer trigger update filter u change angular version loaded html work fine change intended regression", "num": "4673", "d": "10/2015"}, {"title": "publish angular next", "body": "hourlynightly build available npm would allow people verify fixes easily head without waiting release give us quicker feedback dogfood users", "num": "4671", "d": "10/2015"}, {"title": "polymer papermenubutton paperdropdownmenu nt work", "body": "hi two elements nt work fine anomalies errors different every browser tested chrome firefox edge app polymer elements angular directives work fine instead thanks", "num": "4670", "d": "10/2015"}, {"title": "quickstart requires users add typescript compiler options hand", "body": "quickstart would awesome installation instructions simply quite get typescript errors editor unless also run another command great could make working installation literally single command easy users run wrong typescript version get error flag nt exist eg tried earlier alpha installed could tell run ignore see feels bit leaky users need know flags required first minutes firsttime user experience polishing microoptimizations worth considering add flag another release users could easily follow older instructions miss already file command fail need edit file instead propose add bit magic script runs command hacking working directory parent piping errors hide typescript installed maybe user plans use file nt created likewise already exists note would still need explain tsconfig exists missing one flags", "num": "4669", "d": "10/2015"}, {"title": "docs decoratorfactory classes users navigate decorator", "body": "example demo start import component immediately show cool navigate definition symbol read documentation guaranteed correct docs version unlike blog post documentation says okay click definition observing probably lives type declared following line find want makes demo kind lame unneeded extra hop likely common jump docs use case also java jokes commence users see everything factory still change reason way mhevery docs nt appear properties like templateurl redeclared separate metadata class link syntax navigable vscode", "num": "4668", "d": "10/2015"}, {"title": "safari undefined errors since", "body": "implementation appears causing issues safari browsers multiple projects seem issues eg basic detailed", "num": "4665", "d": "10/2015"}, {"title": "feat http jsonp jsonp callback", "body": "jsonp question may missing something documentation messing around http jsonp able get http calls working fine attempted api supported jsonp curiosity fell back angular self threw jsoncallback url avail got thinking default callback jsonp requests angular thanks advance", "num": "4663", "d": "10/2015"}, {"title": "router get access router service within canactivate hook", "body": "implementing user authentication example app looking would best approach found order flexible go require authentication specific routes problem point redirect point least navigate desired route hook thought could access class looks possible thus lead post possible access way could new feature", "num": "4661", "d": "10/2015"}, {"title": "support incremental work tests", "body": "switching using bundles longer possible start work iteratively possible fix revert old perfile loading systemjs starting use different target travis", "num": "4659", "d": "10/2015"}, {"title": "properties binding angular", "body": "hi currently trying understand properties binding angular struggling component javascript import component view bootstrap component selector mycomponent properties name view templateurl templatesapphtml class mycomponent name string bootstrap mycomponent view html name page display page nothing add literal name view literal gets displayed test moreover initialize name constructor class works gets displayed trying set property component though html wrong fyi using", "num": "4655", "d": "10/2015"}, {"title": "update typescript version used plunkers", "body": "plunker template uses ts version pulled codeangularjsorg version buggy get upgrade please related", "num": "4653", "d": "10/2015"}, {"title": "ngmodel directive updating host data dart", "body": "next component dart component selector myapp view directives const formdirectives template query text searchquery class appcomponent string searchquery hello onchangemeclicked print searchquery prints old value searchquery change print searchquery prints change new value inputtext updated click inputbutton clicking console appears correctly changes variable inputtext updated also text updated correctly cases clicking input button editing inputtext", "num": "4646", "d": "10/2015"}, {"title": "add tslint check underscore member visibility internal", "body": "needed prevent methods libraryvisibility dart exposed dts files produced typescript compiler", "num": "4645", "d": "10/2015"}, {"title": "upgrade dart transformers pkg use protobuf", "body": "faster smile", "num": "4644", "d": "10/2015"}, {"title": "querylist querychangessubscribe function", "body": "changelog throws see containerts works querychangessubjectsubscribe though sure documentation issue bug", "num": "4635", "d": "10/2015"}, {"title": "rx observablenext trigger callback registered subscribe", "body": "unit tests seem fail latest releases created class fetches svg element caches returns rx observable js import eventemitter import http response import animation animation let cache map new map export class iconstore queue map new map private http constructor http thishttp get url string let iconstore let subject eventemitter new eventemitter subject subjecttorx cachehas url delay next tick subject returned otherwise subscriber notified next tick called return todo make sure happens promise returned animationraf function subjectnext cacheget url clonenode true else let pending boolean thisqueuehas url pending thisqueueset url let subs thisqueueget url pending subspush subject else subspush subject thishttp get url map response gt svg response subscribe element gt cacheset url element subsforeach sub gt subnext elementclonenode true thatqueuedelete url return subject function svg response response node let parser domparser new domparser let doc document parserparsefromstring responsetext imagesvgxml let svg docqueryselector svg return svgclonenode true small unitintegration test js import asynctestcompleter aftereach beforeeach describe expect inject spyobject import injector bind import mockbackend mockconnection connectionbackend baserequestoptions responseoptions response http import iconstore icon const svgglyphhtml const fakeurl glyphsvg export function main describe iconstore gt let injector injector let store iconstore let backend mockbackend let glyph node let response class backendconnectionspy extends spyobject onestablish constructor super thisonestablish thisspy onestablish function createglyphnode node let container documentcreateelement div containerinnerhtml svgglyphhtml return containerfirstchildclonenode true seems like tests callback registered subscription never get triggered tried debug confirm code reached works reaches seems triggered anything failing tests seen source code located pointers happening maybe missed something misunderstood things work", "num": "4634", "d": "10/2015"}, {"title": "componentrouter templateurl lifecycle hook angular", "body": "application angular use property template directive onactivate works fine use property templateurl onactivate nt work template displayed fine exemple javascript angular module test directive testcomponent q function q return templateurl templatepath onactivate nt work template hello onactivate works controlleras ctrl controller q test function test q consolelog controller testprototype onactivate function consolelog onactivate bug", "num": "4633", "d": "10/2015"}, {"title": "postdata options set header", "body": "nt add content type header header remains textplain", "num": "4632", "d": "10/2015"}, {"title": "problem ngcontent within ngfor", "body": "component within one rendered component content listts component using list component appts see code problem maybe tbosch see problem", "num": "4631", "d": "10/2015"}, {"title": "router outlet contents disposed component throws exception", "body": "came across issue due leaving binding component component throws exception loaded component contents displayed go another route contents component threw exception still left behind navigate back forth home routes plunk reproduce based alpha", "num": "4630", "d": "10/2015"}, {"title": "shadow css import firefox", "body": "due trick transform css string rules fails firefox import rule see currently trycatch avoid error means rules lost transformationthe new test introduced yjbanov check import rules modified succeed firefox", "num": "4628", "d": "10/2015"}, {"title": "binding radio button form using angular", "body": "hi bind radio button using best regards", "num": "4627", "d": "10/2015"}, {"title": "componentrouter use canactivate angular application", "body": "use canactivate method componentrouter angular application", "num": "4626", "d": "10/2015"}, {"title": "feat router links without leading slash", "body": "matsko igorminar talked past currently require first element start either apps one level routing distinction routing child routing sibling irrelevant nice omit leading change behavior generating instruction subsequent link match link dsl array leading follows look child route named look sibling route named exist throw error explaining developer must provide leading link unambiguous otherwise one exists use resolved instruction neither route matches throw error telling developer help address developer confusion wrt routes come hackathons", "num": "4623", "d": "10/2015"}, {"title": "refactor router rename name routeconfig", "body": "john papa proposes rename reduce confusion purpose would become cc johnpapa", "num": "4622", "d": "10/2015"}, {"title": "ca nt add event listener output binding without body", "body": "example nt work html mynamevalue works perfectly well html mynamevalue see plunker stackoverflow question", "num": "4615", "d": "10/2015"}, {"title": "angular material", "body": "jelbourn sorry open thread couple questions date expect start using angular material since ready recomend framework need keep things going ready change angular material regarding mdinputcontainer directive choose way avoid retargeting events ids validation thing need build wrapper around ng material want like experts mdinput access container host call function could nt query parent also seems bit less intrusive thank stay awesome tiago braga", "num": "4612", "d": "10/2015"}, {"title": "custom events fired twice", "body": "plnkr", "num": "4611", "d": "10/2015"}, {"title": "colspan recognized native element tdth table elements", "body": "need bind colspan td element unfortunately working templatehtml error way add native properties elements", "num": "4610", "d": "10/2015"}, {"title": "systemjs loading well dependencies alpha cdn", "body": "html angular quickstart html body height systemconfig packages defaultextension js systemimport app html angular quickstart systemconfig packages defaultextension js html body height systemimport app", "num": "4608", "d": "10/2015"}, {"title": "attribute decorator able use parameter name name property", "body": "right specify attribute name parameter attribute decorator would interesting able specify attribute name directly naming correctly corresponding parameter order avoid duplicates code example think", "num": "4607", "d": "10/2015"}, {"title": "feature hot reload support", "body": "hey guys right playing react webpack found hotreload feature extremely powerful developing apps edit html dom preserve js variables architecture support hope adapt feature", "num": "4606", "d": "10/2015"}, {"title": "pipes chaining pipe slice", "body": "chaining pipe broken see quick repro", "num": "4605", "d": "10/2015"}, {"title": "implement zonescheduler observable eventemitter integration", "body": "background see insightful useful comment initial thoughts could provide nice performance testability boosts observable things run outside zone trigger ui updates things like async pipe would provide easy way hook appropriate zone internal implementation observableeventemitter would provide nice place implement additionally could possibly leverage virtual scheduler tests fine grained control cc jeffbcross vsavkin jeffbcross could use brainpower", "num": "4603", "d": "10/2015"}, {"title": "conditional ternary operator shortcircuited template expressions", "body": "expressions template branches conditional ternary operator evaluated therefore expression like executed simple plunk demonstrating issue", "num": "4599", "d": "10/2015"}, {"title": "content projection prioritize ngcontent projection selector specifity", "body": "eg would first find nodes fit selector would use remaining nodes filter ones match selector nodes nt match selector would go without selector projection independent order elements", "num": "4598", "d": "10/2015"}, {"title": "clangformat understand regexps", "body": "demands formatted", "num": "4596", "d": "10/2015"}, {"title": "min quickstart javascript documentation shows typescript code", "body": "shows typescript tutorial show javascript tutorial", "num": "4595", "d": "10/2015"}, {"title": "proposal directive receive events fired", "body": "eg export class checkbox output change eventemitter new eventemitter hostlistener change eventtargetvalue onchange event", "num": "4593", "d": "10/2015"}, {"title": "build support serving examples without full", "body": "since targets nt work unless manual done prevents incremental development examples makes debugging errors extremely hard", "num": "4591", "d": "10/2015"}, {"title": "add test testtransformintegration transforming deferred libraries", "body": "", "num": "4590", "d": "10/2015"}, {"title": "fix async pipe works http proper observables", "body": "http returns observables proper async pipe nt work fixed work either proper observables abstraction eventemitter refactor complete", "num": "4588", "d": "10/2015"}, {"title": "deferred import causes incomplete ngdepsdart", "body": "", "num": "4587", "d": "10/2015"}, {"title": "wrong transpilation type specified input", "body": "consider following code gets transpiled add type works nicely typescript input myprop string lt missing type transpiles decorate prop metadata design type string yay myclassprototype myprop nt first case fallback default type ca nt reproduce plnkr ca nt see transpiled code plnkr get pointing", "num": "4585", "d": "10/2015"}, {"title": "classes added original element removed host class property", "body": "code css class added original element removed directive property directive selector myitem host class item export class myitem component selector myapp view template directives myitem export class app remove yellow css class element remove yellow css class element", "num": "4583", "d": "10/2015"}, {"title": "ngcontent projection working selects", "body": "example third selects finding children attribute export class myitem component selector myapp view template left right directives myitem export class app working working", "num": "4582", "d": "10/2015"}, {"title": "unable create dynamic anchornames dynamiccomponentloaderloadintolocation", "body": "need create unique anchornames ngfor loop use dynamiccomponentloaderloadintolocation litte example see resulting html look something like could load dynamic content dynamiccomponentloaderloadintolocation table element problem mustache get replaced way create anchors provide dynamiccomponentloader something else anchor see stackoverflow question", "num": "4581", "d": "10/2015"}, {"title": "add support observe watch variable property", "body": "something like onchanges nt works works props eventemitter return rxobservable returns first watchobserve variable vicb mhevery", "num": "4576", "d": "10/2015"}, {"title": "code font weight documentation", "body": "hello find font used code samples angulario really hard read problem comes bold style remove class becomes much readable ex following page try changing code style dev tools chance could consider style update", "num": "4574", "d": "10/2015"}, {"title": "test text bindings bound elements anymore", "body": "new compiler introduced elements simple text binding like bound element anymore writing tests means nt appear leads write less readable tests relying something like tests less readable fragile plan fix improve", "num": "4573", "d": "10/2015"}, {"title": "add helper testlib", "body": "problem currently using test injector async test wordy unintuitive js import inject asynctestcompleter stuff inject classa classb asynctestcompleter b async gt asyncdone split code path anyway async notasync let make explicit js import injectasync stuff injectasync classa classb b done gt done could deprecate asynctestcompleter separately nt want two ways thing thoughts cc wardbell see version cc vicb thoughts", "num": "4572", "d": "10/2015"}, {"title": "getting started tutorial missing npm install traceur step", "body": "hi going step given updated getting started page launch liveserver opensrc browser could nt load page nt find traceurruntimejs file think npm install package command given tutorial missing traceur package currently think like correct wrong thanks balram", "num": "4571", "d": "10/2015"}, {"title": "error message excessively long missing builtin directives", "body": "missing example throws note message long depending html structure print entire tree error message represents piece code error much shorter repro repro ps ngfor ngif empty error message intended", "num": "4569", "d": "10/2015"}, {"title": "types property directives incompatible using routerlink routeroutlet", "body": "started seeing issue compiling new typing files specifically get error adding routerlink routeroutlet directives array seems miss match types expected directives array something related directive definitions change anything special populating array injected directives also change typings compiles fine using typescript tsc watch commonjs emitdecoratormetadata experimentaldecorators jsx react appts link code error message error argument type templateurl string directives injectablereference assignable parameter type templateurl string template string directives type pipes type types property directives incompatible type injectablereference assignable type type type injectablereference assignable type type type injectablereference assignable type message compilation complete watching file changes", "num": "4564", "d": "10/2015"}, {"title": "run dart tests ff ie etc saucelabs", "body": "", "num": "4562", "d": "10/2015"}, {"title": "support using transformers dartium checked mode", "body": "currently fail implemented thrown transformed code dartium running checked mode transformer decides whether generate nochange checks separately dartium instead always generate checking code guarded way tree shake checks production assertions behave consistently following checked mode option dartium", "num": "4560", "d": "10/2015"}, {"title": "dart transformer url resolver handle import statements stylesheets", "body": "dart transformer fails stylesheet contains statement alpha project layout maincss import url error build error transform stylesheetcompiler threw error invalid argument absoluteuri unsupported uri scheme encountered instance uri package transformerurlresolvertoassetscheme package transformerurlresolverresolve package extracturls", "num": "4559", "d": "10/2015"}, {"title": "angular exceptionbinding swallows exceptions", "body": "reason exceptionbinding default exceptionhandler swallow exceptions instead rethrowing certainly leads unexpected hard diagnose behaviour minimalistic sample demonstrates surprising behaviour default causes please see example", "num": "4558", "d": "10/2015"}, {"title": "support keypressescape style event bindings", "body": "would cool support keyboard event bindings style html misko idea ago issue tracking", "num": "4557", "d": "10/2015"}, {"title": "incorrect viewcontainerref injected w nested components", "body": "appears viewcontainerref getting wrong references components nested tried come plnkrs show nested components injecting wrong viewcontainerref examples printing native element tag name show component referencing wrong one inject correct ref injects correct ref", "num": "4551", "d": "10/2015"}, {"title": "refactor linker move common functions util file", "body": "duplicate declarations instance case gets merged nice extract separate file include wherever required makes sense take one", "num": "4549", "d": "10/2015"}, {"title": "angular", "body": "npm install working throws error npm err reactivex npm registry npm err bug author publish npm err npm err note also install npm err tarball folder http url git url npm err system linux npm err command usrbinnodejs usrbinnpm install npm err cwd homeshatakshidocumentsa npm err node v npm err npm v npm err code npm http npm err npm err additional logging details found npm err homeshatakshidocumentsanpmdebuglog npm err ok code", "num": "4546", "d": "10/2015"}, {"title": "add support router handle components attribute parameter consturctor", "body": "hi following component implementation import component view import attribute component selector thisselector view templateurl thistemplateurl export class basecomponent selector string templateurl string would like assign route component routeconfig need give values constructor parameters", "num": "4545", "d": "10/2015"}, {"title": "include rxjs operators angular", "body": "wanted open issue track since discussed today nt think came conclusions unsure issue tracked issue hand include rxjs operators dependency without greatly increasing size librarytotal required download probably break solutions ideas shortterm ideas longterm cc jeffbcross vsavkin igorminar mhevery", "num": "4543", "d": "10/2015"}, {"title": "navigate back iteration", "body": "protractor tool new could please help following iterate browsernavigate back page automate need click links home page go back home page click remaining links time derived like following homepagehomegmenuitemclick homepagereferenceclick browsernavigate back homepagemachineclick browsernavigate back homepageconnectivityclick browsernavigate back homepage var declared page objects thanks", "num": "4541", "d": "10/2015"}, {"title": "test injector default mock compiler xhr service", "body": "want test component external templates need reach angular privates override xhr provider nee di binding import xhr import xhrimpl beforeeachbindings gt return bind xhr toclass xhrimpl default useful testing angular compiler testing angular applications change default xhr service mocked angular core suite override provider mock cc wardbell johnpapa", "num": "4539", "d": "10/2015"}, {"title": "error injecting elementref", "body": "get error trying inject elementref used work previous versions wondering api changed get following error exception resolve parameters jqueryintegration make sure valid type annotations null exception resolve parameters jqueryintegration make sure valid type annotations null browserdomadapterlogerror anonymous function anonymous function original exception resolve parameters jqueryintegration make sure valid type annotations sample code bellow import component view elementref declare var jquery component selector jqueryintegration view templateurl componentsjqueryintegrationjqueryintegrationhtml export class jqueryintegration elementref elementref", "num": "4538", "d": "10/2015"}, {"title": "ditransformer factories support features constructors", "body": "theory work fine dart const domservicebindings const const binding domservice tofactory createdomserviceifneeded deps const domservice injectable domservice createdomserviceifneeded optional skipself domservice domservice domservice null domservice domservice return domservice however results cyclical dependency talking vsavkin noted likely transformer recording annotations factory functions internal issue", "num": "4536", "d": "10/2015"}, {"title": "allow multiple callback overrides ngzone", "body": "angular seems allow one override onturnstart oneventdone ngzone testability api overriding callbacks internal stuff see also overrides however due mentioned limitation last registration actually successful earlier registrations silently ignored problem webdriver latency tests testability api looses race never able tell tests angular app stable test time waiting testability api tell us app stable never happen due broken callback registration bug internally tracked", "num": "4535", "d": "10/2015"}, {"title": "routerlink add class routerlink html", "body": "given following template assign class active route added element style inactive router links add class element currently css propose add router link elements additionally add active one way could cc btford", "num": "4532", "d": "10/2015"}, {"title": "polymer zone error alpha", "body": "upgrading alpha seems polymer longer wants play nice really sure root source error best supply plunkr worked alpha breaks working error", "num": "4531", "d": "10/2015"}, {"title": "test roottestcomponent longer extends debugelement", "body": "previously unit tests could use longer attribute test must written thing accessing already bit verbose bit unreadable nt think also mentioned changelog breaking change maybe", "num": "4528", "d": "10/2015"}, {"title": "unexpected token illegal trying run npm install", "body": "fresh clone angular npm install angular preinstall tmpangular node toolsnpmchecknodemodules purge npm dependencies stale unknown state purging npm warn prefer global marked installed g npm warn prefer global karmacli installed g npm warn peerdependencies peer dependency dgeni included dgenipackages npm warn peerdependencies longer automatically installed fulfill peerdependency npm warn peerdependencies npm application need depend explicitly npm warn prefer global jsbeautify installed g npm warn engine joiassert wanted node lt current node npm npm warn peerdependencies peer dependency ministyle included minitable npm warn peerdependencies longer automatically installed fulfill peerdependency npm warn peerdependencies npm application need depend explicitly npm warn engine hawk wanted node current node npm npm warn engine cryptiles wanted node current node npm npm warn engine sntp wanted node current node npm npm warn engine boom wanted node current node npm npm warn engine hoek wanted node current node npm npm warn engine hawk wanted node current node npm npm warn installmany tapconsumer bundled tap bundled package nt found unpacked tree npm warn engine cryptiles wanted node current node npm npm warn engine sntp wanted node current node npm npm warn engine hoek wanted node current node npm npm warn engine boom wanted node current node npm sauceconnectlauncher postinstall tmpangularnodemoduleskarmasaucelaunchernodemodulessauceconnectlauncher node scriptsinstalljs spawnsync postinstall tmpangularnodemodulesgulpsassnodemodulesnodesassnodemodulescrossspawnnodemodulesspawnsync node postinstall install nodegyp rebuild make entering directory bufferutil install tmpangularnodemoduleskarmanodemodulessocketionodemodulesengineionodemoduleswsnodemodulesbufferutil nodegyp rebuild make entering directory tmpangularnodemoduleskarmanodemodulessocketionodemodulesengineionodemoduleswsnodemodulesbufferutilbuild install nodegyp rebuild make entering directory npm warn optional dep failed continuing fsevents bufferutil install tmpangularnodemoduleskarmanodemodulessocketionodemodulessocketioclientnodemodulesengineioclientnodemoduleswsnodemodulesbufferutil nodegyp rebuild make entering directory tmpangularnodemoduleskarmanodemodulessocketionodemodulessocketioclientnodemodulesengineioclientnodemoduleswsnodemodulesbufferutilbuild npm warn prefer global tsd installed g nodesass install tmpangularnodemodulesgulpsassnodemodulesnodesass node scriptsinstalljs binary downloaded installed npm warn prefer global bower installed g nodesass postinstall tmpangularnodemodulesgulpsassnodemodulesnodesass node scriptsbuildjs exists testing binary binary fine exiting angular postinstall tmpangular node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config modulesupgradetsdjson updating selenium standalone downloading updating chromedriver downloading downloaded downloaded bower polymer notcached git githubcomdartlangpolymerjsgit bower polymer resolve git githubcomdartlangpolymerjsgit bower polymer checkout bower polymer invalidmeta polymer missing main entry bowerjson bower polymer invalidmeta polymer missing ignore entry bowerjson bower polymer resolved git githubcomdartlangpolymerjsgit bower polymer install polymer polymer bowercomponentspolymer var travisfoldend travisfoldstart syntaxerror unexpected token illegal exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs npm err linux npm err argv node install npm err node npm err npm npm err code elifecycle npm err angular postinstall npm err exit status npm err npm err failed angular postinstall script node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config modulesupgradetsdjson npm err likely problem angular package npm err npm npm err tell author fails system npm err node toolsnpmcopynpmshrinkwrap amp amp node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall overwrite clean config amp amp tsd reinstall overwrite clean config toolstsdjson amp amp tsd reinstall overwrite config modulesupgradetsdjson npm err get info via npm err npm owner ls angular npm err likely additional logging output npm err please include following file support request npm err tmpangularnpmdebuglog", "num": "4527", "d": "10/2015"}, {"title": "gulp testunitjs failing windows error emfile many open files", "body": "issue appeared update node npm karma etc upgrading node npm clean running raises following error different machines windows windows running raises note working fine", "num": "4525", "d": "10/2015"}, {"title": "property bindings text interpolations get mixed using components light dom components", "body": "eg component selector acomp view template class acomp component selector bcomp view template class bcomp component selector main view template directives acomp bcomp class main display text instead", "num": "4522", "d": "10/2015"}, {"title": "returning observable eventemitter", "body": "looks like got problem eventemitters either missing something plnkr situation basically ca nt return observable anymore using see change return observable though nt feel right anyone word still using eventemitter kind situation switch rx observables full code js import component view eventemitter oninit bootstrap class somethingservice ee eventemitter new eventemitter firestuff settimeout gt thiseenext fire component selector hello viewbindings somethingservice view template export class hello implements oninit f string constructor private ss somethingservice oninit consolelog hello init fire thisf loading bootstrap hello old issue cc ericmartinezr robwormald pkozlowskiopensource", "num": "4521", "d": "10/2015"}, {"title": "retire magic rewriting privateconstructorclass interface", "body": "part want use typescript compiler outputs distribute typings users magic dgeni rewriting classeswhichshouldnotbeconstructed represented interfaces ca nt retained anyway satisfy dart users classes still appear instantiatable instead create abstract superclasses types constructor classes take name documentation existing class concrete implementation needs name great choice propose eg note talked mhevery one concern new classes bloat codesize checked current minified bundle becomes classes could potentially optimized", "num": "4518", "d": "10/2015"}, {"title": "version npm package missing rxjs", "body": "nt know right place post bug please let know ise nt failing install latest package npm npm err found npm err npm err reactivexrxjs npm registry npm err bug author publish npm err specified dependency npm err npm err note also install npm err tarball folder http url git url npm err system windowsnt npm err command c program files microsoft visual studio toolsexternalnodenode c program files microsoft visual studio toolsexternalnpmnodemodulesnpmbinnpmclijs install npm err cwd c npm err node v npm err npm v npm err code", "num": "4516", "d": "10/2015"}, {"title": "using attrbute ts throws error compilation", "body": "looks like use class constructor causes ts compiler throw semantic error", "num": "4515", "d": "10/2015"}, {"title": "change detector throws exception triggering next instance eventemitter", "body": "create custom checkbox component js import inject input output hostbinding hostlistener eventemitter component view self attribute viewencapsulation controlvalueaccessor checkboxcontrolvalueaccessor ngcontrol opaquetoken forwardref binding renderer elementref import ispresent isnativeshadowdomsupported commonlang import keycodes commonkeycodes import icon iconicon const ngvalueaccessor opaquetoken new opaquetoken ngvalueaccessor const checkboxvalueaccessor new binding ngvalueaccessor toalias forwardref gt checkbox multi true component selector checkbox ngcontrol checkbox ngformcontrol checkbox ngmodel bindings checkboxvalueaccessor inputs disabled view encapsulation isnativeshadowdomsupported viewencapsulationnative viewencapsulationemulated emulated native none default encapsulation viewencapsulationemulated emulated native none default templateurl appcomponentscheckboxcheckboxhtml styleurls appcomponentscheckboxcheckboxcss directives icon export class checkbox implements controlvalueaccessor input checked checked boolean false output change eventemitter new eventemitter html used looks like made update latest alpha version keep getting exception thrown whenever try clickkeydown checkbox stacktrace", "num": "4514", "d": "10/2015"}, {"title": "encapsulation viewencapsulationnative view breaks styles appended", "body": "transitioning latest alpha version noticed use views tags get appended wrong places actually style tag gets duplicated shadow root works fine", "num": "4513", "d": "10/2015"}, {"title": "testing library name used inconsistently", "body": "declares module registers module unify jeffbcross thought settled final name big package rename nt case", "num": "4512", "d": "10/2015"}, {"title": "better hostlistener support observable", "body": "way get sugar events observables eg typescript import component view directive output eventemitter hostlistener import dom import elementref directive selector draggable export class draggable mouseup new eventemitter mousemove new eventemitter mousedown new eventemitter mousedrag hostlistener mouseup event onmouseup event thismouseupnext event hostlistener mousedown event onmousedown event thismousedownnext event hostlistener mousemove event onmousemove event thismousemovenext event constructor public element elementref oninit thismousedragsubscribe next pos gt update position thiselementnativeelementstyletop postop px thiselementnativeelementstyleleft posleft px component selector app view needed order tell angular compiler template directives draggable styles template draggable div export class app constructor", "num": "4511", "d": "10/2015"}, {"title": "use websocket transport travis sauce", "body": "sauce connect supports web sockets requires special settings advantage using web sockets usually stable connection lower latency already use web sockets test zonejs hopefully wo nt hard replicate setup zonejs pr", "num": "4510", "d": "10/2015"}, {"title": "compile browsertree type checking", "body": "vsavkin accidentally turned type checking noncjs tree turning back fails reason wellknown documented jquery selenium define runtime variable global scope named typings files define symbol benefit typechecker different types right solution compile separately testing code depends protractor nontrivial change build", "num": "4507", "d": "10/2015"}, {"title": "svg elements rendering incorrectly", "body": "svg elements inside templates visible see browser recognizing svg element works breaks import bootstrap bind component view component selector appcmp view template class app constructor bootstrap app", "num": "4506", "d": "10/2015"}, {"title": "stack trace transformer importing angulardart ng", "body": "one dart files tried changing statement fixing references get build error build error transform templatecompiler minimllibsrcplaygroundappngdepsdart threw error invalid argument dart corepatchregexppatchdart jssyntaxregexpallmatches package regexpwrappermatcher package cssselectorparse package directiveparserdirectiveparser package compilestepfactorycreatesteps package templateextractorextracttemplates dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfuturedart futurewait dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfutureimpldart futureasynccomplete dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart microtaskloopentry dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage dart core jssyntaxregexpallmatches package regexpwrappermatcher package cssselectorparse package directiveparserdirectiveparser package compilestepfactorycreatesteps package templateextractorextracttemplates", "num": "4505", "d": "10/2015"}, {"title": "interpolation routertemplates working systemjs", "body": "simple application router router currently pages pages consist simple binding problem whole object containing binding empty router loads page becomes intressting thing hereby issue occures use systemjs load soon add tag pointing bindings working link repository", "num": "4504", "d": "10/2015"}, {"title": "route typing compiling type ngtype", "body": "updating routing code reflect latest angular source example however noticed router typings nt compile work around tweak component part ngtype class route implements routedefinition", "num": "4500", "d": "10/2015"}, {"title": "ngnonbindable longer working standalone injection", "body": "noticed injecting ngnonbindable longer works include individual directive get following error error unexpected directive value undefined view component ignorebindings new baseexception runtimemetadataresolvergetviewdirectivesmetadata runtimecommandfactorycomponenttemplatefactory runtimecommandfactorycreatebegincomponent commandbuildervisitorvisitelement elementastvisit arrayforeach native objecttemplatevisitall commandbuildervisitorvisitelement however works include part coredirectives ngnonbindable deprecated standalone directive basically", "num": "4499", "d": "10/2015"}, {"title": "need inject inject elementref dynamiccomponentloader", "body": "di works fine needs", "num": "4497", "d": "10/2015"}, {"title": "actual type querylistchanges eventemitter", "body": "changelog jsdoc querylist misleading method", "num": "4496", "d": "10/2015"}, {"title": "several bundle size problems noncore bundles", "body": "several issues noncore bundles publish npm using bundle arithmetic means bundle parts core optional bundles mostly visible http bundle pulling fact bigger noncore bundle import nonpublic apis ex router makes pretty hard impossible move cjs bundles would nt bundle core cc jeffbcross rkirov", "num": "4495", "d": "10/2015"}, {"title": "viewencapsulationemulated longer default", "body": "updated components seemingly rendered behaviour manually setting component encapsulation restores previous behaviour going source longer seems code make default particular line formerly block code seems moved longer present block code might red herring seem remaining references strict comparisons without faculty fallback", "num": "4494", "d": "10/2015"}, {"title": "published", "body": "available useful plunkers like jeffbcross sth went wrong release process maybe part automated yet", "num": "4493", "d": "10/2015"}, {"title": "router navigate throws exception component route config alpha", "body": "tried alpha found minor things one confusing router use latter accepts string old style works former accepts tuple tosses error detail thisselectedheroid work thisrouternavigate id thisselectedheroid error see example cc btford", "num": "4490", "d": "10/2015"}, {"title": "missing forwardref viewchildviewchildren throw", "body": "follow updating issue still reproducible added issue returns null instead directives forwardref gt child class parent implements afterviewinit length viewchildren forwardref gt child children querylist length viewchildren child children querylist returns child viewchild forwardref gt child child child returns null viewchild child child child afterviewinit consolelog thischild consolelog thischildren component selector child view template child class child assume contentchildcontentchildren works way viewchildviewchildren nt test issue repro", "num": "4489", "d": "10/2015"}, {"title": "error caught attempt detect changes dehydrated detector common amp difficult debug", "body": "cf internal bug id", "num": "4486", "d": "10/2015"}, {"title": "core better errors malformed bindings", "body": "consider opposed closing square bracket wrong place right silently fails", "num": "4485", "d": "10/2015"}, {"title": "remove stringmap", "body": "discussed mhevery stringmap one strange type use angular code without importing provide users sidechannel listing directly dgeni template never reexport library also unconstrained every object stringmap subject numerous discussions vsavkin tbosch among others part reason exists satisfy dart users translate part effort deliver typings directly compiler users see propose remove stringmap public api use proper ts type first change change nt affect dart output", "num": "4483", "d": "10/2015"}, {"title": "transformer handle const instance annotations properties", "body": "example registers annotation rather", "num": "4481", "d": "10/2015"}, {"title": "fix docs add support type aliases doc generation process", "body": "documenting couple type aliases jade output parsing correctly therefore causing errors serving locally angulario sha problems become obvious add code samples jade tries parse sample indentations jade statements comments sample code followed source code jade output jade requestoptionsargs type alias exported defined line interface options construct object based requestinit fetch spec example live demo pre class prettyprint linenums code import requestoptionsargs change interface output fine plocationbadge exported defined line markdown interface options construct object based requestinit fetch spec example live demo import requestoptionsargs cc petebacondarwin", "num": "4480", "d": "10/2015"}, {"title": "view caching leads unexpected reuse stateful elements eg", "body": "see plunker example creates destroys views underlying iterable changes views contain stateful element like rehydrated state remains unchanged example user enters text element element removed new view requested adding perhaps view cache deliver old element old input instead", "num": "4478", "d": "10/2015"}, {"title": "make angular dart work ie", "body": "getting critical many customers", "num": "4476", "d": "10/2015"}, {"title": "develop angular improvement process", "body": "far leaning upon learnings previous versions angular drive feature development angular sort knew wanted however slowly exhausting body knowledge prepare take framework beyond simply improving old stuff accept proposals improve based angular usage growing quickly state web new usage patterns end propose introduce angular improvement process process would document clear path crazy idea accepted proposal prototype finally implementation core framework process would mimic similar processes python pep dart dep java jcp", "num": "4475", "d": "10/2015"}, {"title": "missing eventemitter produces tricky message", "body": "produces error error hard understand since clear issue", "num": "4473", "d": "10/2015"}, {"title": "refactor convert connection interface observable response", "body": "recapping discussion blesh probably correct current state right connection interface implemented simple interface calls http service return observable end users nt really interact interface much application code tests however users working instances created mockbackend order create mock responses requests note mock responding mechanism improved outside scope proposal proposal change observable keep property intact blesh says aint bad add properties observables though adding methods bad idea observable methods expected operators extend subject ed change actually pretty minor enduser perspective change calling rather current internally reduces cruft simplifies logic cc robwormald", "num": "4472", "d": "10/2015"}, {"title": "invalid nested binding amp error message", "body": "consider following template spot typo tittle error message would", "num": "4471", "d": "10/2015"}, {"title": "invalid binding error message amp input vs property", "body": "template contains ie directive added view ng generate following errors first error probably read input hellocomp bind either input ie property ie call input instead property plans may also use check inputproperty exists using method place decide whether use input property", "num": "4469", "d": "10/2015"}, {"title": "dart dev breaks build", "body": "last dev version good test run", "num": "4467", "d": "10/2015"}, {"title": "doc errors introduced recent compilerview api doc changes", "body": "new issue docs seems related recent set compilerview api changes links nt target igor please review fix reproduce errors plus others related changes command gulpdocsangulario", "num": "4464", "d": "10/2015"}, {"title": "doc errors introduced recent bootstrap api changes", "body": "two issues docs seem related latest set bootstrap api changes links nt target alex please review fix reproduce errors plus others related changes command gulpdocsangulario", "num": "4463", "d": "10/2015"}, {"title": "doc errors introduced recent di change detection changes", "body": "bunch issues docs seem related latest set di change detection changes links nt target victor please review fix reproduce errors plus others related changes command", "num": "4462", "d": "10/2015"}, {"title": "ngform disable validation control disabled", "body": "think ngcontrol validators disabled control disabled example control disabled property could change depending value control also need functionality disableenable validity ngcontrol", "num": "4460", "d": "10/2015"}, {"title": "dart extending lifecycle class like register hook", "body": "easy mistakenly write instead currently wo nt call hook first case", "num": "4457", "d": "10/2015"}, {"title": "feat router binding routeroutlet child component", "body": "example able pass binding", "num": "4452", "d": "10/2015"}, {"title": "bug dialog angularjs", "body": "built module manage loading templates modal bootstrap upgrading version angularjs close modal open simulation open console browser click open modal button opened perfectly island writing element scored open close modal try open see longer displayed note console writing element different first time opened note change version angularjs see problem happen", "num": "4448", "d": "10/2015"}, {"title": "extending dom elements", "body": "hi possible extend dom elements angular way use like thanks advance tiago braga", "num": "4446", "d": "10/2015"}, {"title": "bug date pipe throws reference error safari", "body": "issue appears related dateformatter intl service", "num": "4445", "d": "10/2015"}, {"title": "main app components constructor oninit method runs multiple time", "body": "following code execution following initialize restmanager routermanager skins sets variables constructor oninit mehtod oninit invokes var promise thisrestmanagergetsitemapconfiguration inside method returns promise pending status next line promisethen data gt thisroutermanagerconfigurerootrouter data yet ready invoked whole oninit method starts reexecute beginning log get following exceptions course route config provided success promise promisethen data gt thisroutermanagerconfigurerootrouter data", "num": "4444", "d": "10/2015"}, {"title": "include settimeout eventemitter onerror oncomplete", "body": "summary also resolve onerror oncomplete asynchronously onerror oncomplete problem server running problem eventemitter oncomplete called onnext typescript export class eventemitter extends observable subject new subject observer generator return thissubjectsubscribe value gt settimeout gt generatornext value error gt generatorthrow generatorthrow error null gt generatorreturn generatorreturn null torx return next value thissubjectnext value throw error thissubjecterror error return value thissubjectcomplete typescript export class eventemitter extends observable subject new subject observer generator return thissubjectsubscribe value gt settimeout gt generatornext value error gt generatorthrow settimeout gt generatorthrow error null gt generatorreturn settimeout gt generatorreturn null torx return next value thissubjectnext value throw error thissubjecterror error return value thissubjectcomplete current workaround include backgroundwhy far know added order zonejs pick changes problem resolves first without change since push event loop dispose logic callback whatever obj working may work callback example wrap callbacks work expected proposal find better way notify zonejs include callbacks", "num": "4443", "d": "10/2015"}, {"title": "tmp directory cleaned correctly", "body": "several us noticed directory keeps growing time spite gulp task runs gulp exit seems cleans stuff correctly exiting leaves files behind tmp folder", "num": "4441", "d": "10/2015"}, {"body": "derp angular question disregard previous link point still stands though try keep github issues verified issues try gitter support requests read thru integration spec", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "hey ocombe use socketio nt use events directly manipulate incoming data pass subject subscribe know asking able register kind events could nt say nothing surely help", "d": "10/2015"}, {"body": "ahh using observables great idea try thanks", "d": "10/2015"}, {"body": "ok found simpler way wrap callback complex possibility use ngzone made simple socketservice call needed nt use zonebind time js export class socketservice static socket io nt close issue case socketio events something want fix close issue", "d": "10/2015"}, {"body": "cajoy script tags removed templates long time ago", "d": "10/2015"}, {"body": "yep purpose thnx linking appropriate issue ericmartinezr", "d": "10/2015"}, {"body": "inject script text template sent iphone oct ericmartinezr notifications githubcom wrote cajoy script tags removed templates long time ago reply email directly view github", "d": "10/2015"}, {"body": "cajoy use component contain autocomplete template", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "igorminar fine proposal decorators would like see code look decorators want make sure syntax expense users", "d": "10/2015"}, {"body": "aside probably another issue needs created would suuuper cool could observable interface something like done proper observables vs subjecteventemitter would significantly lighter would remain cold unless subscribed thought", "d": "10/2015"}, {"body": "could migration path using named import ie create namespace promote usage vs interface deprecate former interfaces remove interfaces deprecate namespace make decorators available without prefix remove namespace", "d": "10/2015"}, {"body": "feature request two cents far put everything run component initialization inside end huge method lot code see proposal decorator method think would nice make n decorator per method n methods every method would concatenated maybe add lifecycle directives oninit oninit would run two differents moments oninit afterviewinit checkforsomethingtwice nt know good idea possible idea wanted write", "d": "10/2015"}, {"body": "ericmartinezr nt think multiple good idea would make code less readable would make code less predictable order methods called would make harder test would update tests addremove would probably make angular tiny bit less efficient top easy call many methods want hook", "d": "10/2015"}, {"body": "ericmartinezr think better use functional composition running multiple methods single hook makes refactoring easier avoids surprises wrt ordering case one method multiple decorators work fine err vicb said", "d": "10/2015"}, {"body": "java developers gon na feel home sat oct brian ford notifications githubcom wrote ericmartinezr think better use functional composition running multiple methods single hook makes refactoring easier avoids surprises wrt ordering case one method multiple decorators work fine reply email directly view github", "d": "10/2015"}, {"body": "feature also question never considered use symbols randomly generated tokens browsers nt support example igorminar example would look like js import component oninit import onactivate import onsomething thirdpartylibrary component selector testfoo class testfoo oninit code onactivate code onsomething code syntactically cool decorators real limitations", "d": "10/2015"}, {"body": "subject ever considered point configuration decorator let class free decorators eg wrt oninit note may make possible ericmartinezr suggesting since array maintain order point making keep class free decorators import component oninit component selector testfoo oninit class testfoo", "d": "10/2015"}, {"body": "webteckie would advantage keeping class free decorators downside approach duplicating method names want rename need places", "d": "10/2015"}, {"body": "pkozlowskiopensource may naive suggestion part stand would advantageous component config one place like configuration system usually single place quickly know go see configuration instead browsing potentially significant number lines figure things would minimize number decorators learnuse well would also keep class standard even programming typescript whatever anyways probably late making suggestions like wanted say", "d": "10/2015"}, {"body": "according mdn documentation fill attribute must use instead", "d": "10/2015"}, {"body": "ericmartinezr thank much solved", "d": "10/2015"}, {"body": "kucharskimaciej sure deprecated tried using import bootstrap provide import routerproviders appbasehref routerprimarycomponent const routerconfig routerproviders provide appbasehref usevalue provide routerprimarycomponent usevalue rootcomponent", "d": "10/2015"}, {"body": "yup gives result see code used function file see base element function always return value used constructor javascript export class pathlocationstrategy extends locationstrategy private location location private history history private basehref string constructor super thislocation domgetlocation thishistory domgethistory thisbasehref domgetbasehref therefore base element property used function used directive javascript set routeparams changes thisrouteparams changes thisnavigationinstruction thisroutergenerate thisrouteparams property bound element attribute since wrong link btw guide somewhere build source think able fix issue want sure works", "d": "10/2015"}, {"body": "kucharskimaciej good catch way", "d": "10/2015"}, {"body": "see discussion", "d": "10/2015"}, {"body": "pkozlowskiopensource sorry think ca nt understand mean u give simple demo eg", "d": "10/2015"}, {"body": "need configure server return indexhtml requests exact configuration depend web server obviously ca nt demonstrated plunker please ask support questions", "d": "10/2015"}, {"body": "thanks pkozlowskiopensource ur mean deal kinds problems webserver http code", "d": "10/2015"}, {"body": "try path also able use", "d": "10/2015"}, {"body": "great thank totally working gon na close one", "d": "10/2015"}, {"body": "sumigoma hard give good answer without full understanding usecase trying make predictable among things means tools could quickly easily analyze template figure directives active nt want support matching directives dynamically response runtime property changes going close one nothing immediately actionable would suggest continuing discussion", "d": "10/2015"}, {"body": "attribute property try binding attrfor", "d": "10/2015"}, {"body": "great thanks pawel indeed bind attributes like", "d": "10/2015"}, {"body": "two parts bugs behavior intercepting link clicks external party code think makes sense application implement directive nt option compile party templates intercepting hashchange events makes sense sure makes sense angular apps might add listener add routing self chatted past still thinking ideal solution start work earnest next week", "d": "10/2015"}, {"body": "hi brian ca nt via directive need something works global scale reasonable track required places add directive also notify us url change done parts app nt managed angular need router work seamlessly onhashchange like router right", "d": "10/2015"}, {"body": "clear yes option intercept event seamlessly use case router also needs support cases well nt disagreeing trying fully capture scope issue developers different needs nt confused", "d": "10/2015"}, {"body": "landed change third option master", "d": "10/2015"}, {"body": "looks like broken per robwormald previously would use nt get one workaround implement probably extending selector matches one shortterm option would add attribute selector allow directive applied arbitrary inputlike element least fixed", "d": "10/2015"}, {"body": "sambuchl could please move tutorial lives thnx", "d": "10/2015"}, {"body": "thanks redirect", "d": "10/2015"}, {"body": "duplicate", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "kikketer first necessary inject component see article discussion overall comment inject service component must use working use bootstrap injecting bootstrap makes visible entire app makes visible component children difference two nt remember exactly remove bootstrap make part component", "d": "10/2015"}, {"body": "thnx helping issues ericmartinezr answer spot", "d": "10/2015"}, {"body": "ericmartinezr fantastic thanks quick response worked", "d": "10/2015"}, {"body": "still nt figure completely bundling distribution story afraid ca nt help much specific setups moment afraid dig end till problem space stabilizes got recommendations area closing feel free reopen believe got anything fix side make workflow workable", "d": "10/2015"}, {"body": "content could either see", "d": "10/2015"}, {"body": "vicb right sounds like legit usecase iterating sibling imo need support one way another", "d": "10/2015"}, {"body": "works chrome maybe alexpods run ie edge see", "d": "10/2015"}, {"body": "right new compiler browserdomwalking based indeed solve let track issue part", "d": "10/2015"}, {"body": "pkozlowskiopensource nt get mean anything solve even parse text node child tr new compiler output would remain invalid html", "d": "10/2015"}, {"body": "wrap text see", "d": "10/2015"}, {"body": "vicb absolutely right sorry lazy check standards making fuss", "d": "10/2015"}, {"body": "hey danijar add project see", "d": "10/2015"}, {"body": "ericmartinezr right browser use probably support maps need polyfill", "d": "10/2015"}, {"body": "think saw error earlier reason folder project move local files folder build system try build folder find dart files solution remove folder completely might want transfer filesfolders folder feel free reopen fix issue", "d": "10/2015"}, {"body": "typotter could give example source css expected css", "d": "10/2015"}, {"body": "hey micahblu repo looking one", "d": "10/2015"}, {"body": "ericmartinezr sorry thanks", "d": "10/2015"}, {"body": "youknowriad need set client initial value put ngif template make sure client defined first component already loaded onactivate happens js component selector client view directives ngif template export class clientshow client client routeparams routeparams repository clientrepository constructor repository clientrepository routeparams routeparams thisrepository repository thisrouteparams routeparams onactivate return thisrepositoryfind thisrouteparamsparams id client gt thisclient client", "d": "10/2015"}, {"body": "brandonroberts yes think angular handle purpose waiting promise resolution onactivate hook case", "d": "10/2015"}, {"body": "mainly resolve data properties may need continuing child components like client prevent instantiation component onactivate finishes also provides information component navigated current navigation", "d": "10/2015"}, {"body": "brandonroberts correct think cases like better use strategy brandonroberts suggesting ngif", "d": "10/2015"}, {"body": "btford ok stick something like thank", "d": "10/2015"}, {"body": "mcpdesigns tutorials live open issue send pr thnx", "d": "10/2015"}, {"body": "try", "d": "10/2015"}, {"body": "kind npm save latest npm err darwin npm err argv save latest npm err node npm err npm npm err code npm err found npm err please include following file support request npm err front ubuntu installs fine macos", "d": "10/2015"}, {"body": "hmm idea", "d": "10/2015"}, {"body": "rootical try npm got osx works fine still fails version afraid dig end debugging npm issues without access ones machine next impossible", "d": "10/2015"}, {"body": "even tried reinstall npm curious could done", "d": "10/2015"}, {"body": "wrong npm registry set check set", "d": "10/2015"}, {"body": "guess best documentation source code basic idea implement interface feed implementation dependency injector example canonical implementation alternatively take look web worker implementation angularuniversal see server side renderer", "d": "10/2015"}, {"body": "implementing entire renderer get dom element looks like overkill ziaukhan try using renderergetnativeelementsync api move code directive nonhtml users opt get reference implementation via injected constructor parameter example", "d": "10/2015"}, {"body": "thank much hdeshev number related questions renderergetnativeelementsync method requires location object purpose injecting elementref use location api call way create location object type renderelementref elementref renderergetnativeelementsync method returns object returned elementrefnativeelement use renderergetnativeelementsync method get object easily elementrefnativeelement understand comment move code directive nonhtml users opt please elaborate", "d": "10/2015"}, {"body": "use input templatename decorator register minified variable name", "d": "10/2015"}, {"body": "hopefully herringtondarkholme answer sufficient one usecase bryanerayner", "d": "10/2015"}, {"body": "think full intent suggesting nt fully grasped thorough explanation thinking suppose simple component ts class templatecomponent componentimagesrc string constructor thiscomponentmagesrc wwwsomeimage given template follows html proposed remapping annotation afaik nt exist template would compiled converted something looking like html would support advanced minification typescript output typescript ever implement proposed operator would powerful way minify angular applications also lessens coupling templates components refactoring code sharing also become easier mechanism like available", "d": "10/2015"}, {"body": "indeed sounds like interesting minification strategy rather solved tooling side suggesting provide tools", "d": "10/2015"}, {"body": "would definitely done build step minifying typescript satisfactory manner would require movement typescript team think best done typescript compiler said big problem minification knowing safely minify ca nt many times property names angular component classes ca nt minified angular binds templates properties mechanism also minifyalias names template think would help bridge gap thinking might become complicated runtime step might template binding along lines minified also minified alias mapping would need way know sure suggesting trying find solution problem thought might able elegantly solved angular template binding service upon thought complicated done inside angular runtime", "d": "10/2015"}, {"body": "bryanerayner understand trying achieve noble goal said nt think sth immediately actionable sounds like nice longerterm project though", "d": "10/2015"}, {"body": "agreed", "d": "10/2015"}, {"body": "think compression level default supported compiler practically users safe use decorator uglify requires closure compiler requires advanced mode afaik typescript currently clear roadmap support minification property minification needs specific knowledge code framework hoping see collaboration ts angular team", "d": "10/2015"}, {"body": "blocks", "d": "10/2015"}, {"body": "router actually fine afaik see please close issue confirm thanks", "d": "10/2015"}, {"body": "right", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "choeller correct way currently generate urls auxiliary routes get example working need use", "d": "10/2015"}, {"body": "brandonroberts ok thank think problems possible create link possible link guestbook without passing auxroute getting concept wrong understanding auxroute part optional otherwise could put content auxroute template sure right place discussion also problems understanding concept say config whole config totally static sidebar always see settings dialog would assume auxroute load different templates shed light", "d": "10/2015"}, {"body": "ran problem aux route optional", "d": "10/2015"}, {"body": "choeller yea think bug also named outlet currently populate auxiliary route also throws error", "d": "10/2015"}, {"body": "think good hold implementing anything major refactors need wrap reason hesitant yet pragmatic make change lands matsko pair next week eager help happy guide helping thanks", "d": "10/2015"}, {"body": "sounds good btford love help lem know anything else comes realm falling behind one else get feel free assign anything meantime assist starting feel like hard grab anything due ran", "d": "10/2015"}, {"body": "nathanwalker please nt discouraged problem misko tagged without knowing much context mistake part right organization definitely need something like using location service without router", "d": "10/2015"}, {"body": "cc igorminar", "d": "10/2015"}, {"body": "eventually wo nt need domadapters parsing use custom html parser need dom special renderers every platform browser serverside tue oct pawel kozlowski notifications githubcom wrote cc igorminar reply email directly view github", "d": "10/2015"}, {"body": "already pr merged yet though", "d": "10/2015"}, {"body": "closing duplicate angularangulario since belongs angulario repo", "d": "10/2015"}, {"body": "agreed thinkingdoing", "d": "10/2015"}, {"body": "use elvis operator", "d": "10/2015"}, {"body": "lot bindings use anyway thinking quite logically correct", "d": "10/2015"}, {"body": "one hand result discussion mentioned forced mark optional parts expressions makes things obvious laborious well hand trivial situation property nt predefined since data usually comes asynchronously use elvis operator case regardless many bindings difference", "d": "10/2015"}, {"body": "child element nt rendered hence binding nt activated case child element inserted via working correctly binding still activating nt", "d": "10/2015"}, {"body": "gotcha surely right plunk reproduces issue issue occurs renders entire view wrapping using", "d": "10/2015"}, {"body": "baio could set element see", "d": "10/2015"}, {"body": "repo angular looking", "d": "10/2015"}, {"body": "gkalpak sorry", "d": "10/2015"}, {"body": "trying bit realized sometimes even using templateurl one component app work refreshing page many times example leads believe concurrency problem update gon na use webworker plnkr try simulate bug nt time", "d": "10/2015"}, {"body": "yes please", "d": "10/2015"}, {"body": "thelgevold think related", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "todoubaba saw comment gitter forgot close thank", "d": "10/2015"}, {"body": "siritsch right dev guides still work progress live could please move issue", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "datepicker call onselect", "d": "10/2015"}, {"body": "problem comunicate interface html controller ts use component per example call controller return undefined", "d": "10/2015"}, {"body": "emirdeliz sounds like general support request could please move thnx", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "script tags page potentially loaded via script loader ie systemjs script tags templates work", "d": "10/2015"}, {"body": "totally fine load js libraries application fact example sample components inspect dom see loading react jquery underscore outside angular add indexhtml like robwormald suggests angular part basically sandbox whatever want outside", "d": "10/2015"}, {"body": "vicaba removing tags templates purpose nt use load code demand hope others answered question details", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "use angular fine async loader need remove declaration html use ready uses kind bootstrapping default currently uses systemjs also async loader would work absolutely fine loader desire", "d": "10/2015"}, {"body": "closing feel free ask questions thread still confusion", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "seems issue", "d": "10/2015"}, {"body": "yes seems", "d": "10/2015"}, {"body": "closing duplicate please track thanks", "d": "10/2015"}, {"body": "written typescript could transpiled module system supported ts nothing special guess talking kind bundled version plan providing cjs bundles see intention providing amd bundles closing duplicate", "d": "10/2015"}, {"body": "ocombe fyi encodeuricomponent encode sure get routeparams first try encoding see behaviour get expected", "d": "10/2015"}, {"body": "yes know nt encode parenthesis tried discovering auxiliary routes seems problem works refresh page router gets fooled analyzing url", "d": "10/2015"}, {"body": "ok temporary fixed problem running routes extended encodeuricomponent function still would nice built router poke btford", "d": "10/2015"}, {"body": "next impossible diagnose going based info provided could please ask help providing context ideally share code somewhere thnx", "d": "10/2015"}, {"body": "tandu nt know configuration directive looks like know ca nt upgrade directives nt components basically directives without isolated scopes ca nt upgraded using", "d": "10/2015"}, {"body": "confirm yes directive using nt component directive wo nt work", "d": "10/2015"}, {"body": "nvfileselect defined see sources upgrade supports directives templates think important add support directives without templates common thing angular added future releases upgrade module never work", "d": "10/2015"}, {"body": "afaik wo nt supported", "d": "10/2015"}, {"body": "saw spec possible", "d": "10/2015"}, {"body": "gionkunz correct component selector task template template directives task export class task input taskdata task output finished finishedhandler new eventemitter somethinghappened thisfinishedhandlernext emit event hope makes things clear also note removing since optional since latest release", "d": "10/2015"}, {"body": "okay yeah works already awesome", "d": "10/2015"}, {"body": "direct equivalent closest thing would pretty lowlevel guess would like use service right guess best solution handroll sth plans direct equivalent interpolate", "d": "10/2015"}, {"body": "yeah tried use parseinterpolation could nt make work documentationcomments ast trying understand thing gave whenever free time appreciate help make work looks like good idea new library wrote naive parser works objects still think would interesting addition angular pretty sure robwormald agreed understand probably blocking feature request beta maybe later", "d": "10/2015"}, {"body": "endash interesting one imo example got plunker better illustrates going let say got example look closely see ways desugarring one choose nt make sense take arbitrary decisions go desugared version pb see nt throw see several element think got issue already", "d": "10/2015"}, {"body": "pkozlowskiopensource assumption syntax nt would get binding similar directivescomponents normally work would go whichever one matching assumption reinforced fact fails nt get error saying neither matching throwing duplicate nt help much want throw regular input binding syntax ca nt disambiguated right nt anything help figure binding nt work preferably compilerlinkerrendererwhatever part angular handling would able look inputs intelligently route binding expected directives components", "d": "10/2015"}, {"body": "nt fail silently afaik since nt check non standard attributes see throwing duplicate nt help much want throw regular input binding syntax ca nt disambiguated sugar common nonambiguous cases risk confusion people using canonical syntax nt think making smarter", "d": "10/2015"}, {"body": "entire point nt risk confusion unless already know confusion entirely hidden nonobvious unintuitive needs error nt supported fine use fine default behaviour drop binding ground", "d": "10/2015"}, {"body": "needs error nt supported agreement got issues already opened tackle closed issue", "d": "10/2015"}, {"body": "hey tejji plunk posted nt really help simply bootstraps application everything seems work fine could provide plunk illustrates issue thanks", "d": "10/2015"}, {"body": "trying use native element html file indexhtml issue click button onclick executing constructor logonclick called use native element html file indexhtml", "d": "10/2015"}, {"body": "might misunderstanding question asking abut applying angular directives elements outside bootstrapping point myapp would helpful see actual use case angular code begins inside app element ca nt apply angular code elements outside myapp", "d": "10/2015"}, {"body": "may understood well works let clarify way access amp manipulate dom elements outside myapp", "d": "10/2015"}, {"body": "hm example basically article shows get access underlying dom element backing angular directive handle dom use standard dom manipulation techniques like jquery regular js manipulate elements ancestor tree something like said strongly discourage pattern norm since creates tight coupling dom angular app one advantages angular decoupled models nt assume fixed dom structure soon start reaching dom directly imposing rigid relationship models dom around", "d": "10/2015"}, {"body": "understood thanks guiding many times data embed html use approach recommended recommended way pass data angular component use script type applicationjson embed data html use get get data server json format approach", "d": "10/2015"}, {"body": "tejji could move discussion usage best practices thnx", "d": "10/2015"}, {"body": "noticed build chain ts angular would nt play nice decided go back ts abandon use asyncawait nt important anyway", "d": "10/2015"}, {"body": "came across also temporary fix empty file get working using browserify tsify plugin go ts", "d": "10/2015"}, {"body": "started working change need think moment work users currently get transitively brings good emit minimal setup work bad emit duplicate declarations see vs change adding separate entry point convenient typing changing emit would require changing code plus runtime module bundle another way would change depend good emit users vast majority need bring compiler means changing reference worse finding right spot build tsc gets invoked means chances new user get setup wrong see background underlying ts issue", "d": "10/2015"}, {"body": "maybe called instead sounds like instance component", "d": "10/2015"}, {"body": "definitively good name since might confused template instance directive instance probably things proposed sugar sure buys enough justify new concept reasonable imo going close revisit later high demand sugar", "d": "10/2015"}, {"body": "according mdn rules need precede rules see change current implementation ie oder example think right opposite sure", "d": "10/2015"}, {"body": "rules need precede rules understand stylesheet could rule type rule case example still expected order b c", "d": "10/2015"}, {"body": "yes could improve onthefly compile time restrictions need able serialize compilemetadata string deserialize also keep interface take string someone could replace templateparser altogether implementation use htmlparser everything one go eg transform jsx templateast fri oct pm victor berchet notifications githubcom wrote htmlparser called twice compilation templateparser templatecompiler would possible call reuse ast understand critical path potential refactoring given low priority reply email directly view github", "d": "10/2015"}, {"body": "encoding works fine chinese charactors template translated uxxxx", "d": "10/2015"}, {"body": "thanks find ide encoding setting wrong", "d": "10/2015"}, {"body": "inject dynamiccomponentloader service class see", "d": "10/2015"}, {"body": "todoubaba use method use service actually wan na know ca nt instantiation method", "d": "10/2015"}, {"body": "dynamiccomponentloader abstract class impl class dynamiccomponentloader internal instantiate directly", "d": "10/2015"}, {"body": "todoubaba thx", "d": "10/2015"}, {"body": "null discover dependencies using reflection gt try firgure using reflection vs gt dependency", "d": "10/2015"}, {"body": "cc tedsander kegluneq mhevery", "d": "10/2015"}, {"body": "board general approach minor nits need add one per import add unless determine ed coming probably could reading summaries transformer generates try avoid changing line numbers keep source maps fresh calls happen line opening bracket method labeled", "d": "10/2015"}, {"body": "kegluneq good points updated description", "d": "10/2015"}, {"body": "another edit renamed", "d": "10/2015"}, {"body": "fine proposal comment dart specific", "d": "10/2015"}, {"body": "wrong angular github apologies", "d": "10/2015"}, {"body": "type", "d": "10/2015"}, {"body": "examples implement analyzer would walk type hierarchy figure", "d": "10/2015"}, {"body": "related", "d": "10/2015"}, {"body": "well question type event declarations something implementing yes sure extracting event type trivial", "d": "10/2015"}, {"body": "something implementing stream yes", "d": "10/2015"}, {"body": "good yes proposed solution works thank", "d": "10/2015"}, {"body": "seems like jquery plugin binds event listener could cause issue every time listener executed would trigger change detection issue one way solve would call plugin outside angular zone check later today solves issue", "d": "10/2015"}, {"body": "reproduce issue ubuntu ff could please try report helps", "d": "10/2015"}, {"body": "thanks dup please track one", "d": "10/2015"}, {"body": "different", "d": "10/2015"}, {"body": "jessegood quite different proposal understand reading design doc inheriting directives throughout view hierarchy new proposal allows specify platformdependent set default directives", "d": "10/2015"}, {"body": "nativescript might needed nativescript renderer determined element name native component use similar browser also ngif ngfor independent environment relating browser seems correct", "d": "10/2015"}, {"body": "ionic probably soon need hook renderer well eg define click event really", "d": "10/2015"}, {"body": "side note want introduce need way tell dart transformers future js build tools ides platform used directives active globally could ngconfjson file similar tsconfigjson file tylescript tools would locate looking current directory walking could also used eg configuring element schema registry thu oct pawel kozlowski notifications githubcom wrote jessegood quite different proposal understand reading design doc inheriting directives throughout view hierarchy new proposal allows specify platformdependent set default directives reply email directly view github", "d": "10/2015"}, {"body": "typotter pointed viewchild viewchildren seem order operations viewquery", "d": "10/2015"}, {"body": "internal issue", "d": "10/2015"}, {"body": "think would note gets called multiple times sure interested first call", "d": "10/2015"}, {"body": "first call yes called early example", "d": "10/2015"}, {"body": "learned afterviewchecked sure really provide quick explanation built virtualized spreadsheet component use give current grid cell focus based arrow key based navigation appears work assuming event fires model updated fire view updates result model updates demo works seam work curious details event relates timing view side effects model updates", "d": "10/2015"}, {"body": "jbdeboer oh wait nt seen lifecycle hooks implemented child component vs parent component result expected query ready hook parent component happen later point time vs one child component sure get trying use case thelgevold called view checked change detection update view based model response see doc runnable examples", "d": "10/2015"}, {"body": "passing configuration data parent child using viewquery want need avoid state child renders invalid data eg example never render initial experimentation changes stream fires even parents afterviewinit expect issue wednesday october victor berchet notifications githubcom wrote jbdeboer oh wait nt seen lifecycle hooks implemented child component vs parent component result expected query ready afterviewinit hook parent component happen later point time vs one child component sure get trying use case thelgevold afterviewchecked called view checked change detection update view based model response see doc runnable examples reply email directly view github", "d": "10/2015"}, {"body": "vicb thanks mean view settled time calling afterviewchecked meaning effects detected model changes rendered html", "d": "10/2015"}, {"body": "yep", "d": "10/2015"}, {"body": "discussion jbdeboer decided best use case instead data passed di closing infeasible", "d": "10/2015"}, {"body": "use force cpu load sometimes see changing click narco details section changes narco details fraction second later changes mr nice foo details never happened without forcing cpu load", "d": "10/2015"}, {"body": "goes versus", "d": "10/2015"}, {"body": "couple things nt understand proposed solution every directive declaring local variables going provide type argument like case currently declares property expected see instead expectation ide solve set type equations type parameters using properties order know exact types subclass fields", "d": "10/2015"}, {"body": "yes directive would implement give ide hints sorry typo changed yes ide solve type equations propagate types problem ideas make bettersimpler please share", "d": "10/2015"}, {"body": "problem want make sure correctly understand solution see used thank think give analysis plugin enough type information", "d": "10/2015"}, {"body": "scheglov could another look simplified proposal rely new interface rather make parameterized locals type would also work", "d": "10/2015"}, {"body": "yes works", "d": "10/2015"}, {"body": "hey binarious according observable documentation inteded behavior pushbased everytime create new request want pass request different services use saw operator angularconnect talk ben lesh change nth subscribers sharing result looks awesome plnkr example check network tab console hope helps", "d": "10/2015"}, {"body": "hey ericmartinezr great thanks lot clarification example", "d": "10/2015"}, {"body": "something wrong hard say based info provided could try reproduce problem plunker fork one documentation site thnx", "d": "10/2015"}, {"body": "ok got error cames livereload behavior provide gruntexpress task thanks pkozlowskiopensource", "d": "10/2015"}, {"body": "hi cbalit could please explain solve problem issue architecture uses gulp browsersync superstatic gruntexpress thanks", "d": "10/2015"}, {"body": "hi guilhermevrs fact set livereload property gruntexpress config false", "d": "10/2015"}, {"body": "hi cbalit nt think case tried thing browsersync result always thanks anyway", "d": "10/2015"}, {"body": "take look", "d": "10/2015"}, {"body": "yes see", "d": "10/2015"}, {"body": "vsavkin think need something like see", "d": "10/2015"}, {"body": "totally make sense custom directives mean u still able use correct wrong custom directives point nt really make sense use syntax proposed proposal input elements guess seems reasonable need handle directives differently point think consistency drives point might need stick", "d": "10/2015"}, {"body": "iamisti need use custom directives since directive create propertyevent pair allow bound using notation", "d": "10/2015"}, {"body": "like wrapas", "d": "10/2015"}, {"body": "point personal experience original api see turns really confusing importexport really depend point looking wether really making head hurt one wrote component exported imports component give headache quickly reason like implies specific direction makes sense component component makes sense component component chosen name pascalprecht sure understand argument names opposite want upgrade used downgrade used wardbell confusing every component wrapped implies direction", "d": "10/2015"}, {"body": "like", "d": "10/2015"}, {"body": "seems pretty clear indicators direction upgrade downgrade slightly pejorative problem pascal talking nt strong feelings asked", "d": "10/2015"}, {"body": "dont like terms", "d": "10/2015"}, {"body": "upgrade downgrade feel like final outcome eg compx downgraded therefore longer used", "d": "10/2015"}, {"body": "direction needed specify wrapping mean taking component making available", "d": "10/2015"}, {"body": "works", "d": "10/2015"}, {"body": "agree downgrade sounds pejorative", "d": "10/2015"}, {"body": "sure understand argument names opposite want upgrade used downgrade used mhevery yupp said technically correct word downgrade nt really fit process upgrading think various proposals maybe go one", "d": "10/2015"}, {"body": "another idea creating internal namespace something like js import upgradeadapter let adapter new upgradeadapter let adapter using let app angularmodule myapp appdirective productdetail productdetail appfactory productservice productservice using component directives ngfor productlistitem template class productlist consistently using provides clue developer api working takes arguments context coming also makes adapter method names less noisy provides simple extension adapters either context", "d": "10/2015"}, {"body": "assuming dupe", "d": "10/2015"}, {"body": "vguede nt way access currently injector access onactivate method called constructor", "d": "10/2015"}, {"body": "brandonroberts many thanks", "d": "10/2015"}, {"body": "solved new compiler parser", "d": "10/2015"}, {"body": "hey settrend repo looking one v", "d": "10/2015"}, {"body": "oops sorry nt recognize distinction blush", "d": "10/2015"}, {"body": "investigate get change", "d": "10/2015"}, {"body": "great", "d": "10/2015"}, {"body": "rolandjitsu show routeconfig better yet runnable example may improper use api", "d": "10/2015"}, {"body": "btford tried app available removed since working could try make plunk tonight illustrate behaviour basically happens perhaps wrongly using api also keep getting things like use browser back button navigates back path path leads furthermore reason could debug invoked navigates page change detection seems triggered click inside input blur sorry pasting links", "d": "10/2015"}, {"body": "thanks report please reopen", "d": "10/2015"}, {"body": "probably already covers work components bound route", "d": "10/2015"}, {"body": "nt want breaks encapsulation component model", "d": "10/2015"}, {"body": "mhevery please check next time tagging issues like community nt spend time something fruitless", "d": "10/2015"}, {"body": "btford sorry", "d": "10/2015"}, {"body": "talking tomorrow angularconnect talk streamed watch live tomorrow later youtube", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "issue pipe marked pure runs time", "d": "10/2015"}, {"body": "hey gregjacobs repo looking one", "d": "10/2015"}, {"body": "ah sorry thanks", "d": "10/2015"}, {"body": "cents think would belong external package angular core something potentially specific app implementation", "d": "10/2015"}, {"body": "whats see specific load static html nt depend javascript class easily register routeconfig similiar existing approaches like route asyncroute end put routeconfig make button view nt mean put presented code angular dirty code hacked without much knowledge existing approach would write class like every htmlfile register routconfig route make buttons ps maybe also talked created buttons convenient way nt become part framework", "d": "10/2015"}, {"body": "add feature universal nt make core understand benefits probably interesting server rendering section parts app server view etc", "d": "10/2015"}, {"body": "well saw thought way complicated looked route routedefinition class could easily achieve following export class htmlroute implements routedefinition data path string component type string loader function redirectto string constructor path templateurl data path string templateurl string string data thispath path use routeconfig like makes framework would favor create pull request", "d": "10/2015"}, {"body": "mhevery rkirov vsavkin regardless represented api would nt require changes core going retag reflect way router happy", "d": "10/2015"}, {"body": "two kinds including static data directives likely nt want security breaking mental model template loading static html doc done trouble safe needs sanitizer lot security implications", "d": "10/2015"}, {"body": "version npm", "d": "10/2015"}, {"body": "earlier npm v updated node npm hour back latest version hope work right clonecurrenttree happening", "d": "10/2015"}, {"body": "ca nt repro", "d": "10/2015"}, {"body": "something might supported future yep reasonable feature nt got yet", "d": "10/2015"}, {"body": "seems related running dart dev", "d": "10/2015"}, {"body": "fixed head", "d": "10/2015"}, {"body": "varghesep nt know going however invokes example", "d": "10/2015"}, {"body": "upgraded alpha unfortunately problem see oninit dashboardcomponent gets called peoplecomponent also nt see error console difference see code following code dashboardhtml suggestion debug find oninit peoplecomponent called", "d": "10/2015"}, {"body": "varghesep try", "d": "10/2015"}, {"body": "ericmartinezr tried suggestion work please note oninit dashboardappcomponent works fine without importing oninit please see screen shot chrome dev tools see oninit undefined nt think import oninit anymore latest alpha version think may issue babel compiling code correctly may work typescript compiler rosendi shown", "d": "10/2015"}, {"body": "says implement interface execute custom initialization logic though component lifecycle tracked without extending interfaces etc hmm expected behaviour documentation outdated varghesep latest alpha version exported member checked", "d": "10/2015"}, {"body": "rosendi sample provided also import oninit documentation says oninit called right directive databound properties checked first time suspecting whether happening peoplecomponent causing follow app lifecycle", "d": "10/2015"}, {"body": "varghesep misread implementation extending clear says example method exists called right necessary import extend component class interface back suggestion problem babel plunk works", "d": "10/2015"}, {"body": "rosendi thanks examples debugged code see lifecycle hooks like oninit considered second component use event like onactivate peoplecomponent event triggered navigation complete gets called oninit navigation complete code exited run life cycle hooks one important thing mention use jspm systemjs way wire app like javascript systemimport reflectmetadata function systemimport function systemimport dashboardapp catch consoleerrorbind console", "d": "10/2015"}, {"body": "mhevery nt think bug router since plunks systemjs based typescript work fine point might varghesep environment varghesep could reproduce issue plunk", "d": "10/2015"}, {"body": "provide example would imagine work", "d": "10/2015"}, {"body": "hey thanks reply mind imagine simple way pass regular expression instead string think possible declare route ways posts id posts id", "d": "10/2015"}, {"body": "reasonable feature request super high priority moment", "d": "10/2015"}, {"body": "yep nt highpriority feature plan future", "d": "10/2015"}, {"body": "hello anguar possible route params like routecurrenttemplateurl routeparamssr routeparamsty routeparamstc dash important get url seo friendly tried implement without success possible present version thank advance", "d": "10/2015"}, {"body": "yet", "d": "10/2015"}, {"body": "thank reply focus something else moment", "d": "10/2015"}, {"body": "thanks reminder actually first alpha nt want attempting avoid bringing whole rx updating import blocked pending resolution", "d": "10/2015"}, {"body": "ah good know thanks", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "right ran ago happens probably directive uses workaround iterating children finding first element needed case use edit know point anyway affects may affect others css selectors html css div span wo nt work", "d": "10/2015"}, {"body": "know use point lists expect children insert anything else along also little weird first time see nt work clue", "d": "10/2015"}, {"body": "according spec element containt check definition scriptsupporting elements represent anything ie rendered used support scripts eg provide functionality user following elements scriptsupporting elements script template first child element right developerfriendly kind element like frameworks insert tags html content tag", "d": "10/2015"}, {"body": "content tag content marks place views inserted", "d": "10/2015"}, {"body": "vicb said content anchor angular know insert views case place knows add elements next", "d": "10/2015"}, {"body": "tbosch switch back new compiler would make problem go away", "d": "10/2015"}, {"body": "nevermind figured load traceurruntime", "d": "10/2015"}, {"body": "removed traceur instead use", "d": "10/2015"}, {"body": "ericmartinezr thank hint works", "d": "10/2015"}, {"body": "duplicate", "d": "10/2015"}, {"body": "looks resolved", "d": "10/2015"}, {"body": "see open issuepr thanks", "d": "10/2015"}, {"body": "fwiw reported days ago closed immediatly", "d": "10/2015"}, {"body": "use case would consider mistake code would like framework tell throwing exception", "d": "10/2015"}, {"body": "think throw error event registered", "d": "10/2015"}, {"body": "ok tolerant accept person policy lead us trouble maybe would lets", "d": "10/2015"}, {"body": "lmfinney mhevery sounds like nt issue related routing still issue", "d": "10/2015"}, {"body": "btford nt know routing involved know able invoke problem reloading routerrenavigate problem might rewritten part app problem anymore initial implementation used button bars embedded bigger component used javascript define configurations buttons new approach extracts button bar component buttons defined html", "d": "10/2015"}, {"body": "think related view caching angular reuses previously created dom elements default see verify adding provider providers passed bootstrap deactivate view pooling tue oct lance finney notifications githubcom wrote btford nt know routing involved know able invoke problem reloading routerrenavigate problem might commandcompilermergeattributevalue rewritten part app problem anymore initial implementation used button bars embedded bigger component used javascript define configurations buttons new approach extracts button bar component buttons defined html reply email directly view github", "d": "10/2015"}, {"body": "check live stream angular connect next week matsko robertmesserle talk animation probably get answers", "d": "10/2015"}, {"body": "ericmartinezr implementation animation temporary system real system announced next week", "d": "10/2015"}, {"body": "ohhh ok thanks heads try achieve real system nt already p closing", "d": "10/2015"}, {"body": "could one template directive per element directive current invalid category categorydisplayname working extra div level category categorydisplayname working single div category categorydisplayname error example report error could check already pending issue amp close case", "d": "10/2015"}, {"body": "reasoning behind limitation one template directive per element case angular seems like unnecessary limitation imo also annoyance converting angular angular since change markup use wrapper element", "d": "10/2015"}, {"body": "particular case exactly want categories returns evaluate ten times display nothing end evaluate first call probably want second solution trivial case solve cases things explicit", "d": "10/2015"}, {"body": "one solution give directives priority dictate evaluation order case ngif could take precedence ngfor ngif false execution ngfor skipped together", "d": "10/2015"}, {"body": "reasoning behind limitation one template directive per element may nt want walk dom collect directives like angular perf", "d": "10/2015"}, {"body": "priorities work directives might different need explicit work time perf problem much better angular", "d": "10/2015"}, {"body": "end big deal long people aware limitation nt see optional directive priority property default value wouldnt work custom directives priority could offset make sure coredirectives always take precedence", "d": "10/2015"}, {"body": "think would cool directives evaluated order exist markup example html name could desugared html name could desugared unfortunately dom namednodelist nt guarantee maintain order maybe one reason implement think vicb thelgevold mhevery pkozlowskiopensource", "d": "10/2015"}, {"body": "interesting would clear departure html way things mentioned nt guarantee order attrs imo slippery path take ca nt put finger gutfeeling screams atm think got bigger problem desugared form way could remember write correctly top head agree pb solve", "d": "10/2015"}, {"body": "think would cool directives evaluated order exist markup example far noticed versions internet explorer reorder attributes alphabetically", "d": "10/2015"}, {"body": "sort supported angularjs created endless sets issues going support angular easy work around nest tag", "d": "10/2015"}, {"body": "thanks responses plunker simple show problem actual use case bit complex need use one properties showhide element wrapping template tag wo nt work wo nt access object actually using instead wrapping inner content ngif still show button reading replies decided hide button class hopefully nt run problems approach created new plunker show complex use case anyone stumbles let know better way still learning angular vicb created issue better error messages", "d": "10/2015"}, {"body": "brandyscarney thanks creating new issue probably looking something like would method class returning list categories filtered name one important thing must return new array time method called otherwise change detection get confused ie work return new array categories modified plans improve implementing functionality", "d": "10/2015"}, {"body": "vicb actually started way thought ngif would simplest way thanks mentioning though letting know return array time probably end way", "d": "10/2015"}, {"body": "thnx reporting tracked", "d": "10/2015"}, {"body": "updated jspm packagejson points jspm typescript devdependencies jspm dependencies angular version set npm delete jspm npm directories run install sure need update configjs file would nt surprise", "d": "10/2015"}, {"body": "get found getting right everything else loads properly least looks like cant change fileextension true imports wont work devjs", "d": "10/2015"}, {"body": "nt support jspm community recommend instead", "d": "10/2015"}, {"body": "thanks already pr fix", "d": "10/2015"}, {"body": "closing duplicate", "d": "10/2015"}, {"body": "nayyarjamal fork repository use command gulp npm run gulp browsersync connecting", "d": "10/2015"}, {"body": "tried still working shows another error use gulp run project error", "d": "10/2015"}, {"body": "nayyarjamal looks like problem specific project setup might try asking gitter channel stackoverflow please try use github reporting issues specific framework thanks octocat closing feel free discuss", "d": "10/2015"}, {"body": "explain looking work around issue able override viewresolver could alter directives pulled viewdecorator like import injectable injector type bind import viewmetadata viewresolver injectable export class diviewresolver extends viewresolver injector injector constructor injector injector thisinjector injector super", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "think oversight", "d": "10/2015"}, {"body": "per vsavkin issue new compiler synced since longer look things strings", "d": "10/2015"}, {"body": "could point test case verified would great", "d": "10/2015"}, {"body": "would amazing unfortunately easy way know something fold ionic guess controls whole rendering knows big rows way ngrepeat know would run browser layout engine extremely expensive unlikely able deliver feature", "d": "10/2015"}, {"body": "think correct behavior saying list unknown empty imagine list would created items would expect callback decrease number items list gets called reach items would call right empty array still information delivered", "d": "10/2015"}, {"body": "resolved longer inject constructor rather set properties component query resolved", "d": "10/2015"}, {"body": "upon closer investigation exception coming correct location", "d": "10/2015"}, {"body": "make sure using latest versions node npm issue adding path latest node web tools external paths fixed", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "matthewddennis thanks help old version problem updated node latest version moved path external tools order downloads unfortunately make change get errors atleast isolated issue note also added node folder experience problem", "d": "10/2015"}, {"body": "matthewddennis curious node path used web tools external paths getting errors add latest node version added question team thanks", "d": "10/2015"}, {"body": "first looks like legit issue second implemented another open issue passing complex objects params navigation", "d": "10/2015"}, {"body": "experience since every backend language use different deserialization logic query string use better pass one single param query string complex object json encoded string thanks", "d": "10/2015"}, {"body": "nayyarjamal consumes dsl use alias route configuration try", "d": "10/2015"}, {"body": "working thanks blush", "d": "10/2015"}, {"body": "references changelog angular issue commit", "d": "10/2015"}, {"body": "think might looking angular lives", "d": "10/2015"}, {"body": "ok sorry", "d": "10/2015"}, {"body": "need include instead", "d": "10/2015"}, {"body": "sabartius mean work corejs well", "d": "10/2015"}, {"body": "guys need polyfill want run browsers nt support new methods pretty much majority point corejs work well top want run older ies might need polyffils check needed framework run ie nt need traceurruntime traceurruntime polyfills inside could act polyfills said much polyfills using shim methods bit overkill", "d": "10/2015"}, {"body": "including solve issue", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "possible get stream angular provides events", "d": "10/2015"}, {"body": "probably also array would better defined array modified whenever things alter array would theory trigger change detection", "d": "10/2015"}, {"body": "tried many variants order understand change detection works sorry small bugs according article onpush strategy forces component depends input properties immutable therefore immutable example immutable data changed created push instead return new immutable collection previous example use mutable collection understand correctly change detection occurs property case replaced mutated", "d": "10/2015"}, {"body": "found live example angular source code", "d": "10/2015"}, {"body": "yes actually changing input would trigger change detection simply definition says act changes data expected immutable", "d": "10/2015"}, {"body": "example posted manually triggers change detection actually lets angular know next event occurs current zone trigger change components marked check least understanding also see bit maybe use", "d": "10/2015"}, {"body": "rolandjitsu u read article vsavkin change detection angular example immutable structures change detection occurs manually call data property replaced maybe wrong however onpush strategy detect input replacement automatically please take look example", "d": "10/2015"}, {"body": "rosendi yes right trigger change detection replace input value may bug mhevery labeled may also expected behaviour vsavkin surely tell us going", "d": "10/2015"}, {"body": "rolandjitsu look new plunk two components named component host component fils data case component bound binding occurs input property purposely use mutable data structures track object mutation strategy trigger change detection scenario strategy works expected viz component changed property replaced issue still could nt closed since previous plunk replacing object entirely component named trigger change detection might unexpected behavior vsavkin could clear", "d": "10/2015"}, {"body": "strategy component checked mode set checked called observe first examples think expecting behavior similar ie running cd property triggers change event implemented dart atm must work improving documentation area edited", "d": "10/2015"}, {"body": "rosendi answer last comment trigger change detection input property changed result change detection check first plunk parent updated trigger check child second plunk way know input changed dirty check unless input properties changed call explicitly trigger change detection callback one last thing changes result event would automatically dirty check hopefully answers questions", "d": "10/2015"}, {"body": "vicb thank detailed explanation close discussion improved documentation", "d": "10/2015"}, {"body": "robwormald jeffbcross please take care since gists anyone else need involved", "d": "10/2015"}, {"body": "igorminar sure update plunk folks forked create samples though trying understand purpose updating templates api docs created future based updated template thought close api docs process use embedded code samples instead plunker case", "d": "10/2015"}, {"body": "btw update since version encouraging folks use npm new feature release addition minlength maxlength validators", "d": "10/2015"}, {"body": "ts plunker template updated jeffbcross think mostly quick bug reproductions generalized freeform plunkery anything specific docs rkirov owns versions believe", "d": "10/2015"}, {"body": "base plunk also updated", "d": "10/2015"}, {"body": "robwormald cool mostly core contributors benefit published somewhere community members use starting point", "d": "10/2015"}, {"body": "mine rkirov templates ones see bottom list", "d": "10/2015"}, {"body": "upgraded", "d": "10/2015"}, {"body": "robwormald using input output decorators instead component intput output template", "d": "10/2015"}, {"body": "done cross check make sure right oct rado kirov notifications githubcom wrote robwormald using input output decorators instead component output template reply email directly view github", "d": "10/2015"}, {"body": "ts plunker still includes traceurruntime remove please also see plunkers use minified bundles intentional maybe perf reasons think makes debugging harder switch nonminified version needed lastly ts plunker pulls system codeangularjs pulls jspmio unify unless jspmio unreliable use everywhere wed oct rob wormald notifications githubcom wrote done cross check make sure right oct rado kirov notifications githubcom wrote robwormald using input lt output decorators instead component output template reply email directly view github lt reply email directly view github", "d": "10/2015"}, {"body": "currently none working least pc console shows info", "d": "10/2015"}, {"body": "looks like local proxy issue thu oct roel van bakel notifications githubcom wrote currently none working least pc console shows get virusfound reply email directly view github", "d": "10/2015"}, {"body": "sure since issues single file thought mention anyway", "d": "10/2015"}, {"body": "updated", "d": "10/2015"}, {"body": "looks like resolved closed closing reopen", "d": "10/2015"}, {"body": "btw banana reference comes functional programing papers term already used f cc vsavkin", "d": "10/2015"}, {"body": "nt really care one end however maybe help change mental model thinking current one boxed banana banana box", "d": "10/2015"}, {"body": "thelgevold still nt solve problem", "d": "10/2015"}, {"body": "like idea current style prop based desugared double square brackets twoway biding simple ca nt wrong idea", "d": "10/2015"}, {"body": "personally think removed write desugared form less magical renaming confusing imho", "d": "10/2015"}, {"body": "personally would nt mind meta based binding syntax perhaps one could default know lot people disagree always argued onetime default feels natural opt change tracking needed opposed opting needed default performance enhancement since common need one time binding help compose default view", "d": "10/2015"}, {"body": "igorminar havig would read event realize see confusion think get equally confused way reads binding ohh see bidirectional words see two syntaxes wash nt see one qualitatively better vote either leave support btw throwing error unrecognized syntax silent failure go away", "d": "10/2015"}, {"body": "live boxed banana definitely allow syntaxes issue throwing error unrecognized syntax found", "d": "10/2015"}, {"body": "closing since change required schema support complain extra attributes prevent", "d": "10/2015"}, {"body": "definitively got issue already going close one duplicate", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "open changing sure build systems nt server issue give example setup problematic igorminar matsko think", "d": "10/2015"}, {"body": "defaulted hash location many people nt even know another option stick pushstate default unless overwhelming evidence problematic rather work exposing developers correct serve side configuration provide box wherever", "d": "10/2015"}, {"body": "know simple webservers support mapping minimal configuration something like", "d": "10/2015"}, {"body": "issue", "d": "10/2015"}, {"body": "think force backend concern frontend framework way get push state work configuring server could involve number permutations concerns unified way one size fits solution forcing developer know angular also configure push state server one barrier entry strong proponent easy mode default plenty room power easy configuration", "d": "10/2015"}, {"body": "simpulton less friction newcomers better experience part angular popularity could get started quickly experiment framework without much fuss stick pushstate default unless overwhelming evidence problematic rather work exposing developers correct serve side configuration provide box wherever igorminar imo correct debatable need support older browsers ca nt use push state anyway great diversity web servers used dev prod sure want go business handholding people comes serverside config", "d": "10/2015"}, {"body": "think force backend concern frontend framework right could said backend forcing frontend behavior try improve tooling first think johnpapa implemented something like support history lets get tools good place let people spend time tools come back issue better understanding", "d": "10/2015"}, {"body": "simpulton pkozlowskiopensource nice default adding routing since nt give page refresh surprise enabled", "d": "10/2015"}, {"body": "folks use real server wo nt issue code really onboarding friction understand felt friction share folks think better option tooling brian said want folks use mode wrote simple server called runs launch static server inject css refresh watched files change also relies handles issue mentioned since using much easier time getting folks board saying best way think simple server make much easier still drive folks mode", "d": "10/2015"}, {"body": "simpulton idea took bit time finding solution development think better spafriendly default built angular record easiest solution found issue combine browsersync connecthistoryapifallback plugin used like", "d": "10/2015"}, {"body": "defaulting need backend tweaking aka hash location even tools easy set nt want use easytosetup tool want use tool worry setting backend stuff spin new angularbased prototype", "d": "10/2015"}, {"body": "example confusion current defaults", "d": "10/2015"}, {"body": "use typescript", "d": "10/2015"}, {"body": "example", "d": "10/2015"}, {"body": "fixed csslib change angular necessary adding test futureproofing", "d": "10/2015"}, {"body": "actually think reasonable behavior using hashlocation strategy nt reason also use query params way update query params clientside without page refresh describe aside perhaps aesthetic preference problematic", "d": "10/2015"}, {"body": "page base url irrelevant router url path return", "d": "10/2015"}, {"body": "see behavior set app base reason include domain part url", "d": "10/2015"}, {"body": "app base url page preloadembed data server based param page loaded spa router parameter used navigration path works fine commit", "d": "10/2015"}, {"body": "svrcekmichal chance move example runable plunkr jsfiddle really help save time debugging thanks", "d": "10/2015"}, {"body": "btford tried got", "d": "10/2015"}, {"body": "great work svrcekmichal backlog pretty long definitely spend time looking get chance", "d": "10/2015"}, {"body": "hey check issue solution worked plnkr want something local follow pkozlowskiopensource repo", "d": "10/2015"}, {"body": "yep pointers new docs uptodate getting started guide online soon", "d": "10/2015"}, {"body": "basvandenheuvel see sorry nt know solution visual studio though", "d": "10/2015"}, {"body": "thanks indeed nt able solve problem vs commented line dts file", "d": "10/2015"}, {"body": "correct way around issue using seed added jquery run third party scripts hitting issue commenting fine hacky", "d": "10/2015"}, {"body": "dennisroam closed issue without giving kind solution sorry moment comment line problem run npm update npm install file downloaded comment line nt understand angular would declare var named since thats jquery past years", "d": "10/2015"}, {"body": "think intentional", "d": "10/2015"}, {"body": "specify exact version want install", "d": "10/2015"}, {"body": "want", "d": "10/2015"}, {"body": "ericmartinezr npm install worked thanks", "d": "10/2015"}, {"body": "ericmdantas nt know one keep mind much easier specifying version thanks", "d": "10/2015"}, {"body": "smile", "d": "10/2015"}, {"body": "hey racksen issue related", "d": "10/2015"}, {"body": "duplicate using event handler without handler nt make much sense nt want read dom time like trying example many ways differently", "d": "10/2015"}, {"body": "pkozlowskiopensource say using event handler without handler nt make much sense understand written doc confusing", "d": "10/2015"}, {"body": "noted docs need fixed error message needs fixed docs redone atm covered soon", "d": "10/2015"}, {"body": "one example would save digging code missing semicolon adding fixes indentation remember run linter catches kinds things", "d": "10/2015"}, {"body": "ha nt run travis", "d": "10/2015"}, {"body": "maybe happens clangformat clangformat much faster alexeagle rescue", "d": "10/2015"}, {"body": "run asi linter think paths match file question think linting everything objection probably noisy commit turn", "d": "10/2015"}, {"body": "indeed looks like missing", "d": "10/2015"}, {"body": "workaround", "d": "10/2015"}, {"body": "think deprecated replaced juliemr knows probably update inline doc remove references add doc", "d": "10/2015"}, {"body": "new never exported want need use yes vicb says preferred method unnecessary use jasmine spies internal library allow transpilation dart", "d": "10/2015"}, {"body": "vicb juliemr understand use suggested know used internally make switch jasmine spies", "d": "10/2015"}, {"body": "juliemr consumers setup tests sut observable eg rxjs observable promise expects promise returned test method supposed internal use another way invoking something like callback jasmine tests", "d": "10/2015"}, {"body": "larrifax rxjs topromise method trick guess", "d": "10/2015"}, {"body": "agreed", "d": "10/2015"}, {"body": "yay thanks jumping", "d": "10/2015"}, {"body": "proposed resolution", "d": "10/2015"}, {"body": "proposed resolution would use nodestyle resolution relative paths internally alexeagle said would take couple fixes make work let comment", "d": "10/2015"}, {"body": "alexeagle fix", "d": "10/2015"}, {"body": "alexeagle looks like might fix way", "d": "10/2015"}, {"body": "think fixed closing unless robwormald says otherwise judging imports", "d": "10/2015"}, {"body": "jeffbcross robwormald may know fixed issue projects", "d": "10/2015"}, {"body": "use dependency injection better react anyone wondering reactlike context angular terms like optin", "d": "10/2015"}, {"body": "could add example aetet", "d": "10/2015"}, {"body": "oh would great", "d": "10/2015"}, {"body": "mhevery take look request seems like good boilerplate savings reasonable method making work", "d": "10/2015"}, {"body": "aetet tell seems would like object called context available components ca nt configure di pass class context component selector foo template class foo constructor context context component providers context child directives able inject instance template directives foo class myapp bootstrap myapp", "d": "10/2015"}, {"body": "ok see exactly need thanks one question read doc currently doc preview api responds", "d": "10/2015"}, {"body": "aetet redux demo weeks back tldr redux store wrapped observable stream pushing updates components might find helpful", "d": "10/2015"}, {"body": "working intended docs works", "d": "10/2015"}, {"body": "update turns routersubscribe firing correctly closing bug navbar component subscribes router determines whether display certain menu items depending route active callback subscribe flips flag view typically picks updates reason one case routernavigate view routersubscribe calls right callback callback correctly flips flag view nt update case router fault", "d": "10/2015"}, {"body": "yep still process working docs please bear us", "d": "10/2015"}, {"body": "closing track individual docs", "d": "10/2015"}, {"body": "repo angular please move issue better use gitter chat support questions like thanks tue oct akos vandra notifications githubcom wrote hello creating nested directive similar create directives communicate problem nesting scopes would like access outer scope inside foobar however order use parent parent parent parent way isolate scope select variables panes pane addpane select case using bindtocontroller wo nt either want keep directive reusable without listing variables needs access outer scope reply email directly view github", "d": "10/2015"}, {"body": "think zone auto gc soon async callbacks closed app would mean settimeouts event listeners cleaned sure explicit thing", "d": "10/2015"}, {"body": "tasked johnpapa determining new name john conclusions pascalprecht interested making breaking change angular connect", "d": "10/2015"}, {"body": "understood totally angularconnect mon oct pm brian ford notifications githubcom wrote tasked johnpapa determining new name john conclusions pascalprecht interested making breaking change angular connect reply email directly view github", "d": "10/2015"}, {"body": "polled lot devs informally resounding answers folks liked cited liked routerview similar uiview ngview formal poll like want go dont think name critical call whatever prefer name makes sense seem good", "d": "10/2015"}, {"body": "dont think name critical call whatever prefer name makes sense seem good agree long chance make names nicer think like better opinion", "d": "10/2015"}, {"body": "good first two worried last one going confusing slight preference", "d": "10/2015"}, {"body": "cool let go post angularconnect ofc", "d": "10/2015"}, {"body": "like best personally", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "also similar previous newcomers understand easily meaning component", "d": "10/2015"}, {"body": "favorite well", "d": "10/2015"}, {"body": "routerview", "d": "10/2015"}, {"body": "okay think agreed pr coming", "d": "10/2015"}, {"body": "late party wanted speak favor apparently smiley nice name", "d": "10/2015"}, {"body": "nt think directive represent view think something contains view better name would choice plus really dealing views components serious point would properly descriptive name even clear may view common terminology strictly speaking correct directive anchor container components get loaded component would like calling garage car car goes", "d": "10/2015"}, {"body": "mhevery yes right course exactly accurate less important communicating effectively developers use nt think leads anyone bad path folks spoke seemed click said fine works", "d": "10/2015"}, {"body": "think would better suggests window frame something could anything could lot things suggests router view see google computing", "d": "10/2015"}, {"body": "mind component created next loadnexttolocation example created inside change made animating views switching old new technically viewport nt make sense behavior outlet", "d": "10/2015"}, {"body": "true technically speaking outlet also something plug next good name would something similar", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "also never triggers", "d": "10/2015"}, {"body": "goddamit mind remembers important stuff late using aftercontentinit thisitemschangesnext still seem trigger", "d": "10/2015"}, {"body": "gitter room told replaced still sorry regarding subscribe emitting subscribers change querylist already emits subscribe", "d": "10/2015"}, {"body": "believe known issue yjbanov confirm", "d": "10/2015"}, {"body": "yep sent pr fix", "d": "10/2015"}, {"body": "yjbanov pr angularangulardart angularangular", "d": "10/2015"}, {"body": "igorminar right angulardart breaks us run externalbenchmarks", "d": "10/2015"}, {"body": "ah thanks thu oct yegor notifications githubcom wrote igorminar right angulardart breaks us run externalbenchmarks reply email directly view github", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "get running alpha pub get loading observe smokesrcdefaulttransformer transformers builtin library dart profiler available standalone vm package analyzersrcgeneratedutilitiesgeneraldart error line pos library handler failed import dart profiler dart isolatepatchisolatepatchdart isolatespawnuri dart isolatepatchisolatepatchdart isolatespawnuri package pubsrcdartdart isolatebuffer dart isolatepatchisolatepatchdart startisolate dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage", "d": "10/2015"}, {"body": "rightisleft help", "d": "10/2015"}, {"body": "believe issue fixed loading systemjs scripts ca nt remember details documentation updated get app work rearranging like", "d": "10/2015"}, {"body": "thanks strange follow guide results something like system loaded angularjs typescript internally loads appjs", "d": "10/2015"}, {"body": "killercodemonkey moved system would recommend upgrade remove traceur well", "d": "10/2015"}, {"body": "ericcarraway thanks respond played around versions know upgraded system alpha change something else source code upgrading removing traceur system find appjs need load appjs manually indexhtml thanks advance", "d": "10/2015"}, {"body": "killercodemonkey follow template two things template official one btw using safely move includes traceur avoid recent plnkrs break safely remove well note config file pilar thing make everything work expected see plnkr took config removed traceur updated system versions added config file official template works", "d": "10/2015"}, {"body": "ericmartinezr doukasd thnx helping issues killercodemonkey hopefully plunks provided ericmartinezr able figure setup need simple serverside compilation alternative might want look currently massive overhaul entire documentation including quick start guides updates live shortly setup covered great details", "d": "10/2015"}, {"body": "ericmartinezr works plunker local system error message everything loads hellocomponent replaced thanks help ericmartinezr doukasd play around little bit", "d": "10/2015"}, {"body": "killercodemonkey probably typescript thing local machine differs little bit transpile manually command plnkr seems automagically follow pkozlowskiopensource repo see indexhtml file almost identical plnkr also step convert ts js think might missing", "d": "10/2015"}, {"body": "generated appjs load automatically network section chrome developer console", "d": "10/2015"}, {"body": "killercodemonkey ask gitter channel provide plnkr repo least pastebin see set looks like", "d": "10/2015"}, {"body": "ericmartinezr found put ts compiled ts files subfolder everything works lay directly root dir work without error maybe system find appjs changed configjs set appdir however thanks help", "d": "10/2015"}, {"body": "killercodemonkey problem tried solutions errors gone output please help", "d": "10/2015"}, {"body": "need put appts subfolder project dir eg src", "d": "10/2015"}, {"body": "already supported", "d": "10/2015"}, {"body": "clear read article posted issue right way described therein mark component update specific property triggered event received etc without watch individual properties", "d": "10/2015"}, {"body": "sorry wrong version", "d": "10/2015"}, {"body": "yes please oct alex eagle notifications githubcom wrote hourlynightly build available npm would allow people verify fixes easily head without waiting release give us quicker feedback dogfood users reply email directly view github", "d": "10/2015"}, {"body": "sorta related", "d": "10/2015"}, {"body": "thumbsup", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "yeah thinking thing weekend well angular awesome", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "went ahead tried app seeing slightly different behaviour visually component appears ok however click open dropdown get error item selected dropdown notice second error coming zone could related", "d": "10/2015"}, {"body": "nt know app problems eg chrome latest version see clean browser cache launch app two elements rendered fine whereas elements yes refresh browser dropdown rendered fine menubutton error click dropdown item selected see errors described", "d": "10/2015"}, {"body": "suggest using full version also believe still need force polymer use native shadow dom html var polymer polymer polymerdom shadow try see fixes component display problems", "d": "10/2015"}, {"body": "thanks zyzle fixed display problems remain errors click select menu dropdown", "d": "10/2015"}, {"body": "good know vicb sorry ping know looked previous zonepolymer issue raised one seems component specific come across polymer component", "d": "10/2015"}, {"body": "resolved", "d": "10/2015"}, {"body": "mhevery fix master still seeing behaviour", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "polymer needs everybody uses use dom wrappers know things change see want good support polymer components need detect whether polymer page go api", "d": "10/2015"}, {"body": "also see generic polyfill allows use polymer components framework without needed use special dom api", "d": "10/2015"}, {"body": "hi tbosch made several attempts patch recommended nt solve errors reported issue regarding zone", "d": "10/2015"}, {"body": "note would still need explain tsconfig exists missing one flags would possible parse existing file check required flags values display warning configured properly", "d": "10/2015"}, {"body": "yes could ask wait next release widely available could say think bigger question", "d": "10/2015"}, {"body": "totally agree improve first minutes newcomer spent framework also possiblenecessary download type definition files manu", "d": "10/2015"}, {"body": "tsd step typings included npm distro see context", "d": "10/2015"}, {"body": "propose add bit magic postinstall script runs command hacking working directory parent nodemodules piping errors hide much magic shipping npm saying", "d": "10/2015"}, {"body": "alternately npm install g angularcli add simplest first step npm installs inits tsconfig", "d": "10/2015"}, {"body": "alexeagle thanks", "d": "10/2015"}, {"body": "yeah since cli wo nt primary ftue point maybe worth trouble plus never convinced hiding everything programmers useful end since denied chance build good mental model things work", "d": "10/2015"}, {"body": "another argument putting tsconfigjson toplevel probably angularcli user reinstalls get extra file nt", "d": "10/2015"}, {"body": "rise good point specific ideas could make better issue class reason want able called three different ways declaration needs issue click probably want see ideas", "d": "10/2015"}, {"body": "obvious answer place docs declaration component problem var break dgeni presents docs", "d": "10/2015"}, {"body": "try morning nothing else think duplicate tsspecific portion docs places", "d": "10/2015"}, {"body": "alexeagle still coming", "d": "10/2015"}, {"body": "wait till later release", "d": "10/2015"}, {"body": "checked startswith safari return error think reason startswith one features tsc transplie typescript issue", "d": "10/2015"}, {"body": "available browsers uses currently compatibility older browsers using project solve issue", "d": "10/2015"}, {"body": "yes called", "d": "10/2015"}, {"body": "thanks pascalprecht", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "ericmartinezr thanks", "d": "10/2015"}, {"body": "could change script replacement check current url contains wo nt load bundle would work rather create yet another set build artifacts single artifact uses bundle default load individual files based url flag going easier maintain could make nonbundled version default need change tests benchmarks", "d": "10/2015"}, {"body": "might looking outdated docs working example works close issue", "d": "10/2015"}, {"body": "ok see difference actually wondering possible directly put", "d": "10/2015"}, {"body": "ssougnez always need least single root component bootstrap application", "d": "10/2015"}, {"body": "closing one hopfully questions clarified let move discussion", "d": "10/2015"}, {"body": "igorminar besides could update version remove traceur", "d": "10/2015"}, {"body": "igorminar sure used nt see mentionned would nt implicit mode kick used sent pr plunker update ts see", "d": "10/2015"}, {"body": "igorminar see vicb plunkers request thus plunker nt involved systemjs compilation plunker bumps adjust plunker template", "d": "10/2015"}, {"body": "vicb indexhtml ericmartinezr remove traceur later would break relatively recent plunks", "d": "10/2015"}, {"body": "landed", "d": "10/2015"}, {"body": "vsavkin feel free drop priority workaround", "d": "10/2015"}, {"body": "looks resolved version", "d": "10/2015"}, {"body": "tlancina fact bug use eventemitter refactored returned futures releases able use directly querychangessubscribe", "d": "10/2015"}, {"body": "ericmartinezr great thanks feels much better using private property", "d": "10/2015"}, {"body": "duplicate", "d": "10/2015"}, {"body": "ah nt see dup closing", "d": "10/2015"}, {"body": "rolandjitsu possible exception raised inside subscription swallowed still experiencing issue latest angular", "d": "10/2015"}, {"body": "jeffbcross actually nt tried yet got stuck trying fix svg issues updated latest definitely give shot though tell tried switch promises longer issue", "d": "10/2015"}, {"body": "plunker navigate home test thanks brandonroberts", "d": "10/2015"}, {"body": "btford idea", "d": "10/2015"}, {"body": "btford idea long fix bug", "d": "10/2015"}, {"body": "wed oct vincent gu\u00e9d\u00e9 notifications githubcom wrote btford idea long fix bug reply email directly view github", "d": "10/2015"}, {"body": "headers inside options type try instead", "d": "10/2015"}, {"body": "mgechev thanks help way nt make lot sense tried result contenttype get changed", "d": "10/2015"}, {"body": "robhicks would send plnkr reproduces issue", "d": "10/2015"}, {"body": "supposed work match nodes first gets nodes similar template ie given node light dom projected", "d": "10/2015"}, {"body": "looking added master released soon look integration test", "d": "10/2015"}, {"body": "closing works expected", "d": "10/2015"}, {"body": "excellent news looking forward release thanks", "d": "10/2015"}, {"body": "added example interested", "d": "10/2015"}, {"body": "thnaks lot works well", "d": "10/2015"}, {"body": "renamed must specified function returns directive definition typescript function pagedirective return restrict templateurl etc pagedirective canactivate function injectables angularmodule myapp directive page pagedirective", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "works fine ca nt minify code use di canactivate method strict di", "d": "10/2015"}, {"body": "found solution", "d": "10/2015"}, {"body": "following question might simply stupid give try leading slash going optional one level routing go could nt make shorthand syntax bit intuitive looks sth like might totally miss something maybe simplifies use cases otherwise need explain upfront dsl way powerful actually need particular case stick brackets thinking loud would nt surprised reasons ca nt work", "d": "10/2015"}, {"body": "rhs binding needs js literal would nt work nt get tricky sugar proper dsl note make optional rather adds new option link without leading slash distinct semantics", "d": "10/2015"}, {"body": "note make optional rather adds new option link without leading slash distinct semantics ah course hey thanks clarifying", "d": "10/2015"}, {"body": "variable string right", "d": "10/2015"}, {"body": "alias call", "d": "10/2015"}, {"body": "johnpapa correct reference type ericmartinezr opposed alias nt think serves explain meaning better name alias suggests alternative way refer route primary typical case", "d": "10/2015"}, {"body": "think clear conveys name route", "d": "10/2015"}, {"body": "like better well", "d": "10/2015"}, {"body": "nt provide name default something perhaps something defined component", "d": "10/2015"}, {"body": "guess even make default case using component name", "d": "10/2015"}, {"body": "seems semantic well set default component name currently", "d": "10/2015"}, {"body": "guess even make default case using component name talking would break minification nt like idea basing default name property component especially static property moves route name away route defined developer would mentally map route component", "d": "10/2015"}, {"body": "prefer also previous propery", "d": "10/2015"}, {"body": "fine either way would love hear confusions tho", "d": "10/2015"}, {"body": "pascalprecht folks asked alias another route want mimic put name route", "d": "10/2015"}, {"body": "ha third one nice admit cburgdorf also asked property first place especially single component loaded yea let go", "d": "10/2015"}, {"body": "yeah easy win imo", "d": "10/2015"}, {"body": "yep seems like better fit", "d": "10/2015"}, {"body": "would considered good first contribution interested tackling", "d": "10/2015"}, {"body": "tyleranton yep great think accepting either would best fully depreciate option bit later", "d": "10/2015"}, {"body": "hi btford working added classes implementing interface constructors renamed everywhere including unit tests left one test syntax tests passing q throw error prefer one passed", "d": "10/2015"}, {"body": "throw sun oct vamsi v notifications githubcom wrote hi btford working added name string classes implementing routedefinition interface constructors thisname name renamed name everywhere including unit tests left one test syntax q throw error prefer one name passed reply email directly view github", "d": "10/2015"}, {"body": "adding beta since breaking change pr open", "d": "10/2015"}, {"body": "alexpods see saw question error showed nt seem anything like one see repro", "d": "10/2015"}, {"body": "ericmartinezr ouh thanks nt seen close dup", "d": "10/2015"}, {"body": "nope angular still alpha exactly wealth component libraries existing js libraries used via wrapper like angular current state components super experimental mdinput definitely going change long simply nt template nt exist wrote", "d": "10/2015"}, {"body": "got thank much", "d": "10/2015"}, {"body": "jelbourn hi jelbourn mellbourn point existing js libraries used via wrapper like angular saying angular material used inside angular project far see currently public tools consume angular components inside ngupgrade seems collection ideas would use angular material inside angular know sample project thanks", "d": "10/2015"}, {"body": "mellbourn would ngupgrade tool bit developed", "d": "10/2015"}, {"body": "posterity correcting code plnkr following js import component directive view output bootstrap eventemitter directive selector something host input inputhandler outputs fired class somethingdirective output fired eventemitter new eventemitter inputhandler thisfirednext component selector hello view template directives somethingdirective class hellocmp count number firedhandler thiscount resetcount thiscount bootstrap hellocmp count one one thanks ericmartinezr", "d": "10/2015"}, {"body": "colspan h sugar colspan h turn means bind h colspan property colspan property html colspan attribute want bind attribute use attrcolspan h syntax", "d": "10/2015"}, {"body": "nt look like systemjs config correct see working action send plunk need help please direct support questions keep github issues bug reports feature requests thnx", "d": "10/2015"}, {"body": "pkozlowskiopensource nt know close issue example html angular quickstart html body height configure system loader systemconfig defaultjsextensions true systemimport app nt work please nt use nodemodules use cdn changed systemjs error occurs", "d": "10/2015"}, {"body": "closed issue since nothing angular side pb systemjs configuration support question questions belong gitter support channel talking gitter explicitly asked provide plunker help short github place support questions let conversation gitter", "d": "10/2015"}, {"body": "ok thought problem sorry pkozlowskiopensource", "d": "10/2015"}, {"body": "makes sense think already supported property decorators", "d": "10/2015"}, {"body": "would survive minification attribute names valid js identifiers ex", "d": "10/2015"}, {"body": "pkozlowskiopensource attribute names valid js identifiers could normalized lowercamelcase like html property names normalization minification definitely seems like valid point", "d": "10/2015"}, {"body": "pkozlowskiopensource attribute names valid js identifiers could normalized lowercamelcase like html property names normalization course introduces yet another thing remember", "d": "10/2015"}, {"body": "taking tricks consistent possible supported platforms ie dart", "d": "10/2015"}, {"body": "believe hot reloading angular doable however issue seems scope repository seems like good discussion gitter", "d": "10/2015"}, {"body": "yeh many parts workflow nt quite figure yet hot reload one understand importance kickingass workflow lot work going moment priority figure proper packagining bundling story though going close one since immediately actionable radar sure", "d": "10/2015"}, {"body": "printing add parents", "d": "10/2015"}, {"body": "sounds like pain chaining multiple pipes quite common could nt associativity changed possible chanin pipes without needing paranthesis", "d": "10/2015"}, {"body": "gkalpak exactly thoughts especially works fine going reopen one vicb let conversation one", "d": "10/2015"}, {"body": "gkalpak exactly syntax one currently angular", "d": "10/2015"}, {"body": "ref cc mhevery", "d": "10/2015"}, {"body": "agreed parenthesis necessary", "d": "10/2015"}, {"body": "fwiw problem appears limited pipes parameters works fine", "d": "10/2015"}, {"body": "wrote morning describing issues running zonescheduler would solve", "d": "10/2015"}, {"body": "robwormald guess got doublementioned reply make sure follow saying performance benefit would avoid intermediate digests observable chain progressing async tasks part chain would great nt think implementation could rely pipe though tbh zones kind mysterious sure zone scheduler implementation would actually achieve would great", "d": "10/2015"}, {"body": "danculley may related similar problem waiting fix merged test", "d": "10/2015"}, {"body": "point different code path template bindings actions amp would shortcircuit later case today single code path within change shortcircuit template bindings amp actions behavior vsavkin remember change occurred plan shortcircuiting future", "d": "10/2015"}, {"body": "see", "d": "10/2015"}, {"body": "note contrast original new elements shadowdom work always project using order elements", "d": "10/2015"}, {"body": "think approach useful ngcontent allows devs create templates without gotchas", "d": "10/2015"}, {"body": "refs apple microsoft pushed back select approach due concerns around complexity performance careful perf implication whatever choose implement let start collecting use cases selector specificity would useful", "d": "10/2015"}, {"body": "vicb happens compilation eventually done build step also know new compiler almost impact compile performance essentially add cost one sort operation ngcontent elements template need calculate specifity css selector already parsed via number", "d": "10/2015"}, {"body": "remember static see", "d": "10/2015"}, {"body": "useful link thanks", "d": "10/2015"}, {"body": "common scenario another reallife example simple bootstrap panel directive", "d": "10/2015"}, {"body": "pawel example require special projection order selectors nt overlap thu oct pawel kozlowski notifications githubcom wrote common scenario another reallife example simple bootstrap panel directive reply email directly view github", "d": "10/2015"}, {"body": "tbosch impression template linked would hit pb described understand description would project everything would nothing left anyway going retest scenario report back", "d": "10/2015"}, {"body": "look probably work around time escaping slash instantiating regexp object string yegor notifications githubcom schrieb mi okt demands var urlwithschemare g formatted var urlwithschemare g reply email directly view github", "d": "10/2015"}, {"body": "fix review", "d": "10/2015"}, {"body": "ugh fix broke behaviour regexps take wee bit longer", "d": "10/2015"}, {"body": "ok fixed", "d": "10/2015"}, {"body": "nt issue posted angulario related documentation", "d": "10/2015"}, {"body": "yes belongs angulario", "d": "10/2015"}, {"body": "examples tests use bundles way switch using bundle vs individual files supporting incremental rebundling option moment takes long", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "rob jeff address todaytomorrow", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "regression test complete today", "d": "10/2015"}, {"body": "ericmartinezr plunker syntax error would useful well yeh confirm happens saw today well nt time dig", "d": "10/2015"}, {"body": "pkozlowskiopensource ok goes", "d": "10/2015"}, {"body": "affects quick reference igorminar look potentially assign someone", "d": "10/2015"}, {"body": "ericmartinezr still reproduce error related ts angular seems fixed type would explicit type given ie sure version compiler used plunker still fails", "d": "10/2015"}, {"body": "vicb thanks issue using like said transpiles posted thinking may could something thanks advice", "d": "10/2015"}, {"body": "works tsc plunker using see", "d": "10/2015"}, {"body": "igorminar yes using machine upgraded works nice thanks", "d": "10/2015"}, {"body": "important blocking adamdbradley says another way around", "d": "10/2015"}, {"body": "adamdbradley tbosch discussed today believe tbosch said correct behavior tbosch verify", "d": "10/2015"}, {"body": "tbosch would surprised new behaviour would correct one remember used logic compiler classes set host merged ones already present host element imo made sense would rationale changing merging behaviour", "d": "10/2015"}, {"body": "initial thought treating special case seems wrong intuitive users however alternatives seem right either eg using would clearly show special case however one would use value adding previous behavior back ie host attribtues get merged attributes element", "d": "10/2015"}, {"body": "looks like bug fix element already projected projected would already projected would projected feel free reopen think something wrong", "d": "10/2015"}, {"body": "vicb saying bug must say could understand takes nothing reproject looks like valid common usecase must say nt know solve properly use negation selectors", "d": "10/2015"}, {"body": "saying bug yep works expected looks like valid common usecase well seems like removed wc standard using instead useful used", "d": "10/2015"}, {"body": "vicb hear saying alternative solution suggestion adamdbradley trying achieve must say bumped similar usecases resort hacks drop functionality", "d": "10/2015"}, {"body": "would one solution control templates probably come solutions", "d": "10/2015"}, {"body": "one solution could css", "d": "10/2015"}, {"body": "guess see happening second grabbing everything include third ngcontent right however think valid use case developers would want projected content go specific areas template working great work way web components different output web components", "d": "10/2015"}, {"body": "tbosch could help describe changed future plans", "d": "10/2015"}, {"body": "problem stay even slots proposal also distributes based order used nodes however going away standard free define meaning right thing would project ngcontent elements based selector specifity ie first project long selector project remaining ones ngcontent selector created issue track adam please feel free issue tobias wed oct victor berchet notifications githubcom wrote tbosch could describe changed future plans reply email directly view github", "d": "10/2015"}, {"body": "sorry anchors statically analyzable hence dynamically generated way dynamically create local variables programing languages perhaps place directive locations query directive using retrieve way", "d": "10/2015"}, {"body": "trying accomplish watching variable could provide plnkr reason want watch variable", "d": "10/2015"}, {"body": "example plnkr able watch observe component variables example want create service library need observe variables without relate props template", "d": "10/2015"}, {"body": "danicomas could expand use case component property change result event trigger change detection thanks zonejs", "d": "10/2015"}, {"body": "vicb probably component yes services libraries controls need power used objectobserve ecmascript works well look import component view bootstrap component selector myapp view template hello name class myappcomponent name string constructor thisname alice bootstrap myappcomponent typescript topic instead problem think use vicb thing example changing child props want detect component top variablesprops", "d": "10/2015"}, {"body": "believe asking arbitrary watch properties objects like angular added angular requires would ship parser every release would prevent offline compilation fast bootstrap mobile devices tradeoff knowingly made wontfix", "d": "10/2015"}, {"body": "ok mhevery know recommend use observe good idea look", "d": "10/2015"}, {"body": "ocombe could please move thnx", "d": "10/2015"}, {"body": "woops sorry", "d": "10/2015"}, {"body": "cexbrayat try number fixes went released yesterday", "d": "10/2015"}, {"body": "pkozlowskiopensource got admit yet wanted tests green moving far saw commits though changes part", "d": "10/2015"}, {"body": "cexbrayat several problems several fixes would advise going straight unstable", "d": "10/2015"}, {"body": "pkozlowskiopensource confirm", "d": "10/2015"}, {"body": "nt think make bound elements tbosch please comment reason used different mechanism locating text nodes new mechanism faster unlikely would add back perhaps could suggest better syntax tests could work", "d": "10/2015"}, {"body": "thanks considering understand point really problem think really need easy way query elements tests among things got around tests right ebook testing pretty much everything think friendly enough least knowwe right let take simplified example username userusername awesome username tcboverridetemplate registerformcmp html createasync registerformcmp formcmp gt formcmpdebugelementcomponentinstanceuserusername c\u00e9dric formcmpdetectchanges asserts let input formcmpdebugelementquery bycss input nativeelement expect inputvalue tobe c\u00e9dric let small domchildnodes domchildnodes formcmpdebugelementquery bycss form nativeelement expect small tohavetext c\u00e9dric awesome username things could straightforwardless verbose really long maybe could something like horrible elements text bindings bound elements css query work anymore quick fix make tests green right nt know could access element ca nt queried moment missing something obvious something like would better perhaps would give username userusername awesome username tcboverridetemplate registerformcmp html createasync registerformcmp formcmp gt formcmpuserusername c\u00e9dric formcmpdetectchanges asserts let input formcmp find input expect inputvalue tobe c\u00e9dric let small formcmp find small expect small tohavetext c\u00e9dric awesome username", "d": "10/2015"}, {"body": "agree annoying ran yesterday assigning take look see modify search text bindings addition normal bound elements fyi going angularconnect priority bucket", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "even need injectasync ca nt provide last argument callback also thinking make callback return promise back automatically know call done importantly propagate display errors automatically without users anything could shortened even tcb specific helper since need able override metadata via tcb creating instance component things get tricky", "d": "10/2015"}, {"body": "ca nt provide done last argument callback depends plan drop mirrors reflection tests dart", "d": "10/2015"}, {"body": "stab nt looked would work dart yet provide function asked works asynchronously js import inject stuff inject classa classb b done gt done also works synchronously js import inject stuff inject classa classb b gt sync done function", "d": "10/2015"}, {"body": "victor tests need runtime compiler works mirrors wed oct pm julie ralph notifications githubcom wrote stab master juliemr testapi nt looked would work dart yet reply email directly view github", "d": "10/2015"}, {"body": "design best api possible jsts necessary create separate api dart keep mind api meant angular apps nt need used angular core test suite needs transpilable real world dart wed oct pm tobias bosch notifications githubcom wrote victor tests need runtime compiler works mirrors wed oct pm julie ralph notifications githubcom wrote stab master juliemr testapi nt looked would work dart yet reply email directly view github reply email directly view github", "d": "10/2015"}, {"body": "agreed however possible really helpful able use angular core test suite examples documentation test make work smoothly would happy", "d": "10/2015"}, {"body": "hi folks took first stab made first parameter parameter essential callback reliable home function nt think huge deal tester saying seems easier first position things equal thrilled found way one either sync async approximately manner jasmine callback sure like know fn parameter list", "d": "10/2015"}, {"body": "wardbell current implementation pretty naive check length parameters injected function greater length types inject", "d": "10/2015"}, {"body": "igor mentioned feature version namely callback returns promise wrapper appends requisite trailer alleviates need developer remember sequence find absent many tests works great long test function ready promise return time bit clumsy testing something uses observables instead promises nt enough observable testing experience recommend best practice yet", "d": "10/2015"}, {"body": "juliemr sweetly naive probably sufficient time must tell test developer past injected service sideeffect without actually needing cases listed trailing inject list position case could omit end parameter list maybe clever hard time recommending approach obviously wo nt work cool less perfect function folks write tests bit forgiving sophisticated broader angular audience otoh want api approach standard mainstream angular apis probably play games go separate explicit methods nt strong feelings either way", "d": "10/2015"}, {"body": "note get working dart see", "d": "10/2015"}, {"body": "ok latest greatest still progress idea commit commenting directly strategy make separate test library use outside core angular may merge two later lets us develop without worrying transpiling dart without make massive changes core tests wait returned promises tests example tests problem area user asynchronous work forgets promise masked synchronous test pass see test may even cause later unrelated test fail would appreciate comments", "d": "10/2015"}, {"body": "also wardbell sure mean entire angular audience writes tests right", "d": "10/2015"}, {"body": "nt know else document test goes bad nt return promise much different failing provide done param standard jasmine test good news vs code displays massive number red squiggles forget return promise injectasync prototype maybe another reason separate inject injectasync methods", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "longer require traceurruntime please update", "d": "10/2015"}, {"body": "agree igor able run alpha also installing traceur alpha point given tutorial official website uses anybody try follow getting started page face error unless install traceur missing website step issue update website npm install step either npm install save systemjs npm install save systemjs traceur", "d": "10/2015"}, {"body": "sorry docs refresh posted later week tue oct pm ultrasonicsoft notifications githubcom wrote agree igor able run alpha also installing traceur alpha point given tutorial official website uses anybody try follow getting started page face error unless install traceur missing website step issue update website npm install step either npm install save systemjs npm install save systemjs traceur reply email directly view github", "d": "10/2015"}, {"body": "working new parser output source linecolumn make reporting lot nicer tue oct pm ericmartinezr notifications githubcom wrote missing ngfor ngif example throws exception template parse errors ca nt bind ngforof since nt known native property hello gt div nthchild ngfor item items property binding ngforof used directive embedded template hello gt div nthchild ngfor item items note message long depending html structure print entire tree error message represents piece code view template ngfor directive error much shorter exception ca nt bind ngforof since nt known property element matching directives corresponding property repro repro reply email directly view github", "d": "10/2015"}, {"body": "tbosch thanks closing dup", "d": "10/2015"}, {"body": "seems related adding directives array", "d": "10/2015"}, {"body": "solution instead import routerdirectives add directives array", "d": "10/2015"}, {"body": "ran using directives individually", "d": "10/2015"}, {"body": "hm seems like issue typings alexeagle mprobst offer advice", "d": "10/2015"}, {"body": "yeah typings issue since get around changing type inject routerdirectives runtime issues general nt mind using umbrella constructs like routerdirectives coredirectives big deal basically added issue awareness case developers come across", "d": "10/2015"}, {"body": "think hope improve experience next dev runs issue", "d": "10/2015"}, {"body": "btford looks subtype subtype actually find type looking wrong place", "d": "10/2015"}, {"body": "mprobst defined dts template", "d": "10/2015"}, {"body": "jeffbcross see well empty interface ie requirements type whereas essentially explains compatible nt know enough di say right way fix though could make extend make markerempty interface maybe vsavkin opinion", "d": "10/2015"}, {"body": "would work", "d": "10/2015"}, {"body": "nope still fails vicb", "d": "10/2015"}, {"body": "bug template precompiler fix", "d": "10/2015"}, {"body": "andresaraujo able handle absolute uris properly could give try report issue fixed", "d": "10/2015"}, {"body": "closing please reopen issue still", "d": "10/2015"}, {"body": "sample code typescript import inject elementref dynamiccomponentloader componentmetadata component viewmetadata view bootstrap coredirectives component selector burner view template directives coredirectives export class burner constructor yeah raze ground mhuh mhuh mhuh throw new error component selector root view template directives coredirectives export class root constructor inject elementref elementref inject dynamiccomponentloader dynamiccomponentloader thiselementref elementref thisdynamiccomponentloader dynamiccomponentloader burn burner component throws exception within constructor thisdynamiccomponentloaderloadnexttolocation burner thiselementref componentref gt nt expect code run promise rejected yet find code execute consolelog wat throw new error crazy nightmare gt definitely nt expect run checkout exception thrown resolve handler yet find code execute consolelog wtf bootstrap root console output", "d": "10/2015"}, {"body": "discovered easy create typescriptangularjs plnkr awesome sample onlinerunnable form", "d": "10/2015"}, {"body": "see promises work nt directly related angular", "d": "10/2015"}, {"body": "jessegood unless missing something issue nt seem relevant please correct wrong issue unhandled exceptions issue angular api method combination default angular exceptionhandler returning promise behave like promises behave short running default exceptionhandler results output console never happen breaks promise specification crazy unintuitive could solved either fixing whatever bug might causing perhaps zonejs issue alternatively changing default exceptionhandler rethrow exceptions instead swallowing", "d": "10/2015"}, {"body": "hack angular library change default exceptionhandler rethrow exceptions instead swallowing promises behave expected words changing appears fix problem note false means swallow exceptions true means rethrow exceptions brings original question posed issue reason exceptionbinding default exceptionhandler swallow exceptions instead rethrowing", "d": "10/2015"}, {"body": "see impression linked issue would get official comment angular team", "d": "10/2015"}, {"body": "idea behind throwing helpful tests since something goes wrong test want error test runner message console exception handler last line defense exception happened nt know default log console implying throwing better user experience logging cases", "d": "10/2015"}, {"body": "looking expansion simple example nt matter last line defense case promises contract violated exception handled get chance deal exception handler getting involved responding errors within promise chains inserting first line defense preventing adding lines defense maybe bug exception handler involved promise chains", "d": "10/2015"}, {"body": "adamdbradley could retry current master bug element indices mixed", "d": "10/2015"}, {"body": "released bug fixed", "d": "10/2015"}, {"body": "yup everything working thanks", "d": "10/2015"}, {"body": "everything fine comes distributing nodes shadow dom content components swapped check html", "d": "10/2015"}, {"body": "yes right still buggy", "d": "10/2015"}, {"body": "oh great catch thanks pointing nt even notice", "d": "10/2015"}, {"body": "commitbranch work", "d": "10/2015"}, {"body": "commitbranch work master", "d": "10/2015"}, {"body": "phamcharles yet working take waiting master", "d": "10/2015"}, {"body": "mgechev go work picked nt time", "d": "10/2015"}, {"body": "see need update npm least", "d": "10/2015"}, {"body": "closing duplicate", "d": "10/2015"}, {"body": "depricatedremoved hence adding support", "d": "10/2015"}, {"body": "hi achive scenario still nt see case supported", "d": "10/2015"}, {"body": "davidgangel think may useful case", "d": "10/2015"}, {"body": "ericmartinezr thank going wait final outcome linked ticket see use", "d": "10/2015"}, {"body": "related vsavkin pointed rxjs creates default observable export module must imported order include operators subsequently mutates prototype also related discussion reactivex side including core operators part observable would make certain optimizations straight forward terms things like overriding operators scalarobservable example might also slightly reduce output size eliminated modulerelated output code doubts point option", "d": "10/2015"}, {"body": "related discussion rxjs side", "d": "10/2015"}, {"body": "shortterm think probably best depend main rxjs library output people need want operators longterm think probably come something interesting", "d": "10/2015"}, {"body": "looks promising", "d": "10/2015"}, {"body": "robwormald yeah jayphelps mentioned morning named couple caveats escape", "d": "10/2015"}, {"body": "biggest issues see angularrxjs written typescript supports technically could transpile ts run rollup wtf also requires consumers use module packer tough crowded field people loving gruntgulpbroccolibrowserifywebpackwhatever soangular would use worried rx nt exposed users angular internally would used instead creating yet another module packer community needs create library ast ast bolted onto module packer work others depending whether use asts format probably missing something probably good reason richharris nt go route", "d": "10/2015"}, {"body": "jayphelps interested better understand needs issue bundle needs exported using custom format probably missing something probably good reason richharris nt go route two main reasons performance code readability generating code ast costly manipulating original source code rollup uses utility called magicstring sourcemapaware way nt jump hoops preserve original formattingcommentsetc", "d": "10/2015"}, {"body": "richharris sure mean issue theres underlying quest ship monolithic project like rxjs easy way consumers shake unused operators considering rollup merely pointing nt feasible angular case typescript somehow worked around would still require angular devs actually use rollup module transpiler question feasibility cringe yetanothermoduletranspiler syndrome go every year feels like since ts es share exact syntax importexport seems would possible parse build module tree ignore everything else files shaking source fed normal build pipelines including preferred module transpilation process could remove files leaving kept ones untouched thoughts would certainly incur perf penalty transpiler directly aware flexible devs still make love preferred language tses transpiler devs could limit usage prod builds build time relatively less concern", "d": "10/2015"}, {"body": "second thought certainly complicated parsing importexports primarily exports side module exports identifier nt parse rest file ca nt shake code identifier references unless none exports file ever imported could exclude entire file also sure could reliably parse export without also parsing inner body item exported eg export function ca nt find function boundryclosing curly without parsing function body hmmm", "d": "10/2015"}, {"body": "exactly treeshaking work need work level individual statements rather modules view modularising things extent one tool responsible generating dependency graph another responsible bundling wrong direction going aside inefficiencies would create fact need create yet another bundler usability standpoint need tools integrated less would still require angular devs actually use rollup module transpiler mean use something grinning also requires consumers use module packer tough crowded field people loving gruntgulpbroccolibrowserifywebpackwhatever rollup alternative browserify webpack gruntgulpbroccoli basically coordinate activity underlying tools like browserifywebpackrollup", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "though nt let stop bundling discussion feel free add thoughts", "d": "10/2015"}, {"body": "richharris yum referring bundlers made gruntgulp specifically like", "d": "10/2015"}, {"body": "jayphelps must rule grunt gulp plugins already exist based longsincedeprecated project need use directly slot existing build process", "d": "10/2015"}, {"body": "hey repository angular found issues protractor report need support use gitter channel", "d": "10/2015"}, {"body": "hey minko thanks directing right page new github well learning", "d": "10/2015"}, {"body": "igorminar understand correctly nt bind xhr mockxhr nt bind xhrimpl either nt think really solves problem user still needs reach angular privates order get actual xhrimpl misunderstanding reopen", "d": "10/2015"}, {"body": "oh crap need fix", "d": "10/2015"}, {"body": "thelgevold see", "d": "10/2015"}, {"body": "ericmartinezr thanks", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "naomiblack anyone assigned causing us pain latency tests", "d": "10/2015"}, {"body": "might exactly want using classactive samples since gives active class active route based boolean check example maybe wrap directive though hide url passed function", "d": "10/2015"}, {"body": "johnpapa maybe getting wrong want style list links ones active differently matter angular routerlinks right could nt use parent css selector already introduce class link needed thing every routerlink active inactive basically default anyways unless want make links routerlinks look exactly entire application doubt nt need add extra classes provide information routerlinks considered inactive default tue oct torgeir helgevold notifications githubcom wrote might exactly want using classactive samples since gives active class active route based boolean check example maybe wrap directive though hide url passed function reply email directly view github", "d": "10/2015"}, {"body": "yes applying anchors broad container class element contains anchors ways adding classes code generated router link supply attributes way identify elements use hierarchical parent child ones ass one anchor thought made sense adding active class could add regular one", "d": "10/2015"}, {"body": "sure common style links router links way actually nt even know css links upgraded routerlink routerlinkactive also rather allow add css classes defined user never know conflict surrounding css would vote want style list links rather define context css module nt matter links generated happen remove routerlink directive reason navigate imperatively css wo nt work anymore tue oct john papa notifications githubcom wrote yes applying anchors broad container class element contains anchors ways adding classes code generated router link supply attributes way identify elements use hierarchical parent child ones ass one anchor thought made sense adding active class could add regular one reply email directly view github", "d": "10/2015"}, {"body": "johnpapa pascalprecht guess would ok add active inactive class cases relates anchor tag find typically add styles element around anchor often li element find classactive approach desirable since decoupled anchor tag", "d": "10/2015"}, {"body": "cc matthewjh", "d": "10/2015"}, {"body": "vicb please look today determine must fix due tomorrowwed surface looks serious enough", "d": "10/2015"}, {"body": "sure find time look today check first thing tomorrow", "d": "10/2015"}, {"body": "pb returns undefined return polymer try come fix asap", "d": "10/2015"}, {"body": "thanks mon oct pm victor berchet notifications githubcom wrote pb var target iswebworker amp amp self returns undefined return window polymer addeventlistener webcomponentsready resolve try come fix asap reply email directly view github", "d": "10/2015"}, {"body": "zyzle thanks bug report zonejs fixed next angular release include fix", "d": "10/2015"}, {"body": "vicb thanks", "d": "10/2015"}, {"body": "changed yjbanov intentional commit message nt mention change", "d": "10/2015"}, {"body": "marking determine intentional", "d": "10/2015"}, {"body": "let check mhevery first reviewed change aware reasons done", "d": "10/2015"}, {"body": "spoke mhevery intentional change needed hide internal apis also makes sense make components looks like elements whether test components yjbanov please update change log close issue thanks", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "thanks", "d": "10/2015"}, {"body": "yjbanov igorminar thanks considering issue adding changelog may inquire plan better test api currently tests borderline readable imho", "d": "10/2015"}, {"body": "yes process improving testing apis cc juliemr wed oct c\u00e9dric exbrayat notifications githubcom wrote yjbanov igorminar thanks considering issue adding changelog may inquire plan better test api currently tests borderline readable imho reply email directly view github", "d": "10/2015"}, {"body": "hi please update node version recommend using nvm", "d": "10/2015"}, {"body": "issue tmp folder cleaned properly might related verify repro issue tmp folder manually removed", "d": "10/2015"}, {"body": "nt help investigating", "d": "10/2015"}, {"body": "observations works works commenting part works commenting watcher part could kind race condition filesystem access", "d": "10/2015"}, {"body": "nt know commenting helps really odd trace inside checkenvironment causing problem could give us hints mon oct pm marc laval notifications githubcom wrote observations karma start karmajsconfjs works gulp testunitjsci works commenting toolscheckenvironment part gulp testunitjs works commenting watcher part could kind race condition filesystem access reply email directly view github", "d": "10/2015"}, {"body": "obviously cause problem tries open file many already opened digging bit found executing file handle available means next file access fail karma impacted uses open files adding long synchronous wait loop start nt solve problem adding settimeout eg yet clear comes karma gracefulfs node windows", "d": "10/2015"}, {"body": "mlaval patch worked perfectly thanks possibility adding patch master branch fix situation karmagracefulfsnode get fixed little bit pain file always dirty local folder anyway something live guess sigh", "d": "10/2015"}, {"body": "btw case gives clues run tests applying patch lot much better watching instead full modules folder way runs seems like still file handles avail least one", "d": "10/2015"}, {"body": "sorry bumping issue upgraded ran issue prior nt happen tried mlaval patch nt work instead failing crashing throws error message pass gets stuck posterior step part log get stuck last line even tried giving time settimeout ubuntu lts vm fwiw edit followed comment also removed patch edited added rebooted working correctly", "d": "10/2015"}, {"body": "windows still situation latest master upgrading node nt help", "d": "10/2015"}, {"body": "marc let debug angular connect office fri oct marc laval notifications githubcom wrote windows still situation latest master upgrading node nt help reply email directly view github", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "alexeagle put since think essentialurgent anyone speaking angular connect please move think blocking anyone", "d": "10/2015"}, {"body": "part change typings demoed ca nt release typings expose private constructors move mon oct pm naomi black notifications githubcom wrote alexeagle put since think essentialurgent anyone speaking angular connect please move think blocking anyone reply email directly view github", "d": "10/2015"}, {"body": "proposal reexported users export abstract class compiler internal protected foo number void consolelog thisfoo reexported toplevel export class compiler extends compiler constructor foo number super thisfoo foo note protected member exposed dts file even though private members needs must protected subclass assign", "d": "10/2015"}, {"body": "mhevery tbosch take look comment make change widely cc igorminar soln current problem symbols injectable runtime value disappeared", "d": "10/2015"}, {"body": "need put rather otherwise seem reasonable", "d": "10/2015"}, {"body": "referenced compiler another way also yet thought translate dart know nt allow protected right mon oct pm mi\u0161ko hevery notifications githubcom wrote need put foo compiler rather compiler otherwise seem reasonable reply email directly view github", "d": "10/2015"}, {"body": "ohh see would make compiler totally abstract need complicate splitting implementation reexported users export abstract class compiler abstract void reexported toplevel export class compiler extends compiler protected foo number", "d": "10/2015"}, {"body": "ah yes course bigger change protected needed keep shorthand property declarations constructor signature well", "d": "10/2015"}, {"body": "alexeagle misko version result bigger change expect code splitting version complicated implement", "d": "10/2015"}, {"body": "sorry wrote hurry bigger sense different transformation needed either way simple mechanical working", "d": "10/2015"}, {"body": "one complication getters currently readonly properties implementing getter setter concrete class eg believe discussion way model abstract class typechecker allow users modify properties", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "windows node clean npm install errors would suggest problem might os version npm running repository", "d": "10/2015"}, {"body": "got issue using ubuntu", "d": "10/2015"}, {"body": "thing make clean wanted use dependency meteor package angular works fine throws error", "d": "10/2015"}, {"body": "sclausen able install require repo meteor package using npm namespacesscopes perhaps unsupported whatever meteornpm", "d": "10/2015"}, {"body": "yes exactly trying look meteors npm stuff works file issue thanks", "d": "10/2015"}, {"body": "think meteor problem npm version use way old support package naming", "d": "10/2015"}, {"body": "ah shame successful would guess issue probably related older version npm well looking error using within visual studio", "d": "10/2015"}, {"body": "special problem meteor problem npm version use way old support package naming filed issue successful usecase npm version also old sh", "d": "10/2015"}, {"body": "ok closing duplicate meteormeteor", "d": "10/2015"}, {"body": "looks like minimum npm version future reference oct sebastian clausen notifications githubcom wrote special problem meteor problem npm version use way old support package naming filed issue meteormeteor reply email directly view github", "d": "10/2015"}, {"body": "embarrassed updating node npm solved issue thanks", "d": "10/2015"}, {"body": "version could please provide minimal plunker afaik ca nt inject attributes toplevel element might issue anyway send plunk", "d": "10/2015"}, {"body": "pkozlowskiopensource sure create plunk ts compiler see line occurs error around impact output keeps complaining sure mean inject attributes top level elements could elaborate please oh forgot mention error latest alpha version previous one probably even two versions back sure", "d": "10/2015"}, {"body": "alexeagle something reproduce", "d": "10/2015"}, {"body": "guess typings related completely changing release please see reproduce next week", "d": "10/2015"}, {"body": "alexeagle sure try soon release close nt occur anymore", "d": "10/2015"}, {"body": "confirm issue upgrading still exists line lines", "d": "10/2015"}, {"body": "yes still", "d": "10/2015"}, {"body": "ca nt repro help cat tsconfigjson compileroptions target emitdecoratormetadata true experimentaldecorators true module commonjs noimplicitany false outdir built rootdir sourcemap false exclude nodemodules alexeagle cat appts import component attribute component selector greet template hello name class greet name string type string constructor attribute type type string thisname world thistype type alexeagle tsc", "d": "10/2015"}, {"body": "alexeagle looks like could clone repo try locally", "d": "10/2015"}, {"body": "repo old version though still message compiling latest alpha version", "d": "10/2015"}, {"body": "run tsc repo head get tons errors including duplicate definitions typescriptservicesdts one thing see use module system requires moduleresolution node otherwise assumes loading browser uses classic module resolution also tsconfigjson top really fishy requires ts adding nt fix could make minimal repro fri oct roland groza notifications githubcom wrote alexeagle tsconfigjson looks like compileroptions declaration false module system target emitdecoratormetadata true listfiles true noimplicitany false nolib false removecomments true sourcemap true experimentaldecorators true exclude nodemodules could clone repo try locally reply email directly view github", "d": "10/2015"}, {"body": "yeah tons errors locally soon add option get tons errors lots unsure option adding solve tons errors top compiler options options experimental might stable causing errors", "d": "10/2015"}, {"body": "want typings work need come nodemodules get duplicate identifier adding typescript nodemodule comes typings included providing compiler second time one nodemodulesgulptslintnodemodulestslinttypingstypescriptservicesdts also ran get stuck research fix fri oct pm roland groza notifications githubcom wrote yeah tons errors moduleresolution node locally compileroptions declaration false module system target emitdecoratormetadata true listfiles true noimplicitany false nolib false removecomments true sourcemap true experimentaldecorators true exclude nodemodules soon add moduleresolution option get tons errors lots duplicate identifier unsure option adding solve tons errors top compiler options options experimental might stable causing errors reply email directly view github", "d": "10/2015"}, {"body": "see actually switched typing least ones angular versions back think also think know get duplicates errors follow saying use option everything resolved need include sourcing gulp task actually include typings gulp task removed duplicate errors gone get problems modules need declaration option enabled modules nt get things like fix", "d": "10/2015"}, {"body": "looks like need reference modules write absolute paths example could use without compiler complaining way around", "d": "10/2015"}, {"body": "actually problem well inside angular using classic module resolution hope work tomorrow using relative paths obvious fix mind team would prefer way around suggest fri oct pm roland groza notifications githubcom wrote looks like need reference modules write absolute paths commonanimation example could use commonanimation without compiler complaining way around reply email directly view github", "d": "10/2015"}, {"body": "shame try things well tomorrow hopefully find something works also think error message might gone right way many errors sure hope figure way fix issue ts share", "d": "10/2015"}, {"body": "sounds like issue angular present follow remaining issues share", "d": "10/2015"}, {"body": "vsavkin please take look today determine need fix due tomorrowwed likely affect sync edit oops tagged vicb accident", "d": "10/2015"}, {"body": "triaging vsavkin move different milestone likely affect sync", "d": "10/2015"}, {"body": "ok think bug code method firing event value boolean listening event well tries evaluate throw boolean ie listening events component firing well solution use different event name", "d": "10/2015"}, {"body": "created another issue discuss whether want prevent directives listenting events", "d": "10/2015"}, {"body": "thanks tbosch", "d": "10/2015"}, {"body": "tbosch event name rename also calling unnecessary", "d": "10/2015"}, {"body": "actually stumbled upon issue well running unit tests", "d": "10/2015"}, {"body": "fixed partially without breaking change aligning everything still follow breaking change renames module", "d": "10/2015"}, {"body": "igorminar make alpha also exposed public api use tests", "d": "10/2015"}, {"body": "rolandjitsu part due tomorrowish wrt public api moment juliemr make note testing api doc think useful api need look made public changes needed", "d": "10/2015"}, {"body": "igorminar see looking forward figured said might prove useful users know would great public", "d": "10/2015"}, {"body": "sorry sure decision naming clarify public testing library currently module internal angular core testing module currently module think unified since may using internal things testing publicly exported think naming clarified made specific propose make test internal say clearly public renamed nt really care", "d": "10/2015"}, {"body": "igorminar taking one think whether breaking change trying land angular connect", "d": "10/2015"}, {"body": "one proposal take look ci errors unhappy dart analyzer morning like rename", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "closing duplicate", "d": "10/2015"}, {"body": "mlaval take look please", "d": "10/2015"}, {"body": "similar problem vs code project contains jquery ide always uses first complains sign", "d": "10/2015"}, {"body": "must linked new compiler cc tbosch", "d": "10/2015"}, {"body": "issue", "d": "10/2015"}, {"body": "using current workaround javascript import browserdomadapter browserdomadapterprototypecreateelement function tagname doc doc void doc document", "d": "10/2015"}, {"body": "yes know issue working right", "d": "10/2015"}, {"body": "tbosch xbtequila fix works well extended include polygon polyline etc", "d": "10/2015"}, {"body": "xbtequila tried workaround nt work svg looks like happen know working", "d": "10/2015"}, {"body": "xlink attribute working quick workaround created correct namespace fork node attribute namespaces found", "d": "10/2015"}, {"body": "updates issue looks like new compiler breaks svg css calculations", "d": "10/2015"}, {"body": "quick update similar hotfix landed master real fix still open though", "d": "10/2015"}, {"body": "tbosch binding attribute still seem work example", "d": "10/2015"}, {"body": "let handle component arrives dom note lowercase way svg nt render correctly workaround using constructor manually set correct property", "d": "10/2015"}, {"body": "tragetaschen wow annoying nt see longest time wracking brain figuring going wrong thanks", "d": "10/2015"}, {"body": "file using template directive changed ngdirective", "d": "10/2015"}, {"body": "try add right", "d": "10/2015"}, {"body": "wow fast response trick thanks", "d": "10/2015"}, {"body": "ca nt reproduce ensure typings date ideally use tsd link link npm distribution problem still exists please file new issue repro instructions thanks", "d": "10/2015"}, {"body": "thelgevold see sent pr update changelog missed breaking change", "d": "10/2015"}, {"body": "pkozlowskiopensource ah thanks clarifying", "d": "10/2015"}, {"body": "todoubaba could provide context ideally plunk usually need use metadata generated usually case injecting services services hard tell actual code take look", "d": "10/2015"}, {"body": "pascalprecht codeangularjsorg create plunk html ts file typescript import component view elementref bootstrap component selector myapp view template class myapp constructor elementref elementref consolelog elementref bootstrap myapp error following code works fine typescript import component view elementref inject bootstrap component selector myapp view template class myapp constructor inject elementref elementref elementref consolelog elementref bootstrap myapp", "d": "10/2015"}, {"body": "started debugging issue found gets transpiled means generated metadata param types wrong however use instead get correct error occurs try inject another thing noticed using gulp task following src get error however use target instead everything works another way make work changing name export inside bundle later import ps dug inside typescript compiler saw parameters serialization writing metadata class properly resolved instead resolved may typescript issue", "d": "10/2015"}, {"body": "experienced issue well", "d": "10/2015"}, {"body": "rpark could paste tsconfig often see forget turn emitdecoratormetadata ts compiler options", "d": "10/2015"}, {"body": "robwormald tsconfig", "d": "10/2015"}, {"body": "elementref class interface", "d": "10/2015"}, {"body": "well would explain mgechev comment expected result believe interfaces get transpiled obviously expected result consumers", "d": "10/2015"}, {"body": "robwormald elementref still class", "d": "10/2015"}, {"body": "mgechev class interface typings file got hit angular team", "d": "10/2015"}, {"body": "right change typing file di works many classes like one two declarations one type typing file example one line another line", "d": "10/2015"}, {"body": "issue caused commit converts class private constructor interfalce", "d": "10/2015"}, {"body": "looks like typetranspilation issue class decorator constructor like gets transpiled note last paramtype object rather elementref var", "d": "10/2015"}, {"body": "affects everything defined dts file eg defined alexeagle mhevery ever work properly maybe nt recent expansion classes got converted interfaces surfaced problem alexeagle close going land tomorrow wednesday skip fix otherwise work intermediate fix", "d": "10/2015"}, {"body": "really close working test failures tbosch helping failure due injecting renderer rebase close still need review pr well misko today", "d": "10/2015"}, {"body": "alright going wait fix tbosch please work alexeagle expedite fix", "d": "10/2015"}, {"body": "postmortem analysis tests typings tests assert compile angular application runs hello world examples nt use custom bindings endtoend test uses typings distribution starts nontrivial app custom bindings verifies starts", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "use workaround eventemitter exposing anymore nt know intended usage changed mistake", "d": "10/2015"}, {"body": "exposing subject bug due fixed lands intended behave like observable system", "d": "10/2015"}, {"body": "rkirov case line return", "d": "10/2015"}, {"body": "ericmartinezr nt sound crazy let check rx experts reopen makes sense case urgency fix lower given workaround", "d": "10/2015"}, {"body": "ericmartinezr", "d": "10/2015"}, {"body": "obviously issue raises many questions want tell people use bundles app dev plunkers even bundles plunkers anything bundles size interesting question jeffbcross btford want make http router working outside app frameworks nongoal", "d": "10/2015"}, {"body": "correction router using correct bundle arithmetic case sure intentional", "d": "10/2015"}, {"body": "thanks yes viewencapsulationemulated default sat oct christopher swasey notifications githubcom wrote updated components seemingly rendered behaviour viewencapsulationnone manually setting component encapsulation emulated restores previous behaviour going source longer seems code make emulated default particular line thisencapsulation ispresent encapsulation encapsulation viewencapsulationemulated formerly renderapi block code seems moved metadataview longer present form might red herring seem remaining references viewencapsulationemulated strict comparisons without faculty fallback reply email directly view github", "d": "10/2015"}, {"body": "thanks fix", "d": "10/2015"}, {"body": "also nt seem published dart yet", "d": "10/2015"}, {"body": "true wrote skeleton plnkr copy amp pasting min bundle directly plnkr meanwhile", "d": "10/2015"}, {"body": "jeffbcross discussed still push things would awesome", "d": "10/2015"}, {"body": "pkozlowskiopensource guys problems using codeangularjsorg may consider using another system like edit jimthedev already request", "d": "10/2015"}, {"body": "fixed jeffbcross thnx", "d": "10/2015"}, {"body": "thanks reminder pkozlowskiopensource release lastminute decision friday afternoon forgot code push kasperpeulen yjbanov suggested release broken publish dart", "d": "10/2015"}, {"body": "fwiw cdnjs updated also mirror latest angular", "d": "10/2015"}, {"body": "change tuple routesdetailas seems work notice prefixing dot time dot matter error message clearer", "d": "10/2015"}, {"body": "means relative root application means child component expected behavior exception could bit better", "d": "10/2015"}, {"body": "thanks explanation yes think error message docs clear agreed feedback recent hack night router might easier folks use gather send coherent form later", "d": "10/2015"}, {"body": "sounds good much appreciated", "d": "10/2015"}, {"body": "issue valid well working issue", "d": "10/2015"}, {"body": "may resolved new compiler checking internal teams verify", "d": "10/2015"}, {"body": "btford ha interesting one browser parses come btw also proves funny way using attribute name legal still dive new compiler hard time tracking properly reporting errors use browsers parse things one argument consider", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "may obsolete alexeagle change way generate file", "d": "10/2015"}, {"body": "yes give days land needed changes confirm obsolete", "d": "10/2015"}, {"body": "alexeagle pretty sure obsolete", "d": "10/2015"}, {"body": "wait issue ts dgeni html right obsoleted new typings still path generating humanreadable docs jeffbcross", "d": "10/2015"}, {"body": "fix handled dom renderer dom renderer intelligent enough understand dom elements internal state needs reset binding attached examples property property element property dom renderer reset detects special properties written call", "d": "10/2015"}, {"body": "agree", "d": "10/2015"}, {"body": "examples material widgets work ie marking fixed open separate issue add dart tests saucelabs", "d": "10/2015"}, {"body": "post crazy ideas", "d": "10/2015"}, {"body": "develop process process would define post ideas communicatereview angular team community prototype finally acceptreject", "d": "10/2015"}, {"body": "totally agree opened", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "observable interface nt actually exist yet could use files rxjs directly point given contributor status level partnership really doubt reason change guts time soon", "d": "10/2015"}, {"body": "sounds good makes lot sense change calling next mockconnection rather current mockrespond internally reduces cruft simplifies logic reason add mockrespond mockerror methods mockconnection trying avoid many new concepts end users call next complete every request could use ts files rxjs directly would simply stuff nicely would mean distributing rx part angular codebase vs npm dependency think issues", "d": "10/2015"}, {"body": "could use ts files rxjs directly blesh yeah think try real meaning typings nt yet brought new rx typings angular since typings distribution process changing wanted get new rx right places nt", "d": "10/2015"}, {"body": "would simply stuff nicely would mean distributing rx part angular codebase vs npm dependency think issues distributing library returns observable type combinators like distributing kegs beer taps", "d": "10/2015"}, {"body": "distributing library returns observable type combinators like distributing kegs beer taps blesh whoa", "d": "10/2015"}, {"body": "current state also preventing retry working correctly robwormald recently discovered", "d": "10/2015"}, {"body": "current state also preventing retry working correctly try rxjs bugs corrected", "d": "10/2015"}, {"body": "status issue given", "d": "10/2015"}, {"body": "vicb imo say input div people really confused", "d": "10/2015"}, {"body": "imo say input div people really confused agree inputoutput analogy breaks wink", "d": "10/2015"}, {"body": "think error message fine way closing action", "d": "10/2015"}, {"body": "whole bunch broken links docs docs still missing want complete sweep links docs place", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "currently working intended even unit test behavior file test operates nt mean ca nt change intention vsavkin yjbanov remember allow know wanted ensure people explicit opting lifecycle events inheriting superclasses could allow ing pretty easily", "d": "10/2015"}, {"body": "think consistency make people implement perhaps transformer emit warning", "d": "10/2015"}, {"body": "works rkirov take", "d": "10/2015"}, {"body": "came straight confused user frustrating expect framework call callback doesnt way user debug shooting consistency least throw transformer lifecycle hooks hence ignored angular", "d": "10/2015"}, {"body": "would vote make error reason extend maybe put throw constructor interface throw", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "perfect current workaround cburgdorf introduced using state components state components simply wrapper components navigate actual component needs data binding view child", "d": "10/2015"}, {"body": "need help someone familiar angular tbosch mhevery rkirov vsavkin approach", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "nt mean ruin party since may several routes therefore several completely different components behind components would want bind different properties may getting wrong way stands seems useful routes take properties likely case recently introduced concept state components demo app pascalprecht referring reason build components kept free routing concerns eg", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "totally need feature idea point could implemented plunk point could passed children components", "d": "10/2015"}, {"body": "vsavkin could look pair brian best way move forward", "d": "10/2015"}, {"body": "repository angular related issues use", "d": "10/2015"}, {"body": "sorry enrolling", "d": "10/2015"}, {"body": "ok would close issue", "d": "10/2015"}, {"body": "think closed problem occurs sample code right", "d": "10/2015"}, {"body": "fernandomoraes mentioned repository angular related issues occurs", "d": "10/2015"}, {"body": "oh sorry mistake", "d": "10/2015"}, {"body": "aparently standard answer probably present neither could directive class responsible rendering attribute anyone confirm assumptions close time want", "d": "10/2015"}, {"body": "today custom directive cover usecases adding new properties events changing properties underlying button etc closing share concrete usecase believe things missing", "d": "10/2015"}, {"body": "yes filters need update duplicate", "d": "10/2015"}, {"body": "hi david expert router btford would know believe caused use directive component template change detection causes evaluated immediately returns exception thrown router configuration set yet promise still pending positive think might able delay using pipe give value configuration loaded called multiple times believe", "d": "10/2015"}, {"body": "try adding empty annotation", "d": "10/2015"}, {"body": "thank responses btford change anything", "d": "10/2015"}, {"body": "think one solution could allow code inside oninit method jump next instruction configuration fetched server router config ready based problems must go away consequence approach make execution sync async ask benefits load app router configured guess answer could wait router config done", "d": "10/2015"}, {"body": "fix merged master everyone need delete tmp directory delete old leaks", "d": "10/2015"}, {"body": "vicb nope sorry forgotten creating straight away matsko trying bind attribute make work today", "d": "10/2015"}, {"body": "well actually keep issue open rename sligtly", "d": "10/2015"}, {"body": "thanks worked great us", "d": "10/2015"}, {"body": "fixed later sync", "d": "10/2015"}, {"body": "problem find way bypass problem martinsik", "d": "10/2015"}, {"body": "hi ocombe used little hack nt use angular directive control element added event updates object associated field using whatever want although use custom mark makes little messy", "d": "10/2015"}, {"body": "vicb afair also supports line numbers correct come linecol support well", "d": "10/2015"}, {"body": "vicb think nt word clearly nt meant say see dart support issue love dart outsider looks like philosophy sense problem go bit standards gives big gains actively recommending typescript supporting dart like way thinking feels like proposal line polymer seem philosophy use web standards web standards good enough try push standards improve people may prefer sure try fish water already big google ship fishing", "d": "10/2015"}, {"body": "would rather stick term instead since yet another meaning di source code", "d": "10/2015"}, {"body": "oh one last thing still use term binding passed injector configuration right wardbell sure frees naming entirely igorminar wdyt", "d": "10/2015"}, {"body": "wardbell streamline di guide change landed code base", "d": "10/2015"}, {"body": "pascalprecht impression going drop binding word di altogether otherwise confusion stays", "d": "10/2015"}, {"body": "pascalprecht pkozlowskiopensource woke morning regretting called wanted rush update saw late nt problem word binding long qualified order strengthen notion provider wanted refer provider binding easy get rid bind word verb associates keytoken provider excited changing expression rid term change verb perhaps mapping would case also like using suggestion pkozlowskiopensource although bit weird say providing string rather object clause could get minor discomfort immediate concern another late breaking change angular steer quickly someone really wants ride pony finish line personally feel term provider binding partly bind traditional term di world mostly opportunities ambiguity time mention form binding registering provider injector ca nt think reason talk context thought also following phrasing although write class key token may use class name alone shorthand expression", "d": "10/2015"}, {"body": "pascalprecht refresh memory difference key token di context problem token necessary prefer key programmers familiar keyvalue pairs key also faster type shorter token", "d": "10/2015"}, {"body": "berkana data binding predominant form binding angular applications painful oblige people use four syllables used using two simply moreover calling simply binding avoid spelling question hypen hyphen plagued term since earth cooled", "d": "10/2015"}, {"body": "refresher binding refer databinding reason change lose ambiguity di yes di systems use word binding providers tho luxury nt deal databinding well hence forth binding refers data di providers di configurations sets providers yes bit awkward one provided alternative bind sounds reasonable even bit awkward even alternatively could use word resolved gt note introducing new concept concept always two concepts name marly changing names collide semantically nothing changing", "d": "10/2015"}, {"body": "mhevery wish nt use word term commonly encountered promises much way binding comes frequently context data binding already bummed would prefer plain old nt classes perfectly usual supply optional array initialization values constructor static creation method long mood fix api make change nt much care term familiar di specialists hard application developer multiple meanings words nt appear regularly everyday english also big nested object definition eg notice mistyped expression meant write common silly mistake adds friction writer reader maybe around time nt remember seeing used concede marginally easier compose programmatically nt common practice expression hard eyes dsl much nicer perhaps saying dsl expands object notation hood ok", "d": "10/2015"}, {"body": "also like using suggestion pkozlowskiopensource although bit weird say provide bar providing string bar rather object using clause could get minor discomfort wardbell imo quite rare practice imo would expect people use sth like interface case truly provide interface thing user foo cares agree using used already different context", "d": "10/2015"}, {"body": "ok nt throwing let stick reason going dsl works ok missing method call tricky detect possible compile time error awkward equally readable dsl suffer issues", "d": "10/2015"}, {"body": "config key factory tuple array keyvalue", "d": "10/2015"}, {"body": "provide key multi true asvalue awkward agreed toying could implemented getter sure feel", "d": "10/2015"}, {"body": "cool could survive wo dsl tricky injector configuration nt something lot cool keep simple special case scenario remains simple", "d": "10/2015"}, {"body": "one suggesting taking away semantic change purely syntactical change", "d": "10/2015"}, {"body": "yup nailing loose ends", "d": "10/2015"}, {"body": "bit late particular renaming party remiss nt point dichotomy backwards providing signifier exactly opposite communicating using provide particular sense direct object must thing made available use case providing token already rather bound true sense providing something injector developer sense injector providing something consuming classes one solution subtly shift understanding making available use making adequate preparation eventuality sense person provider family provides retirement savinginvesting first case provide something full stop second case provide something provide use given token registering classvaluefactory dropping prepending resolve ambiguity alternatively verbs might work better existing syntax instead provide ok one got", "d": "10/2015"}, {"body": "english native prolly less problem others seeing code sample endash see problem actual token always end line makes hard read really want find get certain token think tokens beginning better way go", "d": "10/2015"}, {"body": "pascalprecht thinking reason ca nt beginning since hash important imo readable natural english rather natural english reading nt imply opposite granted somewhat selfdocumenting seen examples account fully qualified names construction unnatural unnecessarily unclear actually going edited comment potential alternate forms settled preferred form far concerned", "d": "10/2015"}, {"body": "endash think fair point like proposal could still keep term result calling vsavkin mhevery", "d": "10/2015"}, {"body": "igorminar nt think obstacle calling result roots mean similar things way actually makes sense call result call call result call since point seems per language used providing already done nt third possibility tack", "d": "10/2015"}, {"body": "want call provisions take like end day nt see objective way showing provisions better providers long angular documentation consistent nt think makes much difference", "d": "10/2015"}, {"body": "mhevery read comments one suggested renaming providers problem currently misusing verb way yes objectively incorrect", "d": "10/2015"}, {"body": "hi everybody also bit late want add two cents using also seems pretty misleading imh complete opposite used parts framework eg modulesyntax usually means target source following statement would let think could inject foo get value bar way around really like pkozlowskiopensource suggestion imo much clearer way mixing things expression", "d": "10/2015"}, {"body": "update changed api thanks bringing attention", "d": "10/2015"}, {"body": "choeller good point igorminar awesome", "d": "10/2015"}, {"body": "seems fixed since alpha", "d": "10/2015"}, {"body": "true validated alpha ready closed", "d": "10/2015"}, {"body": "also wait rename done postpone rename till precompilation lands master", "d": "10/2015"}, {"body": "blocked", "d": "10/2015"}, {"body": "going stay since proposal materially different", "d": "10/2015"}, {"body": "igorminar bradlygreen take bug needed first time contributing angular", "d": "10/2015"}, {"body": "thanks offer completely rewamping dts generation works problem go away see tue oct pm justin willis notifications githubcom wrote take bug needed first time contributing angular hardcore mozillian reply email directly view github", "d": "10/2015"}, {"body": "longer generating file applicable", "d": "10/2015"}, {"body": "opened new issue solved variables", "d": "10/2015"}, {"body": "spec specify behavior native object get", "d": "10/2015"}, {"body": "btw fully grasping use case could break problem realworld use case", "d": "10/2015"}, {"body": "tldr usecase server bootstrap need serialize http call success made server transfer request client embedding call client application replay calls bootstrap client replay client calls need reconstruct http call response return immediately tostring thinking makes sense usecase use case mimic one techniques used facebookrelay difference lot optimizations within framework ensure optimum rendering note react nt control async calls done relay pretty clever try explain happening know given component tree root component react land original way managing data sending data props component problem happens want change structure data end manually changing component bottom touching file new best practice component request state queries declared statically component done facebookrelay technique interesting sorta feature already angular known imagine injecting data using resolve try emulate facebookrelay preload prime cache technique angular sake explanation let go using mostly pseudo code typical best practice module folder structure done angular today example state uirouter using component directive design imagine magical method called let walk state tree convert url list states route states var routeasstate state routeasstate imagine also another magical method called resolve state using something like let change root state resolve use two magic methods state name root url controller rootctrl template resolve serverdata function state q queries var routeasstate state routeasstate walk state tree var resolvedstates routeasstatemap state gt state resolve resolve data return object return qall resolvedstates queriessetresolveddata left injecting directive similar would pass props component tree angular react one last thing replace resolve another property since resolving root let go queries also nt di let refactor http service root let remove function keep static metadata function resolvequeries queries q var dataqueries objectkeys queries foreach prop gt var method queries prop method var url queries prop url dataqueries prop return qall dataqueries var resolvedstates routeasstatemap state gt resolvequeries statequeries q simple cache service provide cache version data per query metadata lot boilerplate implement features simpler angular end deleting half angular code writing thing angular facebookrelay replace http metadata component graphql queries simple angular falcorjs json graph example assuming user making optimizations declaring ajax call component make batch call suggest attaching metadata components batch call optimization also want account naive case solving naive case lot constraints hijacking server success embed request client response inside data transfer http server client jsonp ajax one benefits angular allows firstclass components allowing us access view tree components tostring thinking makes sense problem returning native implementation object native instance check equal implementation false comparison method compare types correctly determine different types array object window crazy thought since use method type checking might able something like might use another di framework past module removed module problem one two alpha releases released version mismatch module required older version angular turn different version due works lead error anyone tried use commonjs version since presented error instance correct even though definitely correct inserting break point check since two versions one old angular nghttp correct version angular error using resolve bindings two separate modules used rather next error using different di framework would problem interface rather confusing reference mismatch probably type check assume interface correct even make another pass check signature correct development version well maybe crazy thought since probably wo nt work dart want di module live module", "d": "10/2015"}, {"body": "meeting igorminar blesh robwormald today discuss issue wanted come solution would allow us keep byte size core small make easy rx powerusers easily get useful operators proposal use lite observable method use di provide observablefactory token could overwritten mhevery brings point requiring injector users could take advantage field assignment shorthand provided typescript counterargument users wanted instantiate subjectsobservables could import one one already bound token instantiate without di whomever consuming component events know shape provided benefit di binding angular framework produce shape consumer would like however still issues type information di approach angular apis say return observable angular observable lite code consumes observable would automatically know binding replaced new shape another discussion topic came strategies composing operators right possible compose operators onto instance using method current rxjs design prototypebased monkeypatching extending way add default operators random notes know wanted get forget miss misrepresent anything blesh robwormald igorminar", "d": "10/2015"}, {"body": "clear method allows use rxjs factory chain operators unergonomic one could either decorate prototype subclass observable overriding return subclass add whatever operators care use function bind available babel typescript think observablefactory create observable class could responsible decorating observableprototype nt know enough angular current di presume dynamically create classes injected object instances", "d": "10/2015"}, {"body": "nt know enough angular current di presume dynamically create classes injected object instances yes would nt necessarily strategy used also maybe others", "d": "10/2015"}, {"body": "uglified gzipped distglobalrxminjs bundle", "d": "10/2015"}, {"body": "browserified uglified gzipped observable using distcjsobservablejs", "d": "10/2015"}, {"body": "shortterm essentially comes decision user experience tradeoff two competing priorities option include observable core operators included rxjs benefit user automatically gets operators likely want cost extra core users really nt want bytes would need rewrite import paths part build process loader configuration though users care much probably types users comfortable writing custom build processes loader configurations option include observable absolute minimum operators subscribeforeach benefit fewer bytes cost consumer wants use observablecore operators would recast angularexported observable standard rx observable using could use di allow overriding binding users could bringtheirownobservable angular use would require user know binding require add binding bootstrapping application could suggest users simply mutate global observable prototype include operators like believe behavior already occurs merely importing rxjs according vsavkin generally considered bad goes ethos angular typing information would lost replacing plain observable differentshaped observable user would explicitly recast every observable exported angular every place angular observable consumed personally favor option nt much context igorminar mhevery byte budgets longer term approach focus simplifying distribution composition operators well helping move forward standards make nicer ie function bind", "d": "10/2015"}, {"body": "believe behavior already occurs merely importing rxjs according vsavkin generally considered bad goes ethos angular prs favor option well willing work community rxjs angular determine operators core also would enable rxjs put core operators directly observable helps issues", "d": "10/2015"}, {"body": "prs blesh sorry nt meant dig rxjs referring idea mutating shared global object approach recommend", "d": "10/2015"}, {"body": "think thing option adding mutating global state purposes code loading ok data bad believe way extend file another file typings preserved casting necessary lot", "d": "10/2015"}, {"body": "mhevery lot", "d": "10/2015"}, {"body": "put bytes size context around min gzip react weights around sure talking min gzip would lot books well", "d": "10/2015"}, {"body": "based jeffbcross comments eg indeed minified gzipped equally important much weight minified gzipped", "d": "10/2015"}, {"body": "one thing know current minified version rxjs minified nt think even mangling variable names could probably cut quite bit", "d": "10/2015"}, {"body": "angular min amp gzipped", "d": "10/2015"}, {"body": "fwiw run current output rxjs file closure compiler sure probably cut another", "d": "10/2015"}, {"body": "fact bet lot repetitious cruft transpiling classes modules", "d": "10/2015"}, {"body": "core bundle currently including rx understanding goal get number lt still keeping current size number aim", "d": "10/2015"}, {"body": "could nt get completely removed rx right suspect could get still", "d": "10/2015"}, {"body": "seems like maybe bytes nt great thing base decision anyway ideal case sometool la rollup stripping unused code modules anyway nottoodistant future hard quantify rx actually weighs oct pm ben lesh notifications githubcom wrote could nt get completely removed rx right suspect could get still reply email directly view github", "d": "10/2015"}, {"body": "robwormald afaik rollup works treeshake neverimported exports modules would require refactoring rx take advantage angular sure since operators prototype", "d": "10/2015"}, {"body": "better getting function bind typescript although using function likely hit operator performance would guess probably nothing people care", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "would part main module separated one", "d": "10/2015"}, {"body": "hopefully main module idea someone use service party module transfer data client server rendering eg moment relying implementation cache bind server someone use prefered ajax service well bind token since framework coupled interfaces much rather hook service rather relying implementation inmemory cache facebookrelay framework using react serverrendering angular need rely zonejs di hopefully service otherwise lowest stage data transfer client since would optimise method relay statically declaring queriesrequests component walking component tree build query make batch call transfer cache queriesrequests client provides better server rendering story universal data model similar relay would next stage data transfer angular", "d": "10/2015"}, {"body": "like also would drop custom cache nice", "d": "10/2015"}, {"body": "alexeagle bundling work wrt interfaces brandonroberts see errors interfaces brandonroberts example never situation would called never reuse components different type navigating routes also interfaces imported rather directory going close since think working expected please feel free file another issue reproduction explanation behavior differs expect typescript error runtime error wrong navigation behavior etc thanks", "d": "10/2015"}, {"body": "working reimplement exported typings suspect particular issue obsolete preview", "d": "10/2015"}, {"body": "love direction attribute could answer none may able come obvious approach need micro syntax thinking approach nt come extra rules", "d": "10/2015"}, {"body": "think users going hard time grasping wo nt need learned normally sure maybe worth considering keeping", "d": "10/2015"}, {"body": "thought treat template component properties might end sure handle", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "mhevery reopening since closed dup one", "d": "10/2015"}, {"body": "robwormald look see resolved todaytomorrow blocking tasks otherwise push complete eow", "d": "10/2015"}, {"body": "yep let know within hour oct pm naomi black notifications githubcom wrote robwormald look see resolved todaytomorrow blocking tasks otherwise push complete eow reply email directly view github", "d": "10/2015"}, {"body": "naomiblack good today", "d": "10/2015"}, {"body": "naomiblack actually let bump implications files loaded want discuss pkozlowskiopensource", "d": "10/2015"}, {"body": "robwormald implications let kick discussion packaging channel", "d": "10/2015"}, {"body": "ping", "d": "10/2015"}, {"body": "matanlurey get resolved yes easy way especially tricky dart semantics", "d": "10/2015"}, {"body": "rvramesh exactly right", "d": "10/2015"}, {"body": "update moving systemjs traceurruntime rxjs cdn pretty fast works well", "d": "10/2015"}, {"body": "postpone till lands marking blocked", "d": "10/2015"}, {"body": "already landed", "d": "10/2015"}, {"body": "closing per igorminar comment", "d": "10/2015"}, {"body": "opposed gkalpak suggestion seems quite verbose going go always revisit name later proves confusing", "d": "10/2015"}, {"body": "aux routes akin named sub views uirouter proposed solution confusing part immediately clear aux routes relate primary route router definition alone thinking following alternative syntax router def routeconfig path foo component maincomponent outlets path component path component inside maincomponent renders renders guess point seeing need distinguish aux vs regular routes since route could potentially serve purposes basically route configured standalone route named view route added outlets array assuming urls would still format angular connect presentation sub views parameters primary primary namedviewn", "d": "10/2015"}, {"body": "aux routes akin named sub views uirouter docs forthcoming", "d": "10/2015"}, {"body": "need alxhub sgty", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "juliemr looking upgrading systemjs builder generate systemregister well cjs bundles", "d": "10/2015"}, {"body": "igorminar juliemr could please look comment regarding cjs output investigations might look like cjs bundles would huge http router well noncore module since sure proper bundle arithmetic using cjs format also please also see available help chat needed", "d": "10/2015"}, {"body": "took care first checkbox means work bundles actually make sure bundles work tests", "d": "10/2015"}, {"body": "cc robwormald working cjs stuff", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "nt subclass differ create override think better left third parties rather core", "d": "10/2015"}, {"body": "think fixed removing magic interface class logic mhevery proposed create abstract parent classes internal constructors", "d": "10/2015"}, {"body": "moving avoid breaking changes due sync", "d": "10/2015"}, {"body": "pr resolve", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "robwormald planning implement", "d": "10/2015"}, {"body": "yessir oct jeff cross notifications githubcom wrote robwormald planning implement reply email directly view github", "d": "10/2015"}, {"body": "robwormald please deprecate old api instead outright removing", "d": "10/2015"}, {"body": "noted nt think remove anyway emit alias next oct igor minar notifications githubcom wrote robwormald please deprecate old api instead outright removing reply email directly view github", "d": "10/2015"}, {"body": "sorry bring dup found issue via google want see workaround use project litor mhevery help link dup thanks", "d": "10/2015"}, {"body": "ok experiments cjs bundling summary findings cjs output smaller compared systemregister main difference size cjs systemregister comes fact cjs nt expose internal structure bundle one ca nt import file public api exported toplevel bundle soon drop systemregister nt allow importing private paths start pb noncore modules router importing private modules sure existing bundlers handle situation checked see discussion today http bundle nt use bundle arithmetic include entire believe bug", "d": "10/2015"}, {"body": "compile ts cjs systemjs use systemjs load either format way use whichever bundle better tested see pros cons", "d": "10/2015"}, {"body": "systemregister distribution format rather static optimized module systemjs sfx builds becoming integrate optimizations like rollup separate raw es modules best provide users use environments guybedford would mind elaborating worry tell users hey raw unpackaged files use bundle application immediately telling use one bundlers jspm webpack sth else fear might much users judging supporting people example released new version yesterday today several people struggling setup changed rxjs dependency", "d": "10/2015"}, {"body": "compile ts cjs systemjs course issue use systemjs load either format way use whichever bundle better sure clear better tested see pros cons yes right goes pretty much like systemregister import file path big cjs smaller cjs ca nt import file path might pb router http bundles next step check proper bundle arithmetic way import private paths", "d": "10/2015"}, {"body": "ok sounded importing cjs maybe browserify systemjs mistake", "d": "10/2015"}, {"body": "using bundles distribution format encouraged bundles contain environmentspecific names assume names going used users environment loader maximum portability usually users consume separate anonymous modules like get commonjs amd files sfx bundles going optimized small format possible like commonjs bundle want able provide angular bundle still exhibits public dependencies http router rx etc exactly loader necessary allows public dependencies shared without duplication ideally build would made main entry points whatever means depends external dependencies commonjs amd umd global module consumable compacted builds external public dependencies listed way internal modules optimized smallest possible build public modules external dependencies remain separate anonymous modules treecompacting optimization example systemjs builder create something like via currently normal commonjs bundler like rollup external dependency wrapping would likely provide smaller overhead terms consuming file npm packagejson config set dependencies configurations created systemjs jspm others well maximise consumption compatibility certainly option compile everything commonjs systemregister separate files great starting point best performance footprint would internal compacting optimizations like sorry longwinded comment let know help", "d": "10/2015"}, {"body": "ok guybedford kind enough spend time robwormald yesterday discuss topic great details thank guy much time main outcomes discussion point view format best longterm idea bundles arguments bundle size runtime perf hit polluting registry private internal modules paths cjs bundles would solve problems would work large cjs tooling ecosystem want properly share code core http router using cjs bundles need create additional shared bundle would code shared core http router bundle needs proper public api parts framework would depend upon might challenging produce correct ones nt duplicate code cjs bundles given way code structured right", "d": "10/2015"}, {"body": "weswigham thnx pointing bundlingrelated work ts side went entire conversation think many corner cases discussed ex bundled module importing sth another bundled file dynamic loads bundles relevant bundling problem discussing want go first reaction format many downsides pointed makes easy create bundles shape content simply concatenating named calls true side effect polluting global module registry internal module paths paths registry makes super easy load modules different bundles statically dynamically got bit catch want info internal bundle structure nt want expose outside bundle boundary feels like bit like set contradictory requirements", "d": "10/2015"}, {"body": "quick update based work rkirov today see different workflows applicable people using cjsbased tools workflows combine application code sources one bundle sfx people load via script tag people use webpack today combine application code bundle one bundle work would publish bundle build bundles application code use external dependency case still need prepare bundle umd tested workflows outcome summarized quickly webpack configuration similar presented case benefit using bundles config simpler produce proper code duplication bundles need solve problem shared dependencies trivial", "d": "10/2015"}, {"body": "ok another round discussions igorminar rkirov decisions regarding cjs bundles going produce umd bundles consumed tools workflows replace sfx bundles longer run going duplicate shared facades code every bundle rxjs wo nt bundled party dependency zonejs wo nt provide umd bundles would include zonejs reflectmetadata external dependency provided users via tag", "d": "10/2015"}, {"body": "pkozlowskiopensource like idea bundling deps users include", "d": "10/2015"}, {"body": "done test library renaming changes", "d": "10/2015"}, {"body": "oh didnt know component api looks great case great router coming support api", "d": "10/2015"}, {"body": "closing longer generate file", "d": "10/2015"}, {"body": "petebacondarwin could help dgeni", "d": "10/2015"}, {"body": "fixed switching replacing", "d": "10/2015"}, {"body": "mhevery problem nt templates stuff going solve problem reopening", "d": "10/2015"}, {"body": "fixed via", "d": "10/2015"}, {"body": "lilotop explain working two lines gave identical", "d": "10/2015"}, {"body": "closed around", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "dispatchevent meant public api internal helper leaked provide ergonomic way trigger events post angularconnect meantime use regular dom apis create dispatch events", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "critical sync bumping", "d": "10/2015"}, {"body": "working one", "d": "10/2015"}, {"body": "using import default pipes without problem found jspm tsd solved", "d": "10/2015"}, {"body": "obsolete", "d": "10/2015"}, {"body": "bug appears happening least angulardart", "d": "10/2015"}, {"body": "bumping breaking changes last chance make ac", "d": "10/2015"}, {"body": "resolved", "d": "10/2015"}, {"body": "moving working simple solution manually add combinators need eventemitter without changing anything inheritance", "d": "10/2015"}, {"body": "fixed move new library nt mask", "d": "10/2015"}, {"body": "fixed getting resolved slight chance landing critical", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "appears fixed updating include plunkr shall close", "d": "10/2015"}, {"body": "bumping need angular connect please let us know otherwise likely happen", "d": "10/2015"}, {"body": "changelog error message says camelcase think meant titlecase btford", "d": "10/2015"}, {"body": "nitpick nt correct terminology thought spaces words", "d": "10/2015"}, {"body": "pascalcase known everywhere found calling uppercamelcase", "d": "10/2015"}, {"body": "mention seen msdn msrelated documentation although using typescript typescript guidlines use", "d": "10/2015"}, {"body": "added breaking changes", "d": "10/2015"}, {"body": "chatting vsavkin earlier today perspective putting component control instead template idea extending property decorator something like typescript class mycomponent implements afterviewinit observechild searchbutton click searchclick eventemitter afterviewinit thissearchclicksubscribe evt gt alert clicked could work native custom events aside setting generic type tight coupling dom component portable different platforms", "d": "10/2015"}, {"body": "jeffbcross would beautiful although would call keep aligned latest naming", "d": "10/2015"}, {"body": "spent time digging noticed redirect regexp wild cards requires name like params might make sense way get data wildcard original example path would something like actually work plain recognized wild card actually literally define route reason wild cards changed perhaps optional extra characters current regexp", "d": "10/2015"}, {"body": "itslenny completely right think good behavior would recognize provide default name param like instance", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "move current", "d": "10/2015"}, {"body": "superseded", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "per", "d": "10/2015"}, {"body": "since moving away typings bundles tsddefinitelytyped would good work individual permodule files produced compiler think need couple files added new task directory router already add use cases expect users want like", "d": "10/2015"}, {"body": "work without typings distribution think could close ifwhen provide bundled typings decide entry points produce bundles", "d": "10/2015"}, {"body": "good discussion bundling based discussion morning standup nt need anything typings right close please reopen file specific issues remaining stuff discuss", "d": "10/2015"}, {"body": "jeffbcross still valid close", "d": "10/2015"}, {"body": "move want trigger route change function side component like onsubmit tried locationgo working", "d": "10/2015"}, {"body": "using di string tokens cases giving component model avoid coupling central service class something higher level router would awesome", "d": "10/2015"}, {"body": "related dgeni doc generation dts generation latter nt need fix whole dts generation soon replaced different process lands", "d": "10/2015"}, {"body": "moving", "d": "10/2015"}, {"body": "petebacondarwin chance might quick fix", "d": "10/2015"}, {"body": "nt care since publish dts files nonbundled form expect completely remove dgeni based dts bundle generation soonish", "d": "10/2015"}, {"body": "closing dup", "d": "10/2015"}, {"body": "thing left remove old api", "d": "10/2015"}, {"body": "already semantics behind see static content projection using selectors allows build components nicer api user use attribute child nodes performance issue angular precalculate content projection compilation eventually end build step far stick", "d": "10/2015"}, {"body": "add trivially though users really want", "d": "10/2015"}, {"body": "imo renaming would confusing users vs", "d": "10/2015"}, {"body": "stick interesting question want implements tbosch thank doc read makes also finally clear based document really seems like hard implement boils however say add soon people actually asking could imagine users use case might change future tho", "d": "10/2015"}, {"body": "stick content injection content change detection contentbindings etc cases slot make sense may implement new functionality outside scope issue closing", "d": "10/2015"}, {"body": "trying help contribute moment build running tests thrashes system macbook pro ghz intel core gb ram trying rather easy hr estimate issue staring incredibly unreasonable amount time going end taking hours complete task order run build test done code hours ago", "d": "10/2015"}, {"body": "description lot extreme experienced bug referencing doublecheck right versions things node npm etc build script warn try opening activity monitor see eating cpu guess less ram many us team try freeing closing whatever apps", "d": "10/2015"}, {"body": "thanks alexeagle sorry adds noise issue misunderstanding excited want help anyway push versions also brings point confusion points upon fresh install folder installs expected however contains semantics supposedly works right start unable run using locally installed gulp complatined character frustrating eventually got run using globally installed finally got run task takes nearly ram run big deal certainly would nt think would hard system rate slow lot patience want help waited wanted test code running unit tests watch mode via also pretty painful nonetheless finally ran mins staring woohoo wanted nothing choose collared greens anyday may need see doctor sudden distaste sudden digress made change test file see live results picked changed file chrome instance launched never reconnected therefore could never get unit testing live mode run tried several times anyway amidst much frustration patience able get pr hopefully helps imagine lot others run similar experience trying help probably gave hunch couple things either faster simpler build may increase amount contributions sure look forward helping", "d": "10/2015"}, {"body": "thanks digging indeed hard contribute right good project want take seriously igorminar data points would useful diagnose", "d": "10/2015"}, {"body": "hw running give us full spec especially info disk", "d": "10/2015"}, {"body": "truble problem u solved", "d": "10/2015"}, {"body": "alxhub give status update", "d": "10/2015"}, {"body": "resolve issue", "d": "10/2015"}, {"body": "closed landed", "d": "10/2015"}, {"body": "fyi eventually done protractor setting next protractor release take care", "d": "10/2015"}, {"body": "status vicb mhevery jeffbcross", "d": "10/2015"}, {"body": "closed alpha works well", "d": "10/2015"}, {"body": "closing favor", "d": "10/2015"}, {"body": "believe obsolete closing reopen feel otherwise", "d": "10/2015"}, {"body": "well case every method starting better also annotation output typings enforce clear every one victor steps effectively taken example setting enforce public underscore currently", "d": "10/2015"}, {"body": "vsavkin fyi closed case still something say subject", "d": "10/2015"}, {"body": "rosendi thanks", "d": "10/2015"}, {"body": "think stale closed", "d": "10/2015"}, {"body": "seeing const api docs see example alexeagle petebacondarwin could investigate", "d": "10/2015"}, {"body": "reason patch never made angulario", "d": "10/2015"}, {"body": "copied patch angulario fix", "d": "10/2015"}, {"body": "dup", "d": "10/2015"}, {"body": "js class myappcomponent text string constructor thistext thisemit subscribe response gt consolelog response fist time text open second time fired happen thistext open causes subscribe fire thistext fire settimeout gt thistext fire emit rxobservable var emitter new eventemitter var emitter new eventemitter settimeout gt emitternext thistext pkozlowskiopensource event emitter firing second time", "d": "10/2015"}, {"body": "nt forget subscribe asynchronous call nt see consolelog thistext open actually happens first settimeout make trigger since subscribing emit function guessing getting text open triggered emit function basically need sure watch variable never tried since nt use case variable property component use onchanges lifecycle event way help", "d": "10/2015"}, {"body": "alright reopening got new problem eventemitters either missing something plnkr situation basically ca nt return observable anymore using see change return observable though nt feel right anyone word still using eventemitter kind situation switch rx observables full code js import component view eventemitter oninit bootstrap class somethingservice ee eventemitter new eventemitter firestuff settimeout gt thiseenext fire component selector hello viewbindings somethingservice view template export class hello implements oninit f string constructor private ss somethingservice oninit consolelog hello init fire thisf loading bootstrap hello cc ericmartinezr robwormald pkozlowskiopensource", "d": "10/2015"}, {"body": "closing opened new one", "d": "10/2015"}, {"body": "creating node version universal ran problem needed url resolved baseurl sent give info use case trying support want app running server make http request resource server actual url request made expected", "d": "10/2015"}, {"body": "guide template syntax cheat sheet address need", "d": "10/2015"}, {"body": "nt think finished yet dart change angular typescript pulldown angular dart directs also impression expression language somewhat different dart", "d": "10/2015"}, {"body": "fyi node upgrade improved time still create separate core src compilation unit bunch auxilary compilation units router examples etc", "d": "10/2015"}, {"body": "think stale jelbourn going close please verify reopen still issue", "d": "10/2015"}, {"body": "checked working expected master", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "hi upgrade library available alpha thanks david", "d": "10/2015"}, {"body": "sure make bundle next weeks", "d": "10/2015"}, {"body": "know released drop message ways know thanks", "d": "10/2015"}, {"body": "think easiest way follow repo check everyday happening releases go almost weekly basis ppl community tweet new releases included", "d": "10/2015"}, {"body": "pascalprecht team could webhook posts twitter every time new release", "d": "10/2015"}, {"body": "would also help opensource users nightlyhourly build catch problems sooner", "d": "10/2015"}, {"body": "problem selector validation fails attribute value int string value fine check", "d": "10/2015"}, {"body": "trying catch error selector however discussed tbosch check compiler", "d": "10/2015"}, {"body": "hi sorry digging issue forms export back nt see change referenced changelog decision regression best regards", "d": "10/2015"}, {"body": "plunker showing behavior alpha remove first element add new element see order view right identical inside console log click times showhide button see order view correct like someone said stackoverflow occurs syntax syntax html posted stackoverflow first", "d": "10/2015"}, {"body": "yjbanov obsolete right", "d": "10/2015"}, {"body": "still use getterssetters support events queries", "d": "10/2015"}, {"body": "ah nt sure meant element injector yes still using reflected getters amp setters cases", "d": "10/2015"}, {"body": "finished last month", "d": "10/2015"}, {"body": "obsolete", "d": "10/2015"}, {"body": "think completely drop beta", "d": "10/2015"}, {"body": "update", "d": "10/2015"}, {"body": "johnpapa afaik replaced", "d": "10/2015"}, {"body": "thanks heads indeed replaced removed closed looking forward ng team take", "d": "10/2015"}, {"body": "might resolved sure created slice filter nt aware issue nt make effort resolve quick attempt reproduce modified routing test updated line use slice returns whole array seems work fine produce errors encourage ng team confirm think issue closed", "d": "10/2015"}, {"body": "anyone actually tried combination ngswitch ngswitchwhen actual application test trying various combinations put breakpoint ngswitch setvalue ngswitchwhen setvalue always see ngswitch setvalue called ngswitchwhen one never hits result always see ngswitchwhen elements added regardless whether match able find examples outside forum shows syntax working curious missing something bug", "d": "10/2015"}, {"body": "bernardyen look unit tests pending pr adds doc plunker example hope helps", "d": "10/2015"}, {"body": "thanks look doc posting comment still get work use angulardart sure dart translation issue issue posting first turns dart issue repost basically combination ngswitch ngswitchwhen recall call ngswitchwhen methods even value match get anything show fact ca nt find many angulardart references syntax anywhere except forum suspicious could still missed something", "d": "10/2015"}, {"body": "closing let resurrect really want", "d": "10/2015"}, {"body": "anyone wondering timeouts message handler ramping outstandingrequestcount", "d": "10/2015"}, {"body": "measured current master following results dart static tree ms static tree baseline ms", "d": "10/2015"}, {"body": "solution works thank liveserver opensrc", "d": "10/2015"}, {"body": "also works issue probably closed", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "update written doc proposing switch builtin support distributing typings ts could addition providing bundled typings file could replace discuss next week microsoft steps listed doc start sending prs", "d": "10/2015"}, {"body": "hi almost ready ship comments welcome", "d": "10/2015"}, {"body": "chatted matan working dart internal folks unblocked could use help turning typescript contribution angular mhevery assigning maybe sync matan next week figure much work needed close", "d": "10/2015"}, {"body": "think go proposal using rules would simple one directive role present per element one directive given role matches element chose one highest selector specificity note could optionally concept priority bad examples angularjs priority difficult come absolute scale priorities across libraries", "d": "10/2015"}, {"body": "might work new compiler yet master", "d": "10/2015"}, {"body": "fixed", "d": "10/2015"}, {"body": "tamascsaba scenario mind feature would nice", "d": "10/2015"}, {"body": "think authenticated check done canactivate handler concern canactivate handler specific component would put every component routing target would distinguish data present authenticated event uirouter statechangestart event similar concept seems missing angular router maybe good reasons already possible listen navigation finish events would wary giving access router service handler canactivate startnavigation handler order change routing could get tricky first glance seems cleaner navigationstart handler able return something router resolves new navigation instruction overrides original one exceptional case like authentication check", "d": "10/2015"}, {"body": "agree put decorator like canactivate every component also seems way redirect say login page since di router etc instead put router definitions router configuration let specify routes needs authentication even better generic routes would like provide hook let add hook router config sure stepping anyone toes think way aurelia implemented looks nice see", "d": "10/2015"}, {"body": "put decorator like canactivate every component would nt put every component always make parent route behavior let specify routes needs authentication even better generic routes would like provide hook let add hook router config precisely child routes listening global events firing redirects would break encapsulation", "d": "10/2015"}, {"body": "ok fair enough put canactivate big issue must admit nt get rest reply let explain bit practical trying solve think people thread asked bunch discussions pages user types url authenticated interpreted canactivate place check authenticated return false however would also like redirect user login page happens note using real security view filter data secured server extending routeroutlet overrride activate use router navigate somewhere else however seems wrong several reasons one late view rendered flash quickly screen login user logged would like navigate first typed url canactivate use ca nt get router canactivate decorator since nt support di interpreted igor post canactivate redirect another view component decorated ca nt get data still feel would elegant router could handle configuration best practice scenario early given alpha status keep good work", "d": "10/2015"}, {"body": "vsavkin mhevery news thanks", "d": "10/2015"}, {"body": "validation already implemented definitely validated", "d": "10/2015"}, {"body": "rolandjitsu believe data type validation handled", "d": "10/2015"}, {"body": "rafacm thanks looking forward", "d": "10/2015"}, {"body": "take one implement see accept strings nt think extended work data types well", "d": "10/2015"}, {"body": "fyi seems milestone needs updated", "d": "10/2015"}, {"body": "hello wondering guys still giving thought trying develop component base maintenance view container acts container components entity maintenance screens idea base maintenance view container would afford maintenance screens common behaviour common ui elements view could done using concept view subclassing perhaps knowledge framework leading wrong direction anyone another way achieve please share best regards andr\u00e9", "d": "10/2015"}, {"body": "hold sort best way forward details", "d": "10/2015"}, {"body": "closed via", "d": "10/2015"}, {"body": "closing since js", "d": "10/2015"}, {"body": "mhevery think need enforce compiletime type checking also runtime type checking dsl users however small problem enforcing compiletime type checking using mandatory field used http method aliases like etc pass url first argument need second parameter type solution refactor interface make mandatory extend like way request second parameter type etc use semantical point view think makes sense since generic compared runtime type checking enforce drawback see one interface documented see clean way jeffbcross mhevery thoughts open pull request think sounds fine", "d": "10/2015"}, {"body": "mgechev yes makes sense multiple interfaces think regarding whether runtime error consistent rest framework think generally strays away runtime type checking splitting interfaces accomplish original objective issue pr welcome", "d": "10/2015"}, {"body": "okay take one", "d": "10/2015"}, {"body": "mgechev selfassigned show owner", "d": "10/2015"}, {"body": "still possible create request empty url want case value think alright however passing object literal typescript wo nt compile", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "tedsander new compiler converts stylesheets separate files follow path ie stylesheet used components generated template used generated file also new compiler understands relative templatestyle urls leaving open new compiler", "d": "10/2015"}, {"body": "jeffbcross one use case consider might following using http interceptors angular ensure certain behaviour eg redirect authentication default without developers remember use particular wrapper shared service would kind default behaviour still possible angular using wrapper approach guessing tell di use wrapper whenever http injected right know angular well enough yet", "d": "10/2015"}, {"body": "tedsander solved new compiler could double check", "d": "10/2015"}, {"body": "solved", "d": "10/2015"}, {"body": "still thing might help", "d": "10/2015"}, {"body": "ended deciding move http test dependencies separate module bundle called sorry slow update issue thanks pr rixrix think robwormald started work part work assign", "d": "10/2015"}, {"body": "jeffbcross problem thanks looking", "d": "10/2015"}, {"body": "impression change detectors would coalesce multiple reads expressions twice issue self consistent rest templates new variables declared templates hence would present template sure worth trouble given change detectors coalesce", "d": "10/2015"}, {"body": "mhevery sure status see api assume use help loading relative compiled commonjs tries load browser get going work point component", "d": "10/2015"}, {"body": "sorry still work progress tue oct pm roland groza notifications githubcom wrote mhevery sure status see component api moduleid assume use help loading relative compiled commonjs moduleid moduleid tries load browser get xmlhttprequest load package cross origin requests supported protocol schemes data chrome chromeextension chromeextensionresourcetget anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function angular anonymous function anonymous function anonymous function exception failed load package going work point moduleid component reply email directly view github", "d": "10/2015"}, {"body": "tbosch thanks looking forward solution", "d": "10/2015"}, {"body": "see option could enable enforces much nt good answer marking fieldsmethods ts may accessed anywhere file currently make private meantime good next step would tslint check angular repo private method starts underscore better enforce way since tsonly contributors still enforcement", "d": "10/2015"}, {"body": "alexeagle created pr lint thing", "d": "10/2015"}, {"body": "frequently encounter wrap compose components exposing part inner components apis properties events", "d": "10/2015"}, {"body": "typotter said currently project going found nobubble restriction custom events frustrating ended using scope events assumed angular would bubble custom events thought better polyfilled angular great use case code example product purchasing app grid products add product want talk services directly remain dumb component want broadcast happened also good place deal event like keep guy dumb ends highest point bubble event makes sense handle event passes payload throwaway layer app two components truly reusable call idea components composers components dumb composers components also tie together services models components see event bubbles right add productdataname class productcard input productdata output addtocart new eventemitter component selector productcardgrid view template class productcard input products stuff pagination etc component selector app view template class productcard constructor thisproducts name car name boat", "d": "10/2015"}, {"body": "timkindberg add event output property done component make interface explicit result much easier maintain also bubbling lead event name collision two child elements emit different events name mine", "d": "10/2015"}, {"body": "small offtopic btw also much like dumbsmart components idea handy create smart components statefull using lot dumb components statelesss receive properties inputs emit events outputs unfortunately bad adopted sort things example react create dumb components pretty easy must looks verbose maybe somehow improve mhevery", "d": "10/2015"}, {"body": "got feeling problem back sure version ca nt load angular webs safari", "d": "10/2015"}, {"body": "mhevery could please answer questions thanks", "d": "10/2015"}, {"body": "sorry us design later", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "reason working place angular component angular wo nt compile element angular read attribute values runtime compile time otherwise would get performance hit ie works intended please use code snippet mewel described", "d": "10/2015"}, {"body": "let leave issue open see many people need feature", "d": "10/2015"}, {"body": "get attributes outside angular app useful easy use wo nt provide feature add good documentation address use case btw reading attributes toplevel component easier understand smile", "d": "10/2015"}, {"body": "big performance hit talking building single page app understand big deal something like building interactive reusable user profile component use wordpress theme something able say pretty important cycling attributes causes hit flag attribute check something like import nt set true bypasses reading properties thought", "d": "10/2015"}, {"body": "clear work using component root application ie application component use component inside angular app works fine reading attribute consistent interpreting attributes root element mon oct pm anakinjay notifications githubcom wrote big performance hit talking building single page app understand big deal something like building interactive reusable user profile component use wordpress theme something able say pretty important cycling attributes causes hit flag attribute check something like import nt set true bypasses reading properties thought reply email directly view github", "d": "10/2015"}, {"body": "feature would require lot special cases code paths special change defectors root components regular ones precompiled code build step soon nt know app gets bootstrapped special readattributes method renderer api angular running nativescript webworkers mon oct pm tobias bosch tbosch googlecom wrote clear work using component root application ie application component use component inside angular app works fine reading attribute consistent interpreting attributes root element mon oct pm anakinjay notifications githubcom wrote big performance hit talking building single page app understand big deal something like building interactive reusable user profile component use wordpress theme something able say pretty important cycling attributes causes hit flag attribute check something like import nt set true bypasses reading properties thought reply email directly view github", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "much point closed issue see pb please open new issue clear description steps reproduce ideally runnable demo plunker see kind info looking comes issue reports", "d": "10/2015"}, {"body": "pkozlowskiopensource attaching events template throws error eg following template works fine testnamevalue following one throws error moment add event testnamevalue", "d": "10/2015"}, {"body": "mhevery thinking think syntax", "d": "10/2015"}, {"body": "jelbourn think ideal implies always executed throttle output function think syntax needs make clear goes first part normal expression also explain comes ideal syntax would make clear part part guard expression something like need created", "d": "10/2015"}, {"body": "hi subject done examples debouncing alternatives thought pros declarative easy read similar approaches followed libs underscore lodash cons name colision functions already present component alternative could name colision still happen feels clean alternative following jelbourn approaches personally think introducing new kind operator gt something avoided see reasoning behind reversing order think aligns better mhevery concern also share", "d": "10/2015"}, {"body": "figured details thinking far wanted get feedback would developer declared function would declared ui thread would execute outside zone idea would allowed transform stream events time generate new stream events would used execute named symbol rather inline parameters would easy apply many different events get behavior easy change one location applies everywhere maybe could allow chaining well canonical version still thinking register template", "d": "10/2015"}, {"body": "syntax execute callback outside angular user whatever feels like method would avoid overloading templates logic help testing", "d": "10/2015"}, {"body": "thinking think better way think could synthetic event streams example invoke similarly could trick becomes declaring new event one way could extend capabilities would also solve issue ionic would like create custom events polyfill events different platforms even redefine click mobile wait ms advantage approach introduce new concepts extends existing concept directives thoughts note may also related", "d": "10/2015"}, {"body": "need think also caveats see proposal let know wrong needs one directive per event name possible define reusable behaviors ie debounce solve thing", "d": "10/2015"}, {"body": "needs one directive per event name possible define reusable behaviors ie debounce could solved selector would would somehow extract name solve runoutsideofangular thing would assumed run outsize zone", "d": "10/2015"}, {"body": "eventdirective would live app side ie events need marshaled webworker scenario also clear relates zones better option would provide plugins renderer deal based event name independent current component sun oct mi\u0161ko hevery notifications githubcom wrote needs one directive per event name possible define reusable behaviors ie debounce could solved selector would debounce would somehow extract name solve runoutsideofangular thing would assumed eventdirectives run outsize zone reply email directly view github", "d": "10/2015"}, {"body": "point big fan option seems purpose something similar introduce new concepts extend existing concepts think users hard time remembering use selector use selector regular selector could also problematic wrt name collision actually preferred previous proposal ie oninput event mhevery would problem vs", "d": "10/2015"}, {"body": "like concept composable", "d": "10/2015"}, {"body": "still phase throwing ideas getting feedback sounds like thinking form synthetic events registered renderer way could short circuit marshaling app ui side thinking", "d": "10/2015"}, {"body": "would say solves mhevery issues nt really understand technical discussion think would much simpler instead extending meaning directive would nice extend use output add extra param object contain certain properties approach possible keep template clean make everything componentdirective side also remember changed term event called fwiw two cents throws smoke dissapears", "d": "10/2015"}, {"body": "alpha use attribute selector svg group work seem get component custom element syntax looking work example works fine", "d": "10/2015"}, {"body": "nborelli yes known issue new compiler working fix tbosch", "d": "10/2015"}, {"body": "edge case using g attribute selectors absolutely fine nice see works", "d": "10/2015"}, {"body": "alxhub land closed", "d": "10/2015"}, {"body": "yes landed", "d": "10/2015"}, {"body": "mhevery elaborate issue either want base query list proposed replace wherever querylist imported import package observeobservedart show observablelist", "d": "10/2015"}, {"body": "obsolete longer use traceur", "d": "10/2015"}, {"body": "allow dom events bubble still issue shadowdom retargeting changes property event event come form component hide shadow dom implementation detail sure important jelbourn come concrete example would need think example would make easier discuss needed", "d": "10/2015"}, {"body": "less issue dom events bubble think event retargeting still happen components also probably control whether want retarget usecase component wants act like widget form control say example material design button rendered output would look something like far consumer concerned target click event element put page without retargeting though target going div leaking implementation details component", "d": "10/2015"}, {"body": "landed master", "d": "10/2015"}, {"body": "think obsolete thinking closing", "d": "10/2015"}, {"body": "want integrate protractor application help guide help setting protractor also need know whether phantomjs would work protractor application", "d": "10/2015"}]