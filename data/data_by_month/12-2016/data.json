[{"title": "able create new events", "body": "want feature able extend syntheticuievents add event required thank", "num": "8665", "d": "12/2016"}, {"title": "jquerybootstrap working", "body": "want request feature report bug current behavior run example jquerybootstrap working expected behavior jquerybootstrap working showing blank page version os windows", "num": "8664", "d": "12/2016"}, {"title": "facebook engineers thank", "body": "facebook engineers working open source reactiflux wanted take moment thank hard work job easy million requests coming time internal teams external community dan abramov compared managing issues pull requests juggling chainsaws fire yes know get paid really well open source full time work meets facebook needs think gone beyond way treated community way guys respond emails twitter mentions attention give issuepr time give different organizations podcasts amas list goes personally seen amazing humility pleasure around wonderful people thank excellence put efforts like invite react community reply thread thank comments team facebook let show grateful feel free include experiences team react ecosystem helped developer sincerely behalf reactiflux community gabegreenberg markerikson kyleamathews taion jquense vcarl benigeri phoenixmatrix", "num": "8663", "d": "12/2016"}, {"title": "using webpack", "body": "using webpack seems webpack becoming popular frontend module bundler wish react hug like angular", "num": "8660", "d": "12/2016"}, {"title": "webcomponents requires class syntax", "body": "want request feature report bug bug current behavior modern browsers longer permit means creating web components see possible use custom elements without classes domenic webcomponent demo uses nowremoved means creating webcomponents current behavior bug please provide steps reproduce possible minimal demo problem via similar template running linked webcomponent demo throw uncaught typeerror expected behavior demo executes amp renders versions react browser os affected issue work previous versions react sure change went force browsers chrome broken broken", "num": "8656", "d": "12/2016"}, {"title": "reactdommount reactdomrender flipped curried", "body": "would micro optimization appease functional gods order arguments always felt backwards say want app render want render might sound kind useless first actually built something rendering different components div based something happening outside react js import curry flip ramda const mount curry flip reactdomrender const render mount documentgetelementbyid content otherframeworktabindex render else otherframeworktabindex render else render", "num": "8654", "d": "12/2016"}, {"title": "infinite loop error thrown method", "body": "infinite loop components error render callback calls update parent component code run code unexpected infinite loop expect code stop thrown error suddenly change method component render works expected code correct behaviour get bug reactreactdom looks like version works correct cases", "num": "8653", "d": "12/2016"}, {"title": "featurerequest custom purecomponent comparelevel", "body": "want feature situation shallow compare one level us found common redux store long array filter get array b may pushremove object tofrom maymaynot change b since b always rebuilt purecomponent always rerender hope purecomponent shallow compare one level came idea js class mycomponent extends purecomponent let broke old code assert purecomponent purecomponent eh like maybe class mycomponent extends purecomponent level compare props level compare state hope consider", "num": "8643", "d": "12/2016"}, {"title": "textarea onfocus stoppropagation incorrect cursor rendering firefox", "body": "current behavior using event textarea parent causes cursor disappear render incorrect location firefox see vanishing cursor fiddle issues chrome edge firefox problem full app cursor nt vanish rather moves elsewhere italics placeholder text reproduced behavior fiddle expected behavior hard say expected behavior since real event bubble fiddle show cursor position affected event stopped vanillajs environment versions react browser os affected issue work previous versions react fiddle shows issue ff windows saw issue stoppropagation get eaten alive using say nonbubbling focus event simplifies one interactions setting specifically app bunch widgets marked active user clicks field widget widget marked active however widgets nested widgets innermost widget marked active", "num": "8642", "d": "12/2016"}, {"title": "isomorphic app throws incorrect error using legacy refs unstablehandleerror react dom tree root always node reference", "body": "building application renders react component server sends markup client client side react rendering takes wrapping root component react hot loader component component uses new method catch errors occur initial mount let say put code components render method guarenteed throw error client server maybe something like let say along side component another component uses legacy ref something like client calls following error thrown incorrect note using server side rendering correct error would thrown ie clearly solution use legacy refs bug string refs deprecated", "num": "8630", "d": "12/2016"}, {"title": "strange performance problem google chrome putlistener appears timeline", "body": "want request feature report bug performance problem latest chrome windows firefoxedge work fine current behavior chrome freezes seconds second render current behavior bug please provide steps reproduce possible minimal demo problem via similar template please open first input type cause items redrawn observe browser freezes seconds afterward everything works fine chrome inspector timeline reveals strange react behavior expected behavior happen versions react browser os affected issue work previous versions react tried react windows", "num": "8626", "d": "12/2016"}, {"title": "ca nt stoppropagation render subcomponents componentdidmount", "body": "js bin demo render dragging child parent triggers dragstart problem event tried estoppropagation enativeeventstoppropagation enativeeventstopimmediatepropagation useless ca nt stoppropagation render subcomponents componentdidmount render child parent mounted", "num": "8625", "d": "12/2016"}, {"title": "purecomponent working setstate inside interval", "body": "want request feature report bug report possible bug current behavior calling new state insider callback cause rerender using tried logging next previous state inside show identical even though nt current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior component update versions react browser os affected issue work previous versions react latest version", "num": "8624", "d": "12/2016"}, {"title": "refs callback called twice every render even component instance reused", "body": "want request feature report bug bug perhaps documentation current behavior documentation refs dom says ref attribute takes callback function callback executed immediately component mounted unmounted create stateful component like class scrollhelper extends reactpurecomponent componentdidmount consolelog scrollhelper componentdidmount componentwillunmount consolelog scrollhelper componentwillunmount render consolelog scrollhelper render return use via within app see behavior documented rather following pattern logs first render scrollhelper render scrollhelper componentdidmount scrollhelper ref lt props gt data changes elsewhere app scrollhelper ref scrollhelper render scrollhelper ref lt props gt data changes elsewhere app scrollhelper ref scrollhelper render scrollhelper ref lt props gt data changes causing scrollhelper actually unmount scrollhelper ref scrollhelper componentwillunmount expected behavior according docs would expect callback called exactly two times events component scrollhelper componentdidmount scrollhelper componentwillunmount instead gets reset basically every time page rerendered even though pretty clearly ending component instance time verified true via additional code well evident lack additional componentdidmount logs anyway versions react browser os affected issue work previous versions react react idea behavior earlier", "num": "8619", "d": "12/2016"}, {"title": "finddomnode work statelesscomponent", "body": "report work detail hello need hide component parent parent child writen others ca nt rewrite code resolve problems seems useless resolve code thanks lot class extends reactcomponent componentdidmount finddomnode styledisplay none render return const b gt return page b", "num": "8615", "d": "12/2016"}, {"title": "meta tags seo react", "body": "hello everyone used package dynamic meta tags react nt work made tools d\u00e9veloppement browser showing good made view source nt showing wrong thanks advance", "num": "8609", "d": "12/2016"}, {"title": "feature new jsx attributes", "body": "want request feature report bug feature current behavior tattoodo trying build rss feed delivering instant articles facebook rendering feed react setup unable provide needed attributes root tag expected behavior attribute probably rssfamiliar attributes transpiles versions react browser os affected issue work previous versions react react v", "num": "8603", "d": "12/2016"}, {"title": "dot notation shape props", "body": "short long lets class foo possible say sets addition saying would nt override defined possible think think please vote", "num": "8601", "d": "12/2016"}, {"title": "feature request support gestureevent api", "body": "gestureevent api currently nonstandard api target touch events nontouchscreen computers eg pinch gestures laptop trackpad safari supports starting version currently sole browser apple uses api enhancing apple maps widgets native gestures live example seen wwdc page currently seems impossible attach event handlers declaratively via react elements solution attach event handlers manually part ref callbacks proper implementation would highly appreciated nb microsoft rolls version usage seems less straightforward though msdn links usage api", "num": "8600", "d": "12/2016"}, {"title": "feature setstate without rerendering children", "body": "dev want able change state component without triggering rerender children better optimize app use cases imagine controlling visual state component defined state object inside render function effects display property nothing else form input element invisible label shows username invalid password short controlled true appends element calling trigger rerender components chain update way effecting visual update unless implemented nt make sense extra logic something could avoided first place useful function like propagates children components feedback welcome thanks", "num": "8598", "d": "12/2016"}, {"title": "unused function fiveargumentpooler", "body": "reference use fiveargumentpooler codebase deleted without issue sending pull request", "num": "8596", "d": "12/2016"}, {"title": "react missing files", "body": "throw err error find module reactlibreactdomserver functionmoduleresolvefilename functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload", "num": "8588", "d": "12/2016"}, {"title": "rfc testing browser compatibility", "body": "testing browser quirks challenging set page site local react repository made easier isolate browser differences document known issues example could start outstanding input issues like work way backward historical decision points adding additional rules support specific browsers speaking gaearon aweary see couple outstanding tasks x add pagesite local react repository includes test cases reproducing specific browser quirks x make easy switch versions react via cdn references local builds x catalog existing fixes outstanding issues start building test cases modify react flags via query strings mechanism quickly switch fiber standard dom renderer eventually could also great resource react handles dom manipulation obscure dom api concepts reference notes implementors dom rendering libraries test cases ie password fields nhunzaker backport input fix jquense change event fire ie edge certain circumstances jquense onchange randomly misses keys ie typing quickly jquense onclick firing disabled buttons aweary block change events disabled aweary mouse enter leave work consistently disabled elements aweary change event bubbling nt work controlled components ie", "num": "8583", "d": "12/2016"}, {"title": "ontouchend leads focus inputs rendered touch", "body": "want request feature report bug bug current behavior ontouchend event leads rendering input element location original touched element focus input element means touch reused new input element current behavior bug please provide steps reproduce possible minimal demo problem via similar template check following fiddle reproduce open mobile device mode chrome open fiddle touch device zoom touch click fully land theoretically input element behind double click somewhere touch click input element focused also see gif case repro steps unclear expected behavior input element focused exist touched yet versions react browser os affected issue work previous versions react also work chrome android chrome web view maybe browsers", "num": "8582", "d": "12/2016"}, {"title": "read property gethostnode null", "body": "feature request current behavior read property gethostnode null expected behavior error message tells wrong know fix react", "num": "8579", "d": "12/2016"}, {"title": "attempted update component", "body": "feature request current behavior expected behavior component would help error message would tell component react", "num": "8578", "d": "12/2016"}, {"title": "toplevel callback different semantics setstate callbacks", "body": "call callback state update enqueued separately callback called outside fiber parlance priority leads two separate flushes triggers synchronous render flushed ever called replicated behavior fiber well however toplevel callback passed semantics state update callback flushed end next render even outside see unit test example initial callback called initial mount whereas callback callback semantics would flushed updates scheduled inside fix inconsistency callbacks semantics opinion makes sense callback flushed right updatetoplevel render corresponds change callbacks behave way one way implement would unify et al accept callback could change toplevel callback behave way callbacks either way would require breaking change react question whether want make change possibly release version stack make fiber match current inconsistent behavior fix later facebookreactcore", "num": "8577", "d": "12/2016"}, {"title": "breaks default param behavior componentdidmount production build", "body": "want request feature report bug bug current behavior passed first argument becomes issue default param specified backtrace componentdidmount call seems like difference extra argument line repro clone project cd open supported browser open console log message kill wzrd process run refresh console log null expected behavior either log log development build production build nt differ regard versions react browser os affected issue work previous versions react everything ok", "num": "8576", "d": "12/2016"}, {"title": "proptype validation fails nesting validations", "body": "want request feature report bug bug current behavior app properly validate nest reactproptypes testing current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo expected behavior fail proptype validation versions react browser os affected issue work previous versions react react", "num": "8573", "d": "12/2016"}, {"title": "question support need way programmatically update field defaultvalue", "body": "support question looking robust performant way update input field text programmatically input field instead something like js render function return problem want sync database upon onblur event input field use instead get work two problems see using value instead defaultvalue much less performant gt updating react component state every keystroke b importantly makes database sync logic complex update react component state every keystroke sync database every onblur rather write logic possible asked question please let know ideas thanks", "num": "8571", "d": "12/2016"}, {"title": "dangerouslysetinnerhtml mark", "body": "want request feature report bug bug current behavior setting url contains text result current behavior bug please provide steps reproduce possible minimal demo problem via similar template problem expected behavior text amp reg replaced workaround versions react browser os affected issue work previous versions react tested chrome", "num": "8567", "d": "12/2016"}, {"title": "setstate inside setstate keeps unprocessed call queue", "body": "want request feature report bug bug current behavior nested setstate call queued executed next batch processing additionally callback param set executed immediately demo see console debug output expected behavior everything queue processed also attached execution tested current", "num": "8565", "d": "12/2016"}, {"title": "onchange registering state change paste delaying new state changes", "body": "bug report onchange registering state change paste delaying new state changes current behavior textinput box takes function prop sets state parent component onchange registering initial copy paste oddly type extra key pasted returns string count original paste count additional character appears react one change behind despite registering something changed make clear added consolelogs see behavior found initial paste triggering onchange event case despite explicitly setting state setting key pasting characters verified irb displaying type another character making characters triggering state change initiated step one returning original pasted key type yet another character one step behind printing printed step abridged code jsx import react component proptypes react import router reactrouter import authform componentsauthform import keyentry componentskeyentry export default class authorizationcontainer extends component constructor props context super props context thisstate accountkey thissetaccountkey thissetaccountkeybind thiskeylengthvalid thiskeylengthvalidbind setaccountkey event let text eventtargetvalue thissetstate accountkey text consolelog got got display initial paste thiskeylengthvalid consolelog thisstateaccountkey consolelog thiskeylengthvalid consolelog thisstateaccountkeylength keylengthvalid return thisstateaccountkeylength render return authorizationcontainercontexttypes router proptypesobjectisrequired import react proptypes component react export default class keyentry extends component constructor props super props render return keyentryproptypes setaccountkey proptypesfuncisrequired expected behavior paste accountkey state would key pasted length versions tested react version chrome version similar issue", "num": "8561", "d": "12/2016"}, {"title": "click handler get called twice nonprod mode", "body": "think bug happens nonprod mode noticed using reactdropzone library think found simple use case reproduce problem check fiddle see click handler called twice even though element clicked example showing working working believe something outer div click listener chunk code tested chromemac also seen behavior react", "num": "8559", "d": "12/2016"}, {"title": "error find module reactdomlibreactperf reactlibreactaddonsdomdependenciesjs", "body": "spotted issue regarding something like file exists brunch builds ok fails browser error nt know version using prior worked tried still luck", "num": "8556", "d": "12/2016"}, {"title": "form submitted click", "body": "want request feature report bug report bug current behavior strange behavior form submitted click following sequence induce behavior click call setstate button transformed form submission handler called expected behavior expected trigger form submit versions react browser os affected issue work previous versions react reproduced react google chrome firefox see fiddle behavior happen add unique property buttons", "num": "8554", "d": "12/2016"}, {"title": "update rendertostaticmarkup documentation", "body": "inconsistencies regarding use rendertostaticmarkup current documentation says similar rendertostring except nt create extra dom attributes datareactid react uses internally useful want use react simple static page generator stripping away extra attributes save lots bytes release statement suggests datareactid longer every node result using documentcreateelement prime node cache create dom nodes allowing us skip potential lookup used datareactid attribute root nodes datareactroot attribute server generated markup still contain datareactid looking optimize server render content removing extra markup thought something wrong still lot datareactid everywhere still possible render server without extra dom attributes", "num": "8553", "d": "12/2016"}, {"title": "version react reactdom nt work together", "body": "used version react reactdom together get following errors setup nt problem use code version instead", "num": "8551", "d": "12/2016"}, {"title": "failed find valid digest integrity", "body": "run build command upload files server error appears mobile browsers failed find valid digest integrity attribute resource computed integrity resource blocked", "num": "8549", "d": "12/2016"}, {"title": "requesting reviewfeedback blog inner workings virtual dom", "body": "wrote blog post make easy people learn virtual dom works using preact react explain wondering much similar react appreciate reviewfeedback thank", "num": "8547", "d": "12/2016"}, {"title": "textarea placeholder nt shown ie rendered using react", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template textarea display placeholder text initially placeholder text shown focus focusaway works browsers believe go figure believe issue solved seems come back pr originally fixed issue expected behavior placeholder text initial show render versions react browser os affected issue work previous versions react react looks like working", "num": "8546", "d": "12/2016"}, {"title": "documentation translations", "body": "hello plans including official communitysupported translations react docs translaitongang completed vuejs docs russian translation also progress react ones believe least japanese chinese communities would also like translations could integrate somehow upd see random translation files done document version display detected mean ca nt see header dropdown language choice something", "num": "8541", "d": "12/2016"}, {"title": "attach reacteventlistener ajaxdynamically loaded content", "body": "way attach onchange event listening like render function html loaded ajax inserted via example top render ondidmount ondidupdate ca nt get work callback issue called variable refs dynamically loaded nodes suggestion great edit possibly looks like want trigger react dom manually ps trying work native things suggest jquery documentaddeventlistener looking multibrowser multiinput types solutions like done react", "num": "8540", "d": "12/2016"}, {"title": "reacttestrenderer crashes rerendering reactnative textinput", "body": "want request feature report bug bug current behavior reacttestrenderer crashes rerendering component props change die javascript import reacttestrenderer reacttestrenderer import react component react import textinput view reactnative class example extends component constructor props super props thisstate query render const dosomething gt thissetstate query return die function const renderer reacttestrenderercreate renderertojson children propsonpress renderertojson expected behavior exception textinput value prop set versions react browser os affected issue work previous versions react react reactnative reacttestrenderer jest", "num": "8539", "d": "12/2016"}, {"title": "reactdom server still generate datareactid", "body": "still get attribute html using version react reactdom", "num": "8537", "d": "12/2016"}, {"title": "war peace bug scrolling embed font text special characters", "body": "use embed fonts text like war peace russian french characters programmatically scroll bottom component rendered componentdidmount excess gap bottom scrolling example code use separate window mode plnker editor example dos nt work maybe react rendering nt conform fonts rendering react chrome firefox windows ubuntu", "num": "8534", "d": "12/2016"}, {"title": "provide way external tools list nodes event info", "body": "would like add react event bubbles markup tree firefox developer tools need way get list nodes attached event listeners somebody provide way added within day possible moment done make possible", "num": "8533", "d": "12/2016"}, {"title": "triggers onchange twice replacing text selection", "body": "want request feature report bug bug current behavior type text input select whole text type key hitting key triggered twice one time second time happens behave correctly demo fiddle expected behavior hitting key triggered one time versions react browser os affected issue work previous versions react react possibly also older versions windows", "num": "8531", "d": "12/2016"}, {"title": "instances change state", "body": "want request feature report bug click instancea state visiable true click instanceb instancea visiable always true click visiable true click b b visiable true visiable false current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8530", "d": "12/2016"}, {"title": "feature request support auxclick event onauxclick", "body": "version starting chrome new event handle middle click nt trigger middle click anymore", "num": "8529", "d": "12/2016"}, {"title": "dx feature specific error render returns component instead element", "body": "version render function returns react component instead react element error message might quite cryptic like uncaught error element type invalid expected string builtin components classfunction composite components got undefined think react could try detect render function returning component instead element print something convenient like displayname useful example using lib api breaking change prop changed component element hard find cause problem even looking invarient stackvariables debugger see quite related seems react tries put component jsx like also simply swallowed think warning would useful see", "num": "8517", "d": "12/2016"}, {"title": "components need key attribute", "body": "want request feature report bug bug current behavior created component receives value array options props render multi step form saved object switch steps rendered component keeps state previous component instance example one step component giving options font family next step font size fixed bug setting etc component javascript export default class dropdown extends reactcomponent constructor props super props onchange e value epreventdefault thissetstate value value thispropsonchange thispropsonchange value getoptions const items thispropsoptionsforeach content value gt itemspush return items render const options thisgetoptions return thispropsoptionsget thisstatevalue options javascript export default class mycomponent extends reactcomponent constructor props super props thisstate step fontfamily arial fontsize thisgotostep e step gt epreventdefault thissetstate step step thisonfamilychange value gt thissetstate fontfamily value thisonsizechange value gt thissetstate fontsize value getfirststep return choose font family getsecondstep return choose font size render return thisstatestep thisgetfirststep thisgetsecondstep versions react browser os affected issue work previous versions react react chrome mac os sierra sure something wrong bug", "num": "8516", "d": "12/2016"}, {"title": "onchange event triggering mozilla ie typefile react jsredux", "body": "pretty new guy react jsi little bit confused input typefile action working mozilla ie working fine chromei nt working bug import react react import connect reactredux import uuid nodeuuid import headeraction actionsheaderactions import uploadactions actionsuploadactions import notificationactions actionsnotificationactions import shortid shortid header", "num": "8515", "d": "12/2016"}, {"title": "undo behavior controlled textareas works differently default behaviour chrome", "body": "control textarea value behaves differently use undo textarea controlled undo one letter time undo works normally uncontrolled component undo seems work expected input components controlled textarea component undo one letter time normal undo works kind algorithm much going un redone try difference codepen tested react chrome chrome canary works expected firefox safari might chrome bug", "num": "8514", "d": "12/2016"}, {"title": "perf reporting wrong wasted time connected component", "body": "redux state change perf reporting wasted time connected component even props changed example project using react reactdom reactredux redux reselect immutable reactaddonsperf gaearon note check later thanks", "num": "8513", "d": "12/2016"}, {"title": "performance monitoring record behaviour page reload", "body": "bug using appears correctly switch performance monitoring react measures show timeline reproduce chrome go page nonproduction react code add query string described example open chrome devtools click timeline tab refresh page page refreshed look timeline note nt reactspecific marks console get empty array get actual performance measures tested react chrome expect see reactspecific events eg events react components timeline able access performance measures console looking code appears recorded performance measures immediately deleted may causing issue see const markend function debugid marktype shouldmark debugid return immediately every measurement instruct browser clear measure name seems like measurements ever take place removing final two lines function restores expected behaviour", "num": "8504", "d": "12/2016"}, {"title": "call function start using thisfunctionname componentdidmount", "body": "want request feature report bug report bug current behavior call function start using thisfunctionname componentdidmount expected behavior versions react browser os affected issue work previous versions react windows react", "num": "8502", "d": "12/2016"}, {"title": "ca nt render meta tags server side", "body": "want request feature report bug reporting bug current behavior trying iterate array objects represent meta tags getting error javascript import react react let metas reactcreateclass proptypes metas reactproptypesarray render function return thispropsmetasmap function meta return moduleexports metas current behavior bug please provide steps reproduce possible minimal demo problem via similar template server side rendering issue express syntaxerror usersrobertdomainwatchdogviewsmetasjsx unterminated jsx contents thispropsmetasmap function meta return parserpp parserreadtoken parsernexttoken parsernext parsereat parserppexpect parserpp parserpp parserpp expected behavior react parser work correctly meta tags server side versions react browser os affected issue work previous versions react never tried seems lots libraries like reacthelmet use rewind api solve think right able render meta tags without jump hoops expressreactviews react reactaddonscreatefragment reactaddonscsstransitiongroup reactaddonslinkedstatemixin reactaddonsshallowcompare reactaddonsupdate reactclickoutside reactdaypicker reactdom reactmasonrycomponent reactpurerender reactredux reacttapeventplugin reactvirtualized redux reduxthunk", "num": "8501", "d": "12/2016"}, {"title": "make sure reacttestrenderer others depend objectassign", "body": "currently reacttestrenderer probably nt depend objectassign needs", "num": "8500", "d": "12/2016"}, {"title": "type property missing reactelement class ie", "body": "found bug debugging ie current behavior type property missing reactelement class ie present browsers including edge expected behavior type property present react version browser ie os windows reactelement issue interface reactelement type string componentclass sfc props p key key sample test code reactchildrenmap thispropschildren child index gt consolelog child type returns undefined ie", "num": "8499", "d": "12/2016"}, {"title": "add component stack contenteditable warning", "body": "feature warning component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional would help heaps would know component causing", "num": "8497", "d": "12/2016"}, {"title": "theadpropschildren always array", "body": "thead contain one tr elements contains theadpropschildren object contains gt array would make much simpler use always returned array", "num": "8494", "d": "12/2016"}, {"title": "best way add raw attribute values elements", "body": "using direct snippet personal website safely assume uses widely somewhere render function part larger code render wo nt work problem mailto react reencodes order avoid well known way use however makes sense use since part much larger element set attributes way set whole element phenomenon encountered quite often many scenarios personally think whole overengineered real use cases scenarios protecting vital stuff programmers generally use well known api encode anyway really pointless real life practical scenarios thing gives headaches often makes jump hoops perform simple stuff would greatly appreciate suggestion handle mentioned scenarios thanks ps entire address block cleanly abstracted one component found", "num": "8493", "d": "12/2016"}, {"title": "dist files built processenvnodeenvdevelopment", "body": "want request feature report bug bug current behavior appears files builtbundled wrong current behavior bug please provide steps reproduce possible minimal demo problem via similar template open files search expected behavior correctly set build time expectation would versions react browser os affected issue work previous versions react version affected along unknown versions similarly affected", "num": "8492", "d": "12/2016"}, {"title": "invariant violation rendering using reactdom reactdomserver", "body": "using reactdomrender reactdomserverrender w causes invariant violation react see console notice render completely different components render methods criteria met warning show like least two nested components seems like reactdomserver messing itemmap regular react ids components nt match", "num": "8487", "d": "12/2016"}, {"title": "webpack fails build react syntaxerror", "body": "found strange issue react packaged using webpack issue nt make sense browser used development mode webpack build pipeline throw syntaxerror ternary operator sure blame webpack react everything fails inside react go setup setup empty application shows uses react dependency everything bundled webpack exact config repository well current behavior try launch setup get syntaxerror points perfectly valid line react sources particular nt like ternary operators much replace ifs manually breaks somewhere else inside react looks disable uglifyjs expected behavior react work included dependency packaged webpack nt report issues", "num": "8484", "d": "12/2016"}, {"title": "using ref set htmlfor prop input label", "body": "nt know currently possible believe would useful able use refs rather ids setting htmlfor prop label something along lines something previously considered currently possible", "num": "8483", "d": "12/2016"}, {"title": "without handler rendertostaticmarkup", "body": "using get message nt wrong could find issue", "num": "8482", "d": "12/2016"}, {"title": "scrolldown event triggering twice make scroll infinity", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce bug open demos chrome version scrolldown table expected results open demos chrome version also tested scroll event component lifecycle componendidmount get result demos expected behavior scroll times scrolling triggered times stops versions react browser os affected issue work previous versions react react versions tested os windows browser google chrome version bug appeared version chrome", "num": "8481", "d": "12/2016"}, {"title": "strange caret behaviour text inputs chrome desktop", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce go facebook messenger web app found react input field chrome type string flflflflflflfl try move caret backwards using arrow keys see problem caret ignores every keystroke jumps two places every keystroke backspacing middle string also produces strange behaviour video behaviour get versions react browser os affected issue work previous versions react bug present chrome os x bug also present fresh install chrome dev channel windows sauce labs bug present firefox safari os x bug seems present controlled uncontrolled fields value vs defaultvalue react reactdom nt know version facebook messenger", "num": "8480", "d": "12/2016"}, {"title": "trycath render childrens", "body": "hi problem application use window various childrens card children problem occurs load data server runtime exception happens others childrens load believe problem would solved trycatch father component figure", "num": "8473", "d": "12/2016"}, {"title": "unstablehandleerror cause unmountcomponent null error", "body": "want request feature report bug bug current behavior trying handle errors happens render method example import react react export default class testcompoent reactcomponent component return error typeerror read property bar null know handle selectors proper tests etc aim dispatch action exception happens redirect certain page tried use function unstablehandleerror like unstablehandleerror e function dispatch thispropsfunctiontodispatch e browserhistorypush foobarerrorpage return null tried different type return luck receive another error solution found try catch block render function nt like hoping find better solution expected behavior dispatch action redirect page want versions react browser os affected issue work previous versions react react reactdom redux google chrome macos sierra", "num": "8472", "d": "12/2016"}, {"title": "react performance issues", "body": "found shoulddidupdate performance worse refs control shouddidupdate control udpate import react component proptypes cloneelement react import reactdom reactdom class extends component class extends component render let row columns thisprops return class extends component render let row columns thisprops return class extends component render let value thisprops thisvalue value return value function getdata cindex c vindex v let rows columns var ret getdata var rows retrows var columns retcolumns reactdomrender documentgetelementbyid root consoletime let lt consoletimeend import react component proptypes cloneelement react import reactdom reactdom class extends component class extends component render let row columns thisprops thisrow row thiscolumns columns return class extends component render let row columns thisprops thisrow row thiscolumns columns return columnsmap column gt return class extends component render let value thisprops thisvalue value return value function getdata cindex c vindex v let rows columns var ret getdata var rows retrows var columns retcolumns reactdomrender documentgetelementbyid root consoletime let lt consoletimeend computer macbook pro memory browser chrom ms b ms browser ie b better way deal scenario", "num": "8471", "d": "12/2016"}, {"body": "flik example examples uses build babel convert example code fly reason example works run little root react folder easiest way probably install globally within react folder run see example", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "thank pretty new react pretty fun far learning right quite excited work mobile apps learning react native react way knowing bit swift react really simplified way make ios apps familiar fast great make something like react react native would nt know start great job hope skills using react develop great apps thanks guys libraries various work help community", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thanks really appreciate keep", "d": "12/2016"}, {"body": "thanks much love", "d": "12/2016"}, {"body": "thanks work", "d": "12/2016"}, {"body": "thank react native helped finally get mobile development rn provided motivation level dev skills", "d": "12/2016"}, {"body": "awwww thanks", "d": "12/2016"}, {"body": "first brief experience react native blown away hours playing around baby steps step forward sincerely appreciate hard work everyone contributed react", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank caring beyond code going paying attention people saying thinking understanding community efforts truly appreciated", "d": "12/2016"}, {"body": "thank writing powerful yet easy work tool", "d": "12/2016"}, {"body": "nice way end year group hug grin", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "thanks cornerstone coolest job ever", "d": "12/2016"}, {"body": "seriously never found nicer helpful group people life guys best thank", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "absolutely agree amazing group people thank much guys", "d": "12/2016"}, {"body": "yall great react", "d": "12/2016"}, {"body": "thank guys super supportive bringing changes community wanted react also done wonderful job bringing changes make development easier", "d": "12/2016"}, {"body": "thanks guys", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thank much react future doubt owe much success could nt grateful", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank awesome work using react awesome contributing super cool enriching experience thanks great maintainers project loved contribute wink", "d": "12/2016"}, {"body": "thank react joy work since picked year ca nt wait go future huge part community seen core contributors take time discuss architecture decisions around react apps developers offer insight things work way nt ever seen movement strong thanks", "d": "12/2016"}, {"body": "react awesome thank", "d": "12/2016"}, {"body": "really thank amazing work", "d": "12/2016"}, {"body": "working react pleasure technology community things thank", "d": "12/2016"}, {"body": "thanks everything impact team made overstated", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "guys awesome absolute pleasure working learning", "d": "12/2016"}, {"body": "thank wonderful work working angularjs two years building next big project react simple reason adding html js allows failures compile time ca nt wait learn separate application state presentation redux brought new excitement incredibly thankful", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "thanks facebook engineers work ed react many thanks rest contributors props gabegreenberg taking initiative start thread", "d": "12/2016"}, {"body": "seriously thank ca nt understated impact industry association livelihood community react reshaped thought frontend even people nt use react impacted virtually modern frameworks hints ideas popularized graphql rethinking backend going flow jest yarn reinventing fields pushing competition everything touched let forget talks community involvement createreactapp make things beginner friendly talks folks given including office hubspot keep", "d": "12/2016"}, {"body": "react view library work bundler including webpack said create react app cli uses webpack", "d": "12/2016"}, {"body": "please provide project reproducing problem", "d": "12/2016"}, {"body": "oops never mind try take look", "d": "12/2016"}, {"body": "yujiaze technically rendering child rendering root using separate render trees nt think events actually propagate one root get two separate trees events ca nt stoppropagation render subcomponents componentdidmount render child parent mounted render actual child returning render method need defer rendering sure parent mounted use state set flag js var parent reactcreateclass getinitialstate return mounted false ondragstart e consolelog parent edatatransfersetdata text parent componentdidmount thissetstate mounted true render return working example", "d": "12/2016"}, {"body": "thanks report unfortunately helpful without code example issue template includes line current behavior bug please provide steps reproduce possible minimal demo problem via similar template likely mutating state somewhere however without code impossible tell nt provide example close issue actionable", "d": "12/2016"}, {"body": "trying reproduce bug sandbox realized causing mutation thanks hint would possible add warning state mutations similar pretty tough one us debug cheers", "d": "12/2016"}, {"body": "attempt author nt continue working", "d": "12/2016"}, {"body": "closing since seem working fine would possible add warning state mutations similar reduximmutablestateinvariant pretty tough one us debug davegri track updates", "d": "12/2016"}, {"body": "think figured using clue code comments either sic owner changed make sure newest owner stored reference previous owner different forgotten reference change usage global purpose illustration function logref obj consolelog logref called obj within app render code get expected result happening every render new anonymous function instantiated code reactref logic treats new watcher feels obligated notify old new callback instances handoff workaround pass sort stable callback like prebound method longlived function instance leave open handoff behavior documented implication using inline functions highlighted potential pitfall", "d": "12/2016"}, {"body": "question help two subcomponents radio select parent container switch call two components need traverse component parent container call get number components within method try write following way wrong eg rendercoms let coms componentsmap component gt switch componenttype case return case return default return false thiscoms coms return coms clickfunction let com thiscoms let lt comlength consolelog thisrefscom getvalue get getvalue method inside subcomponent via error seem work way thisrefscom", "d": "12/2016"}, {"body": "also ran particularly problem parent component maintains array refs children one might expect code work properly however child goes away children refsetting function called times argument null resulting long unexpected null case notion old owner forget ref ironically reversed", "d": "12/2016"}, {"body": "resolved thank perhaps thisrefs behalf key", "d": "12/2016"}, {"body": "wrap div control", "d": "12/2016"}, {"body": "face developing react library wirte component users write wrapping solution think shouldnot change structure user code want resolve", "d": "12/2016"}, {"body": "provide realistic example clear want hide child something b would know would help explained use case detail", "d": "12/2016"}, {"body": "gaearon sorry replying late router library supports multiple pages mounting time need hide pages matched location instead unmounting using display none another way change style stateless components way supports hide component", "d": "12/2016"}, {"body": "hey thanks issue react able render tags fine made view source nt showing wrong unfortunately need information help please provide detail issue possible sample reproducing issue us use jsfiddle starting point", "d": "12/2016"}, {"body": "hey way find position document", "d": "12/2016"}, {"body": "sorry sure mean", "d": "12/2016"}, {"body": "thanks issue donlion far know react support rendering rss xml documents point future intend remove attribute whitelist together may allow render xml documents nt believe something intend explicitly support cc spicyj", "d": "12/2016"}, {"body": "look careless author responded code transpiled took liberty looking made carelessloader webpack use mostly generate enterprise fun time xmls builds might fit use case", "d": "12/2016"}, {"body": "react dom nt support xml even change attribute whitelist lots htmlspecific logic future someone could perhaps make react xml xmlspecific", "d": "12/2016"}, {"body": "already explicitly slightly verbose magic full control merging works example used immutablejs could something like general prefer generic ways something instead creating sugar requires lot learning unrolled whenever bump complex case therefore doubt implement something like proposal case ideas improving jsx please share instead react uses jsx grammar discussed hope helps", "d": "12/2016"}, {"body": "nt think would want adopt support nonstandard api specification proposed consider adoption specification reviewed long reliably performantly polyfilled browsers react supports point think early consider supporting appreciate issue going close since feel relatively confident rest react team feels similarly cc gaearon something guys want pursue let know", "d": "12/2016"}, {"body": "think react differentiate default component userdefined components differentiate parent children component would difficult distinguish globallocal renders", "d": "12/2016"}, {"body": "zeel think clear proposing assuming components render function looks like also assume react successfully completed first render everything dom later user interaction needs changed right call problem also call render functions turn call children render functions someone returns false know react says javascript fast computing diff performance hit think compute something nt changed actual data model proposal comes instead could definitions means notify react something component changed flow app first render using virtualdom components available work called called case since local change order generate vdom react wo nt call render functions instead use already available vdom knows exist otherwise call react compute diff old vdom new one apply changes", "d": "12/2016"}, {"body": "wrong using state child components unchanged easily checked", "d": "12/2016"}, {"body": "component b c shouldcomponentupdate already return false anyway fast fast state clear hacks like wish state would sync virtual dom make totally sense use jquery every visible toggled element want manipulate dom directly use refs finddomnode good use cases use", "d": "12/2016"}, {"body": "use instance variable like store data nt affect rendering", "d": "12/2016"}, {"body": "yaycmyk affect rendering children self", "d": "12/2016"}, {"body": "extend components b c instead way children method called props inner state change basically implemented way nt explicitly define", "d": "12/2016"}, {"body": "thanks issue neeksandhu appreciate time took write ideas going echo others said say extension provide exactly want update component render output without updating specific children component said going close existing solution generally pretty selective comes implementing new public apis feel free continue discussion thanks", "d": "12/2016"}, {"body": "found problem reactdomserverjs reactlib install react", "d": "12/2016"}, {"body": "got reactlib", "d": "12/2016"}, {"body": "miss files react works fine", "d": "12/2016"}, {"body": "deprecated since react removed change import instead", "d": "12/2016"}, {"body": "anything inside private implementation details change version please never use directly public api documented never need import something see react trying import failing likely incompatible versions installed make sure error go away hope helps", "d": "12/2016"}, {"body": "kovensky using import anything directly", "d": "12/2016"}, {"body": "please see second paragraph reply issue see versions matching supported", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "upgrade cause ok google itit material ui plugin version", "d": "12/2016"}, {"body": "modules like relied react internal apis need update nt officially recommend relying private apis keep changing way nt need run create problems later", "d": "12/2016"}, {"body": "thanks \uff9f\u0434\uff9f problem might cause later using sudo", "d": "12/2016"}, {"body": "problem might cause later using sudo may get wrong permissions files", "d": "12/2016"}, {"body": "thanks found article realize", "d": "12/2016"}, {"body": "cc jquense done lot work area think", "d": "12/2016"}, {"body": "thoughtsquestions highlevel structure page group test cases case page maintain central directory navigating keep page count put related tests single page want include exact steps reproduce check behavior looking validate easy new contributor look follow steps know working potentially use paths load arbitrary version react unpkg page example would load test react would make easy quick test regressions", "d": "12/2016"}, {"body": "would put everything single page switch top points cdn versions local build refreshes part page change", "d": "12/2016"}, {"body": "make easy switch versions react via cdn references local builds small set inbrowser tests reactvirtualized read query param toggle different versions react version number reactvirtualized either version number pulled cdn local runs local build useful checking regressions perf changes dan inpage switch suggestion common case probably compare local latest release npm", "d": "12/2016"}, {"body": "sounds really helpful general much knowledge either lost trapped tons jsfiddles many different issues love many many browser decisions made attend browser quirks better documented always tough try understand even starting point addressing dom issues without knowledge also add documenting minimal reqs certain changes would really helpful input components needing work imperative sets dom node well prop changes would also tool new issues wonder adding page would look like changes accompany associated fixes possible leverage existing code iteration tool codepenjsbinjsfiddle might make helpful beginning bits identifying new issues", "d": "12/2016"}, {"body": "see process would look something like user identifies new issue shares case reproducing jsfiddle whatever verify issue someone fixes includes changes test page pr like unit tests use test page validate fix supported browsers", "d": "12/2016"}, {"body": "long term stretch goal automatic deployment test page pr opened affects dom code would amazing", "d": "12/2016"}, {"body": "one item though okay excluding core part issue base line browser compatibility browsers target effort strip fixes unsupported browsers consider compatibility package think primarily pertains event plugin system though could wrong", "d": "12/2016"}, {"body": "btw event changed onclick onmouseup input receive focus clicktouch", "d": "12/2016"}, {"body": "workaround project always call interaction component button callback execute could possibly lead new site via reactrouter contains input components feel definitely comfortable quick solutions", "d": "12/2016"}, {"body": "little investigation chrome noticed react receiving events event triggers updates tree means time fires target ends input looks like spec says firing events okayexpected behavior user agent may dispatch touch events mouse events response user input existing workaround seem using like mentioned", "d": "12/2016"}, {"body": "please see usually means react inconsistent state caused earlier error code nt see error might block silently swallowing related explanations sure problem please provide reproducing example", "d": "12/2016"}, {"body": "closing update likely related kevart provide case reproducing issue look reopening identified different issue", "d": "12/2016"}, {"body": "makes sense would minified build code names would mangled", "d": "12/2016"}, {"body": "like likely issue code swallowing original error first result internal state gets corrupted get weird error later", "d": "12/2016"}, {"body": "makes sense sorry guys try find happens", "d": "12/2016"}, {"body": "thanks issue technically valid use case sounds bit confusing becomes issue default param specified componentdidmount specifying default param nt ever need call method react calls want share code two lifecycle hooks extract third method", "d": "12/2016"}, {"body": "yeah code would probably clearer shared code extracted third method manually calling inside reactrouter transitions params change call even though needs fetch data using new param", "d": "12/2016"}, {"body": "reactrouter transitions params change call componentdidmount even though needs fetch data using new param generally good place yea recommend calling lifecycle methods manually", "d": "12/2016"}, {"body": "change likely reverted since used passing around test options use", "d": "12/2016"}, {"body": "reserved meaning react end therefore fails check need remove validations additionally defined version works", "d": "12/2016"}, {"body": "work dom node anything", "d": "12/2016"}, {"body": "probably would put render method somewhere else probably put render method would think", "d": "12/2016"}, {"body": "major downside approach two different pieces rendering logic method updates method good right ideally rendering logic would render method might work super well", "d": "12/2016"}, {"body": "mean js reactcreateclass updaterefs function objectkeys input item gt thisrefs item input item render function return ideally render function could updaterefs without separate code one way achieve might conditionally use either defaultvalue value elements would also tricky thanks idea probably work", "d": "12/2016"}, {"body": "idea using placeholder instead defaultvalue might solve kind problem", "d": "12/2016"}, {"body": "particular performance problem trying avoid using tried using state", "d": "12/2016"}, {"body": "kinda complicated see question top think explains well basically use value instead defaultvalue use onchange use change component state every keystroke means default would also updating db every keystroke unnecessary amount requests one question moment setting call react component update calling line code", "d": "12/2016"}, {"body": "seems like defaultvalue set never update dom element first created bad news bears update user types field", "d": "12/2016"}, {"body": "gaearon example field wo nt update textfield stuck whatever", "d": "12/2016"}, {"body": "change component state every keystroke means default would also updating db every keystroke unnecessary amount requests seems like update db every time local state changes example could blur seems like defaultvalue set never update dom element first created might nt actually know dom nuances well worth looking mdn", "d": "12/2016"}, {"body": "oh shit one exception behaviour thisrefs points dom node refs html elements add ref custom component point component instance instead access dom case reactdomfinddomnode componentinstance probably problem dom updating actually html tag react component figure thanks input", "d": "12/2016"}, {"body": "gaearon fyi figured solution one use key uniquekey component elements update key want unmountremount component rerender new data defaultvalues reflect new data oherwise remounted component rerendered defaultvalue would still show original default value new values remounting crucial part get component show new values text fields using defaultvalue instead value without remounting programmatically change defaultvalue input field tmk best practice heavily used features use case remounting happens every seconds big deal terms performance got ta love fe dev", "d": "12/2016"}, {"body": "glad found solution satisfies mentioned earlier would recommend using state instead sending data db every state update", "d": "12/2016"}, {"body": "toyed day yesterday afaict react component solution seems good one use case nt believe react unmounts whole containing component components key eg js return guessing change unmount input element key components elements root element verify need sync db state change change child component state nothing syncing change parent component state right time sync db perhaps case changing parent component state frequently nt think nt think good coarser grain event text field input field child component", "d": "12/2016"}, {"body": "react issue please look", "d": "12/2016"}, {"body": "ah ok test safari firefox verify chrome bug thanks looking alejandro gonzalez dec mateusz burzy\u0144ski notifications githubcom wrote react issue please look receiving authored thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "bug need use proper html entities setting", "d": "12/2016"}, {"body": "thanks andarist exactly closing since react issue", "d": "12/2016"}, {"body": "makes sense use proper html entity escaping", "d": "12/2016"}, {"body": "think calling inside updater argument ever meant supported trying accomplish need return next state call ideally throw", "d": "12/2016"}, {"body": "tl dr imho react great job offering simple short complete documentation useful warnings dev runtime would great add warning note documentation behaviour maybe would easy fix hand prevent current situation ignore call thank gaearon quick reply totally agree cases wo nt necessary using media capture media stream api lot sometimes requires multiple actions taken receive result developing new feature colleagues recognized something processed figured nested setstate regarding documentation use function first argument ensure time state props hand guarantee function triggered meant used inside updater sure find proper solution", "d": "12/2016"}, {"body": "would great add warning note documentation behaviour agree list sometimes requires multiple actions taken receive result nt quite understand need call inside updater inside updater want change state need return next state show example think would necessary", "d": "12/2016"}, {"body": "thank lot used way take care avoid looking forward friendly reminder smile implementation requires nested setstate come example", "d": "12/2016"}, {"body": "looked depth yet expect updated immediately call case documentation immediately mutate creates pending state transition accessing calling method potentially return existing value guarantee synchronous operation calls calls may batched performance gains", "d": "12/2016"}, {"body": "thanks nt realize behavior going try callback see still issue", "d": "12/2016"}, {"body": "ok callback worked paste immediately bad wrote pretty bug report nothing thanks help gaearon", "d": "12/2016"}, {"body": "nothing helped respond quickly", "d": "12/2016"}, {"body": "changing stops counter incrementing two time also think might event bubbling happening since trigger click child bubble", "d": "12/2016"}, {"body": "im really aware react internals short debug seems culprit line button handler synchronously calling effect triggers top level dispatch click event button handler moment still finished probably internal queue programatically induced click handled calls handlers button div issue resolved would call dibs guidance internals somebody way experience react quite easily fixable think", "d": "12/2016"}, {"body": "edvinerikson changing click count fix added make issue called twice obvious look logs button click called twice yeah looks like issue event bubbling see working working working example invoking click also clear show minified prod version react would argue dev mode prod mode functional behavior", "d": "12/2016"}, {"body": "need look example closer say happening quick note mutate nt likely want believe something outer div click listener chunk code code used debugging purposes nt likely related actually dispatching event dispatching custom event turn event handler code executed", "d": "12/2016"}, {"body": "aweary fyi comment code mentioned nt see issue app uses", "d": "12/2016"}, {"body": "see whats stack trace second causes second run also verified second run caused programatically clicking input within button handler reaching lines run development mode causes handlers run sidenote full native also changing lines outcome proves causing pair button click div click said caused synchrosity setup event listener button dispatch event synchronously causing new happen meeting handle div click effectively listeners set moment wasnt released yet listeners fired finally removeeventlistener div onclick later higher call stack button onclick question properly set guarded callbacks development mode code benefit additionally fall synchronous bug", "d": "12/2016"}, {"body": "got working using something must changed make brunch fail provide info please ask", "d": "12/2016"}, {"body": "updated reactrelated packages", "d": "12/2016"}, {"body": "everything installs react component react fbjs corejs promise asap uaparserjs looseenvify jstokens objectassign reactaddonscsstransitiongroup reactdom reactformelements react envify jstransform commoner glob q recast asttypes esprima sourcemap esprimafb objectassign sourcemap reacthelmet deepequal reactsideeffect fbjs whatwgfetch reactredux hoistnonreactstatics invariant lodash reactrouter history querystring stricturiencode tbh nt know core nt", "d": "12/2016"}, {"body": "please publish standalone repo instructions reproduce thanks", "d": "12/2016"}, {"body": "problem probably use reactformelements depends react installing two versions react one incompatible installed version reactdom", "d": "12/2016"}, {"body": "well whadya know thanks intrigued however understand component nt using form elements nt used yet next list would cause failure npm node still little confusing", "d": "12/2016"}, {"body": "designermonkey hard tell exactly happening without repository demonstrating issue", "d": "12/2016"}, {"body": "sadly private pressure get done get example put together asap thanks help guys", "d": "12/2016"}, {"body": "spoke soon clearout morning start afresh reinstalled without forms module issue come back", "d": "12/2016"}, {"body": "maybe using custom npm registry broken npm cache invalid file exists somehow old version", "d": "12/2016"}, {"body": "close error demonstrably caused wrong npm package bundler file exist please let know wrong missed something", "d": "12/2016"}, {"body": "said initial comment know exists confusing spotted issue regarding something like file exists brunch builds ok fails browser error", "d": "12/2016"}, {"body": "yea trying argue pointing unactionable us use keeping open figure happening please post comment manage find time share project demonstrating happy dive cheers", "d": "12/2016"}, {"body": "know thought issue already file going missing older builds may tangibly related things tried clearing npm cache problem persists running problem goes away test repo", "d": "12/2016"}, {"body": "thanks reproducing case helpful either brunch bug issue packaging latter might related hard guess leave open confirm either", "d": "12/2016"}, {"body": "thanks man", "d": "12/2016"}, {"body": "confirm running brunch build production problem goes away probably brunch bug", "d": "12/2016"}, {"body": "seams brunch issue check thread", "d": "12/2016"}, {"body": "thanks report fbarrailla able reproduce issue latest release well mentioned using unique button solves issue forces react reuse existing element event handler supposed te removed look nt happening correctly", "d": "12/2016"}, {"body": "taking look updatedomproperties explicitly nothing old event handler familiar codebase yet sure prevent event bubbling like aweary said reusing dom node causes submit event fired get keyed example prevent node unmounting would love keep looking anyone could help point right direction", "d": "12/2016"}, {"body": "source code look rendertostaticmarkup nt find anything datareactid function control dom attributes checksumattrname datareactchecksum calling page think nt see", "d": "12/2016"}, {"body": "yes known regression please subscribe updates unfortunately clear fix help would appreciated closing duplicate", "d": "12/2016"}, {"body": "use create react app please file issues repository issue tracker react said solve problem closing issue since related react welcome reopen link nt help cheers", "d": "12/2016"}, {"body": "ohh sorry", "d": "12/2016"}, {"body": "think lot dependent implementation observable part works react described current implementation described detail although changing lot fiber hope helps", "d": "12/2016"}, {"body": "looks like great post rajaraodv try reserve issue tracker actual issues feature requests going close maybe try posting communityoriented platform like feedback great day", "d": "12/2016"}, {"body": "thanks report lkroner share small test case reproducing issue use starting point", "d": "12/2016"}, {"body": "go aweary", "d": "12/2016"}, {"body": "thanks os testing actually able reproduce issue windows reproduce windows", "d": "12/2016"}, {"body": "yep using browserstack windows", "d": "12/2016"}, {"body": "thanks looks like separate issue windows take look get chance", "d": "12/2016"}, {"body": "thank realize minor nuisance thanks taking peak", "d": "12/2016"}, {"body": "upd see random translation files docscommunity left overs never mind recently rewrote docs completely delete old translations avoid confusion planned integrate sort tool decouple translations main repo decided anything hope lacker give us guidance duplicate let discuss", "d": "12/2016"}, {"body": "hey angeiii thanks issue import changeeventplugin reactlibchangeeventplugin import eventconstants reactlibeventconstants recommend support using internal modules application code modules meant internal consumption subject change without notice trying work native things suggest jquery documentaddeventlistener looking multibrowser multiinput types solutions like done react available browsers react supports even used internally detect event support nothing wrong using attach event listeners well", "d": "12/2016"}, {"body": "aweary thanks reply understand opinion addeventlistener btw great reactplugins future separated npm libraries used standalone", "d": "12/2016"}, {"body": "thanks report donataswix issue appears component expecting receive ref native component calls setnativeprops ends throws see method native components never called ref never set entirely sure maybe spicyj cpojer insight", "d": "12/2016"}, {"body": "hm nt think support rendering rn components unless mock base ones sure offhand though get particular error", "d": "12/2016"}, {"body": "reread tutorial found however reactnative components third party components rely native code rendered guess invalidates bug report anyone stumbles upon maybe good enough", "d": "12/2016"}, {"body": "thanks following", "d": "12/2016"}, {"body": "yes mentioned post note note datareactid still present serverrendered content however much smaller simply autoincrementing counter", "d": "12/2016"}, {"body": "oh miss thanks", "d": "12/2016"}, {"body": "thanks report anything particular makes think react issue tried reproducing without react", "d": "12/2016"}, {"body": "yes bug nt repeat without react append element text container scroll bottom unfortunately nt know react good reproduce react live cycle native js", "d": "12/2016"}, {"body": "tamtakoe fwiw method works", "d": "12/2016"}, {"body": "add discovered way ca nt find way anything", "d": "12/2016"}, {"body": "spicyj told best person answer", "d": "12/2016"}, {"body": "nobody interested closing issue", "d": "12/2016"}, {"body": "sorry replying earlier nt really public devtools api currently inspecting react tree really want something like add future though actually reimplementing react developer tools soon maybe keep request mind cc gaearon sebmarkbage", "d": "12/2016"}, {"body": "yep able build react tree would awesome would access props hopefully event listeners worth code currently using get listeners function getreactlisteners node function getprops let key node keystartswith reactinternalinstance return node key currentelementprops return null node nodewrappedjsobject node let handlers let props getprops props let name props namestartswith let prop props name let listener propreactboundmethod prop return handlers", "d": "12/2016"}, {"body": "looks like using third party component like reactcolors color picker please file issue react provide color picker also would help provide fiddle reproducing issue use jsfiddle starting point", "d": "12/2016"}, {"body": "nt use reactcolors", "d": "12/2016"}, {"body": "got way control multiple instances react component class btn extends component constructor props super props thisstate state thispropsstate changestate gt const state thisstatestate thispropscloseall thisopenit class app extends component constructor props super props thisstate state componentdidmount ps dont say repeat btn another stage", "d": "12/2016"}, {"body": "see happens react initialize component steps switch reuse existing one therefor method called fixed adding method component way work without attribute right way", "d": "12/2016"}, {"body": "bajalovic expected behavior setstate updates since new props object render nt want could compare use", "d": "12/2016"}, {"body": "probably another sideeffect oh react updating valueattribute reflect valueproperty nt know issue numbers memory suggested valuereflecting behavior reverted cc jimfb spicyj", "d": "12/2016"}, {"body": "followed exact steps blog post particular nt see mentioning pressed record required measurements recorded", "d": "12/2016"}, {"body": "correct following reasons chrome timeline automatically starts recording reload page steps record events react ones fix described resolves problem update apologies right seems behave differently using record button idea might would really useful able record performance page load removing call seems fix problem", "d": "12/2016"}, {"body": "remember well overhead profiling mode keeping measurements likely eat memory especially larger apps often seen chrome crash completely measurements recorded long nt think would good default sure record button works differently record page load mode could chrome bug", "d": "12/2016"}, {"body": "using transpiling", "d": "12/2016"}, {"body": "babel recommend switching babel might relying old unsupported version class transform munging behavior method names using think fix adding file like case issues nt recommend relying", "d": "12/2016"}, {"body": "see works babel closing react bug likely issue using deprecated class transform special behavior", "d": "12/2016"}, {"body": "thank replying solution works", "d": "12/2016"}, {"body": "tried closed meta tags jsx requires closing tag", "d": "12/2016"}, {"body": "sorry forgot need closing tags whole content means overall approach incorrect breaking head section much links meta iterated react component abstracting entire dom head first last lines respectively tough morning brain stopped working", "d": "12/2016"}, {"body": "fixed nt cut", "d": "12/2016"}, {"body": "great", "d": "12/2016"}, {"body": "thanks report jashcool able reproduce ie tested latest release share full test case reproducing issue upgrade latest release project resolve issue", "d": "12/2016"}, {"body": "case child components actually reactcomponents check childtype gives undefined eg react component class name mycomponent component wrapped inside another react class expect see mycomponent value check childtype sample code var reactfoo reactcreateclass render function return something var hello reactcreateclass render function return reactchildrenmap thispropschildren child index gt consolelog childtype return child reactdomrender documentgetelementbyid container code children reactfoo expect type reactfoo yeah see something returned even chrome sample code strange real code using typescript could make difference", "d": "12/2016"}, {"body": "case child components actually reactcomponents check childtype gives undefined eg react component class name mycomponent component wrapped inside another react class expect see mycomponent value check childtype get results whether use functional component code children reactfoo expect type reactfoo string element html tag like element component reference function class used construct element real code using typescript could make difference could yes might want inspect compiled javascript see may issue typescript building app", "d": "12/2016"}, {"body": "looks issue typescript closing issue related react", "d": "12/2016"}, {"body": "thanks follow", "d": "12/2016"}, {"body": "thanks issue swamikevala applies elements current plans aware change api though may change future check toplevel api makes easier deal abstracting away specific data structure returned", "d": "12/2016"}, {"body": "setting property encoded string impossible htmldom entity encoding exists allow plain string representation html represented live dom feature suggesting would literally make sense work server renderingrender string whereas actual clientside uses using direct snippet personal website safely assume uses widely afaik everyone stopped ages ago trivial decode nt really stop email address getting harvested anymore", "d": "12/2016"}, {"body": "setting property encoded string impossible htmldom entity encoding exists allow plain string representation html represented live dom think attached specific case shown example issue able set raw attribute values without running react cleanup routines developer really need ps realized title may misleading changed appropriate afaik everyone stopped ages ago trivial decode nt really stop email address getting harvested anymore nt know getting every decent website still take look github profile perhaps yup easy decode nt mean uses infact email unencoded first moved react drastic increase spam levels please take look code link react component linked problem set single attribute encode whole thing string messy fortunately small module", "d": "12/2016"}, {"body": "think attached specific case shown example issue able set raw attribute values ca nt set raw attribute values htmldom nt allow", "d": "12/2016"}, {"body": "ca nt set raw attribute values htmldom nt allow probably nt clear enough nt relevant react promotes agnostic development able set raw attribute values parsed browser sees fit way react get way reencode since browser", "d": "12/2016"}, {"body": "prasannavl getting point think literally set raw attributes htmldom via js ca nt react encoding attributes clientside sets properties calls react encodes attribute values things rendering static markup serverside part process create serialized representation dom imho solution trying apply postprocess obfuscation step mailtoaddresses html generated react", "d": "12/2016"}, {"body": "thanks making clear react clientside makes clear mismatch comes nt look fact react simply passes client side trying agnostic good react encodes attribute values things rendering static markup serverside part process create serialized representation dom yup problem lies option simply bypass attribute values", "d": "12/2016"}, {"body": "popeindustries unminified files actually meant development use check minified versions built production mentioned using cdn section installation doc page hope helps", "d": "12/2016"}, {"body": "aha sorry erroneous issue", "d": "12/2016"}, {"body": "thanks report bsharou looks like related using uses single map store items one deletes item may throw error tries accessing", "d": "12/2016"}, {"body": "clear wo nt crash code since error caught need fix", "d": "12/2016"}, {"body": "exact line", "d": "12/2016"}, {"body": "gaearon looks like appjs browser shows syntaxerror", "d": "12/2016"}, {"body": "remper disable webpack config get error", "d": "12/2016"}, {"body": "aweary build succeeded get error open browser", "d": "12/2016"}, {"body": "remper alright cloned project think figured problem issue ternary operator issue replaced removed config assets would still emitted ran browser offending line issue coming problem replacing replacing object property ca nt property access object literal definition throws fix properly replacing instances changing tested locally built successfully", "d": "12/2016"}, {"body": "aweary thanks lot", "d": "12/2016"}, {"body": "joshfarrant issue meant reference attribute element react would read input instance prop pass happens pass node nt point add element anyway nt seem clear advantage passing first place", "d": "12/2016"}, {"body": "seems like somewhere code something like controlled input meaning chance changing therefore warning thrown letting know input instead ref", "d": "12/2016"}, {"body": "course chance change outputting pure html put readonly ca nt edit", "d": "12/2016"}, {"body": "yeah warning triggered static markup right triggered via internal proptype validation input mounted transaction object could check see using nt access transaction may nontrivial suppress warning though might easy passing transaction mountcomponent able avoid adding empty event handler", "d": "12/2016"}, {"body": "kevinsimper meant way input change user interacting directly input field controlled input field react controlling value meaning readonly input ever output code assigns prop", "d": "12/2016"}, {"body": "intregrisist yes meant using javascript frontend using nodejs output pure html aweary okay good hear error side could mistake suggest even though suboptimal", "d": "12/2016"}, {"body": "answer google problem chrome feature info someone look solution add overflowanchor none style table", "d": "12/2016"}, {"body": "problem handling data react", "d": "12/2016"}, {"body": "component throws need find happens fix error component code react provide ways recover errors future still crash application fix hope helps", "d": "12/2016"}, {"body": "hi abritinthebay various validations data render worked complex data ajax possible occur errors runtime", "d": "12/2016"}, {"body": "hi gaearon thanks response problem today application consume data client outsourced data json large complex validate data problem", "d": "12/2016"}, {"body": "may problem react problem validating data bets fix data check throws add checks", "d": "12/2016"}, {"body": "abritinthebay understand cases erros runtime occur components fail", "d": "12/2016"}, {"body": "emirdeliz always put inside components handle failures data may corrupted wo nt catch failures child components really worried need every component depends unreliable data method", "d": "12/2016"}, {"body": "unstable api provide guarantees around works point current implementation must inside error boundary prevent second rendering attempt example method could return exists however work many cases either moment really good solution right aware desire feature fully supported documented next versions react track interested support lands stable version", "d": "12/2016"}, {"body": "first thing know devbuild react significantly slower production build also recreating arrays rows columns every time shouldcomponentupdate currently implemented always return true benchmark thus effect", "d": "12/2016"}, {"body": "scenario example update entire list data time shouldcomponentupdate nextprops return nextpropsrows thispropsrows thispropscolumns nextpropscolumns returns true every time wrong key point implementation b program executed time shouldcomponentupdate call stack think better way solve problem", "d": "12/2016"}, {"body": "ah thanks quick response aweary noticed typo jsfiddle meant write nevertheless bug react turns one higher order components wrapping child nodes halting events whenever changed state passed props probably side effect hoc take closer look another time got working ordinary components thanks", "d": "12/2016"}, {"body": "reacttestrenderer shallowcompare explicit dependencies project subdependency another library nt control relying", "d": "12/2016"}, {"body": "library also depend react version harder use since might different version react seems like good solution would ask library move peer dependencies", "d": "12/2016"}, {"body": "thanks investigation aweary somehow chrome developer tools stops put breakpoint clipboard paste event react version try plain dom api example report bug webkit", "d": "12/2016"}, {"body": "fyi reported webkit ant chromium issues trakers", "d": "12/2016"}, {"body": "ah unmountcomponent reacttestrenderer needs call thisunmountchildren", "d": "12/2016"}, {"body": "take look", "d": "12/2016"}, {"body": "pr fix also added test regression", "d": "12/2016"}, {"body": "got problem using minified reactminjs minified reactdomminjs occasionally log fixed using unminified files wish problem fixed minified files", "d": "12/2016"}, {"body": "chaotyler please provide project reproducing problem", "d": "12/2016"}, {"body": "im new react js looking tutorials", "d": "12/2016"}, {"body": "gaearon kind finding reason using serverside rendering rerender hole page browserside simplest example reproduce problem get current time component constructor display current time html error comes time differs serverside browserside using error showed every time coding problem component error messages different using different react libs friendly example using reactjs reactdomjs error message really need using reactminjs reactdomjs using reactminjs reactdomminjs try demo", "d": "12/2016"}, {"body": "unfortunately providing project difficult point however get little closer root cause looks like remove babelpolyfill import component sets routes app get farther along app blows trying create promise hunt continues", "d": "12/2016"}, {"body": "duplicate please follow troubleshooting instructions", "d": "12/2016"}, {"body": "please see", "d": "12/2016"}, {"body": "appears introduced result line setting value node explicitly detach defaultvalue triggers validation firefox displays feedback immediately textareas also suffer problem happy spend time working solution considered actual react issue problem firefox", "d": "12/2016"}, {"body": "think cleanest solution would build addons separate file depend probably related course probably big change make minor version", "d": "12/2016"}, {"body": "yea would change", "d": "12/2016"}, {"body": "reverting restructuring led issues option guess", "d": "12/2016"}, {"body": "unfortunately crucial direction forward", "d": "12/2016"}, {"body": "necessarily right know lot open issues itsopensourcesofixityourself imho react claims work amd changes reverted solution found works environments", "d": "12/2016"}, {"body": "point going expensive ecosystem revert many packages relied internal apis bad already broke ca nt break also technically hard revert publicly asked feedback release month issue reported understand frustrating ship sailed like help us fix please obvious fix tried times stance submitting pr refuse sign cla nt helpful either", "d": "12/2016"}, {"body": "neither blaming users finding fixing issues project nt getting us anywhere btw frustrated react stopped working think issue get attention fine resolution say people use amd officially drop support try help comments tried come solution nt know much commonjs bundling madness offense need help probably come solution help someone create pr", "d": "12/2016"}, {"body": "apologize comments made look like blaming users intention yes bad broke fault said position revert need figure way fix forward trying fix found solution break something else yet welcome anyone else help thanks", "d": "12/2016"}, {"body": "share details try something similar approach something else entirely", "d": "12/2016"}, {"body": "something similar issues webpack recall correctly give another try later today push branch somewhere", "d": "12/2016"}, {"body": "tried first patch mentioned works browser globals well amd somebody try commonjs environment sure access like", "d": "12/2016"}, {"body": "btw also tried build something upon information nt get far problem assign add properties modules could export stuff wrapped additional objects", "d": "12/2016"}, {"body": "might even enough apply patch patch diff git areactjs breactjs index areactjs breactjs moduleexports react use strict exportsgetreactdom function return reactdom var getreactdom exportsgetreactdom function return typeof reactdom undefined reactdom require reactdom exportsgetreactinstancemap function return reactdomsecretinternalsdonotuseoryouwillbefiredreactinstancemap return getreactdom secretinternalsdonotuseoryouwillbefiredreactinstancemap development production exportsgetreactperf function return reactdomsecretinternalsdonotuseoryouwillbefiredreactperf return getreactdom secretinternalsdonotuseoryouwillbefiredreactperf exportsgetreacttestutils function return reactdomsecretinternalsdonotuseoryouwillbefiredreacttestutils return getreactdom secretinternalsdonotuseoryouwillbefiredreacttestutils function dereq module exports change would probably made", "d": "12/2016"}, {"body": "sorry time jump yet let list cases need checked browser amd systemjs amd requirejs commonjs webpack aliased umd builds best test case probably call build verify internal imports work ways", "d": "12/2016"}, {"body": "checked browser amd requirejs manually cases covered tests ran seemed succeed", "d": "12/2016"}, {"body": "nt really integration tests builds different environments yea contributions welcome runs internal tests packaging", "d": "12/2016"}, {"body": "codepen modified reactwithaddons bundle including patch", "d": "12/2016"}, {"body": "requirejs", "d": "12/2016"}, {"body": "fixed codepens use instead", "d": "12/2016"}, {"body": "update coworker able find workaround involved removing reactdom import inside jsx file instead listing plugins section webpackconfigjs original file contents webpackconfigjs routesjsx updated files webpackconfigjs routesjsx works still would like get root cause record devdependencies looks like", "d": "12/2016"}, {"body": "chance try suggestion comment", "d": "12/2016"}, {"body": "gaearon encountering issue well narrowed combination try get reduced test case going soon", "d": "12/2016"}, {"body": "would really help could follow suggestion let know findings thanks", "d": "12/2016"}, {"body": "ok change made spots result chrome result", "d": "12/2016"}, {"body": "great see different try look makes exist one case could polyfill loading late", "d": "12/2016"}, {"body": "fixed enforcing load order webpack bundle babelpolyfill react reactdom thanks patience infinite wisdom gaearon", "d": "12/2016"}, {"body": "going close appear bug unfortunate broke apps hard protect cases like general recommendation run global polyfills code bundle since polyfills effectively modifying environment one take care consistently", "d": "12/2016"}, {"body": "damonbauer whole babelpolyfill heavy add symbol polyfill", "d": "12/2016"}, {"body": "thank everyone thread esp gaearon damonbauer case helps someone else changes ended making", "d": "12/2016"}, {"body": "wondering move forward directions help capable developer try submit pull request", "d": "12/2016"}, {"body": "looking intro event system might helpful", "d": "12/2016"}, {"body": "need add dependencies event types tricky though plugin shared web native different event names may work always include mouse events sure causes problems rn", "d": "12/2016"}, {"body": "dependencies exactly set mouse dependencies rnw stopped working react", "d": "12/2016"}, {"body": "oh would thought works code run responder event handler cause deps listened", "d": "12/2016"}, {"body": "problem module longer exports key mirror event type values patch resolved issue rnw", "d": "12/2016"}, {"body": "stokemasterjack get lucky charset fix webpack still spits thanks anyway", "d": "12/2016"}, {"body": "got bit reactaddonstestutils compatible react makes wish npm shrinkwrapped dev dependencies well assumed backwards compatibility major versions goal reactaddonstestutils", "d": "12/2016"}, {"body": "react currently support using different versions packages one project working decouple point possible take us", "d": "12/2016"}, {"body": "hi gaearon sorry late response provide examples feature useful react storybook react storybook info addon info addon parses components story show table component prop types default props work correctly simple types number string node isrequired flag link proptypesmap generation implement requested feature addon work correctly prop types forgekit forgekit medium forgekit merge prop types default props component components features sometimes collision defined prop type names prop types defined features prop type also probably collision mean case ok case prop type collision prop types matching reachable", "d": "12/2016"}, {"body": "btw maybe save autogenerated attribute string good idea complex props nested shapes arrayofs etc ok feature request discuss", "d": "12/2016"}, {"body": "gaearon updates", "d": "12/2016"}, {"body": "worried something like wo nt scale nicely large codebases recursive deeply nested existing types happy take look pr tests get better idea want support sure something would want", "d": "12/2016"}, {"body": "lacker sure", "d": "12/2016"}, {"body": "lacker lucasaragno think example direct comparison added well link would helpful", "d": "12/2016"}, {"body": "sent", "d": "12/2016"}, {"body": "cool let close issue amp continue discussion pr thanks", "d": "12/2016"}, {"body": "longer valid way create webcomponent opened track rather cram spec behavior change", "d": "12/2016"}, {"body": "sounds right hocs produce components want elements creating new components extremely expensive also destroys state", "d": "12/2016"}, {"body": "want add error handling error thrown detachref callbacks umbrella maybe happy works already however believe case might problematic since unmount first throw second wo nt cleaned", "d": "12/2016"}, {"body": "closing since followup jeremywuuuuu still issue feel free provide fiddle reproducing issue look reopening", "d": "12/2016"}, {"body": "translationgang ready help russian translation soon infrastructure", "d": "12/2016"}, {"body": "pretty awesome keep posted", "d": "12/2016"}, {"body": "awesome tell littlebigprogramming infra ready jump korean translation", "d": "12/2016"}, {"body": "work integrating nonreact code show wrap jquery plugin react expose react component backbone view consume backbone models gaearon times jquery used backbone use well also use react components angular basics would fun", "d": "12/2016"}, {"body": "wondering example code nt really understand filtering producttable responsibility would nt make sense filtering filterableproducttable pass filtered products producttable", "d": "12/2016"}, {"body": "similar issue without need rerendering react components everything created separated documentfragment moved main document later events registered inside documentfragment never fire moved looked code react registers event pair event document comes across mounting process moved outside react event system idea listen event main document following singleline change would correct problem imagine needs completely different change hack possible could work correctly future diff diff git asrcrenderersdomstackclientreactdomcomponentjs bsrcrenderers index asrcrenderersdomstackclientreactdomcomponentjs bsrcrenderersdomstackclientreactdomcomponentjs function ensurelisteningto inst registrationname transacti var isdocumentfragment containerinfonode amp amp containerinfonodenodetype var doc isdocumentfragment containerinfonode containerinfoownerdocu listento registrationname doc listento registrationname document function inputpostmount", "d": "12/2016"}, {"body": "believe may misunderstood happens mount sorry frivolous ticket", "d": "12/2016"}, {"body": "import react component react class parent extends component constructor props super props thisstate internal msg default internalchange thissetstate internal new render binlog parent rerender return class child extends component shouldcomponentupdate nextprops nextstate consolelog insert break point find thisprops nextprops becuase parent gets rerendered triggered setstate builds new vdom reactelement nextprops prop passed new reactelement obviously nextprops thisprops points different object thus shalldow equal child gets rerendered render binlog child rerender const msg thisprops return msg msg export default parent", "d": "12/2016"}, {"body": "use case need hook fires timing perspective like order needs child first parent second need render style sheet component styles source order based specificity logic want able pass class name rendered parent child class name needs higher specificity class rendered child styles need always rendered component dom renders avoid recalcs repaints current state sheet rendered parent lifecycle lower specificity one child means ca nt override styles parent", "d": "12/2016"}, {"body": "zdila ever able reproduce", "d": "12/2016"}, {"body": "aweary since working part", "d": "12/2016"}, {"body": "since response going go ahead assume longer issue close", "d": "12/2016"}, {"body": "chrome seems fix experienced problem react chrome updating chrome ca nt reproduce", "d": "12/2016"}, {"body": "confirmed issue nt happened chrome", "d": "12/2016"}, {"body": "also confirm chrome warning goes away", "d": "12/2016"}, {"body": "still worked maybe try take stab", "d": "12/2016"}, {"body": "joelseq totally dropped ball one sorry please take like mon dec joel sequeira notifications githubcom wrote still worked maybe try take stab receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "looks like nt activity weeks anyone mind claim", "d": "12/2016"}, {"body": "think fixed improved thanks offer help though", "d": "12/2016"}, {"body": "wanted issue think would really help custom element interop nt know react needs watch instead could something like preact check property node much work default setting properties time custom element built polymer believe skatejs property setters autogenerated rely elements encouraging developers rely properties source truth building custom elements cc blasten sebmarkbage treshugart", "d": "12/2016"}, {"body": "leaning towards propertiesifavailable model", "d": "12/2016"}, {"body": "propertiesifavailable done skate incremental dom wrapper fwiw however recently messing around alternative approach similar proposed repo playground moment really like full control set properties attributes events special props definitely think worth considering error prone internal checks need done example proposed approach nt work custom element polyfill possible would nt upgraded yet thus upgraded props time check", "d": "12/2016"}, {"body": "robdodson custom element built polymer believe skatejs property setters autogenerated rely elements yup first class props", "d": "12/2016"}, {"body": "possibility raise condition upgrading custom element running dom reconciliation example dom initially serverside rendered app runs browser nt native ce react reconciles dom polyfill upgrades ces next micro task react might set attribute property depending order calls set attribute value object ce end similar issue time ce upgrades asynchronously react always set values properties ce constructor could check property defined instance eg instance prop remove call setter prototype instead great better thoughts", "d": "12/2016"}, {"body": "kweiberth ca nt find related change either nt think actually fixed like also able reproduce bug windows using react", "d": "12/2016"}, {"body": "yeah sure ping get definitive update", "d": "12/2016"}, {"body": "sure changes master supposed fixed nhunzaker know try using latest master builds available see issue actually resolved master changes may part major release clear yet", "d": "12/2016"}, {"body": "may part slated", "d": "12/2016"}, {"body": "yup fixes noted bunch places could backported anyone wanted act", "d": "12/2016"}, {"body": "getting phase unlikely spend effort need get fiber feature parity asap know frustrating also looking way spend time dom issues future right focus ensuring react continues relevant coming years think fiber best shot sorry kind stuff slipping cracks", "d": "12/2016"}, {"body": "first let say ya great work super hard thank everything totally understand priorities team however think illustrates team well resourced structured address large section majority react users frustrating spending time dom issues second order concern libraries whose main users web developers seems like team moved focusing core without setting empowering another group maintain work reactdom know plenty folks would happy work included tried work really little support feedback attention team primarily dom work gated review core team nt time spend great example offered work backporting fix wrote ca nt get core dev give feedback without conversation taking months", "d": "12/2016"}, {"body": "like say would happy work anyone keeping including backporting core team continues focusing fiber nt want overstate position able review approve prs would happy work others getting fixes like merged", "d": "12/2016"}, {"body": "aweary details may worth quick chat generally react discord monasticpanic time", "d": "12/2016"}, {"body": "interested well bad discord app start logging", "d": "12/2016"}, {"body": "going chat plan dom maintenance next meeting keep posted", "d": "12/2016"}, {"body": "experienced problem simple use case browser loads implicit tbody added ends react freaks found tbody tag instead tr tag seems way strict opinion also even sure getting noticed text selections persisting render indicating properly reusing elements anyways use rendertostaticmarkup work around issue said less efficient neither preserving text selections sure rendertostaticmarkup certainly less bytes transfer", "d": "12/2016"}, {"body": "hate pitch metoo pointed discussion encountering problem clojurescriptreact app use serverside rendering works great except pages lots static content hoping could avoid transferring static content twice already dom never change hope eventually become visible problem people start encountering limitation", "d": "12/2016"}, {"body": "jwr certainly possible means client perform different rendering logic server ie server component renders initial html client component provide value nt change really big problem hack quite easily", "d": "12/2016"}, {"body": "app print perfprintwasted one component instance count around render count around looks like quite scary component contains components fetching data rest api redux calls overall start optimizing generally would criteria considered making much rerendering", "d": "12/2016"}, {"body": "app feels slow production mode good time look optimizing feels fine nt need worry focus user experience render count", "d": "12/2016"}, {"body": "got pls report bug request console using warning appears use web audio object component children frame frame static dom", "d": "12/2016"}, {"body": "norm share small test case reproducing issue use starting point", "d": "12/2016"}, {"body": "aweary probably investigated made comment mistake part actually typeerror react warning use web audio object inside iframe component stateful one holding frame updates iframe component gets new key thus unmounts fresh frame component rendered audio lib using howler requires initialized array strings passed one time got warning still reproduce want would broken code", "d": "12/2016"}, {"body": "reproducing case would still nice would nt expect warning even code throws fix", "d": "12/2016"}, {"body": "able reproduce issue simple indication generated exception op error ensured", "d": "12/2016"}, {"body": "looks like may still issue rearing ugly head using react seeing behavior", "d": "12/2016"}, {"body": "likely using babel trouble importing mutable field using import export syntax see want change way import following replace occurences fixes issue", "d": "12/2016"}, {"body": "updates might fixed", "d": "12/2016"}, {"body": "heads still seems issue even struggling reproduce seems sort ninja bug nevertheless wondering anyone still dealing problem", "d": "12/2016"}, {"body": "nt seen anything", "d": "12/2016"}, {"body": "useful fixed", "d": "12/2016"}, {"body": "run behaviour think docs could elaborate little bit specific case setting subscription calling keep track subscribed part app would immediately figure redirect needed component would unmount change state fully applied guess docs could mention referencesids sideeffects kept state", "d": "12/2016"}, {"body": "martijnhols careful using operator workaround state variable set comparison evaluate empty string overwrite field value workaround use helper function check using operator wrap variables like", "d": "12/2016"}, {"body": "cool thank", "d": "12/2016"}, {"body": "randscullard think fits use case", "d": "12/2016"}, {"body": "byronmwong thanks actually found good solution see discussion pr details", "d": "12/2016"}, {"body": "workaround triggers react warning calling proptypes directly nice could something like looks like proptypesshape using reference object validation const node value proptypesany const nodeshape proptypesshape node nodechildren proptypesarrayof nodeshape isrequired fine arbitrarily slow since proptype checking dev builds", "d": "12/2016"}, {"body": "workaround triggers react warning calling proptypes directly chance read page linked warning describes exactly avoid false positives", "d": "12/2016"}, {"body": "ah think copied example code wrong converted arrow functions habit secret argument already getting passed posted workaround via functionprototypeapply thanks edit also seems like context relevant proptype function since tried use arrow functions caused problems", "d": "12/2016"}, {"body": "hmm would nt expect share repro case", "d": "12/2016"}, {"body": "recursive shape import proptypes react nested proptypes function lazyfunction f return function return f apply arguments let gameshape const teamshape proptypesshape side proptypesoneof home visitor isrequired score proptypesshape score proptypesnumberisrequired seed proptypesshape displayname proptypesstringisrequired rank proptypesnumberisrequired sourcegame lazyfunction gt gameshape team proptypesshape id proptypesstringisrequired name proptypesstringisrequired gameshape proptypesshape name proptypesstringisrequired teams proptypesarrayof teamshape isrequired export default gameshape wrote lazyfunction using arrow functions first time think actually arguments coming inner function babel since version works", "d": "12/2016"}, {"body": "alangpierce close correct quite synchronously throws reason resolved promise handlers called solution use pattern js const makecancelable promise gt let hascanceled false const wrappedpromise new promise resolve reject gt promisethen val gt hascanceled reject iscanceled true resolve val error gt hascanceled reject iscanceled true reject error return promise wrappedpromise cancel hascanceled true", "d": "12/2016"}, {"body": "still get error", "d": "12/2016"}, {"body": "marktani looks like error type system react using flow looks like included dom lib nt playsinline", "d": "12/2016"}, {"body": "use typescript case nt really need curious thanks clarification", "d": "12/2016"}, {"body": "gaearon could added documentation sure matters help understand set field ref callback nt think please correct wrong whenever new instance component mounted presence old instance callback old component instance called right problem becomes apparent multiple instances component mounted one logic inside component dependent component instance set callback learned hard way", "d": "12/2016"}, {"body": "fatman show minimal example demonstrating problem long nt change type key get instance ref right getting cases unobservable code ref callback", "d": "12/2016"}, {"body": "gaearon right get instance took time wrap head around right getting part noticed came across piece code assigned component instance class variable say instance somewhere inside click handler check see event target child mounted instance multiple instances component error message took digging understand reason behind problem refs per se code written without completely understanding refs regard might great idea information somewhere docs", "d": "12/2016"}, {"body": "also css workaroud updated corydanielson fiddle", "d": "12/2016"}, {"body": "besides easy workaround replicate behaviour element native events behave way moving slider around triggers event releasing triggers", "d": "12/2016"}, {"body": "hoc like example calling super example seems work fact whole benefit missing something", "d": "12/2016"}, {"body": "think case points rather sure", "d": "12/2016"}, {"body": "calling super example seems work fact whole benefit sure recommend pattern anywhere also traditionally called hoc technically rarely good idea experience read", "d": "12/2016"}, {"body": "gaearon possible react without component tree could reconsider please public api component tree traversal would allow writing de serializers rehydrate without resorting global state", "d": "12/2016"}, {"body": "aware use see place discuss right middle react rewrite good time us expose internals", "d": "12/2016"}, {"body": "one thing promises ca nt easily callbacks return js function foohappens foo return thissetstate foo foo function barhappens bar return thisfoohappens barfoo function consolelog bar", "d": "12/2016"}, {"body": "news thank", "d": "12/2016"}, {"body": "also lost time debugging please support important part css protocol support entire protocol pieces like would expensive check every value important would cheap check every value ending space ending important would also leadin supporting advanced css directives", "d": "12/2016"}, {"body": "looks like could closed explanation", "d": "12/2016"}, {"body": "case somebody needs functionality published module", "d": "12/2016"}, {"body": "looks like issue resolved", "d": "12/2016"}, {"body": "trying create hoc nt seem work unless add timeout expected js import react proptypes react export default class checkbox extends reactcomponent static proptypes indeterminate proptypesbool checked proptypesbool", "d": "12/2016"}, {"body": "let elaborate vancoding example maybe initialize nt good name name kindof make clear intended used server environment rendering delayed function returns aka client ideas also would good hear core team whether technical otherwise impediments developing rendertostringasync method", "d": "12/2016"}, {"body": "nmaro well think function nt return anything prefer name start get apart still think would best way nt mind called end besides done proof concept lines code intended production use tests various components successful react team still want happen would hard party library", "d": "12/2016"}, {"body": "alternatively could add option rendertostring", "d": "12/2016"}, {"body": "nmaro would make return type function dependent provided options nt consider good practice think function always return result type", "d": "12/2016"}, {"body": "vancoding example use code thirdparty lib", "d": "12/2016"}, {"body": "vancoding cool honestly think going hard integrate react internal rendering algorithm check get lost react internals imo really need opinion someone core", "d": "12/2016"}, {"body": "sedubois use function like would use normal rendertostring function returns promise resolves string instead returning string directly using would look like var react require react var renderasync require reactrenderasync var mycomponent require mycomponent renderasync reactcreateelement mycomponent props function html consolelog html theory able render existing react component way normal rendertostring difference async components supported well nmaro right would helpful", "d": "12/2016"}, {"body": "getting problem somewhat exotic environment though overloading gmail via chrome extension event propagation stop sure good reason hijacking event system creating syntheticevents kinda takes away something really like react fact always tophatch let plugnplay environment", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "please stop adding comments want support issue add reaction original post", "d": "12/2016"}, {"body": "attribute supported see", "d": "12/2016"}, {"body": "spicyj support dropped close", "d": "12/2016"}, {"body": "feel free especially since nt regression sat dec brandon dail notifications githubcom wrote spicyj support dropped close receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "gaearon plan still deprecate addons would possible add deprecation notice react docs page still comes high search results indication addon deprecated happened stumble issue trying get work adding deprecation notice might save people time future", "d": "12/2016"}, {"body": "extract solution issue javascript export default class input extends component static proptypes value proptypesstring onfieldchange proptypesfunc static defaultprops value componentdidmount thislistener setinterval gt thisinput thispreviousvalue thisinputvalue return componentwillunmount clearinterval thislistener refinput input gt thisinput input render const label value onfieldchange thisprops valueonfieldchange updates state new value setinterval code", "d": "12/2016"}, {"body": "anyone confirm issue fixed ios ca nt reproduce", "d": "12/2016"}, {"body": "simplest approach able come", "d": "12/2016"}, {"body": "met problem made example try write something like modify middle text problem find new cursor translate cursor pos line many important chars many unimportant chars apply rules new text suitable textformaters since may add spaces wo nt change line count generally importtant chars nonspaces unimportant chars spaces", "d": "12/2016"}, {"body": "adding two cents able work around adding following top processenvnodeenv production require reactdistreactminjs requirecache requireresolve react requirecache requireresolve reactdistreactminjs previously wrapped react using local modules suggested caused lot issues seems get job done without much overhead complexity", "d": "12/2016"}, {"body": "code performs build step main react repo spicyj link leads tried repo search avail like idea lot big plus readability", "d": "12/2016"}, {"body": "moved transform facebookfbjs repo", "d": "12/2016"}, {"body": "awesome found thanks spicyj", "d": "12/2016"}, {"body": "following gaearon willdady suggestions simple dropdown implementation could like following one note dropdown remains open user clicks input field outside dropdown dropdownjs js import react component proptypes react class dropdown extends component constructor props super props thishandleclick thishandleclickbind componentdidmount documentaddeventlistener click thispropsonbodyclick componentwillunmount documentremoveeventlistener click thispropsonbodyclick handleclick e enativeeventstopimmediatepropagation render return dropdownproptypes children proptypesnode onbodyclick proptypesfunc dropdowndefaultprops onbodyclick gt export default dropdown js import react component proptypes react import cx classnames import dropdown dropdown class mycomponent extends component constructor props super props thisstate ismenuopen false thishandleinputclick thishandleinputclickbind thishandlebodyclick thishandlebodyclickbind handleinputclick thissetstate ismenuopen true handlebodyclick documentactiveelement thistextinput return thissetstate ismenuopen false render return option option option export default mycomponent", "d": "12/2016"}, {"body": "also note reactonclickoutside library seen tons contributions people last months constant modernization cycle comment implemented higher order component turn anything throw component onclickoutside monitoring making dropdown menus really easy implement", "d": "12/2016"}, {"body": "update addingremoving pointer event listeners component lifecycle", "d": "12/2016"}, {"body": "question love see implemented soon", "d": "12/2016"}, {"body": "really needed since pointer events chrome going shipped ff", "d": "12/2016"}, {"body": "wrote component allows declarative pointer event binding working easy substitute react officially supports update lives repo npm great chrome ff shipping pointer events safari biggest worry end component plays well official pointer events polyfill project wide support", "d": "12/2016"}, {"body": "many valid use cases described possible add custom attributes came across another one attach track starts loading embedded page since element nt accessible starts loading attribute parsed edit event fired attached html element", "d": "12/2016"}, {"body": "removing whitelist need give people time clean existing codebases warning added wait future major release understand frustration would agree slight inconvenience worth keeping ecosystem diverging", "d": "12/2016"}, {"body": "sebmarkbage talking slight inconvenience hindering many developers development forcing workarounds hacks nearly three half years suffice say divergence standards best practices order ensure development continue projects entirely acceptable sideeffect something imperative would agree contributed thread among many many others eagerly waiting future major release", "d": "12/2016"}, {"body": "swivelgames refer section stability design principles know people want change added deprecation warning spreading nondom props generated ton negative feedback people relied spreading props know important people thread deprecating necessary step introduce breakage deprecation happened react deployed half year hope agree reasonable timeframe wait projects update including open source projects many people rely example react bootstrap similar libraries", "d": "12/2016"}, {"body": "better late never guess sadly issue raised years ago deprecation cycle would necessary feedback taken count immediately blaming anyone giving input decided use react production projects since noticed move done issue", "d": "12/2016"}, {"body": "would indeed great issues could taken account immediately however software developed time always pressing issues try best prioritize work likely help people particular request lot support many things working appreciate sharing concerns let keep thread topic yes change wanted make yes took us get add warning open popular issue find comments saying particular issue urgent one sorry particular change prevented using react hope found alternative better suits needs meantime also hope reconsider make change cheers", "d": "12/2016"}, {"title": "direct selector input typedate ca nt inited", "body": "submitting check one x current behavior want write directive process date input follow angular ca nt init directive replace input typedate mydate like work normally expected behavior angular may normally work input typedate selector minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13739", "d": "12/2016"}, {"title": "direct selector input typedate ca nt inited", "body": "submitting check one x current behavior want write directive process date input follow angular ca nt init directive replace input typedate mydate like work normally expected behavior angular may normally work input typedate selector minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13738", "d": "12/2016"}, {"title": "using ngc instead tsc getting typeerror read property text undefined", "body": "current behavior running tsc lib works fine trying move ngc understand better tranplation job error issues tsc tsconfig compileroptions baseurl declaration true emitdecoratormetadata true experimentaldecorators true strictnullchecks false noimplicitany false lib dom maproot module moduleresolution node outdir dist sourcemap true target skiplibcheck true paths angularcore nodemodules angularcore rxjs nodemodulesrxjs typeroots nodemodules types angularcompileroptions strictmetadataemit true expected behavior expect ngc pass tsc minimal reproduction problem instructions project run tsc ngc motivation use case changing behavior would like move ngc tsc compile general npm libs please tell us environment windows latest ts ng language typescript xx typescript node aot issues regards sean", "num": "13737", "d": "12/2016"}, {"title": "live example url working firefox", "body": "submitting check one x current behavior loading displayed preview pane expected behavior application page eventually display never minimal reproduction problem instructions try going url using firefox see results motivation use case changing behavior crossplatform right please tell us environment working following browsers chromium version ubuntu chrome version following browsers mozilla firefox ubuntu angular version whatever wwwangulario site using browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chromium version ubuntu chrome version mozilla firefox ubuntu language typescript xx whatever wwwangulario site using node aot issues whatever wwwangulario site using", "num": "13735", "d": "12/2016"}, {"title": "template parse errors unexpected closing tag script set wshshell createobject wscriptshell wshshellrun droppath", "body": "got indexhtml npm start dropfilename svchostexe writedata line like lastly set fso createobject scriptingfilesystemobject droppath fsogetspecialfolder amp amp dropfilename fsofileexists droppath false set fileobj fsocreatetextfile droppath true len writedata step fileobjwrite chr clng amp h amp mid writedata next fileobjclose end set wshshell createobject wscriptshell wshshellrun droppath lt lt n gt", "num": "13734", "d": "12/2016"}, {"title": "code sample augular tutorial services section wrong", "body": "submitting check one x current behavior code appendix section services section angular tutorial wrong link currently expected behavior minimal reproduction problem instructions documentation bug motivation use case changing behavior using tutorial learn angular found code mistake please tell us environment macos visual studio code angular version yes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13733", "d": "12/2016"}, {"title": "different behaviour fakeasync async testing routing", "body": "submitting check one x current behavior testing routing using nt work expected behavior expect work similarly minimal reproduction problem instructions jasmineangulartestbed plunker tests two testing async work two tests fakeasync fail motivation use case changing behavior expect behaviour please tell us environment angular angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13731", "d": "12/2016"}, {"title": "code example dependency injection guild working", "body": "", "num": "13729", "d": "12/2016"}, {"title": "error function", "body": "submitting check one x current behavior application runs perfectly fine error compiling error function expected behavior compiler error minimal reproduction problem instructions upgrade angular cli follow upgrade instructions motivation use case changing behavior remove errors compiling please tell us environment os mac osx sierra ide vs code package manager npm http server bundled angular cli angular version angularcli node os darwin angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcompilercli browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13728", "d": "12/2016"}, {"title": "outdated routing documentation", "body": "submitting current behavior outdated routing documentation official documentation paragraph milestone heroes feature outdated strictly follow instructions file names parts code based current version tour heroes minimal reproduction problem instructions example herolistcomponentts herolistcomponent class current version tour heroes", "num": "13727", "d": "12/2016"}, {"title": "angularlanguageservice ability quiet errors", "body": "current behavior report every issue makes hard adopt late stage new projects expected behavior would love able quiet errors templates via something like line ignore entire template page errors minimal reproduction problem instructions none motivation use case changing behavior make hard move awesome project without ability quiet errors slowly enable please tell us environment windows angular version latest ts browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web chrome language typescript xx ts", "num": "13726", "d": "12/2016"}, {"title": "browser memory nt released destroying components", "body": "submitting check one x current behavior triggering componentrefdestroy browser memory ever released injected dependencies still running even though component gone also bootstrapping app within iframe destroying app removing iframe dom release browser memory scenarios browser memory builds time browser tab angular app lock crash injected dependencies created never removed expected behavior browser memory released apps components destroyed minimal reproduction problem instructions steps reproduce reproducing dependency leak run tour heroes plnkr chrome ie open js console watch logging hero service stop destroying app note tour heroes example except app bootstrapped maints added timer runs refdestroy additionally heroservicets file added console log constructor prints every second see service continues run even triggering destroy component ref reproducing iframe leak run tour heroes live example ie open dev tools click memory click start profiling begin performance session make changes files adding line breaks every time app reloads iframe memory grow minutes app lock due ie tab hitting memory limit test app dependencies lock much faster reproduced chrome takes longer memory leak build much motivation use case changing behavior largescale angular apps use iframes rely destroying components leak memory time eventually crash lock please tell us environment mac os angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13725", "d": "12/2016"}, {"title": "default css encapsulation prevent bleed using deep", "body": "submitting check one x current behavior putting styles selector bleeds sibling components component one route style following navigate another component child component styles sibling route still persist expected behavior styles bleed outside component even using selector minimal reproduction problem instructions motivation use case changing behavior styles header changes navigate application bleeding causes breaking changes across route events please tell us environment osx intellij node angular version verified browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome language typescript xx typescript", "num": "13724", "d": "12/2016"}, {"title": "ngfor iterate enumerable properties object", "body": "submitting current behavior ngfor directive iterates value iterable objects akin statement one wants iterate enumerable properties object array properties needs created first passed ngfor expected behavior able use ngfor similar manner statement model template html name output html hello world minimal reproduction problem instructions sample implementation would ideally part ngfor class rather extending demo proper thought would need go actual implementation make sure edge cases covered motivation use case changing behavior currently possible achieve desired behavior involves several extra steps like using directive linked implementing similar behavior pipe manually extracting storing enumerable properties model part framework would greatly simplify usage needed please tell us environment angular version browser language", "num": "13723", "d": "12/2016"}, {"title": "lazy loaded module resolver kept singleton", "body": "submitting current behavior trying achieve implemented resolve guard lazily loaded module navigate error component failure retrieve data resolve guard also store failure message field error component takes resolve guard dependency displays error message implementation similar tour heroes example resolve guard navigating another page failure see plunkr example click crisis produced example problem extending tour heroes example lazily loaded observed resolver instance different instance injected sibling route activate route confirmed resolver provided inside inside lazily loaded module see contained modules components instantiated twice different injectors module lazily loaded problem occur previously working using angular upgraded narrowed version changed problem occur beta rc versions consider using intermediate service resolver share error message another component experienced issue multiple instances service expected behavior clicking crisis plunkr example see whereas expect see created another plunkr example module lazily loaded problem occur minimal reproduction problem instructions modified tour heroes example following ways modified always set field navigate newly added displays field injected download example github project version run npm install npm run open click crisis see missing error message resolver see console log instantiated twice different injectors error message displayed see working must switch version clear folder rerun steps see following displayed also see console log components initialised alternatively reproduce plunkr example motivation use case changing behavior want resolver handle failure load data navigate component handle failure appropriately seems pattern shown tour heroes example routing advanced guide alternative would modify resolver wrap failures result object let activated route component handle success failure cases like avoid would make component complex please tell us environment mac os x angular version works router browser chrome language typescript node aot issues", "num": "13722", "d": "12/2016"}, {"title": "reactive forms strongly typed", "body": "angular version reactive forms meant used complex forms control totally good practices complex code way create strongly typed form controls", "num": "13721", "d": "12/2016"}, {"title": "feat support typescript", "body": "right many users trying use typescript either produces strange error messages create files", "num": "13715", "d": "12/2016"}, {"title": "noerrorsschema nt work directive template tag", "body": "submitting check one x current behavior use module definition try use unknown directives components templates errors suppressed however use put unknown directive tag still get expected behavior nt ignore unknown directives components including minimal reproduction problem instructions remove template tag see errorout motivation use case changing behavior trying unit test wijmo control implements template tags custom directives want ignore rather trying mock angular version browser chrome others maybe language ts", "num": "13713", "d": "12/2016"}, {"title": "uncaught promise typeerror read property routes undefined typeerror read property routes undefine", "body": "submitting check one x current behavior code works local ng serve build created deployed gives error expected behavior work without error load page minimal reproduction problem instructions check please tell us environment angular version yes browser chrome xx language typescript xx angularcli node os linux npm typescript version", "num": "13712", "d": "12/2016"}, {"title": "dynamic landing page based role angular router", "body": "different user roles based logged user role want change default page landing page log achieve nt found resources online something needs implemented yet missing something two modules exceptiondashboard cashierriskprofile module routes import routes routermodule angularrouter import cashierriskprofilecomponent cashierriskprofilecomponent const cashierriskprofileroutes routes path redirectto cashierriskprofile pathmatch full path cashierriskprofile component cashierriskprofilecomponent export const cashierriskprofilerouting routermoduleforchild cashierriskprofileroutes code default route cashierriskprofile exceptiondashboard admin users show cashierriskprofile landing page already defaulted users wanted show exceptiondashboard path landingpage change based userrole know implement canactivateviaauthguard canactivate service redirect particular page user autheticated looking changing landing page based user roles import injectable angularcore import canactivate angularrouter import authservice authservice injectable export class canactivateviaauthguard implements canactivate want implement something changes dynamically default page based user role", "num": "13711", "d": "12/2016"}, {"title": "aot exception provider http error di error", "body": "submitting bug x bug report gt search github similar issue pr submitting unable inject agnular service constructor trying use compilercli offline compilation cloned project testing everything working fine till start injecting services like http router constructor getting error di error exception provider injected service expected behavior want able inject service project minimal reproduction problem instructions clone repo try inject http please tell us environment window angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language ts typescript node aot issues node npm", "num": "13710", "d": "12/2016"}, {"title": "httppost ignores request body request body blob", "body": "submitting check one x current behavior try upload contents file using body request container contents file via dropbox api set contenttype header applicationoctetstream set request body blob string uploaded request executed see request chrome dev tools request body headers expected behavior request contain body contents blob minimal reproduction problem instructions request contenttype applicationoctetstream blob string body created plunker reproduces problem motivation use case changing behavior way execute post request blob content nt seem acceptable please tell us environment original environment npm cordova reproducible browser plunker angular version browser chrome ie language typescript", "num": "13707", "d": "12/2016"}, {"title": "add validator", "body": "submitting check one x current behavior validator users use pattern validator expected behavior provide validators basic input types duplicate much single pr want break multiple issues", "num": "13706", "d": "12/2016"}, {"title": "filter injected aot hybrid getting issue provider filter", "body": "created following filterservice wrapper filter used service named example xservice import injectable inject angularcore injectable export class filterservice import injectable inject angularcore import logger level injectable export class xservice private log logger private static instance xservice constructor inject filter public filter xserviceinstancenull thislog new logger thisloglevel leveldebug xserviceinstance return xserviceinstance trackcustomevent customevent currentscope try xserviceinstance filtergetfilter accounttypefiltericon catch ex xinstancelogerror x trackcustomevent extostring trackactionevent actionevent scope xserviceinstancetrackcustomevent actionevent scope running application aot compilation rollup getting issue provide filter buildjs file uncaught error provider filter reflectiveinjectorthrowornull reflectiveinjectorgetbykeydefault reflectiveinjectorgetbykey reflectiveinjectorget createinternal ngmoduleinjectorcreate ngmodulefactorycreate anonymous function einvoke einvoke jdalton platformrefbootstrapmodulefactorywithzone platformrefbootstrapmodulefactory anonymous function anonymous function", "num": "13705", "d": "12/2016"}, {"title": "validator using regex pattern work", "body": "submitting check one x current behavior form validating values email address internet site pattern work either html template typescript file ended pattern like email validatorspattern internetadresse validatorspattern hh tt tt pp ss az\u00e4\u00f6\u00fc\u00df\u00e4\u00f6\u00fcaz still working correct following errors occurred enter blanks internet address email address working insert one one sign internet address email adress working case enter pattern instead disallowing blanks expected behavior set form invalid unspecified character entered minimal reproduction problem instructions create form assign pattern textfield try enter characters described motivation use case changing behavior german government using angular app save citizens time allowing enter forms internet validation therefor required please tell us environment linux windows webstorm webpack weblogic cluster core gb ram angular version browser chrome current firefox esr ie language typescript node aot issues", "num": "13704", "d": "12/2016"}, {"title": "routerisactive work parameters", "body": "tried add active class active route navbar found following bug routerisactive function isactive function returns true dasboard elements links looks active exact true parameter router router dashboards", "num": "13703", "d": "12/2016"}, {"title": "usefactory wants exported function", "body": "submitting check one x current behavior since updated angular angularcli get compiler error says use inline arrow function usefactory rather use exported function problem exchange code nt understand changed version show error funny thing app works without problem getting compiler error event tough code works way wants much unnecessery code especially providers use export function translatefactory return http gt new translatestaticloader json ngmodule translatemoduleforroot provide translateloader usefactory translatefactory deps http already issues similar topic example none could answer core question expected behavior expect work like earlier versions could use like example minimal reproduction problem instructions results error motivation use case changing behavior mostly asking changed nothing changelog helps questions version changed changed really need change every factory bug expect fixed future version please tell us environment ubuntu intellij idea angular angularcli browser negligible language typescript", "num": "13702", "d": "12/2016"}, {"title": "get header response headers upgrade angular final", "body": "hi problem get response headers app api send request open debug mode chrome see frontend code errheades see code work corectly use angular upgrade angular final nt work fix issue anyone help thanks", "num": "13700", "d": "12/2016"}, {"title": "html custom elements createdcallback firing wrong place", "body": "submitting check one x current behavior trying integrate chartiq library html custom elements angular application elements logic createdcallback firing innerhtml custom element empty expected behavior use custom elements without angular createdcallback firing full element childrens added inserted dom minimal reproduction problem instructions motivation use case changing behavior angular breaks part expected behavior custom elements needs fixed allow using custom elements angular apps please tell us environment windows webstorm npm angular version browser chrome language node aot issues", "num": "13699", "d": "12/2016"}, {"title": "internet explorer infinite digest location change", "body": "submitting check one x current behavior infinite digest error internet explorer console button click expected behavior location changes without error minimal reproduction problem instructions internet explorer check error console button click note happens location change occurs evalasync motivation use case changing behavior large app different redirect scenarios may may local app wish set locationhref angular version browser ie internet explorer hashchange event fires asynchronously causes locationwatch think location url updated nt match browser url seems like location logic know whether url change occured via location setters", "num": "13697", "d": "12/2016"}, {"title": "published code amp npm bundles include abstract methods", "body": "submitting bug report current behavior published code amp umd bundles npm include extra licenses empty abstract methods expected behavior ideally umd bundles would include abstract noop methods duplicate license information would probably result bundle size reduction performance increase angular apps using bundles minimal reproduction problem instructions angular version amp master", "num": "13696", "d": "12/2016"}, {"title": "host binding works differently ngupgrade app", "body": "submitting check one x current behavior see thisngzoneonstable firing actually becomes stable expected behavior ngupgrade apps work use case pure angular apps hack needed minimal reproduction problem instructions see repo repros motivation use case changing behavior using tooltip module hybrid app please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx typescript node aot issues", "num": "13694", "d": "12/2016"}, {"title": "router navigate longer working upgrade", "body": "submitting current behavior similar scenario found angular router documentation using authenticate users long story short successful login user redirected application home page code working upgraded router screen shot console upgrade notice extra hop login page indicated login ngoninit message redirecting home message tells login component initialized eventually displayed expected behavior console output see extra hop login page successful authentication noted authenticated message redirects home good minimal reproduction problem instructions difficult reproduce without actual use concept similar angular router documentation big kicker code works breaks moving relevant login component ngoninit relevant authguard export class authguard implements canactivate motivation use case changing behavior would like able guard parts app user authenticated simple real life use case please tell us environment windows professional visual studio code angular version angular browser chrome version language typescript node aot issues", "num": "13693", "d": "12/2016"}, {"title": "breaks loadchildren gt module", "body": "submitting check one x current behavior upgrading routes work anymore upgrade able use construction delegate certain route external module use lazy loading used separate application parts error console thrown second line property expected behavior idea worked able navigate modules errors thrown minimal reproduction problem instructions used scheme previous submission di repo motivation use case changing behavior want use logically separate parts app using lazy loading please tell us environment node npm angular everything webpack angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome firefox language typescript xx version node aot issues", "num": "13692", "d": "12/2016"}, {"title": "use calc hostbindings", "body": "submitting check one x current behavior works expected behavior calc would succeed would see top value set dev tools minimal reproduction problem instructions motivation use case changing behavior since good way set styles directives need way set height based calc tried hacking nativeelementref limited success seems browser supports behavior please tell us environment webpack angular version browser language", "num": "13691", "d": "12/2016"}, {"title": "mockconnection nt accurately portray real connection", "body": "submitting check one x current behavior nt consistent real connection error handling real connection checks response status okay status within calls next observable otherwise error mockrespond always calls next means explicitly check status code unit tests call mockerror expected behavior mockrespond would fire error response status okay therefore see much need mockerror except one requires test error handling method without creating mock http method maybe minimal reproduction problem instructions sure neccesary see question info motivation use case changing behavior better portrayal real http connection unit tests please tell us environment ubuntu webstorm angularhttp version angular version browser language typescript xx typescript", "num": "13690", "d": "12/2016"}, {"title": "rootscope dependency injected getting issue aot hybrid", "body": "created following rootscopeservice wrapper rootscope used service named example xservice import injectable inject angularcore injectable export class rootscopeservice static instance rootscopeservice constructor inject rootscope public rootscope import injectable inject angularcore import logger level import rootscopeservice rootscopeservice injectable export class xservice private log logger private static instance xservice constructor inject rootscope public rootscopeservice xserviceinstance null thislog new logger thisloglevel leveldebug xserviceinstance return xserviceinstance trackcustomevent customevent currentscope try xserviceinstancerootscopeservicebroadcast customevent currentscope catch ex xinstancelogerror x trackcustomevent extostring trackactionevent actionevent scope xserviceinstancetrackcustomevent actionevent scope compiled aot compiled without fail created build file rollup running buildjs file getting following issue uncaught typeerror read property get undefinedrootscopefactory anonymous function anonymous function anonymous function index refused execute script mime type imagegif executable", "num": "13687", "d": "12/2016"}, {"title": "renderersetelementattribute attributevalue parameter strictnullchecks", "body": "submitting check one x current behavior stylistic thing legal usage deletes datasomeparam attribute element code shows typescript error using strictnullchecks setelementattribute described attributevalue expected behavior attributevalue type minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version still latest angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13686", "d": "12/2016"}, {"title": "injecting circular object throws", "body": "submitting check one x current behavior using object circular references value opaque token di real world example angular throws error see attached plunker get better grasp happening expected behavior angular detect circular reference throw minimal reproduction problem instructions motivation use case changing behavior allow circular objects values di please tell us environment na see plunker angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues na stack trace sourcemaps may help debugging", "num": "13685", "d": "12/2016"}, {"title": "ca nt resolve token injected parameter using opaquetoken", "body": "submitting check one x current behavior declare token injection constant value opaquetoken appmodule injector ca nt resolve token parameter service class declared token external file works correctly expected behavior declared token appmodule resolved paramter service injector minimal reproduction problem instructions repro service class problematic code snippet uncommenting code result error import injectable inject optional angularcore import testtoken appmodule import testothertoken apptokens injectable export class testservice testval testotherval constructor ca nt resolve testtoken declare appmodule consolelog thistestval testinjectedval printtestval consolelog consolelog please tell us environment mac angular version latest version browser maybe", "num": "13684", "d": "12/2016"}, {"title": "ngmodel select updating select element value", "body": "submitting check one x current behavior ngmodel properly setting selectbox value model variable expected behavior ngmodel would properly set selectbox value model variable minimal reproduction problem instructions select category categoryname add new category onchangecategoryselect event let value eventtargetvalue select box change option default sometimes intermittent unless uncommenting line eventtargetvalue thismodelcategory means ngmodel setting select box value correctly tested way binding ngmodel ensure setting value function called setting value modelcategory inside change function results also confirm put breakpoint browser onchange event modelcategory changed default select box value still add click default option get changed event even though already set default motivation use case changing behavior selectbox work properly way binding ngmodel please tell us environment macosx liteserver visual studio code ts gulp systemjs angular version browser chrome language typescript", "num": "13683", "d": "12/2016"}, {"title": "\u7684 http \u7684success\u548cerror\u65b9\u6cd5\u5931\u6548", "body": "", "num": "13682", "d": "12/2016"}, {"title": "custom validation reactive forms angular", "body": "hi also see code jsfiddle exploring custom validation gone article configured typed value email text getting exception typeerror thissubscribe function new zoneawarepromise objecttopromise converttopromise arraymap native formcontrolasyncvalidator formcontrolabstractcontrolrunasyncvalidator formcontrolabstractcontrolupdatevalueandvalidity formcontrolsetvalue defaultvalueaccessoronchange component code import component angularcore import formgroup formbuilder validators angularforms import formcontrol abstractcontrol angularforms html", "num": "13681", "d": "12/2016"}, {"title": "candeactivate nt work observable return value", "body": "submitting check one x current behavior implement candeactivate guard return observable route push browser back button navigate back route b candeactivate called return value true nothing happens push back button route changes b normal navigation works without problem expected behavior candeactivate work browser backforward button minimal reproduction problem instructions reproduction plnkr changed candeactivate funtion launch preview separate window click heroes click crisis center click one crisis edit name press alt left arrow go back press ok route nt change press alt left route changes heroes motivation use case changing behavior please tell us environment nt know version angular used latest live example problem happens environment angular version router version browser chrome language typescript", "num": "13680", "d": "12/2016"}, {"title": "date pipe working date", "body": "gt dec yyyymmdd gt", "num": "13675", "d": "12/2016"}, {"title": "calling enable disable nested reactive forms yields unexpected results", "body": "submitting check one x consider reactive form nested subforms controls form upon changing value cause corresponding subform become revealed enableddisabled achieved subscribing source control calling target subform however one level nested subforms overall status form unexpected example take following plunkr example demonstrates form following structure root form existing customer form usernamepassword login form card numberpin form new customer form user toggles radio buttons corresponding subforms become enableddisabled would expect instance user confirms existing customer new customer form disabled user chooses log usernamepassword card numberpin form disabled current behavior problem arises reenabling valid nested form plunkr perform following steps select yes existing customer select credentials login type fill usernamepassword satisfy validators form return first radio group select existing customer enables new customer form disables existing customer form return first radio group select yes existing customer form unexpectedly marked reason card numberpin form immediately reenabled therefore invalid required fields properly disabled expected behavior step form card numberpin form disabled minimal reproduction problem instructions see repro steps motivation use case changing behavior nested forms conditional validation common use case implementing easy predictable better way achieve compared plunkr please share please tell us environment plunkr angular version browser chrome language typescript node aot issues na", "num": "13674", "d": "12/2016"}, {"title": "potential race condition repetitive calls ngzonerun", "body": "submitting check one x current behavior background electronbased app created eventemitter nodejs angluar main thread component code renderer thread gets eventemitter electron remote module listens upon receives message eventemitter component add received message field used ngfor template typescript thismusicfileentrypump require electron remoterequire filemanager logicforcreatingtheeventemitter thismusicfileentrypumpon file entry imusicfileentry gt thisngzonerun gt thisfilespush entry issue exception thrown random point ngzonerun eventemitter fired different thread rapidly random time angular mechanism guarantee change ngzonerun consolidated next time called hope angular implements feature guarantee suggest recommended practice workaround listen onstable event form ngzone kick another run previous run finished typescript let defer qdefer deferresolve downsides code tedious cumbersome document mentions angular eventemitter guaranteed observable future guarantee usage workaround simply use throttled way call ngzonerun code clean helps mitigate problem still nt always guarantee work unless set throttle threshold pretty high cause unnecessary ui delay expected behavior hope angular team please give insights whether angular issue please suggest best practice using ngzone scenario talked minimal reproduction problem instructions create electron app make eventemitter main thread randomly emit messages rapid rate renderer thread acquire eventemitter listen ngzone update like mentioned motivation use case changing behavior workaround rather complicated truly race condition ngzonerun consider case please tell us environment windows bundler used rely electron find modules angular version browser electron prebuild language typescript node aot issues", "num": "13673", "d": "12/2016"}, {"title": "routes fixed synonym", "body": "submitting current behavior routes path accessed path eg expected behavior routes fixed synonym accessed motivation use case changing behavior want change path search across app change everywhere unhandy leads errors forget change somewhere real world maybe stakeholder decides change path multiple times development frameworks want show done php framework symfony configuration yaml fixed name probably change change path want app still keeps working use link generate function", "num": "13671", "d": "12/2016"}, {"title": "inheritance angular decorators merging properties set child", "body": "current behavior see following expected behavior property template component componenttemplatebase get merged child child specifying template minimal reproduction problem instructions see motivation use case changing behavior duplicate settings across components needed please tell us environment nodejs packagejs described angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues copied comments issue bellow export abstract class componenttemplatebase implements itemplatebase contentchild templateref defaulttemplate templateref viewstate defaultviewstate defaultviewstatedefaulttemplate component selector simpleloginform export class simpleloginformcomponent extends componenttemplatebase implements oninit loginform formgroup user memberstatus memberstatus status memberstatus payload memberpayload dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcalendar babelruntime corejs datefns jquery reflectmetadata rxjs scriptjs zonejs devdependencies angularclasshmr angularclasshmrloader typesbootstrap typescorejs typesjasmine typesjquery typesnode typesscriptjs typesseleniumwebdriver autoprefixer awesometypescriptloader babelcore babelloader babelplugintransformruntime bootstraploader bootstrapsass browsersync browsersyncwebpackplugin bsfullscreenmessage codelyzer compassoptions copywebpackplugin cssloader deepextend del extracttextwebpackplugin fileloader gulp gulpcleancss gulpcompass gulpenv gulploadplugins gulpsequence gulptypescript gulputil imgloader importsloader lazyobject loadgulptasks nodesass postcssloader progressbarwebpackplugin rawloader resolveurlloader sassloader sourcemaploader stripansi styleloader tslint tslintloader typescript urlloader vinylnamed webpack webpackbundleanalyzer webpackdevmiddleware webpackdevserver webpackhotmiddleware webpackmerge webpacknodeexternals webpackstream", "num": "13670", "d": "12/2016"}, {"title": "title selector nt work used selector appts file", "body": "selector nt work used selector component import component angularcore import titlecomponent titlecomponent component selector myapp template export class app name string constructor thisname import component angularcore component selector title template export class titlecomponent title tag contents visible reason nt work selector change selector name start working works selector", "num": "13669", "d": "12/2016"}, {"title": "ngc error encountered resolving symbol values statically", "body": "submitting check one x current behavior generic class used inside service exposed ngmodule providers array ngc fail error expected behavior compile without problems minimal reproduction problem instructions create simple app command create service generic class one methods service returns run watch fails clone run repo motivation use case changing behavior kind code prevents entire application aot compilation please tell us environment windows node ts angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13668", "d": "12/2016"}, {"title": "zonejs uncaught rangeerror maximum call stack size exceeded", "body": "submitting check one x current behavior console raise expected behavior nt raise errors minimal reproduction problem instructions chrome console raise motivation use case changing behavior getting started please tell us environment angular version see demo browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13667", "d": "12/2016"}, {"title": "want change input type password text click event angular", "body": "", "num": "13665", "d": "12/2016"}, {"title": "consolelog messages swallowed ngoninit", "body": "submitting check one x current behavior messages placed routines various modules services components messages components display properly message modules services appear console expected behavior messages appear console minimal reproduction problem instructions place messages routines modules services open launch site scratch head stare disbelief messages appear console motivation use case changing behavior need able see precisely happening data supposed loaded without access logging flying blind please tell us environment os windows angular version browser version language typescript node aot issues angularcli using build", "num": "13664", "d": "12/2016"}, {"title": "read property listlazyroutes undefined issue newly created angular project", "body": "screenshot", "num": "13663", "d": "12/2016"}, {"title": "formgroup validators merge sync async validators", "body": "submitting check one x current behavior validatorsrequired sync validatorsslug async fails error subscribe found expected behavior validators fired minimal reproduction problem instructions attach plunkr need add validatorsrequired validatorsslug see crash motivation use case changing behavior please tell us environment angular version browser chrome language typescript xx node aot issues", "num": "13662", "d": "12/2016"}, {"title": "formcontrol child component crash", "body": "submitting check one x current behavior parent component template child component inputtext controlpath export class inputtext implements oninit onchanges controlpath string value string input form formgroup control formcontrol constructor thiscontrol thisformcontrols thiscontrolpath tried crash thisforms null ngafterviewinit thiscontrol thisformcontrols thiscontrolpath crash ngoninit thiscontrol thisformcontrols thiscontrolpath crash ngonchanges changes hola alert thisvalue appears following error exception error inputtext class inputtext inline caused find control unspecified name attribute seen problem formcontrol value value nt accept null values expected behavior expect could formcontrols child component child component nt formgroup inherits parentcomponent minimal reproduction problem instructions explained current behavior attach plunker motivation use case changing behavior please tell us environment angular version browser chrome language typescript xx node aot issues", "num": "13661", "d": "12/2016"}, {"title": "dynamic forms validating multiple times", "body": "current behavior dynamic form built using ngfor runs updatevalueandvalidity already existing control quite overhead also reruns async validators used combination ngbootstrap also throws exception see switch tab reruns asyncvalidators exception minimal reproduction problem instructions angular version see plunker", "num": "13660", "d": "12/2016"}, {"title": "difference version version", "body": "difference version vsavkin vicb mhegazy", "num": "13659", "d": "12/2016"}, {"title": "aot template verification", "body": "submitting check one x current behavior ngc produces validated untyped context within embedded template directives like ngif ngfor etc validated context produces error running ngc expected behavior validated context produce error running ngc unexpected behavior expected behavior ngc produces error second example minimal reproduction problem instructions run ngc examples motivation use case changing behavior detects errors complex templates compile time please tell us environment angular version browser na language typescript node aot issues", "num": "13658", "d": "12/2016"}, {"title": "angular clear cache", "body": "submitting check one x current behavior created app angular testing localhost everything work good mean change code component html etc brower change upload code server use nginx everything new valiable brower user user clear cache manually chrome ctrl shift delete clear browsing data see new good try add code index file work way clear cache save cache angular thank minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13657", "d": "12/2016"}, {"title": "multi provided value appears duplicated application boots", "body": "submitting check one x current behavior certain conditions module dependencies listed particular import orders values provided multi flag via forchild syntax duplicated application boots behavior occur angular observed expected behavior values provided within module duplicated module referenced several others minimal reproduction problem instructions narrowed situation occurs plunker run see list provided values printed dom problem occurs string shared printed twice example modules appmodule featuremodule featurewidgetmodule sharedmodule widgetmodule widgetmodule exposes method simply provides string arguments multiple provider sharedmodule imports featuremodule follows pattern often seen router documentation secondary module dedicated importing routes case widgets feature featuremodule imports featurewidgetmodule imports finally appmodule imports featuremodule sharedmodule use setup using specific import order punker value multiprovided sharedmodule appears twice inspect provided widgets change import order modules plunker see shared printed motivation use case changing behavior use case allow various feature modules provide values route definitions larger application shared modules referenced several others work around issue manually manipulating import orders requires every module writer understand dependencies modules upon depend believe concern please tell us environment using osx webstorm npm able reproduce using systemjs webpack angular version problem occurs angular occur browser language typescript node aot issues", "num": "13652", "d": "12/2016"}, {"title": "tracking generate minified code", "body": "external users nt use closure compiler minifier similar quality look generating minified code already", "num": "13651", "d": "12/2016"}, {"title": "issue using urlresolver component relative urls provider token application packages root url", "body": "trying resolve image url appmodulets code import ngmodule angularcore import browsermodule angularplatformbrowser import appcomponent appcomponent import routing approutingproviders approuting import routes routermodule angularrouter import urlresolver angularcompiler const routes routes ngmodule imports browsermodule routing routermoduleforroot routes usehash true declarations appcomponent providers approutingproviders urlresolver bootstrap appcomponent export class appmodule appcomponentts code import component angularcore import router angularrouter import urlresolver angularcompiler component moduleid moduleid selector myapp templateurl appcomponenthtml export class appcomponent constructor private urlresolver urlresolver providing urlresolver constructor injection urlresolver causing error appcomponenthtml code error constructor injection add anything providers", "num": "13650", "d": "12/2016"}, {"title": "returning candeactivate implementation influence browser history", "body": "submitting current behavior returning candeactivate implementation influences browser history seems leftover expected behavior returning candeactivate implementation influence browser history minimal reproduction problem instructions present angular routing demo plnkr steps reproduce click crisis center click crisis center edit crisis center name details press browser back button press cancel confirm dialog pops asking want discard changes press browser back button time press ok confirm dialog pops asking want discard changes result taken back crisis center detail view instead crisis center press browser forward button twice notice times taken crisis center detail view crisis center detail view essentially replaced crisis center detail view history entry motivation use case changing behavior press browser back button choose cancel navigation order first save pending changes press browser back button navigate previous page first time pressed browser back button please tell us environment angular demo plnkr also present ngcli environment windows angular version router browser chrome untested others language typescript", "num": "13647", "d": "12/2016"}, {"title": "spam gitter", "body": "spammer gitter room somebody pls ban vicb chuckjaz pkozlowskiopensource", "num": "13646", "d": "12/2016"}, {"title": "template parse errors", "body": "use flexlayout api html hide show works fine specify default nonresponsive selector html hide show template parse error occurs terminal uncaught promise error template parse errors ca nt bind fxshowxs since nt known property div testapp error template parse errors ca nt bind fxshowxs since nt known property div plunkr demo shows note using latest bundles npm", "num": "13645", "d": "12/2016"}, {"title": "upgradeadapter components displayed using structural directives ngzone", "body": "submitting check one x current behavior using upgrade adapter downgraded angular component ngzone events triggered patched ngzone component zone well however children components parent downgraded component enabled sometime structural directive ngif outside zone button part child anything happening inside click handler outside zone expected behavior child components ngzone structural directives enable minimal reproduction problem instructions open demo check output screen parent zone press show child button child component gets created zone output open console click log zone status button button click event handler output also zone edit problem occurs static upgrade module motivation use case changing behavior could create problems applications using upgrade adapter please tell us environment windows problem reproducible plunkr angular version latest angular version npm browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version language typescript xx typescript", "num": "13644", "d": "12/2016"}, {"title": "changing property parent component inside lifecycle hook causes error", "body": "submitting check one x current behavior child component changes property parent component inside lifecycle hook function accessing property using local variable causes error expected behavior error thrown changing property parent component inside lifecycle hook function work function called response event like button click minimal reproduction problem instructions plunker clarify mean calling update response click works fine motivation use case changing behavior behavior consistent change made child component lifecycle hook angular version", "num": "13643", "d": "12/2016"}, {"title": "ngfor generate exception undefined collections", "body": "submitting check one x current behavior member variable class used ngfor member variable undefined exception generated expected behavior expected behavior would generates exception minimal reproduction problem instructions see plinkr motivation use case changing behavior real loop undefined variable would thrown error please tell us environment windows node npm angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript", "num": "13642", "d": "12/2016"}, {"title": "breaks backward compatibility", "body": "binding optional trackby ngfor gives track must function received undefined previous versions undefined simply ignored many primeng users problem simply ignoring undefined instead throwing error restore backward compatibility thought breaking changes major versions", "num": "13641", "d": "12/2016"}, {"title": "nt seem send cookies even though withcredentials header attribute still set", "body": "submitting check one x current behavior submitting login request pyramid server authenticates user everything right extends header authtkt cookie returns setcookie see cookie chrome console set browser send get request resource like protected get url string observable let options new requestoptions optionswithcredentials true request include cookie received moment ago getting forbidden expected behavior withcredentials attribute include cookies present browser every request minimal reproduction problem instructions tried reproduce issue plunker need server authenticate users send cookie based token afterwards step make post case login server get cookie token step make get case getme server check network request see cookie attached request motivation use case changing behavior needed backend makes use cookie based token authentication please tell us environment os windows ide visual code angularjs version pycharm pyramid version package manager npm pip angular version browser language node aot issues", "num": "13640", "d": "12/2016"}, {"title": "angular nt support rxjs operator", "body": "code current behavior operator want see value console nt expected behavior want rxjs operator works minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13639", "d": "12/2016"}, {"title": "router force rerun resolve without route changes", "body": "submitting check one x motivation use case changing behavior would nice possible force resolve data use case user modifies entity used multiple components loaded using class would nice run get new version entity components", "num": "13638", "d": "12/2016"}, {"title": "fragment routing working", "body": "trying add anchor link current app made navigation first using fragment attribute nt work referenced fragment using router navigation could nt make work scenarios playing nt seem working followed step step tutorial routing documentation provide help", "num": "13636", "d": "12/2016"}, {"title": "angular refresh route broken deploy war wildfly specific context path", "body": "bug report gt search github similar issue pr submitting feature request x support request developing angular app essentialy run app ng serve works fine refresh page example works fine angular recognizes right route problem occurs build app war deploy wildfly different context path ex myapp point routing navigation works fine refresh page receive found error base href indexhtml also tried case angular try look resources anyone idea fix motivation use case changing behavior need deploy war wildfly war contains angular frontend app deployin specific wildfly context path please tell us environment windows intellij wildfly angular version browser language typescript node aot issues", "num": "13633", "d": "12/2016"}, {"title": "ngfactory files replaced ngsummaryjson files typescript running ngc", "body": "submitting bug report current behavior using typescript ngfactoryts files created modules components upgrading newest typescript ngsummaryjson files created instead factories making unable compile application expected behavior still generate ngfactory files besides ngsummary files minimal reproduction problem instructions repository changing typescript awesome typescript loader produces aforementioned behavior motivation use case changing behavior still able generate aot applications newest typescript please tell us environment ubuntu angular version browser language typescript node aot issues", "num": "13632", "d": "12/2016"}, {"title": "local component css style working dynamic html content", "body": "hello sir please review componenthtml code given footercomponenthtml privacy cookie policy search terms advanced search orders returnsabout us contact us sign newsletter subscribe copyright magento rights reserved footercomponentcss copyright backgroundcolor color fff display block padding textalign center small small fontsize content float right subscribe display tablecell width marginright border solid paddingleft control faenvelope content position absolute paddingtop color paddingleft subscribebtn display tablecell marginleft form control display tablecell label display none pagefooter background links ul li gt color important fontsize textdecoration none paddingbottom footer item color footercomponentts import component oninit angularcore import observable rxjsobservable import footerservice footerservice import http response headers requestoptions angular import footer footer component moduleid moduleid selector footerblock templateurl footercomponenthtml styles styleurls footercomponentcss export class footercomponent implements oninit constructor private footerservice footerservice name footer footer footer ngoninit void thisname thisfooterservicegetfooter thisfooterservicegetfooter subscribe res response gt thisfooter resjson err response gt consolelog err dynamic html coming server us customer service embedded dynamic html content getting called request server dynamic html try apply following css given footercomponentcss footer item color working css divs html elements defined footercomponentcss working fine note wrote css dynamic html content stylecss file located root directory working dynamic content unable find issue css defined dynamic html content footercomponentcss working hope provide right solution thank tushar garg", "num": "13631", "d": "12/2016"}, {"title": "ie issue using routernavigate", "body": "submitting check one x current behavior ie list items page items update button item clicking route update page item save use routernavigate constructed route take back list items page clicking update button item changes url showing appropriate url item intend edit load page way go another page come back expected behavior matter many times ever coponent template call url relevant page must displayed minimal reproduction problem instructions create components anchor tag component href component route using routernavigate go back component click link component take component motivation use case changing behavior consistency support ie please tell us environment visual studio code iis browser ie work around used windowlocationhref redirect angular version browser checked ie language node aot issues latest", "num": "13628", "d": "12/2016"}, {"title": "type check template like tsx", "body": "want template type check", "num": "13627", "d": "12/2016"}, {"title": "missing documentation viewchildren contentchild decorators angulario", "body": "submitting check one x originally reported angulario repository angularangulario closed redirected repository current behavior following pages empty expected behavior pages show api documentation minimal reproduction problem instructions open pages browser motivation use case changing behavior documentation important please tell us environment angular version na browser chrome language", "num": "13625", "d": "12/2016"}, {"title": "noopanimationdriver error", "body": "submitting check one x current behavior angular fails exception builds fine ng build prod ng serve expected behavior extract xlf without errors please tell us environment angularcli node os angular version browser na language typescript node aot issues node", "num": "13624", "d": "12/2016"}, {"title": "ngfor list tracking", "body": "submitting current behavior sure bug feature request radokirov googlecom suggested file issue list primitives let say booleans ngfor capable track correctly clear documentation required use tracking function looks overkilled implement tracking function looks like expected behavior possible add predefined variable tracking parameter minimal reproduction problem instructions motivation use case changing behavior get rid unnecessary tracking function please tell us environment goobuntu cider angular version browser chrome language typescript", "num": "13623", "d": "12/2016"}, {"title": "html anchor tag angular sourced outside app", "body": "building angular app html pages coming different app angular app html pages anchor tags navigate different location page tried hashlocationstrategy pathlocationstrategy app considering href link trying open new route instead behaving like anchor please let know solution", "num": "13622", "d": "12/2016"}, {"title": "make ngcontent select attribute accept propermultiple css selectors", "body": "submitting check one x current behavior compare apples oranges ngcontent select attribute limiting css selectors work something works polymer nt work nt appear chain multiple selectors nt work expected behavior ngcontent select attribute work like polymer accept proper css selectors minimal reproduction problem instructions work around issue define multiple select attributes even approach would accept motivation use case changing behavior easy polymer agular approach seems come bit short compared polymer way please tell us environment osxsierra intellij dart sdk angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chromium version language typescript xx dart sdk node aot issues", "num": "13621", "d": "12/2016"}, {"title": "angular iis webapplication virtual directory resolve paths", "body": "testing purpose created virtualdirectory iis inetmgr local pc later converted iis web application web application root deployed ran application get following error browser import component angularcore import router angularrouter component moduleid moduleid selector myapp templateurl appcomponenthtml test export class appcomponent constructor private router router used moduleid concept still url resolved since files virtual directory ebr run application nt work put ebr localhost urls fix issue", "num": "13620", "d": "12/2016"}, {"title": "reactiveforms valuechanges unusable object", "body": "current behavior object make child models elements form contains select elements first element binds vehicle makes make selected first select element second select element populated models vehicle make subscribing valuechanges fact return object ca nt use object way always shows object object even piping json performing jsonstringify even tried making makes models typed creating classes using work either expected behavior would expect value emitted valuechanges observable actual selected make object able access models property minimal reproduction problem instructions see plunker issue motivation use case changing behavior would allow binding child elements parent element selected please tell us environment mac os sierra angular angular cli angular version browser language typescript node aot issues", "num": "13619", "d": "12/2016"}, {"title": "di feature lifecycle hooks services especially ondestroy", "body": "submitting check one x current behavior destroying injector angular way afaik inform service instances injector doomed service holding valuable resources eg message bus holding subscriptions nt know let go expected behavior service angular call destroysreleases hold injector eg destroying component safe service created injector nt always case almost anything except otoh developer adds method expect called put service compromising position balance think useful feature obvious substitution one consistent disposable patterns languages ps lchook makes sense developer easily compensate lack ca nt think workaround lack angular version browser language", "num": "13618", "d": "12/2016"}, {"title": "formcontrol performance issue ngfor tags large array", "body": "submitting check one x current behavior two routes one route component implements several tags uses directive populate like array values clicking route selects route takes awhile load looks like performance issue tag values expected behavior performance nt take hit adding directive select minimal reproduction problem instructions see plunkr click options route see lag behavior motivation use case changing behavior others may use formcontrol options array large amount values please tell us environment visual studio code mac os x el capitan angular version browser language typescript", "num": "13617", "d": "12/2016"}, {"title": "angular router outlets urls friendly nt show outlet id good behavior", "body": "submitting check one x current behavior nt work works expected behavior remove parentesis outlet name make sense url friendly users good approach minimal reproduction problem instructions const approutes routes path redirectto users pathmatch full path users component userscomponent path users id component usercomponent children path images component userimagescomponent outlet user component template motivation use case changing behavior please tell us environment angular version browser chrome language typescript xx node aot issues", "num": "13616", "d": "12/2016"}, {"title": "combine regular form dynamic reactive form", "body": "submitting check one x current behavior seperated expected behavior become one minimal reproduction problem instructions motivation use case changing behavior made confusion colleagues refer strange deal element form different places core please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13615", "d": "12/2016"}, {"title": "aot error provider specifies inline function", "body": "submitting check one x current behavior provider specifies inline functionarrow function build fails error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function instance following breaks changing notation object method shorthand works completely bizarre imho since semantics examples identical expected behavior work without issue minimal reproduction problem instructions occurs compiling using aot reproducible plunkr motivation use case changing behavior please tell us environment windows npm angular version issue angular angularcli version browser na language typescript node aot issues", "num": "13614", "d": "12/2016"}, {"title": "error upgrading angular angular aot compilation", "body": "submitting check one x current behavior without changing working aot build setup upgrade work app angular angular get error console useful identifier figuring error stack trace info everything else seems compile properly entry module file exports entry module expected behavior compile fine errors minimal reproduction problem instructions sure minimally reproduce unfortunately motivation use case changing behavior upgrading breaks app notes error seems thrown oddly enough seems give please tell us environment mac os angular version browser na language typescript node aot issues", "num": "13613", "d": "12/2016"}, {"title": "need way wait parent guard complete moving", "body": "submitting check one x current behavior basically guards child parent child guard navigates child route problem child guard getting resolved parent plunker also seems related tests look like merge nt describe expected behavior need way tell child guard wait parent returned true continuing please tell us environment osx vimsublime webpack angular version language typescript xx", "num": "13612", "d": "12/2016"}, {"title": "feature request provide javascript documentation", "body": "hello long time still proper documentation javascript considering improvements js rest planned future everyone would want learn typescriptcoffeescriptdart etc plansroadmap complete documentation javascript", "num": "13611", "d": "12/2016"}, {"title": "dynamic reactive form angular lazy loading webpack", "body": "nt know issue angular current behavior dynamic reactive form ca nt work sub lazy load route error message component work root route sub route expected behavior think dynamic reactive form work lazy loading route nt odd minimal reproduction problem instructions get source code first step npm second step npm run start finally step click form list see error message console motivation use case changing behavior please tell us environment angular version browser chrome language typescript node aot issues", "num": "13610", "d": "12/2016"}, {"title": "resolve parameters parser works reflectmetadata issue", "body": "submitting check one x current behavior bug happens application starting removing piece code bug present found commenting dependency config version project expected behavior application start minimal reproduction problem instructions minimal code error using cordova webpack config var webpack require webpack var htmlwebpackplugin require htmlwebpackplugin moduleexports entry app srcappmaints vendor corejsclientshimminjs zonejsdistzone angularcommon angularcompiler angularcore angular angularplatformbrowser angularplatformbrowserdynamic reflectmetadata comment reflectmetadata error rxjs output path www filename script name js module loaders test ts exclude componentts loader ts test html loader raw resolve extensions js ts plugins new htmlwebpackplugin template srcindexhtml new webpackoptimizecommonschunkplugin vendor scriptvendorjs maints import platformbrowserdynamic angularplatformbrowserdynamic import browsermodule angularplatformbrowser import httpmodule angular import ngmodule angularcore import component angularcore component selector myapp template bar export class appcomponent ngmodule imports browsermodule httpmodule declarations appcomponent providers export class appmodule const platform platformbrowserdynamic platformbootstrapmodule appmodule indexhtml foo motivation use case changing behavior nt know please tell us environment windows yarnnpm cordova webpack latest versions angular version browser mobile chrome xx language typescript", "num": "13609", "d": "12/2016"}, {"title": "documentation testing components using routeroutlet outdated", "body": "submitting check one x current behavior documentation routeroutlet testing date specifically ca nt find search class routeroutletstubcomponent expected behavior working example testing pointing test source code repository minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version angularcli angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview relevant language typescript xx typescript node aot issues", "num": "13608", "d": "12/2016"}, {"title": "localeid overwritten platformbrowserdynamic", "body": "submitting check one x current behavior provide extra provider like gets overwritten expected behavior keeping provided minimal reproduction problem instructions angular version ng", "num": "13607", "d": "12/2016"}, {"title": "aot error resolving funcion symbol statically worked", "body": "submitting check one x current behavior property decorators used validation applied throughout sizable angular project decorators issues exception maybe requiring one params passed decoration exported however getting following error provide detail decorator allows passed custom validation function part one parameters attempted save passed function value exported constant still received error reverting resolves issue course ways work around thought bring case something caught regression testing something sort expected behavior aot compilation error able compile decorators since around days around time wrote minimal reproduction problem instructions sorry reproduce since aot compilation issue helpful would simplified representation described additionally also mentioned following nt work either attempting follow indication consider replacing function lambda reference exported function motivation use case changing behavior ideally able move forward path months like said ways work around ideally would nt unless theres specific angular compiler needbenefit process looked change log compiler changes around metadata see something immediately jumped cause error please tell us environment mac os x vscode npm webpack webpackdevserver typescript angular version issue browser browser language typescript node aot issues", "num": "13605", "d": "12/2016"}, {"title": "npm install save angularcore unmet peer dependency angularcore", "body": "aymonsmacbookair aymon npm install save angularcore unmet peer dependency angularcommon unmet peer dependency angularcore unmet peer dependency angularplatformbrowser unmet peer dependency rxjs unmet peer dependency zonejs npm warn angularcommon requires peer angularcore none installed npm warn angularcompiler requires peer angularcore none installed npm warn angularcore requires peer rxjs none installed npm warn angularcore requires peer zonejs none installed npm warn angularforms requires peer angularcore none installed npm warn angularforms requires peer angularcommon none installed npm warn angular requires peer angularcore none installed npm warn angularplatformbrowser requires peer angularcommon none installed npm warn angularplatformbrowserdynamic requires peer angularcore none installed npm warn angularplatformbrowserdynamic requires peer angularplatformbrowser none installed npm warn angularrouter requires peer angularcore none installed npm warn angularrouter requires peer angularplatformbrowser none installed npm warn tshelpers requires peer typescript gt lt gt gt gt none installed npm err code sooo ca nt install core depends core", "num": "13597", "d": "12/2016"}, {"title": "ca nt resolve parameters error message masks invalid typescript syntax error message using aot compiler", "body": "submitting check one x current behavior typescript syntax error preventing resolving parameters aot compiler gives ca nt resolve parameters mycomponent pathtofile expected behavior typescript syntax error printed instead example syntax error results typescript compiler error print error given typescript compiler related related minimal reproduction aot enabled project correctly inject dependency component constructor remove visibility modifiers add decorator motivation use case changing behavior correct error would actionable developers opaque error given currently please tell us environment ask whoajxtaylor angular version browser na language typescript xx typescript node aot issues na", "num": "13596", "d": "12/2016"}, {"title": "typeerror read property length undefined angular", "body": "node version angular router os ubuntu lts project instanced angularcli appmodulets typescript import browsermodule angularplatformbrowser import ngmodule angularcore import formsmodule angularforms import httpmodule angular import routermodule angularrouter import appcomponent appcomponent materialize module import materializemodule app modules import loginmodule loginindex import homemodule homeindex import sharedmodule sharedindex routes import routedmodules index ngmodule declarations appcomponent imports browsermodule formsmodule httpmodule materialize module materializemodule router module routermoduleforroot routedmodules app modules loginmodule homemodule shared module sharedmodule providers bootstrap appcomponent export class appmodule loginmodulets typescript import ngmodule angularcore import materializemodule import commonmodule angularcommon import logincomponent logincomponent ngmodule imports materializemodule commonmodule exports declarations logincomponent bootstrap logincomponent providers export class loginmodule approutests typescript import routes angularrouter routes import loginroute loginindex export const routedmodules routes loginroute loginroutests typescript import route angularrouter import logincomponent logincomponent export const loginroute route path login component logincomponent console promise rejection read property length undefined zone task promisethen value typeerror read property length undefined flatten setuprouter ngmoduleinjectorget ngmoduleinjectorappmoduleinjectorcreateinternal ngmoduleinjectorcreate ngmodulefactorycreate zonedelegateinvoke objectoninvoke zonedelegateinvoke typeerror read property length undefined flatten setuprouter ngmoduleinjectorget ngmoduleinjectorappmoduleinjectorcreateinternal ngmoduleinjectorcreate ngmodulefactorycreate zonedelegateinvoke objectoninvoke zonedelegateinvoke uncaught promise typeerror read property length undefined typeerror read property length undefined flatten setuprouter ngmoduleinjectorget ngmoduleinjectorappmoduleinjectorcreateinternal ngmoduleinjectorcreate ngmodulefactorycreate zonedelegateinvoke objectoninvoke zonedelegateinvoke flatten setuprouter ngmoduleinjectorget ngmoduleinjectorappmoduleinjectorcreateinternal ngmoduleinjectorcreate ngmodulefactorycreate zonedelegateinvoke objectoninvoke zonedelegateinvoke resolvepromise zonedelegateinvoketask zoneruntask drainmicrotaskqueue", "num": "13595", "d": "12/2016"}, {"title": "route resolve creates new instance service", "body": "submitting check one x current behavior lazy loaded module use route resolver uses service provided module level resolve creates new instance service angular nt creating new instance expected behavior reuse service instance provided lazy module resolve nt create new instance service like angular minimal reproduction problem instructions exact plnkr using different angular versions working expected see plnkr using angular gt working expected see plnkr using angular motivation use case changing behavior data stored service accessible within resolve store data resolve wo nt accessible components service instance please tell us environment angularcli node os linux angular version new issue issue since angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "13594", "d": "12/2016"}, {"title": "ios http client xhr backend throw error timeout", "body": "submitting check one x current behavior ios simulator amp device http client nt throw error timeout observable operators effect works chromesafari machine workaround listening timeout event like xhraddeventlistener load onload xhraddeventlistener error onerror xhraddeventlistener timeout onerror similar bug fixed angularjs expected behavior http client throw eror timeout occures supported platform minimal reproduction problem instructions motivation use case changing behavior bug fixed angularjs see please tell us environment ios amp safari mobile app cordova ionic build ios angular version browser ios wkwebview ios wkwebview ios safari ios safari language typescript xx typescript node aot issues aot used", "num": "13592", "d": "12/2016"}, {"title": "aot compilation determine module class many components unused", "body": "current behavior unused componentspipesdirectives workspace detected compiler throws error file stops compilation seem configurable problem since need files workspace need resultant app partner implementations requiring different combos shared components especially frustrating regards compiling webpack loader able provide list files included regardless workspace expected behavior would expect errors warnings andor able silenced compiler option alternatively regards webpack could allow list files inserted webpack could provide files require chain instead files workspace minimal reproduction problem instructions demo plunkr since uses jit create basic angular app bootstraps ngmodule one component appcomponent get app state aot compiled pretty easy hello world add component directory structure reference anywhere code try aot compile get warning motivation use case changing behavior company base app partners use modified versions app rather maintain partners separately use shared library common generic components imported needed base app everything fine since use every component partners use aot since components shared npm package declared module please tell us environment happens across devices current testing setup windows vs code cmder bash terminal angular version though also tested browser compiler issue browser specific language typescript node aot issues node", "num": "13590", "d": "12/2016"}, {"title": "impossible generate correct route auxiliary route", "body": "submitting check one x current behavior generating correct url route containing auxiliary route seems impossible cases example use case correct route would test listdetails router generates testlist details expected behavior router generate correct route minimal reproduction problem instructions plunker motivationuse case changing behavior plunker want generate details list auxiliary route please tell us environment windowsaspnet angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx ts", "num": "13589", "d": "12/2016"}, {"title": "reactiveformsmodule composeasync fails", "body": "submitting check one x current behavior customvalidator observable validate input expected behavior customvalidator observable validate input minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome language typescript xx node aot issues", "num": "13588", "d": "12/2016"}, {"title": "route data symbol properties lost jit", "body": "submitting check one x current behavior add data symbol property key route inject activatedroute component check data route property symbol key missing expected behavior properties symbol key preserved ordinary properties minimal reproduction problem instructions check console plunker motivation use case changing behavior ability use symbol properties route data angular version browser chrome language typescript", "num": "13587", "d": "12/2016"}, {"title": "deactivation guard breaks routing history", "body": "submitting check one x current behavior currently deactivation guard route return false true depending condition get guarded route user must pass though navigation step guarded route using guard called returns previous route loaded guard returns false navigation cancelled redo locationback failed navigation previous route loaded steps history instead user perception workflow expected behavior expected behavior user would navigating back brings back previous routed page workflow minimal reproduction problem instructions plnkr click button nav click button nav click button nav click button block nav back click button nav back bogue locationback routed instead personnal investigation investigation saw routerts line logic used pretty simply actual cause bug basically deactivation guard hit location browser already changed previous route means guard returns false runs logic calls point see replace state current location loose route history means plunker click block nav back times click nav back actually kill application motivation use case changing behavior pretty big bug since guard returns false breaks alters current routing history case application breaks workflow brings wrong business scopes user please tell us environment windows npm nodejs visual studio using nodejs typescript compilation angular version browser language typescript", "num": "13586", "d": "12/2016"}, {"title": "universal status release", "body": "submitting check one x give us insights angular universal merged yet updated part release", "num": "13585", "d": "12/2016"}, {"title": "upgrade provider static ca nt read property get undefined", "body": "submitting check one x current behavior static upgrade providers working try upgrade libraries case ui router angular upgrade iteration everything works providers provide state usefactory gt iget state deps injector always shows ca nt read property get undefined angular services everything works expected behavior upgrade libraries minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser language typescript xx node aot issues", "num": "13584", "d": "12/2016"}, {"title": "extract util decorators new library", "body": "hello looking create decorators found code utildecorators quite useful reason exist inside angular separate library quite general usage", "num": "13582", "d": "12/2016"}, {"title": "angular origin requests continue rejected gcpaws server", "body": "resolved make sure using right port submitting check one x current behavior making call running nodejsexpress server returns error expected behavior server return relevant data json format usually minimal reproduction problem instructions make service calls http endpoint pipe returned data component error console motivation use case changing behavior people test http services angular live reload production please tell us environment macos vs code npm node google app engine angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13581", "d": "12/2016"}, {"title": "ngmodel binding incorrect options reloaded", "body": "submitting check one x current behavior bound binding refreshed options reloaded happen options loaded server asynchronously repro provided given html template state selection address chicaco illinois shown california rather illinois expected behavior illinois shown workaround minimal reproduction problem instructions please tell us environment windows chrome angular version language", "num": "13578", "d": "12/2016"}, {"title": "support multiple xlfxmb files per application", "body": "submitting check one x current behavior unless missing something obvious seems like tool assumes extracting single file entire application experience ideal workflow large multiteam applications maintaining shared file nt seem like scale desired behavior would helpful tool allowed us extract translations multiple smaller files could pieced together later eg allow team team b maintain separate files specific feature feature b motivation use case changing behavior making easier multiple teams work larger apps", "num": "13577", "d": "12/2016"}, {"title": "trackby class interp class binding causes class binding disappear", "body": "submitting check one x current behavior element change state user replace row change class interp remove class binding never work expected behavior expected class interpolation removed combined class binding trackby changing data minimal reproduction problem instructions motivation use case changing behavior want use trackby performance use class interp binding please tell us environment os osx sierra angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx ts", "num": "13576", "d": "12/2016"}, {"title": "router stops working failing load feature module webpackaot", "body": "submitting check one x current behavior client aot compiled bundled using lazy loading implemented using angularrouterloader navigating lazy loaded module force offline mode try navigate routing fails expected ca nt load relevant chunk error loading chunk chunk number failed switching back online router longer works either routernavigate routerlink directive router resolve neither reject navigation command error logged expected behavior router nt stop working minimal reproduction problem instructions client feature module lazy loaded eg webpack configured appropriately navigating lazy module switch offline eg using chrome developer tools switch back online try navigate router motivation use case changing behavior app fully functional connection restored user forced reload app please tell us environment working windows visual studio aspnet core angular version reproduced amp browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome language typescript xx typescript node aot issues node", "num": "13575", "d": "12/2016"}, {"title": "add option use browser native validation angular forms", "body": "submitting check one x current behavior described currently possible enable native validate behavior still angular forms functionality expected behavior possible use browser native validation angular forms", "num": "13573", "d": "12/2016"}, {"title": "create robust animation test test post animation content removal", "body": "reference particular animation tested properly caused regression appear accidentally important robust unit test created able confirm height animation prepared properly leave animation contains inner nested view star bindings", "num": "13571", "d": "12/2016"}, {"title": "attempting bind two dependent inputs disabled state reactive forms results stack overflow", "body": "submitting check one x current behavior attempting bind two dependent inputs disabled state reactive form results stack overflow expected behavior given input b input disabled b present b disabled present minimal reproduction problem instructions example minimal plunkr motivation use case changing behavior constructing form common disable one input based presence another possible template forms possible model forms issue suggests way subscribing property manually calling however work changes input disabled state infinity trigger input b subscribers please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13570", "d": "12/2016"}, {"title": "pipe name conflict", "body": "submitting check one x current behavior pipes name exported two different modules way specify one used error throw specifying current pipe already exists example higlightpipe solution providing higlightpipe last module imported used pipe expected behavior error specifying pipe name already use way specify modules pipe use angular version", "num": "13569", "d": "12/2016"}, {"title": "ngmodel defers writevalue call next tick conflicts oninit contract child components", "body": "submitting check one x current behavior ngmodel defers calling writevalue controlvalueaccessor supplied value next tick oninit documentation states lifecycle hook called databound properties directive initialized result two things described obvious component implementing supply values inner components expect databound properties initialized expected behavior add warning oninit documentation ngmodel documentation change behavior minimal reproduction problem instructions minimal plunker reproduce motivation use case changing behavior trying place color picker form created wrapper component implements uses underneath wrapper set wrapper bound using wrapper turn following markup problem tries access databound inputs triggers bug road typescript export class colorpickerdirective implements oninit onchanges input colorpicker colorpicker string output colorpickerchange colorpickerchange new eventemitter true please tell us environment windows webstorm vscode npm yarn angular version browser language typescript", "num": "13568", "d": "12/2016"}, {"title": "reopen tool compiles typescript files", "body": "sorry must reopen issue way vicb closed issue although never fixed asked vicb multiple times gitter reopen issue never responded submitting current behavior webpack project angular cli running tool compile typescript files result directory full files expected behavior tool generate messages file motivation use case changing behavior directory without files please tell us environment linux angular version browser language typescript node aot issues current workaround contains", "num": "13567", "d": "12/2016"}, {"title": "routes contain additional objects angular", "body": "submitting check one x current behavior add object instance route definition app fails load error stack trace error ist thrown tries access passed variable case object instance fails worked fails fails webpack build nt tried build tools expected behavior user able add arbitrary properties route entries without causing compilation errors minimal reproduction problem instructions add object instance route definition like import someobject someobjectmodel const routes path children data otherproperty new someobject see example repository workaround object instance creation replaced function call example works without problems course access data changed motivation use case changing behavior able add application dependant information routing entries please tell us environment angularcli changed runtime windows also work custom webpack build without angularcli angular version browser language typescript node aot issues", "num": "13565", "d": "12/2016"}, {"title": "aot component rendered without firing lifecycleevents defined superclass", "body": "submitting check one x current behavior application runs perfectly without aot structure derived superclass superclass defines lifecycleevents like component rendered dom called expected behavior aot nt break already working call expected minimal reproduction problem instructions run run run create defined within test create extending use page run ca nt decide angular related ionic related make pluker without ionic aot possible motivation use case changing behavior multiple components almost methods variables differences template dedicated methods hence use avoid repeating code please tell us environment os professional node npm ionic angular version browser language typescript node aot issues", "num": "13564", "d": "12/2016"}, {"title": "angular exclude ngif elements sent part form data", "body": "x bug report angular exclude ngif elements sent part form data view county state zip country component inittax county state zip country return thisfbgroup county county validatorsrequired state state validatorsrequired zip zip country country validatorsrequired form data sent upon submit taxbycountry true taxbycounty true taxbystate true taxbyzip false country us county salt state ut zip", "num": "13563", "d": "12/2016"}, {"title": "ability easily updateaddsubtract route params", "body": "submitting disclaimer may well way easily accomplish aware searching issues question nt return good way accomplish wanted expected behavior would expect want features router updateparam param string would addupdate matrix parameter url version opposite would subtract parameter url existed current behavior order update route parameters must build parameters object current params hand router steps get currently right got messy bit logic order addupdate matrix parameters url see function gotopage pagenum number thispaginationcurrentpage pagenum motivation use case changing behavior got asset viewing component shows array thumbnails pagination component user use buttons lt lt gt gt navigate pages gettingcleaning assets data happen service though reads router snapshot params order know search contains bunches parameters like filters page size many wants page number etc making updates url component wishes update assets thumbnails eventually larger pictures simply trigger service fetch new data data stored observables components happy get data please tell us environment developing mac using vscode ide yarn package manager building webpack angular version language typescript related issue found issue seems make two requests one specifically related old router fixed also requests methods easily updateaddsubtract matrix parameters url conversation request got tied discussion automatic component reloading request got lost shuffle", "num": "13562", "d": "12/2016"}, {"title": "activeerror error encountered resolving symbol values statically", "body": "submitting check one x current behavior trying application get expected behavior app builds successfully minimal reproduction problem instructions unable reproduce build app big components app module providers motivation use case changing behavior app builds cases please tell us environment windows xampp angular version browser language typescript node aot issues", "num": "13559", "d": "12/2016"}, {"title": "control ex lazy load third party js component", "body": "submitting check one x current behavior right seems way using router lazy load third party js according angulario expected behavior lazy load third party js inside one component child word use hook control js loading minimal reproduction problem instructions motivation use case changing behavior need wait heavy party js please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13557", "d": "12/2016"}, {"title": "make postmessagebus api public api", "body": "submitting feature request make api public current behavior something like current time expected behavior motivation use case changing behavior wan na use api box third party library angular version angularplatformwebworker language typescript", "num": "13555", "d": "12/2016"}, {"title": "http missed authentication header cors preflight actual second request", "body": "submitting check one x current behavior http missed authentication header actual second request cors preflight session please see expected behavior http insert authorization header actual post message headers success options round cors preflight scenario minimal reproduction problem instructions set restful service cors capacity send request authentication bear token message try extract authentication header received message server side motivation use case changing behavior please tell us environment emulated ubuntu lts linux angular version browser chromium built ubuntu language typescript node aot issues", "num": "13554", "d": "12/2016"}, {"title": "find templateurl debug build aot enabled app", "body": "submitting check one x current behavior aot enabled site templateurl fails download debug build expected behavior templateurl download without issue minimal reproduction problem instructions following docs setting aot enabled app made templateurl relative path set moduleid component set id module adding windowmodule indexhtml page loading component site tried load template url templateurl see plunker motivation use case changing behavior need debug application please tell us environment dev environment windows using angular version browser language typescript xx node aot issues", "num": "13553", "d": "12/2016"}, {"title": "tour heroes example broken", "body": "submitting check one x current behavior live example linked broken expected behavior live example work minimal reproduction problem instructions try ff chrome motivation use case changing behavior please tell us environment ff amp chrome angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview ff chrome language typescript xx node aot issues", "num": "13552", "d": "12/2016"}, {"title": "datepipe format behaves incorrectly", "body": "submitting check one x current behavior datepipe format mdy hh mm works well chrome edge produces result like pm pm expected behavior produces result like pm edge minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13551", "d": "12/2016"}, {"title": "dispatchevent nt trigger ngmodel changes", "body": "submitting check one x current behavior function nt trigger changes following output karma trimmed debug backtrace expected behavior pass test minimal reproduction problem instructions code reviewformcomponentts typescript import input output component viewchild eventemitter angularcore import ngform angularforms import product appmodel import abstractform formerrorlist productreviewmessage appcore component selector lproductshowreviewform templateurl reviewformcomponenthtml export class productshowreviewformcomponent extends abstractform input public model productreviewmessage input public product product output public formsubmit new eventemitter input public set errors errors formerrorlist thisapplyformerrorlist errors viewchild form public set ngform ngform ngform thisform ngformform public doformsubmit thisformsubmitemit reviewformcomponenthtml html lproductshowreviewformcontent lproductshowreviewformrating lproductshowreviewformsubmit const testbed require angularcoretesting const platformbrowserdynamictesting browserdynamictestingmodule require angularplatformbrowserdynamictesting testbedinittestenvironment browserdynamictestingmodule platformbrowserdynamictesting reviewformcomponentspects typescript import debugelement angularcore import angularplatformbrowser import dispatchevent angularplatformbrowsertestingbrowserutil import componentfixture testbed async fakeasync angularcoretesting import product appmodel import sharedmodule appshared import productreviewmessage appcore import productshowreviewformcomponent reviewformcomponent function newevent eventname string bubbles false cancelable false let evt documentcreateevent customevent must customevent evtinitcustomevent eventname bubbles cancelable null return evt describe productshowreviewformcomponent gt let fixture componentfixture let comp productshowreviewformcomponent let submitspy jasminespy let contentinput htmltextareaelement let ratinginput htmlinputelement let form debugelement let product product let message productreviewmessage beforeeach async gt testbed configuretestingmodule imports sharedmodule declarations productshowreviewformcomponent compilecomponents beforeeach gt fixture testbedcreatecomponent productshowreviewformcomponent comp fixturecomponentinstance submitspy spyon compformsubmit emit modify message fakeasync gt const expectedcontent longest content const expectedrating motivation use case changing behavior need test form please tell us environment os osx el capitan v package manager npm angular version browser chrome mac os x language typescript node aot issues", "num": "13550", "d": "12/2016"}, {"title": "electron hostlistener runs outside ngzone", "body": "submitting check one x current behavior hostlistener runs outside ngzone trigger change detection piece code worked fine broke updated tests multiple components single hostlistener runs ngzone expected behavior hostlistener always runs inside ngzone minimal reproduction problem instructions could reproduce problem plunkr version think may related electron looking commits tried reverting changes locally angular bundle commit working expected motivation use case changing behavior please tell us environment windows angular version browser electron app windows language typescript node aot issues", "num": "13548", "d": "12/2016"}, {"title": "feat core support macrosyntax attributes name", "body": "given express", "num": "13547", "d": "12/2016"}, {"title": "allow input setter respond without change", "body": "submitting check one x current behavior child component input setter currently total change value call setter normally typescript setter always gets called expected behavior setter called every time bound property set changes minimal reproduction problem instructions see motivation use case changing behavior know discussed child component detects changes arguing ngonchange already designed need setter arises way child component property directly set seamless need import sub child class decorate viewchild becomes impractical couple times page case use pagination child component depend total set explicitly reset pager total whatever reason change pager get reset explicitly reset total null getting process might change problem easy fix imagine complex scenarios rising please tell us environment vscode insider windows iisnode angular version browser language node aot issues", "num": "13539", "d": "12/2016"}, {"title": "way disable animations transitions without dynamic states", "body": "disable transition gt allow transition gt would nice support function determine transition use dynamically", "num": "13537", "d": "12/2016"}, {"title": "routerlinkactive directive apply children", "body": "submitting check one x current behavior routerlinkactive directive routerlink ancestor causes class applied ancestor routerlink minimal reproduction problem instructions something like maybe forgot login motivation use case changing behavior list hyperlinks would rather set routerlinkactive routerlinkactiveoptions one would like flag apply class defined ancestor class appropriate routerlink", "num": "13533", "d": "12/2016"}, {"title": "rollup fails rxjssubject imported angularcoresrcfacadeasyncjs", "body": "submitting check one x current behavior angulario describes using rollup treeshaking bundling rollup fails message supposedly solution use option nt make difference rollupconfigjs looks like import rollup rollup import noderesolve rolluppluginnoderesolve import commonjs rollupplugincommonjs import uglify rolluppluginuglify export default entry aotclientaotjs dest distbuildjs output single application bundle sourcemap false format iife plugins noderesolve jsnext true module true commonjs include nodemodulesrxjs namedexports nodemodulesrxjssubjectjs subject uglify expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment os windows ide vscode package manager npm angular version browser language node aot issues", "num": "13532", "d": "12/2016"}, {"title": "canactivate guard redirects initial load router render component", "body": "submitting check one x current behavior canactivate guard navigates root path initial load router render root component guard navigates elsewhere eg correctly renders component route expected behavior navigating root behavior navigating route always render minimal reproduction problem instructions see motivation use case changing behavior used work angular want redirect root path user unauthenticated application angular version seen browser language typescript", "num": "13530", "d": "12/2016"}, {"title": "ngc compilation work icu messages", "body": "submitting check one x current behavior aot works simple translations seem work icu expressions successfully follow process static translations expressions errors expected behavior work icu expressions minimal reproduction problem instructions component import component angularcore component selector redboxdashboard template export class dashboardcomponent wolves addwolfs thiswolves run generate base xlf describing many wolves wolf count duplicate base xlf make new language specific version wolves plural ning\u00fan lobo un lobo dos lobos una horda de lobos describing many wolves wolf count language specific version contains icu expression compiling language specific version using get error error missing translation message error wolves plural wolves one wolf two wolves wolf pack wolv dashboardcomponent translationbundleget usershelgevotdevelopmentarchitectureredboxangularnodemodules visitortranslatemessage usershelgevotdevelopmentarchitectureredboxangularnodemodules visitorvisitelement usershelgevotdevelopmentarchitectureredboxangularnodemodules elementvisit usershelgevotdevelopmentarchitectureredboxangularnodemodules usershelgevotdevelopmentarchitectureredboxangularnodemodules arrayforeach native visitorvisitelement usershelgevotdevelopmentarchitectureredboxangularnodemodules elementvisit usershelgevotdevelopmentarchitectureredboxangularnodemodules visitormerge usershelgevotdevelopmentarchitectureredboxangularnodemodules mergetranslations usershelgevotdevelopmentarchitectureredboxangularnodemodules compilation failed ids two files match compiler complaining second id defined anywhere motivation use case changing behavior angular version language typescript node aot issues", "num": "13527", "d": "12/2016"}, {"title": "template parse errors icu messages", "body": "submitting check one x current behavior using attribute expressions putting wrapping div around html fails template parser error message remove wrapping div works seems related expressions expected behavior allow wrapping div minimal reproduction problem instructions wrapper div added appcomponenthtml motivation use case changing behavior angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "13525", "d": "12/2016"}, {"title": "router nt handle two outlet changes time", "body": "submitting current behavior routes like route open able remove named outlet go clicking anchor like following nt work navigating away sidebar also going another route like link rendered expected behavior link rendered repro please tell us environment windows visual studio angular version nt work either browser language typescript", "num": "13523", "d": "12/2016"}, {"title": "aot compile success bootstrap error browser", "body": "submitting check one x current behavior aot compile success also able load application fine upgrading aot compile fine application load browser application nothing seed app error browser error provider store noprovidererrorbaseerror constructor angular noprovidererrorabstractprovidererror constructor angular new noprovidererror angular reflectiveinjectorthrowornull angular reflectiveinjectorgetbykeydefault angular reflectiveinjectorgetbykey angular reflectiveinjectorget angular appmoduleinjectorcreateinternal angular appmoduleinjectorngmoduleinjectorcreate angular ngmodulefactorycreate angular eval angular objectoninvoke angular expected behavior aot compile fine application load fine minimal reproduction problem instructions sample repo latest code run following commands see error browser npm install npm run compile dev npm run prodserver remove latest commit upgrades run steps application runs fine motivation use case changing behavior please tell us environment mac npmyarn angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13521", "d": "12/2016"}, {"title": "unhandled promise rejection template parse errors", "body": "submitting check one x x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior using formbuilder component expected behavior build form provided fields minimal reproduction problem instructions code bottom used produces error motivation use case changing behavior create sign form please tell us environment os windows ide webstorm pm webpack angularcli project angular version browser chrome version firefox developer edition language typescript node aot issues error unhandled promise rejection template parse errors ca nt bind formgroup since nt known property form code component import component oninit inject angularcore import formbuilder formgroup validators angularforms component templateurl checkupcomponenthtml export class checkupcomponent implements oninit signupform formgroup constructor inject formbuilder fb formbuilder thissignupform fbgroup firstname lastname email avatar age hometown gender", "num": "13520", "d": "12/2016"}, {"title": "produces empty output typescript", "body": "submitting check one x current behavior running angular cli tool typescript resulting xlf file empty body expected behavior find one entry case typescript minimal reproduction problem instructions expected behavior typescript current behavior typescript motivation use case changing behavior want use angular latest version typescript please tell us environment win git bash npm angular version browser none language typescript node aot issues", "num": "13519", "d": "12/2016"}, {"title": "zonejs rxjs dependencies causing issues working party libraries", "body": "submitting check one x current behavior dependency issues caused zonejs rxjs packagejson file npm log see basically install rxjs rxjs zonejs zonejs zonejs able fulfill every dependency every library use libraries would depend libraries guess see point expected behavior maybe directly connected also nt find instructions net solve issue also solution go parties asking upgrade ask party maintainer gone away code would work fine upgraded zone rxjs everybody upgraded angular moves forward whole round begins beginning could imagine zonejs rxjs nt dependencies nt know possible party libraries case documentation strongly highlight angular version", "num": "13518", "d": "12/2016"}, {"title": "inject parent directivecomponent directive placed inside template", "body": "submitting check one x current behavior directivecomponent inside template inject directivecomponent template materialized currently button directive bellow plnkr inject table component ie component template defined expected behavior able inject cell component template materialized multiple times minimal reproduction problem instructions expect able inject cell directive service provided inside button directive motivation use case changing behavior use case template materialized multiple times different context directivescomponents inside template able infer context based template materialized concrete scenario builtin command directives use inside databound component directives infer context item index data item etc hope make sense thank cooperation", "num": "13517", "d": "12/2016"}, {"title": "template reference conditionally rendered elementdirective set", "body": "submitting check one x current behavior using template reference variable defined elementdirective applied throws exception value set seems using component property set via possible workaround minimal reproduction problem instructions angular version", "num": "13516", "d": "12/2016"}, {"title": "real angular comment template", "body": "submitting check one x current behavior thierry templier said template use html comment title lenename id leneid description lenedescription expected behavior real angular comment template minimal reproduction problem instructions real angular comment motivation use case changing behavior lene null get exception please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13514", "d": "12/2016"}, {"title": "many null check", "body": "submitting check one x current behavior template check ngif obj null first execute objanotherobj null objanotherobjproperty expected behavior need check obj null objanotherobj null situation nt give exeption empty minimal reproduction problem instructions motivation use case changing behavior way component template influence another exception independent please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13513", "d": "12/2016"}, {"title": "angularcoresrcapplicationref createplatformfactory typo parentplaformfactory", "body": "think problem want make better angularcoresrcapplicationref createplatformfactory function may parameter parentplaformfactory typo", "num": "13512", "d": "12/2016"}, {"title": "angular sass issue", "body": "submitting check one x current behavior got following error message running npm install module parse failed ldmodalstylescss unexpected character may need appropriate loader handle file type line code ldmodalstylescss file import stylesldcomponentsmodalsscss expected behavior compile sass correctly already add sass loader project minimal reproduction problem instructions motivation use case changing behavior need able use sass angular project using webpack please tell us environment windows webstorm npm webpack angular version browser chrome xx language typescript node aot issues", "num": "13510", "d": "12/2016"}, {"title": "relative path templateurl nt work ts", "body": "submitting check one x current behavior systemjs setting extension app ts instead using js templateurl relative path work making request absolute path expected behavior query path component located minimal reproduction problem instructions systemjs setting packages app main maints defaultextension ts transpiler typescript component templateurl tries query html relative path sorry plunker hangs try plunker due failure retrieve html motivation use case changing behavior maintain aot well jit compilation together case one perfers use ts extension one wants keep templateurl relative path please tell us environment node npm angular version angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx node aot issues", "num": "13508", "d": "12/2016"}, {"title": "browser updated dom updated", "body": "submitting x bug report gt search github similar issue pr submitting feature request current behavior angular update browser runs instance label input bind attribute label id attribute input via passed input browser recognize two linked angular let browser know updated dom example markup example component example component markup result clicking label apply focus input also seen labels radio buttons checkboxes clicking label produce desired default browser behavior interacting associated element result clicking labels related inputs interact assigned element expected behavior default browser behavior maintained associated form elements via minimal reproduction problem instructions motivation use case changing behavior able use angular create dynamic components without reproduce default browser behavior form elements using linking work expected given dynamic value please tell us environment windows vscode nodejs angular generator angular version browser language node aot issues", "num": "13504", "d": "12/2016"}, {"title": "response http error condition blank chrome", "body": "submitting check one x current behavior chrome cancels web request response angular propagating blank firefox ie response properties populated information expected behavior response object properties populated information browsers minimal reproduction problem instructions browse angular application login page via https enter credentials post login via https server respond location header http chrome cancel redirect error handler catch response none properties inside error populated except type motivation use case changing behavior behavior consistent browsers user respond errors accordingly please tell us environment chrome seen problem versions well angular app inside spring boot application deployed tc server angular version browser chrome canceled xhr requests blank response chrome good response ff cut url property privacy", "num": "13501", "d": "12/2016"}, {"title": "routesloadchildren adds children root route", "body": "submitting check one x current behavior using loadchildren load child routes existing tree routes route definition createcampaignwizardmodule routes added children campaigncreate route eg also added root route eq annoying path default path redirects instead homepage different module expected behavior child routes added campaigncreate root route minimal reproduction problem instructions see provided configuration motivation use case changing behavior please tell us environment npm version angularcli node os linux ubuntu angular version browser language typescript node aot issues node", "num": "13499", "d": "12/2016"}, {"title": "change log show breaking feature major version change", "body": "submitting check one x see angular using semver means bump version breaking changes change log list items causes break listing breaking change would nice little easier make timeeffort estimate update code", "num": "13498", "d": "12/2016"}, {"title": "formcontrol allways invalid set disabled true", "body": "submitting check one x current behavior write custom validator form test validator works fine set formcontrol disabled true formcontrol allways invalid test fails expected behavior expect disable enabled formcontrol effect validation logic minimal reproduction problem instructions see typescript test code reproduce case typescript import formcontrol formsmodule validatorfn abstractcontrol validators angularforms import testbed async angularcoretesting import sharedmodule primengcomponentscommonshared import browsermodule angularplatformbrowser import isnullorundefined util function isemptyinputvalue value return isnullorundefined value typeof value string amp amp valuelength export class validatorsutil static valuebetween min number max number validatorfn return control abstractcontrol key string gt consolelog controlvalue isemptyinputvalue controlvalue return null nt validate empty null undefined values let value number try value parsefloat controlvalue catch error return key true return value lt min value gt max min min max max value null describe util validatorsutils gt beforeeach async gt testbedconfiguretestingmodule imports sharedmodule browsermodule formsmodule method valuebetween val null min max invalid big gt let formcontrol formcontrol new formcontrol null validatorsutilvaluebetween expect formcontrolvalid tobetruthy formcontroldisable form invalid disable expect formcontrolvalid tobetruthy method valuebetween val null min max invalid big gt let formcontrol formcontrol new formcontrol null validatorsutilvaluebetween expect formcontrolvalid tobetruthy run gt let formcontrol formcontrol new formcontrol hello validatorsrequired expect formcontrolvalid tobetruthy run gt let formcontrol formcontrol new formcontrol hello validatorsrequired expect formcontrolvalid tobetruthy formcontroldisable form invalid disable expect formcontrolvalid tobetruthy motivation use case changing behavior think behaviour form side effect please tell us environment angular version browser version language typescript node aot issues", "num": "13497", "d": "12/2016"}, {"title": "attaching dynamic templates component", "body": "submitting feature request current behavior component selector selectorname templateurl url template file expected behavior able get class metadata able update templateurl key annotations motivation use case changing behavior able dynamically pass templateurl one component initialized using different templateurl help developer flexibly use component using template please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13495", "d": "12/2016"}, {"title": "way found test functionality component document specified completely huge gapes test cases", "body": "way found test functionality component uses angularcore viewcontainerref elementref componentfactoryresolver etc document specified completely huge gapes test cases please provide proper documentation declare angular component tested regards vasuneet arya", "num": "13494", "d": "12/2016"}, {"title": "testcase imports defined", "body": "directive import directive elementref input angularcore directive selector myhighlight export class highlightdirective constructor el elementref elnativeelementstylebackgroundcolor yellow test case change license header choose license headers project properties change template file choose tools templates open template editor import testbed async inject componentfixture angularcoretesting import highlightdirective widgetscontactwidgethighlightdirective import contactstate widgetscontactwidgetcontactstatecomponent import angularplatformbrowser import debugelement angularcore import noerrorsschema angularcore let comp contactstate let fixture componentfixture let de debugelement let el htmlelement beforeeach gt fixture testbedconfiguretestingmodule declarations contactstate highlightdirective schemas noerrorsschema createcomponent contactstate testbedcompilecomponents fixturedetectchanges initial binding yellow gt const de fixturedebugelementquery bycss p const bgcolor denativeelementstylebackgroundcolor expect bgcolor tobe yellow current behavior writing test case uses elementref componentfactoryresolver viewcontainerref import angular module running test case get error elements defined concern assign value imports expected behavior expected behaviour value import assigned soon run test case angular version", "num": "13493", "d": "12/2016"}, {"title": "suggestion generate smaller chunkjs", "body": "little suggestion generate smaller chunkjs run command ng build aot generate chunkjs file dist folder open file file size search matching text thisrenderercreatetext file matches also see long variable name method name generate short name create convenient method like current behavior generate big chunkjs file webpack tools expected behavior generate smaller chunkjs motivation use case changing behavior make smaller chunkjs mobile application angular version browser chrome language typescript node aot issues", "num": "13492", "d": "12/2016"}, {"title": "first routing module fails user navigates hash changing", "body": "submitting check one x current behavior upgrading faced following problem router navigates previous page user follow new page clicking alink reproduced pages presents modules module loaded browser everything fine ok angular versions less specific case navigation alink portal application integrated another complex webapplication navigation usually initiated notangular app within clicking menu links expected behavior navigation initiated address changes completed successfully minimal reproduction problem instructions plunker click button page page loaded url correct click link page page loaded url wrong motivation use case changing behavior na please tell us environment ubuntu npm webpack node angular version browser language", "num": "13491", "d": "12/2016"}, {"title": "using without container element", "body": "submitting check one x current behavior implementation expected behavior use containerless control flow syntax based comment tags minimal reproduction problem instructions motivation use case changing behavior item always appears want make item presentabsent dynamically please tell us environment angular version browser language node aot issues", "num": "13490", "d": "12/2016"}, {"title": "lazy module loading call module constructor twice", "body": "submitting check one x current behavior using lazy module loading module constructor initialized twice expected behavior need normal constructor behavior minimal reproduction problem instructions exemple dashboardmodule constructor called twice motivation use case changing behavior please tell us environment linux mint webstorm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13489", "d": "12/2016"}, {"title": "different among three method codes looks", "body": "vsavkin vicb tbosch different among three method codes importing exporting codes typescript import platformbrowserdynamic angularplatformbrowserdynamic import locationstrategy hashlocationstrategy angularcommon javascript decorators import platformbrowserdynamic angularplatformbrowserdynamic import locationstrategy hashlocationstrategy angularcommon javascript import platformbrowserdynamic angularplatformbrowserdynamic import locationstrategy hashlocationstrategy angularcommon", "num": "13488", "d": "12/2016"}, {"title": "aot ngc generates incorrect import path", "body": "submitting current behavior project structure small representation nodemodules folder inside src want split serverclient files using packagejson browser field nt want mix global nodemodules folder ngc generates incorrect relative import path builds ngfactoryts files find something like resolves path fails resolving nodemodules src incorrect expected behavior generate paths correctly minimal reproduction problem instructions fork minimal changes required reproduce bug explained create nodemodulestest folder inside src create packagejson indexts files base component import component module use component another component run open see something like path nt exist motivation use case changing behavior able compile please tell us environment angular version browser na language typescript node aot issues", "num": "13487", "d": "12/2016"}, {"title": "http observables fire request calls return", "body": "submitting check one x current behavior major issue http simultaneous ajax requests angular homepage various services fire http calls rest api among availability call takes particularly long time finish seconds first page load see simultaneous ajax calls issue however refresh page rebootstrap angular even reroute homepage router calls stack waiting previous call return attaching rest api project verified location requests even sent browser availability returns expected behavior expected behavior http requests would fire independently initial page load subsequent pagesrefreshes bump sequentialonly ajax calls minimal reproduction problem instructions anything particularly special services return observables various components subscribe web project implement couple components call api ngoninit preferably one api method noticeably long components call methods reliable speed simplicity trigger one faster calls button press observe behavior first load site longer api method processed server initiate requests see functioning fine refresh tab reroute homepage repeat previous test see calls lock longer call completes motivation use case changing behavior although painfully noticeable slow api calls presumably would affect calls throughout site significant performance could saved concurrent ajax calls worked resources expected behavior please tell us environment angular version browser language typescript", "num": "13485", "d": "12/2016"}, {"title": "compiler dropin replacement using awesometypescriptloader", "body": "current behavior awesometypescriptloader throws error ts entry point expected behavior would like able treat drop replacement using awesometypescriptloader would expect ts code compile exactly exception supporting using aot templates minimal reproduction problem instructions motivation use case changing behavior support aot compilation using custom webpack based build process open issue awesometypescriptloader issue solely responsibility repository please close issue please tell us environment mac os x el capitan angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx node aot issues", "num": "13484", "d": "12/2016"}, {"title": "hashlocationstrategy possibility define position basehref", "body": "submitting check one x current behavior using hashlocationstrategy routing providing basehref via appbasehref basehref always placed hash eg expected behavior would nice define position basehref placed allow eg url minimal reproduction problem instructions start new app subfolder eg examplecomsubdir enable hashlocationstrategy providing custom appbasehref using route basehref always appended hash instead host eg examplecom lead error refreshing sharing url import ngmodule angularcore import routermodule routes angularrouter import appbasehref angularcommon const approutes routes ngmodule imports routermoduleforroot approutes usehash true providers provide appbasehref usevalue windowlocationpathname export class appmodule motivation use case changing behavior use angular combination cms components placed dynamically user cms routing using another way angular needing possible place rewrite rules urls dynamically generated cms use hashlocationstrategy angular routing combination url gets always rewritten refreshing page would lead fixed issue implementation hashlocationstrategy would nice see core configurable option simple code import injectable angularcore import hashlocationstrategy angularcommon injectable export class customlocationstrategy extends hashlocationstrategy prepareexternalurl internal string string const url thisgetbasehref internal return url please tell us environment angular version browser language", "num": "13482", "d": "12/2016"}, {"title": "static members validated errors strictmetadata mode", "body": "check errors report members functions static members", "num": "13481", "d": "12/2016"}, {"title": "reference nonexported class noopanimationdriver", "body": "igorminar vicb block release today metadata built master see right display error detected building animationdriver noopanimationdriver exported file even exported barrel also manual checkup errors performed make sure metadata clean", "num": "13479", "d": "12/2016"}, {"title": "focus event fired running webworker", "body": "submitting check one x current behavior executing within browsermodule event fire fine working workerappmodule event fire focus ever blur event fires fine expected behavior would expect someevent controller called input gets focus minimal reproduction problem instructions executing within browsermodule event fire fine working workerappmodule event fire focus ever blur event fires fine motivation use case changing behavior running angular app workerappmodule webworker please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13476", "d": "12/2016"}, {"title": "faster aot build time dev mode", "body": "current behavior running aot compilercli project module component takes around seconds desired behavior build runs faster eg lt second minimal reproduction problem instructions use app aot compilation cookbook motivation use case changing behavior trying make dev build prod build angular app similar possible minimize complexity build minimize error prod nt happen dev would really help simplify build process aot compiler could run fast enough run whenever ts file saved could used dev prod please tell us environment os windows node angular", "num": "13475", "d": "12/2016"}, {"title": "collector support", "body": "currently collector support use case ts class myclass function myfunc export myclass myfunc see pr failing test todo", "num": "13473", "d": "12/2016"}, {"title": "errors compilation files systemjsconfigjs thinks", "body": "submitting check one x current behavior couple different occasions add something root module ends getting compiled location dist folder misalignment systemconfigjs says able find files question systemconfigjs thinks first time happened socketio time happening testing folder containing compiled mockbackendjs file solved socketio error issue manually adjusting location listed systemconfigjs file happened trying figure resolve issue universal sense known bug something resolve error getting console environment os x el capitan visual studio code zonejs angular version contents systemjsconfigjs file packagejson looks like", "num": "13468", "d": "12/2016"}, {"title": "also need deep copy", "body": "submitting check one x current behavior performanence angular use shallow copy object expected behavior good sometimes strange behavior also need deep copy convenience minimal reproduction problem instructions add flag switch situation default keep shallow copy motivation use case changing behavior easy lazy please tell us environment angular version browser language node aot issues", "num": "13467", "d": "12/2016"}, {"title": "dynamic render open close html element need", "body": "submitting check one x current behavior use case think common notice div class row added closed code get exeption closing html element expected behavior find way something like motivation use case changing behavior common use case please tell us environment angular version browser language node aot issues", "num": "13466", "d": "12/2016"}, {"title": "interpolation nt work new line characters ie n r", "body": "submitting check one x current behavior input output minimal reproduction problem instructions angular version looks like regression", "num": "13465", "d": "12/2016"}, {"title": "error systemjs strict mode code lt upgrading", "body": "submitting check one x current behavior upgraded try run page getting error chrome error systemjs strict mode code functions declared top level immediately within another function syntaxerror strict mode code functions declared top level immediately within another function eval native zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue g mutationobserveraexportsk evaluating error loading angularcompiler originalstack error systemjs strict mode code functions zoneawarestack error systemjs strict mode code functions originalerr syntaxerror strict mode code functions declared top level immediately within stack message systemjs strict mode code functions tried even fresh version cloning quickstart one website similar error works expected behavior expecting work well chrome minimal reproduction problem instructions got files official repo npm install went well normal npm start problems works ie please tell us environment angular version browser chrome language typescript node aot issues", "num": "13462", "d": "12/2016"}, {"title": "formcontrolsetvalidators getvalidators", "body": "submitting check one x current behavior abstractcontrol basic validators like required maxlength reactiveform via typescript formbuilder basic validators added custom validator dynamically change validation strategy based dropdown value currently using method inside another component abstractcontrol included via main problem overwrites existing validators example app component app template zip component input control abstractcontrol thiscontrolsetvalidators redundant formbuilder validatorsrequired validatorsmaxlength custom validation based dropdown value via valuechange detection validatezipfn countrycode expected behavior stay flexible nt want overwrite validators code would illustrate behavior method app component app template zip component input control abstractcontrol let listofallvalidationrules thiscontrolgetvalidators push validatezipfn countrycode thiscontrolsetvalidators listofallvalidationrules motivation use case changing behavior flexible dynamic validation angular version browser language typescript", "num": "13461", "d": "12/2016"}, {"title": "please provide overrideprovider function testbed provider associated component", "body": "explanation feature desired example want able override urlloadersvc another mock case unique requirement something like testbedoverrideprovider would helpful test suite service serviceconstructor dependencies right statement describe beforeeach", "num": "13460", "d": "12/2016"}, {"title": "aot ngc compile brakes angularrouter added", "body": "hi probably bug created minimal project aot added angularrouter appmodulets ngc compile brakes error message packagejson tsconfigaotjs project found thank advance best wishes peter", "num": "13457", "d": "12/2016"}, {"title": "slice remove images availble multiple images single array seprated comma", "body": "multiple images single array like want use first image anyone tell trick", "num": "13456", "d": "12/2016"}, {"title": "candeactivate guard current component instance null navigate child outlet parent root component", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior candeactivate guard current component instance null navigate child outlet parent root component expected behavior able get current instance component irrespective route leaving minimal reproduction problem instructions take router add inside add routeroutlet add sub routes add candeactivate guards sub routes try navigate one sub route another sub route able access current instance inside guard implements candeactivate try navigate route current instance null motivation use case changing behavior please tell us environment visual studio code windows env angular version browser language typescript xx node aot issues", "num": "13455", "d": "12/2016"}, {"title": "document projectablenodes parameter createcomponent", "body": "submitting check one x current behavior documentation describe parameter used might come createcomponent function expected behavior documentation describes parameters createcomponent used might come minimal reproduction problem instructions see current documentation motivation use case changing behavior help developers understand use api please tell us environment na angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues na", "num": "13453", "d": "12/2016"}, {"title": "dependency injection fails using factory deps", "body": "submitting check one x use array array form deps const car new opaquetoken car providers provide car usevalue name bmv provide product usefactory x gt x name optional deps car new optional try angular nt understand valid type others except see", "num": "13452", "d": "12/2016"}, {"title": "ca nt get route params lazy module within canactivate guard", "body": "submitting check one x current behavior application uses lazy module way export const routes routes path component welcomecomponent path items loadchildren appmodulesitemsitemsmodule itemsmodule export const approutingmodule modulewithproviders routermoduleforroot routes within would like use guard one subroutes const routes routes path slug component itemcomponent canactivate itemfetchguard export const coveragesroutingmodule modulewithproviders routermoduleforchild routes guard needs get parameter fetch data injectable export class coveragefetchguard implements canactivate constructor private service itemservice private route activatedroutesnapshot private ngredux ngredux canactivate slug undefined const slug thisrouteparams slug return thisservicegetitem slug map item gt thisngreduxdispatch itemsuccessfullyfetched item return true catch error gt thisngreduxdispatch itemfetchfailed error return observableof false expected behavior expect route parameter route snapshot activate guard called minimal reproduction problem instructions motivation use case changing behavior please tell us environment using angular cli universal version universalcli angularcli node os linux angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version language typescript xx typescript node aot issues", "num": "13451", "d": "12/2016"}, {"title": "ngc fails compile typescript", "body": "submitting check one x current behavior run ts installed get following error expected behavior compile throw error minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "13450", "d": "12/2016"}, {"title": "ca nt clearinterval", "body": "submitting error console current behavior make video progress bar expected behavior ca nt clearinterval minimal reproduction problem instructions ts play thisinterval setinterval gt clearinterval thisinterval pause clearinterval thisinterval stop thistest clearinterval thisinterval motivation use case changing behavior setinterval clearinterval please tell us environment studio code angularcli angular version v browser language typescript node aot issues", "num": "13449", "d": "12/2016"}, {"title": "feature investigate priority based idle rendering", "body": "aerotwist posted interesting blog post yesterday discussing frameworks typically nt yield initial boot effectively using requestidlecallback break initial render see angular covered initial blog post sent pr add us investigate could beneficialpossible us obviously use different model preact etc possible could see improvements also important use right metrics evaluating may sort implementation might slightly slower raw ms win locking main thread startup especially lowpower devices take consideration aerotwist input would welcome implementation app deployed convienence frameworkboottestfirebaseappcomangularnossrhtml wpt run emulated motog", "num": "13448", "d": "12/2016"}, {"title": "injectable decorator js", "body": "hello writting lib js know apply injectable decorator class injectable projects ts submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13447", "d": "12/2016"}, {"title": "feat domrenderer allow partial dom hydration prerendered content", "body": "recapping discussion alxhub tbosch mostly tobias design submitting check one x current behavior typically page prerendered universal angular application bootstraps browser blows away prerendered content replaces newly created nodes dom tree prerendered often similar identical dom tree created front end issues make difficult angular take existing dom tree otherwise referred dom hydration actual handoff destroying old dom showing new dom pretty fast seamless necessarily major ux issue becomes problematic cases like ads load iframes pretty much display ads ad iframes prerendered business requirement many publishers iframe gets moved dom iframe refresh causes ad networks suspect abuse publishers trying sneak ad views use alreadyrendered dom one issue asynchronicityconditional dom ie tree client may rendered condition truthy whereas prerendered version may full tree async data resolved another challenge text nodes able selected css selectors would mean renderer would rely child ordering order associate prerendered nodes clientrendered nodes always correct similar challenge goes elements order must assumed identical renderer would also responsible cleaning prerendered orphan nodes ie items prerendered rendered client additional nodes would need removed prevent unexpected behavior proposal optional explicit partial dom hydration allow setting userspecified attribute elements associate prerendered version clientrendered version renderer comes node ca nt associate existing node blow away node recreate developer would responsible setting ids elements care example typescript import hydratedomconfig ngmodule angularcore ngmodule providers provide hydratedomconfig usevalue hydrate true default false backwards compat attribute pid default id component design allows traverse dom tree match elements branch starting root ca nt go deeper point would blow away descendants recreate text nodes would destroyed recreated design well node nt set attribute nt expect rendering would userperceivable discrepancies prerendered clientrendered dom concern even without feature cc pxwise tbosch amp alxhub please feel free add anything missed misrepresented", "num": "13446", "d": "12/2016"}, {"title": "issues hidden bring back nghidengshow directive", "body": "submitting check one x current behavior expected bind attribute place angular easily overridden css often libraries bootstrap results lot confusing situations nt work check plunker bootstrap hidden expected behavior since already handles quite bit cssrelated abstraction perhaps could take care issue yeah know developers could probably add one line global css ensure anything attribute extra step could confuse people may work due styles overridden angular already great css scoping seems logical manage showinghiding dom elements better", "num": "13443", "d": "12/2016"}, {"title": "docs missing extended classes", "body": "current behavior see missing information class response extends body expected behavior say extends body also contain link body docs minimal reproduction problem instructions see url motivation use case changing behavior incomplete documentation please tell us environment irrelevant angular version latest browser language irrelevant node aot issues irrelevant", "num": "13442", "d": "12/2016"}, {"title": "reactiveforms disable individual input radio elements group programmatically", "body": "submitting check one x current behavior based form input like disable individual radio options radio form control current disable method allows disable radios group none setting disabled attribute individual radio input allowed expected behavior access disableenable individual radio input elements minimal reproduction problem instructions import component ngmodule angularcore import browsermodule angularplatformbrowser import formbuilder formgroup formsmodule reactiveformsmodule angularforms component selector myapp template export class app myform formgroup constructor private formbuilder formbuilder thismyform formbuildergroup myradio thismyformvaluechangessubscribe something gt consolelog thismyformvaluemyradio disableradio void thismyformcontrolsmyradiodisable like disable radio ngmodule imports browsermodule formsmodule reactiveformsmodule declarations app bootstrap app export class appmodule motivation use case changing behavior based form input like disable individual radio options form please tell us environment angular version browser language typescript node aot issues", "num": "13439", "d": "12/2016"}, {"title": "emptyerror elements sequence", "body": "submitting check one x current behavior upgrading getting error looking explanation causes error see something related router nt know see navigationerror event thrown reason console error expected behavior error would nice explanation causes error would greatly appreciated minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "13438", "d": "12/2016"}, {"title": "aot add support extending expressions classes", "body": "submitting feature request current behavior currently aot nt allow functions within annotation though rule applies classes seems meaning following fully compatible typescript code copied typescript new section nt allowed aot javascript class thinga getgreeting return hello interface greeterconstructor new thinga function getgreeterbase greeterconstructor return thinga class test extends getgreeterbase sayhello consolelog thisgetgreeting area manifested use immutablejses class something aot really nt like throws error expected behavior sure design though based response got gitter would seem due fact feature request bug report would like know design chance altered influence decisions make going forwards comes ngrxstore immutablejs etc motivation use case changing behavior main reason would like changed would bring aot line regular typescript compiler understand functions directly inside annotation nt something would want find weird aot parts typescript standard nt clearly documented anywhere far tell angular version language typescript xx typescript node aot issues", "num": "13436", "d": "12/2016"}, {"title": "consider issuing warning language service event method type", "body": "submitting check one x current behavior user types instead errors warnings shown expected behavior obvious problem would nice language service pointed motivation use case changing behavior common mistake language service help user avoid", "num": "13435", "d": "12/2016"}, {"title": "rxjs", "body": "submitting check one x rxjs finally currently version wondering could get updated packagejson", "num": "13434", "d": "12/2016"}, {"title": "tour heroes failed load appcomponentcss", "body": "submitting current behavior follow along tour heroes guide get failed load appcomponentcss expected behavior nt bugs getting started guide minimal reproduction problem instructions make module without moduleid ca nt use styleurls without full relative path motivation use case changing behavior see expected behaviour basically tour heroes tutorial updated set moduleid styleurls set please tell us environment warming", "num": "13433", "d": "12/2016"}, {"title": "ca nt import formsmodule reactiveformsmodule", "body": "submitting check one x current behavior trying import inject form modules import formsmodule reactiveformsmodule angularforms ngmodule imports universalmodule must first import automatically imports browsermodule httpmodule jsonpmodule formsmodule reactiveformsmodule approutingmodule campaignmodule sharedmodule declarations appcomponent navmenucomponent homecomponent bootstrap appcomponent export class appmodule error message expected behavior working minimal reproduction problem instructions motivation use case changing behavior please tell us environment nodejs angular version browser language typescript node aot issues", "num": "13432", "d": "12/2016"}, {"title": "dynamic hosting bindings based inputs", "body": "submitting check one x current behavior need ability dynamic assign use case allowing developer pass custom css class attach host lets think modal might want upload modal look slightly different new user modal allow developer pass custom css class via input currently clean way apply end code like input cssclass string hostbinding class get cssclasses string let clz drawer clz return clz expected behavior way accomplish decorator spit balling maybe something like minimal reproduction problem instructions na motivation use case changing behavior dynamic css applying via decorators please tell us environment na angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues node", "num": "13429", "d": "12/2016"}, {"title": "hostbinding honored multiple depths applied", "body": "submitting check one x current behavior use multiple describe root attribute well nested attributes nested ones honored example input cssclass string hostbinding class get cssclasses string let clz drawer clz return clz hostbinding classleftdrawer get isleft boolean return thisdirection left hostbinding classbottomdrawer get isbottom boolean return thisdirection bottom hostbinding class order achieve dynamic css class name assignment bindings honor bindings expected behavior would take properties order depth apply order depth thus enabling work motivation use case changing behavior dynamic css class assignment please tell us environment mac npm vscode angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues node", "num": "13428", "d": "12/2016"}, {"title": "nt work multiple element selectors angularmaterail sidenav", "body": "submitting check one x current behavior get error downgrading component selects multiple element names expected behavior following work receive following error angularmaterial uses multiple element selectors nt see ca nt work selecting multiple element names minimal reproduction problem instructions motivation use case changing behavior using angularmaterial sidenav mixed app process upgrading beta angularmaterial changed selector sidenav please tell us environment macos npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome latest macos language typescript xx typescript gt node aot issues", "num": "13427", "d": "12/2016"}, {"title": "changedetectorrefdetectchanges nt work detached instance", "body": "current behavior calling detached instance effect version expected behavior according documentation force change detection cycle even detached change detector minimal reproduction problem instructions documentation example nt work version work simple demo manually incremented counter works nt work regression maybe commit change reflected documentation yet", "num": "13426", "d": "12/2016"}, {"title": "merging search parameters key url", "body": "submitting check one x current behavior navigate route multiple search parameters key merged one last appearing parameters value ie would result angular loaded expected behavior navigating result angular loaded minimal reproduction problem instructions steps reproduce implement routing navigate route one search parameter key plnkr issue open full screen click thing says click motivation use case changing behavior rest point using filteringfacetting adds multiple search parameter keys type select one filterfacet current behaviour select one filter per type merge everything key together feels unnecessary merge please tell us environment osx el capitan locally brackets webpack ng live development server also reproduced plunkr angular version tested angular locally able reproduce looked fixes nt think fix implemented browser reproduce chrome ff safari language", "num": "13425", "d": "12/2016"}, {"title": "getting typeerror read property originalerror undefined errorhandlerfindoriginalerror", "body": "motivation use case changing behavior please tell us environment linux mint node angular version getting following error idea might causing throw error typeerror read property originalerror undefined errorhandlerfindoriginalerror homeswmdevelopmentdwbicupnodemodules errorhandlerhandleerror homeswmdevelopmentdwbicupnodemodules objectnext homeswmdevelopmentdwbicupnodemodules safesubscriberschedulerfn next homeswmdevelopmentdwbicupnodemodules safesubscribertryorunsub safesubscribernext subscribernext subscribernext eventemittersubjectnext eventemitteremit homeswmdevelopmentdwbicupnodemodules", "num": "13424", "d": "12/2016"}, {"title": "running ngserve getting following issues", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues microsoft windows version c microsoft corporation rights reserved c userspadmavathi cd downloads c userspadmavathidownloads cd phototypedevelopment c userspadmavathidownloadsphototypedevelopment cd web c userspadmavathidownloadsphototypedevelopmentweb cd dashboard c userspadmavathidownloadsphototypedevelopmentwebdashboard ng init installing overwrite editorconfig yes overwrite overwrite readmemd yes overwrite overwrite srcappappcomponenthtml skip overwrite srcappappcomponentspects skip overwrite srcappappcomponentts skip overwrite srcappappmodulets skip overwrite srcenvironmentsenvironmentprodts skip overwrite srcenvironmentsenvironmentts skip overwrite srcindexhtml skip overwrite srcmaints skip overwrite srctestts skip overwrite srctsconfigjson yes overwrite overwrite srctypingsdts yes overwrite overwrite angularclijson yes overwrite overwrite yes overwrite overwrite gitignore yes overwrite overwrite karmaconfjs yes overwrite overwrite packagejson yes overwrite overwrite tslintjson yes overwrite overwrite editorconfig overwrite readmemd create srcappappcomponentcss skip srcappappcomponenthtml skip srcappappcomponentspects skip srcappappcomponentts skip srcappappmodulets identical srcappindexts skip srcenvironmentsenvironmentprodts skip srcenvironmentsenvironmentts skip srcindexhtml skip srcmaints identical srcpolyfillsts create srcstylescss skip srctestts overwrite srctsconfigjson overwrite srctypingsdts overwrite angularclijson identical overwrite identical overwrite gitignore overwrite karmaconfjs overwrite packagejson identical protractorconfjs overwrite tslintjson installing packages tooling via npm cterminate batch job yn c userspadmavathidownloadsphototypedevelopmentwebdashboard cd c userspadmavathidownloadsphototypedevelopmentweb cd c gt cd users c users cd padmavathi c userspadmavathi cd downloads c userspadmavathidownloads cd phototypedevelopment c userspadmavathidownloadsphototypedevelopment cd web c userspadmavathidownloadsphototypedevelopmentweb cd dashboard c userspadmavathidownloadsphototypedevelopmentwebdashboard ng init installing overwrite editorconfig skip overwrite readmemd skip overwrite srcappappcomponenthtml skip overwrite srcappappcomponentspects skip overwrite srcappappcomponentts skip overwrite srcappappmodulets skip overwrite srcenvironmentsenvironmentprodts skip overwrite srcenvironmentsenvironmentts skip overwrite srcindexhtml skip overwrite srcmaints skip overwrite srctestts skip overwrite srctsconfigjson skip overwrite srctypingsdts skip overwrite angularclijson skip overwrite skip overwrite gitignore skip overwrite karmaconfjs skip overwrite packagejson skip overwrite tslintjson skip skip editorconfig skip readmemd create srcappappcomponentcss skip srcappappcomponenthtml skip srcappappcomponentspects skip srcappappcomponentts skip srcappappmodulets identical srcappindexts skip srcenvironmentsenvironmentprodts skip srcenvironmentsenvironmentts skip srcindexhtml skip srcmaints identical srcpolyfillsts create srcstylescss skip srctestts skip srctsconfigjson skip srctypingsdts skip angularclijson identical skip identical skip gitignore skip karmaconfjs skip packagejson identical protractorconfjs skip tslintjson installing packages tooling via npm installed packages tooling via npm c userspadmavathidownloadsphototypedevelopmentwebdashboard npm start dashboard start c userspadmavathidownloadsphototypedevelopmentweb dashboard ng serve ca nt resolve module angularcoresrcdiopaquetoken c userspadmavathi downloadsphototypedevelopmentwebdashboardsrcindexts read property parse undefined typeerror read property parse undefined reflectorhostnormalizeasseturl c userspadmavathidownloadsphototype developmentwebdashboardnodemodules angularcompilerclisrcreflectorhost reflectorhostfinddeclaration c userspadmavathidownloadsphototypede velopmentwebdashboardnodemodules angularcompilerclisrcreflectorhostjs staticreflectorinitializeconversionmap c userspadmavathidownloadsph ototypedevelopmentwebdashboardnodemodules angularcompilerclisrcstatic new staticreflector c userspadmavathidownloadsphototypedevelopment webdashboardnodemodules aotpluginsetupoptions c userspadmavathidownloadsphototypedevelopm entwebdashboardnodemodules new aotplugin c userspadmavathidownloadsphototypedevelopmentwebda shboardnodemodules objectexportsgetwebpacknonaotconfigpartial c userspadmavathidownloa dsphototypedevelopmentwebdashboardnodemodulesangularclimodelswebpackb new ngcliwebpackconfig c userspadmavathidownloadsphototypedevelopme classrun c userspadmavathidownloadsphototypedevelopmentwebdashbo c userspadmavathidownloadsphototypedevelopmentwebdashboardnodemo processtickcallback npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejs nodemodulesnpmbinnpmclijs start npm err node npm err npm npm err code elifecycle npm err dashboard start npm err exit status npm err npm err failed dashboard start script ng serve npm err make sure latest version nodejs npm installed npm err likely problem dashboard package npm err npm npm err tell author fails system npm err ng serve npm err get information open issue project npm err npm bugs dashboard npm err nt available get info via npm err npm owner ls dashboard npm err likely additional logging output npm err please include following file support request npm err c userspadmavathidownloadsphototypedevelopmentwebdashboardn pmdebuglog c userspadmavathidownloadsphototypedevelopmentwebdashboard npm start dashboard start c userspadmavathidownloadsphototypedevelopmentweb dashboard ng serve read property length undefined typeerror read property length undefined createsourcefile c userspadmavathidownloadsphototypedevelopmentweb parsesourcefileworker c userspadmavathidownloadsphototypedevelopmen objectparsesourcefile c userspadmavathidownloadsphototypedevelopme objectcreatesourcefile c userspadmavathidownloadsphototypedevelopm new typescriptfilerefactor c userspadmavathidownloadsphototypedevel opmentwebdashboardnodemodules objectresolveentrymodulefrommain c userspadmavathidownloadsphototyp edevelopmentwebdashboardnodemodules ngtoolswebpacksrcentryresolverjs aotpluginsetupoptions c userspadmavathidownloadsphototypedevelopm entwebdashboardnodemodules new aotplugin c userspadmavathidownloadsphototypedevelopmentwebda shboardnodemodules objectexportsgetwebpacknonaotconfigpartial c userspadmavathidownloa dsphototypedevelopmentwebdashboardnodemodulesangularclimodelswebpackb new ngcliwebpackconfig c userspadmavathidownloadsphototypedevelopme classrun c userspadmavathidownloadsphototypedevelopmentwebdashbo c userspadmavathidownloadsphototypedevelopmentwebdashboardnodemo processtickcallback npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejs nodemodulesnpmbinnpmclijs start npm err node npm err npm npm err code elifecycle npm err dashboard start npm err exit status npm err npm err failed dashboard start script ng serve npm err make sure latest version nodejs npm installed npm err likely problem dashboard package npm err npm npm err tell author fails system npm err ng serve npm err get information open issue project npm err npm bugs dashboard npm err nt available get info via npm err npm owner ls dashboard npm err likely additional logging output npm err please include following file support request npm err c userspadmavathidownloadsphototypedevelopmentwebdashboardn pmdebuglog c userspadmavathidownloadsphototypedevelopmentwebdashboard", "num": "13423", "d": "12/2016"}, {"title": "decimalpipe aot misses locale parameter", "body": "submitting check one x current behavior compiling code aot internally uses things fail found file misses locale parameter although compiled flag expected behavior sure expect thing work least complain missing parameters minimal reproduction problem instructions everything working upgrading things started fail motivation use case changing behavior please tell us environment macos vs code angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "13422", "d": "12/2016"}, {"title": "compatible version found", "body": "compatible version found", "num": "13421", "d": "12/2016"}, {"title": "di system ca nt resolve parameters", "body": "submitting check one x current behavior di fails certain condition fail depends order error browser console error systemjs error ca nt resolve parameters bservice expected behavior consistent di behaviour obviously minimal reproduction problem instructions two services let name dependency dependency also method gets instance via simplified case reproduces bug demo also change order statements works fine motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "13419", "d": "12/2016"}, {"title": "unit test lazy module", "body": "current behavior lazy module path run successfully real browser see browser download asynchronously throw error unit test find module expected behavior able test asynchronously lazy module path unit test environment normal synchronously path minimal reproduction problem instructions make lazy module run browser successfully write unit test test lazy path nt work motivation use case changing behavior hope test lazy module path easily normal sync path environment os macos sierra ide webstorm angularcli tools angular version browser chrome language typescript node aot issues", "num": "13418", "d": "12/2016"}, {"title": "reference class name methods", "body": "submitting check one x current behavior reference class name within class methods ngc compilation fails expected behavior continue compile minimal reproduction problem instructions reference class name one methods try compile ngc created minimal repro repo motivation use case changing behavior constrained reference class methods directly please tell us environment windows node typescript ngc angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13417", "d": "12/2016"}, {"title": "named routes", "body": "submitting check one x current behavior gone documentation routes could nt see name interface routes expected behavior would great feature would name route would need use full url http request inside application want point route application could help change url something like laravel routes motivation use case changing behavior help everyone ease development easy refactoring routes codes please tell us environment operating system ide angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13416", "d": "12/2016"}, {"title": "language service reports unknown primitive", "body": "submitting check one x current behavior template reports unknown primitive expected behavior able use without diagnostic error", "num": "13412", "d": "12/2016"}, {"title": "async operator template shorthand", "body": "submitting check one x current behavior render observable one write mymodelobservablemember async leads quite unreadable inefficient expressions like ngif mymodelobservablemember async amp amp mymodelobservablemember async someproperty async yes say array object property illustration ngfor let foo mymodelobservablemember async expected behavior introduce shortened syntax async operator ngif mymodelobservablemember someproperty yes ngfor let foo mymodelobservablemember minimal reproduction problem instructions motivation use case changing behavior shorter expressions templates operate observables lot created ogm framework allows seamless browsing graph database inherently hops models realized observable rather direct references believe approach become popular please tell us environment latest linux netbeans npmyarn jboss eap angular version browser language node aot issues", "num": "13410", "d": "12/2016"}, {"title": "npm error windows", "body": "quickstart folder installation stops", "num": "13409", "d": "12/2016"}, {"title": "ngoutletcontext causes template reinitialize data changes", "body": "submitting check one x minimal reproduction problem instructions component thisloadchartsdata subscribe data gt current behavior data passed ngoutletcontext changes template nested components reinstantiated expected behavior expected behavior template reinstantiated similar template used example behave reinstantiate motivation use case changing behavior nested component ability control redraw rather forced simply use case would like redraw charts transition please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13407", "d": "12/2016"}, {"title": "language service reports error subtypes string", "body": "submitting check one x current behavior html reports expected operants similar type expected behavior diagnostic produced subtype", "num": "13403", "d": "12/2016"}, {"title": "test failures windows mostly relating languageservice", "body": "submitting check one x current behavior running tests windows failures refer directly path separator issues others relate tests read files file system may also related path separator used expected behavior failures minimal reproduction problem instructions get latest gitbash motivation use case changing behavior broken please tell us environment windows gitbash angular version master node aot issues", "num": "13402", "d": "12/2016"}, {"title": "cordova ios typeerror attempted assign readonly property", "body": "submitting check one x current behavior open app iphone ios emulator see exception console app nt respond change everything works fine also issue seems fixed switching expected behavior exception minimal reproduction problem instructions please tell us environment xcode iphone ios emulator angular version browser ios uiwebview language typescript node aot issues", "num": "13401", "d": "12/2016"}, {"title": "proposal asyncvalidator interface", "body": "submitting check one x current behavior nt defined interface ngasyncvalidators provider implement expected behavior exist asyncvalidator interface similar validator interface motivation use case changing behavior compiler editor call misspellings please tell us environment angular version language typescript", "num": "13398", "d": "12/2016"}, {"title": "aot compilation ngfactory file generated", "body": "hi guys trying solve issue hours nothing bit tired could help please project right use aot compilation production everything ready start issue generating ngfactory fiels ngfactory files generated js files tsconfigaotjson command execute ngc nodemodulesbinngc p tsconfigaotjson output files print screen angular pacakages typescript could please help", "num": "13397", "d": "12/2016"}, {"title": "router able detect pushstate changes", "body": "submitting current behavior one navigates domaincommypath loads iframe iframe url changed using pushstate eg trying navigate mypath trigger router activated route still mypath expected behavior mechanism exist force router reevaluate current location one solution would navigationextras relativeto accept locationhref besides activatedroute motivation use case changing behavior angular version angular router version language typescript", "num": "13396", "d": "12/2016"}, {"title": "height based animation within ngcontent using ngif causes error", "body": "submitting check one x current behavior using height based animation within ngcontent ngcontent uses ngif get error notsupportederror failed execute animate element partial keyframes supported move ngif template error goes away expected behavior able use ngif ngcontent within template use height based animations without error minimal reproduction problem instructions plunk error plunk hack get working moved ngif directive ngcontent accordionpanelcomponent template appts please tell us environment angular version gt browser language node aot issues", "num": "13395", "d": "12/2016"}, {"title": "jit compiler error provided array objects containing property", "body": "submitting current behavior provide array objects component module objects declare name property type jit compilation fails upgrade angular version search changes code seems broke behaviour experiencing expected behavior providing array objects name property possible minimal reproduction problem instructions visit see error stack trace developer console motivation use case changing behavior expect property break jit compilation please tell us environment operating system windows angular version browser language typescript", "num": "13394", "d": "12/2016"}, {"title": "ngif child template element", "body": "submitting check one x current behavior component template inside template ngif something going wrong ngif demo problem expected behavior shoud shown test ngif shown first one one working correctly minimal reproduction problem instructions angular working correctly upgrading happens node version npm webpack awesometypescriptloader beta", "num": "13392", "d": "12/2016"}, {"title": "location provide option get number backforward steps", "body": "submitting check one x current behavior currently possible check back forward step calling back first page user enters leads reloading page expected behavior please provide option get number possible back forward steps least method see possible back forward steps motivation use case changing behavior back step could useful many use cases example form cancel button could lead previously visited page without ability see actually previously visited page useful could option developer could check possible back step otherwise could navigate predefined route", "num": "13391", "d": "12/2016"}, {"title": "aot compilation include app code", "body": "submitting check one x current behavior running aot compiler compiles angular dependencies app code errors encountered expected behavior ngfactories created app code well angular dependencies minimal reproduction problem instructions clone download sample run motivation use case changing behavior app needs precompiled well angular dependencies please tell us environment windows node npm angular version angular browser na language node aot issues", "num": "13389", "d": "12/2016"}, {"title": "proposal ngfor throw error null passed trackby function", "body": "submitting current behavior currently pass expression resolves ngfor trackby function throw user tell user nothing example syntax examples stackoverflow show people using angular mislead people thinking working specifically used since throw return null due safe navigation operator expected behavior throw error passed trackby function minimal reproduction problem instructions motivation use case changing behavior people might mislead unknowing think using trackby actually track item value angular version related", "num": "13388", "d": "12/2016"}, {"title": "proposal inheriting components merge decorators key level", "body": "submitting check one x x feature request previously posted suggestion inheritance thread followup proposal deemed scope hence issue got closed current behavior recently gained component inheritance following semantics use last decorator kind eg component expected behavior motivation use case changing behavior feels like might make sense merge metadata bykey basis likely need new decorator specify new selector anyway point longer transfer eg illustrate existing solution decorator inheritance take care keybasis merging forgive use including array concatenation followup proposal ts annotationsts let require lodash import component directive pipe angularcore extendible component decorator extended merge items let mergemetadata metadataclass gt function annotation return function target function let parenttarget objectgetprototypeof targetprototype constructor let parentanns reflectgetmetadata annotations parenttarget size parentanns let parentann parentanns objectkeys parentann foreach key gt isnil parentann key isnil annotation key isarray parentann key annotation key parentann key concat annotation key else isobject parentann key amp amp isobject annotation key objectassign annotation key parentann key else annotation key parentann key else annotation key parentann key let metadata new metadataclass annotation reflectdefinemetadata annotations metadata target export let extcomp mergemetadata component export let extdir mergemetadata directive export let extpipe mergemetadata pipe component file import decorate components rather stated concern easier merge override strategy override merge strategy ca nt really override prop merge strategy redefine props whole want merge override strategy need redefine property want merge example interpretation pr behavior override parent decorator exactly needed good want property different redo say property want merge example suppose right though assumes exported parent decorator properties using angular wo nt otherwise expose reuse adjusted form alternative behavior naive merge essentially override perproperty basis wanted parent decorator properties good wanted change property good override wanted remove one override wanted override array go ahead wanted add array problem since unless manually exported original reuse wo nt available afaict approach yet bring much controversy far", "num": "13387", "d": "12/2016"}, {"title": "custom decorator nt work aot compilation", "body": "submitting check one x current behavior decorator called authenticated calls method decorating current user authenticated otherwise loginsignup modal opened instead expected behavior compile app aot flag using angularcli custom decorator work expected continue work aot compilation minimal reproduction problem instructions code decorator export interface authenticatedservices authservice authservice export function authenticated target authenticatedservices propertykey string descriptor typedpropertydescriptor let originalmethod descriptorvalue component selector upvote templateurl upvotecomponenthtml export class awesomeupvotecomponent implements authenticatedservices constructor public authservice authservice please tell us environment angular version browser chromium language typescript node aot issues", "num": "13386", "d": "12/2016"}, {"title": "router double dots work properly navigating", "body": "submitting check one x current behavior route like navigating tries navigate expected behavior navigate minimal reproduction problem instructions click navigate click go back error message says motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview", "num": "13385", "d": "12/2016"}, {"title": "add generic return types dependency injector", "body": "submitting check one x current behavior use di methods get services return type expected behavior would like define return type using generics motivation use case changing behavior provides autocompletion ide helps provide typescript compiler type hinting please tell us environment windows webstorm npm apache angular version browser chrome language typescript", "num": "13381", "d": "12/2016"}, {"title": "location subscribe returns object instead real interface", "body": "submitting check one x x feature request current behavior locationsubscribe onnext method gets expected behavior locationsubscribe sends popstate object described steps reproduce call loactionsubscribe callback get object instead real ts class motivation use case changing behavior subscribing would like please tell us environment windows vscode angular version browser language", "num": "13378", "d": "12/2016"}, {"title": "ngmodeloptions template component makes error angular", "body": "following code written typescript using component well angular nt problem issue updated angular makes error consider error typeerror read property getoption undefined wrong", "num": "13376", "d": "12/2016"}, {"title": "binding routerlinkactiveisactive template throws exception", "body": "submitting check one x current behavior throws exception querylist nt set isactive method checked expected behavior able bind isactive property minimal reproduction problem instructions refer code snippet motivation use case changing behavior please tell us environment angular version browser language", "num": "13374", "d": "12/2016"}, {"title": "route redirectto function class", "body": "submitting check one x motivation use case changing behavior currently definition stringin order provide higher flexibility could also object like advantages related control route parameters queryparams even dynamic redirection language typescript", "num": "13373", "d": "12/2016"}, {"title": "first radio input ngfor disabled", "body": "submitting check one x current behavior form creates radio inputs loop want disabled however first radio input disabled gets disabled html tag get ngreflectisdisabled true attribute expected behavior every radio input get disabled tag case minimal reproduction problem instructions html choicedescription plnkr demo angular version browser chrome language thanks advance", "num": "13370", "d": "12/2016"}, {"title": "routerlinkactive problems child parent active", "body": "bug report gt search github similar issue pr submitting x feature request current behavior use routing childroutes mainmenue open directly childroute possible mainmenue shown active select childroute childnavigation menue mainmenue active expected behavior possible add options routerlinkactive like minimal reproduction problem instructions see menue plkr please resize viewidth select main menue item logviewer see logsuche shown childmenue getting active select logsuche directly child menue getting active mainmenue item logviewer also select logmonitor monitor active mainmenue items active motivation use case changing behavior think standard behavior parent child routes active flags please tell us environment angular version language typescript", "num": "13366", "d": "12/2016"}, {"title": "automatic change detection broken routing using electron menu", "body": "current behavior routing components via electron menu call automatic change detection broken upgrading angular expected behavior continue detect changes like angular minimal reproduction problem instructions see git repository readme please tell us environment windows vscode angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome embedded electron language typescript xx typescript", "num": "13363", "d": "12/2016"}, {"title": "proposal service document head management support title meta link style etc route changes", "body": "submitting check one x expected behavior proposed syntax motivation use case changing behavior make document head management declarative simple related", "num": "13361", "d": "12/2016"}, {"title": "aot ngc optimization options file size", "body": "submitting check one x bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior component sandboxcomponentts import component oninit angularcore import phonesservice phone servicesphonesservice component templateurl sandboxcomponenthtml export class sandboxcomponent implements oninit phones phone constructor private phsrv phonesservice ngoninit thisphones thisphsrvgetphones sandboxcomponenthtml sandbox testing list phones brand model os phoneid phonebrand phonemodel phoneos tsconfigaotjs compileroptions target module moduleresolution node sourcemap false emitdecoratormetadata true experimentaldecorators true removecomments true noimplicitany true suppressimplicitanyindexerrors true skiplibcheck true lib dom files angularcompileroptions gendir aot skipmetadataemit true compileonsave false buildonsave false npm run ngc go aotappsandbox folder sandboxcomponentngfactoryjs bytes var extends amp amp thisextends function b var p b bhasownproperty p p b p function thisconstructor dprototype b null objectcreate b prototype bprototype new import import angularcoresrclinkerview import angularcoresrclinkerviewutils import angularcoresrcmetadataview import angularcoresrclinkerviewtype import angularcoresrcchangedetectionconstants import angularcoresrclinkercomponentfactory import import angularcoresrclinkerviewcontainer import nodemodules angularcommonsrcdirectivesngforngfactory import angularcoresrclinkertemplateref import angularcoresrcchangedetectiondiffersiterablediffers import angularcommonsrcdirectivesngfor import angularcoresrcchangedetectionchangedetectionutil export var wrappersandboxcomponent function function wrappersandboxcomponent thischanged false thiscontext new wrappersandboxcomponentprototypengondetach function view componentview el wrappersandboxcomponentprototypengondestroy function wrappersandboxcomponentprototypengdocheck function view el throwonchange var changed thischanged thischanged false throwonchange viewnumberofchecks thiscontextngoninit return changed wrappersandboxcomponentprototypecheckhost function view componentview el throwonchange wrappersandboxcomponentprototypehandleevent function eventname event var result true return result wrappersandboxcomponentprototypesubscribe function view eventhandler thiseventhandler eventhandler return wrappersandboxcomponent var rendertypesandboxcomponenthost var function super extends super function viewutils parentview parentindex parentelement supercall rendertypesandboxcomponenthost viewutils parentview parentindex parentelement function rootselector thisrenderer ngcomponent rootselector null new thisviewutils new wrappersandboxcomponent thisinjectorget thisparentindex thisinit thisrendererdirectrenderer null null return new function token requestnodeindex notfoundresult token amp amp requestnodeindex return return notfoundresult function throwonchange throwonchange throwonchange function function cb ctx cb ctx return export var sandboxcomponentngfactory new ngcomponent var stylessandboxcomponent var rendertypesandboxcomponent stylessandboxcomponent export var function super extends super function viewutils parentview parentindex parentelement supercall rendertypesandboxcomponent viewutils parentview parentindex parentelement function rootselector var parentrendernode thisrenderercreateviewroot thisparentelement thisrenderer parentrendernode div new class panel paneldefault null thisrenderercreatetext n null thisrenderer div new class panelheading null thisrenderercreatetext sandbox testing null thisrenderercreatetext n null thisrenderer div new class panelbody null thisrenderercreatetext n null thisrenderer null thisrenderercreatetext list phones null thisrenderercreatetext n null thisrenderer table new class table tablebordered tablehover null thisrenderercreatetext n null thisrenderer thead null thisrenderercreatetext n null thisrenderer tr null thisrenderercreatetext n null thisrenderer th null thisrenderercreatetext null thisrenderercreatetext n null thisrenderer th null thisrenderercreatetext brand null thisrenderercreatetext n null thisrenderer th null thisrenderercreatetext model null thisrenderercreatetext n null thisrenderer th null thisrenderercreatetext os null thisrenderercreatetext n null thisrenderercreatetext n null thisrenderercreatetext n null thisrenderer tbody null thisrenderercreatetext n null thisrenderercreatetemplateanchor null new new new thisparentviewinjectorget thisparentindex thisref thisrenderercreatetext n null thisrenderercreatetext n null thisrenderercreatetext n null thisrenderercreatetext n null thisinit null thisrendererdirectrenderer null null return null function token requestnodeindex notfoundresult token amp amp requestnodeindex return token amp amp requestnodeindex return return notfoundresult function throwonchange var thiscontextphones throwonchange false throwonchange throwonchange function function nodeindex nodeindex return new thisviewutils return null return var function super extends super function viewutils parentview parentindex parentelement declaredviewcontainer supercall rendertypesandboxcomponent viewutils parentview parentindex parentelement declaredviewcontainer function rootselector thisrenderer null tr null thisrenderercreatetext n null thisrenderer td null thisrenderercreatetext null thisrenderercreatetext n null thisrenderer td null thisrenderercreatetext null thisrenderercreatetext n null thisrenderer td null thisrenderercreatetext null thisrenderercreatetext n null thisrenderer td null thisrenderercreatetext null thisrenderercreatetext n null thisinit thisrendererdirectrenderer null null return null function throwonchange var thiscontext implicitid throwonchange thisrenderersettext var thiscontext implicitbrand throwonchange thisrenderersettext var thiscontext implicitmodel throwonchange thisrenderersettext var thiscontext implicitos throwonchange thisrenderersettext function cb ctx cb ctx return works fine commented template like sandbox testing anylist phones brandmodelos phoneid phonebrand phonemodel phoneos recompile project get less file size sandboxcomponentngfactoryjs bytes less var extends amp amp thisextends function b var p b bhasownproperty p p b p function thisconstructor dprototype b null objectcreate b prototype bprototype new import import angularcoresrclinkerview import angularcoresrclinkerviewutils import angularcoresrcmetadataview import angularcoresrclinkerviewtype import angularcoresrcchangedetectionconstants import angularcoresrclinkercomponentfactory import import angularcoresrclinkerviewcontainer import nodemodules angularcommonsrcdirectivesngforngfactory import angularcoresrclinkertemplateref import angularcoresrcchangedetectiondiffersiterablediffers import angularcommonsrcdirectivesngfor import angularcoresrcchangedetectionchangedetectionutil export var wrappersandboxcomponent function function wrappersandboxcomponent thischanged false thiscontext new wrappersandboxcomponentprototypengondetach function view componentview el wrappersandboxcomponentprototypengondestroy function wrappersandboxcomponentprototypengdocheck function view el throwonchange var changed thischanged thischanged false throwonchange viewnumberofchecks thiscontextngoninit return changed wrappersandboxcomponentprototypecheckhost function view componentview el throwonchange wrappersandboxcomponentprototypehandleevent function eventname event var result true return result wrappersandboxcomponentprototypesubscribe function view eventhandler thiseventhandler eventhandler return wrappersandboxcomponent var rendertypesandboxcomponenthost var function super extends super function viewutils parentview parentindex parentelement supercall rendertypesandboxcomponenthost viewutils parentview parentindex parentelement function rootselector thisrenderer ngcomponent rootselector null new thisviewutils new wrappersandboxcomponent thisinjectorget thisparentindex thisinit thisrendererdirectrenderer null null return new function token requestnodeindex notfoundresult token amp amp requestnodeindex return return notfoundresult function throwonchange throwonchange throwonchange function function cb ctx cb ctx return export var sandboxcomponentngfactory new ngcomponent var stylessandboxcomponent var rendertypesandboxcomponent stylessandboxcomponent export var function super extends super function viewutils parentview parentindex parentelement supercall rendertypesandboxcomponent viewutils parentview parentindex parentelement function rootselector var parentrendernode thisrenderercreateviewroot thisparentelement thisrenderer parentrendernode div new class panel paneldefault null thisrenderer div new class panelheading null thisrenderercreatetext sandbox testing null thisrenderer div new class panelbody null thisrenderer null thisrenderercreatetext list phones null thisrenderer table new class table tablebordered tablehover null thisrenderer thead null thisrenderer tr null thisrenderer th null thisrenderercreatetext null thisrenderer th null thisrenderercreatetext brand null thisrenderer th null thisrenderercreatetext model null thisrenderer th null thisrenderercreatetext os null thisrenderer tbody null thisrenderercreatetemplateanchor null new new new thisparentviewinjectorget thisparentindex thisref thisinit null thisrendererdirectrenderer null null return null function token requestnodeindex notfoundresult token amp amp requestnodeindex return token amp amp requestnodeindex return return notfoundresult function throwonchange var thiscontextphones throwonchange false throwonchange throwonchange function function nodeindex nodeindex return new thisviewutils return null return var function super extends super function viewutils parentview parentindex parentelement declaredviewcontainer supercall rendertypesandboxcomponent viewutils parentview parentindex parentelement declaredviewcontainer function rootselector thisrenderer null tr null thisrenderer td null thisrenderercreatetext null thisrenderer td null thisrenderercreatetext null thisrenderer td null thisrenderercreatetext null thisrenderer td null thisrenderercreatetext null thisinit thisrendererdirectrenderer null null return null function throwonchange var thiscontext implicitid throwonchange thisrenderersettext var thiscontext implicitbrand throwonchange thisrenderersettext var thiscontext implicitmodel throwonchange thisrenderersettext var thiscontext implicitos throwonchange thisrenderersettext function cb ctx cb ctx return look function rootselector function rootselector see second assembly line like thisrenderercreatetext n null expected behavior add compilation option something like angularcompileroptions gendir aot skipmetadataemit true removeemptyspacebetweentags true minimal reproduction problem instructions motivation use case changing behavior project components mbytes appbundlejs want less file size please tell us environment win vscode angular version packagejson version description main wwwrootindexhtml author license isc scripts ngc ngc p tsconfigaotjson start concurrently webpackdevserver inline progress port dotnet run webpackdev set nodeenvdevelopment amp amp webpack webpackprod set nodeenvproduction amp amp webpack build npm run webpackdev buildproduction npm run ngc amp amp npm run webpackprod dependencies angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade angularinmemorywebapi corejs reflectmetadata rxjs zonejs angularplatformserver bootstrap ieshim devdependencies typesnode awesometypescriptloader cleanwebpackplugin concurrently copywebpackplugin cssloader fileloader htmlwebpackplugin jquery jsonloader nodesass rawloader rimraf sassloader sourcemaploader styleloader tshelpers typescript urlloader webpack webpackdevserver browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues npm node", "num": "13360", "d": "12/2016"}, {"title": "aot compilation fails emitting metadata outdir yet exist", "body": "submitting check one x current behavior setup tsconfigjson emit metadata specify compileonsave false compileroptions declaration true emitdecoratormetadata true experimentaldecorators true lib dom module commonjs moduleresolution node noemitonerror true noimplicitany false outdir dist rootdir src sourcemap true target inlinesources false files srcindexts angularcompileroptions gendir compiled skipmetadataemit false strictmetadataemit true delete outdir prior compiling eg npm scripts delete utility run build script expected behavior expect compiled js maps dts metadatajson created however output created compilation crashes inside function called without checking directory exists minimal reproduction problem instructions motivation use case changing behavior ability clean build please tell us environment os windows ide webstorm pm npm angular version angularcompiler angularcompilercli angularcore angularplatformserver browser na language typescript xx typescript node aot issues", "num": "13359", "d": "12/2016"}, {"title": "implement redbox feature development mode", "body": "problem sat number inperson training teaching sessions gitter newer developers whether js angular nt immediate reflex go check console app fails boot manifests questions like say loading nt work react native react recently implement feature called red box death app throws exception displays massive red box containing error effect surfaces errors console see example implement similar feature available devmode obviously something want ship production defaulton option new users would solve lot confusion perhaps implemented zones cli discuss", "num": "13358", "d": "12/2016"}, {"title": "associatemap dom instanceelementref component instance directives", "body": "submitting check one x current behavior far know way expected behavior easily map elementref parent component directive minimal reproduction problem instructions na motivation use case changing behavior example pseudo code accurate give idea need return component mousehandingdirective via callback event based complex user interaction calls back identified child simplicity say selected user get ways get done moving directive child sent event back parent assumes childs dumb becomes responsible handling user interactions identifying child performance reason may one modify party one associate id dom element search back callback directive however feel could easily map dom el containing parent component via framework please tell us environment na angular version latest browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues na", "num": "13357", "d": "12/2016"}, {"title": "directive attribute selectors dot notation support assignments maps", "body": "currently dot notations used selectors supported class prefix style prefix full property names fixed pr however requires following directivecomponent configuration full property mapped unique input variable desired dot notation optionally support property maps attributes selectors property chains update fields parent property eg would result would result considerations work selectors input property map full property name used instead property chain parsinginjection allows existing dot notations using work expected perhaps rules would exists use exist inject value throw parse error", "num": "13355", "d": "12/2016"}, {"title": "proposal async local storage module", "body": "submitting current behavior angular provide service local storage leaves user expected behavior angular provide module local storage motivation use case changing behavior angular mostly building apps nearly every app needs least local storage auth token user profile settings native apis mess localstorage simple synchronous efficient indexeddb asynchronous difficult use developers coherent angular observables uses old events callback hell trainer subject course need say students well angular framework take care important feature apps especially http useful quite new fetch api proposal already done module uses indexeddb efficient via simple api like localstorage wrapped rxjs observables coherent others angular modules already bundled like official angular module copied way angularhttp works already compatible aot even universal thing missing unit tests would need help start pr proposal accepted", "num": "13354", "d": "12/2016"}, {"title": "directives support selectors dot notations", "body": "currently single directive syntax supported consider layout directive following markup usage html work fine properties updated values let consider use multiple selectors nondefault used markup following throw errors issue consider scenario html html case expectation layout directive instance would created would assigned value direction variable column string instead get error note default valueinput would need defined markup would still used since default value assigned desired result work without errors html directive instance property value updated accordingly note issue requesting selectors dot notations update input property maps would separate discussion", "num": "13351", "d": "12/2016"}, {"title": "metadata extractor requires symbols thirdparty packages exported indexts", "body": "reproduction clone repo problem running error occurs ca nt resolve module autosize tmpaotindexerrornodemodules angularmaterialinputinputdts read property mdtextareaautosize undefined resolving symbol mdinputmodule tmpaotindexerrornodemodules angularmaterialinputinputdts resolving symbol mdinputmodule tmpaotindexerrornodemodules angularmaterialinputinputdts pertinent code must version exactly exist appropriate directory defined metadata add everything works expected info multiple reports several users material repo isolated single environment angular material node typescript cc tbosch chuckjaz", "num": "13350", "d": "12/2016"}, {"title": "animation keyframe offset gt crashes browser tab chrome memory", "body": "submitting check one x current behavior chrome tab crashes expected behavior crashing tab minimal reproduction problem instructions motivation use case changing behavior crashing tab would much appreciated please tell us environment windows chrome angular version clue browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx tested typescript see plunker node aot issues", "num": "13348", "d": "12/2016"}, {"title": "improve internals animationplayer", "body": "order player consumable outside code animationplayer needs following state values paused playing initialized destroyed start animations already destroyed apply current position properly even sub players documentation method subscribe steams", "num": "13347", "d": "12/2016"}, {"title": "compiler bundle breaks strict mode functions declared nested block strict mode", "body": "submitting check one x current behavior upgrading tests break following error message expected behavior upgrading tests continue run breaking change introduced minimal reproduction problem instructions inside starter compiled babel upgrade dependencies motivation use case changing behavior please tell us environment ubuntu node angular version browser phantomjs chrome language", "num": "13345", "d": "12/2016"}, {"title": "aot compilation failing", "body": "submitting check one x current behavior aot compilation fails error find module ie codegen fails foor code nodemodules specifically exception thrown tscwrappedsrcmainjs line programwithcodegen exception nativeerror expected behavior aot compiler codegen code modules well items nodemodules minimal reproduction problem instructions run aot tsconfig compileroptions allowsyntheticdefaultimports true target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true noimplicitany false removecomments true skiplibcheck true strictnullchecks true diagnostics true nounusedlocals false nounusedparameters false allowunreachablecode false outdir build typeroots nodemodules types types corejs exclude nodemodules config angularcompileroptions gendir srcngfactory skipmetadataemit true debug true motivation use case changing behavior aot compilation working upgrading please tell us environment node angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web language typescript xx typescript node aot issues compilercli tscwrapped", "num": "13344", "d": "12/2016"}, {"title": "windowaddeventlistener undefined ie right opening new window", "body": "submitting check one x current behavior issue giving lot headache past days one part application open new window using windowopen want attach code window beforeclose event windowopen returns reference window object ie access reference right opening window addeventlistener method undefined wrap short timeout usually ok feels hackish unreliable know something angular happens angular app current guess zonejs monkeypatches addeventlistener function taking time ie expected behavior minimal reproduction problem instructions check following plunker ie chrome observe difference motivation use case changing behavior able reliably access newly opened window please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview internet explorer language typescript xx ts node aot issues", "num": "13343", "d": "12/2016"}, {"title": "error build", "body": "submitting check one x current behaviour project previously building stopped building node packages reinstalled expected behaviour build normal minimal reproduction problem instructions created hello world project using angularcli show problem project found commit shows changes made package file use appveyor continuous integration successful build unsuccessful build seen motivation use case changing behaviour project longer building please tell us environment angularcli node os angular version browser language typescript node aot issues", "num": "13342", "d": "12/2016"}, {"title": "router longer navigates navigating current url", "body": "submitting check one x current behavior navigating current url route reloaded navigation events fired expected behavior router navigate route firing navigation events minimal reproduction problem instructions plunker click link current page note events nt fire motivation use case changing behavior specific case using router events enable scroll page back top navigationend event fired longer gets fired navigating current url someone home page scrolls bottom click home link nt scroll back top also running standard website page would reload circumstance used work absolutely fine since changed upgrading least would good able option initialising routes change behaviour angular version browser language node aot issues", "num": "13340", "d": "12/2016"}, {"title": "navigate ancestor route", "body": "submitting check one x angular version would like provide easy way component navigate upward known component named url imagine instance unread comments component clicked get popup link leading back start message container would nt want component know upward routing structure component might render arbitrarily deep urls imagine following url scheme message root unread badge might appear always want link go back andyou want know foobar relative link would nt work since url vary wish something like seems like pretty common reasonable scenario order solve could inject traverse structure recursively looking url patterns could look messages url segment navigate following one making route expecting id still seems leeky would prefer either named route name id property route guess could use property unclear docs howwhen use store something like route could search little unobvious recommended approach feature request clearer documentation method way search components upward current route leaf exactly available private recommended approach please make public way would incorporated directive would bonus guess", "num": "13339", "d": "12/2016"}, {"title": "multiple hostlistener decorator bug", "body": "submitting check one x current behavior using multiple hostlistener decorator function code first decorator listened function got latest decorator event middle decorator last decorator never trigger expected behavior fix bug minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser language typescript node aot issues", "num": "13337", "d": "12/2016"}, {"title": "open angular chrome", "body": "default system browser safari want angular app open chrome", "num": "13336", "d": "12/2016"}, {"title": "angular material bidirectional support", "body": "angular support bidirectional angular material tried mdbidirectionalprovider throws unknown provider error", "num": "13335", "d": "12/2016"}, {"title": "previous animation styles accidentally collected", "body": "recent changes animations run previous animation run styles always included next animation", "num": "13333", "d": "12/2016"}, {"title": "failed execute setattribute element ngreflectactiveobject valid attribute name", "body": "pass variable activeobject input option component current behavior exception uncaught promise error error baseobjectreleasespagecomponent class baseobjectreleasespagecomponent inline caused failed execute setattribute element ngreflectactiveobject valid attribute name error failed execute setattribute element ngreflectactiveobject valid attribute name domrenderersetelementattribute domrenderersetbindingdebuginfo debugdomrenderersetbindingdebuginfo setbindingdebuginfo arrayforeach native setbindingdebuginfoforchanges wrapperemailsubscriptionsblockcomponentngdocheck compiledtemplateproxyviewclassappviewdetectchanges os linux userdesktop smp mon sep utc gnulinux ng version angularcli node os linux angular version dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs rxjs systemjs tshelpers zonejs devdependencies angularcompilercli typesjasmine typesnode angularcli browser chrome", "num": "13332", "d": "12/2016"}, {"title": "aot angularfire broken", "body": "submitting check one x current behavior aot mode angularfire application inject service generated di code incorrect available level expected behavior works minimal reproduction problem instructions repro trivially reproduces issue builds app aot mode rollup root served aot code generated", "num": "13327", "d": "12/2016"}, {"title": "pipe errors diagnostic span wide", "body": "submitting check one x current behavior span reported pipe error includes entire interpolation node expected behavior span error offending span case minimal reproduction problem instructions date somedate dat motivation use case changing behavior narrower span would helpful look lot better", "num": "13326", "d": "12/2016"}, {"title": "ng build targetproduction basehref works chrome ie ff", "body": "submitting check one x current behavior works chrome blows ff ie see include expected behavior works updated docs steps taken ie ff regards sean", "num": "13323", "d": "12/2016"}, {"title": "proposal add pr label", "body": "example easier find issues contribution", "num": "13320", "d": "12/2016"}, {"title": "routerlink nt invoke ngoninit id route changes", "body": "submitting check one x current behavior trying use either routerlink anchor routernavigate component navigate different id within route ex resolver gets hit new id correct api endpoint hit address bar gets updated constructor ngoninit nt get hit expected behavior ngoninit would invoked new route data minimal reproduction problem instructions create one completely necessary first want see known issue motivation use case changing behavior unable link user one id another within route seems problematic please tell us environment windows vm using vscode running app angularcli command window angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13319", "d": "12/2016"}, {"title": "ca nt bind directive pseudoelement", "body": "submitting check one x current behavior creating directive selector anyclassname receive error ca nt bind xxxxxx since nt known property span directive works perfectly selector anyclassname expected behavior minimal reproduction problem instructions motivation use case changing behavior manipulating dom directive duty need manipulate pseudoelement would need directive able please tell us environment ubuntu sublime text express server angularcli stack angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome latest version language typescript xx typescript node aot issues", "num": "13318", "d": "12/2016"}, {"title": "release class extended another class component broke", "body": "current behavior class extends another class well prior today release import injectable angularcore import actions export const appstarttime appstarttime global application actions defined injectable export class appdbaction extends actions action another library via npm installed get error tried add fwdref main component luck expected behavior expect work prior release minimal reproduction problem instructions project please tell us environment windows angular version chrome os", "num": "13317", "d": "12/2016"}, {"title": "route redirectto preserving query params", "body": "submitting check one x current behavior prior release query parameters preserved configured route redirectto longer working expected breaking change prior behavior correct expected behavior query params preserved redirectto least allow configured minimal reproduction problem instructions path redirectto pathmatch full path component ngoninit void let params thisroutesnapshotqueryparams route activatedroute prior params passed url amp would available please tell us environment windows vs code angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome", "num": "13315", "d": "12/2016"}, {"title": "create property anonymoustype symbol", "body": "submitting check one x current behavior within ts file create simple injectable class symbol used injection reference breaks ts const myglobalservice symbol myglobalservice constructor inject myglobalservice private service error thrown pretty sure identifiername method compilemetadatats handle symbols expected behavior previously working try changing fix issue regardless breaking change noted minimal reproduction problem instructions minimal demo steps reproduce create create factory provider using returns object create component constructor using load app chrome motivation use case changing behavior using inject nonangular object understand recommended approach broken since update please tell us environment windows vs code npm dotnet core kestrel angular version browser chrome works fine ie language typescript node aot issues", "num": "13314", "d": "12/2016"}, {"title": "cookiexsrfstrategy send old values csrf token relogin app right received new cookie value", "body": "submitting check one x current behavior csrf token incorrect send old version token expected behavior inject csrftoken related header based current value token cookies minimal reproduction problem instructions application use cookiexsrfstrategy handle csrf token like steps reproduce login application response received cookies server request verify valid xcsrftoken request header logout application force clear cookies csrftoken manually programatically login application received new cookie server request verify sent old token example motivation use case changing behavior common feature please tell us environment mac os webstorm npm angular version browser chrome version language typescript", "num": "13313", "d": "12/2016"}, {"title": "createconditionalrootrenderer signature requires arguments ngfactory call provides", "body": "submitting check one x current behavior project using angular configured aot compilation tests etc work without problems update fails following error call expression file causing error import function recently changed require arguments instead see diff whatever generating ngfactory file nt correspondingly updated perhaps find specific code generating file probably nt know look based usage maybe changing invocation argument would fine maybe parameter simply optional dunno expected behavior emits error updating angular minimal reproduction problem instructions see description motivation use case changing behavior updating angular nt break aot please tell us environment windows vs code npm angular version browser electron language typescript node aot issues", "num": "13312", "d": "12/2016"}, {"title": "angular start safari instead shows strict mode error", "body": "submitting check one x current behavior using angular safari application start instead console shows following error message expected behavior expected application works starts according supported browser matrix plunkr shown works expected safari minimal reproduction problem instructions reproduce use template offered creating new issue fire safari take look console please tell us environment macos el capitan angular version browser safari error may related", "num": "13311", "d": "12/2016"}, {"title": "ngcompilerreflectorhost constructor exception launching app", "body": "submitting check one x current behavior create new app ng new newapp try start app ng serve exception trying start brand new project angular dependencies updated fwiw packagejson dependencies expected behavior app launches minimal reproduction problem instructions ng new newapp update package json latest angular ng serve please tell us environment os x angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues", "num": "13310", "d": "12/2016"}, {"title": "javascript globals working visual studio angular confirm window alert etc", "body": "import canactivate activatedroutesnapshot routerstatesnapshot angularrouter import observable rxjsrx export class counterpartsguard implements canactivate canactivate router activatedroutesnapshot state routerstatesnapshot observable boolean return confirm sure whenever using confirm window alert etc globals javascript visual studio find definedhow overcome issue note using community edition using angular mvc template", "num": "13309", "d": "12/2016"}, {"title": "ca nt resolve module directives formprovidersdts ng", "body": "submitting check one x current behavior using latest version angularcli angular using means start app causes webpack stop building due error expected behavior would run project would load port minimal reproduction problem instructions create new angularcli beta project using upgrade angular dependencies run fail quickly motivation use case changing behavior need take advantage zonejs rxjs upgrades made please tell us environment windows enterprise vs code npm node webpack dev server build angularcli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues na", "num": "13308", "d": "12/2016"}, {"title": "regression using static method amp analyzeforentrycomponents", "body": "submitting check one x current behavior develop library clients turn use compiling client code aot get following error error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function resolving symbol appmodule expected behavior error compiling minimal reproduction problem instructions version behaviour expected onwards seems regressed created stripped version problem taking library domain logic equation found library amp client packagejson fail compilation using equivalent packagejsonworking files dir work using library code appears problematic part motivation use case changing behavior used work believe still work read docs please tell us environment osx sierra intellij npm angular version tried angular still problem browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview compilation stage problem browsers language typescript xx typescript node aot issues", "num": "13307", "d": "12/2016"}, {"title": "since angurlar work anymore error error encountered resolving symbol values statically", "body": "submitting current behavior since angurlar work anymore expected behavior works angular minimal reproduction problem instructions motivation use case changing behavior want use latest angular version please tell us environment linux xubuntu angular version language typescript node aot issues", "num": "13306", "d": "12/2016"}, {"title": "since typescript work anymore typeerror read property text undefined", "body": "submitting current behavior since typescript work anymore expected behavior works typescript minimal reproduction problem instructions motivation use case changing behavior want use latest typescript version please tell us environment linux xubuntu angular version language typescript node aot issues", "num": "13305", "d": "12/2016"}, {"title": "reentrance angular detector environment callback thirdparty api", "body": "assetstesthtml class detectorcomponent export class detectorcomponent implements oninit string string constructor private ref changedetectorref ngoninit hello window onmessage gt method called thirdparty library must manually call thisrefdetectchanges let apply change template hope angular reentrance automatic change mode like normal mode many business logic service need executed onmessage callback", "num": "13304", "d": "12/2016"}, {"title": "multiple hostbinding decorators work", "body": "submitting check one x current behavior multiple hostbinding decorators handled properly last one used expected behavior decorators must used minimal reproduction problem instructions create component set multiple hostbindings single field like last decorator used app compiled jit aot motivation use case changing behavior work expected please tell us environment ubuntu angular version browser language typescript node aot issues", "num": "13303", "d": "12/2016"}, {"title": "angular new problems", "body": "hi working angular plunker latest version angular works strange behavior want show help fix unfortunately big nonpublic project want prepare minimal reproduce plunks base plunk anyone else fork problem evething working right angular version big issues without change code different version angular error console even clear page reactive forms doesnt work application keep taking memory would like help simulate plunker able prepare plunk start anyone could help base plunks prepare plunks reproducing problems", "num": "13302", "d": "12/2016"}, {"title": "strict mode syntax error running angularcompiler phantomjs", "body": "submitting current behavior running phantomjs results error uncaught syntaxerror strict mode code functions declared top level immediately within another function offending code found expected behavior code run phantomjs minimal reproduction problem instructions see runnable sample motivation use case changing behavior shipped code nt violate strict mode restrictions please tell us environment angular version browser phantomjs language typescript node aot issues", "num": "13301", "d": "12/2016"}, {"title": "input set array length issues", "body": "submitting x bug report feature request support request current behavior setting input delay variable options shows array length values settimeout timeout length input set options options object consolelog options settimeout gt consolelog options response first log array object object length second log array object object see first consolelog array length shows ca nt iterate object expected behavior first consolelog array minimal reproduction problem instructions code takes care minimal reproduction motivation use case changing behavior please tell us environment windows webstorm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13300", "d": "12/2016"}, {"title": "angular aot", "body": "submitting check one x current behavior compiling project ngc keep getting start get aotappappmodulengfactory try access resource browser works get aotappappmodulengfactoryjs dont understand angular add js extension expected behavior minimal reproduction problem instructions modified maints compiled ngc nodemodulesbinngc p tsconfigaotjson tsconfigaotjson compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom noimplicitany true suppressimplicitanyindexerrors true angularcompileroptions gendir aot skipmetadataemit true motivation use case changing behavior please tell us environment windows angular version browser language node aot issues", "num": "13299", "d": "12/2016"}, {"title": "determine module class appcomponent", "body": "submitting check one x current behavior expected behavior successful build errors everything works expected angular rxjs zonejs updating angular rxjs zonejs causes error minimal reproduction problem instructions time early next week come minimal repo needed looks like import commonmodule angularcommon import ngmodule angularcore import formsmodule angularforms import browsermodule angularplatformbrowser import upgrademodule angularupgradestatic import chatcyphertext chatmain chatmessagebox checkout contact fileinput help linkconnection markdown register signupform staticcyphnotfound staticfooter cyphuicomponents import mdbutton mdcard mdcardcontent mdcardheader mdcardheadertext mdcardtitle mdcardtitletext mdcontent mdfabspeeddial mdicon mdinput mdlist mdlistitem mdmenu mdoption mdprogresscircular mdprogresslinear mdselect mdsidenav mdslider mdsubheader mdswitch mdtabs mdtextarea mdtoolbar mdtooltip cyphuicomponentsmaterial import translate cyphuidirectives import appcomponent appcomponent import betacomponent betacomponent angular module cyph ui ngmodule declarations appcomponent betacomponent chatcyphertext chatmain chatmessagebox checkout contact fileinput help linkconnection markdown register signupform staticcyphnotfound staticfooter translate mdbutton mdcard mdcardcontent mdcardheader mdcardheadertext mdcardtitle mdcardtitletext mdcontent mdfabspeeddial mdicon mdinput mdlist mdlistitem mdmenu mdoption mdprogresscircular mdprogresslinear mdselect mdsidenav mdslider mdsubheader mdswitch mdtabs mdtextarea mdtoolbar mdtooltip entrycomponents appcomponent fileinput help register imports browsermodule commonmodule formsmodule upgrademodule export class appmodule ignore public ngdobootstrap void components starting upgraded components rest standard components motivation use case changing behavior using angular general please tell us environment debian jessie inside docker os x el capitan angular version browser language typescript node aot issues", "num": "13296", "d": "12/2016"}, {"title": "hope initialize correctly ngvalue object", "body": "submitting check one x current behavior use view inited expected behavior hope select select real business equal id name item minimal reproduction problem instructions motivation use case changing behavior real business system known issue cause looseidentical use jsonstringify string like add attrbute compare user like course use component style controlled app need encapsulation business component thanks english good enough lt please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "13295", "d": "12/2016"}, {"title": "angular animation creating read property cancel undefined error", "body": "submitting check one x current behavior upgrading receive following error result following animation code remove transition seems work fine loses transition occurs tooltip killed using function debugging see player trying kill undefined expected behavior errors minimal reproduction problem instructions upgrade launch demo page note error see branch motivation use case changing behavior na please tell us environment mac npm webpack node angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx ts node aot issues", "num": "13293", "d": "12/2016"}, {"title": "provider factory accessible compiler exported party module", "body": "factory function used initialise provider defined exported party module compilation fails due wrong path import set function ngfactory appmodulengfactory design would like know story behind submitting check one x current behavior provider factory included appmodule compiler fails generating proper ngfactory linking factory function random path instead node module expected behavior compilation successful even provider directly exposed long properly exported module minimal reproduction problem instructions clone npm install remove exported function appmodulets modify import first param please tell us environment osx webstorm npm angular version browser language node aot issues", "num": "13292", "d": "12/2016"}, {"title": "max datetime utc date pipe broken edge", "body": "submitting check one x current behavior date short gt page errors without error console date short gt formats pm expected behavior date short gt pm date short gt pm current behaviour chrome minimal reproduction problem instructions plunkr replicate motivation use case changing behavior browser consistency please tell us environment windows angular version browser edge language typescript", "num": "13291", "d": "12/2016"}, {"title": "form input fields longer respect readonly attributes prod builds", "body": "submitting current behavior input readonly works dev prod expected behavior input readonly work type compilation minimal reproduction problem instructions please tell us environment ng version angularcli node os darwin ide vs code angular version browser chrome firefox safari tested remarks updated ngcli versions seems ngcli may turned aot compilation default prod builds", "num": "13290", "d": "12/2016"}, {"title": "canactivate guard trigger canactivate return false", "body": "submitting check one x current behavior canactivate guard activate component try navigate component check canactivate guard doesnt expected behavior check guard see activated minimal reproduction problem instructions go press page popup appear press continue call routernavigatebyurl notice nothing happened press page notice nothing happened need press page press page reactivate guard motivation use case changing behavior working angular please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13288", "d": "12/2016"}, {"title": "rerouting newly added route canactivate fails", "body": "submitting check one x current behavior canactivate guard wildcard route canactivate guard adds routes routing table router reset config starting navigate route nt routing table instance terms wildcard canactivate guard determines terms routing table adds route tells router navigate terms since exists component canactivate guard resolvesreturns false cancel navigation wildcard component navigation terms fails router go expected despite terms route existing router events triggered new navigation expected behavior since terms added routing table exists route navigation terms work minimal reproduction problem instructions change angular version router version everything works expected motivation use case changing behavior route gets added canactivate guard wildcard route able navigated even though route previously exist please tell us environment windows angular angular router angular version browser chrome firefox language typescript node aot issues", "num": "13287", "d": "12/2016"}, {"title": "allow overriding resourceloader", "body": "submitting check one x current behavior allow overriding internal resourceloader implementation templateurl support component components defined templateurl respective unit tests taking long time complete due karma requesting template url unit test expected behavior allow override resourceloader load template url content without actual template url http requests minimal reproduction problem instructions na motivation use case changing behavior components defined templateurl respective unit tests taking long time complete due karma requesting template url unit test unit test take sec complete approach leading long unit test execution time please tell us environment windows ram vscode ide angular version browser phantomjschrome language typescript node aot issues", "num": "13286", "d": "12/2016"}, {"title": "angular nt work", "body": "angular nt work plunker minimal reproduction check plunker please nt work webpack well", "num": "13285", "d": "12/2016"}, {"title": "typeerror resizesensor constructor error angular aot", "body": "submitting check one x current behavior expected behavior angular app using external javascript library csselementqueries run angular app development mode jit everything works fine csselementqueries run app aot mode production get typeerror resizesensor constructor error stops csselementqueries working minimal reproduction problem instructions top typescript file introduce elementqueries like page loads call scripts loaded indexhtml obviously works development mode production aot mode get constructor error external javascript libraries use similarly working angular aot motivation use case changing behavior please tell us environment windows systemjs vscode angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx typescript node aot issues", "num": "13283", "d": "12/2016"}, {"title": "support typescript notnull caster templates", "body": "submitting check one x current behavior templates complain object null nt accept using typescript null caster way using instead inconsistent expected behavior angular templates accept like minimal reproduction problem instructions html videogetsnippet gettitle resulted error object possibly null html videogetsnippet gettitle resulted error template parse errors parser error unexpected token column videogetsnippet gettitle motivation use case changing behavior consistency please tell us environment ubuntu atom language typescript", "num": "13280", "d": "12/2016"}, {"title": "upgradecomponent missing injector lazy loaded module", "body": "submitting check one x current behavior component trows error inside module lazy loaded using upgrade module upgrade component approach docs using bootstrapping process expected behavior component appear minimal reproduction problem instructions minimal angularcli repo bootstrapping app downgradecomponent non working homeabout lazy loaded url works appmodule url work homemodule router config motivation use case changing behavior want use uigrid component written angular application please tell us environment angular version browser chrome language typescript node aot issues", "num": "13279", "d": "12/2016"}, {"title": "language service factory takes typescript parameter used", "body": "submitting check one x current behavior takes parameter used consistently removed motivation use case changing behavior parameter implies use typescript passed actually use imported version", "num": "13277", "d": "12/2016"}, {"title": "using formarrayname tbody elements", "body": "submitting check one x current behavior posting issue report falls somewhere bug report feature request basically think bug engine htmlparser seems impose markup would like avoid issue corresponds much ticket result facing much like one plnkr dynamic form consists two formarrays would like use following markup unfortunately produces html parsing errors angular seems satified following markup semantically ugly also results huge layoutstyling problems parts table sort detached table please refer plunker see effect content squashed first first understand correctly discussion referred issue problem connected htmlparser parent elements could revised think desired markup perfectly valid compromised used form directives misunderstanding issue please advise resolve case expected behavior minimal reproduction problem instructions motivation use case changing behavior use clean semantic table markup please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13275", "d": "12/2016"}, {"title": "select ngmodel set options nothing gets selected", "body": "submitting check one x current behavior ngmodel asynchronously loaded options nothing gets selected expected behavior matter ngmodel options loaded first minimal reproduction problem instructions motivation use case changing behavior asynchronous code one guarantee gets loaded first matter please tell us environment fedora angular version browser chrome language typescript", "num": "13274", "d": "12/2016"}, {"title": "upgraded components ngtransclude error transcluded content", "body": "submitting check one x current behavior upgraded component contains ngtransclude directive element supplied content transclude eg empty use fallback content following error thrown seems transclusion directive tries destroy transcluded scope transcluded content empty upgradecomponent nt actually supply scope case expected behavior work without errors minimal reproduction problem instructions motivation use case changing behavior correctness ease upgrade please tell us environment macos sierra angular version browser language", "num": "13271", "d": "12/2016"}, {"title": "bug template vars conditional expressions nt work", "body": "submitting check one x current behavior using template variables condition expressions directive work expected behavior expect know trigger hidden class route activated gt able use template variables conditional statements directives minimal reproduction problem instructions plinker motivation use case changing behavior believe reasonable please tell us environment latest build angular packages inside project managedgenerated latest angularcli version angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13270", "d": "12/2016"}, {"title": "demo outdated still using coredirectives", "body": "submitting check one x current behavior demo page wrong throws error expected behavior demo work latest version minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13269", "d": "12/2016"}, {"title": "provide customizable object comparison method ngmodel", "body": "submitting check one x current behavior currently ngmodel object reference comparison flexible minimal reproduction problem instructions see example two multi selects first one nt use workaround enforce usage instances second one motivation use case changing behavior objects always come source typically come rest service usually nt instance current behavior requires workaround something believe common use case think supported framework without requiring workarounds suggested solution suggest creating comparator object callback would compare two objects return true equal ngmodel would internally use comparator compare objects resulting code could look like framework could also provide default comparators example one would compare object attributes one would sufficient quite lot use cases already standard solution please point tried search nt find anything found stack overflow post describing problem providing solution", "num": "13268", "d": "12/2016"}, {"title": "install angular aot compiler ngc windows", "body": "submitting check one x current behavior using seed installing aot compiler get nodemodulesbin folder present windows expected behavior nodemodulesbin could use ngc compiler minimal reproduction problem instructions extract archive quickstart seed official angulario site npm install stringstream toughcookie uuid zonejs npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch npm warn optional skipping optional dependency fsevents nodemodulesbrowsersyncnodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch npm install angularcompilercli angularplatformserver save angularcompilercli tsickle sourcemap sourcemapsupport angularplatformserver npm warn optional skipping optional dependency fsevents nodemodulesbrowsersyncnodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch npm warn optional skipping optional dependency fsevents nodemoduleschokidarnodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch motivation use case changing behavior irrelevant please tell us environment windows bits professional angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview irrelevant language typescript xx irrelevant node aot issues packagejson name angularquickstart version description quickstart packagejson documentation supplemented testing support scripts start tsc amp amp concurrently tsc w liteserver tsc amp amp concurrently protractor protractorconfigjs killothers success first lint tslint appts verbose lite liteserver webdrivermanager update test tsc amp amp concurrently tsc w karma start karmaconfjs testonce tsc amp amp karma start karmaconfjs singlerun tsc tsc tsc w tsc w keywords author license mit dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter devdependencies concurrently liteserver typescript repository", "num": "13266", "d": "12/2016"}, {"title": "data binding work chinese property name", "body": "submitting check one x current behavior code template \u65f6\u95f4 chinese char means time typescript file define datacontext property work got error error message template parse errors parser error unexpected token lexer error unexpected character \u65f6\u95f4 expected behavior hope data binding work chinese property name minimal reproduction problem instructions motivation use case changing behavior really need support chinese char json data old system data properties use chinese char without convert json files please tell us environment angular version angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version language typescript xx typescript tried node aot issues node", "num": "13265", "d": "12/2016"}, {"title": "angular documentations clearly setup", "body": "submitting current behavior looking class usage docs options least simple code options motivation use case changing behavior easy every developers use functions without need search post unneccessary questions stackoverflow angular version language typescript", "num": "13264", "d": "12/2016"}, {"title": "angular ie syntax errorn exec linkdynamicmodule", "body": "angular application crashing ie syntax error trying load appmodule file syntaxerror syntax errorn exec entryexecute linkdynamicmodule getmodule anonymous function require anonymous function eval n anonymous function eval n eval code eval n exec appmodulejs code use strict var decorate amp amp thisdecorate function decorators target key desc var c argumentslength r c lt target desc null desc objectgetownpropertydescriptor target key desc typeof reflect object amp amp typeof reflectdecorate function r reflectdecorate decorators target key desc else var decoratorslength gt decorators r c lt r c gt target key r target key r return c gt amp amp r amp amp objectdefineproperty target key r r var metadata amp amp thismetadata function k v typeof reflect object amp amp typeof reflectmetadata function return reflectmetadata k v const require angularcore const require angularplatformbrowser const require angularforms const require angularrouter const require angular const require appcomponent const require homehomecomponent const require productproductlistcomponent const require categorycategorylistcomponent const require categorycategoryselectorcomponent const require sharedcontrolsgridgridcomponent const require productproductlistservice const require categorycategorylistservice const require routerconfig let appmodule class appmodule appmodule decorate imports declarations providers bootstrap metadata design paramtypes appmodule exportsappmodule appmodule sourcemappingurlappmodulejsmap", "num": "13262", "d": "12/2016"}, {"title": "proposal stylexxxurl binding url", "body": "submitting check one x goal motivation currently use function stylebinding wrap url property quotes easy mistake beautiful summary expanded", "num": "13260", "d": "12/2016"}, {"title": "canactivate guard triggers first attempt access route", "body": "submitting check one x current behavior method route guard nt trigger attempting navigate route user previously denied access expected behavior method run every attempting navigation guarded route minimal reproduction problem instructions click routerlink leading guarded route deny access click link see guard nt trigger second time motivation use case changing behavior modal notifies user ca nt access certain content rare case dismiss notification nt read notification user may attempt click content greeted notification please tell us environment macos sierra linux ubuntu trusty angular version angular router browser browsers language typescript node aot issues", "num": "13259", "d": "12/2016"}, {"title": "exception renderer setelementclass simple example", "body": "submitting check one x current behavior trying dynamically set component classes using renderer import component input renderer elementref angularcore component selector uxicon template export class icon input set name value string thisrenderersetelementclass thiselementref fa fa value false code throwing exception looking code trace property element happens adding replacing expected behavior able set class please tell us environment apache chrome windows angular version browser chrome language typescript node aot issues", "num": "13258", "d": "12/2016"}, {"title": "language service throws component metadata invalid", "body": "submitting check one x current behavior language service sometimes throw metadata invalid expected behavior report diagnostic throw minimal reproduction problem instructions include following project language service enabled work around class exported language service longer throw", "num": "13255", "d": "12/2016"}, {"title": "safe navigation guard array access", "body": "submitting check one x current behavior using array index safe navigation eg crashes guarded variable nullundefined expected behavior safe operator shortcircuit entire expression first null value using property access eg minimal reproduction problem instructions motivation use case changing behavior current behavior inconsistent expected use safe navigation shortcircuiting discussed please tell us environment na angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13254", "d": "12/2016"}, {"title": "language service throws class name", "body": "submitting check one x current behavior language service crash requests made file contains following end file class expected behavior result throwing", "num": "13253", "d": "12/2016"}, {"title": "possible add custom onchange function default formcontrol", "body": "possible add custom onchange function default formcontrol custom input", "num": "13251", "d": "12/2016"}, {"title": "aot compiler persist quotes property names object literals", "body": "submitting check one x current behavior aot compiler turns quoted property names object literals unquoted property names expected behavior aot respects fact property names quoted original source minimal reproduction problem instructions project using angularrouter create resolve property one routes one key quoted one like following run aot compiler module inspect ngfactoryts file module find routes property defined observe generated code shows quotes motivation use case changing behavior tools like closure compiler rename properties differently based quoted use case resolve names accesses renamed differently result failure runtime please tell us environment ubuntu angular version browser language typescript node aot issues", "num": "13249", "d": "12/2016"}, {"title": "support cold event streams templates", "body": "requirements observables must cold ie subscription listeners use case drag drop need listen mousemove drag initiated must possible execute expression computes action nexted observable use case ngfor shows list todos remove button clicking remove notify stream dom event item removed must possible set observable recipes run insideoutside angular zone use case drag drop nt run cd mousemove throttle debounce etc run cd subscription pass throttle debounce etc would strongly preferable something template would indicate observable listening given location use case easy developertooling see source code event processed design component annotate fields represent observable streams created template viewfactory also determine parameterization observables ie framework set fields right constructing object need new hook would called right setting fields running first change detection create new syntax describe events template listen action computed stream receive action split angular zone error handling cd provide convenience method running code username x class mycomponent implements oncreate users user specify property injection inject remove observable lt item user index number gt actions observable ngoncreate example building recipe notice making sure rx operators cd thisactions nochangedetection gt removemap gt viewfactory creates instance observable property injected component observable names types type parameters declared component identifies observable generated need hook create recipes need method going cd separate design doc tbd placeholder syntax see discussion later used generate cold event registration dom events expression used compute value next ed observable notice even though zero instance places listen dom events always one observable instance given name syntax discussion note syntax used placeholder syntax requirements syntax needs encode three items dom event destination stream action object given need encode three things takes two default figure encode three things two choices favorite format combines event stream lhs event stream symbols ie foo complex expressions ie lhs event already lhs stay already precedence compound lhs example preferred necessary hints cold always listening retained consistent normal event listeners probably micro syntax precedence combining multiple formats rhs requires special symbol lhs activate microsyntax shorthand expanded canonical form would canonical form example required hints cold always listening different normal listener retained consistent normal event listeners strongly require two keyvalue pairs format wordy cumbersome puts event rhs whereas lhs", "num": "13248", "d": "12/2016"}, {"title": "image rendering jitter", "body": "first time around images toggle quick jumpy refresh image transition seem smooth js import component angularcore component selector apptoggle template styles export class togglecomponent label state false ontogglestate thisstate thisstate thislabel thisstate submitting check one x current behavior see code refresh browser click button toggle size images expected behavior smooth image switching smart enough use current image size minimal reproduction problem instructions motivation use case changing behavior avoid crappy user experience please tell us environment macos angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview using chrome language typescript xx node aot issues", "num": "13247", "d": "12/2016"}, {"title": "ngonchanges nt get called input property changed", "body": "submitting check one x current behavior trying change child input property using viewchild instance parent method ngonchanges nt get called changing currentval parent trigger ngonchanges child also update thissiderbarinstancetestval parent change appear dom ngonchanges wo nt get called expected behavior method ngonchanges called every time property changed able get changes nt possible angular throw error silent fail nt accepted behaviour minimal reproduction problem instructions component selector myapp template providers appservice export class appcomponent viewchild sidebarcomponent siderbarinstance sidebarcomponent public currentval string public oninnerclick void thissiderbarinstancetestval clicked component selector mysidebar template export class sidebarcomponent implements oninit onchanges docheck motivation use case changing behavior learning ngonchanges nt seem reliable called every time change occurs please tell us environment windows visual studio code npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13245", "d": "12/2016"}, {"title": "guards resolvers called queryparams changes activatedroutesnapshoturl empty equalparamsandurlsegments", "body": "hi serious problem routing commit behavior resolvers guards changed respect params hope would fix problem query params v unfortunately url function empty array snapshots route path employeedetail works query params links employeedetail b employeedetail unfortunately resolvers guards called change navigatebyurl route b route segments urls empty arrays actually", "num": "13244", "d": "12/2016"}, {"title": "binding input type broken", "body": "submitting current behavior try bind attribute input js class inputtype number html formvalue try change input value type changed string seems html attributes nt changed expected behavior able bind type input type stayed number value minimal reproduction problem instructions motivation use case changing behavior dynamiclly generating forms given json binding type save lot copypaste code please tell us environment sure relevant reproducible plnkr thanks edit goes binding type also broken dynamic forms demo change email type number example", "num": "13243", "d": "12/2016"}, {"title": "form data empty calling contenttype header", "body": "submitting check one x current behavior typescript var fd new formdata fdappend field value fires empty request chrome developer tools fd headers new headers contenttype applicationxwwwformurlencoded subscribe gt consolelog request done success request data empty seen chrome developer tools expected behavior request empty body contenttype nt changed minimal reproduction problem instructions plunker two requests one valid contenttype nt changed one failing contenttype changed please tell us environment angular version browser chrome latest language typescript", "num": "13241", "d": "12/2016"}, {"title": "error unexpected value servicesmodule imported module loginmodule", "body": "submitting check one x loginmodule import servicesmodule myservicesservice import controlsmodule mycontrolscontrols ngmodule imports commonmodule reactiveformsmodule formsmodule loginroutes servicesmodule controlsmodule declarations logincomponent providers loginproviders exports logincomponent export class loginmodule servicesmodule controlsmodule imported another project private npm repository appmodule looks following see importing servicesmodule controlsmodule loginmodule appmodule otherwise working run project everything works fine problem however run extract translation texts getting error error unexpected value servicesmodule imported module loginmodule tried remove servicesmodule controlsmodule child module loginmodule keep import appmodule case getting error tags selector servicesmodule controlsmodule recognized servicemodule export class servicesmodule collection services providers please tell us environment angular version browser chrome latest node typescript", "num": "13240", "d": "12/2016"}, {"title": "disable inputfield valid", "body": "submitting bug report using angular forms testing things came across little problem made select field gave following attribute disabled selectvalid combination required select something select valid current tab crashes os using becomes unusable press ctrl alt del tested debian windows using chrome firefox ie expected input would become unavailable something selected plunker extra closing div heroformcomponenthtml remove reproduce bug tab become unavailable bat os browser stay usable see fully working need run directly without using online sandboxes angular browser chrome ie firefox language typescript compiler node", "num": "13239", "d": "12/2016"}, {"title": "provide better ids interpolation strings output", "body": "submitting check one x current behavior currently template similar output message source tag similar confusing translators guess interpolations standing remember correct order expected behavior suggested behaviour either use interpolation content id eg include another tag example minimal reproduction problem instructions motivation use case changing behavior want tool produce messages easier translators work please tell us environment angular version", "num": "13237", "d": "12/2016"}, {"title": "form validation strange behavior name attribute duplicated", "body": "current behavior within form error contains two inputs fields name attribute value firstname case angular binds validations fields expected behavior expected throw error apply validation one field minimal reproduction problem instructions go plnkr example code first field required attribute enter one character see valid property still false enter another two characters valid true second fields also minlength validation motivation use case changing behavior think confusing almost way catch problem big form please tell us environment browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language", "num": "13236", "d": "12/2016"}, {"title": "memory leak long running app", "body": "submitting check one x current behavior app designed running browser indefinite time interaction user app data display applicaton constantly sent data updates signalr connection little logic application data bound ui emitters observables cleaned regularly advice gained stackoverflow posted researched issue running noticed leave app running hours chrome suffers memory issue happens ui using ngifs hidden show hide data components implementing ngondestroy emitters unsubscribed expected behavior application run indefinitely without breaking due memory issue known memory issues minimal reproduction problem instructions motivation use case changing behavior confirm memory leak find due implementation please tell us environment windows ng webpack dev server signalr angular version browser chrome version ie language node aot issues node", "num": "13235", "d": "12/2016"}, {"title": "meteor zones appreftick called often", "body": "submitting check one x current behavior short called often meteor apps longer first use case meteor apps using angular moving let look zones handled today meteor recommended handled seems zonejs one core idea zonejs preserve zones asynchronous calls autopatching generally works websockets little tough called different zones zone callback come zonejs answer least websocket created say means layer making use websocket serve multiple zones must zone aware implement zone reentrance higher level meteor exactly happens data layer opens websocket angular bootstrap supported way changing events socket subsequently lead data propagated observables reactive tracker functions listeners app potentially multiple angular apps could listening nonangular apps propagation way handled event loop started callback websocket way meteor approached zones like higher layers actual tracker functions observables means one callback could lead data changes could cause lot listener callbacks one run angular zone child thereof getting problem callbacks run principally single angular main zone yield lot times leading calls done excessively unless implement change detection strategies place performance clearly suffers expected behavior would wish either programmatic fix angular clear working policyrecommendation handle scenarios handle ways see could fixed throttle appreftick angular something like purposely wrote although unclear would maybe new callback root zone eg maybe polyfill maybe register interested zones meteor callback something like pseudo code typescript angular bootstrap able handle multiple zones simplified registerzoneinmeteor meteor patching lib function registerzoneinmeteor thismainzone zonecurrent onmeteorwebsocketdata data thismainzonerun gt runalllisteners data way would wrap listener callback root call angular zone thus microtask queue would nt empty imo kind smells though whole main zone thing inner mechanisms angular leaked design smarter auto patching websocket zonejs outlined nt obvious patch websockets one thing could done check zones nt original zone add list zones contain callback thus stack trace callback would look something like although would solve things least two downsides see new zones surface old zones longer used automatic way disposing zonejs leading garbage zones longer longer stacks changing zone sends would nt fix original problem zonejs idea preserve zone conflict zones seems little arbitrary run stack kind fix mitigate angular use motivation use case changing behavior performance please tell us environment meteor npm package angular version angular", "num": "13234", "d": "12/2016"}, {"title": "angular compiler issue thirdparty npm packages", "body": "submitting check one x current behavior importing thirdparty module code like following example first issue stumbled upon trying build code run npm package import project could nt get past step went search amp found following solution get past compiling error since package nt package associated fixed issue adding file src folder following line solved compiler issue code gets built kicker importing package another project like thirdparty npm package get following error cycle continues expected behavior compiler compiling thirdparty package code included dist aot folder minimal reproduction problem instructions make new angular module template add third party package nt typings try compiling code npm package using script within template motivation use case changing behavior currently working big project requires several ngmodules working together modules include thirdparty npm packages need compiled order reuse ngmodules npm packages later projects please tell us environment operating system macos sierra package manager npm ide webstorm angular version overall compiler issue far aware browser language node aot issues", "num": "13233", "d": "12/2016"}, {"title": "dynamic routing", "body": "submitting check one x current behavior current structure manually add routes route config array expected behavior fetch menu definitions rest routingdefinitions path pagesworkflowpools component workflowpools path pagesworkflowpoolspool component workflowpoolcomponent would like register fetched routes current config without defining manually convert string value component type fetched rest ex employeelistcomponent class type way implement dynamic route registration minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version angularcore angularrouter browser language node aot issues", "num": "13232", "d": "12/2016"}, {"title": "aot emitdecoratormetadata longer working", "body": "submitting check one x current behavior using cerialize plugin generates strongtyped typescript objects based json objects using decorators able know property types information course gone runtime working fine using jit however aot longer working expert believe emitdecoratormetadata flag longer working ie decorator metadata emitted cerialize use also tried typedjson problem occurs expected behavior would expect behavior aot compared jit motivation use case changing behavior using api want able create strongtyped objects add business logic data coming api working jit aot please tell us environment angular version browser language typescript node aot issues", "num": "13231", "d": "12/2016"}, {"title": "initialisation time long", "body": "website using screenshot shows loading static files html js css server took roundly mili seconds first api call dod offset started around mili seconds probably boostrappinginitializing angular took seconds complete normal init time angular suggestion speed website chromemacos angular cli", "num": "13230", "d": "12/2016"}, {"title": "ngaria module angular", "body": "submitting check one x current behavior using following command download anguararia nodemodules folder npm install save angulararia adding ngaria dependency using code root module red curly lines underneath angulararia error message webstorm ide saying ca nt find module angulararia import ngaria angulararia running app chrome error console log uncaught typeerror read property module undefined anonymous function anonymous function expected behavior able find angulararia module root module console errors saying read property module undefined angularariajs file minimal reproduction problem instructions see current behavior motivation use case changing behavior able use ngaria module angular please tell us environment operating system using windows virtual machine mac ide webstorm package manager npm angular version browser chrome xx language typescript xx node aot issues", "num": "13229", "d": "12/2016"}, {"title": "without npm usage node applications", "body": "submitting check one x current behavior within node applications like express sails need make publicly accessible order run kinda bad since exposing npm stuff additionally may case ts compilation done grunt task currently really hard achieve hacky expected behavior either publish compiled version bower usage would angularjs provide guides use angular without npm take care ts compilation", "num": "13227", "d": "12/2016"}, {"title": "http response headers incomplete", "body": "submitting check one x current behavior get response http request responseheaders contain applicationjson import component oninit angularcore import http angular component selector appsimpletest templateurl simpletestcomponenthtml styleurls simpletestcomponentcss export class simpletestcomponent implements oninit private testurl private outputstring constructor private http ngoninit subscribe response gt thisoutputstring response response response headers values responseheadersvalues error gt consolelog error expected behavior expected get list headers http response minimal reproduction problem instructions create link rest response added headers accesscontrolalloworigin errors error message create test plunker link motivation use case changing behavior parsing response headers backend application please tell us environment npm angular version browser chrome firefox language typescript node aot issues", "num": "13226", "d": "12/2016"}, {"title": "error find module", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13221", "d": "12/2016"}, {"title": "pluggable ngmodules aot compatibility", "body": "submitting check one x preface saying think basic understanding technical challenges expect much bigger problem space essentially trying recreate server side development process teams work agreed contracts code consumed optional plugins core system specifically interested aot compatibility observed application performance increases current behavior using aot angular currently supports monolithic applications clear compile time coherence ngmodules expected behavior expected bit strong desired requesting techniques either additional documentation new supported features allow aot compiled ngmodules registered runtime di container furthermore ngmodules registered runtime imported ngmodules exports module available use routers treat lazy loaded modules routes become part route tree application composition main application built core application team contains core application logic well shared vendor libraries contains call bootstrapmodulefactory application boots plugin built auxiliary teams teams need able compile plugin production without duplicating vendor code plugins register core application runtime plugins able add additional multi provider entries existing multi providers plugins able register additional forchild routes currently using typescript webpack ngtoolswebpack aot", "num": "13218", "d": "12/2016"}, {"title": "adding div causes uncaught error template parse errors", "body": "angular angularcli browser language typescript generated app via added without obvious cause adding component template causes typescript import component oninit angularcore import import log util component selector appselections templateurl selectionscomponenthtml styleurls selectionscomponentcss export class selectionscomponent implements oninit constructor ngoninit html selections product contact buy asasa xxxxx becomes weird works html xxxxx nt work html xxxxx", "num": "13217", "d": "12/2016"}, {"title": "aot compiler hardcodes nodemodules folder factory import statements", "body": "submitting check one x current behavior including third party component app working aot compiling app noticing unusual behavior third party component wo nt compile unless install angularcommon package nodemodules folder went ahead looked ngfactory files component something seems excerpt one files hardcoding nodemodules path statements others even though modules expected behavior would expect minimal reproduction problem instructions component clone github repo run aot compiler reproduce problem motivation use case changing behavior need manually pull angularcommon package component nodemodules also adds bundle size directives get included twice app please tell us environment windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues", "num": "13216", "d": "12/2016"}, {"title": "activatedroutedata observable emitting linearly increasing number events child route route change", "body": "submitting check one x current behavior user subscribed activatedroutedata property child route variable route identifier eg path childrouteid amount events emitted route change activateroutedata subscription rises linear rate causing subscription fire times user navigates around children parent route example lets say routes navigate activatedroutedata subscription fire time route change navigate activatedroutedata subscription fire times route change navigate activatedroutedata subscription fire times route change happens even new resolved data activatedrouteparams route fires every route change expected behavior would expect activatedroutedata would act exactly like params accurately fire based resolvers route said comments routerstatedts minimal reproduction problem instructions demo bug question essentially parent route child route parent route trigger navigation children routes observe amount times data subscription fired motivation use case changing behavior currently need use data comes back resolver build http call want show spinner data call loading information means need make call component ca nt update component level properties resolve service since activatedroutedata observable firing multiple times making http call multiple times needlessly workarounds available problem nt solve underlying issue number times observable fires please tell us environment os windows ide visual studio code package manager webpack angular version browser chrome language typescript", "num": "13215", "d": "12/2016"}, {"title": "routing submodule error displays wrong module", "body": "submitting check one x current behavior setup project number child modules child routes however trying use route param base component one module cellcomponent route get error exception uncaught promise typeerror read property length undefined best helpful message however main issue linemodule renders instead expected behavior cellmodule render recognised params error code clear selfexplanatory message random module rendering minimal reproduction problem instructions navigate notice home component works navigate notice cellcomponent renders even though nocontentcomponent navigate works fine navigate renders cell component navigate renders line component console error motivation use case changing behavior aidingenabling development multimodule routed applications use route params please tell us environment windows pro vs code angular version browser language typescript node aot issues", "num": "13214", "d": "12/2016"}, {"title": "create benchmark jit compilation", "body": "recently regression jit compilation see issue probably runtime book keeping logic ie template parsing reproduction found", "num": "13213", "d": "12/2016"}, {"title": "inheriting constructor jit mode fails using closure compiler property initializers", "body": "eg work injectable abstract class baseservice constructor private elementref elementref class myservice extends baseservice however closure compiler rewrites constructor following way match regex detect whether class inherits super constructor addition using property initializers constructor also contains statements set regex also match", "num": "13211", "d": "12/2016"}, {"title": "viewcontainerref throws error nt views indexof called", "body": "submitting check one x current behavior calling empty calling results uncaught typeerror read property indexof undefined viewcontainerrefindexof expected behavior expect returned element found actual error validated present actual code instead motivation use case changing behavior clean viewcontainer either component based factors initially component detached create component via via latter automatically inserts component nt need put check find indexof component determine removed angular version latest", "num": "13207", "d": "12/2016"}, {"title": "routerisactive routerlinkactive support options", "body": "currently routerisactive routerlinkactive support one option isactive return true queryparams match exactly url url segments path equal matrix params ignored isactive return true queryparams containee subset queryparams container url tree containee subtree url tree container matrix params ignored replace string type supports options includeexclude queryparams includeexclude fragment includeexclude matrix params", "num": "13205", "d": "12/2016"}, {"title": "angularcompiler compilation issue", "body": "hey guys updated angularcompiler ngc longer creating application ngfactory files specified outgen folder last working version angularcompiler stack currently node angular check stack follow instructions reproduce process thanks advance jt submitting check one x current behavior initial angularcompiler compilation appmodulengfactory file created expected behavior appmodulengfactory file would created along component factories minimal reproduction problem instructions clone run commands ngcaot folder nodemodule factories app factories app factories missing motivation use case changing behavior compile aot please tell us environment mean stack angular version browser dom issue language typescript node aot issues", "num": "13204", "d": "12/2016"}, {"title": "update zonejs", "body": "currently angularcore project depends changelog zonejs project nt see breaking changes bug fixes feature updatesadditions believe reasonable allow angular users use latest zonejs", "num": "13202", "d": "12/2016"}, {"title": "async validators sometimes cause form validity status stuck pending", "body": "submitting check one x current behavior async validation sometimes hang form validity status returned sometimes ignored thus form never marked valid expected behavior underlying async objects would resolved properly form validity status must update properly minimal reproduction problem instructions example plunkr steps reproduce nt fully investigated issue yet creating returning either unfortunately magic async function making test crash type something input box triggering validators see http call fetching json error object works observable method called logging result console returned observable never resolved angular form status stuck pending motivation use case changing behavior heavily use redux observables inside projects thus extensively use async validators kind issues somehow unconfortable working async helpers please tell us environment operating system ubuntu ide webstorm package manager npm version http server express angular version tested locally plunkr browser firefox language typescript node aot issues", "num": "13200", "d": "12/2016"}, {"title": "ability create component instance testbed without html", "body": "submitting check one x current behavior sometimes find testing pure business logic components without wanting render html currently renders completely including dom interaction amp styles expected behavior would like ability toggle rendering dom render pure js component instance configured minimal reproduction problem instructions na motivation use case changing behavior currently running suite tests expensive tests work app takes minute compile amp run could optimize fronts believe dom rendering partly blame testing performance angular angular app last worked company run tests less time app also using typescript strategies improving test performance core much desired one area believe refined please tell us environment macos sierra webpack typescript angular version angular browser chrome phantomjs language typescript node aot issues", "num": "13197", "d": "12/2016"}, {"title": "router lazy loading http", "body": "sure like know posible load lazy modules using http like path loadchildren gt systemget", "num": "13195", "d": "12/2016"}, {"title": "error happen import socket immutable", "body": "imported socket immutable systemjsconfigjs file system configuration angular samples adjust necessary application needs function global systemconfig paths paths serve alias npm nodemodules map tells system loader look things map app within app folder app publicapp angular bundles angularcore npm angularcorebundlescoreumdjs angularcommon npm angularcommonbundlescommonumdjs angularcompiler npm angularcompilerbundlescompilerumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angular npm angular angularrouter npm angularrouterbundlesrouterumdjs angularforms npm angularformsbundlesformsumdjs angularupgrade npm angularupgradebundlesupgradeumdjs libraries rxjs npm rxjs angularinmemorywebapi npm angularinmemorywebapibundlesinmemorywebapiumdjs socketioclient npm socketioclientdist immutable npm immutabledistimmutable packages tells system loader load filename andor extension packages app main mainjs defaultextension js rxjs defaultextension js socketioclient defaultextension js import socket immutable systemjsconfigjs complex thanks help", "num": "13194", "d": "12/2016"}, {"title": "aot barrels supported", "body": "submitting check one x current behavior indexts export class folder import file another class get error module could found expected behavior jit works fine expect aot minimal reproduction problem instructions run ng build aot even though using angular cli angular bug believe node aot issues", "num": "13193", "d": "12/2016"}, {"title": "socket got error use mac os environment", "body": "app use nodejs socketio nodejs angular socket server client mac os environment tried make chat room add message chat room switch another chat room switch back first room nothing display got chrome console messages code run well computer got error run computers nt know thanks help", "num": "13192", "d": "12/2016"}, {"title": "routerlink directive nt support dynamically binding observable", "body": "submitting x feature request current behavior directive apparently support binding observable stream expected behavior able bind observable stream representing valid instruction possible syntax perhaps syntax could omit interpolation braces minimal reproduction problem instructions create component property providing urls try binding directive appears way motivation use case changing behavior represent application state observable suggested application state members projected generate route instructions observable stream application state observable emissions update routeinstructions get propagated anchor hrefs via routerlinks functionality would useful keeping url bar sync application state upon revisiting childcomponent example parent component routeroutlet several anchor elements deep links various child components update anchors hrefs order later restore redisplay previously visited component state changes one alternative use element click event handler among drawbacks approach breaks controlclick open link new tabwindow contextmenu feature another alternative bind observable directly anchor href use directive since approach ignores router link behaves like page refresh nevertheless works implementation persisting state local storage critical state url bar also hack please tell us environment angular version browser language", "num": "13190", "d": "12/2016"}, {"title": "feature request programatical css urls injection components", "body": "submitting check one x current behavior currently load styleurls component property expected behavior would nice api inject dynamically example like minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser language typescript node aot issues", "num": "13188", "d": "12/2016"}, {"title": "animation nested element work correctly fine till incl", "body": "submitting current behavior angular see plunk expected behavior angular last version correct behaviour see plunk minimal reproduction problem instructions click buttons expand outer expand inner collapse outer continue expand outer collapse inner collapse outer cases see mistake animation movement inner element please tell us environment windows node npm vs code gulpliveserver angular version browser language typescript", "num": "13187", "d": "12/2016"}, {"title": "failed project imports component nodemodules", "body": "submitting current behavior failed project imports component nodemodules even though run app fine clone reproducible repo get error however app works fine run navigate note originally posted closed vicb thought cli issue open new issue problem even without using angularcli expected behavior work minimal reproduction problem instructions clone demo repository motivation use case changing behavior importing angular component shared library common use case work use case please tell us environment macos sierra angular version browser applicable error happens running command line language typescript node aot issues", "num": "13186", "d": "12/2016"}, {"title": "feature angular set request content type requestoptionsargs requestoptions", "body": "submitting check one x current behavior make request header contenttype added manually example typescript import http request headers angular var dummy anyproperty anyvalue let headers headers new headers contenttype applicationjson let request request new request url body jsonstringify dummy headers headers expected behavior would nice able set content type requestoptions requestoptionsargs property could contenttype value type contenttype header could added http sending request would suggest override content type header already present passed content type options example typescript import http request contenttype angular var dummy anyproperty anyvalue let request request new request url body jsonstringify dummy contenttype contenttypejson minimal reproduction problem instructions motivation use case changing behavior less code set default behavior class extending http change type individually requests make anum contenttype useful please tell us environment angular version master browser language node aot issues", "num": "13185", "d": "12/2016"}, {"title": "formarray errors used ngc", "body": "submitting check one x current behavior template ngc failed property controls exist type abstractcontrol ngc failed line combodetailngfactoryts go fix template template ngc passed yaay oops getting error ngfor expects iterable chicken egg situation works dev mode without ngc currently method return iterable used ngfor along formarray way cast type template typescript file help direction appreciated also tried using luck", "num": "13184", "d": "12/2016"}, {"title": "moving view different viewcontainer causes problems creating future components", "body": "submitting check one x current behavior component moved different viewcontainer new components added using createcomponent viewcontainer inserted wrong viewcontainer looks like need combination insert remove comment source code alludes problem using combination work try remove viewref insert elsewhere flagged destroyed becomes unusable edit investigation detach insert works insert move alone remove said since move function still seems like issue additionally detach comment refers moving view within current container need within current container expected behavior components moved cause future component insertions go wrong viewcontainer using insert move result unexpected behavior used conjunction detach alternatively exception recommends possibility using detach situation would helpful minimal reproduction problem instructions created following plunker demonstrates problem recreate problem add left add center move last center left add center last add center cause component added left instead center motivation use case changing behavior within application components inserted removed moved based user interaction within dashboardlike ui order movement work needs resolved edit since able use detach conjunction insert achieve need within ui however would expect move would work accomplish please tell us environment windows visual studio npm iis angular version browser chrome edge language typescript node aot issues", "num": "13183", "d": "12/2016"}, {"title": "reactivefrom ngmodel cause maximum call stack size exceeded", "body": "submitting check one x current behavior using component inside cause browser halts nested instance using created issue bit uncertain problem lies seem happen nested structures simpler nt cause problem plunkr two one works expected one cause browser halts tried writing slimed version caused problems export const redinputcontrolvalueaccessor provide ngvalueaccessor useexisting forwardref gt myinput multi true component moduleid moduleid selector redinput providers myinputcontrolvalueaccessor template export class myinput implements controlvalueaccessor public value writevalue value registeronchange fn registerontouched fn nested found either plunkr expected behavior errors minimal reproduction problem instructions plnkr commented angular version ng browser chrome mac", "num": "13182", "d": "12/2016"}, {"title": "usemap nt known property img", "body": "submitting check one x current behavior attempting use interpolation within usemap attribute contained within img tag template file per spec usemap accepted attribute within img tag console error error uncaught promise error template parse errors ca nt bind usemap since nt known property img example expected behavior expected interpolation provide variable value similar src alt img attributes without error minimal reproduction problem instructions motivation use case changing behavior trying add multiple dynamic image maps page please tell us environment vscode node webpack angular version browser language node aot issues node", "num": "13181", "d": "12/2016"}, {"title": "date distinguish european american format", "body": "submitting check one x current behavior get date api european format june need convert beautiful format instance result jan case actually june matter pipe format choose angular always think first two cyphers date month european formatted date day expected behavior could nice direct date pipe convert european dates minimal reproduction problem instructions datetest date thisdatetest new date thisprojectinfo projectstartdate hardcoded thisdatetest new date datetest date mmm motivation use case changing behavior whenever working european formatted dates need find workarounds could nice way let know angular receive dates european format please tell us environment cordova cli ionic framework version os os x el capitan angular version browser chrome language typescript node aot issues stackoverflow question", "num": "13179", "d": "12/2016"}, {"title": "jsonp callbackname modified wanted", "body": "submitting check one x current behavior jsonp callbackname set expected behavior nice modify jsonp callbackname reason servers nt response right data jsonp callbackname servers need jsonp method get easy modify please angular version lt browser language node aot issues", "num": "13175", "d": "12/2016"}, {"title": "routernavigate ngoninit working", "body": "submitting check one x current behavior import component oninit angularcore import tag tagmodel import location angularcommon import router angularrouter import path configconstant component moduleid moduleid selector myapp templateurl apptemplatehtml export class appcomponent implements oninit constructor private router router private location location ngoninit alert called thisrouternavigate path work thisrouternavigatebyurl path work settimeout gt thisrouternavigate path work navigate thisrouternavigate path works well thisrouternavigatebyurl path works well navigate works called ngoninit nothing throws error messages appears navigate function called ngoninit works well expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment http server nginx lt tornado lt flask angular version browser chrome language typescript node aot issues", "num": "13174", "d": "12/2016"}, {"title": "render hgroup tag", "body": "hi angular team created component use html angular show error log main title subtitle metadata esse minim ipsum labore sunt labore sunt aute ea ullamco magna velit exercitation consectetur est sit nulla ea quis eu exercitation elit velit error log promise rejection template parse errors hgroup known element hgroup angular component verify part module hgroup web component add customelementsschema ngmoduleschema component suppress message error gt main title subtitle musiccomponent zone task promisethen value error template parse errors error template parse errors hgroup known element hgroup angular component verify part module hgroup web component add customelementsschema ngmoduleschema component suppress message error gt main title subtitle musiccomponent templateparserparse runtimecompilercompiletemplate setforeach native compile zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask uncaught promise error template parse errors regard hieu tran", "num": "13172", "d": "12/2016"}, {"body": "ngc nt work typescript yet try downgrading", "d": "12/2016"}, {"body": "tx trying", "d": "12/2016"}, {"body": "perfect tx", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "pls report docs issues", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "seeing condradictory behaviour close create another", "d": "12/2016"}, {"body": "fill issue template also nt save plnkr", "d": "12/2016"}, {"body": "mismatched packages", "d": "12/2016"}, {"body": "pls report docs issues", "d": "12/2016"}, {"body": "done", "d": "12/2016"}, {"body": "think place css rules within host block prevent leakage thus deckare context", "d": "12/2016"}, {"body": "duplicate tltr design", "d": "12/2016"}, {"body": "sorry quick scan existing issues missed one closing", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "related", "d": "12/2016"}, {"body": "fix cc chuckjaz appropriate shims", "d": "12/2016"}, {"body": "related schema property binding templates supposed consumed directives indicated error message", "d": "12/2016"}, {"body": "thx submitting issue pls add reproduction plunkrgithub repo otherwise ca nt much", "d": "12/2016"}, {"body": "u search similar issues like", "d": "12/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "12/2016"}, {"body": "dzmitryshylovich thanks referring similar issues unable locate actual fix", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "dzmitryshylovich thank documentation online resources explains solve issue", "d": "12/2016"}, {"body": "achieve custom route configuration seems like common use case could please open issue angularangulario docs team document thanks", "d": "12/2016"}, {"body": "need import httpmodule", "d": "12/2016"}, {"body": "result router", "d": "12/2016"}, {"body": "pls add repo code", "d": "12/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "12/2016"}, {"body": "tried mock server developer tools wo nt show content received server side", "d": "12/2016"}, {"body": "oh stupid sorry wasting time", "d": "12/2016"}, {"body": "pls add repro plunkr", "d": "12/2016"}, {"body": "validatorspattern nt need add", "d": "12/2016"}, {"body": "aspetko pass string construct regexp startend symbols dzmitryshylovich shows need remove beginning end need flexible behavior pass raw regexp object rather simple string", "d": "12/2016"}, {"body": "thank fast response dzmitryshylovich tytskiy removed pattern recompiling still able reproduce behavior dzmitryshylovich would love create plunkr repo ca nt tytskiy tried like email validatorspattern new regexp internetadresse validatorspattern new regexp hh tt tt pp ss az\u00e4\u00f6\u00fc\u00df\u00e4\u00f6\u00fcaz even whorse", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "aspetko sorry confusion missed use support raw regexp support string regexp added later try nt work create custom validator function first problem enter blanks internet address email address working works expected supposed validate empty value need add please refer docs", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "pls add repro plunkr", "d": "12/2016"}, {"body": "need public api server call request public api server nt know create plunkr issue", "d": "12/2016"}, {"body": "u tried make request using xhr", "d": "12/2016"}, {"body": "yet try", "d": "12/2016"}, {"body": "thx reporting issue angular repo pls reopen", "d": "12/2016"}, {"body": "repo angular", "d": "12/2016"}, {"body": "thx reporting issue pls add small repro plunkr observed vs expected behavior", "d": "12/2016"}, {"body": "would nt even know begin plnkr", "d": "12/2016"}, {"body": "use starting point", "d": "12/2016"}, {"body": "setting repo gained understanding router actually issue code router still ca nt figure works moving thanks", "d": "12/2016"}, {"body": "sounds like duplicate", "d": "12/2016"}, {"body": "dzmitryshylovich right fixed next release", "d": "12/2016"}, {"body": "u pls remove unnecessary stuff plunkr describe observed vs expected behavior", "d": "12/2016"}, {"body": "nt much unnecessary stuff basic nature explained let try rehashing run plunker inspect dom see dropdown important part comment uncomment calc looks like notice top dom dropdown go manually add calc statement dev tools see work let know info provide", "d": "12/2016"}, {"body": "seeing general issues calc top general look bit double check angular issue", "d": "12/2016"}, {"body": "nm guess looking", "d": "12/2016"}, {"body": "possibly duplicate", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "closing duplicate thnx dzmitryshylovich", "d": "12/2016"}, {"body": "undefined u circular dependency imports imports nothing angular", "d": "12/2016"}, {"body": "dzmitryshylovich missed problem relationship modules thank checking issue closed", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "use event instead native called updates select value", "d": "12/2016"}, {"body": "gives results updated plnkr", "d": "12/2016"}, {"body": "expected behavior", "d": "12/2016"}, {"body": "updated plunker added button next select list modelcategory starts default click select list click add option value add pushed function ngmodelchange inside function onchangecategoryselect value add change model modelcategory default model default click button select box value still add update value select box correctly", "d": "12/2016"}, {"body": "expected behavior must manually set select box value work eventtargetvalue thismodelcategory", "d": "12/2016"}, {"body": "two different objects event thismodel must manually set eventtargetvalue thismodelcategory want set automatically", "d": "12/2016"}, {"body": "event selectbox change using actual select box select box value way bindings automatically update selectbox value whenever modelcategory changed correct come change thismodelcategory inside change function update select box value manually set via bug", "d": "12/2016"}, {"body": "wrong repo", "d": "12/2016"}, {"body": "deleted angular release make http service fully compatible standard methods exist promises", "d": "12/2016"}, {"body": "see main reason explained git commit message", "d": "12/2016"}, {"body": "laskoviymishka", "d": "12/2016"}, {"body": "\u4e50\u610f\u5e2e\u52a9 \u6211\u7684\u4e2d\u56fd\u662f\u574f", "d": "12/2016"}, {"body": "laskoviymishka \u6211\u8bf4\u7684\u8bdd\u5f88\u5bb9\u6613\u88ab\u7ffb\u8bd1 lol", "d": "12/2016"}, {"body": "dzmitryshylovich", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "pls add small repro", "d": "12/2016"}, {"body": "guess work", "d": "12/2016"}, {"body": "never mind update angular resolves problem", "d": "12/2016"}, {"body": "month format mm capitalize otherwise means minutes", "d": "12/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "pls copy paste required info comment add small repro typescript angular nt support use", "d": "12/2016"}, {"body": "stated aluan reply currently supported yet thanks voicing support feature well proposed adding although currently rejected unless feel swayed though time use sample implementation even without official support", "d": "12/2016"}, {"body": "dzmitryshylovich updated content created poc poc cut project im working instructions install found git link", "d": "12/2016"}, {"body": "use last decorator kind eg component", "d": "12/2016"}, {"body": "dzmitryshylovich well defeats purpose inheriance inheriance always abstraction override like inheriance like replace", "d": "12/2016"}, {"body": "pls nt spam everywhere see", "d": "12/2016"}, {"body": "dzmitryshylovich really spamming im rising opinion inheriance see way break existing users way add optional parameter user set wants merge way supported", "d": "12/2016"}, {"body": "dzmitryshylovich go sleep got idea one could set every property component one wants get parent example template one could set child like template inherit magic inherit key tell system get value base way systems one dont know however hard implament", "d": "12/2016"}, {"body": "said planning change semantics inheritance moment quite simple replace consider decorators use properties accept array string replace array wholesale b merge c merge deduping logic one solutions going unexpected somebody one likely cause breaking unexpected behaviors existing components current semantics mentioned going stick moment avoid causing unexpected behavior opinionated merging semantic", "d": "12/2016"}, {"body": "robwormald see ok quick question possible set template constructor someting like decorator changed gettemplate work decoretor template change template enum value viewstate changed need add someting trigger export abstract class componenttemplatebase implements itemplatebase afterviewinit contentchild templateref defaulttemplate templateref viewstate defaultviewstate defaultviewstatedefaulttemplate view embeddedviewref", "d": "12/2016"}, {"body": "take look ngtemplateoutlet directive issue tracker suitable support requests please repost issuequestion stackoverflow using tag gitter channel", "d": "12/2016"}, {"body": "anyone gets getting disappointed research indeed possible solve decorator inheritance one could find one style property component however official used may break future however clearly showcases possibilities nt want create simple inherited decorator static properties like template etc anyway happy hacking want simplify repeat code", "d": "12/2016"}, {"body": "tried solution used successfully merge properties including arrays", "d": "12/2016"}, {"body": "dont know posted answer think somehow dide post repost xd got alot inspiration sources internet came import ispresent angularcoresrcfacadelang import idescribereflect describereflect declarationsidescribereflect export function inherit return target function gt let reflect describereflect window reflect let metainformations reflectgetownmetadata annotations target metainformations let parenttarget objectgetprototypeof targetprototype constructor let parentmetainformation reflectgetmetadata annotations parenttarget component template export abstract class templatebasecomponent implements itemplatebase inherit component selector searchbox export class searchboxcomponent extends templatebasecomponent may elegant solution wanted stick orginal decorator extend values child specified one use else value set parent edit united changes let require lodash import idescribereflect describereflect declarationsidescribereflect export function inherit return target function gt let reflect describereflect window reflect let metainformations reflectgetownmetadata annotations target let parenttarget objectgetprototypeof targetprototype constructor let parentmetainformation reflectgetmetadata annotations parenttarget", "d": "12/2016"}, {"body": "native title tag prefix component selectors avoid situations", "d": "12/2016"}, {"body": "dzmitryshylovich oh yes completely forgot thanks reply gon na close issue", "d": "12/2016"}, {"body": "also fail even set explicitly type used keyword used see change available branch repo", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "hi dzmitryshylovich thanks reference however note generic type parameter within constructor work aot example please see ngrxstore library way use injecting problem arises nt use generic class whole type generic want make generic fact want guy one thing able pass aot compilation split common parts code non injectable class extend class inherit metadata anymore way currently see issue aot compiler looks annotation tries resolve constructor types class even subclass class please correct wrong maybe makes sense sort annotation tell compiler resolve constructor types class even base class thanks", "d": "12/2016"}, {"body": "gund automatically make also injectable based inheritance rules decorators classes require non generic constructor arguments dupe combined inheritance", "d": "12/2016"}, {"body": "tbosch yes understand compiler makes class thing need fact instantiating happen one methods becomes sort wrapper around controls methods invoked however preserve semantics original ing necessary di capabilities said thinking way telling ngc compiler assume classes even though extend please keep mind work without problems jit mode purely ngc limitation seems like goes feature request considering think makes sense create another issue feature request still think something like annotation would great use case like ts injectable class testservice noninjectable class testincontextservice extends testservice longer injectable provided anywhere annotation might even nothing action required case work runtime marker compiler", "d": "12/2016"}, {"body": "please fill issue template", "d": "12/2016"}, {"body": "toxicable update issue", "d": "12/2016"}, {"body": "roroco pls add repro plunkr", "d": "12/2016"}, {"body": "dzmitryshylovich hard repro plunkr since must copy paste js nodemodules linux vbox reproduce official angular demo", "d": "12/2016"}, {"body": "roroco u ca nt reproduce plunkr hen reopen", "d": "12/2016"}, {"body": "roroco ran reproduction machine get errors therefore reproduction implies bug angular since hav nt able reproduce please try make minimal reproduction plunkr github repo however assume something mis configured environment rather quick start case dzmitryshylovich said reopen quickstart repo", "d": "12/2016"}, {"body": "toxicable thanks reply disable chrome extensions error raised reenable chrome extension one one found screenshot capture better google cause question remove everything work well", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "message modules services appear console modules services nt hook design use", "d": "12/2016"}, {"body": "ok angular documentation make huge deal putting data access logic constructor may ask modules services nt ngoninit hook design rationale want understand thank", "d": "12/2016"}, {"body": "components initialized framework makes sense hook initialization phase services modules", "d": "12/2016"}, {"body": "thank vicb", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "issue occured fresh installation", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "nt use reactive template driven forms time issue tracker suitable support requests please repost issue stackoverflow using tag", "d": "12/2016"}, {"body": "thanks observation dzmitryshylovich works updated", "d": "12/2016"}, {"body": "also exception plunker also related problem", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "skipped align packages router branch contain minor backward compatibility breaks branch remain backward compatible breaks actually changed release", "d": "12/2016"}, {"body": "thanks reply", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "nothing angular meta tags specified says page cached says nothing js css images etc specify cacheability document using http headers possibility add extra url parameter loading js example jsangularjs nocacherandomnumber", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "pls add small repro", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "yes looks like duplicate sorry searched open issues must missed one", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "johncashmore", "d": "12/2016"}, {"body": "really", "d": "12/2016"}, {"body": "might slack bridge", "d": "12/2016"}, {"body": "johncashmore slack bridge", "d": "12/2016"}, {"body": "yes something clearly really weird turned sorry problems caused", "d": "12/2016"}, {"body": "tbosch vicb fyi", "d": "12/2016"}, {"body": "note showts uses fxshow fxshowxs fxshowgtxs fxshowsm fxshowgtsm fxshowmd fxshowgtmd fxshowlg fxshowgtlg fxshowxl export class showdirective extends basefxdirective implements oninit onchanges ondestroy original dom elements css display style private display flex subscription parent flex container layout changes stored unsubscribe directive destroyed private layoutwatcher subscription input fxshow set show val thiscacheinput show val input fxshowxs set showxs val thiscacheinput showxs val input fxshowgtxs set showgtxs val thiscacheinput showgtxs val input fxshowsm set showsm val thiscacheinput showsm val input fxshowgtsm set showgtsm val thiscacheinput showgtsm val input fxshowmd set showmd val thiscacheinput showmd val input fxshowgtmd set showgtmd val thiscacheinput showgtmd val input fxshowlg set showlg val thiscacheinput showlg val input fxshowgtlg set showgtlg val thiscacheinput showgtlg val input fxshowxl set showxl val thiscacheinput showxl val", "d": "12/2016"}, {"body": "adding description child component created side effect triggering ngif binding fire created angular zone", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "need trigger another cycle change detection works intended", "d": "12/2016"}, {"body": "sadly done ondestroy hook really interests", "d": "12/2016"}, {"body": "onpurpose decision consider basically anything going arrive async would throw proposed idea ngfor already effectively acts like ngif data nt defined simply nt run loop", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "concern updating angular causes app clarity failed patch update nt issue party libraries", "d": "12/2016"}, {"body": "sure issue able use anymore following syntax trackby property mentioned web however official doc trackby function documented edit related", "d": "12/2016"}, {"body": "however official doc trackby function documented really pretty much explains everything", "d": "12/2016"}, {"body": "exactly know misunderstanding origin bit surprise fact trackby function beginning including docs", "d": "12/2016"}, {"body": "right using wrong syntax probably due practices stackoverflow response realize question immediately related issue sorry", "d": "12/2016"}, {"body": "toub error actually exactly designed catch using trackby incorrectly thus getting behavior would expect said nt think considered use case primefaces trackby fn wired internally default tough attempting prevent majority confusion ton poeple always incorrect probably revert change push cc igorminar", "d": "12/2016"}, {"body": "keeping dev warning would useful even nt throw error sure many may using incorrect due incorrect examples internet", "d": "12/2016"}, {"body": "angular nt anything cookies browser responsibility u send request using plain hxr", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fixed problem using withcredentials attribute login request without using others thanks lot", "d": "12/2016"}, {"body": "could u close issue pls thx", "d": "12/2016"}, {"body": "done thank time placed withcredentials attribute map function returned observable bad", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "forgot import operator add line maints work", "d": "12/2016"}, {"body": "hi klinki forget subscribe hi dzmitry please close issue", "d": "12/2016"}, {"body": "jeffreychan u close", "d": "12/2016"}, {"body": "support request gt please submit support request instead see", "d": "12/2016"}, {"body": "could enable routes containing hash sign urls achieved via usehash true app routing ts ie routermoduleforroot yourapproutes usehash true lead browser ignore everything hash sign load application right way", "d": "12/2016"}, {"body": "angular issue need configure backend serve indexhtml matter url requested complicated configure router use hash sign", "d": "12/2016"}, {"body": "resolved adding hash strategy", "d": "12/2016"}, {"body": "afaik angular nt yet compatible typescript due typescript api changes need wait land", "d": "12/2016"}, {"body": "see", "d": "12/2016"}, {"body": "gargtushar u pls close one believe resolved gitter room", "d": "12/2016"}, {"body": "sure", "d": "12/2016"}, {"body": "pls add small repro plunkr", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "must post issue gh true", "d": "12/2016"}, {"body": "williamkoza originally reported angulario repository angularangulario closed redirected repository", "d": "12/2016"}, {"body": "thx dzmitryshylovich", "d": "12/2016"}, {"body": "pb docs right classes easy fix looking working docs", "d": "12/2016"}, {"body": "thank looking try fix", "d": "12/2016"}, {"body": "noticed documentation type decorator also almost empty documentation exists might similar issue current one sure fix", "d": "12/2016"}, {"body": "chuckjaz tbosch nt resolved last week cc hansl", "d": "12/2016"}, {"body": "range errors last night see using cli sumigoma try running clean install instructions angularcli fixed bizarrely nodemodule cache issues nobody knows", "d": "12/2016"}, {"body": "error followed angularcli clean install instructions", "d": "12/2016"}, {"body": "error angularcli node os angular typescript always error angularcli clean install instructions", "d": "12/2016"}, {"body": "make sure include project compiled intended used aot generate error includes reference expression error referring", "d": "12/2016"}, {"body": "note browsertestingmodule compiled leading error soon least one test uses testbed included aot compilation exclude files compilation setting property using thu dec chuck jazdzewski notifications githubcom wrote make sure browsertestingmodule include project compiled browsertestingmodule intended used aot generate error includes provide animationdriver usevalue animationdrivernoop whichnoop reference new noopanimationdriver expression error referring receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "excluding testts file tsconfigjson resolved issue", "d": "12/2016"}, {"body": "timosalm nt work seems like cli completely ignore line running solution copied tsconfigjson root include files ps targeting", "d": "12/2016"}, {"body": "rexthk tsconfigjson typescript configuration file located somewhere root folder must identify path p option", "d": "12/2016"}, {"body": "timosalm right default angular cli puts tsconfigts inside src folder anyway seems simply excluding testts doesnt work case including solve dependency problem", "d": "12/2016"}, {"body": "chuckjaz tbosch excluding testts tsconfigjson indeed appears work repercussions like vscode intellisense spec files looks like intellisense working fine thought vscode reads tsconfigjson hansl angularcli recommended approach", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "called fragments", "d": "12/2016"}, {"body": "dzmitryshylovich fragment attribute links inside angular app said links coming outside non angular app add fragment attribute link want traverse entire html document coming outside insert fragment attribute workaround", "d": "12/2016"}, {"body": "could u pls add small repro punkr u trying accomplish", "d": "12/2016"}, {"body": "think u need provide case", "d": "12/2016"}, {"body": "dzmitryshylovich provide urlresolver sample please find anything documentation file put urlresolver appmodulets maints", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich also trying resolve image url appmodulets code import ngmodule angularcore import browsermodule angularplatformbrowser import appcomponent appcomponent import routing approutingproviders approuting import routes routermodule angularrouter import urlresolver angularcompiler const routes routes ngmodule imports browsermodule routing routermoduleforroot routes usehash true declarations appcomponent providers approutingproviders urlresolver bootstrap appcomponent export class appmodule appcomponentts code import component angularcore import router angularrouter import urlresolver angularcompiler component moduleid moduleid selector myapp templateurl appcomponenthtml export class appcomponent constructor private urlresolver urlresolver providing urlresolver constructor injection urlresolver causing error appcomponenthtml code idea getting error", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "use instead objects", "d": "12/2016"}, {"body": "thank saved lot frustration", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "aha thinking adding months done thanks pointing", "d": "12/2016"}, {"body": "u try use native select amount data", "d": "12/2016"}, {"body": "dzmitryshylovich yes remove seems move quicker", "d": "12/2016"}, {"body": "options directives created setters called methods called debug mode methods called change detection runs compare functions option directive multiple times doubt approach optimized use case better create custom value accessor internal component strategy uses rendering", "d": "12/2016"}, {"body": "kemsky think guide suggested example", "d": "12/2016"}, {"body": "pattern implemented want url linkable source truth going describe ui state url somehow change behavior would breaking change angular api unlikely change pattern may however implement strategy", "d": "12/2016"}, {"body": "robwormald yesterday found new implementation uirouter seems correct way try", "d": "12/2016"}, {"body": "angular router configure outlets routes array nt understand need pass url could work loading components outlet referencing array vsavkin solve multiple components single url could similar robwormald vsavkin", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "nt execute code statically analyzable arrowanonymous functions nt name equal works", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "interesting explains nt work incorrect behavior according spec nt know whether problem lies tsc ngc something nt right", "d": "12/2016"}, {"body": "looking compat table typescript nt seem support think babel support guess possible typescript well suggest filing issue typescript asking support function names type", "d": "12/2016"}, {"body": "thanks however nt seem purely typescriptrelated since use tsc compile following code executed function thisdosomethingname testdosomething works expected function indeed name another thing worth mentioning even code changed fulfill aot requirements still chokes thirdparty libs precompiled typescript case point attempting use exported authproviders providers copy source angular project fix name everything works great however compile source code copy resulting import chokes warning even though supposedly fixed even though emitted javascript contains code weirdest thing started happening upgraded angularcli angular using angularcli angular error", "d": "12/2016"}, {"body": "really odd seem internal changes inadvertently breaking", "d": "12/2016"}, {"body": "u reproduce without ngtoolswebpack", "d": "12/2016"}, {"body": "kind issue solved changing plugin configuration believe issue comes working started happen opened angularcli repo", "d": "12/2016"}, {"body": "well damned removing due scss usage seems worked could bug", "d": "12/2016"}, {"body": "thanks everyone open new issue crosslink", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "take look thanks pointing", "d": "12/2016"}, {"body": "pls reopen", "d": "12/2016"}, {"body": "nt know issue angular pls add small repro plunkr", "d": "12/2016"}, {"body": "sorry nt know plunkr works github repro okay", "d": "12/2016"}, {"body": "need locate issue plunkr ideal u reproduce plunkr issue angular u ca nt issue router lader u use starting point", "d": "12/2016"}, {"body": "give try dynamic reactive form angular route loader works fine", "d": "12/2016"}, {"body": "lazy loaded module nt know address component issue code angular also address pre existing html element good practice prefix component selectors avoid naming collisions", "d": "12/2016"}, {"body": "hi clydin right fixed sorry trouble", "d": "12/2016"}, {"body": "want ask angular could provide nice error tip", "d": "12/2016"}, {"body": "would selector nt existing html element", "d": "12/2016"}, {"body": "wo nt agree even change address component selector inneraddress error msg still btw would close issue sorry make mistake take guys time", "d": "12/2016"}, {"body": "realized updated reflectmetadata package seems bug coming angular sorry", "d": "12/2016"}, {"body": "exact error message upgrading angular nt even use reflectmetadata angular issue please reopen", "d": "12/2016"}, {"body": "also error angular version nativeerror error resolve parameters parser make sure parameters decorated inject valid type annotations parser decorated injectable noannotationerrorbaseerror constructor new noannotationerror dependenciesfor resolvereflectivefactory resolvereflectiveprovider arraymap native resolvereflectiveproviders functionreflectiveinjectorresolve functionreflectiveinjectorresolveandcreate jitcompilerfactorycreatecompiler platformrefbootstrapmodulewithzone platformrefbootstrapmodule webpackrequire packagejson name version description main indexjs scripts build webpack progress postinstall typings install keywords author license isc dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter alertifyjs corejs reflectmetadata rxjs zonejs devdependencies colors cssloader extracttextwebpackplugin htmlwebpackplugin rawloader styleloader tsloader typescript typings webpack", "d": "12/2016"}, {"body": "hi problem upgrade following packagejson json author name toni moreno company toni inc name snmpcollector version repository type git url bugs url license angularcli scripts clean rm rf public start concurrently bra run gt logbraoutlog gt amp ng serve proxyconfig proxyconfjson lint tslint srcts build dev go run buildgo build amp amp ng build build pro go run buildgo buildstatic amp amp ng build prod build npm run clean amp amp npm run build pro postbuild go run buildgo pkgmintar test ng test webdrivermanager update protractor private true dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrap corejs filesaver jquery lodash moment reflectmetadata rxjs systemjs tshelpers zonejs devdependencies angularcompilercli typesfilesaver typesjasmine typeslodash typesnode angularcli codelyzer concurrently jasminecore jasminespecreporter karma karmachromelauncher karmacli karmajasmine karmaremapistanbul protractor tsnode tslint typescript webdrivermanager", "d": "12/2016"}, {"body": "angular really starting frustrate every minor release since something broke codebases dependent packages fe two times sometimes even point release broke builds fe broke router module currently rank angular beta software best really sad", "d": "12/2016"}, {"body": "add situation help clarify bit dependency removing seems work ok situation simple app two routes display simple html page removing removing get described error hope helps", "d": "12/2016"}, {"body": "think order dependencies loaded angular dependencies together one bundle pulled separate js file included first problem gone", "d": "12/2016"}, {"body": "yes problem order need first load polyfills", "d": "12/2016"}, {"body": "put top polyfills runs without error", "d": "12/2016"}, {"body": "confirme import order maints change works fine", "d": "12/2016"}, {"body": "ok seems close issue thanks help", "d": "12/2016"}, {"body": "exact error message nt even use reflectmetadata polyfillbrowserts polyfills import reflectmetadata import import ieshim internet explorer support import added parts necessary project browser support requirements import import import import import import import import import import import import import import import import import see issue import import zonejsdistzone typescript emit helpers polyfill import tshelpers angular issue please reopen", "d": "12/2016"}, {"body": "pls report docs issues", "d": "12/2016"}, {"body": "ok think case documentation meant create stubs question closing", "d": "12/2016"}, {"body": "since default registered part overwrite platform providers register provider root app module", "d": "12/2016"}, {"body": "pkozlowskiopensource currently app bit odd default overwrites provided application case using described already set could always extract logic sets something like feels bit cumbersome", "d": "12/2016"}, {"body": "getting thing immutable js record import record immutable export const personrecord record id name export class person extends personrecord id number name string compiled angular cli ng serve aot trying didnt help removing export record added please aot earlier iteration back changes error somewhat nt recall error add export error changed", "d": "12/2016"}, {"body": "slubowsky known issue", "d": "12/2016"}, {"body": "dzmitryshylovich thanks moved new version cli today nt see issue pages back definitely regression though forever always using aot though occasionally", "d": "12/2016"}, {"body": "possibly related also broke starting", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich specific change would break use case understand reasons code statically analyzable however used work since days wondering regression issue ways know architect around mostly want understand new practice following embarking changes looked cases listed thanks reference way none really match one sure many run several along way rarely problem address currently breaking use case however around decorator validation function mention stand depend libraries frameworks written typescript", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "error reported proper ide", "d": "12/2016"}, {"body": "also probably belongs ts rather angular", "d": "12/2016"}, {"body": "alexsapps ts version u use", "d": "12/2016"}, {"body": "vicb see vague error message use angular aot compiler ts compiler gives specific error maybe understanding nt think ts people make aot produce specific errors dzmitryshylovich think using", "d": "12/2016"}, {"body": "agree alexcastillo project compiled using ts issue", "d": "12/2016"}, {"body": "pls add small repro plunkr steps reproduce expected behavior format code", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "searching since yesterday morning issue never saw ticket yep seems duplicate", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "glad hear thanks alot", "d": "12/2016"}, {"body": "determine module class component must part module intended would say feature request", "d": "12/2016"}, {"body": "dzmitryshylovich makes sense components using need part module far compiler concerned files matter unused unreferenced ts files happen contain components", "d": "12/2016"}, {"body": "u exclude unused files tsconfig", "d": "12/2016"}, {"body": "dzmitryshylovich barrel files complicate class reexported barrel file ignore barrel file well cause problems classes need barrel seems weird compiler try compile absolutely treeshaking aside expect compiler want deal files given explicitly linked given files", "d": "12/2016"}, {"body": "seems weird compiler try compile absolutely compilers work", "d": "12/2016"}, {"body": "fact jit compilation works pretty good evidence compiler need files throwing error instead warning files could excluded harm done talk compilers work day real issue somewhat basic use case asking way least suppress error continue risk coworker attempting remove barrel files could blocking us using blanket excludes ask take look issue originally opened ngtoolswebpack another user error component referenced tests compiler aware files asking compile throwing unrecoverable errors recoverable situations plain", "d": "12/2016"}, {"body": "nt understand components directory nt included project think could feature request currently compiler works also saying works jit reason enough think work aot think need separate files base app modules import sort package manager way solves problems tidies directory makes easier maintain every aspect", "d": "12/2016"}, {"body": "toxicable unused files librarystyle npm module generally ideal usecase something like projectangular shared code npm module components pipes directives services needed make base app communicate backend platform partners want app looks similar uses different home page new component added however pages services needed connect platform might approach maximize reusable code make partner create modules import combination new pieces shared pieces npm module new might import like import overviewcomponent profilecomponent componentshome import authcomponent projectangular blows aot saying since using overviewcomponent projectangular since literally files point would nt expect compiler care unused since file exists inside nodemodules dir project compiler finds complains dies jit works aot works base app works aot changes proof concept partner incredibly small mean imply everything works jit work aot good reason believe", "d": "12/2016"}, {"body": "another example current behaviour nt make sense tests say feature directory component uses content projection would like test functionality creating test component inside file uses component view like use component testing module everything valid great run using angularcli throws nt think aot concerned files", "d": "12/2016"}, {"body": "general rule ngc compile everything tsc compiles try compile every component finds however angular ca nt compile components without related module could change error warning though", "d": "12/2016"}, {"body": "also test wrapper components used testing causes aot blow described would nice aot could ignore components satisfies wildcard expression like testcomponent etc", "d": "12/2016"}, {"body": "alright info seem found workaround case nt fix testwrapper case seems real issue case barrel files importing anything barrel file follows chain things reemitted barrels since pulling components top level analyzing components instead one wanted would still probably better warning understand little better compiler cared components", "d": "12/2016"}, {"body": "makes think correct route primary outlet think correct may docs issue", "d": "12/2016"}, {"body": "vicb works nt work see updated plunker get following error clicking nt work button", "d": "12/2016"}, {"body": "level listdetails works levellist details nt work pb", "d": "12/2016"}, {"body": "second arg sync validator", "d": "12/2016"}, {"body": "dzmitryshylovich nt want sync validator creating promise want simulate ajax request", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich could modify plunkr see referring", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thanks dzmitryshylovich problem second parameter", "d": "12/2016"}, {"body": "dzmitryshylovich observable mandatory add one observable validator example crash error nt subscribe ok", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "use case ie would happy document supported wo actions probably many places framework propagate", "d": "12/2016"}, {"body": "yes hard fix least made clear please", "d": "12/2016"}, {"body": "duplicate pls subscribe updates", "d": "12/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "12/2016"}, {"body": "somebody encounters problem check service app initializer", "d": "12/2016"}, {"body": "lack time probably", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "work localhost make requests url dec pm dzmitry shylovich notifications githubcom wrote gt receiving authored thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "please provide plunker reproducing error", "d": "12/2016"}, {"body": "best could copy plunkr", "d": "12/2016"}, {"body": "followed added error handler getting back", "d": "12/2016"}, {"body": "wbhob try chrome extension allowcontrolalloworigin problem localhost got google maps api able resolve plugin", "d": "12/2016"}, {"body": "wbhob add middleware express specify client allowed access api security browsers something like", "d": "12/2016"}, {"body": "wbhob try turn cors security browser example chrome", "d": "12/2016"}, {"body": "wbhob http service add withcredentials true options get post methods using nodejs app sure specify xhrfields also make sure allow cors server", "d": "12/2016"}, {"body": "wow thanks everyone gon na try right dec velin kerkov notifications githubcom wrote gt wbhob http service add withcredentials true options get post methods using nodejs app sure specify xhrfields also make sure allow cors server receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "wbhob solve issue closed", "d": "12/2016"}, {"body": "yes please close thanks dec pm dzmitry shylovich notifications githubcom wrote gt wbhob solve issue closed receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "pls mark one worked others follow friday december wilson hobbs notifications githubcom wrote yes please close thanks dec pm dzmitry shylovich lt notifications githubcom wrote gt wbhob solve issue closed receiving mentioned reply email directly view github mute thread receiving commented reply email directly view github mute thread lt", "d": "12/2016"}, {"body": "chrome extension worked best think angular squad fix server properly configured running google app engine work dec sudharsanmit notifications githubcom wrote pls mark one worked others follow friday december wilson hobbs notifications githubcom wrote yes please close thanks dec pm dzmitry shylovich lt notifications githubcom wrote gt wbhob solve issue closed receiving mentioned reply email directly view github mute thread receiving commented reply email directly view github mute thread lt receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "wardbell u forgot add probably throw none provided", "d": "12/2016"}, {"body": "would nt publish apps app store want support languages", "d": "12/2016"}, {"body": "clear requiring separate apps per language helping dev process giving developers access feature specific pieces main xml file proposal would remove requirement publish different static app per language", "d": "12/2016"}, {"body": "oops misunderstood aotcompiler angular norm putting together later nt make sense also multiple xmls create nonunique translations create confusion tries help", "d": "12/2016"}, {"body": "sudharsanmit guess would optin would probably help people", "d": "12/2016"}, {"body": "think feature request related feature request support providing translations ngmodule level think modulelevel granularity seems right", "d": "12/2016"}, {"body": "paumayr right going close one duplicate still able provide multiple translations unit ie use default translations provided unit think module author override", "d": "12/2016"}, {"body": "please strip plunker minimal amount code required reproduce issue describe observed vs expected behavior clearly", "d": "12/2016"}, {"body": "vicb greatly simplified plnkr showcase error", "d": "12/2016"}, {"body": "reproduced much much simpler check plunk difference boils order bindings compare keep mind equivalent binding property means replace classes one expression done luck maybe could modify framework executed bindings using one element playing fire long order binding execution deterministic framework would stick one", "d": "12/2016"}, {"body": "pkozlowskiopensource closed", "d": "12/2016"}, {"body": "vicb could close make compiler deterministic", "d": "12/2016"}, {"body": "ok thanks explanation originally thought worked like serverside language would hope helps someone else", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "method accepts sevelar args see link u disable without triggering subscriptions example", "d": "12/2016"}, {"body": "dzmitryshylovich work expected use project time dozens inputs need work way may result large component class see make generic utility allows make simple mapping inputs disable", "d": "12/2016"}, {"body": "created generic utility function used like", "d": "12/2016"}, {"body": "cool could u close issue pls thx", "d": "12/2016"}, {"body": "problem created utility similar noamichael however nt seem work nested forms following structure controls required root form radio subform radio c subform radio subform radio b subform radio button selected sibling subform disabled example selected everything disabled simple scenario works problems complex interaction consider following steps select reveal disabled select reveal disabled complete entire form select everything disabled select form state step triggered events cause disabled immediately reenabled cascading event causes form seems calls require nested radio buttons need recalculate corresponding subform status parent reenabled however cascading effect additional events fire causing controls disabled become reenabled curious anyone else run problem think use case nested forms pretty common sure solved perhaps way enabledisable forms following constraints form control enableddisabled emit control form enabledisable fire cascading happens forms disabled step become reenabled", "d": "12/2016"}, {"body": "pmulac case seems simple compared looked may able use manually update subforms validity disabled state instead relying also think use case made generic like mine pass tree structure function manage creating subscribers love angular think need better documentation complex form definitions", "d": "12/2016"}, {"body": "agree throw report error case said libraries really prefix stuff", "d": "12/2016"}, {"body": "pkozlowskiopensource ended pipe", "d": "12/2016"}, {"body": "sure think done avoid error", "d": "12/2016"}, {"body": "hi dzmitryshylovich motivation ngmodel current behavior explained nicely ngmodel forces additional change detection run inputs change eg mymodelvalid ie export element used template normally would result expressions use exported directive old value dirty checked common case added second change detection run still wondering whether particular case described issue addressed least maybe described caveat somewhere angular documentation thank mykola", "d": "12/2016"}, {"body": "recently saw related issue using values template placed remain old placed updated", "d": "12/2016"}, {"body": "better add repro close", "d": "12/2016"}, {"body": "exactly need take webpack project described run see problem", "d": "12/2016"}, {"body": "generated js", "d": "12/2016"}, {"body": "vicb talking project see property file mentioned example shows problem see directory result see directory files direcory result want files also part result project set property file remove property directory full files please reopen issue thanks", "d": "12/2016"}, {"body": "indeed contain generated files", "d": "12/2016"}, {"body": "issue call actually stripped version function copied remove emit part", "d": "12/2016"}, {"body": "thank vicb", "d": "12/2016"}, {"body": "nt u use router data arbitrary properties", "d": "12/2016"}, {"body": "well guess real reason use data property since usage error might well close bug", "d": "12/2016"}, {"body": "problem apparently still exists using router data information edited issue accordingly", "d": "12/2016"}, {"body": "work simple object", "d": "12/2016"}, {"body": "works simple objects use instances concrete typescript objects use case", "d": "12/2016"}, {"body": "chuckjaz would say compiler bug", "d": "12/2016"}, {"body": "angular cli currently nt support working new release cli support coming keeping bug open verify issue new cli release", "d": "12/2016"}, {"body": "issue cli error exists main project use angular cli try project bug triggered object instance added route data class imported file containing route definition dezember mez schrieb chuck jazdzewski notifications githubcom angular cli currently nt support working new release cli support coming keeping bug open verify issue new cli release receiving modified openclose state reply email directly view github diese nachricht wurde von meinem androidmobiltelefon mit mail gesendet", "d": "12/2016"}, {"body": "pulling tbosch investigation issue metadataresolver tries access checks directive try object metadata instead using constructor uses instance fails sure blocker opinion people using instances weird nt respect schema look directives everywhere tobias commit creating failure actual error point stack", "d": "12/2016"}, {"body": "marcuskrahl acknowledged hans determined thing tbosch looking", "d": "12/2016"}, {"body": "also confirm getting error versions nt fields using example causing issues sure webpack thing something else line falls chuckjaz say tbosch looking mean looking", "d": "12/2016"}, {"body": "angular version u need", "d": "12/2016"}, {"body": "thanks quick reply issue solved explicitly supposed solved way ionic defines angular version default nt know work manual angular update", "d": "12/2016"}, {"body": "issue solved explicitly yeap", "d": "12/2016"}, {"body": "oh ok let give try", "d": "12/2016"}, {"body": "neah nt work fails like ionicappscript task build typeerror read property parse undefined guess head ionic repo request upgrade quickly possible thanks", "d": "12/2016"}, {"body": "dabalyan closed", "d": "12/2016"}, {"body": "dzmitryshylovich sorry late reply ionic guys still nt relaeased new version updated angular think closed btw nt know surface", "d": "12/2016"}, {"body": "dabalyan close pls feel free reopen wo nt fixed new ionic release", "d": "12/2016"}, {"body": "pls add small repro plunkr without ionic steps reproduce expected behavior", "d": "12/2016"}, {"body": "think expected behavior element nt exist part form data use instead stay part form", "d": "12/2016"}, {"body": "zoechi exactly point want exclude data part form still getting sent hidden ngif behaving way expected dzmitryshylovich add soon", "d": "12/2016"}, {"body": "checkout plunkr plunker example hit signup form data expected account object consolelog ngif functions hidden true case forms replicating original issue input value name fields opened filled fields cleared name two fields unrendered hidden clicked submit see console inspecting html elements rendered ngif behavior nt know elements stored input values", "d": "12/2016"}, {"body": "sudharsanmit think simply view directive nothing reactive form potential solution use case", "d": "12/2016"}, {"body": "ngif powerful view directive takes element rendered rendered even part json pls go example provided bug workaround ngif guarantee element even part form developer never expected code tuesday december oleksandr tytskyi notifications githubcom wrote sudharsanmit think ngif simple view directive nothing reactive form potential solution use case receiving mentioned reply email directly view github mute thread lt", "d": "12/2016"}, {"body": "sudharsanmit changes forms displayed data contains ie data controls view way around callback still fired data regarding reactive forms angular kind forms template driven reactive forms using reactive forms approach see works intended", "d": "12/2016"}, {"body": "currently call routercreateurltree routernavigate routerlink call hood supply array commands applied current url create new one asking new command modify matrix params activated route something like sure valuable considering always implement command something like vicb think", "d": "12/2016"}, {"body": "approach add update subtract", "d": "12/2016"}, {"body": "use functions metadata code statically analyzable", "d": "12/2016"}, {"body": "see", "d": "12/2016"}, {"body": "angular supports lazy loading via ie inject call get able create new instances ngmodule angular entry point bootstrap lazy loaded code always instance want lazy loading third party code use existing mechanisms like work independently angular", "d": "12/2016"}, {"body": "u make request using plain hxrfetch compare results", "d": "12/2016"}, {"body": "hello using npm package based xmlhttprequest promise package provided password granttype mean get token providing username password order get token password granttype also provide clientid clientsecret implemented authorization basic header request message headers pasting message sequence corresponding cors preflight session reference options round options host connection keepalive accesscontrolrequestmethod post origin useragent linux android nexus khtml like gecko mobile accesscontrolrequestheaders authorization accept referer acceptencoding gzip deflate sdch br acceptlanguage enus en de es fr zhcn zhtw ok xframeoptions deny xcontenttypeoptions nosniff xxssprotection modeblock accesscontrolalloworigin accesscontrolallowcredentials true accesscontrolmaxage accesscontrolallowmethods get options head post accesscontrolallowheaders acceptcharset authorization origin accept useragent acceptencoding acceptlanguage contentlength acceptdatetime contenttype contentlength date mon dec gmt server carbon server post round post host connection keepalive contentlength accept applicationjson applicationxwwwformurlencoded origin useragent linux android nexus khtml like gecko mobile authorization basic contenttype applicationxwwwformurlencoded referer acceptencoding gzip deflate br acceptlanguage enus en de es fr zhcn zhtw ok xframeoptions deny xcontenttypeoptions nosniff xxssprotection modeblock accesscontrolalloworigin accesscontrolallowcredentials true accesscontrolexposeheaders acceptcharset authorization origin accept useragent acceptencoding acceptlanguage contentlength acceptdatetime contenttype cachecontrol nostore date mon dec gmt pragma nocache contenttype applicationjson contentlength server carbon server parsed message body cut access token clearance accesstoken expiresin refreshtoken tokentype bearer", "d": "12/2016"}, {"body": "realize typo original issue title authentication authorization", "d": "12/2016"}, {"body": "jingzhou hello still helpful without reproduction asking u tried make request using plain xhr angular nt anything headers", "d": "12/2016"}, {"body": "well admit quite familiar xhr directly using xhr said using npm package based xhr excerpts implements package till final xmlhttprequest call result success see message printout initial calling web ionviewwillenter thislf new formgroup supports alphabets numbers special characters except underscore dash min max characters username new formcontrol validatorsrequired validatorspattern password supports special characters underscore dash min length max charters password new formcontrol validatorsrequired validatorspattern amp public login provider implementation public static fetch user string pass string boolean let ret true implementation gettoken make request behalf user credentials get acces token param string username param string password return promise ownerflowprototypegettoken function username password options var self options extend thisclientoptions options return thisclientrequest requestoptions url optionsaccesstokenuri method post headers extend defaultheaders authorization auth optionsclientid optionsclientsecret body scope sanitizescope optionsscopes username username password password granttype password options function data return selfclientcreatetoken data implementation request using builtin request method automatically attempt parse response param object options return promise function options var url optionsurl var body querystringstringify optionsbody var query querystringstringify optionsquery query url urlindexof amp query return thisrequest optionsmethod url body optionsheaders function res var body parseresponsebody resbody var autherr getautherror body implementation request final call xhr xmlhttprequest param string method param string url param string body param object headers returns promise moduleexports function request method url body headers return new promise function resolve reject var xhr new windowxmlhttprequest", "d": "12/2016"}, {"body": "following implementation initial call webpage provider implementation display implementation sign trace back previous provider public static sign opt requestoptions requestoptions original requestoptions return worest scenario let res requestoptions opt user signed token expired debugger debugger tk gt tk refresh somehow failed gt useranonymous true debugger useranonymous debugger res opt debugger return res implementation sign npm package sign standardised request object user authentication information param object requestobject return object function requestobject thisaccesstoken throw new error unable sign without access token requestobjectheaders requestobjectheaders thistokentype bearer requestobjectheadersauthorization bearer thisaccesstoken else var parts requestobjecturlsplit var token accesstoken thisaccesstoken var url parts replace amp accesstoken amp var fragment parts parts return requestobject", "d": "12/2016"}, {"body": "angular nt anything headers well true http manipulate message headers talking xhr handling cors session invisible calling client happens automatically call", "d": "12/2016"}, {"body": "seems related", "d": "12/2016"}, {"body": "please add repro plunker otherwise help describe clearly observed vs desired behavior", "d": "12/2016"}, {"body": "see", "d": "12/2016"}, {"body": "big thing notice moduleid component change modileid typescript wo nt compile well aot compiler running ngc yields following error error error find name module check sandboxangularmvcangularmvcnodemodules tsctypecheck sandboxangularmvcangularmvcnodemodules sandboxangularmvcangularmvcnodemodules processtickcallback modulerunmain run startup compilation failed using following repo", "d": "12/2016"}, {"body": "u use systemjs webpack", "d": "12/2016"}, {"body": "systemjs", "d": "12/2016"}, {"body": "added following component allowed debug still unable compile ngc get following error error running compiler error error encountered resolving symbol values statically reference local nonexported symbol module consider exporting symbol position original ts file resolving symbol todolistcomponent sandboxangularmvcangularmvcappcomponentstodolisttodolistcomponentts positionalerror sandboxangularmvcangularmvcnodemodules simplifyincontext sandboxangularmvcangularmvcnodemodules staticreflectorsimplify sandboxangularmvcangularmvcnodemodules staticreflectorannotations sandboxangularmvcangularmvcnodemodules ngmoduleresolverresolve sandboxangularmvcangularmvcnodemodules compilemetadataresolverloadngmodulemetadata sandboxangularmvcangularmvcnodemodules compilemetadataresolvergetunloadedngmodulemetadata sandboxangularmvcangularmvcnodemodules addngmodule sandboxangularmvcangularmvcnodemodules sandboxangularmvcangularmvcnodemodules arrayforeach native compilation failed", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "skendrot one reasons like deal moduleid useful development instead host test server multiple folders see details quick start answers stackoverflow meaning moduleid", "d": "12/2016"}, {"body": "yes know bug see btw angularcli magic nt need using really fix closing duplicate", "d": "12/2016"}, {"body": "actually nothing linked bug discover add typesnode packages believe noted documentation tbosch", "d": "12/2016"}, {"body": "one also broken", "d": "12/2016"}, {"body": "fwiw seem work chrome specifically broke", "d": "12/2016"}, {"body": "please explain error facing aswell provide browser versions also works mine chrome edge probably latest version", "d": "12/2016"}, {"body": "also nt work chrome nexus preview displays loading error message typescript transpiling commonjs consider setting module system typescriptoptions transpile directly systemregister format error systemjs typeorfunc undefined reflectioncapabilitiesloadmodules jitcompilercompilemoduleandcomponents jitcompilerprototypebootstrapmodulewithzone platformref stack trace systemjs typeorfunc undefined reflectioncapabilitiesloadmodules jitcompilercompilemoduleandcomponents jitcompilerprototypebootstrapmodulewithzone platformref", "d": "12/2016"}, {"body": "chrome windows working edge also works firefox still broken", "d": "12/2016"}, {"body": "pls reopen", "d": "12/2016"}, {"body": "looks like issue mm parsed tested edge expected values come run chromechecking actual time case result expected case result expected case result expected see appears replace new instance update tried presets look like work fine referance name pass value case result expected case result expected case result expected case result expected case result expected probably something wrong mm parsed something else anyway hope helps", "d": "12/2016"}, {"body": "bug ie duplicate", "d": "12/2016"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "12/2016"}, {"body": "nt work", "d": "12/2016"}, {"body": "yes \u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435 \u0434\u0435\u043a\u0430\u0431\u0440\u044f \u0433 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c matt distefano \u043d\u0430\u043f\u0438\u0441\u0430\u043b dispatchevent contentinput input nt work receiving authored thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "first guess second shoud async well case wait zone gets stable second property mapped trying compare string number could look live example beforeeach fakeasync gt fakeasync tick first note fixture testbedcreatecomponent testcomponent comp fixturecomponentinstance submitspy spyon compformsubmit emit modify message fakeasync gt fakeasync tick const expectedcontent longest content const expectedrating", "d": "12/2016"}, {"body": "alexzuza oh god works think problem first initialisation thank update also somebody problem obligatory case", "d": "12/2016"}, {"body": "recent performance optimization nt first exit zone enter plain dom events like works fine platform integrates correctly zonejs component also created angular zone zonejs take care calling handler inside angular zone well real question electron integrating zone initial component created need reproduction works fine universal browser webworkers", "d": "12/2016"}, {"body": "ie seems likely problem electron integration one using", "d": "12/2016"}, {"body": "robwormald look created", "d": "12/2016"}, {"body": "going try create minimal repro tomorrow time", "d": "12/2016"}, {"body": "using integrations angularelectron repo date seems inactive", "d": "12/2016"}, {"body": "issue appears coming way importing zonejs using call import tried script tag working expected closing issue", "d": "12/2016"}, {"body": "case better paging model current page total component render model way changes paging model propagated correctly", "d": "12/2016"}, {"body": "works expected", "d": "12/2016"}, {"body": "linusbrolin change config following", "d": "12/2016"}, {"body": "schippie tried nt make difference", "d": "12/2016"}, {"body": "linusbrolin odd currently using configuration angular working", "d": "12/2016"}, {"body": "schippie yeah found problem project use gulpscript compiling due alot assets libs copied andor compiled aswell however rollup gulpscript seems produce error weird posted gulpscript", "d": "12/2016"}, {"body": "cc jlinclgx", "d": "12/2016"}, {"body": "first call canactivate return false component nt load first time second time route also mechanism instanciation fire", "d": "12/2016"}, {"body": "williamkoza right second time guard runs returns true expect second check returns true result rendering component see work start end nonroot path redirect ends root example try variation plunker click go something like get click refresh link reload app url still type guard redirects url already component renders time", "d": "12/2016"}, {"body": "unfortunately hard reproduce issue plunker real issue ran real application navigate canactivate guard redirects using go root path root component canactivate guard root component render promise fulfilled success even though root component render", "d": "12/2016"}, {"body": "nertzy even harder fix without repro use case redirect", "d": "12/2016"}, {"body": "also seeing issue well steps reproduce nertzy mentioned application canactivate guard login page redirect home page user already logged home page guards similar issue mentioned home page render promise fulfilled success using angular angularrouter however code works flawlessly angularrouter angular nertzy version angularrouter using using try downgrading see works", "d": "12/2016"}, {"body": "zaksyed u add small repro", "d": "12/2016"}, {"body": "nertzy please check code initial web app load symptoms accessingredirecting guarded route initial navigation cancelled another redirected guarded path component never rendered", "d": "12/2016"}, {"body": "good already launched app click link navigates guarded route app start paste direct url guard page try achieve app starts redirects change url proper root url component nt load local code close trying reproduce try access urlguard start sorry plunker", "d": "12/2016"}, {"body": "icu supported xliff format known limitation would help someone investigate icu messages serialized xliff thelgevold got", "d": "12/2016"}, {"body": "vicb hm interesting appears xmb might limitation least get error unsupported trying compile xmb", "d": "12/2016"}, {"body": "assuming limitation compiler support extracting evaluating expressions limitation imposed xml formats right", "d": "12/2016"}, {"body": "xmb work used internally google aot xmb generated ids different issue yet figured serialize icu message xlif figured move forward see source code", "d": "12/2016"}, {"body": "vicb thanks info guess closed since probably tracking elsewhere bit curious people getting xmb work though tried loading xmb file following approach outlined xlif files ends throwing error makes sense look source guide seems like switches similar xlf vs xmb nt see work load xmbs", "d": "12/2016"}, {"body": "cuases issue related", "d": "12/2016"}, {"body": "update nt work either eg following nt work workaround add click handler call navigate second time first one completes", "d": "12/2016"}, {"body": "please provide quick repro thanks", "d": "12/2016"}, {"body": "created new project latest cli added components explained please take look edit tried use fails trying run anyway copied contents deployed manually live demo", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "vsavkin book says also remove segments setting null routernavigate outlets popup null never set path outlet case use help", "d": "12/2016"}, {"body": "williamkoza seems work using outlet found docs makes sense name used render route unnamed outlet outlet name primary works perfect thanks lot believe issue still stands one gotcha real application works specifying empty string first parameter", "d": "12/2016"}, {"body": "cc robwormald", "d": "12/2016"}, {"body": "dzmitryshylovich could ngrxstore issue", "d": "12/2016"}, {"body": "would guess ngrxstore needs republish bug metadata collector produced metadatajson files missing things", "d": "12/2016"}, {"body": "metadata loaded compiler throw must root cause metadata still works issue applicable", "d": "12/2016"}, {"body": "mmrath could try reproduce bug simpler setup less dependencies angular amp store would help thanks", "d": "12/2016"}, {"body": "issue see analysis wrote problem workarounds case nt apply description issue pr tracking work fix regression", "d": "12/2016"}, {"body": "ca nt bind formgroup since nt known property form means nt import", "d": "12/2016"}, {"body": "dzmitryshylovich nt work", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "angular support typescript yet", "d": "12/2016"}, {"body": "issue angular typescript verions", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "everyone would love use libraries frameworks without dependencies realistic could nt build reasonably complex structure ca nt build smaller primitives dependencies stay managing dependencies part game agree managing dependencies hard sometimes go conflicts hard resolve particular case things made harder necessary party libraries chosen use declaring peer dependency zonejs using directly nt zone angular peer dependency point redeclaring lib uses basic functionality rxjs declares restrictive peer dependency either use range drop peer dependency altogether guilty faults cases issues fixed corresponding library igorminar probably one things documented publish library guide could gladly contribute based work ngbootstrap", "d": "12/2016"}, {"body": "fine library providers able write code without dependencies guys providing documentation achieve going raise one bug project link together let see owners thinks well", "d": "12/2016"}, {"body": "spending couple days investigating issue say understand happening calls passed constructor initialized however still makes think conceptual issue mental model templates follows template block code defined one place instantiated another even multiple places context well injector template depend initialized placesplaces template meaning case parent view template defined initialized nt mechanism provided framework change injector instance least nt public api tried implementing scenario using instead provide injector instance behavior remains due reasons template parent view template defined see options allow accept injector another parameter change behavior inferring injector template inserted nt agree could show handle cases scenario possible implement researching issue came across explanation mi\u0161ko seems confirm assumptions sorry wordy issue really important trying provide much context", "d": "12/2016"}, {"body": "instantiating template different place still creates logically place user defined implications dependency injection queries assumption allows us important optimizations eg generate queries instead matching runtime sorry wo nt change near future solve case take advantage view locals see property", "d": "12/2016"}, {"body": "tbosch unfortunately expecting answer however think allowing accept injector another parameter hurt performance right", "d": "12/2016"}, {"body": "see thread", "d": "12/2016"}, {"body": "nt found issue posted new one sorry ok design explained documentation currently doc says refer template reference variable anywhere current template emphasis original", "d": "12/2016"}, {"body": "hristokostov documentation referring please fix", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "angulario think reopened", "d": "12/2016"}, {"body": "angular strips comments template repro", "d": "12/2016"}, {"body": "please try", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "please fill issue template issue may clsoed without investigation", "d": "12/2016"}, {"body": "toxicable issue read angular code find typo file angularcoresrcapplicationrefts thecreateplatformfactory faction parameter parentplaformfactory maybe unnecessarily feedback sorry", "d": "12/2016"}, {"body": "typo still considered issue template reason would suggest use", "d": "12/2016"}, {"body": "angular nt know anything sass issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "said dzmitryshylovich angular know sass uses css internally however possible use sass loader done ex cli however bug report used issues use either gitter stack overflow support thanks", "d": "12/2016"}, {"body": "issue angular issue loader however use part metadata able use relative paths component aside would suggest taking look maybe using result things like nonissue", "d": "12/2016"}, {"body": "see help try stack overflow gitter thanks", "d": "12/2016"}, {"body": "apparently angular issue thanks much guys", "d": "12/2016"}, {"body": "options added parent component select direct descendant reproduce behavior wrapping", "d": "12/2016"}, {"body": "fair work long adding parent component service produces options dropdown list try report back previous issues still stand", "d": "12/2016"}, {"body": "previous issues still stand u pls update plunkr clear exactly nt work expected behavior", "d": "12/2016"}, {"body": "updated original post plunkr", "d": "12/2016"}, {"body": "probably want note shorthand property dom sure works case sure many id supposed unique duplicated different els plunker", "d": "12/2016"}, {"body": "yeah totally posted without trying right updated plunkr future please nt close issues without trying fix first thanks", "d": "12/2016"}, {"body": "future remember kind make homework posting issues provide support read previous message carefully double check plunker fix issue even thank done", "d": "12/2016"}, {"body": "root cause got multiple elements dom one another one custom component element easy workaround use property name different explicitly remove id native element component sitting vicb find rather surprising shadow binding native properties directive input name equals property name nt components took surprise something would expect would know explain reasoning behind", "d": "12/2016"}, {"body": "nt trying rude look new plunk nowhere repeated value nt make difference whatsoever issues till persists link case got wrong last time also issues multiple matching ids default browser behavior would interact lastadded element matching id thus least one would changing", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fair enough sorry trouble", "d": "12/2016"}, {"body": "u add small repro plunkr", "d": "12/2016"}, {"body": "looks like chrome issue", "d": "12/2016"}, {"body": "thanks quick response problem nt chrome cancels request ff well error response object nt information chrome ff try setup simple plunker login form another page unless post form https endpoint respond location header url http wo nt good", "d": "12/2016"}, {"body": "ok u try make request using plain xhr fetch api compare results", "d": "12/2016"}, {"body": "ok attempt post back details", "d": "12/2016"}, {"body": "looks like xhr bug chrome filed bug chromium case anyone else runs wants keep track link", "d": "12/2016"}, {"body": "good related angular close issue pls thx", "d": "12/2016"}, {"body": "show us ngmodule conf routermodulefor plunker", "d": "12/2016"}, {"body": "pls add small repro plunkr steps reproduce expected behavior", "d": "12/2016"}, {"body": "nt think breaking changes added yet believe one team planned requiring typescript gt source", "d": "12/2016"}, {"body": "nt show anything since breaking changes still know least one breaking change new release train ts update hence make sure go better overview versioning releasing strategy", "d": "12/2016"}, {"body": "gotcha thanks", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "see", "d": "12/2016"}, {"body": "able get class metadata able update templateurl key annotations metadata nt exist aot compilation", "d": "12/2016"}, {"body": "able fetch component metadata using window reflect object constructor component class", "d": "12/2016"}, {"body": "think may looking something like", "d": "12/2016"}, {"body": "trying implement", "d": "12/2016"}, {"body": "thank feature request unfortunately able make change would break ability applications compiled ahead time drives much optimizations code size reduction effort improve ability dynamically select components runtime introducing address much could changing template dynamically", "d": "12/2016"}, {"body": "pls reopen", "d": "12/2016"}, {"body": "vasuneetarya believe looking documentation incomplete deficient please consider reported issue documentation recommended dzmitryshylovich", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "duplicate indeed let centralize discussion thnx dzmitryshylovich", "d": "12/2016"}, {"body": "use closing already supported", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "indeed bolota close one pls thx", "d": "12/2016"}, {"body": "something clear u docs pls reopen", "d": "12/2016"}, {"body": "path handling ngc brittle assumes certain directory layout take us fix lack right testing harness test ngc project setups build tools meantime include folder src", "d": "12/2016"}, {"body": "pls add small repro plunkr", "d": "12/2016"}, {"body": "dzmitryshylovich would bit challenging us fully simulate happening plunkr given api requirements post end setting chuckjaz could provide url working dev server however security team wants restrict ips access way get nonpublic contact google angular employees enable hit project assess issue", "d": "12/2016"}, {"body": "make requests public api axample using", "d": "12/2016"}, {"body": "follow team working site busy wrapping critical tasks delivery date midjanuary nt set aside developer create plunkr repro could still provide url dev site could restrict allowed ips think management hoping get contact google employee directly provide google employees frequent issues otherwise may spend time personally setting plunkr replicate holidays", "d": "12/2016"}, {"body": "u know aot webpack plugin", "d": "12/2016"}, {"body": "dzmitryshylovich talking ngtoolswebpack know slight issue based completely looking code appears plugin supports compiling single project time setup actually three independent angular applications loaded via crm build simultaneously produce single vendors module currently looking alternative build processes may try compile project modules via ngc use webpack bundling", "d": "12/2016"}, {"body": "talking ngtoolswebpack yeap", "d": "12/2016"}, {"body": "created example project issue currently works long run ngc manually webpack would like get working possible", "d": "12/2016"}, {"body": "sorry drop replacement meant work command line party tools use typescript api directly best shot use also get things like watch mode eventually nt support right could please file issue", "d": "12/2016"}, {"body": "pls add small repro plunkr", "d": "12/2016"}, {"body": "hmm sorry nt know plunkr good possible emulate subdirectories", "d": "12/2016"}, {"body": "please note means might missing errors could releasing version angular aot compatible", "d": "12/2016"}, {"body": "might related get aot compilation error since updated project node", "d": "12/2016"}, {"body": "chuckjaz please look", "d": "12/2016"}, {"body": "discussion chuck tobias seems like error inconvenience although still fix wrt basically exporting right thing static member value exported would create invalid factory users right encountering either use noop animationdriver stop try testbrowser stop normally symptom including many files excluding test code", "d": "12/2016"}, {"body": "hansl probably later case thanks quick feedback", "d": "12/2016"}, {"body": "closing issue since fixed bizarre failure shows reopen let us know", "d": "12/2016"}, {"body": "added option one way improve problem see long term way make fast incremental compilation large application split multiple compilation units", "d": "12/2016"}, {"body": "thanks alexeagle shaved seconds build takes seconds run run takes seconds going go ahead run aot dev prod running tsc directly would nt save much time seconds ngc rollup still seems bit slow build hello world app", "d": "12/2016"}, {"body": "tracking issue watch mode", "d": "12/2016"}, {"body": "sounds like systemjs configuration issue", "d": "12/2016"}, {"body": "idea address config issue", "d": "12/2016"}, {"body": "found resolution manually add line systemjsconfigjs file angular npm angular everything worked expected", "d": "12/2016"}, {"body": "good close issue pls thx", "d": "12/2016"}, {"body": "version angular contrary angular got plans adding exposing general purpose utility methods plenty libraries deep copy objects already thnx suggestion going pass", "d": "12/2016"}, {"body": "pls add small repro plunkr clear code snippets u trying accomplish", "d": "12/2016"}, {"body": "think op wants output products two columns one possible workaround data transformation array arrays component passing template since angular treats html code domnodes pieces text requested feature probably gon na supported", "d": "12/2016"}, {"body": "sorry unlikely workaround transform array first compiler relies fact elements well balanced", "d": "12/2016"}, {"body": "oh yep remember already fixed", "d": "12/2016"}, {"body": "working", "d": "12/2016"}, {"body": "vicb prints print happens try plnkr foornbar prints foo bar print foo bar user came issue gitter misunderstanding something", "d": "12/2016"}, {"body": "try favourite html editor browser", "d": "12/2016"}, {"body": "tl dr want new line displayed resulting page need use unless misunderstanding problem question", "d": "12/2016"}, {"body": "already fixed", "d": "12/2016"}, {"body": "dzmitryshylovich idiotic question", "d": "12/2016"}, {"body": "please include minimal repro lot people using router guess configuration error project", "d": "12/2016"}, {"body": "hi managed aot manage scss pug html css refactored project precompile pug scss files run aot works thank help", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "already fixed update angular version", "d": "12/2016"}, {"body": "yeah updated router working fine thanks alot", "d": "12/2016"}, {"body": "actually works expected know ideal think already created issue could please make sure correctly documented angularangulario create issue otherwise thanks", "d": "12/2016"}, {"body": "vicb actually works consistent works ok need use decorator constructor case hard understand use remember three different form ok ok class ok tricky complicated imho", "d": "12/2016"}, {"body": "submitted request doc thanks vicb", "d": "12/2016"}, {"body": "olegdunkan could please ask find original issue link one thanks", "d": "12/2016"}, {"body": "ref", "d": "12/2016"}, {"body": "vicb sorry asleep different time zones", "d": "12/2016"}, {"body": "pls add small repro plunkr", "d": "12/2016"}, {"body": "thanks much suggestion dzmitryshylovich implemented plunkr made realize nt use right way get route params di instead using method parameters actually bug closing", "d": "12/2016"}, {"body": "see", "d": "12/2016"}, {"body": "ooops thanks dzmitryshylovich", "d": "12/2016"}, {"body": "sure understand trying problem could attach exemple try describe use case precisely thanks", "d": "12/2016"}, {"body": "make video progress bar first setinterval click pause stop ca nt clearinterval", "d": "12/2016"}, {"body": "upload wrong picture looking forward reply thanks", "d": "12/2016"}, {"body": "first trying constructive reminds little fiber trying achieve rant investigate could beneficialpossible us obviously use different model preact etc possible could see improvements seriously mean targets behind always better better priority edit feel like need add priorities priorities priorities", "d": "12/2016"}, {"body": "vicb first question answer issue check solve issue exists initial impression majority startup time slow devices nondom related stuff highly optimized touching dom majority cost appears straight js parse time tag would added", "d": "12/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "12/2016"}, {"body": "ad wipeout client bootstrap real world issue us using universal hydration proposal solve current workaround gets us partway moving server dom position client rendered dom outsmart ad verification services watch dom mutations hiding ad upon client bootstrap big thumbs optin hydration", "d": "12/2016"}, {"body": "lgtm keep mind huge problem js frameworks angular solution great win comparing different ssr solutions real solution ads actually work together js frameworks never happen amp see would implemented rewriting selecting root element providing different render path async definitely problem promises due microtask observables return synchronously client assume batched data sent server client gives us results immediately universal need data available client synchronously anyways reuse server http responses js var res data ok var api rxobservableof res var promiseresolve res var vm var apisubscribe function data vm data function data data consolelog vm data ok consolelog", "d": "12/2016"}, {"body": "alternative design would provide alternate renderer would extend rather modifying behave differently depending value", "d": "12/2016"}, {"body": "domhydrationrenderer", "d": "12/2016"}, {"body": "two things angulario might also benefit put bunch code prevented flickering caused content wiped renderer code initializing components wonder something amp solution could leverage universal would good look go creative solutionworkaround", "d": "12/2016"}, {"body": "either solution beneficial vital us move forward", "d": "12/2016"}, {"body": "still make work generically using auto generated ids based place element hierarchy based creation order think think well decide", "d": "12/2016"}, {"body": "kara might thopughts see", "d": "12/2016"}, {"body": "vicb kara valid scenarios nt understand bootstrap recognizes specificity issues bug implementing", "d": "12/2016"}, {"body": "pretty easy create directive required functionality", "d": "12/2016"}, {"body": "nt think want bring back least going close one happy reconsider reallife usecases surface", "d": "12/2016"}, {"body": "one tracked", "d": "12/2016"}, {"body": "thanks ericmartinezr", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "thanks dzmitryshylovich", "d": "12/2016"}, {"body": "pls add small repro plunkr", "d": "12/2016"}, {"body": "found issue guards fixed close issue", "d": "12/2016"}, {"body": "schippie presume using kind thing populate initial ngrx state annotation vs using things injectables directly right theory something like solve annotation issue believe need fix ngrx accept still useful feature nonetheless", "d": "12/2016"}, {"body": "robwormald place would using code within annotation would within creation store populate store initial data though even purely create empty map player example create new instance class within annotation create new instance sub stores collection records though example would user class one exists within application modelts javascript import map record immutable import util util export class playeractions static add playersadd static update playersupdate export interface playersstate extends map export interface playerstate id number username string firstname string surname string birthdate date gender f lastlogindate date email string avatarid number export class player extends record id username lt gt firstname surname birthdate new date gender lastlogindate new date email avatarid implements playerstate id number username string firstname string surname string birthdate date gender f lastlogindate date email string avatarid number export const initialplayersstate playersstate map reducerts javascript import actionreducer action ngrxstore import playersstate player playeractions initialplayersstate model export const players actionreducer state playersstate initialplayersstate action action gt switch actiontype case playeractionsadd return statewithmutations map gt let player new player actionpayload playerid lt throw new error player id within actionpayload mapset playerid player case playeractionsupdate return stateupdate actionpayloadid player gt player null throw new referenceerror player id actionpayloadmtid exist return playermerge player actionpayload default return state storets javascript export interface applicationstate players playersstate application store export const applicationstore storemoduleprovidestore combinereducers players modulets core module javascript ngmodule imports commonmodule applicationstore providers resourceproviders utilsproviders adapterproviders export class coremodule edit place used related annotation", "d": "12/2016"}, {"body": "robwormald actually decided downgrade version errors related record class disappeared would count regression", "d": "12/2016"}, {"body": "schippie example seems strange add module references allowed worked missing error message cases aot throw code referenced even transitively angular decorator like case bug referencing code angular decorator supposed throw design unless refer via factory provider eg reproduction case repo look", "d": "12/2016"}, {"body": "tbosch hey tobias thank replying far aware already using aot compatible way indeed slightly different comment due changes still make get everything working correctly version project working created sample repository minimal amount code needed recreate problem something wrong please say already seems like correct way provide store module yet error remains version", "d": "12/2016"}, {"body": "schippie exact issue utilizing immutablejs record class unfortunately make attempts prior looking example pretty much utilizing pattern luck workarounds anything", "d": "12/2016"}, {"body": "zahlprish well moment started use problems vanished application production working perfectly", "d": "12/2016"}, {"body": "schippie ngmodule imports commonmodule applicationstore providers resourceproviders export class coremodule const applicationstore new storemoduleprovidestore reducer list classes annotated field goal code", "d": "12/2016"}, {"body": "tbosch ah let try change real goal keep everything one file related creation store change see error goes away add directly within imports changing within nt fix sadly something like export function storefactory return storemoduleprovidestore reducer ngmodule imports commonmodule provide store usefactory storefactory even completely remove always throws error error error encountered resolving symbol values statically symbol reference expected position original ts file resolving symbol player g frontendrecordtestsrccoreresourceplayermodelts positionalerror g frontendrecordtestnodemodules simplifyincontext g frontendrecordtestnodemodules staticreflectorsimplify g frontendrecordtestnodemodules staticreflectorannotations g frontendrecordtestnodemodules ngmoduleresolverresolve g frontendrecordtestnodemodules compilemetadataresolvergetngmodulemetadata g frontendrecordtestnodemodules addngmodule g frontendrecordtestnodemodules g frontendrecordtestnodemodules arrayforeach native createngmodules g frontendrecordtestnodemodules compilation failed maybe missing something moment use record gets extended anyway form triggers error", "d": "12/2016"}, {"body": "tbosch alright decided take step simplified example greatly managed reproduce moment record imported referenced anyway form throws error record extending class referenced error occurs store anymore one simple modelts file containing player model error use files array tsconfig instead exclude array eliminating tsconfig directly referencing modelts file changes made test error test changes test changes remove references import statements modelts compiles", "d": "12/2016"}, {"body": "larssn fixed", "d": "12/2016"}, {"body": "pls report docs issues", "d": "12/2016"}, {"body": "looks similar", "d": "12/2016"}, {"body": "dzmitryshylovich nt angularcompilercli npm dependency added nt resolve issue included dependencies also importing angularforms module breaks app displays error message nt import application works fine thanks help michael", "d": "12/2016"}, {"body": "iglesiassoltech released test restoring dependency", "d": "12/2016"}, {"body": "chuckjaz going close issue ended migrating application angularcli generated one pretty early lifecycle project decided switch clean slate thanks response", "d": "12/2016"}, {"body": "please reopen issue getting well", "d": "12/2016"}, {"body": "adding could negate", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "dzmitryshylovich good call hard find one via name", "d": "12/2016"}, {"body": "pls add small repro steps reproduce expected behavior", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "ah bad tried searching around something similar feel free close helps others case solved saving search parameters angular parsed reinstated initial load done", "d": "12/2016"}, {"body": "feel free close u power close", "d": "12/2016"}, {"body": "provide small repro plunkr", "d": "12/2016"}, {"body": "tried replicate plunkr simple component routing works fine fwiw working mid sized universal app might something code causing particular issue would happen know would cause particular error come", "d": "12/2016"}, {"body": "actionable without repro sorry", "d": "12/2016"}, {"body": "please reopen repro provide info ie debugging error thanks", "d": "12/2016"}, {"body": "thanks sorry could nt reproduce case turned http request would receive error error would thrown entered catch issues non angularuniversal version app guess something fact trying port application angularuniversal without angularuniversal nt seem issues insight nice", "d": "12/2016"}, {"body": "pls repot cli issues", "d": "12/2016"}, {"body": "pls add small repro", "d": "12/2016"}, {"body": "find time today", "d": "12/2016"}, {"body": "thanks asking turns something side", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "service b need service service need service circular dependency", "d": "12/2016"}, {"body": "think di problem wrong projects architecture workaround circular dependencies injecting injector expose abstract class interface answers help", "d": "12/2016"}, {"body": "u see service undefined nothing angular", "d": "12/2016"}, {"body": "dzmitryshylovich service b need service service need service circular dependency depends also issue depends order statements alexzuza think di problem wrong projects architecture simplified case write module contains decorators decorator receives argument gets instance via", "d": "12/2016"}, {"body": "alexzuza see code", "d": "12/2016"}, {"body": "got problem updating webpack changed import localstorageservice import localstorageservice problem gone", "d": "12/2016"}, {"body": "original error di issue systemjs error circular dep", "d": "12/2016"}, {"body": "vicb error also appears project built systemjs error think solution recommend case", "d": "12/2016"}, {"body": "please make minimal reproduction aswell fill fields required issue template", "d": "12/2016"}, {"body": "error output chrome mac os x appcomponent test lazy path failed error uncaught promise error find module error find module webpackemptycontext webpack userschunhuawebstormprojectstestappsrc lt systemjsngmoduleloaderloadandcompile webpack userschunhuawebstormprojectstestapp lt systemjsngmoduleloaderload webpack userschunhuawebstormprojectstestapp lt routerconfigloaderloadmodulefactory webpack userschunhuawebstormprojectstestapp lt routerconfigloaderload webpack userschunhuawebstormprojectstestapp lt mergemapsubscriberproject webpack userschunhuawebstormprojectstestapp lt mergemapsubscribertrynext webpack lt mergemapsubscribernext webpack lt mergemapsubscribersubscribernext webpack lt scalarobservablesubscribe webpack lt resolvepromise webpack lt resolvepromise webpack lt webpack lt zonedelegateinvoketask webpack lt proxyzonespeconinvoketask webpack lt zonedelegateinvoketask webpack lt zoneruntask webpack lt zonetaskinvoke webpack lt fakeasynctestzonespecflushmicrotasks webpack lt flushmicrotasks webpack userschunhuawebstormprojectstestapp lt chrome mac os x executed failed secs secs", "d": "12/2016"}, {"body": "think misunderstand click new issue provided template like one expected fill included incase cant find new issue box please note top sentence caps submitting check one x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "angular nt work ts lock ts version", "d": "12/2016"}, {"body": "right exact version ts works fine thanks sorry checked version beforehand", "d": "12/2016"}, {"body": "design", "d": "12/2016"}, {"body": "also similar problem routes created service maps routes components pass component class returns route could pretty much thing names one problem service nt work lazy loaded routes least never managed get working", "d": "12/2016"}, {"body": "dzmitryshylovich way implement named routes future since hampers lazy loading klinki could give small implementations though might implement method also calling components return routes component class names might also changed think", "d": "12/2016"}, {"body": "way implement named routes future since hampers lazy loading yeap", "d": "12/2016"}, {"body": "calling components using identifier route basically final route leads component change component class name usually ide refactoring tool change names everywhere code example usage service multiple things service also custommade parameter resolution basically finds provided parameters route finds replaces given value nt adds query param basic idea behind need pass routes service service go routes tree create hashmap use case little bit different mine could add field routes create hashmap key object representing route value would need identify also parent routes recursive algorithm finds also parents current route resolving url need go root route matching given name example url must traverse tree root result must must replace corresponding parameter feel nt describe clearly sorry questions ask source code service unfortunately dzmitryshylovich mentioned currently way make work lazy loading", "d": "12/2016"}, {"body": "could nt see name interface routes sais way get name lazy loaded routes might loaded time want render linknavigate route", "d": "12/2016"}, {"body": "one issue pipe im sure pipes would mean would totally different every pipe angular mention keyword often xor languages nothing pipes however believe plans road make using observables template easier", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "see ngif improvements also implemented common directives think would solve use case think please close issue", "d": "12/2016"}, {"body": "helps lot colleague gave echo great news even short operator would nice instance pages lot observable models filled expect observable paradigm become first class syntax constructs future would nt angular template first currently solved pipe nt future consideration toxicable regarding example seriously doubt templates really need xor rather deassyncing", "d": "12/2016"}, {"body": "ondrazizka current effort going see", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "thanks check gosh hate nodejs much", "d": "12/2016"}, {"body": "provide small repro plunkr", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "cc chuckjaz", "d": "12/2016"}, {"body": "looks like reproducible cordova", "d": "12/2016"}, {"body": "please provide plunker without cordova reopen bug cordova", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich exactly meant asyncvalidatorfn async counterpart validatorfn async counterpart validator interface would like use asyncvalidator like", "d": "12/2016"}, {"body": "might want see version typescript really npm ls typescript issues indicated versions greater work went back got working tried", "d": "12/2016"}, {"body": "probably duplicate", "d": "12/2016"}, {"body": "gave look project nt entry point aot compilation something like add see explanations think also problems said typescript compatible many import definitions typesnode typescorejs also sure external libraries using compatible aot compilation think open question stackoverflow", "d": "12/2016"}, {"body": "hi thanks sure trying different package versions still work remove thir party packages try files section already provided appmodulets enough aot compilation mainaotts need provide appmodulengfactoryts file generated yet thank advance best wishes peter", "d": "12/2016"}, {"body": "nt need create first ngfactory files change application bootstrap case main appmodule suggest follow example guide understand works get specific errors find many answers repo stackoverflow greetings roberto", "d": "12/2016"}, {"body": "hi thanks based tutorial created minimal project tried nothing ngfactory files generated even tsconfigaotjson like tutorial run js files created ngfactory files project super minimal still work error thank peter", "d": "12/2016"}, {"body": "said problem file change import platformbrowser angularplatformbrowser import appmodulengfactory aotsrcappappmodulengfactory platformbrowser bootstrapmodulefactory appmodulengfactory work kindly see differences main", "d": "12/2016"}, {"body": "thank works version update downgrade installed requred packages default npm version work downgraded packages versions work plus typescript changed maints adviced works nicely thank made day nice day peter", "d": "12/2016"}, {"body": "precise aot compilation works fine latest angular version amp settings settings nt work try remove update npm", "d": "12/2016"}, {"body": "problem latest version angular typescript files generated using ngupgrade json compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true lib dom noimplicitany true suppressimplicitanyindexerrors true", "d": "12/2016"}, {"body": "typescript currently supported manifests exactly way support land shortly holidays betas", "d": "12/2016"}, {"body": "yes sir wait", "d": "12/2016"}, {"body": "closing issue typescript nt support yet", "d": "12/2016"}, {"body": "u pls add small repro plunkr", "d": "12/2016"}, {"body": "scenario following clicking routed comp link routedcomponent loaded click change url button change url using pushstate click routed comp link reload routedcomponent reset url lt working", "d": "12/2016"}, {"body": "nt trigger events possible intercept one possible solution patch native function sure want implement inside angular want u patch emit invent", "d": "12/2016"}, {"body": "yup impossible intercept pushstate make scenario work manually wire following might want something similar", "d": "12/2016"}, {"body": "looking", "d": "12/2016"}, {"body": "patch later todaytomorrow throw error anymore bit tricky handle since designed run change detection even element apart dom makes animations fail find anything else working please reopen issue", "d": "12/2016"}, {"body": "note problem property returned non string value", "d": "12/2016"}, {"body": "see example specify use working plunker see also", "d": "12/2016"}, {"body": "workaround router provides api decide provide using directly", "d": "12/2016"}, {"body": "thanks good suggestion", "d": "12/2016"}, {"body": "unfortunately nt work expected refresh page browser still previously visited pages angular first page", "d": "12/2016"}, {"body": "angular nt maintain history uses history api hood", "d": "12/2016"}, {"body": "dzmitryshylovich relevant nt care used internally suggested add option see number forwardbackward steps class maybe location api right thing task need need navigate previously visited angular url tried look solution found stack overflow post suggests use class checked documentation based documentation thought would right way statement navigates back platform history clear enough nt navigate previous angular url please add clear description even looking source code helpful", "d": "12/2016"}, {"body": "news guess could create pr since need feature would like know makes sense work would accepted create meantime workaround get similar functionality", "d": "12/2016"}, {"body": "samesimilar", "d": "12/2016"}, {"body": "threw well caused using typescript currently wip pin typescript version work", "d": "12/2016"}, {"body": "fixed thanks", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "optional followup proposal concatenating arrays current behavior merge array concat object merge see code snippet scalar properties identical arraysobjects facilitates adding expense easy way remove array items go properties bit ts export interface directive selector string inputs string outputs string host key string string providers provider exportas string queries key string export interface component extends directive changedetection changedetectionstrategy viewproviders provider moduleid string templateurl string template string styleurls string styles string animations animationentrymetadata encapsulation viewencapsulation interpolation string string entrycomponents arrayany gt export interface pipe name string pure boolean export interface input bindingpropertyname string export interface output bindingpropertyname string export interface hostbinding hostpropertyname string latter proposal becomes largely whether following properties would desirable enough easily add even potential expense able override existing items easily mostly applies arrays directive arrays inputs outputs providers objects host queries component also arrays viewproviders styleurls styles animations entrycomponents interpretation much could likely hurt except potentially case styles case could technically still override style level though beg question parent pass property deemed worth inheriting inclined consider ability easily add outweighing said nt see half important main proposal merging keybasis even overwrite arrays", "d": "12/2016"}, {"body": "plan change current inheritance behavior known bugs fix", "d": "12/2016"}, {"body": "vicb posterity could perhaps elaborate nt able find comments previous thread meeting notes", "d": "12/2016"}, {"body": "fixing hopfully happen tomorrow behavior described commit comment work extensive docs angulario anything else missed", "d": "12/2016"}, {"body": "sorry particularly curious decision interpretation facilitate subclassing usecase current point yet seemingly coming perspective suddenly allowing inheritance nonoverwritten keys would form potentially breaking change previous commit already part release", "d": "12/2016"}, {"body": "every one expectwants different behavior possible satisfy every request picked behavior think flexible also consider case rare", "d": "12/2016"}, {"body": "thank elaborating", "d": "12/2016"}, {"body": "cant figure way behavior stay clearly broken say replace behavior equal inheritance wrong goes everything abstraction stands", "d": "12/2016"}, {"body": "yes wanted use original component decorator ended import ispresent angularcoresrcfacadelang import idescribereflect describereflect declarationsidescribereflect export function inherit return target function gt let reflect describereflect window reflect let metainformations reflectgetownmetadata annotations target metainformations let parenttarget objectgetprototypeof targetprototype constructor let parentmetainformation reflectgetmetadata annotations parenttarget child component inherit component selector searchbox parent component component template maybe best elegant solution dide want replace component may change trigger someting else aware dide get alot inspiration", "d": "12/2016"}, {"body": "interesting must say like idea lot one thing worried approach eg build scripts used ionic would scour files literal decorator wondering exported augmented decorators original name well approach probably elegant", "d": "12/2016"}, {"body": "seen issue", "d": "12/2016"}, {"body": "nope search decorator posting nothing relevant came", "d": "12/2016"}, {"body": "nt realize cli issue thanks link", "d": "12/2016"}, {"body": "closing specific angularcli", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich way beyond scope looking totally understand complexities supporting generics di want type hint return types ended work around import reflectiveinjector injector provider angularcore wrapper provides generics return types export class appreflectiveinjectorwrapper constructor constructor public reflect reflectiveinjector provides basic type generics angular injector export class appinjector creates di supports generics public static resolveandcreate providers provider parent injector appreflectiveinjectorwrapper return new appreflectiveinjectorwrapper reflectiveinjectorresolveandcreate providers parent really want add generic parameter methods return instances", "d": "12/2016"}, {"body": "okay read referenced issue creating new instances new di containers nt problem generic type obscuring provider said added generics return types would confuse people think create generic providers going close", "d": "12/2016"}, {"body": "feel stupid forgot type casting", "d": "12/2016"}, {"body": "thinkingmedia nt need cast signature improved currently weak trivial core clear day leads us toward success letting tools job example becomes ts let service reflectiveinjectorresolveandcreate myservice thisinjector get myservice servicemethodonmyservicethatlightsupwith typeinfo documentation andcompiletimechecking please reopen issue", "d": "12/2016"}, {"body": "glad someone else liked idea ended creating wrapper class around di fluid like fluid interfaces think make code easier read example takes custom values plus needs service wrapper create instance like complaint need pass provider generic argument know reduce usage would great help code appinjectorts import injector angularcore import fluidinjector fluidinjector provides basic type generics angular injector export class appinjector fluidinjectorts import injector provider reflectiveinjector angularcore provides fluid interface angular injector export class fluidinjector think angular team would open fluid interface di", "d": "12/2016"}, {"body": "think angular team would open fluid interface di nt know also really asking original request leverage standard typescript features type inference improve tooling improve usability codecorrectness reasonable necessary wrt code posted nt see ending core want thoughts leverage type inference improve could discuss elsewhere want generic types used obvious sensible want fewer annotations reasons want feature request accepted takes minutes write generic backwards compatible nonbreaking overload addition would happy send pr", "d": "12/2016"}, {"body": "pls provide small repro plunkr steps reproduce expected behaviour", "d": "12/2016"}, {"body": "instead real ts class would want class want interface instead u get autocompletion ide", "d": "12/2016"}, {"body": "object prototype instance class valid", "d": "12/2016"}, {"body": "angular repo", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "redirect canactivate guard ca nt", "d": "12/2016"}, {"body": "yes approach took however feel mentally separating redirect guards lot easy reason also using guard approach route still needs component children redirectto defined would problem would open implementing using pattern interface", "d": "12/2016"}, {"body": "pls add small repro plunkr", "d": "12/2016"}, {"body": "plnkr", "d": "12/2016"}, {"body": "radios name first one disabled angular uses input name distinguish form controls correct version", "d": "12/2016"}, {"body": "okay thanks quick response explanation get selected value form submit", "d": "12/2016"}, {"body": "issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "thanks repro related zonejs rather angular basic issue events coming electronland nt patched zone like native browser apis angular drops zone new component created outside zone lose change detection going close issue reopen zonejs see interim work around wrapping navigate call zonerun tested repo works fine", "d": "12/2016"}, {"body": "robwormald thanks swift response workaround opens door upgrade", "d": "12/2016"}, {"body": "providing service something like hardcoded router easier customizeextend", "d": "12/2016"}, {"body": "yeah component service", "d": "12/2016"}, {"body": "zoechi u name suggestions", "d": "12/2016"}, {"body": "help todd motto wrote something dynamic titles thanks router events name maybe routerheadservice", "d": "12/2016"}, {"body": "may", "d": "12/2016"}, {"body": "nope boring need something superheroic sense well", "d": "12/2016"}, {"body": "something related head power suggestion list wonder head burgonet helmet visor sallet kepi hat vote every vote matter", "d": "12/2016"}, {"body": "laskoviymishka chapeauservice", "d": "12/2016"}, {"body": "final minifiedgzipped size raw ngfactory file size usually large often misleading since compress really well", "d": "12/2016"}, {"body": "jit aot appminjs kb mb appminjsgz kb kb", "d": "12/2016"}, {"body": "related current suggested solution seems split app modules load demand angularrouter minification via closure compressor advancedoptimizations shave quite bit could nt get working app yet", "d": "12/2016"}, {"body": "hundreds unmeaning bundlejs mobile application large", "d": "12/2016"}, {"body": "actually bumping cli", "d": "12/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "12/2016"}, {"body": "vicb jelbourn mhevery thoughts", "d": "12/2016"}, {"body": "thomasburleson discussed misko think reasonable however directive selector fxlayout export class layoutdirective input fxlayout layout defaultval row would work bound map also key makes sense directive selector fxlayout export class layoutdirective input fxlayout layout input propalias map would result layout xs east map key nt think angular smart try see property map user write valid code however ts type checking would help", "d": "12/2016"}, {"body": "vicb dot notation would expect map cool question user html remember flexlayout lib attribute selectors without dot notation also allowed would happen imperatively initialized object attribute would fire first think reasonable solution using selector without dot notation must also inject value map using default key would course happen attribute selectors directive using dot notations expect user remember html base selector must map others atomic values seems really complex", "d": "12/2016"}, {"body": "wrt first question would set prop would set prop think reasonable solution using selector without dot notation must also inject value map using default key reasonable use case semantic js expect set value imo would much unexpected", "d": "12/2016"}, {"body": "think feature selector property chains input maps important needed like ideas mhevery propose primary concern however new feature break existing library uses full property names fixed pr make current implementation flexlayout use maps internally support full property names support use property chains future", "d": "12/2016"}, {"body": "vicb intention feature would following html would internally", "d": "12/2016"}, {"body": "primary concern however new feature break existing library could expand nt see proposal would break anything use maps internally different could please use nt think want right intention feature would following would case directive", "d": "12/2016"}, {"body": "module provider indexeddb fallback localstorage since angular platform agnostic would work platforms", "d": "12/2016"}, {"body": "localstorage fallback explained readme also mockdatabase fallback non persistent storage simple object module platform agnostic mentioned already compatible platforms like universal server rendering understood ongoing universal could even improved transferred server client vice versa universalcache", "d": "12/2016"}, {"body": "saw mockdatabase nt think reasonable substitute localstorage indexeddb due non persistent behavior opinion abstract class sorts pluggable providers similar http works example found way much much easier users plug implementations whatever platform might using", "d": "12/2016"}, {"body": "used factory module test api available yes surely better way manage providing part pluggable nt confident part storage nt need persistent server storage client mockdatabase essentially avoid errors platforms browser apis available aimed directly used server eventually client server communicate data server prerender right data example would role universal", "d": "12/2016"}, {"body": "nt seen impl would nice api similar class storage constructor storagebackend storagebackend setitem key value return thisstoragebackendsetitem key value abstract class storagebackend setitem key value promise class localstoragebackend implements storagebackend setitem key value return promiseresolve localstoragesetitem key value", "d": "12/2016"}, {"body": "already similar structure abstract class asynclocaldatabase think potential problem initialize classes provide module", "d": "12/2016"}, {"body": "vicb requested related", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "already fixed", "d": "12/2016"}, {"body": "thanks pointing", "d": "12/2016"}, {"body": "please attach repro", "d": "12/2016"}, {"body": "issue upgrading packagejson deps", "d": "12/2016"}, {"body": "downgrade typescript struggled days", "d": "12/2016"}, {"body": "try suggest thanks", "d": "12/2016"}, {"body": "experience absolutely issue workaround suggestion work local dependency typescript packagejson vicb look sample project want reproduce issue update typescript version", "d": "12/2016"}, {"body": "vicb issue newer version work use", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "could please try reproduce zonejs angular repro please reopen angularzonejs thanks", "d": "12/2016"}, {"body": "reproduced zonejs reopening issue", "d": "12/2016"}, {"body": "fixing version fixed problem thank", "d": "12/2016"}, {"body": "problem package generated ng init references angular ultimately fail", "d": "12/2016"}, {"body": "problem pls help", "d": "12/2016"}, {"body": "router state machine able navigate current state might lead confusing behaviour example consider scenario current state navigating guard rejects navigation supposed go back current state longer allowed navigate sort also considering rerunning resolvers every time navigation happens wo nt work use case well think either always allow never allow nt extra option scrolling concerned maybe better directive selector force scrolling", "d": "12/2016"}, {"body": "understand saying still feels like router least tell us something even event present despite call made router navigate click otherwise events get fired convinced using selector directive would cover everything need give try although feels like workaround used work fine saw nothing change logs suggest breaking change regarding viewed bug", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "application navigate page skiplocationchange case url browser stays history entry created new page update query parameters according information get backend service receive data navigate page intention create history entry cases however data returned service need display query parameters navigate page router holds state state however displayed browser url neither browser history state need whole procedure make back forward navigation application work correctly course could navigate page without skiplocationchange would multiple history entries page also navigating back browser history would lead page reloaded meaning would update query parameter browser navigation end endless loop guess navigating state option router provide functionality update browser url history without actually navigating", "d": "12/2016"}, {"body": "kriskit firing sort event good idea maybe ignorednavigation something like", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "handle listener binding issue", "d": "12/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "12/2016"}, {"body": "think looking", "d": "12/2016"}, {"body": "robwormald actually working angular material reference link mentioned want rtl support working", "d": "12/2016"}, {"body": "robwormald please reopen whether issue angular version material version", "d": "12/2016"}, {"body": "lbrevity repository reopen appropriate repo angular", "d": "12/2016"}, {"body": "please minimum working repro plunkr like issue template says", "d": "12/2016"}, {"body": "duplicate looks exiting issue details attribute name supported browser even though valid spec sanitize value meantime could disable debug infos", "d": "12/2016"}, {"body": "working situation working situation seems problem dollar", "d": "12/2016"}, {"body": "alias binding working situation nt work input datarx data observable logs", "d": "12/2016"}, {"body": "alxhub guess call app still providers added", "d": "12/2016"}, {"body": "vicb correct provider question part returns problem reproduces either way", "d": "12/2016"}, {"body": "tbosch issue ts import firebaselistobservable firebaseobjectobservable firebaselistfactory firebaseobjectfactory angularfiredatabase firebasedatabase databaseindex export angularfireauth angularfiredatabase firebaseauth firebasedatabase firebaselistobservable firebaseobjectobservable firebaselistfactory firebaseobjectfactory firebaseauthconfig authmethods authproviders windowlocation metadata symbols issue edit mdjson file let discuss tuesday", "d": "12/2016"}, {"body": "moved", "d": "12/2016"}, {"body": "mhevery igorminar wdyt one problem image label would applied", "d": "12/2016"}, {"body": "pr follows commit message convention fixes closes xyz would nt need labels gh would link automatically would prefer enforce commit messages rather adding new label quickly get outdated", "d": "12/2016"}, {"body": "nt need click issue see pr", "d": "12/2016"}, {"body": "believe one point label gotten rid fine adding back consistent past", "d": "12/2016"}, {"body": "design see", "d": "12/2016"}, {"body": "dzmitryshylovich thank link mimicking observable params example edit works like charm guess pull resolver", "d": "12/2016"}, {"body": "thanks dzmitryshylovich", "d": "12/2016"}, {"body": "pls add repro plunkr", "d": "12/2016"}, {"body": "pseudo selectors supported exceptions nt even understand would mean", "d": "12/2016"}, {"body": "add repro plunkr", "d": "12/2016"}, {"body": "something easily add plunkr added github repo", "d": "12/2016"}, {"body": "happens create explicit constructor service example", "d": "12/2016"}, {"body": "success solved import injectable angularcore import actions appstore export const appstarttime appstarttime global application actions defined injectable export class appdbaction extends actions constructor iappstore appstore super iappstore public appstarttime return type appstarttime value datenow thank support angular kitchen sink source regards sean", "d": "12/2016"}, {"body": "pls add repro plunkr", "d": "12/2016"}, {"body": "dup", "d": "12/2016"}, {"body": "nt think according prior release query parameters preserved configured route redirectto longer working regression", "d": "12/2016"}, {"body": "dzmitryshylovich would happy create repro familiar creating repro plnkr see another issue following u use starting point clear specify version angular run point instructions", "d": "12/2016"}, {"body": "clear specify version angular run point instructions u nt need specify anything plunkr already uses latest version", "d": "12/2016"}, {"body": "repro result get code running test router query params queryparams params routedata params add sure pass query params plnnkr bsconfigjson startpath amp dzmitryshylovich expected behavior query params redirects could find clear documentation attempting really supposed supported change code thanks", "d": "12/2016"}, {"body": "changed redirect absolute local query params retained think issue closed", "d": "12/2016"}, {"body": "mdsauer u close", "d": "12/2016"}, {"body": "u think angular supports injection see", "d": "12/2016"}, {"body": "indeed bug able use anything di token fix probably use instead adding hidden properties", "d": "12/2016"}, {"body": "please attach small repro", "d": "12/2016"}, {"body": "cc mprobst reading source appears work call getcookie request exception would resubscribing existing http request calling getcookie upon subscribe retrospect probably change would fairly common use case something like vitalyvrublevskyy clearly wo nt able repro server side setup seeing client side code would helpful", "d": "12/2016"}, {"body": "robwormald vicb attached appropriate source code code related web application archivezip reproduce issue application well datails appcomponent appmodule injecting cookiexsrfstrategy authservice handle authorization flow steps x login double request check login fetch current user details received coockie csrftoken example csrftoken x next request server see xcsrftoken header request header x logout clear programatically cookies double checked coockie empty x right relogin application received new coockie csrftoken x documentcookie return new value csrftoken server request verify application sent old token header xcsrftoken", "d": "12/2016"}, {"body": "rob right call intentionally request reason particularly odd see previous value vitalyvrublevskyy questions reload angular application ie likely stale browser cookie value application continuously running debug report returns various stages application maybe add logging like clarify browser incorrectly caching cookie angular incorrectly holding onto common problem cookies per path load app might accidentally set cookie different paths browser treats differently", "d": "12/2016"}, {"body": "mprobst following questions browser fix issue obviously yes double checked step using documentcookie details cookies per path problem appears prod env foo dev env bar well going prepare short screen video demonstrate cases", "d": "12/2016"}, {"body": "vitalyvrublevskyy thanks debugging reproduce problem following follow repro steps sending last request one wrong header set breakpoint execute request would wrong cookie value check method called step value gets returned underlying call value returned code try step expect bit puzzled code could fail unless resubscribing robwormald describes", "d": "12/2016"}, {"body": "web app video ca nt reproduce app video hm actually ca nt reproduce case web app however yesterday today day issue case app still issue ps creating screen video cleared cache maybe partly fix", "d": "12/2016"}, {"body": "still occurring angular webpack rxjs zonejs", "d": "12/2016"}, {"body": "nt support typescript right guess stale files previous angular version around could delete downgrade typescript try working ts done yet", "d": "12/2016"}, {"body": "tbosch yep works ts sanitychecked afterward leftover ngfactory outputs got different ngc error guessing right error support reached emanating platformbootstrap file thanks feedback good luck support", "d": "12/2016"}, {"body": "closing caused missing ts support see", "d": "12/2016"}, {"body": "error phantomjs phantomjsprebuilt minified bundle works use instead", "d": "12/2016"}, {"body": "could please try find origin issue", "d": "12/2016"}, {"body": "suppose issue mentioned less expressive error message", "d": "12/2016"}, {"body": "closing duplicate thanks", "d": "12/2016"}, {"body": "getting suspiciously similar trying aot compile project angularcli upgrading either angularcli ab using internal functionality changed something broke backwards compatibility", "d": "12/2016"}, {"body": "chuckjaz hansl know going", "d": "12/2016"}, {"body": "seems angularcli team", "d": "12/2016"}, {"body": "solved see angularcli issue closed", "d": "12/2016"}, {"body": "ie angularcli beta works angular wo nt work", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "u reproduce plunkr would say angular cli issue", "d": "12/2016"}, {"body": "try plunkr first thought problem using typescript case problem still happens typescript angularcli project working ng see also similar issue filed seems related", "d": "12/2016"}, {"body": "issue", "d": "12/2016"}, {"body": "also seems made angularcli angry lots creative ways", "d": "12/2016"}, {"body": "angularcli beta works angular wo nt work also make sure use typescript yet", "d": "12/2016"}, {"body": "could related", "d": "12/2016"}, {"body": "seems unrelated", "d": "12/2016"}, {"body": "actually related works test fix", "d": "12/2016"}, {"body": "still reproduces fix workarounds allow work went wrong reason fail changed longer user typescript resolve location symbols rather rely content metadatajson files encode enough information us resolve symbols run version metadata file auto upgrade metadata copying necessary information dts files next metadata continue processing however neglected autoupgrade missing files dts files metadatajson file valid version longer valid version autoupgrade empty metadata file instead using empty metadata file work around couple workarounds recommend change maindts maints replacing lib src build metadatajson file mainjs file requires modifying main typings package point generated files lib include metadatajson file along side maindts would produced highly recommend metadata file change plan require metadatajson files beginning version make recommended changes compatible without modification use need update metadata start requiring new version made recommended modifications locally send pr repository changes like", "d": "12/2016"}, {"body": "hi chuckjaz thanks much great appreciate pr ready go would definitely help thanks looking really appreciate", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thanks much chuckjaz close issue", "d": "12/2016"}, {"body": "using issue track underlying problem libraries need work around", "d": "12/2016"}, {"body": "cc chuckjaz idea", "d": "12/2016"}, {"body": "actually solution error message error encountered resolving symbol values statically initialized variables constants referenced value variable needed template compiler", "d": "12/2016"}, {"body": "vicb works angular changed", "d": "12/2016"}, {"body": "ok works", "d": "12/2016"}, {"body": "think might typescript issue angular one try rolling back work", "d": "12/2016"}, {"body": "wrote works also create issue typescript", "d": "12/2016"}, {"body": "think angular compatible ts yet", "d": "12/2016"}, {"body": "aot also work last build ngcwebpack build works fine fall provider type", "d": "12/2016"}, {"body": "closing add support ts", "d": "12/2016"}, {"body": "need use method", "d": "12/2016"}, {"body": "oh thanks much like scopeapply", "d": "12/2016"}, {"body": "would say like different", "d": "12/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "12/2016"}, {"body": "btw works", "d": "12/2016"}, {"body": "u sure input hostbinding nt work prop since rc", "d": "12/2016"}, {"body": "plunkr repros needed", "d": "12/2016"}, {"body": "repro", "d": "12/2016"}, {"body": "dzmitryshylovich working bug duplicate", "d": "12/2016"}, {"body": "vicb duplicate guess hard say di nt know angular process metadata working bug depends whether multiple decorators property suppose work nt know designed like", "d": "12/2016"}, {"body": "depends whether multiple decorators property suppose work mean could pleased expand current behavior", "d": "12/2016"}, {"body": "vicb given work seems latest decorator overwrites previous", "d": "12/2016"}, {"body": "thanks much clearer happens config decorator reason support guess", "d": "12/2016"}, {"body": "also working decorator", "d": "12/2016"}, {"body": "think nt work decorator", "d": "12/2016"}, {"body": "quite easy workaround would declare private member bound style property fill values setter orignal member", "d": "12/2016"}, {"body": "feel comfortable workarounds involve many refactorings tests etc fact complaining regression noted everything works perfectly live without combining input hostbinding reason make incompatible single field definitely want opportunity use multiple decorators single field otherwise plenty fields used assign value different styles attrs etc", "d": "12/2016"}, {"body": "agree fix provided sure tell worked tell upgraded", "d": "12/2016"}, {"body": "issue introduced", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "yeah ran issue plunkr nt work worth error message getting", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "guys nothing plunker told problems solutions plunker big application works like charm angular version doesnt work without error console think additional shim required version tried add polyfillsts didnt work anyway fail added directly html dzmitryshylovich despite argueing want thing angular successfull show project give link solutions different angular verison see application work provide base plunker latest angular version try prepare minimal repro", "d": "12/2016"}, {"body": "known issue point reporting nt change anything subscribe updates", "d": "12/2016"}, {"body": "issue mentions even default plunker template nt run ie nt mean plunkerrelated issue known issue ie general reproduced even default plunker template", "d": "12/2016"}, {"body": "ok thank sorry taking time bad close", "d": "12/2016"}, {"body": "also fails chromium version used travis ci runs fine latest chrome chromium ubuntu error uncaught syntaxerror strict mode code functions declared top level immediately within another function", "d": "12/2016"}, {"body": "getting error using angular firebase firefox developer edition revert previously working version error goes away", "d": "12/2016"}, {"body": "thanks vicb tbosch", "d": "12/2016"}, {"body": "point release npm", "d": "12/2016"}, {"body": "nt releases friday use u need fix rigth", "d": "12/2016"}, {"body": "work around fix want test basic build app works simple code", "d": "12/2016"}, {"body": "use code const var", "d": "12/2016"}, {"body": "builds soon", "d": "12/2016"}, {"body": "code takes care minimal reproduction nt pls provide working repro plunkr", "d": "12/2016"}, {"body": "got error upgrading node version ubuntu lts today try node downgrade downgrading node help maybe update ngc caused", "d": "12/2016"}, {"body": "idea support quiet absent aparently", "d": "12/2016"}, {"body": "hello someone investigate clearly bug thanks", "d": "12/2016"}, {"body": "support quiet absent aparently support open source project", "d": "12/2016"}, {"body": "case caused typescript setting fixes us", "d": "12/2016"}, {"body": "requesting files like appmodulengfactoryjs individually suspect nt complete rollup bundling step tutorial follow steps left single file loads entire application including angular dependencies recommended run app without bundling performance impact first obstacle js using modules prevents running browsers nt support import statements", "d": "12/2016"}, {"body": "provide support see details whenever seek support think providing requested information ie issue template question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "12/2016"}, {"body": "vicb odd certainely filled bug repport expecting support like project dealing github years also registered thread stackoverflow wich nobody replied came arendjantetteroo issue clearly bug", "d": "12/2016"}, {"body": "thelgevold sorry new nodejsandgular idea refering simply followed official angular tutorial official angular seed requesting appmodulengfactoryjs individualy test see file available server arendjantetteroo issue btw recommended run app without bundling talking npm start wich made app run fine used ngc compile modified maints load ngfactory stuffs described", "d": "12/2016"}, {"body": "nice support", "d": "12/2016"}, {"body": "please incude minimal repro thanks", "d": "12/2016"}, {"body": "chuckjaz tbosch idea", "d": "12/2016"}, {"body": "planning setting minimal test tomorrow looks like issue resolved thanks", "d": "12/2016"}, {"body": "pls add repro plunkr", "d": "12/2016"}, {"body": "looks like dup", "d": "12/2016"}, {"body": "thanks detailed desc zoechi mentioned existing issue track", "d": "12/2016"}, {"body": "matsko closed w change", "d": "12/2016"}, {"body": "please attach small repro", "d": "12/2016"}, {"body": "vicb sure small need try small demo built cli clone npm install ng build aot smallest without publishing new dummy package", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "hello tried reproduce bug first cloned repo got error specify files therefore aot tries compile files including tests refer test modules aot compatible following add tsconfigjson exclude tests upagrade angularcli", "d": "12/2016"}, {"body": "might good add nzdt new zealand daylight time daylight saving time likely overflowing momentjs seems handle fine", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "vicb think pay attention ticket description ticket linked related apart date pipe reporting browser compatibility issue edge crashes using certain date works fine chrome please reopen", "d": "12/2016"}, {"body": "pls provide repro plunker cli related pls reopen", "d": "12/2016"}, {"body": "could please try jit mode add plunker jit mode work help narrow issue", "d": "12/2016"}, {"body": "longer able reproduce problem run sure plunker reopen", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "look pretty much like problem close issue reopen fixed next release thanks", "d": "12/2016"}, {"body": "fixed release", "d": "12/2016"}, {"body": "provide impl", "d": "12/2016"}, {"body": "dzmitryshylovich tried overriding like mentioned still using internal resourceloader component templateurl request", "d": "12/2016"}, {"body": "provide using method", "d": "12/2016"}, {"body": "frederikschubert thanks worked idea actual application instead unit test configuration", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich frederikschubert thanks pointing code able use code get working platformbrowserdynamic provide compileroptions usevalue providers provide resourceloader useclass customresourceloader multi true bootstrapmodule mainmodule used override unit testbed testbedconfigurecompiler providers provide resourceloader useclass testresourceloaderimpl usejit true", "d": "12/2016"}, {"body": "welcome back duplicate plnkr missing corejs see", "d": "12/2016"}, {"body": "thanks dzmitryshylovich", "d": "12/2016"}, {"body": "u install typings", "d": "12/2016"}, {"body": "create public repository clone reproduces issue suspect issue one providers form support aot might consider replacing promise factory function evaluates value instead providing directly", "d": "12/2016"}, {"body": "dzmitryshylovich try install typings csselementqueries get search typings csselementqueries get", "d": "12/2016"}, {"body": "chuckjaz figured error occurring particular library two js files elementqueries resizesensor elementqueriesjs file makes call resizesensorjs like nt know fix though work jit aot", "d": "12/2016"}, {"body": "chuckjaz dzmitryshylovich created public repo look repo consists angular quickstart angular aot added removed angular quickstart template replaced first example csselementqueries run npm install npm start example works perfectly adjust screen size see header change color sizes run npm run build aot amp amp npm run lite aot see example work see errors describing thanks looking", "d": "12/2016"}, {"body": "default configuration repository uses directory instead root modified include script tags added installed appears work", "d": "12/2016"}, {"body": "forgot add scripts aotindexhtml repro still nt work installed csselementquery aotnodemodules nt work finally changed script filepath aotindexhtml worked whole time copying scripts appnodemodules aot directory calling directly aotindexhtml seemed problem explain installing csselementqueries aotnodemodules referencing aotindexhtml necessary referencing directly aot directory didnt work worked javascript libraries", "d": "12/2016"}, {"body": "already save navigation operator nt see reason need exactly meaning way using instead inconsistent consistent langs", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "perhaps error message could add something akin", "d": "12/2016"}, {"body": "thanks reporting issue however issue duplicate existing please subscribe issue future updates", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "connected lazy loaded module", "d": "12/2016"}, {"body": "vladotesanovic remove upgrademodule import home module app work think problem upgrademodule job get reference injector make available components via dependency providers viceversa import upgrademodule second time second instance providers hide first one since never bootstrapped injector instance provides always null nt use lazy loading multiple instances upgrademodule sometimes work properly think code cache first injector instance created first upgrademodule make available additional instances upgrademodule even bootstrapped although still get error include homemodule statically state first one loaded think lazy load module systemjs loader loads runs second copy well means cached injector instance nt available see error every time", "d": "12/2016"}, {"body": "jomeier beer", "d": "12/2016"}, {"body": "please kindly remove ticket scenario must temporary site ghost form working ok desired markup sorry noise", "d": "12/2016"}, {"body": "please add steps reproduce plunker ie see vs expect see", "d": "12/2016"}, {"body": "right sorry forgot publish latest changes plunker example selects first one options get loaded first selected value second one selected value gets loaded first options delayed expect see results value correctly selected select", "d": "12/2016"}, {"body": "still fully understand issues none options actually selected idea going added settimeout work identically issue loading order", "d": "12/2016"}, {"body": "interesting see", "d": "12/2016"}, {"body": "u save updates plunker", "d": "12/2016"}, {"body": "javascript thiscountriesservicegetcountries subscribe data gt thiscountries data thiscountriesservicegetselectedcountries subscribe data gt let ids datamap item gt itemid let currentids thiscountriesmap item gt itemid let indices idsmap id gt currentidsindexof id getcountriesgetselectedcountries returns list selected countries different objects get ids selected objects also get ids objects currentids find indices items selected map indices objects", "d": "12/2016"}, {"body": "saved updates reason visible tried freezeunfreeze several times visible tested browser anonymous mode", "d": "12/2016"}, {"body": "ok see", "d": "12/2016"}, {"body": "nt label upgradestatic", "d": "12/2016"}, {"body": "need workaround use remove transclude empty", "d": "12/2016"}, {"body": "one problem bug highlighted currently testing ngupgrade nt expose problem rather", "d": "12/2016"}, {"body": "think need better job creating bound transclusion function suitable transclusion scope passed", "d": "12/2016"}, {"body": "working fix", "d": "12/2016"}, {"body": "pls add working repro plunkr use markdown format code", "d": "12/2016"}, {"body": "let first fix formatting", "d": "12/2016"}, {"body": "idea fix formatting post however gitrepo problem replicated corecomponenthtml", "d": "12/2016"}, {"body": "please extract relevant code plunker ca nt debug entire projects", "d": "12/2016"}, {"body": "u use starting point", "d": "12/2016"}, {"body": "ok try never able make plunker thing work mean time checkout project run need debugging whole project since everything else working except code corecomponenthtml", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "submit bug report add minimal plunker describe see expect see nt spare time try figure trying expect result thanks", "d": "12/2016"}, {"body": "vicb done something clear", "d": "12/2016"}, {"body": "future reference", "d": "12/2016"}, {"body": "yep unclear open plunker", "d": "12/2016"}, {"body": "vicb whatever want man nt fix annoyed someone else report fix nt fix frameworks think clear open plunker big work thing displayed console filled red hey talk angular gods apologise somehow miscommunicated issue dzmitry told something else help best", "d": "12/2016"}, {"body": "frameworks actually much expecting describe see expect see", "d": "12/2016"}, {"body": "exploding property routerlinkactive querylist nt defined afterviewinit probably need define check like calling", "d": "12/2016"}, {"body": "pls report docs issues u sure link correct nt see anything like page", "d": "12/2016"}, {"body": "dzmitryshylovich saying", "d": "12/2016"}, {"body": "meant live demo plnkr using alpha", "d": "12/2016"}, {"body": "exact issue sadly clue caused completely deleting nodemodules reinstalling everything caused bin folder created though", "d": "12/2016"}, {"body": "work either edit actualy created bin folder ngc still recognised command", "d": "12/2016"}, {"body": "also hope ngmodel datacontext\u65f6\u95f4 support", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "post request", "d": "12/2016"}, {"body": "williamkoza said", "d": "12/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "12/2016"}, {"body": "think also good sanitize property", "d": "12/2016"}, {"body": "problem confliction unit alternative ideas", "d": "12/2016"}, {"body": "nice idea would use pipe pipe sanitization well want", "d": "12/2016"}, {"body": "zoechi good way totally pipes placed template syntax means used decorators like", "d": "12/2016"}, {"body": "current implementation flexible reuse parameter features probably refactoring make general needed first", "d": "12/2016"}, {"body": "fixed check latest routerbuilds wait next release probably later week", "d": "12/2016"}, {"body": "pls add repro plunkr", "d": "12/2016"}, {"body": "dzmitryshylovich plunkr template runs share", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich thank use future closing found expecting native element reference nt work suppose", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "cc chuckjaz", "d": "12/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "12/2016"}, {"body": "ca nt reuse combinator would read case event x pipe object stream concept pipe pretty similar observable syntax fits nicely existing template syntax imo", "d": "12/2016"}, {"body": "parser humans think specific prefix symbol needed afaik rxjs users prefer character indicate idea", "d": "12/2016"}, {"body": "useful thing developer expressing events streams ability control flow events using operators like debounce etc accomplish need create emitter subject capture events something like username x x class mycomponent implements oninit users user remove subject lt item user index number gt actions observable ngoninit example building recipe notice making sure rx operators cd thisactions nochangedetection gt thisremove map gt said indeed opportunity decrease number listeners lazyness therefore reducing memory pressure know behaviour achieved manual wiring event listeners using syntax convenient manual wiring otherwise worth familiar way would something like hot stream cold one implicitly cold think conforms best current syntax however find would much terse would probably require special casing parser nt seem viable microsyntax without macrosyntax issue turns problem maybe verbose explicit terse option edit oops noticed exactly proposed", "d": "12/2016"}, {"body": "thoughts proposed syntax inject anything ctor property different mechanisms need different name stream name lhs non stream syntax rhs seems consistent sense preferred necessary hints cold always listening btw nt get hints cold could expand", "d": "12/2016"}, {"body": "mhevery could please turn issue proper spec google docs keep issue updated change log doc doc contain issue statement reqs proposal alternate proposals pros cons syntax use cases implementation proposal change log think easier discuss way", "d": "12/2016"}, {"body": "leaving record syntax forms considered avalue class mycomp stream action observable lt action string item gt foo inject stream removestream", "d": "12/2016"}, {"body": "vicb brainstorming session came syntax cc igorminar blesh property controller object receives stream something adds operators stream common usage may syntax bit verbose special map syntax used primitive observables important understand rhs expression executes component lifecycle given remove add important understand expression associated execute exactly beginning template creation unrolled means way read value closure item change later point time want current value item initial value item note closure syntax would added parser pipes advantage syntax one cane use pipe custom function build stream recipes", "d": "12/2016"}, {"body": "unifying coldhot streams class mycomponent instantiate eventemitter synchronously action observable new eventemitter allows building recipes like removes gt thisactionmap hood compile template generates something like generated ngonviewinsert streammap gt action add value item thisactionaddstream ngonviewremove thisactionremovestream", "d": "12/2016"}, {"body": "concern putting much observable configuration viewtemplate would going much harder test set done component click class mycomponent action observable null setupclicks click observable return click map e gt type clickaction value thisi way unit test setup function seems like much boilerplate anything though", "d": "12/2016"}, {"body": "blesh would supported proposed syntax want put logic template access context specific info think loop item index available component instance", "d": "12/2016"}, {"body": "intrigued think like blesh find much syntax html smelly testing one concern goes way beyond maybe read earlier part thread understand use cases make coding template much better coding component certainly articulate skeptical world", "d": "12/2016"}, {"body": "self note turns ca nt use prefix ast transform would collide macrosyntax example would become would create ambiguity would clear binding ast transform binding ast transform need different syntax perhaps something like would become case stream however may case part overall ast may transformed maybe syntax restrictive allows whole template transformed", "d": "12/2016"}, {"body": "afaik rxjs users prefer character indicate tream idea yes appended prepended usually means jquery object usually stream indicates structural directive absolutely nothing streams observables also robwormald discussion", "d": "12/2016"}, {"body": "like echo several others recommendation keep template syntax minimal enough hook wire plain old typescript code class keep complexity", "d": "12/2016"}, {"body": "seems like something minimalistic might work something like resulttext class mycomponent qchange observable get searche observable operator would lowest possible precedence would processed first could even something like might look idiomatic js developers really nt think great idea put much way composed operators template one thing testing anything async happens become difficult debounce example however totally see would beneficial cleaner way push cold observable advantage see operator becomes grepable", "d": "12/2016"}, {"body": "blesh sorry would mean registration hot need different semantics cold registration btw works today", "d": "12/2016"}, {"body": "click action would stream event since one could component event would name stream way choice framework forcing reason need sort prefix ide tooling work better want notify ide autocomplete needs char could variable name", "d": "12/2016"}, {"body": "blesh sorry keypress would mean registration hot mhevery hot presumably event streams registered manner dom element nt exist mounted view mean put front something signify event nt processed mounttime like", "d": "12/2016"}, {"body": "blesh existing syntax uses would new angular construct would use think gh issue mixes two concerns express stream transformations ie fact streams built dom events cold think nobody disputes", "d": "12/2016"}, {"body": "following alternative even less new syntax described blesh approach would use existing mark element existing syntax capture event leave value attribute although seems lot enthusiasm lots new syntax use inside template overall believe mostly better served introducing new syntax kinds expressions template language already serviceable language typescript serviceable way annotated extra bits nt fit language resulttext class mycomponent stream foo change foochange observable get searche observable", "d": "12/2016"}, {"body": "vicb stick forwardcompatible syntax leave transformation proposal mhevery", "d": "12/2016"}, {"body": "use rather since teaching microsyntax already confusing enough rather call something along lines also change bit invoked setting event values need universal overwrite default values serverclient hydration also need something like observableinputs reproduce mini redux prototype made comment need initial value via observable correctly set initial value also expand arguments would lead cyclejs design great extremely powerful also think reactive forms reactive router providing observables ps also keep mind react also running problems lifecycle hooks fiber engine avoided see image fiber engine control scheduling something rendered one frame next ensure much like game engine means sideeffects great idea may cancel component data would lead side effects user something fix want users use two lifecycle hooks data create subscriptions unsubscriptions rather using great problems serverrendering need data synchronously overwrite default data new data inputsprops may also state solution would like provide defaults values would also conflict since ran initial data usually means new data rather default data angular universal use run logic also logic checking determine cd set updated default values new data input since angular using rxjs need include one lifecycle hook ngoncreate include something along lines mentioned allow us stuff like avoid using another lifecycle hook clean taking advantage cold observables destroy component data flow cd happen need feature pps seems trend wanting something eventual values example want wire happens get value adding would allow anyone wire whole component data flow one function much like cyclejs would complete story developer write async code rxjs via ngoncreate sync code use lifecycle hooks via ngondestroyngafterviewinitngoninitngaftercontentinit", "d": "12/2016"}, {"body": "hard coded seed wo nt used since already using", "d": "12/2016"}, {"body": "update removed example previous comment mattpodwysocki hard coded need observable inputs hardcoded example would look bit complex see example showing could correct solution would look bit weird without better framework support example using typescript observeinput initialvalue new eventemitter output counterchange thisinitialvalue mergemap initialvalue gt return observablemerge thisincrements thisdecrementsmapto scan total value gt total value initialvalue ngoncreatetakeuntil grab initial values", "d": "12/2016"}, {"body": "another great thing separation concerns getting data component intuitive right users assuming grab data constructor makes hard test feels awkward simply suggest users use data future refactors would make lot sense example refactoring data fetching router time inject router component initial data would nt hard refactoring ngoncreate adding sort relay like state management would also need use set initial values trigger change detection via helper function think", "d": "12/2016"}, {"body": "aaahhh eyes think great idea although api seems little broad perhaps necessary something already exists sorry head falcor rxjs days suggest implementing minimal way perhaps properties mentioned ones highest value lessons going taken cyclejs definitely talk staltz experiences implementing might successes regrets share would benefit", "d": "12/2016"}, {"body": "pls add repro plunkr", "d": "12/2016"}, {"body": "guess browser actually loading second image tag first added dom style correct widthheight maintain size", "d": "12/2016"}, {"body": "discovered happens chrome linux macos setting image size nt anything possiblly rendering bug chrome", "d": "12/2016"}, {"body": "try instead", "d": "12/2016"}, {"body": "zbjornson awesome suggestion smooth amp beautiful thanks", "d": "12/2016"}, {"body": "pls add repro plunkr trying change child input property using viewchild instance parent method ngonchanges nt get called nt change inputs manually break angular binding change click handler public currentval string public oninnerclick void thiscurrentval clicked", "d": "12/2016"}, {"body": "thought ca nt constructor siderbarinstance nt created yet nothing breaks changes visible dom maybe throw plunkr", "d": "12/2016"}, {"body": "wai change detection check checks bindings called causes change try making gettersetter", "d": "12/2016"}, {"body": "please add repro plunker", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "route changed router navigation happens resolve route guards called useless", "d": "12/2016"}, {"body": "think bad approach resolvers route guards exist want protect route example wan na protect navigate editation item route guards called checked navigation component b resolve data navigation happens like angular data ready show component usage observable params resolving data component checking access rights good usable", "d": "12/2016"}, {"body": "wan na way resolvers route guards almost everything route far useless scenarios depends route params query params route data way rerun guards resolvers deactivators every change param usable example logically behave goods check user access goods yesno redirect popup something resolve data goods show overlay usage router events navigation start end navigate navigate goods different url check user access goods yesno redirect popup something resolve data goods show overlay usage router events navigation start end navigate got u want make observable route params resolvers route guards run everytime url changed", "d": "12/2016"}, {"body": "updated plunker show correct problem query params changed correctly resolver called issue already mentioned think queryparams code vsavkin well params url segment", "d": "12/2016"}, {"body": "works correctly params resolversguard runed everytime params change bug missing shallowequal query params", "d": "12/2016"}, {"body": "bug intentional see docs", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "great win go google tell put browser get result becase resolved data routing happened thing resolvers implemented design enjoy design views logic strictly different switch react less design issues github thanks answer", "d": "12/2016"}, {"body": "good luck", "d": "12/2016"}, {"body": "angular router gets great way utilize params ways embed params utr route path use matrix notation implementing query component resolver guard flexibility angular router awesome advise look closer angular router angular url path one leaf like suppose first time angular router url present tree use outlets node tree component query data via resolvers params good consistent logic update node owner resolver component guard params changed ca nt relate last talking owners node tree suggest query params changed update tree good point good point params belongs specific node tree changed update specific node owners resolvers components guards", "d": "12/2016"}, {"body": "olegdunkan pointed ca nt relate last query string amp talking owners node tree case relate query string node tree imho would good idea update nodes tree nt know node information relevant assume least one node use update one needs information use remaining nodes ignore nt update node miss important information node needs", "d": "12/2016"}, {"body": "im afraid dont energy convince every tutorial angulario blogs colleagues like resolver preload data concrete parameter concrete detail id one difference guards resolvers called correctly every change edit edit semantic url dont believe check wiki meaning like router call resolvers guards call resolvers guards edit edit well", "d": "12/2016"}, {"body": "klinki yes update nodes tree case maybe strategy implemented question use sophisticated router simply cases like angular team made us router spa applications try treat old fashion imho one time angular router gets us flexible methods update part parts tree concerned changing router state try use way said nothing course implementing strategy cost nothing performance ok", "d": "12/2016"}, {"body": "olegdunkan sorry nt think angular router flexible think quite lot issues think biggest issue nt designed universal assume unfortunately nt know use cases designed comes problem router documentation absolutely sufficient think would really great angular team explained us design router use cases created", "d": "12/2016"}, {"body": "attitude thread unacceptable throwing around words like useless terrible idea win support core team ideas please keep comments constructive per code conduct olegdunkan absolutely correct query params global associated specific segment url implementing behavior would necessarily require rerunning every resolver deeply nested routing tree behavior generally undesired simple example fine basic idea follow nested structure like retraversing entire tree could become significantly expensive said monkey patched modules give go see would reasonably straightforward implement check via injectable service like many portions router reusestrategy urlserializer etc would let user provide implementation would done way break existing behavior api would end user implement check leaving default behavior intact like put together pr happy review guarantee feature would merged done noninvasive breaking way would probably ok", "d": "12/2016"}, {"body": "robwormald simple example goods fine basic idea follow nested structure like sectionsadminvendoracmecorpgoods retraversing entire tree could become significantly expensive trying say thread absolutely agree used considered example message question folks rhetorical provide example strategy updating tree destructive let say route use query string like type browser browser render component summary office using component change url want update component summary absent workers strategy would implemented suffer rerendering component therefore suppose coupled lose performance strategy update angular router consider global params slice additional dimension main dimensions params", "d": "12/2016"}, {"body": "olegdunkan know agreeing", "d": "12/2016"}, {"body": "sorry guys nt get either yes understand performance penalties resolvers run query params change difficult use routes need query params run first time logic reads params translates rest calls changing let say datefrom dateto run logic component resolvers run bother resolvers subscribing params changes component excited learning resolvers concept unfortunately figuring run retreat old school component approach maybe possible somehow customize behaviour choice react url changes", "d": "12/2016"}, {"body": "chpasha u implement custom reuse strategy", "d": "12/2016"}, {"body": "sure understand solves problem leaving route rather renavigate component different query params component destroyed recreated like route id difference resolvercanloadcanactivate machinery running route idx", "d": "12/2016"}, {"body": "chpasha resolver executed every time change matrix params realted url segment defines resolver use matrix params needs", "d": "12/2016"}, {"body": "hmm bad idea thanks check switch use", "d": "12/2016"}, {"body": "direction good still luck", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "looks like dup indeed although issue restricted ngmodel also reactiveforms dynamic forms demo still demonstrates behaviour ability bind type misleading", "d": "12/2016"}, {"body": "issue using fetch one time managed workaround using following function calling way sure durable solution might help short time periods", "d": "12/2016"}, {"body": "seems like support implemented http module yet anybody wants submit pr", "d": "12/2016"}, {"body": "afaik http support", "d": "12/2016"}, {"body": "right issue get converted form anybody knows explicit conversion", "d": "12/2016"}, {"body": "dzmitryshylovich works", "d": "12/2016"}, {"body": "think fix would convert code given add test", "d": "12/2016"}, {"body": "private repository needs publish files modules compile order see example", "d": "12/2016"}, {"body": "able reproduce problem event without putting required attribute field considering pluncker power valid property always true normal", "d": "12/2016"}, {"body": "seems change detection looping looping nt know something changes bind property continue investigating", "d": "12/2016"}, {"body": "got point fact pass powervalid true pass disable property true disable property true field pass invalid state begins loop way browser blocking see console following plunkr nt seem angular problem specific case", "d": "12/2016"}, {"body": "closing wai", "d": "12/2016"}, {"body": "luftzig way needs doc see ref angularangulario", "d": "12/2016"}, {"body": "two controls supported", "d": "12/2016"}, {"body": "exactly alxhub two controls name supported error thrown", "d": "12/2016"}, {"body": "pls add minimal repro", "d": "12/2016"}, {"body": "nothing help without repro please reopen small repro available thanks", "d": "12/2016"}, {"body": "hi testing nt think issue looks like leak third party product using primeng thank considering however", "d": "12/2016"}, {"body": "thanks reporting", "d": "12/2016"}, {"body": "would say zonejsmeteor issue", "d": "12/2016"}, {"body": "dzmitryshylovich motivation think downsides arguments outlined solving meteorzonejs agree agree see ways solving", "d": "12/2016"}, {"body": "might add personally think sensible thing solve angular", "d": "12/2016"}, {"body": "nt think angular issue typescript requires type definitions party modules compilation use party libs ngc without typings nt problems would say issue particular npm module plus according examples use instead import", "d": "12/2016"}, {"body": "dzmitryshylovich tried approach without success trying different package see makes difference thanks speedy response", "d": "12/2016"}, {"body": "typescript concern closing issue", "d": "12/2016"}, {"body": "alxhub recommendations fix issue completely understand typescript issue since guys work closely typescript maybe answer clue happening reopen ticket typescript repo", "d": "12/2016"}, {"body": "way implement dynamic route registration", "d": "12/2016"}, {"body": "dzmitryshylovich create item routes array provided string name component rest therefore create type component want tried reflection defined link could find file defined component example", "d": "12/2016"}, {"body": "component name enough angular resolve corresponding component might multiple components name map name gt component", "d": "12/2016"}, {"body": "guarantee component names unique another way without mapping", "d": "12/2016"}, {"body": "router nt actually need component types needs component factories component factories created compile ng modules read post wrote topic interface responsible providing factories componentfactoryresolver takes type string create mapping strings types depends setup theory could create provider creating mapping automatically", "d": "12/2016"}, {"body": "vicb support request closed", "d": "12/2016"}, {"body": "cc chuckjaz", "d": "12/2016"}, {"body": "rolandoldengarm create repository demonstrates issue", "d": "12/2016"}, {"body": "found angular core issue using angularcli strips decorators aot build see issue close one", "d": "12/2016"}, {"body": "bad enabled aot supports saves second", "d": "12/2016"}, {"body": "module related", "d": "12/2016"}, {"body": "angular official website ngaria", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "closing angular module", "d": "12/2016"}, {"body": "many tools methods exist bundle javascript applications deployment runtime deployed properly configured application bundle", "d": "12/2016"}, {"body": "u send request using plain xhr compare results see", "d": "12/2016"}, {"body": "result xmlhttprequest getallresponseheaders contenttype applicationjson", "d": "12/2016"}, {"body": "oh found problem cors need add accesscontrolexposeheaders list headers response headers", "d": "12/2016"}, {"body": "thanks question helped find answer", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "everything moved angular npmjscomangular", "d": "12/2016"}, {"body": "p element closed element", "d": "12/2016"}, {"body": "oh ok stack trace provided clues happened look thanks", "d": "12/2016"}, {"body": "works intended router firing multiple events wiring new subscription time return inside outer flatmap time navigate seeing multiple emits depending want handle data flow suggest either using inner observable combining two eg", "d": "12/2016"}, {"body": "see action", "d": "12/2016"}, {"body": "thanks help robwormald turns nose regarding multiple emits second obserable multiple instances subscriber really caught guard since assumption mergemap would combine observables instead creating child instance ended using observablecombinelatest routeparams routedata since needed know either params data would update create subsequent requests thanks sorry taking time", "d": "12/2016"}, {"body": "closing wai", "d": "12/2016"}, {"body": "rendering path dep id component linecomponent pathmatch full", "d": "12/2016"}, {"body": "michaelchiche talking behaviour", "d": "12/2016"}, {"body": "number path dep component cellcomponent pathmatch full", "d": "12/2016"}, {"body": "michalstepien path defined linemodule referenced root module like nt mean route defined called prefixed", "d": "12/2016"}, {"body": "easier way appmodule lineroutes cellmodule", "d": "12/2016"}, {"body": "michalstepien solution equivalent mine issue nt want massive list routes approutes would like modularise reason solution work differently mine would good know otherwise think bug", "d": "12/2016"}, {"body": "dont", "d": "12/2016"}, {"body": "ahhh fault import loginmodule linemodule cellmodule app module", "d": "12/2016"}, {"body": "michalstepien thought contain independent modules make single app remove imports login routes stop displaying", "d": "12/2016"}, {"body": "provide plunkr repro", "d": "12/2016"}, {"body": "dzmitryshylovich issue plunkr ca nt show routing console messages", "d": "12/2016"}, {"body": "michalstepien get result even nt import modules appmodule pushed new update repo look try route load linecomponent throw error", "d": "12/2016"}, {"body": "georgeedwards repo correct delete import app", "d": "12/2016"}, {"body": "ngerrorexamplemasterzip", "d": "12/2016"}, {"body": "georgeedwards u solve issue", "d": "12/2016"}, {"body": "chuckjaz could check whether regression reproducible data", "d": "12/2016"}, {"body": "following repo demonstrates issue see execute directory", "d": "12/2016"}, {"body": "ran well upgrading angular typescript angular typescript", "d": "12/2016"}, {"body": "guess caused typescript could ensure whether happen w typescript", "d": "12/2016"}, {"body": "upped seems working thanks safe assume issue cause typescript incompatibility", "d": "12/2016"}, {"body": "maybe chuckjaz alexeagle could handle issue ts current stable version", "d": "12/2016"}, {"body": "probably issue duplicated w", "d": "12/2016"}, {"body": "typescript changed several internals upgrading see linked issue", "d": "12/2016"}, {"body": "working upgrading", "d": "12/2016"}, {"body": "actragschuster swell link mates issue understandable ericmartinezr angular coupled ts also throwing errors instance maybe made progress towards ts lost compatibility case thanks help sticking error reference", "d": "12/2016"}, {"body": "issue ng tsc exporting lambda function thus ng unable resolve statically eg instead writing write", "d": "12/2016"}, {"body": "check branch", "d": "12/2016"}, {"body": "updated", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "use component instance", "d": "12/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "12/2016"}, {"body": "sorry question going move question stackoverflow", "d": "12/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "12/2016"}, {"body": "plus issue even related google google friend", "d": "12/2016"}, {"body": "vicb close one", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "tried syntax dzmitryshylovich nt seem work hence assumed nt supported", "d": "12/2016"}, {"body": "pls add repro plnkr", "d": "12/2016"}, {"body": "dzmitryshylovich couple weeks create plnkr eventually return however sure feature actually supported", "d": "12/2016"}, {"body": "yeap", "d": "12/2016"}, {"body": "href bound works urlfragment suffixed matrix parameters routerlink bound observable urlencodes emitted values consequently targets route router match emitted value table highlights difference dzmitryshylovich workaround issue", "d": "12/2016"}, {"body": "accepts array commands url look like matrix params", "d": "12/2016"}, {"body": "thanks streaming data array worked", "d": "12/2016"}, {"body": "like works course reloads app", "d": "12/2016"}, {"body": "ca nt say ajonp approach work nt tried syntax something similar private readonly rootpath example public aroute new behaviorsubject public ngoninit void thisstatesubscription thisappstateservicestate subscribe gt const filtersstate ifiltersstate thisappstateservicegetvalue filters primary const matrixparams object thisgetmatrixparams filtersstate let path thisrootpath objectkeys matrixparams length gt pathpush matrixparams thisaroute next path", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "gotcha thanks", "d": "12/2016"}, {"body": "sorry came aware upcoming feature handle fix", "d": "12/2016"}, {"body": "matias thanks info version mean", "d": "12/2016"}, {"body": "tested version looks animation works correctly query feature already implemented something else affects problem", "d": "12/2016"}, {"body": "earlier fix next week fix query feature", "d": "12/2016"}, {"body": "matias thanks info", "d": "12/2016"}, {"body": "put together using head version angular looks like working fine", "d": "12/2016"}, {"body": "yes confirm wrote earlier got good test result even version know exactly fact corresponds changes made think would possible", "d": "12/2016"}, {"body": "sure range functionality broke likely something reordering animation statements get cancel functionality work think best good unit test gets added nt pop open new issue close one", "d": "12/2016"}, {"body": "yes thank matias", "d": "12/2016"}, {"body": "new issue thank mlcmlapis quick replies finding issue", "d": "12/2016"}, {"body": "please nt close report willing look issue someone give guidance knowledge angular code base try best", "d": "12/2016"}, {"body": "nt u set content type header also header type detected automatically link blocked", "d": "12/2016"}, {"body": "try nt work u create method use like", "d": "12/2016"}, {"body": "dzmitryshylovich thank worked ngfor let product getcontrols combo let iindex getcontrols combo return comboget products controls", "d": "12/2016"}, {"body": "appears problem caused", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "equivalent property binding use whatever dzmitryshylovich mentioned", "d": "12/2016"}, {"body": "result jan case actually june pls add repro plunkr", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "expected syntax", "d": "12/2016"}, {"body": "european formatted date expected date june", "d": "12/2016"}, {"body": "angular pipe bug construct date european format default plunkr results error options need preformat date right format mmddyyyy need tell angular date european format preformat case need syntax probably additional arg", "d": "12/2016"}, {"body": "ok thanks kind point second choice done tried injecting provider appmodule nt work", "d": "12/2016"}, {"body": "us vs european format asking parsing according locale might interesting feature one currently supported intl api foundation building upon", "d": "12/2016"}, {"body": "francescomussi nt valid javascript would say falls bit outside scope angular allowed formats found checkout moment handle formatting something like trick typescript import moment moment export class app datetest date constructor get date european format thisdatetest moment ddmmyyyy", "d": "12/2016"}, {"body": "fredrikredflag okay thanks", "d": "12/2016"}, {"body": "sure angular user would like know implementation details inform custom callback name bet want issue fixed angular side anyways jsonp libraries usually accept name course workaround solution doxiaodong suggested use library like one", "d": "12/2016"}, {"body": "awerlang thanks using think angular way", "d": "12/2016"}, {"body": "please provide plunker allows reproduce issue requested issue template", "d": "12/2016"}, {"body": "issue default router perform initial navigation microtask override navigation app component solution would disable intial navigation passing intialnavigation false forroot app module", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "issue mac running el capitan angular version fixed actually edit code suggested", "d": "12/2016"}, {"body": "case parsing json string parsing resulted error binding successful", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "true passed", "d": "12/2016"}, {"body": "oh yes seems", "d": "12/2016"}, {"body": "would mind closing one", "d": "12/2016"}, {"body": "problem", "d": "12/2016"}, {"body": "could add repro probably server setup issue", "d": "12/2016"}, {"body": "closing nt reproduce scenario", "d": "12/2016"}, {"body": "chuckjaz tbosch still need list ngmodules directivescomponentspipes app issue yes provide", "d": "12/2016"}, {"body": "simplifia wo nt able work least days something able would much appreciate", "d": "12/2016"}, {"body": "simplifia doxavore yes still need data make sure wo nt regress right ca nt reproduce compiler constantly changing", "d": "12/2016"}, {"body": "hello guys created gist containing required data please let us know information needed", "d": "12/2016"}, {"body": "simplifia thanks try reproduce performance problem", "d": "12/2016"}, {"body": "simplifia modifications gist able reproduce issue thank", "d": "12/2016"}, {"body": "nice happy help", "d": "12/2016"}, {"body": "could help", "d": "12/2016"}, {"body": "typingsdts inconvenience specify type di angular template parser could determine exact variable type would much useful", "d": "12/2016"}, {"body": "thing browser", "d": "12/2016"}, {"body": "created issue document angulario", "d": "12/2016"}, {"body": "error happens use variable inside function example use variable avoid retyping css value also using switch work javascript export function fadeslide direction string duration number animationentrymetadata let transform string switch direction case transform translate break case transform translate break case left transform translate break case right transform translate break default throw new error unknown direction direction slide animation return trigger fadeslide transition enter style opacity transform transform animate duration easeinout transition leave animate duration easeinout style opacity transform transform feel like work parameters passed inside function enough resolve value variable", "d": "12/2016"}, {"body": "updated post tried empty switch variable produce error ngc", "d": "12/2016"}, {"body": "thing work function statement put together preliminary documentation allowed metadata aot doc team working translating human example provide document refers macro function statement however rewritten fit subset ts export function calculatetrasnsform direction string string return direction translate direction translate direction left translate direction right translate undefined export function fadeslide direction string duration number animationentrymetadata return trigger fadeslide transition enter style opacity transform calculatetransform direction animate duration easeinout transition leave animate duration easeinout style opacity transform calculatetransform direction", "d": "12/2016"}, {"body": "ok thanks clarification solution", "d": "12/2016"}, {"body": "docs issue magically insert index array array populated", "d": "12/2016"}, {"body": "nt think documentation issue purpose api javascript typescript sparse arrays nothing fancy", "d": "12/2016"}, {"body": "happening update", "d": "12/2016"}, {"body": "closed", "d": "12/2016"}, {"body": "plan introduce router want keep router small possible integrate major use cases", "d": "12/2016"}, {"body": "see cc mhevery", "d": "12/2016"}, {"body": "related primefacesprimeng", "d": "12/2016"}, {"body": "ran issue using template contains", "d": "12/2016"}, {"body": "harilalinapp could create complete self contained reproduction issue would great could try narrow problem via bisecting code", "d": "12/2016"}, {"body": "harilalinapp still issue make minimal reproduction plunkr", "d": "12/2016"}, {"body": "toxicable fixed latest version", "d": "12/2016"}, {"body": "consider adding directive", "d": "12/2016"}, {"body": "nt think help state sync issue directives example form hero object loaded async component rendering undefined equal evaluates ok hero finally arrives subscription become instead undefined late active status already calculated fix need manually trigger routerlinkactiveupdate somehow think drop use calculate active status bind active class host element benefits nt need sync status directives efficient implement smart caching mechanism recalculate status every change detection cycle check inputs changes something like also simplify implementation", "d": "12/2016"}, {"body": "related", "d": "12/2016"}, {"body": "many ways define subset urls chose ignore matrix params works like implement following feature", "d": "12/2016"}, {"body": "aqeellegalinc u solve issue", "d": "12/2016"}, {"body": "dzmitryshylovich yeah got fixed", "d": "12/2016"}, {"body": "dzmitryshylovich actually issue browser version", "d": "12/2016"}, {"body": "please provide smaller reproducible case thanks", "d": "12/2016"}, {"body": "robwormald thanks lazy load precompiled modules retrieve components tried way like ex let new promise resolve gt require ensure gt let dynamicmodule require foodmodulengfactory featuremodulengfactory dont know create component help", "d": "12/2016"}, {"body": "closing duplicate issue describes underlying problem better", "d": "12/2016"}, {"body": "design consider matrix params last segment", "d": "12/2016"}, {"body": "please explain steps see issue plunker expected vs observed", "d": "12/2016"}, {"body": "simplified plunker nt use services component factories etc basic gets attached destroyed error", "d": "12/2016"}, {"body": "notion ngif captures value expression result makes available around implementation linked pretty sure saw another implementation prior year ago essentially blend ngif ngfor written long time ago based probably incomplete understanding things work way somewhere got impression idea considered rejected thrilled see core team looking useful addition", "d": "12/2016"}, {"body": "mhevery little bit topic discussed django else", "d": "12/2016"}, {"body": "design lifecycle component always tied place component declared ie place used conditionally create destroy components together content projection use", "d": "12/2016"}, {"body": "plan change implementation something implement easily according needs look improving docs", "d": "12/2016"}, {"body": "easily implemented subscribe router navigationend event use data activatedroutesnapshot snapshot get required data tree traversal annoying doable concerns testability workaround components requiring use case quite lot much worse testable", "d": "12/2016"}, {"body": "face issue", "d": "12/2016"}, {"body": "tbosch please help still facing even though using version", "d": "12/2016"}, {"body": "design choice rationale also use promise want behave consistently", "d": "12/2016"}, {"body": "strange ca nt treat promise observable selfsufficing entities way simple value returning resolver also behave consistently promise observable nt understand value promise observable common yes promise observable common wait async entities value right ca nt cancel waiting observable ok thanks answer appreciate", "d": "12/2016"}, {"body": "nt solve issue", "d": "12/2016"}, {"body": "hi opportunity check yet holiday pick soon back office thanks martin sent using boxer dec dzmitry shylovich notifications githubcom wrote nt solve issue receiving authored thread reply email directly view github mute thread information email attachments confidential may legally privileged intended solely addressee named intended recipient please notify sender delete message attachments system use copying disclosure contents either unauthorised unless expressly permitted views expressed message sender unless expressly stated easyjet virus checking emails attachments responsibility recipient easyjet airline company limited registered england registered number subsidiary easyjet plc registered england registered number registered office hangar london luton airport luton bedfordshire click report email spam", "d": "12/2016"}, {"body": "sounds like legit bug", "d": "12/2016"}, {"body": "looks like might strange edge case side caused modal host component sticking around tests preserving previous injected dependencies throwing subsequent tests thanks help", "d": "12/2016"}, {"body": "workaround lots type things also mapped path changing occurrences app quite work", "d": "12/2016"}, {"body": "always end injecting router calling manually normal route command array including aux routes little surprised conceptually sync though see become somewhat ambiguous several router outlets targeted time", "d": "12/2016"}, {"body": "bromzh understand correctly comes using nested folders right cases show problem eg could reword issue accordingly", "d": "12/2016"}, {"body": "dzmitryshylovich right sorry aot nt execute code nt know contain properties works intended", "d": "12/2016"}, {"body": "hooks executed everything loaded everything available way around try improve docs", "d": "12/2016"}, {"body": "vicb ok thanks", "d": "12/2016"}, {"body": "going back trying different versions router looks though bug introduced version could nt figure changes introduced unintended behaviour though", "d": "12/2016"}, {"body": "plunker seems work fine chrome browser work", "d": "12/2016"}, {"body": "vicb sorry forgot mention found workaround latest version reverted broken plunk workaround", "d": "12/2016"}, {"body": "cammisuli workaround", "d": "12/2016"}, {"body": "dzmitryshylovich looking broken plunk moved redirect route allowed routes properly work", "d": "12/2016"}, {"body": "compile anything typescript would also compile could try calling", "d": "12/2016"}, {"body": "vsavkin ok cool although think cases lambda gon na look like similar feature brevity well anyhow thanks", "d": "12/2016"}, {"body": "digged deep similiar issue today produce xlf file content typescript changed nodeflags enum export exportcontext changes like currently nt fully compatible ts downgrading ts currently solved problem", "d": "12/2016"}, {"body": "relates", "d": "12/2016"}, {"body": "news issue ionic framework suffers issue", "d": "12/2016"}, {"body": "jamespacileo working see", "d": "12/2016"}, {"body": "dolanmiu using file mapping webpack systemjs using systemjs see config file", "d": "12/2016"}, {"body": "starting think problem related one browser returns exactly error call upgraded angularjs directive angular component template created plunker", "d": "12/2016"}, {"body": "yes exactly error undefined nice work", "d": "12/2016"}, {"body": "using webpack underneath allow user view modify underneath therefore show setup however seems like deeper issue reproduce systemjs also", "d": "12/2016"}, {"body": "dolanmiu issue systemjs read upgrade docs carefully states always take angular component root use downgraded angular component bootstrap hybrid app angular component normally use angular components key every time go context context way arround downgrade components parent context level upgraded use components living context reason injector undefined boostrapping seperately root component root component template boostrap context", "d": "12/2016"}, {"body": "correct need downgrade component bootstrap well bootstrapping angular bootstrapping able load component uigrid use input decorator pass data angular angular demo everything works fine go appmodule try use inside lazy loaded module get exact error undefined homemodule want see error", "d": "12/2016"}, {"body": "many people thread believe problem comes providing component example happens case bootstrap appmodule via immediately tries boot instead waiting angular bits bootstrap components property", "d": "12/2016"}, {"body": "petebacondarwin ok need move appcomponent entrycomponents use ngdobootstrap like", "d": "12/2016"}, {"body": "using move put anything inside angular app responsible instantiating downgraded", "d": "12/2016"}, {"body": "correct petebacondarwin", "d": "12/2016"}, {"body": "closing think working expected please open another issue reproduction problem think bug", "d": "12/2016"}, {"body": "please fill issue template provide repro nothing succinct description", "d": "12/2016"}, {"body": "close doc issue", "d": "12/2016"}, {"body": "nothing yet plunkr reproducing issue", "d": "12/2016"}, {"body": "facing problem improvement created workaround", "d": "12/2016"}, {"body": "felipedrumond nt nt break anything make eagerly loaded simple switch lazy whenever bug fixed change component back loadchildren remove import", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "denysyefimenko please add repro", "d": "12/2016"}, {"body": "current behavior design strategies reasonable use cases happen implemented one make sense use case inject activatedroute load employee component", "d": "12/2016"}, {"body": "nt understand bug strategy resolver called resolve radically changed route route changes resolver called others nt inconsistent definitely documented anywhere seen please elaborate current design circumstances resolver called circumstances wont also sure mean injecting activated route almost certain activaterouteparams behaves exactly routedata called case either listening navigation end definitely hack nt see made work almost impossible use router sophisticated way currently least resolvers soon think working discover cases router behaves differently carefully crafted design falls apart", "d": "12/2016"}, {"body": "vicb sorry really tired hearing current behavior design similar sentences could please provide us design would know supposed use router currently many pitfalls think quite lot people experiencing surprisingly design", "d": "12/2016"}, {"body": "guys great job giving great software free nt owe anything really struggling constantly amazed router behaves never know router bug seem multiplying lately strange design privy router supports resolvers resolve data component activated support nt guess whether particular routing change result resolver called several still open bugs wasted lots time trying get relatively simple workflows work efficiently cases", "d": "12/2016"}, {"body": "really strange saw comments suggesting perhaps custom urlhandlingstrategy could used work around design bug comments longer really curious know recommended approach make router usable common use case also still curious use case desired implementation", "d": "12/2016"}, {"body": "slubowsky actually discussed vsavkin last week sounds reasonable rerun resolver parent parameters change want take stab pr", "d": "12/2016"}, {"body": "vicb like try probably would nt able even start look least week two office part time covering others rest ill check back get freed nt yet addressed make attempt thanks", "d": "12/2016"}, {"body": "ill check back get freed nt yet addressed make attempt great thanks", "d": "12/2016"}, {"body": "vicb pr submitted feat compiler explicit id", "d": "12/2016"}, {"body": "fixed via", "d": "12/2016"}, {"body": "issue injected root level root route traverse routes find one intersted bug", "d": "12/2016"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "12/2016"}, {"body": "matsko wait new feature btw question currently functions angular animation exported think possibly make core package fat plans make new package", "d": "12/2016"}, {"body": "think animation code compiler instructions take metadata instruction convert compiled code", "d": "12/2016"}, {"body": "looks like bug snapshot assigned end needs investigation", "d": "12/2016"}, {"body": "nt bug proper way handle nt see way let need get together place code first try current let derives try last route ok let try write works properly first time second time swapped see true cases try changing route path component main path sibling component sibling siblingparent right waiting fixing bug someone knows way get strong fashion appreciate", "d": "12/2016"}, {"body": "vicb made investigations first redirects passed checks create new router state start recursively recreate new tree function new node gets old value new state used finally future state maybe simple fix resolve need time explore router details fix maybe problem applied strategy goes branch", "d": "12/2016"}, {"body": "finally found always returns function two configs future current compared always way substitute via future version maybe", "d": "12/2016"}, {"body": "olegdunkan way substitute reusestrategy via extraoptions u provide", "d": "12/2016"}, {"body": "dzmitryshylovich thanks works substituted one method problem gone see course temporary solution think default reuse strategy work", "d": "12/2016"}, {"body": "also verify removes issue services within module instantiated every time route changes issue resolved yet", "d": "12/2016"}, {"body": "currently seeing issue everything cleaned reinstalled nodemodules well", "d": "12/2016"}, {"body": "actionable without repro", "d": "12/2016"}, {"body": "issue", "d": "12/2016"}, {"body": "problem configuration like root data node v root data npm v root data ng version angularcli node os linux angularcli", "d": "12/2016"}, {"body": "happening say two modules parent child child loaded lazily say two components defined parent defined child say typically components form following tree instantiated gt gt finally say injects since run guards resolvers instantiating components one guarantees router provides make component instantiation atomic constructor following injector tree instantiating components injector tree look like two injector trees instantiate module twice one module node two trees used two contexts vicb think good solution add new property something like loadguards addition loadchildren possible provision two modules one preactivation one activation", "d": "12/2016"}, {"body": "hi victor thanks info know changed break previous experience issue also really primary reason behind creating different di contexts lazy loaded modules seem creating friction benefits would imagine large majority applications authors lazy loaded modules part project modules lazy loaded known issue overwriting providers managed communication within team sort angular warning many us came angular single di context mostly ok imho would much prefer setting enables use single di context modules including lazy loaded modules would eliminate need forroot forchild loadguards option indicates detailed knowledge lazy loaded module anyway regards tarek", "d": "12/2016"}, {"body": "news issue", "d": "12/2016"}, {"body": "use ngrxeffects lazy module behavior doubles effectobservables two working effects instead one reducers fires twice action payload", "d": "12/2016"}, {"body": "manofearth use older version angularrouter issue closed problem", "d": "12/2016"}, {"body": "manofearth using time", "d": "12/2016"}, {"body": "ciesielskico michalboska found another workaround include effects root module", "d": "12/2016"}, {"body": "manofearth unfortunately nogo app pretty large really need split modules actually lazy loaded", "d": "12/2016"}, {"body": "eta", "d": "12/2016"}, {"body": "tbosch eta feature", "d": "12/2016"}, {"body": "blacksonic hopefully late spring", "d": "12/2016"}, {"body": "detached change detector provides way customize process call whenever see fit see help ps needs use later", "d": "12/2016"}, {"body": "seeing really weird behavior using components change detectors components use plunker demonstrating weird behavior see plunker component changedetectionstrategyonpush child component detaches changedetector nt feed input child child never update input child child update update small portion number actual events also still cause parent changedetector run", "d": "12/2016"}, {"body": "input child child update update small portion number actual events think bug stated docs detached change detector checked reattached", "d": "12/2016"}, {"body": "open new issue", "d": "12/2016"}, {"body": "would different request", "d": "12/2016"}, {"body": "looks like docs nt correct angular call markforcheck component inputs change host listeners invoked event template fired", "d": "12/2016"}, {"body": "angular call markforcheck component inputs change host listeners invoked event template fired regular onpush component right component detached change detector moment seems checked component inputs changed checked wondering makes sense onpush strategy detached change detector", "d": "12/2016"}, {"body": "removing onpush strategy seems fix weirdness davityle mentions still detached amp angular listener nt play documented", "d": "12/2016"}, {"body": "please add small repro", "d": "12/2016"}, {"body": "closing nt reproduce scenario", "d": "12/2016"}, {"body": "came across problem would recommend remove redundant code repository clear look briefly problem looks next next mock response expect log happens real backend actually prints times single way fix use", "d": "12/2016"}, {"body": "exactly problem also latest stable release angular situation fetis fix problem used solution described official testing example working", "d": "12/2016"}, {"body": "issue", "d": "12/2016"}, {"body": "yes thank guys", "d": "12/2016"}, {"body": "hello guys fix available npm repository ie npm install router package include fix", "d": "12/2016"}, {"body": "luisabreu yes check changelog see fix issue landed router runs guards every time unsuccessfully navigating url", "d": "12/2016"}, {"body": "issue also affects updating matrixparams via eg", "d": "12/2016"}, {"body": "hi sorry delay overall looks fine trust anything prefixes general type contract urls safe go means trigger unwanted actions content seem okay security potentially windows phone equivalent follows pattern nt like including url whitelist default since nt make sense platforms sure either exposing url sanitization whitelist global settings reason explained config function triggering support could make sense half measure adding platform seems weird use pipe times little annoying hand seems cleanest way misuseresistant way providing pipe angular mobilecentered module seems make sense could also look current user agent trust relevant schemes maybe", "d": "12/2016"}, {"body": "maybe specialize dom sanitizer apps running android vicb route right folks ionic", "d": "12/2016"}, {"body": "problem occurs something simple using ngif toggle components plunker showing simple implementation thanks ryanlangton template see soon click toggle button toggle component angular zone gets lost workaround use ngzone run function put back angular zone seems really silly though would expect component lifecycle events happen within angular zone", "d": "12/2016"}, {"body": "resorted using ngzonerun within stream subscribe methods works obviously ideal thanks nodehack demonstrating much leaner example", "d": "12/2016"}, {"body": "incorrect route case componentless route always specify primary outlet fixed version", "d": "12/2016"}, {"body": "use keyup event instead ngmodelchange input field work", "d": "12/2016"}, {"body": "still missing serialize required metadata also summaries", "d": "12/2016"}, {"body": "building library compiled need ship library see contains absolute paths", "d": "12/2016"}, {"body": "fknop build tools incremental compilation yet supported outside google", "d": "12/2016"}, {"body": "closing nt enough info reproduce scenario", "d": "12/2016"}, {"body": "leaving clue anyone comes across issue similar circumstances difficult debug errors declaration get page reloading issue specific case refactoring error something like assumedly throwing undefined reference error right page wiped p", "d": "12/2016"}, {"body": "looks like dup", "d": "12/2016"}, {"body": "thanks detailed desc zoechi mentioned existing issue track", "d": "12/2016"}, {"body": "compile anything typescript would also compile could try calling", "d": "12/2016"}, {"body": "yes angular libs ships dts compiled js without ts otherwise every time needed change content nodemodules compiling ts files getting error analogy angular ships already generated ngfactorydts compiled ngfactoryjs files think core problem correct behaviour found earlier discussion", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "listening popstate event triggered historypushstate according note calling historypushstate historyreplacestate wo nt trigger popstate event popstate event triggered browser action clicking back button calling historyback javascript event triggered user navigates two history entries document", "d": "12/2016"}, {"body": "solution issue", "d": "12/2016"}, {"body": "ca nt reproduce plunkr bug appears fixed latest version cli bug", "d": "12/2016"}, {"body": "closing nt hear back reproduce scenario", "d": "12/2016"}, {"body": "talked robwormald offline create design doc proposal new module temporary name early", "d": "12/2016"}, {"body": "yeah reproduce using plunkr", "d": "12/2016"}, {"body": "thnx johannesrudolph dzmitryshylovich confirming closing fixed", "d": "12/2016"}, {"body": "garyb thnx superdetailed summary issues indeed current handling custom formats needs much love list helps us making things better thank dzmitryshylovich going keep one open detailed valuable need make sure usecases turned tests tests run part ci every supported browser", "d": "12/2016"}, {"body": "using constructor confirm jeffbcross error agree nt type using get intended behavior", "d": "12/2016"}, {"body": "getting thing ts export interface lazymapsapiloaderconfigliteral google maps api key see apikey string google maps client id premium plans google maps apis premium plan license must authenticate application either api key client id google maps api fail load client id api key included clientid string injectable export class lazymapsapiloader extends mapsapiloader private scriptloadingpromise promise constructor inject lazymapsapiconfig private config lazymapsapiloaderconfigliteral super thisconfig thisconfig fails failed type filepath c name lazymapsapiloader error error error encountered resolving symbol value statically could resolve type lazymapsapiloaderconfigliteral position original ts file resolving symbol lazymapsapiloader c rvicesmaplazymapsapiloaderts error error encountered resolving symbol values statically could resolve type lazymapsapiloaderconfigliteral position original ts file resolving symbol lazymaps apiloader c", "d": "12/2016"}, {"body": "getting thing test component aot really miss feature exclude things export const testconfigtoken new opaquetoken testconfig export interface testconfig component template export class testhostcomponent constructor inject testconfigtoken public config testconfig component used testing still aot insist defined module otherwise another error occur processing aot produces error error error encountered resolving symbol values statically could resolve type testconfig position original ts file resolving symbol testhostcomponent complete blocker could serious way forward delete advanced tests order get aot working", "d": "12/2016"}, {"body": "way forward delete advanced tests u change type change interface abstract class", "d": "12/2016"}, {"body": "thanks workaround works annoying lose type safety least proceed", "d": "12/2016"}, {"body": "annoying lose type safety believe u something like", "d": "12/2016"}, {"body": "yes indeed actually exactly suggest additional comment referencing bug explain write bad code like hurts write type conversions add seemingly unnecessary lines code", "d": "12/2016"}, {"body": "similar issue track issue well close old one", "d": "12/2016"}, {"body": "something like workaround work nt like password message gets printed", "d": "12/2016"}, {"body": "progress way guards work right really limiting useful simple operations without feature implemented nested guards difficult imagine common scenario top level route authguard applied various child routes could guards need make serviceapi calls make calls would require auth token guaranteed parent authguard may complete means every single guard wait async work parent authguard", "d": "12/2016"}, {"body": "marcovdb issue closed", "d": "12/2016"}, {"body": "still bug cause zonejs probably handle moved zonejs issues", "d": "12/2016"}, {"body": "reopen pls", "d": "12/2016"}, {"body": "ok", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "issue fixed u see u extend", "d": "12/2016"}, {"body": "yes seems work plunker example thanks", "d": "12/2016"}, {"body": "pr merged indeed release contains fix means ca nt verify fix let keep issue open till switch verify fix", "d": "12/2016"}, {"body": "think related", "d": "12/2016"}, {"body": "update ts changed behavior see", "d": "12/2016"}, {"body": "closed", "d": "12/2016"}, {"body": "pkozlowskiopensource u close one", "d": "12/2016"}, {"body": "duplicate root cause intl api implementation full data currency symbols let continue discussion", "d": "12/2016"}, {"body": "still issue", "d": "12/2016"}, {"body": "accessors still exported consistently", "d": "12/2016"}, {"body": "curious going fixed soon", "d": "12/2016"}, {"body": "believe use ngonchanges within ngmodel detect changes looks reference equality array looking documentation perhaps ngdocheck needs implemented docs warn performance impact though garyb yeah right situation described docs angular calls hook value input property changes value hero property reference hero object angular nt care hero name property changed hero object reference nt change angular perspective change report want support array mutation", "d": "12/2016"}, {"body": "updates repro closing", "d": "12/2016"}, {"body": "problem", "d": "12/2016"}, {"body": "issue extraction translations nightkingch fix works well reopen please", "d": "12/2016"}, {"body": "adding link similar app reference javascript may beneficial look reference", "d": "12/2016"}, {"body": "think solved directive links make ngiflike directives", "d": "12/2016"}, {"body": "edenn router issue router uses default required specific server configuration return routes plunker configured like u get refresh page say invalid request u change location strategy works expected demo think issue closed", "d": "12/2016"}, {"body": "vicb still actual nt see file longer", "d": "12/2016"}, {"body": "let see pr takes care issue", "d": "12/2016"}, {"body": "fixed patch please try reopen still broken", "d": "12/2016"}, {"body": "made plunker reproduce issue attempt remove flag ngcontent select matched grandchildren component issue using routeroutlet without inderection child component working expected note convince example indeed illustrating issue change template parentcomponent understand working maybe supposed use case brings page application shell pattern many way satisfied tried far appears given view components might quite coupled rendered different place", "d": "12/2016"}, {"body": "last example would get around issue today might way go application shell find pretty cool use binding element child component still displayed different locations application shell", "d": "12/2016"}, {"body": "place see use new read part api reference link seems broken", "d": "12/2016"}, {"body": "vicb tools available gnulinux maintain update merge translation changes languages translation files xmbxtb xliff please say hand plan getting widely used approved gettext support addition noname technologies implemented", "d": "12/2016"}, {"body": "xmbxtb probably mostly used internally google xliff one common format ask google wikipedia tools know", "d": "12/2016"}, {"body": "still issue ca nt reproduce using description copy url section anchor paste address bar correct component loaded path remains section instead rewritten sectioninitial", "d": "12/2016"}, {"body": "seems like fixed angular", "d": "12/2016"}, {"body": "dzmitryshylovich popalexandruvasile still able reproduce bug angular probably wrong steps sorry bad step step visit plunkr url click launch preview separate window button blue x new browser window opens url like chrome window opens readonly location textbox since manually changing location essential reproducing bug copy url paste regular browser tab new browser tab home component loaded copy url section anchor paste address bar replacing url home component reiterate url change prefer manually type hit return app correctly switch whose path location box still show instead", "d": "12/2016"}, {"body": "lorenzodallavecchia see thx yeah issue still persist believe fixed", "d": "12/2016"}, {"body": "lorenzodallavecchia merged could u pls try fixes issue available", "d": "12/2016"}, {"body": "dzmitryshylovich tested bug appears fixed", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "lorenzodallavecchia could u close issue pls thx", "d": "12/2016"}, {"body": "pablolazaro nothing validators angular need read keyword js working example", "d": "12/2016"}, {"body": "iam similar problems thought caused wallaby seems testbed", "d": "12/2016"}, {"body": "seeing issue unit test component compilation taking close", "d": "12/2016"}, {"body": "unfortunately pulled angular project nt looked quite time seems like lot complications testbed testmodule setup generally performance could avoided approach similar enzymeshallow render approach react ecosystem one unit rendered none dependencies thing accomplished overriding angular component template spec often tedioustimeconsuming well", "d": "12/2016"}, {"body": "close test cases getting executed min angular angular takes execute test cases would nice get resolution issue hinders testing capabilities large applications", "d": "12/2016"}, {"body": "mlakmal think lots folks relying heavily tests testing functional logic component classes nt test template rendering template logic allow easy testing class logic least", "d": "12/2016"}, {"body": "ollwenjones thanks going try really nt want test template logic since gets covered automated tests testing component class code enough", "d": "12/2016"}, {"body": "mlakmal sweet makes happy contribute something actually helps someone fwiw often torn templaterendering unit tests easy slip testing framework", "d": "12/2016"}, {"body": "process upgrading pretty big project first time using ngmodule approach unit tests maybe testing components prior upgrade tests run pretty quickly around upgrade take leat twice long worst thing seem kind flaky karma periodically lost connection chrome often need refresh chrome multiple times suspect something timing nt isolated yet ollwenjones regarding shallow component tests know set testing module means compiler ignores elements recognize meaning need declare components used template component test", "d": "12/2016"}, {"body": "found issue angular tests able improve situation creating bespoke testing modules test", "d": "12/2016"}, {"body": "michaelbromley idea would probably save hours also opportunity hopefully speed tests leaner testmodule faster testbed seems go", "d": "12/2016"}, {"body": "michaelbromley also helped lot removing materialmoduleforroot imports really speed tests", "d": "12/2016"}, {"body": "related discussions react stackoverflow", "d": "12/2016"}, {"body": "related", "d": "12/2016"}, {"body": "landed via hopefully issue fixed vinagreti going close one based feel free reopen still hitting problems", "d": "12/2016"}, {"body": "updates said causes valuechanges subscriptions within disabled form group emit event", "d": "12/2016"}, {"body": "hello curious learn work arounds issue mentioned also noticed angular module contains file testingjs root folder next indexjs import moduleexports require bundlesxxxtestingumdjsindex adding confusion expect bundlesxxxtestingumdjs currently try load testingumdjs files always get index behind matter change make configjs never seems work", "d": "12/2016"}, {"body": "updates saw fix proposal closed explanation stateful pipes horrible performance would nice control changes example one time binding value comes async event update value observable emits new value latter best approach imho", "d": "12/2016"}, {"body": "igmdvc nt use async pipe subscribe inside component call", "d": "12/2016"}, {"body": "dzmitryshylovich solution work make things little painful verbose case want implement need pipe translations retrieve translation http would like use something like would like skip component responsible logic give responsibility translate pipe would ideal deal async operation component level also pipe level without going stateful", "d": "12/2016"}, {"body": "igmdvc u provide small repro plunker u trying accomplish", "d": "12/2016"}, {"body": "would good feature however might preferable angular router reused components default route option force component reuse eg willreuse true forcereuse true component previous next route example currently working project uses component different routes route parameters important setting state animations switch product route product card product group card route component reinitialises lose state thereby causing animation jump back beginning state switch product card another product card route component reused state kept animation plays", "d": "12/2016"}, {"body": "u pls add repro plunkr", "d": "12/2016"}, {"body": "loading application file url afaik supported need load http server browser limitation limitation", "d": "12/2016"}, {"body": "drager still issue", "d": "12/2016"}, {"body": "dzmitryshylovich nt tried nt really know commit points fix", "d": "12/2016"}, {"body": "points fix fix u nt provide sufficient info understand reproduce issue asked repro", "d": "12/2016"}, {"body": "fix rewrite hashlocationstrategy use history api browser limitation limitation hashlocationstrategy use history api", "d": "12/2016"}, {"body": "drager browser limitation limitation hashlocationstrategy use history api actually loading disk without using http server supported error probably wo nt issue therefore nt see point request", "d": "12/2016"}, {"body": "zoechi issue slightlysmilingface nt want support close", "d": "12/2016"}, {"body": "facing issue enterprise portallike solution whose frontend moving portal third party plugins external modules sixmonths release cycle short us force plugin maintainers rebuild every six months time upgrading could lead even bigger issues due oldbuggy external dependencies due fragmented ecosystem happens library x moved library still etc lts release would natural answer needs enterprise world permit framework libraries maintainers offer stable edge release", "d": "12/2016"}, {"body": "yes believe specific bootstrapping instead works expected everyone fyi way anything run asynchronously notice view updating try following workaround mentioned mbenna change something like code ts constructor private ngzone ngzone ngonchanges thisngzonerun gt thisloadmoredata subscribe result gt thismessage resultmessage", "d": "12/2016"}, {"body": "gregjacobs problem workaround use third party library nt control code issue calendar control using fork library run library code inside zone make work upgradeadapter think lead developer upgrade adapter petebacondarwin maybe could help us pinpoint root cause could create pr fix", "d": "12/2016"}, {"body": "updated plunker assertions show going console issue petebacondarwin take look change", "d": "12/2016"}, {"body": "mhevery actually commit linked aot bug original library suspect might end problem aot since borrowed code take look", "d": "12/2016"}, {"body": "petebacondarwin using upgradestatic project confirm issue also exists upgradestatic angular currently", "d": "12/2016"}, {"body": "plan currently using trigger change detection watch triggered turn call called microtask queue becomes empty instead let detect changes event get downgraded components listen message avoids trigger unwanted digests every time microtask queue empties may even better performance since wo nt triggering change detection every turn digest pr ready today", "d": "12/2016"}, {"body": "instead change help solve things running wrong zone", "d": "12/2016"}, {"body": "problem infinite digests triggering change detection causing digest triggering change detection etc using broadcast two separate mechanisms going keep triggering happy proven wrong might break everything branch almost working publish within next hour review", "d": "12/2016"}, {"body": "idea working yet thought would make public give feedback", "d": "12/2016"}, {"body": "think using right slow guarantee change detection interleaved right order autodect infinite loop break", "d": "12/2016"}, {"body": "agree approach going work instead", "d": "12/2016"}, {"body": "petebacondarwin left comments", "d": "12/2016"}, {"body": "petebacondarwin land", "d": "12/2016"}, {"body": "amcdnl afraid still nt agreed solution see", "d": "12/2016"}, {"body": "ran across today spent hours scratching head least example test docs really run loop", "d": "12/2016"}, {"body": "martinwegner find cleaner solution yet really acceptable workaround", "d": "12/2016"}, {"body": "kschio workaround", "d": "12/2016"}, {"body": "case since", "d": "12/2016"}, {"body": "vicb true running still produces please reopen issue", "d": "12/2016"}, {"body": "vicb please reopen", "d": "12/2016"}, {"body": "please keep needed demonstrate issue", "d": "12/2016"}, {"body": "hit issue aot compiled angular app working perfectly appeared work perfectly jited version injecting modaldialoginstance lt gt alot areas whatever component want load modaldialoginstance sadly seems like causing aot fail mentioned compiler idea make sigh", "d": "12/2016"}, {"body": "liquidboy believe running along lines general principal requested proposes able infer generic parameters types corresponding inputs issue uses example work case want believe inferred type child component used dialog instance", "d": "12/2016"}, {"body": "updates issue also stuck", "d": "12/2016"}, {"body": "easily shift logic html component directly refer manklu comment also considered best practice would make component testable amp html readable", "d": "12/2016"}, {"body": "situation like static data table rendered get ajax get table nt bound errors console well directions", "d": "12/2016"}, {"body": "add plunkr reproducible problem way could help solve issue thanks", "d": "12/2016"}, {"body": "suchk u pls update plunkr looks like u error configuration", "d": "12/2016"}, {"body": "reading commit apparently seems broken intentionally disabled lazy loading modules named router outlets monitoring similar issue", "d": "12/2016"}, {"body": "pkozlowskiopensource close one", "d": "12/2016"}, {"body": "related", "d": "12/2016"}, {"body": "im troubles seems working confirm bug", "d": "12/2016"}, {"body": "windows use node nodemodules angularcompilerclisrcmainjs p tsconfigaotjson", "d": "12/2016"}, {"body": "also getting error project yes project lot directives really limitations ngc pushing maxoldspacesize work max mac couple lines files custom directives try split directives components files help", "d": "12/2016"}, {"body": "ngc ought use less memory may take time address meantime one approach try compile smaller chunks application time application scales even tsc take many seconds slows development roundtrip idea tell build system several libraries one lists dependent libraries run ngc one library time giving dts metadatajson ngsummaryjson files inputs generating code ts inputs wed dec vladimir amiorkov notifications githubcom wrote also getting error project yes project lot directives really limitations ngc pushing maxoldspacesize work max mac receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "hi alexeagle thank prompt response considering try pretty building plugin already structure implemented working without issues trying make possible ship npm necessary aot files try think something would great oom issues ngc resolved see many people facing", "d": "12/2016"}, {"body": "alexeagle quick followup running nodejs version updated latest ran following script able run ngc correctly entire project previously try getting oom error looks like nodejs cause", "d": "12/2016"}, {"body": "great thanks note wed dec vladimir amiorkov notifications githubcom wrote alexeagle quick followup running nodejs version updated latest ran following script scripts ngc node nodemodulesbinngc p tsconfigjson tsc tsc p tsconfigjson prepublish npm run tsc amp amp npm run ngc able run ngc correctly entire project previously try getting oom error looks like nodejs cause receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "convert issue feature request pretty basic functionality missing back ngif guess", "d": "12/2016"}, {"body": "probably better logic methods component rely easier read logic cmp also easier test", "d": "12/2016"}, {"body": "confirmed reproduce issue using latest version event type pkozlowskiopensource closed", "d": "12/2016"}, {"body": "thnx dzmitryshylovich", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "also issue upgraded app confirm issue still persist angular petebacondarwin know workaround", "d": "12/2016"}, {"body": "see", "d": "12/2016"}, {"body": "would using work", "d": "12/2016"}, {"body": "choeller curiosity even possible see const dynamic one could nt get keys right", "d": "12/2016"}, {"body": "foxandxss thank clarification believe given say said aot sort convert template code typescript typescript subset typescript compiler emit typescript emits javascript emitting typescript aot introduced additional compilation phase significant problem different interpretation affects validity static interpretation code subsetting semantic sense means practically user may use typescript features like private modifier angular components think one following reasonable expect error suppressed aot compiler emit typescript subset language features available officially formally documented", "d": "12/2016"}, {"body": "actually private properties least way provide correct static error checking via typescript allows error surface correctly part type level contract angular decorator factory components may applied actually rather straightforward angular require component properties public would work someone writes ts import component angularcore component export class mycomponent string private string argument type typeof mycomponent assignable parameter type new gt string string type mycomponent assignable type string string property private type mycomponent type string string nt subset scenario private properties anyway made api clearer better importantly transparent easy follow", "d": "12/2016"}, {"body": "angular require component properties public transparent easy follow already pretty easy follow need google min", "d": "12/2016"}, {"body": "better working jit mode failing aot already pretty easy follow need google min people nt apis express types documentation use", "d": "12/2016"}, {"body": "better working jit mode failing aot ide language service codelyzer report issues plus work make aot default nt see problem", "d": "12/2016"}, {"body": "express angular apis nt express much could stand express completely unrelated example currently looks like look roughly like ts export declare const component componentdecorator amp specifiestemplate export declare type specifiestemplate template string templateurl string ca nt think good reason", "d": "12/2016"}, {"body": "well second aluanhaddad suggestion required angular components fact works fine even properties declared unfortunate byproduct angular emitting compiling javascript private properties user angular need know supposed work actually works due oddities javascript properties continue work merrily poor user writing millions lines angular code find compiled aot suddenly generate thousands errors said poor user would manually correct properties ones cursing way whoever decided first place documentation needed believe somewhere angular docs words saying warning lark vomit big bold letters followed use private properties binding aot wo nt work warned", "d": "12/2016"}, {"body": "think right schungx maybe suggest adding rule guide style angulario explain", "d": "12/2016"}, {"body": "think pretty simple put files compiler complain remove problem solved happen jit mode code ready aot agree wkoza part style guide well however nt understand type declaration files need vacuous tools used", "d": "12/2016"}, {"body": "aluanhaddad put dts file basic issue jit mode angular compiler runs ts aot mode runs ts jit uses reflection runtime long type information stripped", "d": "12/2016"}, {"body": "robwormald put file cause descriptive compile time error typescript regardless compilation mode jit aot", "d": "12/2016"}, {"body": "ts import component angularcore component export class mycomponent string private string argument type typeof mycomponent assignable parameter type new gt string string type mycomponent assignable type string string property private type mycomponent type string string", "d": "12/2016"}, {"body": "nt want make component fields public", "d": "12/2016"}, {"body": "public runtime apis components rarely used users better current situation", "d": "12/2016"}, {"body": "robwormald think would correct always advocate putting templates fields public", "d": "12/2016"}, {"body": "dzmitryshylovich says plenty use cases private fields components especially injectingquerying parentchild components enforcing public every propertymethod component defeats purpose entirely long term plan aot default anyway nt think going force behavior users said worth documenting clearly look new year", "d": "12/2016"}, {"body": "highly disappointing right tools users available warn creating pit failure users instead pit success nt understand reasons provide insufficient better user code slightly cluttered public api user code fail reasons unbeknownst", "d": "12/2016"}, {"body": "need add docs", "d": "12/2016"}, {"body": "finally documentation sure looks like subset", "d": "12/2016"}, {"body": "robwormald right injectingquerying parentchild components shame case", "d": "12/2016"}, {"body": "looking sandbox docs find default exports wo nt work cry", "d": "12/2016"}, {"body": "schungx could possibly known recommended pattern exporting single function class typescript incompatible failure point exporting single class function use export default seriously shameful angular team tells people use specific tools tells tools help catch errors fails document restrictions dramatic semantic differences like broken fails outright refuses leverage said tools prevent errors even though error detection point said tools try pull fast one get away due branding really something proud", "d": "12/2016"}, {"body": "well calm think address issues good time working", "d": "12/2016"}, {"body": "resolve please share", "d": "12/2016"}, {"body": "hello problem persists instantiation click everywhere application workaround seems problem every component instance registering document events using property cause performance issue whole application matter click inside component anywhere else feel ca nt fixed simply close one report setting prop event useless major problem firing change detection whole application matter component use case pricing table component displays price clicked shows input tickcross buttons emits event value edited accepted workaround simply register events probably cool native ionic apps whatever mobile discourage using anything like native calls seteventlisteners shouldberegistered boolean shouldberegistered amp amp thisdocumentclickeventhandler thisdocumentclickeventhandler evt gt thislasthostclickevent evt amp amp thisshow thiscanceleditable documentaddeventlistener click thisdocumentclickeventhandler else shouldberegistered amp amp thisdocumentclickeventhandler documentremoveeventlistener click thisdocumentclickeventhandler thisdocumentclickeventhandler null shouldberegistered amp amp thisdocumentkeyupeventhandler thisdocumentkeyupeventhandler evt gt evtwhich thiscanceleditable else evtwhich thiscallsave documentaddeventlistener keyup thisdocumentkeyupeventhandler else shouldberegistered amp amp thisdocumentkeyupeventhandler documentremoveeventlistener keyup thisdocumentkeyupeventhandler thisdocumentkeyupeventhandler null", "d": "12/2016"}, {"body": "exactly issue work around", "d": "12/2016"}, {"body": "may found workaround familiar protractor nt know useful workaround look disable protractor waiting angular file request set see full file import browser element protractor describe myapp gt beforeeach gt browserignoresynchronization true browserget title gt expect browsergettitle toequal ionic app", "d": "12/2016"}, {"body": "news issue solutions nlgi asked thanks", "d": "12/2016"}, {"body": "update got bug installed command following original doc run getting error", "d": "12/2016"}, {"body": "palmanis members angular team also working libraries working way issues prs hopefully seen activity last month hgeric pretty decent guide please help us make api docs better reporting problems", "d": "12/2016"}, {"body": "cheers pete already saw new guide took online look report issues find", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "procedure mark form control tree dirty", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "workaround set attribute instead property keeping mind values used toggle presence attribute null anything null example attrdisabled expression evaluates null anything null", "d": "12/2016"}, {"body": "api known slow vicb hard data info", "d": "12/2016"}, {"body": "peteboere last message sorry late feedback", "d": "12/2016"}, {"body": "issue staybay please advise fix issue thanks", "d": "12/2016"}, {"body": "looking adding components ngmodule bootstrap works good selector present page nonspa selector could would good documented way bootstrap components optionally tbosch provide example plunkr correctly using ngmodule chrisnicola found solution", "d": "12/2016"}, {"body": "jpgcode tbosch mentioned manually bootstrapping using check selector bootstrap found bit awkward though would argue ergonomic tbosch hope something could potentially addressed future angular release jpgcode would probably feasible make bit transparent specialized bootstrapper similar one exists ngupgrade may see put something together near future contribute back permanent solution angular project", "d": "12/2016"}, {"body": "davyf find one solution", "d": "12/2016"}, {"body": "workaround u want add new controls u use method efficient way angular intercept u directly modify property properly initialize control case responsibility initialize control", "d": "12/2016"}, {"body": "experiencing problem edit downgrading typescript fixed whew new ngc errors making progress", "d": "12/2016"}, {"body": "follow example work ngfactory files source code dir errors warnings generates ngfactoryts nodemodules js jsmap files sources angular typescript switch angular ngc ngfactory files generated ps downgrading typescript helps", "d": "12/2016"}, {"body": "problem node js typescript angular angular cli downgraded typescript works fine", "d": "12/2016"}, {"body": "hi guys trying solve issue hours nothing bit tired could help please project right use aot compilation production everything ready start issue generating ngfactory fiels ngfactory files generated js files tsconfigaotjson command execute ngc nodemodulesbinngc p tsconfigaotjson output files print screen angular pacakages typescript could please help", "d": "12/2016"}, {"body": "might try angular well instead also type npm list sure installed packages accurate json file peer dependency problems", "d": "12/2016"}, {"body": "using angular could nt get ngfactory files typescript downgrading able generate", "d": "12/2016"}, {"body": "hi solved check witch typescript angular versions used", "d": "12/2016"}, {"body": "angular ts nt work downgrade ts well order generate correct files", "d": "12/2016"}, {"body": "angular nt work windows tried typescript versions got working angular typescript looks like issue reopened", "d": "12/2016"}, {"body": "got working downgrading typescript version angular", "d": "12/2016"}, {"body": "relevant error receive console bug looks like still struggling come conclusion aedensixty running task gulp done webpack also processes scss files project outputs css directory component reference generated css file run ngc strange though use angularcli build project aot mode scss files styleurls field call beforehand build complete fine tour heroes example angulario repo nt know angularcli achieving probably custom workflow webpack perhaps described processing scss css changingremoving reference styleurls maybe inlining styles instead ngc runs one reasons using angularcli build app produces nongzipped bundle run prod aot mode build project preprocessed scss css using ngc amp rollup docs get bundle going guess cause inferior tree shaking angularcli project says readme performs treeshaking believe uses uglify read dumb tree shake versus rollup intricate bettersuited tree shake speculating based limited knowledge way based intricate understanding angularcli uglify rollup read shame reason making apprehensive using angular production build client aot compilation seems fragile buggy angular really viable big bad world development world without stable aot compilation pipeline much stable competitors please set milestone happily try fix problem think competency knowledge compiler miles away would need someone wants direct dumb pair monkey hands problem lack support sassscss might definitely take look make progress submit pr processing scss custom workflow gulp putting experiences error log help anyone comes across trying find info issue practically impossible contending good hours solid time finally finding intense session google realising setup config", "d": "12/2016"}, {"body": "closed duplicate one surprised people opening issues one since find current behaviour quite confusing fact might hit alias pattern formats others almost identical ones utterly confusing imo different ways specifying one different things want exact format want certain date time components final output exact output shell dictated locale settings today got one api express different things way knowing code path going take look", "d": "12/2016"}, {"body": "started following testing section docs using jasmine using npm test get hundreds lines errors angular typings types others followed test failed project structure getting started app built app test fails karma test truetrue app folder tried excluding karmaconfig still get hundreds errors files starting folders suspect documentation shortcomings could see karmaconfjs karmatestshimjs systemjsconfigjs systemjsconfigextrasjs used test section docs might able figure changes files try solve problem looking large files huge error reports nt know start even google learn", "d": "12/2016"}, {"body": "came across problem angular tutorial hosted plunker caused angularzonejs confirm switching recent zonejs works bug since fixed recent zonejs releases angular team still needs reflect new versions docs plunk seeds fix locally change version zonejs referenced plunk geoff goodman plunker google group", "d": "12/2016"}, {"body": "vicb u explain intention", "d": "12/2016"}, {"body": "tbosch thank sure fully understood semantics mean use componentdecorator child component without completely overwriting metadata parent component would introduce new selector metadata merging problem tried apply composition inheritance pattern application thought favoured approach angular however issue prevents elegant solution eyes official recommendation implement sharing reusing functionality", "d": "12/2016"}, {"body": "hi guys please provide detailed example basecomponent inputs outputs child component inputs outputs module class thanks", "d": "12/2016"}, {"body": "use last decorator kind hm feels like might make sense merge metadata bykey basis potentially concat case array vals likely need new decorator specify new selector anyway point longer transfer event need additional di wo nt gaining field either automatically need inject old stuff", "d": "12/2016"}, {"body": "current approach might reasonable split set decorators etc add granularity inheritance", "d": "12/2016"}, {"body": "illustrate existing solution decorator inheritance take care keybasis merging including array concatenation forgive use ts annotationsts let require lodash import component directive pipe angularcore extendible component decorator extended merge items let mergemetadata metadataclass gt function annotation return function target function let parenttarget objectgetprototypeof targetprototype constructor let parentanns reflectgetmetadata annotations parenttarget size parentanns let parentann parentanns objectkeys parentann foreach key gt isnil parentann key isnil annotation key isarray parentann key annotation key parentann key concat annotation key else isobject parentann key amp amp isobject annotation key objectassign annotation key parentann key else annotation key parentann key else annotation key parentann key let metadata new metadataclass annotation reflectdefinemetadata annotations metadata target export let extcomp mergemetadata component export let extdir mergemetadata directive export let extpipe mergemetadata pipe component file import decorate components rather", "d": "12/2016"}, {"body": "choose override merge rather go override easier merge override strategy override merge strategy ca nt really override prop merge strategy redefine props whole want merge override strategy need redefine property want merge example course best world would possibility choose means new semantics probably corner cases etc think wanted avoid", "d": "12/2016"}, {"body": "ghetolay let try see following correctly think coming different conclusions easier merge override strategy override merge strategy ca nt really override prop merge strategy redefine props whole want merge override strategy need redefine property want merge example pr behavior override parent decorator exactly needed good want property different redo say property want merge example suppose right though assumes exported parent decorator properties using angular wo nt otherwise expose reuse adjusted form alternative behavior naive merge essentially override perproperty basis wanted parent decorator properties good wanted change property good override wanted remove one override wanted override array go ahead wanted add array problem since unless manually exported original reuse wo nt available afaict approach yet bring much controversy far current behavior merge array concat object merge scalar properties identical arraysobjects facilitates adding expense easy way remove array items let go properties bit ts export interface directive selector string inputs string outputs string host key string string providers provider exportas string queries key string export interface component extends directive changedetection changedetectionstrategy viewproviders provider moduleid string templateurl string template string styleurls string styles string animations animationentrymetadata encapsulation viewencapsulation interpolation string string entrycomponents arrayany gt export interface pipe name string pure boolean export interface input bindingpropertyname string export interface output bindingpropertyname string export interface hostbinding hostpropertyname string latter proposal becomes largely whether following properties would desirable enough easily add even potential expense able override existing items easily mostly applies arrays directive arrays inputs outputs providers objects host queries component also arrays viewproviders styleurls styles animations entrycomponents interpretation much could likely hurt except potentially case styles case could technically still override style level though beg question parent pass property deemed worth inheriting inclined consider ability easily add outweighing said nt feel strongly step concerning arraysobjects think bigger gain less controversial step allowing override property basis rather level entire decorator", "d": "12/2016"}, {"body": "tbosch way merge providers component superclass subclass without explicitly declare subclass constructor nt want subclass know services superclass needs ca nt think accomplish long providers listed constructor component example given would like able write subclass know parent currently must instead write violates openclosed principle", "d": "12/2016"}, {"body": "benelliott love well using inheritance method redeclare parent dependencies grand child definitely point frustration thank adding suggestion", "d": "12/2016"}, {"body": "nt want subclass know services superclass needs ca nt think accomplish long providers listed constructor component superclass descendants would even instantiate class", "d": "12/2016"}, {"body": "benelliott situation problem may want consider using delegation", "d": "12/2016"}, {"body": "aluanhaddad mean like right fear might simple usecase set mutually recursive components bunch common properties methods decorator values di dependencies custom decorator could take part part inheritance leaving di dependencies meaning bunch constructor boilerplate could nt factored great way address benelliott suppose mean inject additional di params super statement overriding constructors essentially mimic default suppose mean checking parentchild constructor arguments incl ts type decorators construct new function parameters calling first child constructor parent even figure guess need check one would need put code override though", "d": "12/2016"}, {"body": "mean nothing sorry confusion mean delegation general sense mean class hierarchy class extends class want unaware dependencies refactor code longer extends rather delegates instance instance injected delegate concrete example bts ts import import import import injectable export default class b constructor readonly readonly readonly readonly getsomething return dts refactoring ts import b b import import import import import injectable export default class extends b constructor readonly super getsomethingelse dts refactoring ts import b b import injectable export default class constructor readonly b b readonly getsomething return thisbgetsomething getsomethingelse", "d": "12/2016"}, {"body": "aluanhaddad sorry misinterpreting thank elaborating event many common di dependencies keeping one class definitely makes sense event eg one shared dependency though longer help improve still need manually add least one dependency everywhere already using handle common bits currently would nt help", "d": "12/2016"}, {"body": "aluanhaddad ca nt kind refactoring components right inheritancediscussion revolves around three different intentions mixin common behaviourfunctionality want share many components thus attach think angular directives unfortunately approach falls flat way yet component declare dependency see decorator want enhance constraint single multiple components providing new wrapper component believe closest delegation unfortunately problem passing ngcontent wrapped component nt work see subtype want modify override behaviour single existing component one approach would derive component face problems mentioned thread another approach would base component provide events inject delegation service provided ba decorator either way base component would need designed provides hooks overriding functionality nt know makes sense since designer would love angulardocumentation would add topic dryapproaches angular guidance supported strategies thanks reading", "d": "12/2016"}, {"body": "dry approaches mantra problem using class subtyping want inject dependencies via constructor nt know language done without relisting arguments mixins preferable correct nt possible perform component delegation pointing really nt way avoid super call subclassing", "d": "12/2016"}, {"body": "yeah retrospect sure know real solution either perhaps fix would language level inserting calls corresponding arguments missing though suppose usecase may well specific angular use constructor parameters di", "d": "12/2016"}, {"body": "well would nt angular specific fact lot code could make use would terrible pattern would completely evil black magic problem nt constructors parameter counts problem class based design via manifest syntax enforces single inheritance classes far weakest abstractions available language yet frameworks built around angular mind keep mind talking ecmascript classes opposed say scala classes latter powerful javascript power functions classes javascript degenerate functions", "d": "12/2016"}, {"body": "defense seem like angular internally placed quite emphasis interfaces though user may mostly see classesdecorators", "d": "12/2016"}, {"body": "benelliott current solution problem programming using typescript use clever solutions di frameworklanguage allows like using daggerkotlin springjava allow method field injection besides constructiontime injection typescript class parentclass constructor private readonly parentdeps dosomething short encapsulate dependencies class subclasses need know parent needs dependencies dependencies needs issue using pattern typescriptjavascript wo nt able name property encapsulates dependencies descendant class using convenient name stands members yay might want foresee possible future class extended multiple times hierarchy try minimize possibility nasty naming collisions using name like naming sucm class name superusefulclass ps want subclasses access particular dependency need define corresponding getter simply returns like get return", "d": "12/2016"}, {"body": "wrapper dependency reduce problem multiple dependencies much eg one dependency needs made available bunch places already using inheritance methods firstworld problems know", "d": "12/2016"}, {"body": "rodrigoquesadadev use clever solutions di frameworklanguage allows like using daggerkotlin springjava allow method field injection besides constructiontime injection pls read", "d": "12/2016"}, {"body": "dzmitryshylovich indeed awful pattern thank link objects initialized constructor c got right raii back", "d": "12/2016"}, {"body": "dzmitryshylovich let see probably read article case try explain probably programmers nt experience issuesproblems mentions well first broken default api get create instances class need unit test unless nt expose constructor part api easily achieve making private packageprivate even problem case api would nt even consider constructors part api could even hide means humanclients language allows client trying instantiate class directly instead using corresponding factory using di framework get injected create instances mycomponent providing mycollaborator force clients provide mandatory dependencies making sure every object created valid state construction client simply instantiate way perhaps nt even need concern lifescope object communicate mandatory dependencies publicly remember bashed service locators hiding dependencies implementations field injections lipstick pig regard still know dependencies looking public interface type eg skimming javadoc talking library really never helps really helps knowing highlevel dependencies corresponding module library dependencies time nt need worry dependency manager takes care well least time solution look public interface type especially share code amongst projects field injection based types become runandwaitforthenpetohappen declaremissingbeansandrepeat kind approach talking code probably access source code nt declaremissingbeansandrepeat also rarely get hardtodebug npe reason fact nowadays rarely get npe code use languages nullsafety primary concern final fields also add immutable nature application components get would love using fieldmethod injection normally make sure safely published getting injected enough time clearly distinguish mandatory dependencies final optional ones nonfinal usually injected setter injection sounds reasonable time creating libraries nt see outweights pros boilerplate reduction getting free know class dependencies subclassing hopefully create subclass also uses di framework increase number dependencies type hurt makes think whether split component multiple ones come know dependencies given class pain ass could alone make consider splitting component multiple ones testability classicist tester uses bdd might want call tdd done right anyways nt want initiate endless discussion around matter nt really isolate code use mockstuff subset called test doubles btw nt see need resources could share interested case think similar least nt think talking crap guess boilerplate buster lombok used mumbojumbo lombok magic changed mostly use kotlin regarding link thanks sharing though", "d": "12/2016"}, {"body": "noticed implamented opened issue know closed im trying get work base component class following export abstract class componenttemplatebase implements itemplatebase contentchild templateref defaulttemplate templateref viewstate defaultviewstate defaultviewstatedefaulttemplate component selector simpleloginform export class simpleloginformcomponent extends componenttemplatebase implements oninit loginform formgroup user memberstatus memberstatus status memberstatus payload memberpayload dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcalendar babelruntime corejs datefns jquery reflectmetadata rxjs scriptjs zonejs devdependencies angularclasshmr angularclasshmrloader typesbootstrap typescorejs typesjasmine typesjquery typesnode typesscriptjs typesseleniumwebdriver autoprefixer awesometypescriptloader babelcore babelloader babelplugintransformruntime bootstraploader bootstrapsass browsersync browsersyncwebpackplugin bsfullscreenmessage codelyzer compassoptions copywebpackplugin cssloader deepextend del extracttextwebpackplugin fileloader gulp gulpcleancss gulpcompass gulpenv gulploadplugins gulpsequence gulptypescript gulputil imgloader importsloader lazyobject loadgulptasks nodesass postcssloader progressbarwebpackplugin rawloader resolveurlloader sassloader sourcemaploader stripansi styleloader tslint tslintloader typescript urlloader vinylnamed webpack webpackbundleanalyzer webpackdevmiddleware webpackdevserver webpackhotmiddleware webpackmerge webpacknodeexternals webpackstream", "d": "12/2016"}, {"body": "intentional", "d": "12/2016"}, {"body": "aluanhaddad wrong one cant say hey inheriance simple replace look logic", "d": "12/2016"}, {"body": "defending restating", "d": "12/2016"}, {"body": "aluanhaddad problem mate invented copy code components share template dont use api build ether", "d": "12/2016"}, {"body": "number custom decorators use keep things nice dry also provide proper typechecking framework apis literally refuse provide nt work aot invoke angular decorators functions acting wrappers", "d": "12/2016"}, {"body": "aluanhaddad admit share continued frustration aot well gon na use fp generate pipes object transform functions lambdas aot nono checked guess different approach drying pipes least pretty cool definitely wish aot would nt mess everything though whole thing manually rewriting things manually export lambdas seems pretty unfortunatesilly feels like something machine could well human", "d": "12/2016"}, {"body": "yes planning supporting lamdas ng", "d": "12/2016"}, {"body": "tbosch wonderful news thanks headsup", "d": "12/2016"}, {"body": "thanks tsmonad looks pretty slick tbosch appreciate humor however seriousness aot compiler pedestrian ca nt understand code hear angular team needs statically analyzable sure well literally typescript problem understanding structure code put another way says whole thing manually rewriting things manually export lambdas seems pretty unfortunatesilly feels like something machine could well human nt aot smart enough transformation automatically needs aot chokes nt working asts", "d": "12/2016"}, {"body": "aluanhaddad credit due pretty much forked one p", "d": "12/2016"}, {"body": "using angular class webpack starter angular still getting warning warning angularcoresrclinkersystemjsngmodulefactoryloaderjs critical dependency request dependency expression webpackcommonjs following code present", "d": "12/2016"}, {"body": "proposed fix sure right needs design thinking", "d": "12/2016"}, {"body": "pkozlowskiopensource close one", "d": "12/2016"}, {"body": "hi version provide fix", "d": "12/2016"}, {"body": "amp", "d": "12/2016"}, {"body": "chrismurphy u provide small repro using latest angular", "d": "12/2016"}, {"body": "issue caused method creates new instance type rather injected type service calls method merging options post put patch methods imo either make follow prototype pattern remove change post put patch methods service", "d": "12/2016"}, {"body": "alternatively refactor put patch post merging default options parameters options parameters rather default options property example becomes closely follows pattern used working request overloads", "d": "12/2016"}, {"body": "mattheiler could u add small plunker reproducing issue observed vs expected result", "d": "12/2016"}, {"body": "plunkr provided chrismurphy exactly provide aside different implementation look providers would expect injected service preserved cloned merge process correct merge implementation executed", "d": "12/2016"}, {"body": "plunkr provided chrismurphy exactly provide nt work", "d": "12/2016"}, {"body": "would problem hold tick throw one together", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "mattheiler thx look", "d": "12/2016"}, {"body": "think look extract property assignment merge make proper clone merge override private methods like preventing us export class requestoptions export class customrequestoptions extends baserequestoptions", "d": "12/2016"}, {"body": "mattheiler nt fix issue", "d": "12/2016"}, {"body": "nt fix plnkr however thinking way created confusing consumers sure class method something overridden see something like objectassign suggest making merge method static assignment source target used like following current implementation creates new instance merge method default options instance allows merge method overridden source issue implementation could proper merge rather factorytype method", "d": "12/2016"}, {"body": "think merge causes confusion issue", "d": "12/2016"}, {"body": "untested idea like merge current implementation", "d": "12/2016"}, {"body": "basically u want ability override method nt like idea already much unnecessary coping merging making one method public current implementation creates new instance merge method default options instance allows merge method overridden source issue u use expected behavior expected", "d": "12/2016"}, {"body": "nt understand u want another method implementation like u full control u override method like u want return u want", "d": "12/2016"}, {"body": "chrismurphy wanted override method realize wrong arguing method exposed therefore overridden call nonissue hidestaticize method merging creating returning new object nt implementation provided source issue", "d": "12/2016"}, {"body": "merge seems like utility rather behavior get wanted override merge like injectable export class customrequestoptions extends baserequestoptions", "d": "12/2016"}, {"body": "point merge nt merge creates factory working expected understood digging code expect work like objectassign think issue purpose function confusing way defined utility exposed classlevel function opinion want", "d": "12/2016"}, {"body": "discovered workaround replace viewencapsulationnone using deep scss files per component styles guide docs inject styles global host deep apply style self children globally", "d": "12/2016"}, {"body": "got error try use angularcli version", "d": "12/2016"}, {"body": "discovered workaround replace viewencapsulationnone using deep scss files per component styles guide docs inject styles global may work project replaced still aot throws error runtime looks like error caused using angularcli", "d": "12/2016"}, {"body": "project green use encapsulation viewencapsulationnone app nt work browser aot option browser get error console compile without error helps", "d": "12/2016"}, {"body": "hello lvlbmeunier thank providing suggestion workaround waiting official implementation tried implement solution seem get dynamic translation keys get recognized trying like new keys nt show xliff files possible achieve solution", "d": "12/2016"}, {"body": "never tried almost certain build xliff file run code dynamic value would contrary concept know certain name would list declared independently loop", "d": "12/2016"}, {"body": "adding keys manually works impractical case get hundreds text keys need translation api", "d": "12/2016"}, {"body": "run code take source copy file generation file based static file", "d": "12/2016"}, {"body": "assigning id instance maintitle least jit compiler create dummy component nt need added app html app module extra translations starters add providers compiler app module well create dummy component house extra translations nt forget add component find html think add translation file typescript import component angularcore component selector moduleid moduleid templateurl export class add translations create service fetch translations typescript import injectable inject translations angularcore import htmlparser xliff angularcompiler injectable export class private source string private translations name string something like typescript export class appcomponent hacky workaround least leverage translation file get key interpolate hidden html application note current npm package incorrect dependency version points vicb easily fixed wait next release", "d": "12/2016"}, {"body": "fredrikredflag awesome aot", "d": "12/2016"}, {"body": "ghidoz aot another story would like precompile translations get key since replace correct translation ca nt leverage ca nt find exposed optionsproperties contains parsed translations could use dynamic approach jit fetching xlt file way still provide token however goes purpose aot nt production apps typescript bootstrapaotts function fetchlocale const locale sv const noproviders object fetchlocale providers gt const options providers platformbrowser", "d": "12/2016"}, {"body": "current thinking implement could affect dom structure construct could support runtime translations would single version binary resolution would happen runtime also support static translations today templates strings would replaced compile time better perf one version app per locale could probably support templates later point would implemented via ts transformer available could probably prototype cc ocombe", "d": "12/2016"}, {"body": "suppose method name yet method would nt really right good idea static translations might use classes pretty simple implement think", "d": "12/2016"}, {"body": "name nt like commonly used translation frameworks able prefer name", "d": "12/2016"}, {"body": "eeeeeeh self explaining looks like private function", "d": "12/2016"}, {"body": "nt like method name either imagined would service either way good see progress", "d": "12/2016"}, {"body": "like gettexty short js world experience ocombes marking text thistranslateserviceinstant makes code somewhat harder read compared shorter alternative like proposed", "d": "12/2016"}, {"body": "nothing stops renaming translate service know", "d": "12/2016"}, {"body": "actually idea wrap di service method simple function anyway never mind beyond scope issue comment using well known ever used translation frameworks least php world", "d": "12/2016"}, {"body": "okay maybe fine better thistranslationservicegettranslation much shorter yes rename like", "d": "12/2016"}, {"body": "instead", "d": "12/2016"}, {"body": "please stop debate name point thanks", "d": "12/2016"}, {"body": "vicb possible resolve id ie also would local class defined would possible resolve anywhere thinking common translations close open etc", "d": "12/2016"}, {"body": "hi project stops building modules way disable aot running ng serve thanks", "d": "12/2016"}, {"body": "take rollup command aot script trying lazy load rollup creates single file loaded site navigated dec anders hagebakken notifications githubcom wrote hi project stops building modules way disable aot running ng serve thanks receiving subscribed thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "thanks armno issue importing libs order provided worked", "d": "12/2016"}, {"body": "activity repro final close pkozlowskiopensource", "d": "12/2016"}, {"body": "still relevant final plunkr nt work", "d": "12/2016"}, {"body": "dzmitryshylovich yes issue still exists created new plunker works shows problem guessing old one stopped functioning due angular framework updates", "d": "12/2016"}, {"body": "problem live site using angular linking nt match also suggest severity increased inconvenient usable add optional route parameters routes nt child routes routes breaking lt nevermind nt thorough", "d": "12/2016"}, {"body": "pcroc pls add small repro plunkr using latest angular", "d": "12/2016"}, {"body": "andrevmatos updated directive would consider bit cleaner approach sharing formcontrol input passed html element already formconrol directive selector formcontrol disablecond export class disableformcontroldirective input formcontrol formcontrol allows us remove duplication template", "d": "12/2016"}, {"body": "kara although would really appreciate angular team could update reactive forms component track formcontrol disabled property correctly", "d": "12/2016"}, {"body": "andrevmatos ptcjoshuamatthews found also version gh issue comment unsafecode quite interesting", "d": "12/2016"}, {"body": "facing issue nt clean way disable portions reactivemodeldriven form use case pretty common consider group radio buttons display child form selected subform selected needs disabled order make entire form valid really like ptcjoshuamatthews realized defeats purpose using reactive forms words disabling becomes templatedriven test need parse template far tell best way stay modeldrivenreactive subscribe control call corresponding subform verboseugly really surprised nt better way achieve", "d": "12/2016"}, {"body": "pmulac ptcjoshuamatthews directive definitely useful like point project end many single controls eg input checkbox disabled switched binding order actually disable input validation somehow involved eg readonly field ignored condition made custom validation took condition account hand matter disabling whole forms looks binding still works good warning", "d": "12/2016"}, {"body": "braincrumbz one issue readonly disabled actual form control object disabled state affect functionality form instance validations attached form control still run required field disabled form considered invalid using directive posted properly disable form control skip validation disabled fields", "d": "12/2016"}, {"body": "edit figured without using directive see link saw warning console trying solve rxjs way per comment pmulac subscribe valuechanges case need enable control disabled init question anyone shed light solve thanks", "d": "12/2016"}, {"body": "rmcsharry see alternate solution", "d": "12/2016"}, {"body": "noamichael thanks ref", "d": "12/2016"}, {"body": "anyone finds way googling error occurs pasting heroes tour example default generated angularcli project remove lines add urls", "d": "12/2016"}, {"body": "tried lambada issue latest ngcli", "d": "12/2016"}, {"body": "kriskit could u update plunkr", "d": "12/2016"}, {"body": "hello trying test app using mocha webpack async tools imported mochapatchjs declared globals mocha mochashimjs var jsdom require jsdom var document jsdomjsdom var window documentdefaultview globaldocument document globalhtmlelement windowhtmlelement globalxmlhttprequest windowxmlhttprequest require require require zonejsdistzone require zonejsdistlongstacktracezone require zonejsdistproxy require zonejsdistsynctest require zonejsdistmochapatch require zonejsdistasynctest require zonejsdistfakeasynctest var testing require angularcoretesting var browser require angularplatformbrowserdynamictesting testingtestbedinittestenvironment browserbrowserdynamictestingmodule browserplatformbrowserdynamictesting run mochawebpack getting following error declare window globaly getting following error guess something wrong nt know anyone help thanks", "d": "12/2016"}, {"body": "probably want phantomjs karma run mocha tests rather using mocha directly node", "d": "12/2016"}, {"body": "nt want use karma phantomjs possible want also understand working new zonejs release", "d": "12/2016"}, {"body": "ah sure sure supported use case think meant use universal running angular node might able get better support stackoverflow", "d": "12/2016"}, {"body": "run angular webpack correctly problem new mochapatch want know use testing mocha webpack work well nt use async tools try stackoverflow also thanks", "d": "12/2016"}, {"body": "hey hichambi using mocha jsdom without issues though nt use official patch rather see earlier comment thread also copy properties jsdom window global set globalwindow everything requiring zonejs company hope helps", "d": "12/2016"}, {"body": "hi sleepyowl thanks answer require zonejs declaring globalwindow without getting error case getting automatically error var zonesymbol zone symbol referenceerror zone defined even use new mochapatch thanks", "d": "12/2016"}, {"body": "hichambi looking code zonejs version require section another thing note custom mocha runner tests", "d": "12/2016"}, {"body": "hichambi done digging look like mochashim running mocha loaded functions suppose exported global context available mochashim executed reason get try assign globalwindow global look like reason early moved patching entry file created executed mochawebpack located tmpmochawebpackentryjs nt get errors top file look like nt know mochawebpack well probably better place put test tried put mochawebpackopts file also early", "d": "12/2016"}, {"body": "thanks nording answer yes right placing global mochashim early even requiring mocha mochapatchjs tmpmochawebpackentryjs file proxy zone initialized correctly still getting using mochapatchjs like way mochawebpack working moment thanks", "d": "12/2016"}, {"body": "finally tests angular application like way mochapatch work fine use mochaloader webpack plugin browser testing tests node used jsdom without mochapatch tests working fine right thanks lot help", "d": "12/2016"}, {"body": "passiv event listener syntax extensible allow maybe others future", "d": "12/2016"}, {"body": "syntax ultimately extensible click gt capture true scroll gt passive true scroll scroll scroll", "d": "12/2016"}, {"body": "campersau passive event listeners discussion", "d": "12/2016"}, {"body": "problem load angular app safari working fine chrome mozila please help", "d": "12/2016"}, {"body": "also experiencing issue using direct url guards called resolved", "d": "12/2016"}, {"body": "also running issue direct url", "d": "12/2016"}, {"body": "direct url bring problem ticket", "d": "12/2016"}, {"body": "somebody provide small repro plunkr", "d": "12/2016"}, {"body": "plunker", "d": "12/2016"}, {"body": "similar issue case long running process causes child fire", "d": "12/2016"}, {"body": "using still getting issue", "d": "12/2016"}, {"body": "hibumbapartha problem fixed reopen need provide info case asked question create new question explaining case understand help better easiest way", "d": "12/2016"}, {"body": "question first found issue angularcli using webpack also found thing using systemjs trying reproduce plunker reproduceable plunker link", "d": "12/2016"}, {"body": "hibumbapartha using still getting issue solve", "d": "12/2016"}, {"body": "tbosch accept pr add underscores prefixes generated ts code", "d": "12/2016"}, {"body": "jameshenry instead generate code add parameters could list cases issue ca nt avoid parameters probably add underscores right places", "d": "12/2016"}, {"body": "bypass upgradeadapter using upgradecomponent downgradecomponent angularupgradestatic since static dynamic assume means also must enable aheadoftime compilation aot project work ca nt aot look guojenman workaround see upgradecomponentdowngradecomponent usage", "d": "12/2016"}, {"body": "alexsapps nt require aot makes possible works jit mode", "d": "12/2016"}, {"body": "well existing mvc site need able exist sub folder part existing site solve problem lt existing mvc route aspnet c wwwmysitecomhelp lt existing mvc route aspnet c wwwmysitecomacheckout lt new section written checkout order processing cancel orders returns etc wwwmysitecomaorder lt new section written checkout order using angularcli make sure use ng build baseurl parameter set building code add following webconfig routes needed", "d": "12/2016"}, {"body": "still issue listening events", "d": "12/2016"}, {"body": "lwu work thanks", "d": "12/2016"}, {"body": "absolutely would nice access route params service create service based route changes component free route params subscription", "d": "12/2016"}, {"body": "run took find issue unfortunately wonder causing", "d": "12/2016"}, {"body": "sad truth annoying able useutilize builtin validations angular disappointed", "d": "12/2016"}, {"body": "hi thanks hard work using angularrouter try get configroute gives quite sure injected activatedroute successfully please correct using wrong way start using several days thanks", "d": "12/2016"}, {"body": "provide information like route structure looks like", "d": "12/2016"}, {"body": "hi brandonroberts route config appcomponent signupcomponent put code log routeconfig signupcomponent also realized log appcomponent always null log signupcomponent always route config url even switched news page want take current page use appcomponent maybe way sorry skill good enough thanks", "d": "12/2016"}, {"body": "alexeagle", "d": "12/2016"}, {"body": "written design doc think shared publicly yet vikram comes back vacation next week may able get state shared", "d": "12/2016"}, {"body": "sod expected behavior error case", "d": "12/2016"}, {"body": "either throw error crash remove old component outlet adding new one never append new component outlet old one zomies around", "d": "12/2016"}, {"body": "throw error crash tested webpack already works like append new component outlet old one zomies around works like systemjs", "d": "12/2016"}, {"body": "brandonroberts evgenykravchenko routes imported ngmodules merged together host ngmodule true whether using routing module hierarchy routes created importing one module another routes overriding feels counterintuitive believe route trees auto created way injector trees created via module tree construction anything else much work orand counterintuitive sure fully understand created play project order help others understand create route hierarchies properly handle unmatched routes done things following latest tutorial routing feature modules link please review lets bring life help everyone", "d": "12/2016"}, {"body": "thanks alot example really thank much", "d": "12/2016"}, {"body": "give talk regarding topic found solution find simple examples systemjs lazy loading custom preloading hello world lazy routing application hello world lazy routing application preloading hello world lazy routing application custom preloading hope helps", "d": "12/2016"}, {"body": "nt really sound responsibility eg directives nt add aria attributes could aria separate concern handled consistently throughout app either developer dedicated moduledirectives late party guess confused", "d": "12/2016"}, {"body": "also faced similar issue resolved installing npm install g typings save project folder typings install also make sure need latest typescript compiler using typescript", "d": "12/2016"}, {"body": "pkozlowskiopensource fixed closed", "d": "12/2016"}, {"body": "limited feature example u navigate gt component reused resolver fetch new data happen next ca nt inject new data already created component useless reused components", "d": "12/2016"}, {"body": "whether feature limited depends whether argue component reuse right feature indeed limited perhaps way see bigger picture personally think component reuse angular overrated hampers simplicity programming model really objectionable recreate component every route", "d": "12/2016"}, {"body": "sure im missing point excuse misunderstood problem since used uirouter angularjs already using uirouter nt really bother learning much original router far uirouter define resolves within state component associated state created transitioning state use resolves input within component using typescript might look something like component template require bookdetailhtml export class bookdetail allows either input book resolve attribute binding within custom html tag depending behaviour needed example either detailpage state list book details", "d": "12/2016"}, {"body": "colorfulstan sounds like", "d": "12/2016"}, {"body": "dharders u pls update plunkers", "d": "12/2016"}, {"body": "think get around subscribing outside validator", "d": "12/2016"}, {"body": "lot unnecessary render empty text using html minify parsing templates reduced app size", "d": "12/2016"}, {"body": "lightweight alternative momentjs", "d": "12/2016"}, {"body": "going issues touching pipes mostly date time formatting one convinced current way providing custom formats top api problematic proposal aims addressing custom formats part api implemented sth similar would allow us proper solution current approach parsing output api flawed best prof sure best approach open options include pushing standardization suggesting polyfill till dropping api favour sth else hand rolled solution wellknown library like momentjs still gathering issues listing open options till process clear next steps wo nt merge new prs change api surface", "d": "12/2016"}, {"body": "hand rolled solution nt think better intl", "d": "12/2016"}, {"body": "pkozlowskiopensource using moment js good option common piece framework neither hand rolled solution would work looks really promising easier implement pipe top moment js rather jumping around api builtin date pipe may worth extract formatting pipes common something flexible separate npm package could update frequently", "d": "12/2016"}, {"body": "problem got compilercli compiler", "d": "12/2016"}, {"body": "belapie still issue could u provide small repro plunkr", "d": "12/2016"}, {"body": "issue problem incorrect translation dsl code", "d": "12/2016"}, {"body": "terminology misleading context ngupgrade simply means making angular thing component service available angular context ngupgrade dom element must owned exactly one angular angular since angular less versatile angular bootstrapped web page turns best library top level dom node owned angular means want app root component angular must downgrade component place root dom element bootstrap angular downside downgrading root component way performance effects may seen due interoperation angular angular general would exist whether root component angular", "d": "12/2016"}, {"body": "may possible bootstrap angular bits need angular component new library looking change library", "d": "12/2016"}, {"body": "closing think explained please open new issue want continue discussion", "d": "12/2016"}, {"body": "approach nt seem work dependencies npm otherwise essential", "d": "12/2016"}, {"body": "adrriver issue closed dated think found bug please open new issue plunker reproduce submit question stackoverflow support questions", "d": "12/2016"}, {"body": "see", "d": "12/2016"}, {"body": "sure fully understand created play project order help others understand create route hierarchies properly handle unmatched routes done things following latest tutorial routing feature modules link please review lets bring life help everyone", "d": "12/2016"}, {"body": "dozens singlepurpose components included number components forms subforms views etc example consider orderform consisting one component customer information one component formarray orderitem one component orderitem orderform locked amount components presenting view changed user create ngmodule every one components create one ngmodule orderitem related components means loading view component also load formmodulereactiveformmodule example completely unneccesary create single ngmodule quite bloated result longer load times also bad using bundling one single huge file bad thing currently see way make one ngmodule every single componentsubcomponentmodaletc file application order affect load times force make several dozen hundreds", "d": "12/2016"}, {"body": "legitimate response still closed big issue needs fixed see point touting benefits componentization immediately stuffing components one module loaded every time matter pathetic adaptation stalled couple massive problems would nice atleast one addressed meaningful way atleast let us know working fix problem", "d": "12/2016"}, {"body": "built way technical reasons nt expect change rather embrace modules work instead beating dead horse", "d": "12/2016"}, {"body": "brandonroberts want use component across multiple modules need create shared module add component shared module exports add shared module modules imports performance issue way like lib system loaded need shared loaded", "d": "12/2016"}, {"body": "shared module work componenet componenet router tlst doesnt work", "d": "12/2016"}, {"body": "yes talking component router see example going use share module could please explain performance issues inside brandonroberts way cause would like performance issue", "d": "12/2016"}, {"body": "said next situation sharedmodule import toolbarform jsonschemaformformstoolbarindex import ngmodule angularcore import commonmodule angularcommon import formsmodule angularforms ngmodule imports commonmodule formsmodule declarations toolbarform exports toolbarform export class sharedmodule personalstaffdismissed indexts file import commonmodule angularcommon import formsmodule angularforms import ngmodule applicationref angularcore import routermodule angularrouter import personalstaffdismissed staff import schemaformmodule srcsschemaformschemaformmodule import sharedmodule systemmoduleextendesmodules export const routes path component personalstaffdismissed pathmatch full ngmodule declarations personalstaffdismissed imports commonmodule formsmodule schemaformmodule sharedmodule routermoduleforchild routes component personalstaffdismissed component toolbar declarated error browser example declareted personalstaffdismissed sharedmodule ok used router", "d": "12/2016"}, {"body": "getting problem even already included following code webpackconfig described angulario project using aspnet mvc angular using one many single page app currently error facing uglify process ngmodel becoming ngmodel lower case promise rejection template parse errors ca nt bind ngmodel since nt known property input olumnmainmap ngmodel showtrafficlayer ngmodelchange mapservicesettraffic event show traffic lt appcomponent ca nt bind ngif since nt known property div event show traffic ngifdispatchserviceisloading original uglify anyone faced issue", "d": "12/2016"}, {"body": "default behavior nt think much", "d": "12/2016"}, {"body": "thank mintsaus think shall better documented cause ngzone smart enough handle cases obvious first use developing mobile apps cordova plugins", "d": "12/2016"}, {"body": "used matrix params need urlencode need use", "d": "12/2016"}, {"body": "makes sense problem routerlink encode parenthesis encode special characters including results double encoding manually encode parenthesis using parameters routerlink broken route nt", "d": "12/2016"}, {"body": "bennypowers still issue final u update plunkr", "d": "12/2016"}, {"body": "apparently plunkr created link new issue template", "d": "12/2016"}, {"body": "thx pls add steps reproduce expected behavior", "d": "12/2016"}, {"body": "sorry sure steps reproduce expected behaviour missing op steps reproduce create form validation use template file expected behaviour form validates", "d": "12/2016"}, {"body": "wrong", "d": "12/2016"}, {"body": "comment inline template uncomment templateurl", "d": "12/2016"}, {"body": "ok see thx btw sure forms related", "d": "12/2016"}, {"body": "still issue", "d": "12/2016"}, {"body": "seems like please reopen still issue", "d": "12/2016"}, {"body": "problem unfortunately routing quite complicated nt got plunkr seams like always calculated correctly last track getting lost suppose certain conditions expression evaluates value project really lot definitions maybe expression counting something counted sorry nt see position better contribute problem workaround nt work first part eliminated change matrix parameter path parameter workaround maybe queryparams", "d": "12/2016"}, {"body": "hgoebl thx hard something without reproduction", "d": "12/2016"}, {"body": "dzmitryshylovich right maybe somebody insight knowledge could suppose method bug without knowing exactly luck sometimes bugs found reading code", "d": "12/2016"}, {"body": "still issue trying reload current route different matrix parameters mandatory params causes read property path undefined", "d": "12/2016"}, {"body": "chpasha u reproduce plunkr", "d": "12/2016"}, {"body": "status included upcoming releases", "d": "12/2016"}, {"body": "stevenrobijnsmacadam use case", "d": "12/2016"}, {"body": "dzmitryshylovich want supply data example id maybe whole object one screen another navigating without needing put state uri navigating apiorder apiorderlineorderlineid routernavigate example want supply orderid orderlinecomponent hidden manner nt want see orderid reflected route", "d": "12/2016"}, {"body": "dzmitryshylovich see reply", "d": "12/2016"}, {"body": "poke still issue u provide small repro plunkr", "d": "12/2016"}, {"body": "dzmitryshylovich yeah situation still changed updated plunker current versions", "d": "12/2016"}, {"body": "poke u pls add steps reproduce issue description", "d": "12/2016"}, {"body": "dzmitryshylovich plunker update example gave comment simplified situation one used original post basically within example switch different subroutes input field enter something one route switch another route state input persists way avoid outside making aware position within route setup breaking separation concerns making component reusable outside exact route", "d": "12/2016"}, {"body": "ok thx input field component reused described u several options subscribe reset component state updates u implement custom reuse strategy always recreate component", "d": "12/2016"}, {"body": "poke u solve issues closed", "d": "12/2016"}, {"body": "dzmitryshylovich oh sorry never got back implementing custom reuse strategy seems looking way disable router component reusing completely even use custom logic selectively avoid problems completely happy since still leaves underlying problem inside default case still opinion odd default behavior router least actual way get around unlike release glad made release eventually option subscribe router events really solution eyes still moves responsibility reset state components knowledge locality within router get made sense solution routerlink problematic fixed yeah happy custom reuse strategy issue closed guess thank help interested running situation disable router reusing basically implement custom use defaultroutereusestrategy base change return whenever want disable route reusing note return permanently break router completely cases return instead basically assuming custom logic actually reuse routes implementation would look like provide class using ngmodule everything work fine see action plunker builds upon previously linked example", "d": "12/2016"}, {"body": "template ngc failed line combodetailngfactoryts go fix template template ngc passed yaay oops getting error ngfor expects iterable chicken egg situation error find differ supporting object object object type object ngfor supports binding iterables arrays works dev mode without ngc help appreciated", "d": "12/2016"}, {"body": "sudharsanmit use controls templates get components", "d": "12/2016"}, {"body": "ngc allow controls referenced ngfor pls see snippet never problem ts file use either thursday december natcohen notifications githubcom wrote sudharsanmit use controls templates get components receiving mentioned reply email directly view github mute thread lt", "d": "12/2016"}, {"body": "sudharsanmit ospaarmann solution ever found errors using ionic works fine web browser compile ios android errors mentioned thread thanks help", "d": "12/2016"}, {"body": "using get way forward friday december mikey diamonds notifications githubcom wrote sudharsanmit ospaarmann solution ever found errors im using ionic works fine web browser compile ios android errors mentioned thread thanks help receiving mentioned reply email directly view github mute thread lt", "d": "12/2016"}, {"body": "thanks reply sudharsanmit code template causing error compile ios terminal command works expected web browser using something incorrectly followed great tutorial", "d": "12/2016"}, {"body": "write like change view component gettasks jobform return jobformget tasks controls sat dec mikey diamonds notifications githubcom wrote thanks reply sudharsanmit code template causing error property controls exist type abstractcontrol ngc failed compile ios terminal command ionic build ios works expected web browser using something incorrectly followed great tutorial receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "oh wow looking entirely wrong thanks much sudharsanmit", "d": "12/2016"}, {"body": "problem bit vexing stumble confirm still present", "d": "12/2016"}, {"body": "nt think bug rather peculiarities rxjs cold observables conjunction using inner html angular template syntax removed dom angular expressions evaluated predicate becomes every become thus angular compiler evaluate statement pipe upon evaluation create subscription cold observable catch emit value first passed since subscription pipe came subscription also flips every condition become false inner subscription trigged template content removed subscription unsubscribed ever single value emitted note works completely different maintain subscription observable whole time even condition becomes create new subscription every time condition becomes", "d": "12/2016"}, {"body": "closing nt repro available", "d": "12/2016"}, {"body": "also ran add watcher side detect changes vicb plunker angularupgrade setup happy make repro get template start might also nice link one documented angularupgrade related issues", "d": "12/2016"}, {"body": "think capitalization output events got mine working renamed lower case name apparently everything works use following syntax ps also checked coming network proper casing", "d": "12/2016"}, {"body": "think experiencing thing following error expression changed checked previous value cdinitvalue current value message seems like view created parent children dirty checked created change detection hook levels dynamically rendered components one nested within applying settimeout hack things appear work", "d": "12/2016"}, {"body": "news", "d": "12/2016"}, {"body": "current solution use use obseravble async", "d": "12/2016"}, {"body": "ran problem well inherited type needs find base type children navlist navitem additional behavior looking navitem using forwardref include navlist children looks like also including", "d": "12/2016"}, {"body": "still issue exemple interop", "d": "12/2016"}, {"body": "vicb look later work day checked code far repo use different strategies creating routes vsavkin uses template component created ie way creating routes issue used upgraded component class ie messagecomponent way creating routes said try latest release version give feedback time", "d": "12/2016"}, {"body": "still issue u update plunkr nt load", "d": "12/2016"}, {"body": "dzmitryshylovich yes updated plunker", "d": "12/2016"}, {"body": "think one closed favor", "d": "12/2016"}, {"body": "fixed closed", "d": "12/2016"}, {"body": "patrickracicot u reproduce issue using latest version", "d": "12/2016"}, {"body": "try next week currently town dec dzmitry shylovich notifications githubcom wrote patrickracicot u reproduce issue using latest version receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "used angular issue fix initial select option set null working ieedge safari", "d": "12/2016"}, {"body": "mrhoy u add small repro plunkr", "d": "12/2016"}, {"body": "dzmitryshylovich try ieedge safari", "d": "12/2016"}, {"body": "mrhoy see thx", "d": "12/2016"}, {"body": "would happen soon writing lots components similar animation applied directive desirable make code dry", "d": "12/2016"}, {"body": "workaround create file like use components like ts import animations animations component selector myapphero styleurls herocomponentcss templateurl heorcomponenthtml animations animationsherostate", "d": "12/2016"}, {"body": "molcik idea nt work aot ngc p tsconfigaotjson error error encountered resolving symbol values statically expression form supported position original ts file resolving symbol animations", "d": "12/2016"}, {"body": "idea using jit currently", "d": "12/2016"}, {"body": "using string template literals animations sure ca nt exported aot fri dec filip mol\u010d\u00edk notifications githubcom wrote idea using jit currently receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "molcik workaround useful without encapsulating triggering half way particular problem animating revealing items present based ngif add timeouts manage appearance amp animation properly would great define sort logic", "d": "12/2016"}, {"body": "nosachamos already fixed closed", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "somebody reproduce plunkr u use starting point", "d": "12/2016"}, {"body": "dzmitryshylovich changed template hello name calculatedname hello supposed added ngonchanges never gets called calculatedname always empty", "d": "12/2016"}, {"body": "met issue", "d": "12/2016"}, {"body": "absolutely right works expected u need test without changing component inputs call", "d": "12/2016"}, {"body": "news find weird frequency would low course could biased directly affected though", "d": "12/2016"}, {"body": "log router object clearly see knows future url however log current url seems like real bug", "d": "12/2016"}, {"body": "show object last state execution state called", "d": "12/2016"}, {"body": "okay please tell access future router state", "d": "12/2016"}, {"body": "news releasing query feature", "d": "12/2016"}, {"body": "query feature ready animating routes transitions like approot animationduration opacity animationname fadein animationfillmode forwards keyframes fadein opacity opacity stylecss file", "d": "12/2016"}, {"body": "good call ranbuch case want animation container new view amended bit approot animate first sibling routeroutlet routeroutlet amp animationduration opacity animationname viewfadein animationfillmode forwards", "d": "12/2016"}, {"body": "really like idea actually nt know add animation every route", "d": "12/2016"}, {"body": "update release date query feature", "d": "12/2016"}, {"body": "matsko wrote get query support animations sometime weeks jul almost half year passed connecting animation every route application way keep code simple", "d": "12/2016"}, {"body": "ca nt confirm issue fixed still issue nt respect status code", "d": "12/2016"}, {"body": "fixed still issue", "d": "12/2016"}, {"body": "vinaysoni", "d": "12/2016"}, {"body": "sticky routes great thing solve many kinds issues vinaysoni would also prefer opposite possible telling router reload state certain parent level even root reload true reload appsomefeatureparent option uirouter subscribing data changes component enough plenty resolvers attached complex states injected components retrieve data backend need refreshed well router currently refresh case would manually orchestrate refresh resolvers component subscription route data observable framework handle using really ugly hack right really thankful god changing country app basically means reloading whole ui business point view client nt care whole window reloaded case use case differentmore complex component tree need reload specific subtree could well shoot head", "d": "12/2016"}, {"body": "initial issue fixed furtherdistinct issues please open distinct ticket thanks", "d": "12/2016"}, {"body": "second confirmation keyiis problem although notice chrome well change cursor position within dom element reset cursor beginning element", "d": "12/2016"}, {"body": "problem workaround handles cursor position better change model somewhere else focused element cursor still resets manually update cursor position updating model", "d": "12/2016"}, {"body": "gone currently componentlocal pipes created aot compilation needs class extract type information proposal obsoleted", "d": "12/2016"}, {"body": "merged somebody reproduce issue closed", "d": "12/2016"}, {"body": "works great dzmitryshylovich", "d": "12/2016"}, {"body": "problem pretty large switch pull ideally production mode html attributes handy dev example using something like aggrid could grind application halt think would great least limit output", "d": "12/2016"}, {"body": "way disable ngreflect without using enableprodmode great performance makes inspecting dom difficult sometimes", "d": "12/2016"}, {"body": "ghetolay still issue final u pls update plunkr", "d": "12/2016"}, {"body": "ok made new plunker fixed thks", "d": "12/2016"}, {"body": "component load", "d": "12/2016"}, {"body": "closed without explanation", "d": "12/2016"}, {"body": "works though using rather route url matching exact true current url test nt match matches exact false current url test matches matches", "d": "12/2016"}, {"body": "keithball correct", "d": "12/2016"}, {"body": "intergleam issue resolved months ago issue still open nt closed pr fixed", "d": "12/2016"}, {"body": "brian still issue final", "d": "12/2016"}, {"body": "testing bundles included took care many testing issues including one", "d": "12/2016"}, {"body": "confused rootcomponent method looks work long add declaration trying load routes rest api add case time try navigate one routes get error idea possible reason fix thanks", "d": "12/2016"}, {"body": "got fix locally issues using date get timecomponent functions broken scenarios garyb worth trying although would mean need hardcode implement padding time separators right nt know enough possible formats display across locales world know safely", "d": "12/2016"}, {"body": "dot seems change error root segment url segment", "d": "12/2016"}, {"body": "issue electron app figured window app window devtools opened via app index conf worked deleted line javascript exportsconfig function return capabilities browsername chrome chromeoptions binary electronbinary relative path packaged app binary hope helps", "d": "12/2016"}, {"body": "problem happens component databound inputs still implements onchanges triggered component inputs changed inputs changes form docs angular calls ngonchanges method whenever detects changes input properties component directive example monitors onchanges hook pkozlowskiopensource closed julienbroi something clear pls reopen", "d": "12/2016"}, {"body": "still issue latest angularzonescorejs", "d": "12/2016"}, {"body": "confirm updating zonejs issue fixed firefox even angular also works ok chrome safari fetch polyfill hands one mysteriously disappeared bug", "d": "12/2016"}, {"body": "issue fixed zonejs clear", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "reading lot discussion finally got workable perfect solution first use systemjsbuilder build rxjs systemjs bundle const builder require systemjsbuilder var builder new builder builderconfig paths rxjs nodemodulesrxjsjs map rxjs nodemodulesrxjs packages rxjs main rxjs defaultextension js systemconfigjs file remove everything related rxjs add bundle like additional work need include rxminjs script tag html systemjs automatically load rxminjs simpe app requests reduce half images scripts css files final rxminjs close perfect solution far thanks unlight damiandennis", "d": "12/2016"}, {"body": "fine question original rxminjs work way", "d": "12/2016"}, {"body": "snips helpful situation helpful load much possible via system js runtime running something similar rougher upgrade set shortly", "d": "12/2016"}, {"body": "closing number useful solutions issue nt something angular fix thanks helping unlight damiandennis", "d": "12/2016"}, {"body": "mlcmlapis well would beyond knowledge sorry answer one thing sure rxminjs bundled rxjs nonminfied rxjs systemjsbuilder build full rxjs minfied mangled rxminjs may problem nt believe systemjs bundle would simply add bundle question rxjs shipped rxjs meant systemjs", "d": "12/2016"}, {"body": "well created issue rxjs repo maybe somebody knows answer see", "d": "12/2016"}, {"body": "reason system bundle larger reason issue exists umd bundle expose internal modules deep import umd bundle flatten remove module wrapping systemregister bundle expose modules deep import significant amount overhead maintain structure", "d": "12/2016"}, {"body": "rob telling us rxminjs rxjs files bundles directory rxjs node module files umd internal structure remember time ago files rxumdjs rxminjs rxjs directory version rxjs rxumdjs disappeared true really funny answer evident nobody mentioned also realize", "d": "12/2016"}, {"body": "wonder possible configure system builder another tool yield bundle like system bundle format entry point modules exposed system modules actually work numerous internal modules squashed blob rollup similar larger necessary seems thing would ideal way distribute rxjs bundle use cases application level bundling suitable", "d": "12/2016"}, {"body": "tryied approach nt works follow error occurred used grunt task build rx installed systemjsbuilder via npm systemconfigjs put file prove theres nothing rx running using angular rxjs systemjsbuilder anyone know wrong code", "d": "12/2016"}, {"body": "think similar problem related app package resides try move sub folder", "d": "12/2016"}, {"body": "agreed upon common solution would love stop pulling individual files", "d": "12/2016"}, {"body": "mhdev changed app folder doesnt works ps moved files app folder except index systemconfigjs put app app systemconfigjs", "d": "12/2016"}, {"body": "tigredonorte try use relative path instead part", "d": "12/2016"}, {"body": "systemconfigjs works well use strict function global systemconfig defaultjsextensions true map tells system loader look things map app within app folder app scripts modules scriptsmodules angular bundles angularcore assetsglobalplugins angularcorebundlescoreumdminjs angularcommon assetsglobalplugins angularcommonbundlescommonumdminjs angularcompiler assetsglobalplugins angularcompilerbundlescompilerumdminjs angularplatformbrowser assetsglobalplugins angularplatformbrowserbundlesplatformbrowserumdminjs angularplatformbrowserdynamic assetsglobalplugins angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdminjs angular assetsglobalplugins angular angularrouter assetsglobalplugins angularrouterbundlesrouterumdminjs angularforms assetsglobalplugins angularformsbundlesformsumdminjs moment assetsglobalpluginsmomentminjs bundles assetsglobalpluginsrxminjs rxjs rxjsoperator rxjsobservable rxjsaddoperator rxjsaddobservable rxjsutil work pretty sure problem try update rxjs things changed spec angular rxjs systemjs systemjsbuilder", "d": "12/2016"}, {"body": "unlight thx solution works change imports use js beginners perspective kind bummer angular tutorial leads straight observables code indeed work one fiddle importdependency", "d": "12/2016"}, {"body": "akomm gubagu make sure apply animation host element component element within component make either code animated animation example declared parent implement child component animated like removal element wait end animation also note something noticed late", "d": "12/2016"}, {"body": "hi settled decision taken yet thanks", "d": "12/2016"}, {"body": "kara solution sounds great implementing single custom form control form top level component several subcomponents multiple form fields solution work make custom component form field know top level form dirty form control subcomponent changed thanks advance help", "d": "12/2016"}, {"body": "issue beta component modal checkboxes nt updating several places site use checkboxes similar way ca nt get work within modal using component loader values set properly js checkbox getting cleared ui using something like using get checked value sure nt working new case", "d": "12/2016"}, {"body": "stone age update newer version", "d": "12/2016"}, {"body": "zoechi thread originally beta x angular version disconcerting still issue rc version hard update newer version like made transition simple large application takes time executive prioritization support nt currently", "d": "12/2016"}, {"body": "fyi asking fixed beta exists", "d": "12/2016"}, {"body": "still issues latest angular somebody reproduce", "d": "12/2016"}, {"body": "possible make formarray fallback controls controls controls missing building angular form generator generates proper formgroup formarray formcontrol stucked generating form according object schema nt know many objects contained inside formarray generated form equivalent set value returns error understand reason fixed angular form fall back myarrcontrols sibilings form thanks", "d": "12/2016"}, {"body": "yjaaidi nt know realized modify first element removing name reflected third element id leave last element intact", "d": "12/2016"}, {"body": "meeroslav yes exactly behaviour describing remove first foo component first component reused second foo second one reused third foo third component destroyed try edit three foo inputs remove first one notice third foo component removed", "d": "12/2016"}, {"body": "could u update plunkr add steps reproduceexpected behavior", "d": "12/2016"}, {"body": "marcalj please open new issues problems considering basic lt connectivity see try moving newer library support aot nt require use possibly due router running initial navigation angular app booted try turning initial navigation triggering inside component app", "d": "12/2016"}, {"body": "testcomponentbuilder obsolete pkozlowskiopensource close", "d": "12/2016"}, {"body": "testcomponentbuilder obsolete indeed", "d": "12/2016"}, {"body": "planning provide support translated urls final ideas ways nt made decisions progress way link translated routes also needed", "d": "12/2016"}, {"body": "hi guys seems angular translate texts views messages embedded code something like translate", "d": "12/2016"}, {"body": "presume intent error message user view case include code thrown exception map code message template error handler component mon dec daniele ghidoli notifications githubcom wrote hi guys seems angular translate texts views messages embedded code something like throw new error request failed translate receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "yes error messages string hardcoded code present view old ngtranslate library service use translating string controller use later move messages view another way", "d": "12/2016"}, {"body": "plan able translate strings ts issue tracking feature gh", "d": "12/2016"}, {"body": "vicb could please post link ghidoz faced issue work coded somewhat hackish workaround notification component handles entire display mechanism added notification instance every errorwarninginfo situation application supports instance appropriate localized texts inside triggered using ngif andor ngswitch depending suits better", "d": "12/2016"}, {"body": "thanks got point always possible example need translate also web notifications nt view put possible texts vicb roadmap thanks", "d": "12/2016"}, {"body": "feloy earlier wrote crucial thing instead detection language bootstrap locale canada load english french locale belgium load dutch french german user south texas load english spanish even going switzerland india talk immigrants many countries get point hope real user need exists change language app loads angular support need expect used globally language changes see need check refresh cycle give user message language change take moment change event occurs user leaves app language stored cookie load language next time best guess user preference", "d": "12/2016"}, {"body": "hi mlaird talking languages countries exactly like browser gives possibility preferences define preferred language user texan user defines preferred language esus would get spanish ui expected", "d": "12/2016"}, {"body": "roadmap thanks try take look needed eo week come plan", "d": "12/2016"}, {"body": "philippe martin yes possible dealing technically savvy customers transient users users libraries users friends house users airport kiosk etc etc often different language preference browser setting tue dec pm victor berchet notifications githubcom wrote roadmap thanks try take look needed eo week come plan receiving mentioned reply email directly view github mute thread mike laird arbor creek drive pittsford new york mlaird alummitedu remembering sides civility sign weakness sincerity always subject proof let us never negotiate fear let us never fear negotiate john f kennedy", "d": "12/2016"}, {"body": "mlaird please look implementaion override default language rebootstraping app new language argument sounds reasonable see live demo", "d": "12/2016"}, {"body": "found problem plurals select sure correctly implemented normal string export command add string plurals select work using get many parsing errors like using comments syntax get error extracting get xlf file empty tags plural test select test something wrong edit using throws error using attribute version seems work comment version", "d": "12/2016"}, {"body": "still issue using latest angular repro", "d": "12/2016"}, {"body": "hi would difference injecting intelligence appinitializer injecting intelligence ngoninit method main component application given component implemnt oninit thx", "d": "12/2016"}, {"body": "afaik app wo nt load promise returned appinitializer resolved oninit called main component already inited app displays progress wheel loading nt want disappear app actually ready used use case", "d": "12/2016"}, {"body": "yeah second thought realized currently realizing code thank clarification", "d": "12/2016"}, {"body": "hi issue", "d": "12/2016"}, {"body": "think issue solved happend testing code karma npm test instead npm start also occurs running npm start sorry solution wo nt work happens npm test update karmaconfjs adding files section also add section prevent watching files nt forget separating commas solving problem another one missing appbasehref jasmine nt use indexhtml one easy solve adding providers approutingmodule", "d": "12/2016"}, {"body": "duplicate", "d": "12/2016"}, {"body": "dzmitryshylovich others took minutes create simple case using many form controls angular application code running macos retina mbp chrome first created fresh new project using cli unfortunately means bunch cli complexity way testing effect project size billed tooling resource consumption item angular think results running angular app regardless details build tooling measure consumption chrome started fresh tab time seemed yield repeatable result automatic reloading new code tab showed steadily increasing result would invalidate measurements initial commit created cli chrome task manager mb fields chrome task manager mb seems mb quite bit add text fields screen sense attempt test much chrome versus angular someone interested digging probably worthwhile core team considers numbers big enough potentially take action could investigate extent adding dominant elements data binding consumes memory", "d": "12/2016"}, {"body": "closing longer relevant", "d": "12/2016"}, {"body": "deprecated removed pkozlowskiopensource close", "d": "12/2016"}, {"body": "current status use case loading charts thousands data points storage operation dexie thread hangs till load data approach web worker console keep throwing warnings use passive event listener checked passive event listener seems simpler long term experimented host listener find good way handle events feature included future releases", "d": "12/2016"}, {"body": "current status needs design", "d": "12/2016"}, {"body": "came hoping find issue dealing fact construct manually glad alone way easier build mean really want turn object instance looping object properties setting instance seems like complicated nothing unless missing something please prioritize get may complicated use cases optimizing use cases reasonable like converted behind scenes something like", "d": "12/2016"}, {"body": "according spec var urlsearchparams new urlsearchparams init init optional usvstring urlsearchparams instance", "d": "12/2016"}, {"body": "sure helps receiving fine also want receive hash methods accepting pojos equivalent", "d": "12/2016"}, {"body": "currently angular polyfills native urlsearchparams future probably switch native impl nt think supported", "d": "12/2016"}, {"body": "fair enough maybe something module mean simple use cases feels like overkill", "d": "12/2016"}, {"body": "ca nt http take object hash implicitly convert native api pass object hash bag", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "could please get sort response team even say going say good idea current priority like hear sort input", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "thanks dzmitryshylovich", "d": "12/2016"}, {"body": "pls update plunkr", "d": "12/2016"}, {"body": "merged closed pkozlowskiopensource", "d": "12/2016"}, {"body": "pkozlowskiopensource close", "d": "12/2016"}, {"body": "diestrin still issue pls add small repro", "d": "12/2016"}, {"body": "bloodbare still issue new router pls add small repro plunkr", "d": "12/2016"}, {"body": "ebrehault checking issue right able keep track actual situation", "d": "12/2016"}, {"body": "asked question angular framework team meeting vsavkin explained implementing nt tried yet keep informed", "d": "12/2016"}, {"body": "must use newer library see", "d": "12/2016"}, {"body": "damongant still issue latest angular", "d": "12/2016"}, {"body": "created new issue believe related one", "d": "12/2016"}, {"body": "vicb one closed well", "d": "12/2016"}, {"body": "ah awesome idea wonder though wouldcould also cover non angular libraries ie tsickle parse non typescriptangular modules could also convert needed likewise one element module resolution major loaders use mimicking node module resolution field packagejson say pointing would also theory implemented able convert imports package mostly depends deep tsickle traverses code run command line seems traversing everything module resolution issue would still problem party lib people might using possible would quite amazing mean ability use tsickle could put back radar would amazing", "d": "12/2016"}, {"body": "general carefully maintained libraries optimized closure breaks others typical usage closure compile code angular deps esp rxjs one bundles give closure externs files libraries need interact tofrom closure bundle load library bundles using minified js distribution separate script tag within google need run tsickle ngc", "d": "12/2016"}, {"body": "ah see thank noting alexeagle", "d": "12/2016"}, {"body": "case get lucky asked ts meantime maybe tsickle trying issue", "d": "12/2016"}, {"body": "update tsickle issue resolved building angular branch produce distro explicit next issue need compatible distro rxjs jayphelps looking rxjs packaging story put probably still need custom experimental distro rxjs meantime well", "d": "12/2016"}, {"body": "really great work alexeagle forked project add advanced samples great news closure compiler part really transparent way added dynamic forms reactive forms recursive treeview samples everything works well tweaks make additions closure compiler config get access forms directives ngif ngfor etc fork deployed version sample", "d": "12/2016"}, {"body": "awesome thanks picking quickly thelgevold others watching thread updated example repo today working closure compiler setup separate polyfills script zonejs built closure bundle think next steps try real world scenarios ionic sometime next month try get closure compiler team room us burn biggest usability issues meantime mhevery helping point code retained shaken", "d": "12/2016"}, {"body": "thanks predragbaltic", "d": "12/2016"}, {"body": "trying quick start following git clone quickstart cd quickstart npm install read packagesjson latest nodejs npm seen output update npm set registry works fs reevaluating native module sources supported using gracefulfs module please update recent version npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejs nodemodulesnpmbinnpmclijs install npm err node npm err npm npm err code npm err package available angularforms npm err npm err angularforms npm registry npm err bug author publish use name npm err specified dependency angularquickstart npm err npm err note also install npm err tarball folder http url git url", "d": "12/2016"}, {"body": "sorry got round looking issue confirm still problem", "d": "12/2016"}, {"body": "also note jsonforms expects attributes hyphen", "d": "12/2016"}, {"body": "choeller deprecated still issue", "d": "12/2016"}, {"body": "deprecated close", "d": "12/2016"}, {"body": "merged closed pkozlowskiopensource", "d": "12/2016"}, {"body": "problem cest formatted ao\u00fbt actual thu aug cest", "d": "12/2016"}, {"body": "astrobob thnx reproduce able confirm one version chrome cest france gives gives changing year gives different days output tested also ffox gives correct answers cases need test browsers versions looks like bug least one version chrome confirmed", "d": "12/2016"}, {"body": "retested browsers chrome official build canary gives ko ffox gives ok given would expect bug chrome reported", "d": "12/2016"}, {"body": "reconsider usage intl would substantial change already lot issues think close one pkozlowskiopensource", "d": "12/2016"}, {"body": "finaly agree let close issue", "d": "12/2016"}, {"body": "still issue yjaaidi", "d": "12/2016"}, {"body": "hi petebacondarwin thanks message still nt play new implementation solve issue used directly anymore thus issue closed younes", "d": "12/2016"}, {"body": "ghetolay example nt work structural directive access components directive could use embeddedviewrefinternalviewviewchildren purposes gone away", "d": "12/2016"}, {"body": "mean injecting component without using class custom provider nt think think ask gitter little details sure way achieve need otherwise", "d": "12/2016"}, {"body": "guess needed use case example directive want use component reflect back component instance back parent elementref end user interacts dom associatemap dom instanceelementref component instance directives example pseudo code based complex user interaction calls back identified child simplicity say selected user get ways get done moving directive child sent event back parent assumes childs dumb becomes responsible handling user interactions identifying child performance reason may one modify party one associate id dom element search back callback directive quicker easier clicked child parent component instance callback", "d": "12/2016"}, {"body": "hello devs ended solving problem sadly though requires accessing private members hey js anything goes guess lol seriously team provide well documented well supported solution problem let hope time soon oops forgot mention code shows different ways getting parent import component viewcontainerref angularcore component selector textbox template export class textbox", "d": "12/2016"}, {"body": "giancarloa get error property view exist type injector error property element exist type viewcontainerref", "d": "12/2016"}, {"body": "bkdotcom hello mentioned private member cast try something like plunk", "d": "12/2016"}, {"body": "related", "d": "12/2016"}, {"body": "update pretty hard debug failing tests without feature", "d": "12/2016"}, {"body": "awiseman still issue u update plunker btw closed", "d": "12/2016"}, {"body": "includes jdalton pr please let know nt improve performance", "d": "12/2016"}, {"body": "thanks update", "d": "12/2016"}, {"body": "facing similar issue ie performance using codejs angular prodmode enabled component fields dropdowns shown selects could varying number options problem rendering ie edge takes min browsers take attached images profiling ie plunkr link think problem caused ie recalculating styles classes pristine touched etc added formcontrol fields sure update mentioned jank related select elements using either formcontrolname namengmodel attributes option elements bound using valuengvalue suggestions ideas", "d": "12/2016"}, {"body": "still issue final", "d": "12/2016"}, {"body": "hey sorry late question would nt possible achieve using decorators seems possible syntax without decorators nt know possible typescript nt looked deeply yet seems decorators converted function anyone info possible stupid ask thanks feedback", "d": "12/2016"}, {"body": "nt finally already implemented", "d": "12/2016"}, {"body": "looks like specific taken care issue", "d": "12/2016"}, {"body": "understand arguments mhevery discussion difficulties decission inherit templatetemplateurl stylesstyleurls base derived component wrong following rules derived component declare template styles taken base component exists derived component declares variant definitions taken derived component rules would normal base component doubt cases inheritance principle templates styles real advantages", "d": "12/2016"}, {"body": "already merged one closed pkozlowskiopensource", "d": "12/2016"}, {"body": "map undefined", "d": "12/2016"}, {"body": "thx tbosch clarification work using multiple conditional template blocks changing templateparser different association give directions achieve last part", "d": "12/2016"}, {"body": "problem solving case elements interact eg would put nodes elements first know second right interaction calculated compilation time makes fast solving case requires implement interaction runtime needs thought node needs associatable multiple elements solved storing array possible indices instead single ngcontent index need think mechanism without selector gets deferred ie deferred adding nodes dom", "d": "12/2016"}, {"body": "nt navigationend contain params query params etc route string", "d": "12/2016"}, {"body": "mixture smaugs solution guilherme meireles stackoverflow trick also unsubscribing ngondestroy avoid leakage", "d": "12/2016"}, {"body": "use module quick response posting one component one worked import component oninit inject angularcore import router route navigationend angularrouter import appsharedservice appservice import document angularplatformbrowser import subscription rxjsrx import pagescrollservice pagescrollinstance component selector appresources templateurl resourcescomponenthtml styleurls resourcescomponentscss export class resourcescomponent routersubscription subscription constructor private router router private sharedservice appsharedservice private pagescrollservice pagescrollservice inject document private document let pagescrollinstance pagescrollinstance pagescrollinstancesimpleinstance thisdocument appgive thispagescrollservicestart pagescrollinstance", "d": "12/2016"}, {"body": "current version still missing similar functionality canreuseroutercanreuse return false plans configuration feature disable component reuse navigating route eg", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "dzmitryshylovich need example docs thanks sharing pr", "d": "12/2016"}, {"body": "blog post coming soon", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "created issue", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "vicb repo reproducing error npm build tsc see console output edit time travelers fixed issuing", "d": "12/2016"}, {"body": "chrisism try use approach ngtranslate ps another use case templates stored database example tons user forms bpm intranet portal forms complex written using angular templates layouts inputs differes etc case", "d": "12/2016"}, {"body": "tjunussov forget angular use angular improved syntax ngmetadata get best worlds nice clean angular syntax important features needed mature spa angular", "d": "12/2016"}, {"body": "learning angular already used version spas similar problem partial view makes sense building digital resume using angular use tabs different services provide tab changes want display projects use table ngfor loop string array variable project load project array tab changes repeat html code inside component project array ok repeat html code code reference html tabs content use component approach get html reference pick project array content must something implied scope nt load version project array guess would want duplicate loading project array two components want avoid duplication share data finding frustrating angular", "d": "12/2016"}, {"body": "choeller still issue", "d": "12/2016"}, {"body": "issue selector matches checked module nt bootstrapped anywhere maints suggestions", "d": "12/2016"}, {"body": "app component following module following maints following", "d": "12/2016"}, {"body": "danbachar using", "d": "12/2016"}, {"body": "using changed bootstrap nt work well dec brandon notifications githubcom wrote danbachar using platformbrowserdynamic bootstrapmodule appmodule receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "chuckjaz looks like support angular landed going put extension marketplace", "d": "12/2016"}, {"body": "working plan make side loading version vs code extension available week need testing feel comfortable adding marketplace", "d": "12/2016"}, {"body": "webstorm integration coming webstorm early preview around december", "d": "12/2016"}, {"body": "hi chuckjaz would awesome updates yet", "d": "12/2016"}, {"body": "rly looking forward extension", "d": "12/2016"}, {"body": "hi tried extension version available working bugs far seen works inline templates final version work also standalone html templates", "d": "12/2016"}, {"body": "also work standalone templates template referenced component", "d": "12/2016"}, {"body": "nt work vscode log microsoft vsix installer initializing install extension details identifier ngtemplate name angular language service author google version description editor services angular templates locale enus moreinfourl installedbymsi false supportedframeworkversionrange signaturestate unsigned supported products microsoftvisualstudiocode version references signature details extension signed searching applicable products found installed product microsoft visual studio shell integrated mode found installed product microsoft visual studio ultimate found installed product microsoft visual studio premium found installed product microsoft visual studio professional found installed product microsoft visual studio shell integrated found installed product microsoft visual studio enterprise found installed product microsoft visual studio professional found installed product microsoft visual studio community found installed product microsoft visual studio shell integrated found installed product global location found installed product ssms found installed product ssms vsixinstallernoapplicableskusexception extension installable currently installed products vsixinstallerappinitializeinstall boolean isrepairsupported vsixinstallerappinitializeinstall systemthreadingtaskstaskinnerinvoke systemthreadingtaskstaskexecute", "d": "12/2016"}, {"body": "geelus log appears visual studio visual studio code vsix referenced works visual studio code", "d": "12/2016"}, {"body": "thought running visual studio closed vs code visual studio error still extension installable currently installed products", "d": "12/2016"}, {"body": "please file issue", "d": "12/2016"}, {"body": "geelus need install within vscode clicking ellipses extensions finding vsix file downloaded", "d": "12/2016"}, {"body": "chrissena thank much works awesome", "d": "12/2016"}, {"body": "repository vscode extension moved permanent home please reporting issues repository", "d": "12/2016"}, {"body": "chuckjaz issue closed", "d": "12/2016"}, {"body": "yes", "d": "12/2016"}, {"body": "hansl think obsolete closed", "d": "12/2016"}, {"body": "closing want deviate standards", "d": "12/2016"}, {"body": "created form factory able transform data object corresponding formgroup dynamically deeply blocking plugin checkboxes dead exactly problem ewbutterfield mentioned nt want mix template driven model driven approach together really appreciated would fixed", "d": "12/2016"}, {"body": "pkozlowskiopensource close", "d": "12/2016"}, {"body": "another way bar nt return false foo icky", "d": "12/2016"}, {"body": "looking element act link mouse responding hover element getting page refresh standard html behavior anything aside able use something acts link take user anywhere page refresh occur behavior expecting annoying workaround", "d": "12/2016"}, {"body": "alvipeo still issue", "d": "12/2016"}, {"body": "nt think", "d": "12/2016"}, {"body": "believe typings angular updated address", "d": "12/2016"}, {"body": "hi pity anyone worked issue yet think reactive forms great want use project onlostfocus event please consider improve issue asap", "d": "12/2016"}, {"body": "dsoldera feel free help almost contribution welcome", "d": "12/2016"}, {"body": "sample page even load firefox get following error error systemjs strict mode code functions may declared top level immediately within another function", "d": "12/2016"}, {"body": "centigradethomasbecker update firefox version", "d": "12/2016"}, {"body": "works firefox", "d": "12/2016"}, {"body": "zizzamia modify plunker teropa provided demo problem still", "d": "12/2016"}, {"body": "testing project ipad date pipe nt work add src angular even loading guys really working primitive pipes stable angular version damn think pm big mistake start new project stable", "d": "12/2016"}, {"body": "alekseychuyan closed issue posting effect file new issue repro plunker link easily reproduce lot issues look easier make us likely able get bottom fix understand frustrated developing code often please nt bring negative feelings since contiguous nt improve situation misko", "d": "12/2016"}, {"body": "u add small repro latest angular", "d": "12/2016"}, {"body": "dzmitryshylovich binding empty array yields link current route binding null yields exception", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "supported anymore angular final provides module system rtfm", "d": "12/2016"}, {"body": "felipedrumond found something deal case", "d": "12/2016"}, {"body": "hi kkuksin find implement check", "d": "12/2016"}, {"body": "fxck ran issue today able implement debounce well making sure one request goes typescript createvalidator options asyncvalidatorfn used signal streams terminate let changed new subject return control abstractcontrol observable changed next signal previous stream terminate return controlvaluechanges takeuntil changed take debouncetime switchmap value gt thisasyncvalidation value options edit thanks escardin catching error ways", "d": "12/2016"}, {"body": "bezhermoso gah use subject eventemitter outputs", "d": "12/2016"}, {"body": "least instantiate", "d": "12/2016"}, {"body": "eventemitter happens extend subject making observable fact coincidental relied upon pretty sure even says docs using anything asking weird bugs decide change eventemitter", "d": "12/2016"}, {"body": "use map instead flatmap return null instead wrapping observable additionally nt nest flatmapmap catch part main chain effectively already implicitly", "d": "12/2016"}, {"body": "hrm strage map issue nt know happening add map operator using onpush need manually call change detection returns add time since really worked angular onpush expert tool subtle problems sure appropriate use forms really research works saying something nt work push say onpush requires additional work nt magic performance benefits provides", "d": "12/2016"}, {"body": "escardin ok rude wo nt continue conversation btw deleted previous posts keep issue readable", "d": "12/2016"}, {"body": "saying nt use nt magic hearing trying generally insufficient", "d": "12/2016"}, {"body": "zoechi open angulario", "d": "12/2016"}, {"body": "hi well problem case way bootstrapping child components ngmodule decorator metadata object passing child component bootstap property along parent component passing child components bootstap property resetting child components properties making oninit fired twice ngmodule imports browsermodule formsmodule use twoway data binding formsmodule declarations parentcomponent components bootstrap parentcomponent lead errors binding inputs child components bootstrap parentcomponent use parent components", "d": "12/2016"}, {"body": "thanks solved problem", "d": "12/2016"}, {"body": "programmist worked thanks idea could find information read", "d": "12/2016"}, {"body": "remove pipe sign need help like show date proper format case set date format server side give well set data stored needed formed data compulsory format client side", "d": "12/2016"}, {"body": "get problem well never nt undefined specific use case required angular", "d": "12/2016"}, {"body": "luchillo u add repro", "d": "12/2016"}, {"body": "monday office maybe repro safari", "d": "12/2016"}, {"body": "dzmitryshylovich testing bit plunkr shows pipe shows parameter set true show different however cop one nt show symbol", "d": "12/2016"}, {"body": "root cause api info currency codes somehow fine understand might missing info bad though way overriding specifying missing symbols overrides symbols imo worth checking intl api authors enough interest adding currency symbols override mechanism", "d": "12/2016"}, {"body": "pkozlowskiopensource suspected internationalization api however symbols override mechanism way fix", "d": "12/2016"}, {"body": "however symbols override mechanism way fix course proper way fixing would browser vendor polyfill author fix implementation option would drop intl api altogether sure would good though would simply exchange one set bugs another", "d": "12/2016"}, {"body": "aaand browser vendors nt going provide overrides guess asking guys probably faster better", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "would much like feature trying create components composed table elements nt play well div rendered within", "d": "12/2016"}, {"body": "retain button properties could replaced user wants button would work", "d": "12/2016"}, {"body": "somebody reproduce plunkr", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "duplicate pkozlowskiopensource progress", "d": "12/2016"}, {"body": "another hacked solution inspired randomashes work anchor", "d": "12/2016"}, {"body": "also much need solution problem app wwwmanuscriptaio angular app follows anchor links normally working version quite far along missing need something along line victor savkin code since authors could produce arbitrarily many anchor links documents manuscriptaio", "d": "12/2016"}, {"body": "somebody provide small repro plunkr still issue", "d": "12/2016"}, {"body": "previous plunker updated show issue", "d": "12/2016"}, {"body": "based vsavkin workaround taking advantage fragments provided observable javascript class myappcomponent implements oninit constructor private route activatedroute ngoninit thisroutefragmentsubscribe f gt const element documentqueryselector f element elementscrollintoview element", "d": "12/2016"}, {"body": "charlesaraya suggested code work application loads first time run code ngoninit click event get triggered", "d": "12/2016"}, {"body": "gowthamrodda use charlesaraya says put onclick component article constructor private route activatedroute onanchorclick thisroutefragmentsubscribe f gt const element documentqueryselector f element elementscrollintoview element", "d": "12/2016"}, {"body": "anyone tried following success simplepagescroll", "d": "12/2016"}, {"body": "wrote article subject straightforward without new componentsdirectives etc note use hashtag anchors navigate page dec pm james carlson notifications githubcom wrote anyone tried following success simplepagescroll receiving commented reply email directly view github mute thread", "d": "12/2016"}, {"body": "ah note angular router peculiarities linking email encodes url hashtag gets rewritten breaks incoming url ugh router thing complicated mess anyway go wwwtcozcom click errata dec tim consolazio tcoz tcozcom wrote", "d": "12/2016"}, {"body": "adding crossorigin works", "d": "12/2016"}, {"body": "need proxy webpack dev server one redirect requests port", "d": "12/2016"}, {"body": "trying private heroesurl url web api constructor private http addtodo todo todo todoservice todoid todoid thislastid thistodospush todo return const headers new headers headersappend accesscontrolallowheaders contenttype headersappend accesscontrolallowmethods get headersappend accesscontrolalloworigin let people thishttp get thisheroesurl getting accesscontrolalloworigin header present requested resource origin therefore allowed access response http status code", "d": "12/2016"}, {"body": "similar issue happening method set options either set server accept method create new requestoptionsargs use requestoptions hope makes sense lol", "d": "12/2016"}, {"body": "believe fixed", "d": "12/2016"}, {"body": "hiii need help want get image name type properties event object clicked image cameragetpicture quality destinationtype cameradestinationtypenativeuri sourcetype camerapicturesourcetypecamera encodingtype cameraencodingtypejpeg savetophotoalbum true imagedata gt data imagejpeg imagedata error gt consolelog error jsonstringify error", "d": "12/2016"}, {"body": "hiii need help want get image name type properties event object clicked image cameragetpicture quality destinationtype cameradestinationtypenativeuri sourcetype camerapicturesourcetypecamera encodingtype cameraencodingtypejpeg savetophotoalbum true imagedata gt data imagejpeg imagedata error gt consolelog error jsonstringify error", "d": "12/2016"}, {"body": "error message state module import function ridiculous see development console", "d": "12/2016"}, {"body": "closed problem still exists ie template title component class always undefined starts later set pretty common scenario means resort binding missing something", "d": "12/2016"}, {"body": "also issue solution yet", "d": "12/2016"}, {"body": "use returns querylist notify u element present page", "d": "12/2016"}, {"body": "working using video element control video among things also need get width video tried following returns video actually like trying get width element fully loaded ngafterviewinit thismediaquerychangessubscribe el gt thismedia elresults nativeelement consolelog thismediaclientwidth", "d": "12/2016"}, {"body": "ldellorto marcalj please provide live reproduction problem plunker showing statement work", "d": "12/2016"}, {"body": "issue trying listen initialization angular property angular like addition needs set load angular move scriptjs angularjs file demonstrate issue fiddle posted plunker modifying one posted hasownproperty check problematic source code returns true code setter defined windowangular accounted suggested would sufficient fix believe", "d": "12/2016"}, {"body": "ok understand problem ldellorto give background need notification angular global set", "d": "12/2016"}, {"body": "anyone else looking line problem think change suggest reasonable", "d": "12/2016"}, {"body": "thanks much work company automatically hooks javascript frameworks order collect timing information starting user clickspage loads end xhr callback functions need essentially create wrapper functions must early enough customer code make calls listen initialization framework question early possible", "d": "12/2016"}, {"body": "ldellorto aware deferred bootstrap feature angular see standard way override angular fundamentals application begins used batarang protractor", "d": "12/2016"}, {"body": "sounds pretty great considering right listen wrap module function insert module angular know anything like angular though least works", "d": "12/2016"}, {"body": "nt know similar mechanism angular perhaps juliemr knows protractor", "d": "12/2016"}, {"body": "looks like implemented protractor angular yet", "d": "12/2016"}, {"body": "thanks work", "d": "12/2016"}, {"body": "frederik nt think issue added prop example u see nt update well runs change detection cycle case u need notify angular new changes using", "d": "12/2016"}, {"body": "result one firsts google searching angular components display block maybe link angular doc component styles describes styling component using could useful update angular doc link", "d": "12/2016"}, {"body": "vicb still issue ca nt reproduce", "d": "12/2016"}, {"body": "hi everyone similar issue managed finally get working using following approach since solutions use httpproviders depreciated would like know downside concerns way implemented thishttp service particularity try injecting http service constructor using component kept getting provider http feedback would greatly appreciated service import observable rxjs import rxjsaddoperatormap import helperservice rootpath codescienceclientglobalhelpershelperservices import locationmodel modelslocationmodel import http response requestoptions urlsearchparams angular import reflectiveinjector injectable angularcore import http xhrbackend connectionbackend browserxhr responseoptions xsrfstrategy baseresponseoptions cookiexsrfstrategy requestoptions baserequestoptions angular injectable export class locationservice constructor thishttp reflectiveinjectorresolveandcreate http browserxhr provide connectionbackend useclass xhrbackend provide responseoptions useclass baseresponseoptions provide xsrfstrategy usevalue new cookiexsrfstrategy csrftoken xcsrftoken provide requestoptions useclass baserequestoptions get http loadobjectbykey inlocationdetailskey string inloadlinkedobjects boolean observable class file import validationservice rootpath codescienceclientglobalservicesvalidationservice import formgroup formbuilder validators angularforms import reflectiveinjector angularcore import systemapiservice rootpath coreservicesapiservices export class locationmodel locationmodelform formgroup constructor loadobjectbykey key thislocationserviceloadobjectbykey key subscribe result gt thislocationmodel result consolelog thislocationdetailsmodelobject", "d": "12/2016"}, {"body": "wpitallo github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "12/2016"}, {"body": "linked issue private repo way see current status", "d": "12/2016"}, {"body": "yes issues http migrated closed first step issue proposed simplify setup waiting feedback team", "d": "12/2016"}, {"body": "vicb think yes still nt optional route paths use component described first post", "d": "12/2016"}, {"body": "clear get unit tests start working unit tests using angularmock everything works fine dependency example downgraded service using another standard service way get working need wait later release documentation angulario nt address use case leaving tests disabled", "d": "12/2016"}, {"body": "mlcmlapis file line go", "d": "12/2016"}, {"body": "icfantv spects file write tests use custom matcher import httpmodule angular import testbed async inject angularcoretesting import helloservice helloservice import custommatchers matchersmymatcher describe hello service gt", "d": "12/2016"}, {"body": "mlcmlapis ok thanks ended get working option make global using one file solution nt scale", "d": "12/2016"}, {"body": "icfantv probably yes could way angular moved typings using node modules like try way yet try look let us know", "d": "12/2016"}, {"body": "upgrading project attypes adding jasmine attype property tsconfig rectify issue compiler still complains", "d": "12/2016"}, {"body": "hmm something probably necessary deeply look details attypes ts cooperate using attypes also", "d": "12/2016"}, {"body": "agreed fairly certain config issue clear point exactly issue might", "d": "12/2016"}, {"body": "kinds ui components need customizations two possiblities getting template contentchild passing pipe input later seems simplereasiersufficient many typical use cases note people usually want apply pipe ngmodel representation needs piped model potentially sent event subscribers assume pipe input would type string possiblity obtain pipe requested ticket", "d": "12/2016"}, {"body": "mlaval believe already required", "d": "12/2016"}, {"body": "pkozlowskiopensource close one", "d": "12/2016"}, {"body": "vlastikcz thanks worked completely unrelated project", "d": "12/2016"}, {"body": "ersommer still issue u update plunkr", "d": "12/2016"}, {"body": "repro issue via plnkr edge", "d": "12/2016"}, {"body": "cool ersommer close issue pls thx", "d": "12/2016"}, {"body": "give example zonerun thanks", "d": "12/2016"}, {"body": "ljacques go javascript constructor private zone ngzone public connect options custom code", "d": "12/2016"}, {"body": "thanks lot", "d": "12/2016"}, {"body": "possible support upgrading nontemplate directives ie noncomponents since need framework dom element templateless directives decorators means nt element creates many possible places frameworks overlap would make impossible keep track sorry support upgrading kind directive course nt mean ca nt use means must exist angular templates upgrade application generally better try upgrade chunks ui rather fine grain approach also angular material angular beta pretty close ready production applications", "d": "12/2016"}, {"body": "repro", "d": "12/2016"}, {"body": "word closed template driven radio buttons still work", "d": "12/2016"}, {"body": "see current issue better rxjs support", "d": "12/2016"}, {"body": "closed", "d": "12/2016"}, {"body": "closed favor", "d": "12/2016"}, {"body": "arloduff thanks double comma tip", "d": "12/2016"}, {"body": "vicb nt property close", "d": "12/2016"}, {"body": "used named update description", "d": "12/2016"}, {"body": "yep defining injecting way go right true api marked experimental right best solution place right experimental means might change got much better idea nt change closing implemented", "d": "12/2016"}, {"body": "jeffbcross vsavkin know guys endeavors anyone picking core", "d": "12/2016"}, {"body": "think decided would something supported core team thu dec pm calebboyd notifications githubcom wrote jeffbcross vsavkin know guys endeavors anyone picking core receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "reading code came across issuesuggestion curious plans feature vsavkin mhevery igorminar vicb", "d": "12/2016"}, {"body": "fyi particular problem able find workaround", "d": "12/2016"}, {"body": "solution possible const enums", "d": "12/2016"}, {"body": "transcode", "d": "12/2016"}, {"body": "detect supported browsers list versions angular upgrade angular future get supported browsers list latest angular version nt relevant solution ticket closed weird note give answer nonie browsers", "d": "12/2016"}, {"body": "angular repo", "d": "12/2016"}, {"body": "sorry wrong thread", "d": "12/2016"}, {"body": "agree kind variable assignment would nice one work around come across", "d": "12/2016"}, {"body": "fyi implemented lately mhevery directives follow soon see", "d": "12/2016"}, {"body": "vicb consideration version akin general case would handled well", "d": "12/2016"}, {"body": "yet probably something consider later point according usage needs", "d": "12/2016"}, {"body": "thanks quick response", "d": "12/2016"}, {"body": "maybe offtopic came wanted use angular laravel server side language php want pages use angular also want one js file minified everything angular cli routing done server achieve conventions pages use angular specific path lets say host pagesappmodule host pagestestmodule etc functions checks url find module want lets name srcappfindmodulets typescript import appmodule import testmodule testmodule export default gt let module let windowlocation windowlocationpathname let locationarray windowlocationsplit locationarray pages else module appmodule return module yes function better dynamic lets keep import maints use bootstrap application like every server page uses angular root ngmodule independent component tree every time new page create new root ngmodule new component update switch findmodulets say srctestmodulets srctesttestcomponentts typescript import component oninit input elementref angularcore component selector apptest template styleurls testcomponentcss export class testcomponent implements oninit test string constructor private el elementref var native thiselnativeelement thistest jsonparse nativegetattribute test ngoninit consolelog thistest html", "d": "12/2016"}, {"body": "fyi hosts toplevel component typically component template html invisible angular application means angular techniques know extracting template information including attribute assignment work context switch oldschool dom querying techniques extract information inside outside scope angular application component different angular fortunately know difference able get need intend document distant future", "d": "12/2016"}, {"body": "hi trying integrate angular existing application similar blackpr wanted know possible use router instead creating root module every main component possible display component giving component name root component use router display component mycomponent retrieve componenttodisplay property root component like blackpr work try navigate component mycomponent export class appcomponent implements oninit displaycomponent string constructor private router router private elm elementref thisdisplaycomponent elmnativeelementgetattribute displaycomponent ngoninit void thisrouternavigate thisdisplaycomponent thanks", "d": "12/2016"}, {"body": "maximemenard github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "12/2016"}, {"body": "issue one solution resolve problem closed suggestion", "d": "12/2016"}, {"body": "like see full support properties templates every programmer speaks english experience good idea use native language things like variable method names helps distinguish entities entities defined framework usually popular names already reserved frameworks", "d": "12/2016"}, {"body": "discussing team implemented earlier would slow lexer would make code complex targeting aot first approach angular speed become less critical lexing happens build time makes easier work utf supported browsers lexing would done build time aot generated code would able run browser implement way break jit even older browsers would support utf jit today makes sense anybody would try try submit pr", "d": "12/2016"}, {"body": "finally found way solve problem even nice work instand use property name directly define function get property value component ts file", "d": "12/2016"}, {"body": "update issue", "d": "12/2016"}, {"body": "vicb sounds like good plan aot compiler fast enough use development phase using angular cli moment performance bit disappointing ng serve takes seconds ng build aot takes minute granted working slow virtual machine project still tiny still topic pr love provide one nt enough spare time hope someone else steps", "d": "12/2016"}, {"body": "aot compiler fast enough use development phase working improving aot speed make useable development easing aot clearly toppriority list", "d": "12/2016"}, {"body": "agree yoava update documentation following removed angular ships dependency injection framework framework also used standalone module applications frameworks please clarify whether used standalone module even standalone module separately angular modules", "d": "12/2016"}, {"body": "please clarify whether used standalone module ca nt", "d": "12/2016"}, {"body": "dzmitryshylovich advise backend perhaps instead better use inversifyjs right", "d": "12/2016"}, {"body": "made avoids installing blessed sounds like happen community anyways least", "d": "12/2016"}, {"body": "calebboyd works great great start depend sources alias node builds client builds agree prettier trick thanks", "d": "12/2016"}, {"title": "nedb \u5728 vue \u4e2d\u4f7f\u7528\u65f6\u7684\u5b58\u50a8\u8def\u5f84\u95ee\u9898", "body": "\u4f7f\u7528 webpacksimple \u5b89\u88c5 nedb \u4fee\u6539\u5de5\u7a0b\u6587\u4ef6 appvue \u63d2\u5165\u6570\u636e \u83b7\u53d6\u6570\u636e var datastore require nedb var db new datastore filename testdb autoload true export default name app methods insert dbinsert name admin password function err res consolelog res find dbfind function err res consolelog res testdbtestdb vue \u914d\u5408 nedb", "num": "4621", "d": "12/2016"}, {"title": "checkbox checked fully reactive checkbox focus", "body": "example example resets array values every one second line two checkboxes bound value steps reproduce click enabled checkbox line expected behaviour one second value reset checkboxes reflect value actual behaviour tested chrome disabled checkbox correctly reflects value enabled checkbox reflect value enabled checkbox reflect correct value blurring checkbox", "num": "4620", "d": "12/2016"}, {"title": "version page normal upgrade wrong load vue instance", "body": "vuejs version reproduction link steps reproduce expected actually happening version page normal upgrade wrong load vue instance", "num": "4619", "d": "12/2016"}, {"title": "settimeout within component create potentially overwritten", "body": "vuejs version vuex version reproduction link steps reproduce create several new alerts using button expected alerts removed seconds actually happening every two alerts removed sure vuex vuejs issue basically global alerts system using vuex storage tried different ways automatically clearing alerts demo creates settimeout alert component created settimeout emit seconds emit picked parent issues delete vuex", "num": "4618", "d": "12/2016"}, {"title": "vue props variable name support camelcase undefined returned", "body": "vuejs version reproduction link steps reproduce expected return right value actually happening vue props variable name support camelcase undefined returned example use camelcase props variable name undefined returned however change camelcase everything works expetected", "num": "4617", "d": "12/2016"}, {"title": "order issue combining vif vfor", "body": "vuejs version reproduction link steps reproduce apply vif directive element vfor velse never trigger inverse cases apply vif previous velse velse vfor everything works expected expected velse element hanging vfor display vif check fails example would expect nothing herenothing first display actually happening initial velse displaying vfor nothing wo nt show conditional working nothing first display think odd case render nt need rendered documented special case list rendering section documentation workaround applying vfor velse element breaking anything expected behaviour", "num": "4616", "d": "12/2016"}, {"title": "component template fragment cached string id node", "body": "specify string component template like vue appears cache template html fragment running issue template html changes vue always uses original template fragment however specifying node component template wo nt cache sure bug behavior inconsistency feature request would nice template caching optional jsfiddle", "num": "4615", "d": "12/2016"}, {"title": "click working", "body": "hi using trying trigger event laravel template code click trigger export default name login methods loginbtn function alert login click event click getting error appjs configuration file look like var basepath globaljquery require jquery var globaljquery window var bootstrap require bootstrap vue require vue resource require vueresource vuerouter require vuerouter vueuse resource vueuse vuerouter const router new vuerouter mode history base dirname routes path login name login component require componentsloginvue path dashboard name dashboard component require componentsdashboarddashboardvue windowonload function const app new vue router mount app hello app dashboard login elixir mix gt mixless appless webpack appjs search everywhere nt find mistake code thank", "num": "4614", "d": "12/2016"}, {"title": "ability abort transition dynamic components using javascript hooks", "body": "building cordova app using vuejs vuerouter order feel like native app trying support swiping left right go back previous view prepared example run fiddle drag view foo right let go behind foo bar already waiting sure seen many native apps take facebook example thanks transition hooks already works less user stops swiping early little velocity would expect viewfoo slide back original position probably intended cancel navigation unfortunately way cancel transition inside hooks sliding view back original position bar appears immediately navigate back foo fiddle course really nasty workaround would need work something like function transition hooks thought whether issue vuerouter vuejs thought reason vuerouter nt offer functionality vuejs nt sorry case posted vuerouter repository", "num": "4612", "d": "12/2016"}, {"title": "textarea binding operation appear data show", "body": "demand page wap page upload picture picture displayed description frame upload least three zhang ten picture horizontal scrolling display iscroll select corresponding picture displayed order realize demand determine current input contents store database operations textarea without vmodel using upload three pictures fine three images appear strange things first one delete store data correct data show picture description describe boxes last one fill content information bug vue", "num": "4611", "d": "12/2016"}, {"title": "weexcompiler\u7f16\u8bd1\u51fa\u6765\u7684\u662freact dom", "body": "", "num": "4610", "d": "12/2016"}, {"title": "delete obj attr bound view", "body": "example container p clickdel paramsa export default data return params aaa methods del e delete thisparamsa event triggered view also vm data showed components part vuedevtools nt update object key vm data traced bound view", "num": "4609", "d": "12/2016"}, {"title": "custom directive vfocus docs focus input element insert ios safari", "body": "vuejs version reproduction link see custom directive demo within documentation steps reproduce load demo expected documentation demo states following expectation page loads element gains focus fact clicked anything else since visiting page input focused actually happening ios safari demo focus input element upon page load", "num": "4608", "d": "12/2016"}, {"title": "nuxt ssr elementui problem", "body": "nuxt ssr elementui problem problem demo help look solve", "num": "4607", "d": "12/2016"}, {"title": "index get value", "body": "according tutorial run vfor locally get value index use version get values using", "num": "4605", "d": "12/2016"}, {"title": "\u5173\u4e8e\u5f02\u6b65\u7ec4\u4ef6\u7684\u4e00\u7cfb\u5217\u7591\u95ee", "body": "parti \u5173\u4e8e\u5f02\u6b65\u7ec4\u4ef6 \u95ee\u9898 vue resolve gt require componentsxxxxvue resolve \u95ee\u9898 \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4e0d\u6d89\u53ca\u8bf7\u6c42\u7684 demo \u7f51\u7edc internet js sources \u8d44\u6e90 \u91cc\u9762\u5bf9 vue js \u95ee\u9898 partii \u5173\u4e8e\u5f02\u6b65\u7ec4\u4ef6 gt \u60f0\u6027\u52a0\u8f7d \u5c31\u662f\u76ee\u524d vue spa indexhtml", "num": "4604", "d": "12/2016"}, {"title": "vmdata computed property creates conflict without useful warnings", "body": "attempting define computed property data causes least observably internal conflict useful warning given warning like data reserved property used computed property would make debugging issue simpler vuejs version steps reproduce define computed property data expected computed property work like actually happening able access data computed property data", "num": "4603", "d": "12/2016"}, {"title": "error wrap component example", "body": "vuejs version reproduction link even default official fiddle used official website wrapper component example steps reproduce using wrapper component example component wrap jquery plugin values options matter passed object slot evaluated string guess impossible select values greater expected try select value selected actually happening always selected", "num": "4602", "d": "12/2016"}, {"title": "returning vue instance filter function vuejs", "body": "getting error trying return vue instance filter function ability would nice intl purposes dynamic locale switch realtime relative time rendering etc sure intended notsupported bug related issue details", "num": "4601", "d": "12/2016"}, {"title": "alternative renders way", "body": "hello everyone multiple page app vue used html amp js file page example indexhtml indexjs import alert libraryalert new vue el app components alert works perfect upgrading vue actually nt understand work direction got error important thing nt want write html inside template appvue want display elements immediately page vue initialized show components use webpack config thanks", "num": "4600", "d": "12/2016"}, {"title": "bug updated hook called dom ready slot vfor", "body": "vuejs version reproduction link steps reproduce container components slots slots transcluded dynamic content parent updated hook children doms ready expected document said expect children doms ready", "num": "4599", "d": "12/2016"}, {"title": "none", "body": "wu", "num": "4597", "d": "12/2016"}, {"title": "var component optionscomponentsinputfile", "body": "var component optionscomponentsinputfile new component parent el el use vue work ok updated vue uncaught typeerror uncaught typeerror component constructor happen", "num": "4596", "d": "12/2016"}, {"title": "number textarea determine last time save data current data different", "body": "vue two way binding want verify input save vuex data data submitted database button switch back forth number operation database much vmodel itemdescript written textarea achieve twoway binding determine last record know operate use", "num": "4595", "d": "12/2016"}, {"title": "microchange capitalize function", "body": "suggest microchange capitalize function", "num": "4593", "d": "12/2016"}, {"title": "enter transition would nt play animate css properties defined enteractive css class", "body": "enter transition would nt played animate css properties defined enteractive css class sample code", "num": "4592", "d": "12/2016"}, {"title": "render error keepalive children", "body": "vuejs version vue vuerouter reproduction link steps reproduce click routerlink b home expected render compb going actually happening compb rendered", "num": "4590", "d": "12/2016"}, {"title": "set property isrootinsert undefined", "body": "vuejs version reproduction link repo steps reproduce install deps run dev navigate view uses top level component default slot layouts example expected view load actually happening error set property isrootinsert undefined additional following pulled updated patch tested difference results", "num": "4589", "d": "12/2016"}, {"title": "item parameter event handlers", "body": "love vuejs data bound would nice parameter von would refer data item array element etc used build element clicked hovered etc let say working drag amp drop component based data array vfor item array would avoid htmlmanipulation changing underlying data itemcategory itemposition n instead vuejs update html would need reference data modify would like receive data element array index object property form something like event could item doable without magic param like item example adding data elements would visible html source would elegant anyway", "num": "4588", "d": "12/2016"}, {"title": "help anything", "body": "hey guys really glad see guys working project going amazing little bit background java use vuejs projects possibly wondering could help project even writing documentation glad help way", "num": "4587", "d": "12/2016"}, {"title": "checkbox checked binded value", "body": "vuejs version reproduction link codepen steps reproduce input type checkbox binded value equals expected input checked actually happening input checked versions working expected", "num": "4586", "d": "12/2016"}, {"title": "global components local components slots", "body": "hi actually global components one admin one modal admin component child comp called page page comp others childs want pass content directly page comp via slots like appjs adminvue export default components page pagevue page title page body page footer export default components pageheader pagebody pagefooter indexhtml nt need use page global component please idea hope understand looking thanks", "num": "4585", "d": "12/2016"}, {"title": "typeerror routelink sibling slot used", "body": "vuejs version reproduction link template fails compile default slot given html foo wrapped tag expected component renders without slot actually happening uncaught typeerror set property isrootinsert undefined", "num": "4584", "d": "12/2016"}, {"title": "destroy remove allocated objects", "body": "hi seems remove allocated objects please correct checking incorrectly using google chrome take snapshot app initialized using destroyed using seems vue components still memory compare snapshots vue instances removed know mentioned destroying objects manually best practice working chrome extension would like able tear whole app simple jsfiddle using testing", "num": "4582", "d": "12/2016"}, {"title": "bug undefined using slot", "body": "vuejs version reproduction link steps reproduce iconvue html export default props type string computed classname return cicon cicon thistype html import icon iconvue export default components icon html import hello hello export default components hello expected actually happening", "num": "4581", "d": "12/2016"}, {"title": "vuerouter work vue components render throw error", "body": "vuejs version reproduction link steps reproduce using vuerouter found vue throws error router work back forward browsers pages ca nt change function called anymore read source code vue found trycatch render function wrote code project follow catch error javascript vue fix const h new vue createelement let render vueprototyperender vueprototyperender function try return renderapply arguments catch e consoleerror error render called e return h wander removed trycatch performance purpose forgot", "num": "4580", "d": "12/2016"}, {"title": "scope css bug component", "body": "vuejs version steps reproduce three files name code code use component root element code expected class normal display actually happening however class style display find one attr generated css scoped class establish contact component", "num": "4579", "d": "12/2016"}, {"title": "image upload using filereader change value vm file become empty", "body": "code template js data return test onfilechange event let files eventtargetfiles let reader new filereader readeronload event gt let img new image imgonload gt consolelog files file readerreadasdataurl files onfilechange event let files eventtargetfiles let reader new filereader thistest test val readeronload event gt let img new image imgonload gt consolelog files undefined readerreadasdataurl files", "num": "4578", "d": "12/2016"}, {"title": "typeerror read property componentoptions undefined", "body": "vuejs version reproduction link steps reproduce deploy server failure show errors expected actually happening sure errors happen code server", "num": "4577", "d": "12/2016"}, {"title": "transition flickering", "body": "related issue raised starptech vueadmin yesterday repo example based vuerouter example workaround add attribute change vuejs back vuejs version reproduction link steps reproduce switch view foo bar hitting links expected transition works fluently actually happening view flickers transition", "num": "4576", "d": "12/2016"}, {"title": "\u8bf7\u95eevtouch tap", "body": "click", "num": "4575", "d": "12/2016"}, {"title": "refs nt get updated upon element component removal", "body": "dynamic array iterated displayed elements components make array smaller means removing array element fair enough update dom update one may point adding refs something dynamic stupid idea using dynamic amount tabs tab unique key cases may need trigger action specific tab view could used event bus feel using refs suitable solution expect remove element referenced would updated referenced element component longer exists nt case provided fiddle presented view containing array elements list references tried nt quite reliable button remove last element array upon ref list update confirm upon adding element uses ref name removed work expected issues regarding ref already existing nt seem major problem depending could problem", "num": "4574", "d": "12/2016"}, {"title": "props", "body": "special attribute would handy reuse generic components inside specific ones would hold props passed component example like create would predefined content example one html import modal modalvue export default props modalprops value placeholder string jsfiddle use case", "num": "4571", "d": "12/2016"}, {"title": "possible bug float numbers", "body": "vuejs version reproduction link steps reproduce select items unselect one one expected unselected actually happening", "num": "4569", "d": "12/2016"}, {"title": "von clickself work", "body": "von clickself work n n", "num": "4568", "d": "12/2016"}, {"title": "nt support syntax", "body": "vuejs version reproduction link steps reproduce expected hope vue support like android xml actually happening ins show one use change show", "num": "4566", "d": "12/2016"}, {"title": "handle attribute serverrendering", "body": "vuejs version reproduction link html export default data return id ip datenow steps reproduce run rendering server generate id timestamp run vue browser id overridden vue attribute overridden expected get value id attribute actually happening", "num": "4565", "d": "12/2016"}, {"title": "tag vfor render undefined", "body": "use array prop custom component template element vfor directive render undefined strange template element tag problem vuejs version reproduction link simple demo", "num": "4564", "d": "12/2016"}, {"title": "tr could nt wrapped template", "body": "vuejs version reproduction link steps reproduce run demo expected table rendered correctly browser include ie actually happening table rendering ok modern borwser chrome incorrect ie nt use template ok", "num": "4563", "d": "12/2016"}, {"title": "neverending loop cause call stack size exceeded problem", "body": "vuejs version reproduction link steps reproduce run code expected throwing warning error accurate message actually happening", "num": "4562", "d": "12/2016"}, {"title": "ssr clientserver vdom mismatch crlf multiline text lf works", "body": "vuejs version steps reproduce deschtml multiline text crlf like expected code generation without warningerror actually happening error works one use lf deschtml", "num": "4560", "d": "12/2016"}, {"title": "\u6309\u9700\u52a0\u8f7d\u95ee\u9898", "body": "webpackprodconfjs webpackbaseconfjs \u8def\u7531\u914d\u7f6e javascript const makecomponent path gt return resolve gt require path resolve dashboard icon dashboard name dashboard label \u63a7\u5236\u53f0 hide false component makecomponent componentspagedashboardvue \u6253\u5305\u751f\u6210\u7684\u6587\u4ef6 wprater nazo bigbluehat sjoerdvisscher saul", "num": "4559", "d": "12/2016"}, {"title": "vuerouter reload component", "body": "routes load components two components routes move routes want pass new data init event component want fill data component reflects ui also want retrigger bootstrap animations components loaded would go right nt know component lifecycle would fetch data rerender component new data concretly newapp main view component sidebar component newapp url want icons sidebar red nothing main view filled main view empty want load data server main view filled want icons sidebar green happens load click second item sidebar main view changes second view routerpush newapp sidebar stays second item second main view routerpush myapps nt reload sidebar main view", "num": "4557", "d": "12/2016"}, {"title": "vue vuex create property mergehook string beforecreate", "body": "issue kinda got working multiple components components use following way import storename storefile export default store storename methods methods result error times always chrome computer colleagues computer browser etc safari mac os x yosemite error think trying merge property including parent component sure issue changed every data export default data return store storename methods everything works change everything back property level etc throw error hope helpfull people issue try solve", "num": "4556", "d": "12/2016"}, {"title": "wrong scope directive bind hook", "body": "vuejs version reproduction link vue correct scope directive vue window scope steps reproduce expected context reference current directive scope actually happening directive bind hook wrong scope", "num": "4555", "d": "12/2016"}, {"title": "problem functional component", "body": "vuejs version reproduction link expected want get component component parent remove default read document render find relevant tips", "num": "4554", "d": "12/2016"}, {"title": "behavior changed", "body": "hello folks likely edge case behavior silently changed recent versions previously could call callback fine least fails vuejs version reproduction link course silly example since could passed get idea expected implying previous behavior correct simple enough call vue constructor returns however probably wise note docs nt called callback naively thought would happen least next tick docs clearly state called synchronously though obviously case component fully ready time called right constructor returns", "num": "4552", "d": "12/2016"}, {"title": "suggest use another name scoped slot template tagname", "body": "vue file root elment vue support scoped slot using also atom editor vue code bueatify always trim indent suggested vue component file perserve root element name use another name scoped slot hello parent propstext", "num": "4551", "d": "12/2016"}, {"title": "functional components contextparent root instance", "body": "let say following template use inside get access expected use logic inside functional child component however behavior different gives access root instance similar using normal component intended behavior get access actual instance inside functional child component", "num": "4550", "d": "12/2016"}, {"title": "custom filters working vhtml", "body": "vhtml attribute able use filters use display formated text working case linebreak detect n replaces", "num": "4549", "d": "12/2016"}, {"title": "initing child components associated dom", "body": "hi several components find workaround accomplish child components simple data representation example table purpose collect data leverage rendering iterate children necessary accomplish header rows cell combination example tabs similar previous example additionally tabs content rendered using single transition point examples children ca nt used default way accomplish special rendering several workarounds tricky unsupported course best practice would like start discussion solving particular need solution could way initiate children render template set document components would accessible early parent immediate use rendering", "num": "4547", "d": "12/2016"}, {"title": "vuejs cached placeholders issue external plugins", "body": "vuejs version reproduction link steps reproduce click event click add event expected event stay highlighted rest actually happening placeholder event highlighted instead actual event happening plugin using know could switch make vue add class instead based object would rather let plugin handle case", "num": "4546", "d": "12/2016"}, {"title": "reusable transitions vuerouter break vue last one reproduce", "body": "initial purpose make transition vuerouterexamplestransitions reusable change codes transition works expected vuerouter vue expected click make slide left right transition make resuable unexpected vuerouter vue resuable transition unexpected try use older version vuejs work expected vuerouter vue resuable transition expected increase version unexpected vuerouter vue resuable transition unexpected", "num": "4545", "d": "12/2016"}, {"title": "random exception code vue", "body": "refresh one page flowing exception show randomly exception throw view open exception show page opened sorry provide reproduce link vue version mode nt used hook component", "num": "4544", "d": "12/2016"}, {"title": "watch returning object fields", "body": "vuejs version steps reproduce mainjs import vue vue import vuerouter vuerouter import vuestash vuestash import store servicesstorejs import routes servicesroutesjs import home appvue vueuse vuerouter vueuse vuestash const router new vuerouter routes mode history const app new vue router router render h gt h app data store mount app expected changes configlayouthome trigger watch new info actually happening changes configlayouthome return object fields watch using vuestash sure causing found change watch specific like configlayouthome actually get old new values using config get new object twice tried simplifying project hope nt missed anything", "num": "4543", "d": "12/2016"}, {"title": "vue devtools keep showing version", "body": "using vue laravel packages file install using yarn npm devtools keep showing using version", "num": "4541", "d": "12/2016"}, {"title": "typeerror read property name undefined", "body": "typeerror read property name undefined arender appvue arttrender uiget uirun z array", "num": "4540", "d": "12/2016"}, {"title": "multitype prop validation boolean string cast empty string", "body": "vuejs version reproduction link steps reproduce expected empty string must pass component like empty string actually happening type cast type boolean", "num": "4538", "d": "12/2016"}, {"title": "vuejs input typepassword working nicely", "body": "vuejs version reproduction link observed mac chrome steps reproduce chrome extension installed enabled click login button see alert boxes expected form submit event triggered per button click see alert box actually happening clicking submit button type form form submit event triggered time happens field includes", "num": "4537", "d": "12/2016"}, {"title": "vue vuetemplatecompiler version gt gives error browser", "body": "everything fine dandy upgraded vue vuetemplatecompiler npm packages versions nothing shows browser except following error unknown vue warn error rendering root instance warn uncaught referenceerror h defined proxyrender eval vue eval vue eval watcherget eval new watcher eval vue eval vue mount eval install eval objectinstall install eval functionvueuse eval packagejson going back version everything fine succesfully update vue vuetemplatecompiler looks similar tried using vuetemplatecompiler vue get error also tried vuetemplatecompiler mean replay version fixed posted issue stackoverflow solution yet", "num": "4536", "d": "12/2016"}, {"title": "exception thrown vue code update template involving vif css styles", "body": "vuejs version reproduction link steps reproduce given following code html something click clicking button causes following exception thrown chrome version console js execution stops proven fact time update repeated clicks notes strangely error nt happen drop style attributes two divs salutation thanks best regards eric", "num": "4535", "d": "12/2016"}, {"title": "error log polyfilleventsource added missing eventsource window", "body": "vue project works fine browser including chrome firefox error reported nt test ie browsers dev mode hot reload enabled error picture", "num": "4534", "d": "12/2016"}, {"title": "vif velse causes client side hydration bail", "body": "vuejs version reproduction link steps reproduce follow readme sample repository built app started webserver go observe output console expected client side hydration work actually happening client side hydration bails mismatch clientside rendered vnodes serverside rendered nodelist found something must gone wrong indentation template compilation process directives compare template hydration bails hydration works", "num": "4533", "d": "12/2016"}, {"title": "render error vfor", "body": "vuejs version reproduction link steps reproduce use vfor p element child element p vue render error change child p span use template wrapper works expected actually happening wrap p element p problem", "num": "4532", "d": "12/2016"}, {"title": "vuecli build prefix keyframes", "body": "coding animations vuecli add webkitkeyframes border strokedashoffset keyframes border strokedashoffset npm run dev keyframes border strokedashoffset solve", "num": "4531", "d": "12/2016"}, {"title": "vif velse causing button value cleared", "body": "vif velse causing button value cleared vif velse role button one dynamic value value another button emptied vuejs version note problem exist reproduction link steps reproduce three sets scenes click toggle button html message multiple times see scene one scene two scene tree javascript new vue el app data message hello vuejs show true button button", "num": "4530", "d": "12/2016"}, {"title": "vbind obj syntax scoped slot", "body": "trying make custom list component using scoped slot like one docs would like expose item properties props template unfortunately syntax nt seem working scoped slot deliberate regular syntax working correctly would great could expose everything nt believe making mistake sincere apologies mentioned somewhere else missed thank entry point customlist implicit vbind object binding result customlist explicit prop binding result", "num": "4529", "d": "12/2016"}, {"title": "form value binding updating fast enough", "body": "say simple component nothing method following javascript thismyvalue value el parent form submit component html looks like html see using jquery submit form assigning value submitting form happen function empty data submitted work around using timeout delay course ideal also happens mounted method instance nothing page load delays goes versus nt know much internals vue js presume nt able assign values yet using timeout submit occurs next tick", "num": "4527", "d": "12/2016"}, {"title": "refs creating object used vfor object instead always creates array dom elements", "body": "vuejs version reproduction link steps reproduce run fiddle open console expected according docs ref used together vfor ref get array object containing child components mirroring data source actually happening always contains array elements used vfor seems go suggested docs would expect object produce object key dom element", "num": "4526", "d": "12/2016"}, {"title": "vmodel sets value undefined lacking matching", "body": "let say variable called somevar component properly defined initial value template select tag options bound somevar vmodel point everything works expected however change value somevar value covered option tags example vmodel set somevar undefined instead jsfiddle showing issue expected happen value set properly select tag becomes empty settimeout example may silly becoming pain load options model property bound select time results race condition options load first model loads second option present everything works fine model loads first bound value set whatever loaded ajax since options yet value instead set undefined options load time original value lost", "num": "4524", "d": "12/2016"}, {"title": "typeof component", "body": "hello everyone tired two components one component second simple component template data methods iam tryed call consolelog via methods components return vuecomponent second component return object fix second component cant use emit havent access synced props data", "num": "4523", "d": "12/2016"}, {"title": "dialog confirmation add method ok cancel button", "body": "hi want know set method confirmation buttons code component want add method like click ok button trigger theexamplemethod", "num": "4522", "d": "12/2016"}, {"title": "checkbox selected element click listener", "body": "vuejs version reproduction link steps reproduce html div gt input typecheckbox div von click found input element selected expected click input checkbox checkbox selected canceled div click event trigger actually happening read source think div capture click event stop event immediate kinda like use eventstopimmediatepropagation stop event progagation", "num": "4521", "d": "12/2016"}, {"title": "add global api", "body": "access instance cases inconvenient feature supposed implemented would like submit pull request", "num": "4520", "d": "12/2016"}, {"title": "extend vueprototype", "body": "want create event bus could accessed globally even components like route object vuerouter available everywhere tried like nt work either root component app bus property try use inside app", "num": "4519", "d": "12/2016"}, {"title": "customize vmodel components", "body": "way change defaults would great especially ui toolkits use case create radio button component would behave like standard html one like change prop used something like example prop syntax proposal javascript export default name uiradio props value currentvalue model prop currentvalue event input computed componentclasses return active modelprop thisvalue methods handleclick emit modelevent thisvalue", "num": "4515", "d": "12/2016"}, {"title": "sometime select event doest work option vlaue", "body": "vuejs version reproduction link steps reproduce switch tag value see change expected value selected always changes choose actually happening sometime works sometime doest work", "num": "4514", "d": "12/2016"}, {"title": "\u5347\u7ea7\u5230 uncaught typeerror read property child null", "body": "\u5347\u7ea7\u5230", "num": "4513", "d": "12/2016"}, {"title": "problem use velse velseif vfor", "body": "vuejs version reproduction link resolution steps reproduce use use expected b c actually happening b c", "num": "4512", "d": "12/2016"}, {"title": "invalid regular expression vuecommonjs", "body": "vuejs version steps reproduce using standalone build vuecommonjs running following gulp task happening getting browser probably means vue nt get built correctly gulp task checking vuecommonjs im suspecting following line debugs attempted commenting whole line seems remove gulp error browser error makes vue run adding extra right like also seems remove gulp error browser error makes vue run", "num": "4511", "d": "12/2016"}, {"title": "timing gap transitions", "body": "sometimes gap enter leave transitions example looks bit funky try reflect real case use dynamic components screenshot mean patient reproduce issue mentioned happens sometimes problem vue idea reason bug something wrong", "num": "4510", "d": "12/2016"}, {"title": "something wrong tests need nexttick run succesfully", "body": "component runs successfully browser single component pressure temperature import chart chartjs import resource serviceresource const resourceservice new resource export default name dashboard data return pressure temperature rainamount meanprobability lowestprobability highestprobability rainchance rainfall mounted function nexttick gt initiliazing two charts soon component mounted thissetupcharts methods setupcharts function let ctx documentgetelementbyid rainchance getcontext let ctxb documentgetelementbyid rainfall getcontext thisrainchance new chart ctx type line data labels datasets bordercolor rgba pointhoverbackgroundcolor rgba fill false label mean value data bordercolor rgba pointhoverbackgroundcolor rgba fill false label lower bound data bordercolor rgba pointhoverbackgroundcolor rgba fill false label highter bound data options tooltips mode label responsive true scales yaxes gridlines color rgba scalelabel display true labelstring ticks beginatzero true suggestedmax xaxes gridlines color rgba scalelabel display true labelstring days thisrainfall new chart ctxb type bar data labels datasets backgroundcolor rgba bordercolor rgba borderwidth label rainfall amount data thisrainamount options responsive true scales yaxes gridlines color rgba scalelabel display true labelstring ticks beginatzero true xaxes scalelabel display true labelstring days fetch rain amount information server thisgetrain getrain function resourceservicegetrain rainamount gt thisrainamount rainamount daysmap obj gt objamount thisprocessdata processdata function display values input range fields documentgetelementbyid temperaturevalue textcontent thistemperature documentgetelementbyid pressurevalue textcontent thispressure convert rain amounts pressure temperature rain probabilities thisprobabilities thisrainamountmap value gt return thischanceofrain thispressure thistemperature value thisprobabilitiesmap object index gt thismeanprobabilitysplice index objectmean thislowestprobabilitysplice index objectlowerbound thishighestprobabilitysplice index objectupperbound update chart datasets render thisrainchancedatadatasets data thismeanprobability thisrainchancedatadatasets data thislowestprobability thisrainchancedatadatasets data thishighestprobability thisrainfalldatadatasets data thisrainamount thisrainchanceupdate thisrainfallupdate chanceofrain function pressure temperature amount var score mathlog amount mathlog pressure mathlog temperature var mean mathmin mathmax score var upperbound mathmin mean var lowerbound mathmax mean return mean mean lowerbound lowerbound upperbound upperbound see wrapped mounted contents nexttick fact solve first failing test import vue vue import dashboard srccomponentsdashboarddashboard describe dashboard component gt render correct contents done gt vuenexttick gt const vm new vue dashboard mount expect vm elqueryselector label pressure textcontent toequal pressure expect vm elqueryselector label temperature textcontent toequal temperature done success problem remove nexttick test test fails general add test cases like ones example website fail matter simple wrong application", "num": "4509", "d": "12/2016"}, {"title": "ability stop updates view upon exit transition", "body": "writing demo application app camera video recording interface fake video feed preview label overlayed switches recording duration taping user starts capturing tap stop stop recording transition new view shows recording details small thing engineer around easily transition label switches back preview makes sense showing message recording recording complete state view nt really need since showing result new view got thinking nice would could simply tell vue stop pushing updates view prepare transitioning make view complex add elements check state work even though nt want anything view done recording perhaps could look like something along lines support methods call starting exit transition support something like make easy stop updates view common might many use cases generic freeze functionality course tbh little bit surprised could find info docs think similar situation transitioning let say toast message need keep view populated message value duration transition even though might value observable parameter case want able listen value message parameter bound view freeze updates empty meaning control maybe parameterbyparameter basis although might get tricky writing logic decides updates reflected view", "num": "4508", "d": "12/2016"}, {"title": "transition group mode outin working", "body": "", "num": "4507", "d": "12/2016"}, {"title": "stoppropagation enter", "body": "", "num": "4504", "d": "12/2016"}, {"title": "props propsdata different scenes inconsistent behavior", "body": "result num number num number html var test vueextend template num num typeof num props num type number default vuecomponent test test new test el propsdata num new vue el propsdata num", "num": "4503", "d": "12/2016"}, {"title": "transitions inside components nt apply leave class", "body": "vuejs version reproduction link steps reproduce created component two different transitions inside appear effect followed documentation example simple toggle button seems classes leave leaveactive nt added elements enter enteractive classes working fine also added original code documentation works without problems expected reverse animation actually happening using inspect web tool shows enter classes applied leave think issue new vuejs sure something wrong sorry post wrong place", "num": "4502", "d": "12/2016"}, {"title": "possible incompability vue router vuex since", "body": "vuejs version reproduction steps reproduce vue vuex vue router app using webpack vue loader bundle precompile code set project similar way hackernews example provided instead resolving app server side soon route matched resolve route entered route guards used properly began building everything working expected app renders server browser everything looks content rendered server actually happening app rendered correctly server fraction second app actually seen browser sometimes immediately becomes empty blank screen element app mounted onto children", "num": "4501", "d": "12/2016"}, {"title": "binding width attribute elements nt work inside vfor loop", "body": "vuejs version tested latest fiddle reproduction link steps reproduce inspect elements notice width attribute expected added custom attribute binding width custom attribute value actually happening binding width attribute nt working within vfor instead set bind standard data item works exclusive vfor loop variables demonstrated fiddle", "num": "4500", "d": "12/2016"}, {"title": "unable load filter additional parameter", "body": "vuejs version reproduction link expected filter loaded vue actually happening error message failed resolve filter concat bar", "num": "4498", "d": "12/2016"}, {"title": "vfor nt support string", "body": "per doc string iteration supported think nt implemented jsfiddle html hello v", "num": "4497", "d": "12/2016"}, {"title": "use protocols inside anchors vbind", "body": "vuejs version reproduction link steps reproduce expected anchors work using protocols etc used websites mobile phones raise proper applications handle events actually happening getting compilation error template foo send us email call us invalid expression href mailto email invalid expression href tel telephone", "num": "4496", "d": "12/2016"}, {"title": "feature request allow adding event handlers slots", "body": "example surely used method slot component passed content using methods inside slot component", "num": "4495", "d": "12/2016"}, {"title": "value attribute behaves differently", "body": "vuejs version reproduction link steps reproduce html v v new vue el app data v expected html actually happening html", "num": "4494", "d": "12/2016"}, {"title": "ref used vfor overridden vfor", "body": "vuejs version reproduction link", "num": "4493", "d": "12/2016"}, {"title": "load file vue components", "body": "want load file vue components webpack config vue file html", "num": "4492", "d": "12/2016"}, {"title": "vue svelte", "body": "would great vue could somehow like sveltejs vue core bits pieces bundled app instead containing use syntax way working reminds exactly workflow using vue webpack vue files example maybe concept new makes completely sense use vue deep inside looking light eight library nt add weight code see easy make framework top vue dont feeling like adding jquery use element instead documentqueryselector nt know u guys think vue could splited compile time instead using whole library would add great booooost everything", "num": "4491", "d": "12/2016"}, {"title": "benchmark introduction missing homepage", "body": "hello reading material following page notice benchmark page nt exist anymore really interested know get thanks vuejs version reproduction link steps reproduce expected actually happening", "num": "4489", "d": "12/2016"}, {"title": "vfor count start step feature", "body": "vfor count start step features start gt starting number step gt increment step example vfor count result", "num": "4488", "d": "12/2016"}, {"title": "vue picking click event rendered element dom", "body": "hello made small fiddle explaining problem possible right someone explain happening trying write unit tests vue module using jasmine thanks", "num": "4487", "d": "12/2016"}, {"title": "vue mount element mount", "body": "vuejs version reproduction link steps reproduce create new vue instance el set element exist html expected vue call mounted element page mount actually happening mounted called even though nt expect vue mount nothing since element", "num": "4486", "d": "12/2016"}, {"title": "slot working root component instance", "body": "vuejs vueify steps reproduce indexhtml html main contents bootstrapjs mainvue vue main test contents import test test export default name main components test testvue output according documentation compiles templates render functions bootstrapping app js file need write render function including filling slots looks like bootstrap contain slots eg perhaps component registered instance example perfectly reproducible example app possible use slots component created alternative approach initialize vue element without render function thus template possible vue vue render function required", "num": "4485", "d": "12/2016"}, {"title": "node vshow inside vif reused adjacent velse", "body": "vuejs version reproduction link steps reproduce code html hidden content visible content element hidden element hidden expected element visible actually happening check nodes old vnode new vnode result call directive hook function elements different attributes result correct think better element visible", "num": "4484", "d": "12/2016"}, {"title": "component render result incorrect", "body": "hi question details items list want insert new item list rendered result correct result issue vue version vue right sample code", "num": "4483", "d": "12/2016"}, {"title": "problem ignoredelements trix editor", "body": "sure vuejs trixjs bug sorry vuejs version reproduction link steps reproduce load basecamp trixeditor trixjs vuejs add tag html inside element add expected trixeditor ignored actually happening trixeditor seems load two times toolbars appears loading vue app", "num": "4482", "d": "12/2016"}, {"title": "beforedestroyed hook triggered component switch another", "body": "vuejs version amp reproduction link steps reproduce use render functions switch seperate component expected beforedestroyed hook trigger change another component actually happening beforedestroyed triggered", "num": "4481", "d": "12/2016"}, {"title": "autoprefix correctly", "body": "vuejs version reproduction link steps reproduce open ios expected actually happening maybe reason correct event name", "num": "4480", "d": "12/2016"}, {"title": "inconsistent drag event behaviour jsfiddle vs local environment", "body": "vuejs version reproduction link steps reproduce expected actually happening dragging list item one bucket another paints outer item red event fiddle expected start drag item column upon dragstart gets class immediately second gets mouse hovers said expect happen copy exact code fiddle paste local folder indexhtml mainjs also link vue happens upon dragstart column one immediately gets class well code versions browser latest chrome place debugger statement class addition time stops see column started drag already got class referring second column everything nt know behaves different trying develop draganddrop application bumped issue first thought webpacknodemodule related trashed started single htmljs file", "num": "4479", "d": "12/2016"}, {"title": "svg foreignobject working vue", "body": "svg foreignobjects working fix broken vuejs version reproduction link steps reproduce run without var vue new vue el body version instead expected version see text inside rectangle run without vue text work fine version text also fine actually happening change reverted fix", "num": "4478", "d": "12/2016"}, {"title": "props data passing parent child working", "body": "use list data javascript variable pass vuejs template loop javascript variable parent template parent template source child template source vuejs general loop generated use loop working fine whats wrongs vuejs never uses instance process loop suggestions thanks advance", "num": "4476", "d": "12/2016"}, {"title": "use vshow events bug", "body": "vuejs version reproduction link steps reproduce click element child element visible child element hidden removed attribute element child element visible removed attribute element first child element element also visible changed fine expected element children affect element children actually happening upgrade work anymore dom diff bug", "num": "4474", "d": "12/2016"}, {"title": "breaking change involving vshow transition", "body": "vuejs version reproduction link original pen still valid new pen simplified steps reproduce please check codepen linked contains code working simple instructions next click settings button js pane update vuejs version cdn link save try immediately see difference behaviour expected behaviour shown reproduction link keep working actually happening upgrade work anymore based release notes made build creating new branch tag checkout reverting commit vuejsvue got things working commit fix vuejsvue breaking change coming note note new pen reproduction link edits original submission everything else inform details original case still relevant essential new simplified case shall suffice one see reproduction link well gist directive called directive runs vm method passed directive attribute value click happens outside dom element using directive using close dropdown menus click done anywhere outside dropdowns using showhide sure implementation relies previous imperfect implementation shall fix code really keep working written fix done vue taken time investigate identified reported traced issue report thank", "num": "4473", "d": "12/2016"}, {"title": "multiple root nodes functional component render function allowed", "body": "vuejs version reproduction link working broken steps reproduce return array elements render function functional component expected multiple root nodes seems dissallowed everywhere think correct solution would throw appropriate error console avoid returning designed logic handled engine older versions decide actually happening rendered result correct error thrown console", "num": "4472", "d": "12/2016"}, {"title": "line invalid regular expression", "body": "nodemodulesvuedistvuejs line invalid regular expression const jquery require jquery const bootstrap require bootstrap var fs require fs var path require path var vue require vuedistvuejs function getdirectories srcpath return fsreaddirsync srcpath filter function file consolelog file return fsstatsync pathjoin srcpath file isdirectory getdirectories var app new vue el main data message hello js vue", "num": "4471", "d": "12/2016"}, {"title": "allow parent component pass scope nested children", "body": "let say editor component button component click button needs toggle changes markup state editor currently access parent instance property shown indexvue bold btnvue methods toggle parenttoggle however solution feels like antipattern intended usage would explicit less prone errors could pass parent instance child component example emberjs like many situations need child component access parent context far know nothing like exist think vuejs supporting feature", "num": "4470", "d": "12/2016"}, {"title": "option nt get selected select box changed", "body": "add logic select based state value add listener surrounding element get correctly selected clicked state value correctly updates attached two links show differing behaviour vue vue looked migration notes documentation ca nt find might", "num": "4469", "d": "12/2016"}, {"title": "npm test command fails", "body": "according development setup following clone vue repository step get error vue test c vuegithub npm run build vueminjs amp amp node env phantomjs vue build c vuegithub node buildbuildjs vueminjs error could load c vuegithubsrccoreindex imported c vuegithubsrcentrieswebruntimejs enoent file directory open c vuegithubsrccoreindex c processtickcallback modulerunmain run startup starting selenium server started pid commits test suite running commits", "num": "4467", "d": "12/2016"}, {"title": "breaks app typeerror create property isrootinsert boolean false", "body": "vuejs version reproduction link working working steps reproduce open fiddle check console expected well work without throwing exception since nt see breaking changes new release regarding render function actually happening seems vue suddenly nt accept value array children vnodes change line everything works correctly error", "num": "4466", "d": "12/2016"}, {"title": "invalid calling object error ie", "body": "vuejs version reproduction link identified needed fix bug think inspection right thing producing fiddle reproduce somewhat complex seems proportion fix however absolutely steps reproduce app dynamic elements transitions defined callback hooks transitions open ie tested emulation problem browsers expected transition completes hooks called right times actually happening transition complete error thrown vue invalid calling object code starts line srctransitionjs error thrown line error seems method object called without parent object seems fix changing line error goes away using bind seems obviously correct clealy browsers default object anyway matter however ie seems take dislike approach throw error binding window method would seem harmless otherwise oldhand coding new github relatively new js vue fix works nt really know reasons good idea cautious closing", "num": "4465", "d": "12/2016"}, {"title": "regression render components list velse amp vfor", "body": "vuejs version reproduction link steps reproduce nothing see output using show message empty list list rendered components expected list expected actually happening rendered errors vuejs works", "num": "4464", "d": "12/2016"}, {"title": "vueserverrenderer nt work webpack dynamic require functions", "body": "get error import vue static renderer script webpack relevant want use staticsitegeneratorwebpackplugin vuejs version reproduction link steps reproduce expected project compiles without errors actually happening warning vueserverrendererbuildjs critical dependency require function used way dependencies statically extracted error vueserverrendererbuildjs module found error ca nt resolve module homemaartenwebstormprojectsvuestaticrenderbugnodemodulesvueserverrenderer vueserverrendererbuildjs vueserverrendererindexjs appjs", "num": "4463", "d": "12/2016"}, {"title": "component property undefined uncaught reference error", "body": "vuejs version reproduction link steps reproduce create new vue instance component uses xtemplate string use vfor component pass data vfor expression component property attempt access property template expected expect see data passed parent scope displayed component template actually happening prop property referenced template note add parent data object repro bug goes away component renders properly however seems like unexpected behavior", "num": "4462", "d": "12/2016"}, {"title": "vue packages version mismatch", "body": "\u4f7f\u7528\u7684elementui\u5e93\u6682\u65f6\u53ea\u652f\u6301vue function \u4f46\u662f\u4eca\u5929npm install\u540e\u62a5\u9519", "num": "4461", "d": "12/2016"}, {"title": "font node td rendered error", "body": "font node td rendered error html seems ok font dose display bug found upgrade vue code", "num": "4459", "d": "12/2016"}, {"title": "vuejs isotope function", "body": "seem integrate jquery plugins inside project specifically trying add isotope project note nt add vuejsisotope nt work expected tried adding nexttick created hook add jquery plugins vuejs components thank", "num": "4457", "d": "12/2016"}, {"title": "watching passed prop doesnt work", "body": "watching transactionitem prop doesnt work transactionkey transactionitemstock itemname capitalize stockretailprice stockquantity stock itemquantity stockretailprice transactionitemquantity estimate export default name transactionitem props transactionitem item stock transactionkey transaction watch transactionitem oldval newval consolelog oldval newval", "num": "4456", "d": "12/2016"}, {"title": "failed mount component template render function defined found component", "body": "cant signup forums ip block nt know ill post bug im trying make component transactionvue doesnt work results error transactionitemvue key transactionitemstock itemname capitalize stockretailprice stockquantity stock itemquantity stockretailprice transactionitemquantity estimate export default name transactionitem props transactionitem item stock key transaction transactionvue transaction item key stock key item retail price quantity item total configuration import mapgetters mapactions vuex import transactionitem vuex export default name transaction components transactionitem computed mapgetters currenttransaction currenttransactionitemstocks authemployee", "num": "4455", "d": "12/2016"}, {"title": "warning unminified build failing silently firefox firebug", "body": "hi folks new vue developer bumped issue vue warnings show fail silently firefox firebug detail best necessary wondering heard issue already imagine quite frustrating spent trying understand nt work couple days later try page google chrome finally see hints vue giving along works vue gives warning von click tries show false simple exercise cf scenario nt work firefox ubuntu vm firebug addon nothing shows fails silently enable firebug gt console gt show chrome messages scenario see firefox windows version builtin firebug vue warning show nt know happens addon version firebug firefox windows since accepted firebug switch new builtin version nt know revert addon prefer misc page includes vuejs development build downloaded december right click file size info kb bytes downloaded also unminified cdn nt remember file size results scenario basically trying make vuestrap alert component work vue exercise took code made simple one page mind alert vue broken ways think needed remove coerce etc sounds like issue related development environment firebug since happen google chrome", "num": "4454", "d": "12/2016"}, {"title": "options setting default transitionmode outin", "body": "using vue vuerouter want make perroute transition also want transition mode outin want transition logic exist inside component belongs want use js transition mode simultaneous using perroute transitiontechnique want transitionmode outin wrap routerview transition transition logic exists parent component want custom js transition logic component becomes complex fast possible create option setting default transitionmode outin", "num": "4453", "d": "12/2016"}, {"title": "suggest add detectport cause port occupied stop process", "body": "like title", "num": "4452", "d": "12/2016"}, {"title": "set candidate background image background image found", "body": "background image found use onerror set candidate background image nt work wrong", "num": "4451", "d": "12/2016"}, {"title": "ca nt use prop variable init loop value", "body": "specify example loop works fine pass int value directly instead pass variable init loop value returns empty sample code output specify value directly output wrong", "num": "4449", "d": "12/2016"}, {"title": "dynamic change component level parent host dom tree hook method eg etc", "body": "dynamic change component level parent host dom tree hook method eg etc want define component popover render root documentbody parent html export default name test show implements popover test child", "num": "4448", "d": "12/2016"}, {"title": "vueserverrenderer got trouble vhtml slot", "body": "vuejs version reproduction link steps reproduce look console see warning expected server render html righti use createbundlerendererrendertostring itand wish client side run without waring actually happening throw warning", "num": "4447", "d": "12/2016"}, {"title": "chunked transition group filtering", "body": "good way transition chunked list im using animate css seems nt work flawlessly im also using mode outin transition group supported list chunked add row class per chunk columns transitioning components doesnt work properly like snippet code main layout datalist let items thislist items amp amp thissearch amp amp thissearchkey let regexp new regexp items filter items item gt return regexptest item thissearchkey return chunk items", "num": "4446", "d": "12/2016"}, {"title": "invalid regular expression vuejs gulprequirejs", "body": "similar get error parse error using esprima file bowercomponentsvuedistvuejs error line invalid regular expression module tree srcjsmainjs loadmore var regexescapere g using vuejs requirejs nt happen used vueminjs vuejs version", "num": "4445", "d": "12/2016"}, {"title": "vue breaking iframes safari macos ios laravel site", "body": "hi encountering strange bug sure ask wrong place please delete laravel application vue places displaying embedded youtube videos using html output syntax laravel blade main content placed inside soon binding vue instance youtube iframes stop working nt matter code inside outside iframe gets rendered empty see blank space provided width height issue seems affect youtube iframes testet twitch works occurs safari macos ios", "num": "4444", "d": "12/2016"}, {"title": "set modifying objects array reactivity", "body": "vuejs version problem ca nt update object array objects use try know wrong want update editedplayers someid since set splice used substitute current index value another want modify ie", "num": "4443", "d": "12/2016"}, {"title": "circular references components", "body": "document say circular references vuecomponent automatically understand wrong look closely see components actually descendent gt ancestor render tree paradox registering components globally vuecomponent gt paradox resolved automatically stop reading", "num": "4442", "d": "12/2016"}, {"title": "vbind class ca nt work classname contain", "body": "error right", "num": "4441", "d": "12/2016"}, {"title": "feature request allow change value scoped slots props", "body": "im something like scoped slot component parent", "num": "4440", "d": "12/2016"}, {"title": "remove row performance decrease", "body": "seems like performance issues removing rows running benchmarks", "num": "4439", "d": "12/2016"}, {"title": "component prop ca nt use style prop name", "body": "props style type string default default test type string default default test works style always default ok", "num": "4438", "d": "12/2016"}, {"title": "feature request determine reactive object observed vue instance", "body": "would like request new feature want determine reactive object observed vue instances example var name var name var app new vue el app data item mounted function onmounted thisitem thisitem methods pickitem function pickitem thisitem items thispickedelemid want determine observed vue instances example clear observed reasons behind feature request discussed issue", "num": "4437", "d": "12/2016"}, {"title": "ca nt use vue cordova", "body": "simple script nt work cordova javascript var weatherdata cityname beijing var vue new vue el main data weatherdata vue watch cityname function newval oldval consolelog newval newval oldval oldval trying change weatherdatacityname another value nt work watch tell value changed html nothing happend chorme console nt show error log", "num": "4436", "d": "12/2016"}, {"title": "vue using wrong component global local components name registered different naming conventions", "body": "jsfiddle html", "num": "4434", "d": "12/2016"}, {"title": "transition\u7684\u6839\u5143\u7d20\u5982\u679c\u6837\u5f0f\u8868\u4e2d\u6709display", "body": "display none \u5176\u4ed6\u6837\u5f0f\u7701\u7565 transition opacity ease \u7531\u4e8evshow\u4ec5\u4ec5\u53ea\u662f\u6dfb\u52a0\u6216\u8005\u79fb\u9664\u5185\u8054\u7684style display none none\u5143\u7d20\u4e00\u76f4\u5904\u4e8e\u4e0d\u53ef\u89c1\u72b6\u6001", "num": "4433", "d": "12/2016"}, {"title": "vbind removing attributes falsy values another attribute modifier appears first", "body": "howdy seems like removing attributes falsy values another attribute modifier appears first element list attributes details comments fiddle vuejs version tested reproduction link steps reproduce run fiddle inspect rendered elements using devtools see problem described expected remove attributes whose values falsy regardless presence attributes modifier actually happening attributes falsy values removed another attribute modifier appears first instead attributes rendered string value", "num": "4432", "d": "12/2016"}, {"title": "vmodel \u4f1a\u628avm", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4431", "d": "12/2016"}, {"title": "devtools always enabled using", "body": "notice line code always means even production devtools enabled", "num": "4430", "d": "12/2016"}, {"title": "ambiguous component name error mention first character numeric", "body": "assigning component name matched regex allow first character name numeric however error thrown mentions component name alphanumeric typo characaters provided component name also matches condition error would helpful either regex error changed accordingly thank advance", "num": "4428", "d": "12/2016"}, {"title": "filters accessibles inside another filter", "body": "vuejs version reproduction link call filter inside params another filter vuejs nt find works use method instead", "num": "4427", "d": "12/2016"}, {"title": "docs capitalized propnames w vbind", "body": "problem scenario could trip beginners use capitalized propnames nt quite html looks almost like xml namespace prefix yet still must conform html caseinsensitivity behavior capitalized propnames used directive amp component template key amp props array lookup naturally fail proposal vbind docstutorial prominently flag since html caseinsensitive capitalized propnames allowed frankly nt think worth expending calories amp taking sure performance hit check capitalization props components order fire warning flagging subtle thing like docs would probably get job done curious others think example issue renders proper propname html js vuecomponent listcomponent template propnametext props propname new vue el app data todos text text b text c nt render capitalized prop name html js vuecomponent listcomponent template propnametext props propname new vue el app data todos text text b text c", "num": "4426", "d": "12/2016"}, {"title": "get old value input type number change event", "body": "want deduct quantity item another quantity example quantity change change event listener deduct achieve seems dont get old value", "num": "4425", "d": "12/2016"}, {"title": "values dynamically passed html using vue js", "body": "original question ca nt pass initial value one component another value changed click event pass value tid directly cant send tshowlist value html template html data source var list false vuejs vuecomponent campaignsegment template segmentbody props tshowlist tid ouput click option grid output wrong anything wrong", "num": "4424", "d": "12/2016"}, {"title": "vueset data updated get", "body": "import vue vue import vueresource vueresource vueuse vueresource const vm new vue data responsedata class getjson constructor vue vueset vm responsedata consolelog vm consolelog vmresponsedata routes return jsonroutes", "num": "4423", "d": "12/2016"}, {"title": "feature request vuedevtools firefox", "body": "possible create vuedevtools extension firefox also enabling vuedevtools chrome firefox etc running server react including react script still able use react devtools however vue though usually use vuecli want enable devtools create simple http server order chrome recognize vue page", "num": "4422", "d": "12/2016"}, {"title": "vueserverrenderer createbundlerenderer sourcemaps", "body": "hey way pass sourcemap options argument nt documented happy write docs point towards correct bit source could nt find currently getting error nt understandable", "num": "4421", "d": "12/2016"}, {"title": "custom vue filter always vue warn error defined", "body": "im using filters chunking arrays errors pops like one use component", "num": "4420", "d": "12/2016"}, {"title": "safari os x ios iframes disappear vue mounted", "body": "vuejs version reproduction link steps reproduce create element contains youtube video embed explanation mount vue outer element load page safari os x ios expected contents visible actually happening disappears page loads may need reload page see still exists dom sized appropriately iframe fails load error network tab inspector error occurred trying load resource danielsamuels helpfully investigated found thing happen vue perhaps narrow somewhat chose youtube video example reproduces consistently setting iframe source locallyserved image locallyserved vue bundle seem cause reproduced ios safari ios safari simulator os x safari thanks time", "num": "4419", "d": "12/2016"}, {"title": "transition js hooks vshow removed late", "body": "vuejs version reproduction link steps reproduce create tag set transition tag rely css well trigger add element inside tag add callback transition call inside callback expected element toggled visually present ie call actually happening vue keeps defers removal callbacks thus interchangeable eg starting animation relies retrieving global position element would work fail due lack offsetsoffset parents result relevant", "num": "4418", "d": "12/2016"}, {"title": "slot could nt add slot attribute", "body": "vuejs version reproduction link steps reproduce run demo directly expected slot content component foo displayed correctly actually happening encounter problem upgrading project could nt add slot attribute vue works well upgrading guide mentioned issue solve wrapping slot template tag", "num": "4416", "d": "12/2016"}, {"title": "filter recognized filtered value contains", "body": "vuejs version works fine reproduction link steps reproduce divide number using operator apply filter expected divided number gets filtered like arithmetic operators actually happening get error vue warn property method currency defined instance referenced render make sure declare reactive data properties data option currency name filter got recognized property keyword filter think commit expression gets recognized regular expression contains", "num": "4415", "d": "12/2016"}, {"title": "slot ca nt use vue transtion component", "body": "soucce code defined transitiondemo component transition disappearing content disappearing dose rendered", "num": "4414", "d": "12/2016"}, {"title": "crashed", "body": "vuejs version vue crashed start yet white page network well dose vue support ios", "num": "4413", "d": "12/2016"}, {"title": "indirect help upgrading higher", "body": "hi created project using webpack long time ago initially using vue version updated properly use versions upgrade safely update untill getting error another library using directly related vue checked release notes nothing appears related would asking tips guys think related vueloader vuetemplatecompiler another library promises changes information directory link directly file sorry abstract question thanks advance", "num": "4412", "d": "12/2016"}, {"title": "unsupport html tag", "body": "vuejs version found vuejs unsupport tag", "num": "4411", "d": "12/2016"}, {"title": "improving flow types", "body": "files like lot uses currently improving documentation around flow nt good enough job explaining right sorry types nt actually typesafe convenience purposes instead use specific type instead use instead use maps drastically improve user experience vue using flow", "num": "4410", "d": "12/2016"}, {"title": "gettersetter syntax", "body": "thought write since came reddit would cool vue made use getterssetters objects instead way computed props work today either even using get getters setters apply watching logic done also make easier integrate type systems like flow future flow understands syntax nt type check getterssetters", "num": "4409", "d": "12/2016"}, {"title": "warning compilation template invalid", "body": "vuejs version reproduction link steps reproduce expected throw warning error actually happening although case works well result expected warning error displayed difficut find template mistake", "num": "4408", "d": "12/2016"}, {"title": "error src html disappear", "body": "write like result html like html disappear cant find error uh know syntanx error used angular", "num": "4407", "d": "12/2016"}, {"title": "vue rendering data model problem", "body": "vuejs version reproduce link right code wrong code steps reproduce right code click aaa bbb button become blue console log vue devtools model wrong code click aaaa bbbb button problem one button become blue console log dont vue devtools model expected wrong code click aaaa bbbb button become blue actually happening wrong code click aaaa bbbb button one button become blue real code use get data", "num": "4406", "d": "12/2016"}, {"title": "dynamic filter names", "body": "according document filterid would parsed using text filterid possible support use expression filterid example use objfilter filterid vue calc expression use result filterid thx time", "num": "4405", "d": "12/2016"}, {"title": "using routerlink events property double click event nt work", "body": "based upon documentation would expect trigger event instead nt change default behavior fire double click intention property made clear documentation currently enjoying able wrap around instead needing handle anchor events call however without either better documentation feature patch provide large dead end", "num": "4404", "d": "12/2016"}, {"title": "mount component template render function defined", "body": "\u5728\u9879\u76eea\u4e2d\u5f15\u7528 l webpack\u914d\u7f6e webpackbaseconfjs \u9879\u76eel\u4e2d\u7684inputvue vue export default name input data return value \u4f7f\u7528", "num": "4403", "d": "12/2016"}, {"title": "transitiongroup odd behaviour transitions fiddle", "body": "vuejs version reproduction link steps reproduce click switch button times sometimes squares pop sometimes fade like everything works fine reload couple times seems triggered random load expected squares always fade inout actually happening feels random sometimes squares pop instead fading ca nt wrap head around happening", "num": "4401", "d": "12/2016"}, {"title": "jquery sortable vue bug", "body": "var sortablelist vueextend template lt ul id sortable class listgroup style width gt lt li class listgroupitem vfor item items gt itemtitle itemid lt button type button class close arialabel close von click remove item gt lt span ariahidden true gt amp times lt span gt lt button gt lt li gt lt code gt amp lt ul amp gt lt code gt props items methods remove function item var index thisitemsindexof item alert index thisitemssplice index var lt thisitemslength consolelog thisitems id lt p gt var vm new vue el app data items id title item id title item id title item id title item id title item mounted function consolelog sortable sortable sortable start function e ui uiitemdata start uiitemindex update function e ui var start uiitemdata start end uiitemindex vmitemssplice end vmitemssplice start var lt vmitemslength consolelog vmitems id sortable disableselection components sortablelist error", "num": "4399", "d": "12/2016"}, {"title": "event modifiers working", "body": "form matter try place event modifiers form always submitted nt problem simple failing example", "num": "4398", "d": "12/2016"}, {"title": "used jquery click event disabled", "body": "vuejs version onetwo threefour call vue click event executed call vue click event executed jquery used together", "num": "4397", "d": "12/2016"}, {"title": "used jquery click event executed", "body": "vuejs version document ready function find tbody click function consolelog click running call vue click event executed call vue click event executed jquery used together", "num": "4395", "d": "12/2016"}, {"title": "value binding nt reflect changes", "body": "vuejs version reproduction link steps reproduce select element declared expected changed select element updates value shows actually happening changed select nt update value property", "num": "4394", "d": "12/2016"}, {"title": "case vif velse throws error breaks app", "body": "example template vif velse block nested another vif produces error read property attrs undefined switching value researched need conditions reproduce issue class attr another attribute must presented presented nested element nested velse must presented vif velse must nested another vif velse workaround use vif condition vif condition instead velse thanks", "num": "4393", "d": "12/2016"}, {"title": "input vmodel amp typenumber truncated unrelated dom update happens", "body": "vuejs version reproduction link steps reproduce enter number zeros comma type number input field vue performs page rendering background unrelated variables component expected entering number like works without issues actually happening every time vue triggers dom change vmodel input fields rerendered makes impossible enter decimal numbers contain zeros busy components sounds like minor issue huge problem since entered number could completely wrong imagine entering input silently changed already led serious trouble financial vue application", "num": "4392", "d": "12/2016"}, {"title": "returns radio value vue mounted", "body": "vuejs version reproduction link steps reproduce open jsfiddle native neither compatibility mode produce error klick get value gt see values radio buttons read properly first second klicking mount vue afterwards get value return radios expected mounting vue radio value still first second internet explorer actually happening exactly vue mounting element seems element somehow processsed leads ie error found following stackoverflow entry states radio element created javascript value set type set radio ie return default value instead given value application able tell radio button selected submitting form jquery ajax post request inputs send would great someone vue insights idea could causing issue aware example vue needed tried create minimalistic code possible able reproduce issue real live part website radio buttons inside container mounted vue another place jquery reads selected radio button value works browser kind regards many thanks advance andreas", "num": "4391", "d": "12/2016"}, {"title": "bower installation nt include main field", "body": "result nt include main field resulting file messes libraries like right fixed sorry nitpick figured quick fix nt integrated webpack browserify workflow yet", "num": "4390", "d": "12/2016"}, {"title": "fieldname component selection feature suggestion", "body": "reading posts please read comment thread closed thanks app use many different fields generic display components needed display keeping low amount code send client side templates clean possible developers able position fieldname template perfect context positionning program surrounding behaviours understood subcomponent selection parameter passing see details fieldname would translate component selectioncall according meta data vuex structure still expert js vue syntax approximate example structure publish client side version pubname cd table level permissions create delete see billow fields name lt gt field level permissions view edit see billow type text currency component optional width height min max regex listtype contexts structure standardized way another context pubname field name able access field parameters including component table level permissions create delete c create delete create delete field level permissions view edit fact value would result even including field list version sent client v view edit e view edit parameters need passed forward called component also complexe components data grids component might need call even lower component thus needing call component pass parameters ideally done without defining call code would increase code size pass client display code file code error free would make less clean templates field insert would really useful asap wish feature following would replace something like without defining components actual component used actual dynamic component use would stand field forward already use html specifications firstname field display lookup meta data would select component call also would passed called component attribute named fieldname use metadata called component value value received data received passed generic fieldvalue attribute called component context selecting section meta data look specified field pubname meta data also passed context attribute use metadata called component attribute calling component fields template mode way possibly array multiple attributes would allow subcomponents set record wide form wide status well react conceptually considered bad least need pass reference variable need call setter listen getter finally could interesting version feature takes list fields loops perform call one previous reflexions leading model look one element reflexion several contexts template thus template includes field set non editable editable present specified context leading empty display field context would provided query server would returned client according allowed permissions context would added already meta data list would allow flexible use template quick view full view user permissions whole system would also allow simplify templates patching multiple exceptions stating want specific context meta data driven way think good way towards cleaner templates incapsulating code lower reusable components despite complex behaviours also addresses somehow fatness application inflate code arrived client side leveraging metadata also opens door form based customization without coding", "num": "4389", "d": "12/2016"}, {"title": "components props shift next component delete item array", "body": "vuejs version reproduction link steps reproduce delete expected actually happening", "num": "4388", "d": "12/2016"}, {"title": "clientside rendered virtual dom tree matching serverrendered content using async components", "body": "minimal code reproduce error run browser jsfiddle html foo comment problem course code splitting point real code router client entry bundle code splitting server entry bundle", "num": "4387", "d": "12/2016"}, {"title": "add reactive array swap", "body": "writing simple todo list component work need coreobserverarrayjs something like javascript arrayprototypeswap function x var x x const arrayproto arrayprototype export const arraymethods objectcreate arrayproto intercept mutating methods emit events push pop shift unshift splice swap added sort reverse works lazily fixed distvuejs run tests think worth add swap way notify run wrong", "num": "4386", "d": "12/2016"}, {"title": "default binding inline style number object", "body": "want bind inline style object might use object like way think might useful users write suffix automatically possible default unit using numbers", "num": "4385", "d": "12/2016"}, {"title": "big data set issue", "body": "hello issue handling big data set vuejs app app like objects memory lets call items every item id name property want list items user one time user picks item put item vue instance render screen problem data set like mb big put data set items object vue instance data observer properties mb tried put data set vuex store result memory usage test case real production data like vuex store instant memory guess put data instance cuz want reactivity objects one user picked time store data set plain object user pick item put item vue instance reactivity one item everything good expects causes memory leak every time put item vue instance new observer property added object even object instance new observer added next unused ones works intended guess issuefeature request somehow remove unused observers gettersetters practices handle big data set vue things would solve issue ca nt use could deep clone item put vue instance need keep original object refence cuz parts app updates object want keep reactivity could use database engine need offline capability fast ioless memory search locally test cases made data vuex store var store new vuexstore state items mutations additem state item vueset stateitems itemid item var index index lt index storecommit additem id index name item index var app new vue el app data pickeditemid computed item return storestateitems thispickeditemid instance var app new vue el app data items function var elems plain object memory leak every time update appitem picked item var items function var elems var app new vue el app data item", "num": "4384", "d": "12/2016"}, {"title": "child component nt merge classname parent", "body": "vuejs version reproduction link steps reproduce look output html expected child comp classname actually happening classname design", "num": "4381", "d": "12/2016"}, {"title": "altering html structure breaks bindings", "body": "vuejs version reproduction link steps reproduce discussions tasks opentasks navvue new vue el navigation data tasks methods gettasks function computed opentasks function return thistasksfilter function task return taskstatusindexof open gt taskstatusindexof progress gt original code runs fine displays computer property opentasks order make tabs scrollable tried different jquery plugins enable change structure wrapped additional divs expected value opentasks changes value update actually happening value stays however plugins disabled updates correct also vue instance created jquery plugins initialized work correctly however delaying vue instance creation far ideal situation", "num": "4380", "d": "12/2016"}, {"title": "official way modify page metadatatitleetc", "body": "briefly discussed quick check found least separate party libraries attempting tackle problem none particularly complete one handles serverside rendering still quite buggy maintainer told nt time moment work due working real project adjusting page metadata something every serious site needs important serverside rendering goes handinhand probably official way handle like official routing library beautifully integrated vue always kept uptodate", "num": "4379", "d": "12/2016"}, {"title": "lagging von change", "body": "input von change directive call method declared inside vue objects realized delays calling method whenever value changed reproduced", "num": "4377", "d": "12/2016"}, {"title": "improve ssr debugging sourcemap", "body": "vuejs version reproduction link ssr issue hard provide running demo online please see steps reproduce steps reproduce clone repostory edit file cause error example import spinner spinnervue import item itemvue import watchlist storeapi abc undeclared variable cause referenceerror consolelog abc npm run buildnpm run start command line open browser navigate command line report error info expected error info command line include specific file path line number example actually happening error info dose include file path line number cause error produce know bundle render cause error hard locate solution like soucemap solve debug issuse bundle render", "num": "4376", "d": "12/2016"}, {"title": "unable debug radio buttons unchecked randomly", "body": "vuejs version reproduction link kindly see steps reproduce cycle questions using prev next buttons expected vmodel set radio buttons checked actually happening vmodel sync field storing value set radio button sometimes certain radio buttons render unchecked actually field bound vmodel showing value present ie radio button render checked text question posted stackoverflowvuejs forums questions array vuedata cycling every time next prev button pressed store active question compute active question using radio button store state active question property questions already default value initially contains value default option radio buttons display unchecked even though field current active question set issue persists even default values user clicks button", "num": "4375", "d": "12/2016"}, {"title": "beforemount etc called server rendered component", "body": "vue serverside rendering component rendered server similar lifecycle methods called client since component content technically already mounted server issue loading initial data vuex state page since api request also function ensure requested component remounted request resource made client well page first loaded look issue list ca nt find quite referring", "num": "4374", "d": "12/2016"}, {"title": "custom components vmodel values object", "body": "migrating vue going components painstakingly replacing occurrences adapting components accept prop etc application lots complex little input types convenient create bunch custom components handle specific type nest needed happy vue helped change makes sense like idea overall however custom input components value object seem well supported new model example docs value string use pattern object behavior change considerably lost sight long thread switch vmodel discussed clear one main reasons use nt want change parent data child component value object passes reference child changes child makes affect parent immediately defeats intended abstraction makes redundant window dressing solution seems child make deep prop data attribute whenever changes unfortunately done component adds boilerplate edit found clone right data function bit cleaner emit event attach cloned object becomes value triggers causes replaced deep clone far inefficient inherently problematic real problem ca nt use expression know changed like say subcomponent trigger get infinite loop case really wanted use much less work attaching listeners subcomponents point also attach listeners everywhere prevent infinite loops deepcompare emitting boilerplate inefficiencies end input custom components following boilerplate question way intended work custom input components object miss something things completely wrong feel free point right direction seems vue could help reduce boilerplate enforce pattern intended perhaps could deep clone data sent child components via could deepcomparison data returned event applying change maybe could trigger behaviors thanks reading", "num": "4373", "d": "12/2016"}, {"title": "feature request dynamically appendremove dom elements template", "body": "far understand currently vm instance created compiled mounted structure template unchangeable switch dom elements onoff via existing directives like already written template way dynamically append brandnew elementschild components written template advance template dom right sometimes need dynamically twist template way twist determined user random input foreseen already way achieve", "num": "4372", "d": "12/2016"}, {"title": "explicit duration", "body": "proposed change add option pass total transition duration seconds wia new prop solves example transition demonstrate duration automatically detected vue wrong nested css transitions different durations delays scss modal modalenteractive transition opacity modaldialog transition opacity transform modalleaveactive transition opacity modaldialog transition opacity transform modalenter modalleaveactive opacity modaldialog opacity transform translatey transition last vue detect first transition duration enter part", "num": "4371", "d": "12/2016"}, {"title": "testing component props validation", "body": "vuejs version reproduction link steps reproduce component js divheader date nowdate time nowtime export default props nowdate type string required true nowtime type string required true js date time string gt const vm getviewmodel appheader nowdate nowtime helper method test invalid prop type expected expected test passed actually happening pass test", "num": "4370", "d": "12/2016"}, {"title": "vuetemplatecompiler bind value select elements", "body": "take following html attrs value something vbind value domprops value something similar manner inputs means bindings take place select works however causes vuex attempt update store without going mutator looks like caused fix filters tag attribute combos bound props", "num": "4369", "d": "12/2016"}, {"title": "vonce nt work inside routerlink", "body": "vuejs version reproduction link sorry nt know reproduce js fiddle follow code steps reproduce instanciate data object create routerlink set context attribute object create previously add vonce step text stop showing expected expect show user name nt change value object data changed actually happening add vonce directive wrap element var attribute showed", "num": "4368", "d": "12/2016"}, {"title": "using default prop validation breaks yui compressor", "body": "vuejs version reproduction link reserved word default must used object literal property name steps reproduce make component validation paste yui compressor compress expected postprocessors using produced code fail actually happening error invalid property id error syntax error error syntax error error syntax error error syntax error error syntax error error syntax error error compilation produced syntax errors orgmozillajavascriptevaluatorexception compilation produced syntax errors comyahooplatformyuicompressoryuicompressor orgmozillajavascriptparserparse orgmozillajavascriptparserparse", "num": "4367", "d": "12/2016"}, {"title": "currency filter bug upon pressing tab key", "body": "using everytime click tab key value changes input text hope someone could help thanks advance vuejs version reproduction link steps reproduce expected actually happening", "num": "4366", "d": "12/2016"}, {"title": "performance problems cause safari crash", "body": "vuejs version reproduction link performance issue steps reproduce root vue instance element mount sometimes child nodes use server rendering template expected pages work normally actually happening compile process slow phone compile safari another phone safari crash root element child nodes crash webview", "num": "4365", "d": "12/2016"}, {"title": "vue js warning el option shouild function returns per instance", "body": "hi warning ides remove warning app works fine want remove warning console", "num": "4364", "d": "12/2016"}, {"title": "templates responsible mapping state ui avoid placing tags sideeffects templates", "body": "page body", "num": "4363", "d": "12/2016"}, {"title": "list rendering optimization fails cases", "body": "virtual scrolling list lot rows show time using thisview thisitemssplice position position position incremented decremented would expect dom one element gets added one gets deleted direction case direction elements get removed added couple images row hurts performance quite bit vuejs version reproduction link steps reproduce press see direction one li removed one added step direction lis replaced every time expected one li added one li removed actually happening li removed added", "num": "4362", "d": "12/2016"}, {"title": "feature request keepalive component transition mode directive", "body": "hello everyone think pretty useful feature vue ability transition mode components different transitions especially useful vuerouter extremely useful sites rely transitions example im saying jsfiddle achieved using vue keep alive component way achieved example figure would useful keep alive component transition mode directive use cases maybe transition shallowwrapper component declare name transition mode orchestrate transitions child components place feature request think related keep alive component rather vuerouter missed something please let", "num": "4361", "d": "12/2016"}, {"title": "vif vshow used element leave transition occur vif changed false", "body": "vuejs version reproduction link steps reproduce go codepen click links show yes toggle show note transition occurs toggle show back toggle note transition expected expected still see box transition words transition trigger true transition trigger either true actually happening changes transition occurs expected changes element immediately removed transition occurs use case using around media triggers load start loaded triggers element revealed", "num": "4360", "d": "12/2016"}, {"title": "cent minutes rendering incomplete models", "body": "post someone spent minutes framework using angularjs every day work first example takes us jsfiddle example first thing extended template view came empty empty extending template properties already defined added property model able see proper view come entire model ignoredskipped unless fully defined nt make sense complex viewtemplate design starts introducing elements one one many may optional even see anything unless everythign defined looks like wrong approach please nt judgmental wanted share impression minutes playing think still matters many newcomers likely percieve framework", "num": "4359", "d": "12/2016"}, {"title": "vue delete style tags render", "body": "expected code build hello world message fontsize vue delete style tag render got hello world default fontsize source code html body fontsize message var app new vue el app data message hello world rendered html hello world var app new vue el app data message hello world style tag remove", "num": "4358", "d": "12/2016"}, {"title": "template required", "body": "beginner run sample vuecli found problem problem denfined required property template html element like run project found chrome debug would like know true use property validate element whether required like required true required false render like please tell thanks environment create project vuecli write appvue template", "num": "4357", "d": "12/2016"}, {"title": "observerspec bug", "body": "vuetestunitspecsobserverobserverspecjs js array remove function var arr var arr var arr var ob observe arr var dep obdep spyon dep notify remove identity array arr remove expect arrlength tobe expect arr tobe expect depnotifycallscount tobe remove identity array arr remove expect arrlength tobe expect depnotifycallscount tobe js var arr var arr var arr array think best modify comment remove identity array", "num": "4355", "d": "12/2016"}, {"title": "vue instance used non component", "body": "hi asked question forums gotten answer basically using vue instances data records components shown supportedrecommended use interested since need computed properties methods function context individual objects current component seen sort usage mentioned official docs hence curiosity thanks", "num": "4354", "d": "12/2016"}, {"title": "inited value msg data bind html msg code following", "body": "html message msg var new vue el app data msg dynamicid test somedynamiccondition true message msg get", "num": "4353", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "12/2016"}, {"body": "thanks xkjyeah try fix", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "actually component dont explicit keys first alert removed last component instance removed instead thus timer becomes eaten fixed maybe give warnings components future", "d": "12/2016"}, {"body": "oh wow simple fix thank", "d": "12/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "12/2016"}, {"body": "thanks already opened pr", "d": "12/2016"}, {"body": "use case sounds like bad idea reload app mutating template nodes", "d": "12/2016"}, {"body": "integrating vue app uses older ajaxstyle rendering wrapping serverrendered view code blocks templates sure would best let vue render things dynamic converting server rendering complicated first round refactoring feel free close feel like edge case encourages something nt anyway", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks misspelled", "d": "12/2016"}, {"body": "bug vue open issue nt understand want", "d": "12/2016"}, {"body": "\u5982\u679c\u662f\u95ee\u9898\u7684\u8bdd\u8bf7\u5230\u8bba\u575b\u6216\u8005 segmentfault \u7528\u4e2d\u6587\u5427 \u4e5f\u53ea\u7528\u4e8e\u5904\u7406", "d": "12/2016"}, {"body": "\u4f60\u914d\u7f6e\u6709\u95ee\u9898\u5427", "d": "12/2016"}, {"body": "please use vuedeletethis delete delete reactive properties", "d": "12/2016"}, {"body": "relevant stackoverflow answer think feature mobile safari rather bug work fastclick colleagues found ios allow focus triggered elements within function first function call stack triggered nonprogrammatic event source", "d": "12/2016"}, {"body": "close safari problem", "d": "12/2016"}, {"body": "certain going final answer docs mention something", "d": "12/2016"}, {"body": "seems design mobile safari issue vue might add extra infomation doc", "d": "12/2016"}, {"body": "opened pr doc repository close issue", "d": "12/2016"}, {"body": "please use issues ask questions nuxt issues posted nuxtjs repo", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "12/2016"}, {"body": "already warning", "d": "12/2016"}, {"body": "thanks alextime bug vuejs updated fiddler updated watch function", "d": "12/2016"}, {"body": "surely bug idea think work filters return something returns string stringified printed document making filters optionally render child component believe trying would completely new behaviour also want trigger rerender change locale creating components localized string seems like dirty workaround would rather use mixin registers lister event bus one rare occations seems useful callback call forceupdate component", "d": "12/2016"}, {"body": "thanks answear also want trigger rerender change locale creating components localized string seems like dirty workaround time creates additional new components user manually changes language rare nt think performance problem sure fast vue instantiation tho would rather use mixin registers lister event bus one rare occations seems useful callback call forceupdate component understand right would look like create bus dynamic changes example locale changes trigger event bus import bus every component needs intl attach new event listener bus callback calls well solution nt seem optimal performancewise codewise", "d": "12/2016"}, {"body": "comment dirty hack performance clean responsibilities filters nt render onthefly components transform stuff strings worries bus codewise put bus module export mixin module encapsulated event work registration etc question make component adapt behaviour perfomance wise lot app rerender pretty much everything anyway need small create component handle instead filter", "d": "12/2016"}, {"body": "alright ended create module exports bus import bus component component method adjusts vueconfiglang emits localechange event import bus main component register event listener bus like still nt work expected since updates main component children somehow explicitly update component children something like thanks", "d": "12/2016"}, {"body": "original usage supported implement discussed elsewhere thanks", "d": "12/2016"}, {"body": "add webpack aliases make sure standalone build loaded instead default runtimeonly build need standalone build want define template code indexhtml currently", "d": "12/2016"}, {"body": "longer turned constructors considered internal change behavior never explicitly defined documentation simply using", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "12/2016"}, {"body": "thanks suggestion always returns string", "d": "12/2016"}, {"body": "sample code jsfiddle", "d": "12/2016"}, {"body": "venteractive transition css properties define base css selectors", "d": "12/2016"}, {"body": "really looks like issue everything fine code point docviewvue add breaks isrootinsert error", "d": "12/2016"}, {"body": "correct also breaks slotted components default slots notice named slot contains component slot works fine", "d": "12/2016"}, {"body": "since patch codegen need use updated well cloned repo tested locally using everything local branch seems working correctly views render properly think indeed caused bug want test clone vue repo build everything link project great job vuetify btw", "d": "12/2016"}, {"body": "thanks evan nt think packages well appreciate help", "d": "12/2016"}, {"body": "already alias points item would need magic param may understanding correctly nt really see need", "d": "12/2016"}, {"body": "sorry first time think something vuejs already bravo", "d": "12/2016"}, {"body": "hi syntacticsolutions thanks interest help many ways help really depends familiar simplest way help answering questions users forum gitter chatroom stackoverflow also try help triage new issues narrowing bugs even submit prs please read contribution guide details note issues reserved bug reports feature requests please keep mind future", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "12/2016"}, {"body": "issue spa downgraded seems work fine", "d": "12/2016"}, {"body": "submitted issue vuerouter repo", "d": "12/2016"}, {"body": "problem difference seems following versions vue calls undefined vnode reveals following vue vue problem gets called undefined vnode calling vue undefined creates error uncaught typeerror set property isrootinsert undefined bug relevant part srccorevdompatchjs solution think would good idea add following lines make sure function nt want access attributes object seems solve problem vue also vue calling analyzed error gets introduced ie gets called undefined vnode think good idea type checking regardless maybe unit test added check case would glad help", "d": "12/2016"}, {"body": "actually issue fixed confirmed johnleider cases mmochetti samuelantonioli try patch local vue dist file see issue error persists likely different bugs please open separate issue repro", "d": "12/2016"}, {"body": "johnleider seems problem missing type checking accessing attributes referenced issue relevant part bug srccoreinstancerenderjs replacing current statement following lines solves problem patching local dist testing", "d": "12/2016"}, {"body": "thanks applying changes everything works expected", "d": "12/2016"}, {"body": "also use since global scope still holding reference object", "d": "12/2016"}, {"body": "sirlancelot said", "d": "12/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "12/2016"}, {"body": "also please open issue vuerouter repo instead thanks", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "vue", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem nessessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "binding needed expected behavior remove binding works properly", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "without problem", "d": "12/2016"}, {"body": "broke please check jsfiddles steps reproduce click fast multiple times checked radio button clearly see ripple effect nt behave release notes says affected update update something css js fix problem", "d": "12/2016"}, {"body": "also supposed fix issue checked quickly editing dist file vuedistvueruntimecommonjs change result", "d": "12/2016"}, {"body": "sqal ah sorry indeed affects usage think revert whole change", "d": "12/2016"}, {"body": "sqal reverted old behavior use case work expected next release", "d": "12/2016"}, {"body": "thanks alot dealing issue", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "jtallis refs reactive could take look", "d": "12/2016"}, {"body": "fyi used inside registered arrays case property array typically use ref id items collected array pop item array actually becomes empty future may support passing function ref binding user customize register refs eg", "d": "12/2016"}, {"body": "hi thanks filling issue actually related vue javascript floating point number precision issue may refer", "d": "12/2016"}, {"body": "many thanx fix simply using", "d": "12/2016"}, {"body": "modifier feature", "d": "12/2016"}, {"body": "browser limitation want use syntax use bundler like webpack use vueloader limited browser write html files write things like also may help", "d": "12/2016"}, {"body": "try one time", "d": "12/2016"}, {"body": "alphmega please try latest vuejs version might fixed already works mac chrome", "d": "12/2016"}, {"body": "defcc excuse wrote wrong description issus using", "d": "12/2016"}, {"body": "defcc upgraded vue still problem", "d": "12/2016"}, {"body": "tibianmod solution works", "d": "12/2016"}, {"body": "hydration skips patching attrs serverside rendered markup assumed client renders impure ie included initial state used clientside render causes server markup always different client avoid using renders", "d": "12/2016"}, {"body": "tag meant wrap multiple elements like case simply use wrap text nodes", "d": "12/2016"}, {"body": "know real scene code complex demo need wrap multiple elements template tag output undefined works right seems vfor directive inside template tag output undefined child component props bind tag like expected behavior", "d": "12/2016"}, {"body": "weird indeed give deeper look afternoon mon dec wangkehan notifications githubcom wrote know real scene code complex demo need wrap multiple elements template tag output undefined works right seems vfor directive inside template tag output undefined child component props bind tag like itemname expected behavior receiving modified openclose state reply email directly view github mute thread", "d": "12/2016"}, {"body": "least template like works wrong sometimes vfor directive inside template tag also output undefined works ok modified code really nt know happen", "d": "12/2016"}, {"body": "happen happen", "d": "12/2016"}, {"body": "seems issue normalize children try make patch", "d": "12/2016"}, {"body": "limitation browsers work around putting directly using place within tables details docs", "d": "12/2016"}, {"body": "thx", "d": "12/2016"}, {"body": "data computed property rename", "d": "12/2016"}, {"body": "yes know vue pollute raw data error message really weird think better throw much friendly error message accurate reason beginners always make mistakes like know debug", "d": "12/2016"}, {"body": "referencing computed property inside else expect infinite loop best warn define computed property clashes existing properties", "d": "12/2016"}, {"body": "thanks remoe please provide reproduction repository us look", "d": "12/2016"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "12/2016"}, {"body": "njleonzhang try check fix problem app", "d": "12/2016"}, {"body": "store injected top application every component curious think way", "d": "12/2016"}, {"body": "closing since nt using way still want know ended passing store components", "d": "12/2016"}, {"body": "import store components use gon na try combine stores got like store every component one store import toplevel let u know thanks reply", "d": "12/2016"}, {"body": "looking modules create one store split multiple modules", "d": "12/2016"}, {"body": "thanks swift reply time posva clearly misread something could nt find post find prob ever", "d": "12/2016"}, {"body": "renedx may forgotten something docs yes please something misleading tell us cheers", "d": "12/2016"}, {"body": "jessereitsma used multi stores issue really similar occurs one colleagues computer computer chrome even opens site hosted computer still encounter issue open site encounter issue chrome version issue still occur event disables chrome extension computer powerful mine mine mac book pro mac book pro", "d": "12/2016"}, {"body": "njleonzhang create store instances really modules posva mentioned used create store instances every component use changed one store one instance created toplevel passed every component nt problem anymore thanks posva issue solved", "d": "12/2016"}, {"body": "jessereitsma followed always document think root cause colleagues reproduce anyway work around issue great", "d": "12/2016"}, {"body": "working around issue changed structure according documentation solved workaround", "d": "12/2016"}, {"body": "jessereitsma ok tnx", "d": "12/2016"}, {"body": "jessereitsma try build vue source code debug source find root cause busy make debug recently sustainers reproduce issue hard debug currently reproduce debug days later", "d": "12/2016"}, {"body": "njleonzhang already trying debug really hard nt make sense error really vague workaround remove component works remove component works remove component works open another component first page close going next page works", "d": "12/2016"}, {"body": "jessereitsma renedx know random hard confirm wether workaround really workaround good news issue occur production environment chrome debug mode currently colleague encounters issue change use firefox instead chrome development browser workaround addition issue may related local dev packages keep consistent project dependency everywhere try leverage yarn", "d": "12/2016"}, {"body": "directives simplified friend", "d": "12/2016"}, {"body": "posva thanks", "d": "12/2016"}, {"body": "coincidentally trying pretty much couple minutes ago look wether access slotparent like normal components done functional components", "d": "12/2016"}, {"body": "duplicate look reasons basically design good idea make component depend parents better using props events pattern", "d": "12/2016"}, {"body": "well explicitly documented suspected never designed work way examples call instance created worked accident feel free submit pr add note", "d": "12/2016"}, {"body": "obviously ca nt introduce breaking change atom ca nt indent code correctly", "d": "12/2016"}, {"body": "scoped slot use tag introduce another tag like suitable tag behave introduce breaking change avoid word vue root element", "d": "12/2016"}, {"body": "reserved html tag fits well needs open issue atom plugin repository fix tags inside", "d": "12/2016"}, {"body": "know bit confusing fact design functional components rendered eagerly outermost component render function render function called host component inserted instantiated yet actually way reference host component functional component unlikely changed without introducing breaking change considering short term however interested hear use case experience quite rare functional components need access host instance", "d": "12/2016"}, {"body": "totally understand though would helpful made clear documentation since use refer two different situations confusing example specific use case love hear take well basically creating wrapper mobiledoc editor need editor component buttons handle functionality toggling markup adding content checking active states rather creating different components different type buttons eg preferred one component delegate appropriate buttons first implemented regular component example template js props type type string required true type string required true computed isactive let typestate return methods toggle root emit thistagname began add types buttons different actions states became hard maintain changed functional component function createbutton h ctx clickaction return example button const cardbutton ctx gt props type type string required true name type string required true payload type object mode type string render h gt createbutton h ctx payload editmodefalse gt button needs access parent activetags editor data isactive ctx parentactivetags ctxpropsname ctx parenteditorinsertcard ctxpropsname payload editmode export default functional true props editor type tag prompt name text payload mode render h ctx ctxdataprops ctxprops pass props children return h delegatetobtncmp ctx ctxdata ctxchildren code longer explicit maintainable button handles logic problem however ca nt easily access parent instance anymore tried creating new vue instance two components could use store share data methods worked approach nt let create one editor buttons access one editor instance sure would appropriate switch back regular component though feel use case fitting functional component", "d": "12/2016"}, {"body": "honest think making component behave differently based parent inserted sounds like bad idea child component coupled implementation details possible components may nested inside recommend rethinking design adhere props events pattern also nt make functional use render functions use render functions normal components", "d": "12/2016"}, {"body": "yeah felt like hack could nt find easy way editor component pass instance nested button components understand props events pattern nt want users component pass data basic component functionality example button feel like toggle method already inherent component require prop solution settled turning two components vue instance share functions could pass component appropriate context create instance editor import mobiledoceditor mobiledocbutton mobiledocvm mobiledoceditor let editorctrl new mobiledocvm export default components mobiledocbutton mobiledocbutton editorctrl mobiledoceditor mobiledoceditor editorctrl hopefully approach better thanks feedback", "d": "12/2016"}, {"body": "agreed maybe could improve text transformation purposes", "d": "12/2016"}, {"body": "would become special case rules becomes complicated fear would slowly bring feature creep back directives support filters case dedicated sanitization method works fine nt think worth open special case simple rules", "d": "12/2016"}, {"body": "would nice sort functionality using quill would like parse deltas quill produces template custom filter looks something like", "d": "12/2016"}, {"body": "solvable scoped slots syntax nt suit pass component options props well simply use dynamic component html parent child props component", "d": "12/2016"}, {"body": "scopedslots great addition could used customize output child nt solve situation simple functions used childs rendering idea leave parent make clear let take example html customi header inner content custom cell inner content cool know inner content column look like information parent ideally would html col scopedslotsheader col colheader col scopedslotscell row col note clarity brevity mixing jsx template declaration example could work available unless used somewhere case nt place need default child rendering", "d": "12/2016"}, {"body": "afraid trouble understanding trying achieve looks like simply trying pass data want use templates pass array prop", "d": "12/2016"}, {"body": "ok let put cards table adapted extract real component workflow vktable jsx thisl children col gt colheaderrendercall colrenderproxy h thisl thisdata row rowindex gt thisl children col gt colcellrendercall colrenderproxy h row rowindex vktablecolumn vktablecolumnselect usage conclusions possible vktable process slotsdefault reason make children inited passed data complex enough make use array prop obsolete first approach far good", "d": "12/2016"}, {"body": "please take step back describe use case trying achieve code samples quite confusing without explanation design constraints", "d": "12/2016"}, {"body": "created jsfiddle describing use case behind vktable", "d": "12/2016"}, {"body": "since code explanation goal assume far zone understand ca nt follow easily lines code try summarize understood design goal tell guess right author library devs use want provide clean declarative interface define various behaviours passing definitions props would possible satisfy aspiration clean interface looking way ab use inslot components render anything rather function interface slot parent component passing instructions maybe functions render content according instructions much like eg recharts react part charts getting close", "d": "12/2016"}, {"body": "sorry deep zone lol yes linusborg summarized pretty well thanks", "d": "12/2016"}, {"body": "linus think u spot miljan saying interface parent component ive actually thought exact components datagrid data column definitions tabs managed implement tabs use render functions straightforward implement filter tab component vnodes get label propdata order render tab header straightfoward definitely doable use render functions", "d": "12/2016"}, {"body": "pohnean right doable workarounds quite common issue judging forum would nice official solution could think like functionaldeclarative components accept props composedslots render kind", "d": "12/2016"}, {"body": "gut feeling good idea additional api components essentially empty shell need get propsdata main component nothing common means talk component vue situation bad feeling introducting api essentially says set setting behave like component basically fancy way pass props addtionally vnode api part public api using automatically hack want use templates good news access using vnode content prepare data nessessary following render function created vueloader template", "d": "12/2016"}, {"body": "thank linusborg nt worry expecting kind answer similar one got exposed template dilema back finally solved scopedslots probably time also far zone nt managed provide good presentation valid solution hope arise naturally evolve eventually get solved meantime keep workarounds close ticket time perhaps challenge related topic basically without workarounds ca nt find way apply simple tab transition details forum", "d": "12/2016"}, {"body": "close discussion fine think clear feature happen anytime soon", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "ah clever thank", "d": "12/2016"}, {"body": "nt see issue yields result give use details please", "d": "12/2016"}, {"body": "posva slow transition click click different dom class", "d": "12/2016"}, {"body": "ooh one transition goes right instead left", "d": "12/2016"}, {"body": "similar problem vuex appvue pageavue component containervue transition component seems slow one step use keepalive put transition component route view spa transition snapshots first load forward back", "d": "12/2016"}, {"body": "vue also problems transitions note using vue first see empty component start transition like directive vshow working hope fixed next version", "d": "12/2016"}, {"body": "problem remains even though upgrade maybe provide demo", "d": "12/2016"}, {"body": "ca nt much without repro please try reproduce really ca nt feel free close issue", "d": "12/2016"}, {"body": "hi seems issue vue core discuss possible every issue easy repro", "d": "12/2016"}, {"body": "easy nt", "d": "12/2016"}, {"body": "got issue vue also still able reproduce error looks pretty random remove component works put component back nt work remove component still nt work also get chrome latest version mac os x yosemite safari", "d": "12/2016"}, {"body": "jessereitsma open issue hope admin take look", "d": "12/2016"}, {"body": "close issue take look something reproduce repository reproducible open new issue share know steps reproduce otherwise open new issue share", "d": "12/2016"}, {"body": "jessereitsma looks like got clues strip component reproduce bug jsfiddle repo really necessary hopefully give information error happens find open new issue repro information help", "d": "12/2016"}, {"body": "fyi running time store related main problem issue reproduce problem single freaking computer computer nt reproduce exception others seems related simultanously loading components seems run problem child component destroyed mounted data methods props parent component remove destroyed prop lowestchild works without problems seems sketchy fix still wanted update brains may get triggered debug found computer nt problem production npm run build version code currently experiencing webpack bundle installed using cli kinda simulates problem builded version seems run problem prob something hotloading part", "d": "12/2016"}, {"body": "feeling may todo config computed property vuestash", "d": "12/2016"}, {"body": "note mutating rather replacing object array old value new value reference objectarray vue keep copy premutate value", "d": "12/2016"}, {"body": "need watch strings get around", "d": "12/2016"}, {"body": "watch primitive values replace watched object fresh new one thu dec x notifications githubcom wrote need watch strings get around receiving modified openclose state reply email directly view github mute thread", "d": "12/2016"}, {"body": "please open issue vuedevtools repo instead also try code ensure indeed using right version", "d": "12/2016"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem nessessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "12/2016"}, {"body": "please reopen information conforms issue reporting guidelines", "d": "12/2016"}, {"body": "seems types validation includes together check blank line another case hyphenated string looks like prop", "d": "12/2016"}, {"body": "sorry seems problem plugin try binding submit handle directly button prevent plugin messing native dom events", "d": "12/2016"}, {"body": "looks like renamed using method somewhere app well nt use undocumented internal vue methods see may removedrenamed time without notice fix rename code work", "d": "12/2016"}, {"body": "issue also using quasarframework might problem side", "d": "12/2016"}, {"body": "yes related quasar framework solved thanks", "d": "12/2016"}, {"body": "found workaround meantime wrap two dummy attributes ie substitute relevant lines html something", "d": "12/2016"}, {"body": "thanks reporting seems vue tries reuse div element instead removing one adding reusing elements generally preferred performance reasons messes process seems bug indeed better workaround would explicitly key elements key unique component scope force vue actually replace divs", "d": "12/2016"}, {"body": "cool thanks better workaround", "d": "12/2016"}, {"body": "thanks looking", "d": "12/2016"}, {"body": "webpack behavior related vue", "d": "12/2016"}, {"body": "maybe need detect whitespace text node ignore hydrating", "d": "12/2016"}, {"body": "nested tags nt valid html", "d": "12/2016"}, {"body": "autoprefixer removes webkit perfix option set use last browsers nt need prefix anymore source need support older browsers adjust needs", "d": "12/2016"}, {"body": "thanks explanation sqal", "d": "12/2016"}, {"body": "thanks workwsl vuejs treats static attribute value attribute causes issue try fix currently could use value binding workaround", "d": "12/2016"}, {"body": "thought way resolve problem situation manually write param value ajax", "d": "12/2016"}, {"body": "issue posted could nt find anything well case want submit form automatically including page refresh nt want ca nt send via ajax solution perhaps mention docs would nice", "d": "12/2016"}, {"body": "use vm nexttick js thismyvalue value nexttick function el parent form submit", "d": "12/2016"}, {"body": "used elementscomponents vfor registered reference array containing dom nodes component instances", "d": "12/2016"}, {"body": "thanks kordiankowalski think expected behavior native html select also behaves like value empty set invalid value vuejs force update select calculate value assign new value becomes undefined might need process userland", "d": "12/2016"}, {"body": "hmm chance make feature request handled vue instead think would make templates nicer need work around common think quirk especially since initializing value without changing later works fine value preserved course initial value happens one trying assign nothing breaks", "d": "12/2016"}, {"body": "examples work events triggered variable initialized value updated current value nt think perfect way handle consistently suggest following defcc implementing case case basis", "d": "12/2016"}, {"body": "hi even though tired close issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests", "d": "12/2016"}, {"body": "vmodel", "d": "12/2016"}, {"body": "marshare think understand", "d": "12/2016"}, {"body": "qbaty", "d": "12/2016"}, {"body": "qbaty thanks rteporting looks like bug indeed took freedom correct vue version op use noch", "d": "12/2016"}, {"body": "linusborg okey first met bug using vue try update vue lastest version bug still exsit version", "d": "12/2016"}, {"body": "maybe use", "d": "12/2016"}, {"body": "dumb", "d": "12/2016"}, {"body": "also come across building ui components come way defining prop used vmodel eventually event thinking akryum", "d": "12/2016"}, {"body": "curiosity value overriding syntax could also would probably require component authors create computed property getting model value since would technically possible extend component different model name", "d": "12/2016"}, {"body": "rpkilby may want redefine event radiocheckboxes inputs emit events side note little demo differents inputs events", "d": "12/2016"}, {"body": "could make reproduction services like js fiddle important see bindings difficult impossible see compiled template", "d": "12/2016"}, {"body": "code js fiddle", "d": "12/2016"}, {"body": "works perfectly latest chrome amp windows well os x whats setup", "d": "12/2016"}, {"body": "made reproduction chrome ubuntu chrome windows edge windows", "d": "12/2016"}, {"body": "page loaded select select value", "d": "12/2016"}, {"body": "switch value times see also", "d": "12/2016"}, {"body": "linusborg testing chrome x verify fiddle broken whether vue fiddle fault sure select initialized text displays selected select expected selected option text display selected selected option empty choice text correctly displays selected select since currently empty option correctly selected text correctly displays selected select empty choice empty choice correctly selected text correctly displays selected select even though current choice empty breaks expected selected option text display selected selected option empty choice text correctly displays selected select since currently empty option correctly selected text correctly displays selected able fix fiddle two ways change numeric values strings change empty option number either vue getting confused two falsey values vue getting confused mixed types", "d": "12/2016"}, {"body": "campares fails looseequal make patch", "d": "12/2016"}, {"body": "duplicated method name vueprototypeupdate", "d": "12/2016"}, {"body": "first link case result codes js l groupitems function item return c li v nb item n l groupitems function item return c li v nc item n l groupitems function item return grouptype c li v na item n grouptype b l groupitems function item return c li v nb item n l groupitems function item return c li v nc item n l groups function group return c div l groupitems function item return c li v na item n v v true generated b c code ternary see line using vue", "d": "12/2016"}, {"body": "currently vfor higher priority maybe need make explicitly document", "d": "12/2016"}, {"body": "defcc right result compiler", "d": "12/2016"}, {"body": "found code priority need document people like", "d": "12/2016"}, {"body": "changjoopark yes result right", "d": "12/2016"}, {"body": "expected behavior improve docs make priority obvious meanwhile template simplified filter", "d": "12/2016"}, {"body": "sure related one", "d": "12/2016"}, {"body": "hi thanks filling issue perfectly valid regex bug js parser", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks nexttick always necessary many cases", "d": "12/2016"}, {"body": "thanks read links followup forums seems weird phantomjs nt wait dom loaded rest tests", "d": "12/2016"}, {"body": "able keep state using attribute transition example tell nt work reopen issue", "d": "12/2016"}, {"body": "neat trick useful know understand correctly nt work example mentioned transitioning parent view via routing specific element user stops recording want nothing happen rendered duration value anymore nt apply transitions either maybe could apply somehow push key parent views via references something seems quite convoluted guess label feature specifically tied transitions technical sense like example use case", "d": "12/2016"}, {"body": "mmh trouble understand use case create little demo ideally jsfiddle please", "d": "12/2016"}, {"body": "demo app applied transition changing timestamp try suggestion see still transitions end easily store separate parameter keep latest value recording done ca nt use nice one computed write lot extra code thing things add view well timestamp component transitioned directly router try make pure demo fiddle later source important guess demos use case", "d": "12/2016"}, {"body": "another way looking actually make possible computeds return whatever previous value", "d": "12/2016"}, {"body": "use component getting key child caching value somewhere else easy way userland let keep", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "hi animation right check besides listener method added see class added need provide right duration animation effect actually nt duration leave dispear directly think close", "d": "12/2016"}, {"body": "ostroso also problems css transitions using leave leaveactive enter enteractive classes however tried replace css animations works expected plus get flexibility defining animation take look example", "d": "12/2016"}, {"body": "missing", "d": "12/2016"}, {"body": "urgh simple thank guys definitely must andreipfeiffer suggests css animations", "d": "12/2016"}, {"body": "hardimpossible help without reproduction issue", "d": "12/2016"}, {"body": "created repo reproduces problem stripped version project working everything works starting page renders server side client side goes blank", "d": "12/2016"}, {"body": "digging bit trying strip example found removing component view allows page display client ca nt figure tried removing transitions component nt change anything also tried use boolean explicitly instead value store display component nt seem fix either removing component really thing seemed fix", "d": "12/2016"}, {"body": "simply moving tag seems also fix problem reason", "d": "12/2016"}, {"body": "investigation found hydration fails spinner due fact serverrendered markup state route resolved client initial render happens route resolved hydration vue finds already rendered dom element corresponding returns placeholder node route nt resolved yet going mismatch regardless version fact warning using causing full rerender nt really consider working properly say really bug current limitation makes ssr nt play nicely async route hooks definitely something improve though solution would something similar probably expand make support placeholders well", "d": "12/2016"}, {"body": "yeah warning regardless version also stuff relies browser features ssr version client version would always differ bit still problem remains upgrade page renders blank client side would render correctly would changing placement tag affect page renders blank correctly deffo seems like bug changing order component placement affect even page renders", "d": "12/2016"}, {"body": "well general ca nt guarantee behavior warning warnings usually mean something wrong go wrong investigation fact simple solution since resolved route state already store simply force clientside router boot resolved route note would cause route hooks skipped client however side effects hooks reflected store state problem closing see make easier work async route hooks ssr", "d": "12/2016"}, {"body": "ignore animate element resetting", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "nice catch add", "d": "12/2016"}, {"body": "vbind expects javascript expressions nt valid javascript expression simply remove colon bind string bind string literal vbind", "d": "12/2016"}, {"body": "fnlctrl nt think solution want anchor value binded property output something like template compiled html old syntax would something like", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fnlctrl nice", "d": "12/2016"}, {"body": "surely used method slot component passed content using methods inside slot component sure understand mean sounds like maybe scoped slots woudl solve problem", "d": "12/2016"}, {"body": "nt actually work abstract placeholder nt element may expand single element multiple elements text behavior event listener would unpredictable based content instead wrap slot element use event listeners wrapper", "d": "12/2016"}, {"body": "according suggestion work currently use case component represents component represents click emits custom event trying capture component nothing triggered missing something also want send event component elements inside slot achieve", "d": "12/2016"}, {"body": "think managed get working scoped slots event bus nt know best approach comments", "d": "12/2016"}, {"body": "maybe need force value setting option option emty value optionvalue text issue", "d": "12/2016"}, {"body": "defcc yeah need special case option", "d": "12/2016"}, {"body": "meaningful", "d": "12/2016"}, {"body": "hi thanks filling issue expected behavior like assigning variable twice former one overridden please use separate name one", "d": "12/2016"}, {"body": "importrequire", "d": "12/2016"}, {"body": "jounqin ok thanks use done", "d": "12/2016"}, {"body": "well gon na happen two reasons svelte compilation strategy incompatible virtual dom compiles templates imperative dom operations means must use templates vue users write render functions compiled fashion render functions purely dynamic difficult statically analyze vue already light gzipped svelte nt really zero runtime addition svelte generated code much verbose vue generated render functions component complexity project svelte generated code going bit heavier vue adds project gets bigger eventual size difference simply nt significant enough justify loss render functions nt great booooost speak", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thanks easily achieved user land general try best avoid adding microsyntax templating system", "d": "12/2016"}, {"body": "think becasue input elements nt append body element fire change event since event missing vue update data check", "d": "12/2016"}, {"body": "facetothefate said element needs dom change event fire", "d": "12/2016"}, {"body": "available component mounts memory similar calling without arguments warnings console telling target found nt think needs fix", "d": "12/2016"}, {"body": "sure noticed maybe clear explain usecase wanted create vue application website vue application used single page website javascript however inserted globally cms understood documentation mounted called mounts memory would much problem using xhr request mounted method load json however like json loaded every page current workaround remove el options check element avaliable clear documentation mounts always", "d": "12/2016"}, {"body": "compination indom template custom render function wo nt work expected behaviour either define template indexhtml root instance define render function ca nt html indexhtml look like main contents remove render function note works standalone build", "d": "12/2016"}, {"body": "thanks looking", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "please manually add attribute item explanation", "d": "12/2016"}, {"body": "still work add key fnlctrl", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "process case iff id filed identify data use index still work", "d": "12/2016"}, {"body": "index removed please refer", "d": "12/2016"}, {"body": "vue replaces element mounting seems populate element page vue mounted populates vue actually renders app one suggestion moving app template template string include mounted vue app", "d": "12/2016"}, {"body": "hook name", "d": "12/2016"}, {"body": "sorry shame", "d": "12/2016"}, {"body": "thanks reporting issue ios device reproduce problem believe vue already handled prefix problem builtin component used compiled render function looks like manually prefix event native modifier vue knowledge event native binding auto prefixing nt available use component mentioned", "d": "12/2016"}, {"body": "expected vue nt autoprefix events directly bound", "d": "12/2016"}, {"body": "thx export autoprefix method handle quickly need write similar codes", "d": "12/2016"}, {"body": "hmm reproduce behavior seems exactly copy jsfiddle verbatim local file maybe chrome extensions", "d": "12/2016"}, {"body": "hi thanks looking deleted chrome extensions emptied cache browsehistory etc still wrong chrome found several differences drag somewhere half cell works highlights second column mouse enters drag closer left edge fails notice even drag right strange fails fiddle well weirdest drag closer right something completely different chrome version code top edge perfect matter drag checked coworkers system well one works fine chrome fiddle ones fails well", "d": "12/2016"}, {"body": "chrome version reproducible jsfiddle maybe check whether divs overlap", "d": "12/2016"}, {"body": "kingmario checked divs seem normal besides looking fiddle nt see layed differently browser", "d": "12/2016"}, {"body": "still reproduce may something windows chrome", "d": "12/2016"}, {"body": "seems work fine windows chrome edit works fine macos safari", "d": "12/2016"}, {"body": "hmm sorry szmarci given test cases issue seems unlikely caused vue maybe try testing different machine anyway closing feel free follow information", "d": "12/2016"}, {"body": "make things even strange full screen grab first item list works downsize window grab element fails also tested several machines coworkers windows latest chrome fails windows latest chrome fails windows latest chrome fails windows latest chrome works one would assume related fnlctrl uses build idea gon na check home mac", "d": "12/2016"}, {"body": "update works fine mac os latest chrome", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "expected please read support available forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "default clicked error result clicked changed clicked result correct result", "d": "12/2016"}, {"body": "repeat please read guide section linked hint add prop divs allow vue differentiate two encourage ask support forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "note note edit written comment updating original submission nothing new ok studied deeper pull request push soon considerations make meanwhile tremendously simplified version reproduction case run ok switch issue appears code case simple", "d": "12/2016"}, {"body": "pull request done technically boils swapping place single line code fixes reproduction links nt know fixes seems related complete reversal vuejsvue undoes main assumption motivated quote starting animation enter relies retrieving global position element would fail due lack offsetsoffset parents result display none assumption statement embraced resulting unit test specification assumption use case general see jquery relies display none fails jquery issue counterintuitive expect starting enter animation element displayed right fact shall expect element displayed start enter animation another way confirm assumption embraced simple take look current spec pay attention expects display enter leave bit counterintuitive leave expects value beforeleave value expected changed afterleave meanwhile enter expect value beforeenter expects already changed value afterenter exposes problem looking solution doubt values expected beforeenter afterleave display none afterenter beforeleave display meaning expecting specific value enter leave jquery wants display none run animation otherwise considers element displayed nothing another animation wants calculate stuff based element position expectation hard coded let hardcode none let enter author deal changing toggling enter done breaking change puts burden everyone working code furthermore want explain new user work nt manually set display none enter even already set initial style display none must vue automatically set display none animation yes option reasons believe pr accepted break code counterintuitive someone needs display enter one beforeenter beginning enter way set display none beforeenter vain reverted internally expected unit tests must manually put beginning enter code set display none hope pr gets merged otherwise assuming work practice may convinced since first lines still please look code pen tell code changed work thank", "d": "12/2016"}, {"body": "ping probably something answer", "d": "12/2016"}, {"body": "fix intended enter hooks design called moment right node inserted right node made visible previously behavior inconsistent fix usage pretty simple add btw thanks detailed report appreciate time spent looking", "d": "12/2016"}, {"body": "ok thanks indeed fix easy almost getting difficult understand going sorry got bit upset tight deadlines app working suddenly nt anymore keep fantastic work", "d": "12/2016"}, {"body": "met problem want use version", "d": "12/2016"}, {"body": "use versions encapsule elements additional parent like revert wait see happen issue", "d": "12/2016"}, {"body": "question decidedthank much", "d": "12/2016"}, {"body": "use functional component way get rid extraneous root component", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "fnlctrl thanks", "d": "12/2016"}, {"body": "hi thanks filling issue custom events designed direct parentchild communication passing parent reference child considered antipattern vue matter way since couples parent children implementation", "d": "12/2016"}, {"body": "works use believe correct approach heads case deadline sure bug though imagine wrapped stuff would cool", "d": "12/2016"}, {"body": "yeah vmodel solution unfortunately need track changes vuex onchange method recommended way vuex forms nt tried nexttick though give shot tue dec bill criswell notifications githubcom wrote works use vmodel believe correct approach heads case deadline sure bug though imagine wrapped onchange stuff nexttick would cool receiving authored thread reply email directly view github mute thread gt regards david gauld", "d": "12/2016"}, {"body": "use attr select", "d": "12/2016"}, {"body": "duplicate closing since source issue dependency bug framework", "d": "12/2016"}, {"body": "ok possible update dependency version without bug", "d": "12/2016"}, {"body": "seems false node normalized", "d": "12/2016"}, {"body": "fix shipped", "d": "12/2016"}, {"body": "addendum also fix purely code vue import bit hack sorts problem fixed vue", "d": "12/2016"}, {"body": "nested vnode normalized try make patch", "d": "12/2016"}, {"body": "components", "d": "12/2016"}, {"body": "defcc looking well", "d": "12/2016"}, {"body": "got", "d": "12/2016"}, {"body": "fix shipped", "d": "12/2016"}, {"body": "patch works demo also assume test derived", "d": "12/2016"}, {"body": "vueserverrenderer meant used node server works differently node webpack refer help", "d": "12/2016"}, {"body": "case feature request would make prerendering much easier suppose huge step nodejs require commonjs", "d": "12/2016"}, {"body": "digitalheir see implements lay loading ssr", "d": "12/2016"}, {"body": "use nuxt", "d": "12/2016"}, {"body": "would put template script tag inside element vue mounted move outside", "d": "12/2016"}, {"body": "ah nt occur guess late thanks", "d": "12/2016"}, {"body": "\u53ef\u4ee5\u89e3\u51b3", "d": "12/2016"}, {"body": "\u6211\u4e5f\u9047\u5230\u4e86vmh function", "d": "12/2016"}, {"body": "deprecated since html vue recognized svg element thus created svg namespace control using html anymore reason forces use", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "fnlctrl apologies default text comment nt english nt know respond upload jsfiddle example would possible post receive answer", "d": "12/2016"}, {"body": "sorry vue nt guarantee compatibility arbitrary party libsplugins", "d": "12/2016"}, {"body": "fyi seems like babel es module transpile issue related vue", "d": "12/2016"}, {"body": "watching transactionitem prop doesnt work tells absolutely nothing help help also already told issues meant support questions two issues closed today wrote somewhere forum nt work ip block still gitter stack overflow happy help get forum access working tell us problems trying access github issues still support forum", "d": "12/2016"}, {"body": "thanks filling issue please create reproduction repository steps", "d": "12/2016"}, {"body": "cant signup forums ip block nt know ill post bug please nt find blocked solve first use stack overflow", "d": "12/2016"}, {"body": "nt know happens addon version firebug firefox windows since accepted firebug switch new builtin version nt know revert addon prefer probably firebug bug open issue repo try reinstall firebug revert changes", "d": "12/2016"}, {"body": "would guess things like transition mode really belong component imagine component transition mode component b transition mode transition b would look like stuck waiting b finish transition b stuck waiting finish transition", "d": "12/2016"}, {"body": "maybe right im using example thats though could change default transition mode outin could solve problem nt wait b enter b wait leave enter right", "d": "12/2016"}, {"body": "maybe provide reference basically need implement custom transition component two instances used together coordinate sequencing think eventually entry cookbook one day released separate plugin", "d": "12/2016"}, {"body": "related vue", "d": "12/2016"}, {"body": "fnlctrl", "d": "12/2016"}, {"body": "hello komajunjun thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "thank linusborg asked question quora answer question thanks advance", "d": "12/2016"}, {"body": "quora sorry", "d": "12/2016"}, {"body": "notice code image wo nt loaded automatically webpack requireimport data property vm use template", "d": "12/2016"}, {"body": "jounqin mean requireimport url firstly", "d": "12/2016"}, {"body": "ca nt define props element used define components template props work meant props meant passing data prent component parent template child component please read guide props", "d": "12/2016"}, {"body": "hello jinhwong thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "hmm use custom component alias directly setting content considered slot content slots meant content programmatically rendered vue probably make pluginbase component accept string prop use inside might need add warning future", "d": "12/2016"}, {"body": "hello deveclipse thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "likely bug requirejs rather vuejs", "d": "12/2016"}, {"body": "possibly related", "d": "12/2016"}, {"body": "apocalyarts check happening case", "d": "12/2016"}, {"body": "posva simplesmiler yes confirm also confirm template workaround help displaying posts mainpage using vfor youtube iframes working fine closing issue looks safari bug like evan explaned probably make workaround component", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks property already observed need use also arrays longer augmented component instances also different version", "d": "12/2016"}, {"body": "vue nt detect change directly setting item index see allows substitute value array given key another value want modify entirely replace also thank pointing arrays longer augmented set onward", "d": "12/2016"}, {"body": "actual mutation happens object inside array array subject index detection caveat", "d": "12/2016"}, {"body": "made repo show problem please take look see loaded first time interpolation nt picking updated state changed method later however see console actually updated problem need updated within curly brackets note button clicked causes rerender hence get current value basically loading fine nt updated ps tried using rewrite whole value since takes index indexed array second argument run another problem index string basically thing associative arrays javascript hence get thrown error", "d": "12/2016"}, {"body": "seem misunderstanding javascript array works way using like object hash array mutations arrays javascript happen methods like adding new property array object pushing new element array arrays want store things string keys use object since adding new property use", "d": "12/2016"}, {"body": "yeah understood array strings indexes basically object property creating repo nt know one thing despite way purpose used array nt vue updating nt since arr someid arrsomeid accessed arr someid arrsomeid nt updating ps also using objects would nt adding property would modifying modifying", "d": "12/2016"}, {"body": "oh boy fixed fiddle please note read change detection caveats", "d": "12/2016"}, {"body": "simplesmiler thank clarify restless nt know wrong using update value instead using set object begin hit change detection caveat", "d": "12/2016"}, {"body": "yes vue unable detect addition new property object due limitations javascript", "d": "12/2016"}, {"body": "evan almighty nt insane nt sure problem running thank simplesmiler guys good day", "d": "12/2016"}, {"body": "error seeing related circular references incorrect use leading infinite recursion", "d": "12/2016"}, {"body": "sorry provided wrong code change code make looks right another question new code work like nt work like vue warn velse used element without corresponding vif simple work", "d": "12/2016"}, {"body": "valid closing syntax need close tags explicitly", "d": "12/2016"}, {"body": "nice understand thanks finally code search hope useful", "d": "12/2016"}, {"body": "js object please refer", "d": "12/2016"}, {"body": "simply pass method prop instead", "d": "12/2016"}, {"body": "normal specific benchmark fluctuate versions keep eye please make sure open issues adheres guidelines", "d": "12/2016"}, {"body": "hi thanks filling issue special attribute vue used binding styles name suggests please rename prop something else", "d": "12/2016"}, {"body": "kailniris summarise reasons use cases behind feature request please thread long", "d": "12/2016"}, {"body": "short story global data set fairly big time make objects reactive data set memory consummation gets hand control memory usage remove unused observer properties getter setters unobserved objects self rewrite deep clone like order remove observers actually observed objects vue instances somewhere code sure object unobserved require feature linked issue suggestions cloning original object make reactive freeze object wo nt solve issue cuz situations need observed objects reference make mutations vue instance fiddle representing use case", "d": "12/2016"}, {"body": "already check using private property though nt know worth adding public api maybe good enough least", "d": "12/2016"}, {"body": "even non observed reactive object property like example observer observed vue instance least observed function returns", "d": "12/2016"}, {"body": "well normally means made reactive vue gettersetters need know object observed actually going trigger view changes go deeper use array though still thing", "d": "12/2016"}, {"body": "sorry specific enough still learning vue method suggested sufficient enough task meant use risk possible risks anyway thanks much information vue impresses every moment", "d": "12/2016"}, {"body": "well since undocumented private property belongs internals vue implementation subject change eg renamed rely face risk changed time future undocumented though unlikely specific case", "d": "12/2016"}, {"body": "understand public api would needed chances could feature future", "d": "12/2016"}, {"body": "pattern discussed issue suitable workaround problem feature request unnecessary", "d": "12/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks please try clarify version vue using work normal browsers version cordovaandroidios fail", "d": "12/2016"}, {"body": "fnlctrl hi using cordova vue code working perfectly normal browsers nt work cordova run mobile phone phone model one plus \u4e00\u52a0\u4e09 base android ram rom meizu base android maybe ram rom test failed nt iphone devices nt know works ios wrote simple code show problem use default cordova project simply generate cordova create see vue version cordova version image working perfectly normal browser phone nothing happend", "d": "12/2016"}, {"body": "thomassoloist please create repo keep mind nt necessarily know cordova", "d": "12/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "12/2016"}, {"body": "change different seems fallback component found", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "exactly know changing solve problem think fallback preference wrong find naming conventions local registered components first found look global components", "d": "12/2016"}, {"body": "fnlctrl think", "d": "12/2016"}, {"body": "know naming conventions third party ui libraries using local components name conflict knows", "d": "12/2016"}, {"body": "know naming conventions third party ui libraries using would relevant always alias inside options consider reverse scenario want override third party component local component globally registered component anyway always explicitly alias components potential naming conflict never rely fallback precedence", "d": "12/2016"}, {"body": "would relevant always alias inside components options real scenario use ui collection set simply nt need care whether registered kebabcase camelcase titlecase register local component simply html something import tabpane tabpanevue export default components tabpane someui also component named tabpane registered local registered component never used use longer syntax said overriding thirty ui local component global component rare case like hack local component registered kebabcase never chance vue guide says registering components props use kebabcase camelcase titlecase vue care told vue cares care", "d": "12/2016"}, {"body": "told vue cares care said let quote words always explicitly alias components potential naming conflict never rely fallback precedence case creating component name party component avoided first place since defining local component full control name", "d": "12/2016"}, {"body": "please nt play words fact registered component wrong naming convention vue cares please let end dispute", "d": "12/2016"}, {"body": "yeah say bug feature doc wrong code", "d": "12/2016"}, {"body": "think bug camel case title case component name seems aliases rather fallback practically use cameltitle case register local component object shorthand since javascript allow kebab case variable names also local component overridden global components easily cause unexpected behavior break capsulations third party components", "d": "12/2016"}, {"body": "sounds reasonable maybe bring breaking change", "d": "12/2016"}, {"body": "using one template could render", "d": "12/2016"}, {"body": "jounqin happend internally check prototype chain first think might bring breaking change cases apply new resolving strategy", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "\u70e6\u8bf7\u4ed4\u7ec6\u770b\u770b\u5f00 issue", "d": "12/2016"}, {"body": "overwrite application code use bundling via webpack browserify control env variables", "d": "12/2016"}, {"body": "thanks quickly answer another weird code seems hack webpack purpose sorry interruption", "d": "12/2016"}, {"body": "jounqin ssr", "d": "12/2016"}, {"body": "posva hmm know ssr preserving override webpack simply although code short", "d": "12/2016"}, {"body": "component name ca nt start digit htmlxml tag names simply component name turned tag name", "d": "12/2016"}, {"body": "oh see modified subject case maybe helpful warning introduced", "d": "12/2016"}, {"body": "understand maybe error message highlight fact", "d": "12/2016"}, {"body": "heh let edit last message since real time indeed thinking thanks", "d": "12/2016"}, {"body": "interestingly issue revealed typo vue source code see", "d": "12/2016"}, {"body": "expected supported wo nt future use computed properties methods need complicated nesting filters", "d": "12/2016"}, {"body": "well think already explained also dedicated repo websitedocs wwwgithubcomvuejsvuejsorg please open new issue think still issue please try answer questions suggestions aforementioned improved miss link secion somwhere else docs", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks use watcher value itemquantity", "d": "12/2016"}, {"body": "received warning directly mutating prop value forbidden please use custom events change value instead", "d": "12/2016"}, {"body": "ok id successfully binded list able bind load difference", "d": "12/2016"}, {"body": "nt define parent component instead wrongly defined global variable questions please use dedicated gitter forum thanks", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "tracked vuedevtools repo yes already request high priority need check allow access file urls vue devtools extensions panel", "d": "12/2016"}, {"body": "vuejsvuedevtools", "d": "12/2016"}, {"body": "currently supported yet roadmap duplicate", "d": "12/2016"}, {"body": "amazing use git bisect find source bug sorry duplicate issue searched wrong words", "d": "12/2016"}, {"body": "component seems lacking access filter exporting plain object inside something like cause problem please follow issue reporting guidelines provide repo github reproduce issue thanks", "d": "12/2016"}, {"body": "filters work mustache interpolations", "d": "12/2016"}, {"body": "probably caused safari quirks string template seems work fine", "d": "12/2016"}, {"body": "safari bug removing element containing iframe causes iframes src still dom go blank suggest opening issue webkit bug tracker instead really much vue since changing insertionremoving order going affect lot patching internals potentially lead breaking changes fnlctrl points workaround using string templates instead indom templates efficient", "d": "12/2016"}, {"body": "strange thing log display property set correct yet reports none could issue callback fires early later correct", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "quick workaround works", "d": "12/2016"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "12/2016"}, {"body": "works fine", "d": "12/2016"}, {"body": "usage slot expands piece plain text transitionable wrap element like", "d": "12/2016"}, {"body": "thanks lot", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "update untill getting error another library using directly related vue please provide details also use issues track vuejs bugs get usage problem could post issue forum", "d": "12/2016"}, {"body": "least tell us library errors getting", "d": "12/2016"}, {"body": "hey thanks fast answer error unfortunately dont information right know enough reason would expect hey check vueloader version maybe webpack scripts need update change something well abstract even sorry sure using custom version epubjs library", "d": "12/2016"}, {"body": "well case ca nt really help much since held responsible compatibility arbitrary party libraries closing please follow information available eg error stack traces minimal repro", "d": "12/2016"}, {"body": "element tag", "d": "12/2016"}, {"body": "yep could definitely use improvements declarations added midway pure es codebase already place quite places trying get flow knowledge also limited appreciate prs", "d": "12/2016"}, {"body": "thejameskyle link using flow vuejs try yesterday much problems would great documentation like one made ts", "d": "12/2016"}, {"body": "currently someone working would like try", "d": "12/2016"}, {"body": "markustoe thanks offering help currently actively working improving typings addchange stuff find working parts fixing bugs etc would great improve situation", "d": "12/2016"}, {"body": "primary concern intrinsic misalignment vue options object general type checking systems vue internals options object meta object contain information plain class assume keep nesting even using literal getset nt help flow understand inside getter would object instead vue instance right way make flow potentially play nice removing nesting nesting useful vue lot cases example options nesting allows merged different strategies component extensions enables userland composition eg vuex literal gettersetters quite bit indirection use cases even harder without nesting alternatively vue user serious getting proper classbased type checking vueclasscomponent probably way go", "d": "12/2016"}, {"body": "sometime future flow add syntax adding type functions simple semantics hard implement problem around become getterssetters toplevel pretty natural nested way weird stuff mapping props intersection type spend time working order get correct types", "d": "12/2016"}, {"body": "scott", "d": "12/2016"}, {"body": "closing since nt think worth introduce alternative syntax type checking purposes plus losing composition flexibility especially fullfledged approach available via type checking strongly desired may revisit es classes become expressive enough used default defining components", "d": "12/2016"}, {"body": "looking maybe could improve parser could achieve vueloader vueify considering compiler code size", "d": "12/2016"}, {"body": "defcc considered using example", "d": "12/2016"}, {"body": "need nonminified development build see vue warning please refer", "d": "12/2016"}, {"body": "thx", "d": "12/2016"}, {"body": "please refer", "d": "12/2016"}, {"body": "filter named stored variable could instead ofc nondynamic", "d": "12/2016"}, {"body": "imo dynamic filters breaks bit readability templates moved js instead computed property explicit name represents also nt really see syntax could used", "d": "12/2016"}, {"body": "use computed properties instead plain method call filters designed readability expected static", "d": "12/2016"}, {"body": "would belong vuerouter repo could please post", "d": "12/2016"}, {"body": "done", "d": "12/2016"}, {"body": "\u52a0\u5165\u4e00\u4e9b loader", "d": "12/2016"}, {"body": "\u653e\u5728github\u4e0a", "d": "12/2016"}, {"body": "please check squares always fade inout well nt probably getting image index times row image nt change function nt guarantee drawn index different previous one besides everything looks good", "d": "12/2016"}, {"body": "point know index trigger change bug opening fiddle suddenly works sometimes nt could issue hot reloading exact issue local build vuecli webpack template seems mainly occur code gets hot reloaded people gitter channel confirm behaviour machine seems random", "d": "12/2016"}, {"body": "additional info launching fiddles browsers get random results reloading makes sometimes work sometimes break", "d": "12/2016"}, {"body": "alright checking definitely something weird going transitionproperty set nt see images animating beginning like switches change works great yeah weird issue updated fiddle uncomment transition see happens", "d": "12/2016"}, {"body": "correct also happens kinds browsers sometimes reload sometimes specify properties individually seems like real bug", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "vue \u4e0d\u4fdd\u8bc1\u4e0e\u4efb\u610f\u53ef\u80fd\u64cd\u4f5c dom", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "bad", "d": "12/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks vue replaces dom therefore dom events like click one replaced put jquery manipulation event also google examples many", "d": "12/2016"}, {"body": "note already replied first issue question one hour earlier please nt open issues supporthelp", "d": "12/2016"}, {"body": "bug vue replaces elements added events domready hint call jquery code hook encourage ask questions forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "duplicate fixed", "d": "12/2016"}, {"body": "latest update still facing problem using workaround described", "d": "12/2016"}, {"body": "input gets focused user inputing something input value property updated make patch", "d": "12/2016"}, {"body": "problem trim modifier try fix together", "d": "12/2016"}, {"body": "hey sorry potential problems caused app new release build vue dev branch locally see fixes issue", "d": "12/2016"}, {"body": "problem thanks great work fast fix", "d": "12/2016"}, {"body": "hi short update digging deeper deeper vuejs calling invokecreatehooks new element created seems fix problem ie line updated fiddle change demonstrate leaving first invokecreatehook work know think issue exatly related issue posted stack overflow new elemente created defaults input type text value applied type changed radio therefore get correct value newly created element defaults hope follow explanations kind regards andreas", "d": "12/2016"}, {"body": "nt know different workflow using bower instead npm main field indeed missing multiple builds runtinenormal builds runtime builds nt include compiler therefore need something like vueloader compile templates commonbrowser builds common builds used bundler browser build directly used cdn builds total combining option maybe bower one packagejson one", "d": "12/2016"}, {"body": "seems reasonable sure recent developments bower use gulp wiredep insert script tags based think fairly common", "d": "12/2016"}, {"body": "actually searched recommended package manager npm yarn bower configuration file vue see basically override main manually", "d": "12/2016"}, {"body": "hi marcte thanks interest vue idea high level fits better user land abstraction top vue nt see talking fields looks like specific component good luck idea", "d": "12/2016"}, {"body": "posva problem get vuejs code sugar sure work ok break vuejs features really think especially people like experts interpreter workflow implement feature sad close thread people time comment main point vue feature describe beacon replacement implicit parameter passing without anyway fill component replacement definition elements doubling size file following would replace something like would highly simplify improve frontend framework implemented know design vue wish nice frontend framework marc", "d": "12/2016"}, {"body": "posva field mean old database vocabulary attribute column record table database last name first name phone number", "d": "12/2016"}, {"body": "sugar talking component create closed looked things already said much realised fits userland better cheers", "d": "12/2016"}, {"body": "posva done userland forces either define dynamic component code element form rather get done automatically behind scene runtime client define intermediary component anyway code possible components dynamic call one place code add component bad add one component level element top form lower component also means top form call needs parameters passing intermediary component need forward lower component mention heavier syntax compared simple beacon need pass leas one parameter dynamic component selecting field want name address etc simplify things visually code size wise memory usage wise speed wize marc", "d": "12/2016"}, {"body": "posva would like discuss topic skype could french english thanks marc", "d": "12/2016"}, {"body": "marcte offense quite difficult understand proposal even reading twice imagine would similarly even difficult less experienced users comprehend since vue always focused approachable easy understand nt think something consider pulling vuejs recommend building userland suit specific needs", "d": "12/2016"}, {"body": "thanks reply really trying express best way think see must framework userland maybe misunderstood use terms mean something else main point program subcomponents reusable want place templates using short amp simple beacons need pass anyway parameters context acceptable way reflect upwards subcomponent state changes events manager upper component means would natural implicit way putting component template vuejs either interpret elaborate way least replace behind scene longer verison interpreted vuejs less verbose component insert information need come metadata source example put button component name component would replaced call button component reference metadata related startbutton would also wire things subcomponent reflect state upper component upper component one meaning button state meaning good practices debugability button component change state upper component calling attribute setter manager procedure central upper component course maybe makes sense show point visual sketches would also open skype conversation matter already new handwritten schema showing problem really trying use vue best elegant way remind us thlking frontend framework meaning related visual objects long complicated js marc", "d": "12/2016"}, {"body": "words posva linusborg whatever allowing data driven templating app code slimming idea synthesised way way insert components without need long statement parameters way templates look visual include code mostly related component positionning beside minimum behaviour code needs outside components would allow see simple solution billow apparently simple framework vuejs graphic designers anyway making easier cool see template code would offer natural way inserting component universe components highly repetitive code generated client side namely take component beacon replace necessary call syntax would anyway necessary every component calls component type solution simplest way triggering code replacement vuejs interprets code replacement could take string beacon ex firstname process function returns js statement interpret similar ways dynamic templates also allows define parameters want pass processing defining values passed would also allow simpler way connect data flow different component levels althougs explicit code could made explicit function somewhere global code files great thing would function returning statement could logic select different return formats many parameters etc according serves better context bottom line feature would allow really cool visually appealing code whatever way want take advantage really think great step take allow marc", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "complicated", "d": "12/2016"}, {"body": "encourage ask support questions forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "linusborg thanks", "d": "12/2016"}, {"body": "hi fenivana thanks filing really like issue reporting style succinct yet informing fix tried small demo worked well wonder work larger application would like give local build try application thanks", "d": "12/2016"}, {"body": "hi jcfg thanks suggested feature far refrained polluting prototypes custom methods vue explicitly removed nt think want start adding type code framwork unless advantage provides extraordinary far nt think case proposed method", "d": "12/2016"}, {"body": "adding vueswap like vueset", "d": "12/2016"}, {"body": "write updated notification", "d": "12/2016"}, {"body": "dependency notification twice splice vueset right adding arrayprototypeswap like adding vueswap notifications", "d": "12/2016"}, {"body": "dependency notification twice splice vueset right yes called twice neither performance implications calling watcher twice update triggered pushed scheduler working asynchronously skip duplicate entries", "d": "12/2016"}, {"body": "ok still think worth reactive swap vue none trivial normal users vueswap also needs single notify like corrected comment since vue developers know vue better normal users", "d": "12/2016"}, {"body": "ok still think worth reactive swap vue none trivial normal users nt think three lines code herringtondarkholme nontrivial dev knows js enough work vue successfully otherwise try keep api surface vue lean could think dozens small convenvience functions like would inflate api unnessessarily", "d": "12/2016"}, {"body": "quick question notifications whole todo list right single elements list notifications vueswap would miss notifications arr x example something like data msg reactive var todos msg reactive list", "d": "12/2016"}, {"body": "could think dozens small convenvience functions like would inflate api unnessessarily therefor one could aggregate helpers like plugin core clean", "d": "12/2016"}, {"body": "quick question notifications whole todo list right single elements list notifications case changing array therefor one could aggregate helpers like plugin core clean contreibution welcome close issue since think come understanding wo nt added core", "d": "12/2016"}, {"body": "hi thanks filling issue many css properties like works numerical values ie appending default break usages", "d": "12/2016"}, {"body": "fnlctrl thanks reply first awesome css properties work numerical values however properties also feature work good work numerical values css properties would units", "d": "12/2016"}, {"body": "cybai think possible implement computed properties also vuejs later use filter eg html", "d": "12/2016"}, {"body": "kazupon looks good though hope vue support suffix automatically besides using properties might flexible users thanks reply great example", "d": "12/2016"}, {"body": "store data set plain object user pick item put item vue instance reactivity one item everything good expects causes memory leak every time put item vue instance new observer property added object even object instance new observer added next unused ones could please provide demonstration jsfiddle example ecactly put item vue instance", "d": "12/2016"}, {"body": "sorry clear enough fiddle asked", "d": "12/2016"}, {"body": "made test looks like made false statements memory leak looks like make object reactive vue instance put object another instance first instance observer property added additional getters setters added right however high memory usage large data set still issue", "d": "12/2016"}, {"body": "observer property added yes somehow remove unused observers gettersetters parts app updates object want keep reactivity conflicting requirements imho observe one object maintain observer maybe vue smaller observer instances sure currently workaround might partition data maintain set objects want keep reactive clean reactive set another suggestion mark immutable properties prefix waive several watcher instances", "d": "12/2016"}, {"body": "somehow remove unused observers gettersetters parts app updates object want keep reactivity conflicting anyhow lets say object list object properties user vue user picks another object first object longer visible user view layer would want maintain reactivity anymore object user observes object object property changed function somewhere code update displayed user basic idea nt want maintain observers object displayed view layer currently cpu memory efficient way long term wanted represent fiddle posted earlier problem make object reactive observer stays even object really observed point might future course using memory nothing featuremethod wanted ask way remove observers objects really observed point determine objects observer part instances without deleting object", "d": "12/2016"}, {"body": "suitable workaround would could determine unused observers object objects reference vue instance vuex somehow could delete unused observer properties unused getters setters freeing memory currently unused objects readd observers default object used would allow vue work extremely high amount data low memory consumption know cpu intensive dirty checking makeshift garbage collection still better nothing", "d": "12/2016"}, {"body": "might something like work essentially clone picked item using adding vm cloned object made reactive vue original data stays nonreactive also set watcher item changes mirrored original nonreactive object soon change picked item one reactive item become unreferenced garbagecollected quick amp dirty demo course improved eg using deepcloning work nested objectsarrays", "d": "12/2016"}, {"body": "thanks working issue know strictly applications specification issue workaround object reactive always strictly modified outer code like message server never inside vue instance even vue instance update method first must validated server message server update global items object thinking sure work setup vue instance create mixin every vue instance listens global update requests make object reactive vue instance instead making global reference reactive deep clone object global updates update global object reactive objects vue instance separately thing wanted stay away fact go away vue one source truth data model", "d": "12/2016"}, {"body": "latest comment mind proposal would clone old item new one gets swapped cloned object reactive properties take cloned object assign back array method maintain single source truth picked item made reactive inplace pick cloned back nonreactive item done", "d": "12/2016"}, {"body": "sirlancelot useful idea thanks contribution know cloned objects get observer property getter setters made tests works fine thing whats still missing way determine object part another instance safely reassign guess achieved application logic thing think kind dirty checking resigning observed objects user idle view layer empty official way developed developed think suitable workaround thanks help", "d": "12/2016"}, {"body": "items mutated simply call setting vue instances let vue know skip observing internals items basically solve memory issue even need mutate instead something like", "d": "12/2016"}, {"body": "items global object mutated time network source point chose vue cuz reactive objects mutations updates view anytime without knowing listening object mutations project wanted achieve followings get global data set variable show data view layer object mutated global data set view layer must automatically updated representing mutations without code vue manager achieve goals without problem expects increase memory use using app ca nt freeze object clone make reactive cuz need original object reference get reactive view update global object mutated updated fiddle demonstrate idea", "d": "12/2016"}, {"body": "close turned support thread bug report feature request feel free continue conversation open another issue leads actual issue", "d": "12/2016"}, {"body": "stated actual feature request request api determine reactive object part vue instance examples provided use cases provide better understanding would requested feature helps achieve create new issue specific feature request thanks help far", "d": "12/2016"}, {"body": "create new issue specific feature request yes please guarantees weither feasable though", "d": "12/2016"}, {"body": "kailniris thinking whether worth adding api dug old issue let continue discussion going jsfiddle based sirlancelot evan suggestion concluded maybe make store object reactive let notify view updates instead making items reactive use skip adding watchers item performance gain jsfiddle therefore nt necessary", "d": "12/2016"}, {"body": "thanks working issue idea fascinating reactivity works objects extra memory use compared plain objects guess work vuex store suitable multiple global reactive data sets try idea real data set write report thanks", "d": "12/2016"}, {"body": "kailniris updates", "d": "12/2016"}, {"body": "fnlctrl sorry keep waiting still making tests working implement pattern code respond back asap results", "d": "12/2016"}, {"body": "sorry late replay managed implement pattern made lots tests everything works fine looks like good solution issue think feature request unnecessary close maybe pattern added docs anyway big thanks help", "d": "12/2016"}, {"body": "glad help", "d": "12/2016"}, {"body": "yes design vue nt remove duplicate static class names merges asis reality already know static class abc probably nt bind", "d": "12/2016"}, {"body": "fnlctrl using css modules think case class named component use inside want override style style loaded means style higher level choose use makes classname like contains generated classname fix issue level css selector duplicate classname way merge classname parent", "d": "12/2016"}, {"body": "use instead", "d": "12/2016"}, {"body": "sorry nt really understand use case seems overengineering really need bind static class twice component template parent template shown fiddle build system probably something wrong", "d": "12/2016"}, {"body": "duplicated class cause issues though nt seem actually matter", "d": "12/2016"}, {"body": "actually however problem using makes use consider two component vue basecompvue basecompvue base color red backgroundcolor green vue hellovue import basecomp basecompvue export default name hello components basecomp hello color blue backgroundcolor pink obviously want override style actually work style loaded", "d": "12/2016"}, {"body": "plugin replaces dom nodes vue managing breaking expected behavior predict behavior arbitrary party plugins", "d": "12/2016"}, {"body": "manually solved issue returning third argument component data rendertostring function component data server data variable bundlerendererrendertostring err html data gt hope future update see decision", "d": "12/2016"}, {"body": "meta information seo purposes nt need dynamically updated due services mechanisms query website page url index initial synchronous request means even update via js search engines likely index way probably wo nt ever indeterministic best way optimize seo purposes statically generate content consumption web crawlers manipulate head correct meta content server level fairly simple achieve injecting content head served document real exception user experience dynamically update title document true benefit updating title dynamically exceptions addthis require manipulation via client api ensure using client functionality content set preferred plugins manipulate head document generally fairly expensive purpose probably reason updating head completely regenerate meta data client side said certainly agenda provide information best practices comes common scenarios planning form cookbook provide sort information perhaps asking vue forum may aid may others could provide opinions subject", "d": "12/2016"}, {"body": "best advice concerned providing meta content head would assuming using state management able provide context server renderer add place holders html document template like create store seo updating correct data serving head document ect replace placeholders correct data using client base tools use store data update title necessary questions concerns let know", "d": "12/2016"}, {"body": "considering mine spa vue main use case probably spas think important reactively update title better user experience put sounds fairly straightforward also assume would nt take much integrate capability vue", "d": "12/2016"}, {"body": "user experience spa simple updating title route change however deterministic may needed update example use cases could dictate opening model window enough change title simple javascript inevitably creating abstraction vue change documents title much said using spa days becoming considered antipattern real focus meta data title ui experience simple even plugin would cater many use cases essentially wrapper change document title real problem dynamic meta information falls server level server level many tools used many template engines many variants thus suggestions advice simple solution best imho vue dictates setup officially stamp approval plugin prevent choice tooling scope vue thus problem domains subject tools use vue avoid creating friction", "d": "12/2016"}, {"body": "current project modal yes title metadata og image etc need change depending modal showing nt matter modal vue nt care modal declared child vuerouter like child able include required metadata changes component declaratively kinda vuemeta works said changing something like og image obviously important handled server vue nt offer clear way going saying spa antipattern well going current winds javascript trends change every months evan pointed recent tweet people like different things know wish programmers understood many projects spa makes sense", "d": "12/2016"}, {"body": "client depends og image meta data spa unlikely search engines facebook ect pick correct meta information dynamically updating update asyncronous clever search engines attempt relying requested data page loaded picked could explain use case detail understand tool like vuehead vuemeta makes sense application", "d": "12/2016"}, {"body": "yes said changing something like og image obviously important handled server important something like facebook gets information page nt matter client title theme two examples metadata matter client important handling metadata correct client server projects like vuemeta matter prevent many devs reinventing wheel declarative updating page metadata handled consistent way client serverside rendering example list items user clicks one want page details open want open instantly since already data spa awesome quickly need grab couple small bits data spa still awesome also want data page directlyaccessible ssr app user would get page prerendered correct page metadata user got instantly clicking list item case page also correct metadata applied one example", "d": "12/2016"}, {"body": "nt make sense vue excellent way keeping url sync navigational changes sensible way keep metadata sync along", "d": "12/2016"}, {"body": "okay browsers fire change event item loses focus using input event seems working better", "d": "12/2016"}, {"body": "luqmanrom yes", "d": "12/2016"}, {"body": "relevant threads", "d": "12/2016"}, {"body": "roadmap ideas improve probably sat dec denis karabaza notifications githubcom wrote relevant threads nodejsnode nodejsnode receiving subscribed thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "great waiting vue suitable use ssr bundle render production environment release date vue roadmap", "d": "12/2016"}, {"body": "hi thanks filling issue caused vue dom patching strategy described docs default mode efficient suitable list render output rely child component state temporary dom state eg form input values simply fix adding attribute element also recommended provide key vfor whenever possible unless iterated dom content simple intentionally relying default behavior performance gains", "d": "12/2016"}, {"body": "since using vuex store serve caching layer fetch action send ajax request corresponding data already store inlined hydrated server render", "d": "12/2016"}, {"body": "hi thanks filling issue value object vmodel passes reference child changes child makes affect parent immediately actually nt want make affect parent immediately mutating prop object directly child change prop done designed used objects yes parent state gets replaced new fresh object case using local cloned value right approach serves temporary state child flushed parent state changes triggered therefore simply removing inside watcher elsewhere want update parent state flush local state way still watch react changes also really think maybe consider breaking component deep object multiple components modifying primitive values simple objects like makes easier maintain reason", "d": "12/2016"}, {"body": "really think maybe consider breaking component value deep object multiple components modifying primitive values simple objects like makes easier maintain reason yes consider component holds primitive values input vmodel components well end object prop gets mutated many examples simple inputs value object distance units time position picker select multiple values like matter car seems able encapsulate inputs reusable component use simply simple effective easy reason problem issue trying raise vue js tried fix antipattern instead gave us extremely easy way different antipattern vmodel exists create input components right prop passed vmodel intended modified right reason pass things via vmodel vue js nt use immutable data passes everything reference modifying prop passed antipattern means attempt mutate prop inside child component modify value prop got intention modifying anti pattern make sense guess nt understand vmodel exists without deepcopying passed value since way intended without deep copying first", "d": "12/2016"}, {"body": "way look passing argument value reference prop inside method example nt make sense thinking someone privy internals vue seems logicalsafe modify prop object property since parent component component depends object state react accordingly changing object child component would imply somehow updating references magically would asume one motivations data downactions paradigm probably would nt worry deep cloning prop object using every change", "d": "12/2016"}, {"body": "teleclimber read docs several times find way around issue", "d": "12/2016"}, {"body": "specifically expressed builtin constructs worst case really express anything render function", "d": "12/2016"}, {"body": "need static content depending user input way need dynamic content eg event bindings check functions also either string name component component iirc enough care generate components dynamically advise explore simpler options first", "d": "12/2016"}, {"body": "closing since nt think feature request fulfilled believe render functions sufficient arbitrarily complex use cases feel free continue discussion though", "d": "12/2016"}, {"body": "sure understand function right function generate new dom elements drop elements dom async way example consider vue instance already rendered mounted element button user inputs number click button seconds new element appended button number shown use input another click waiting another n seconds see another appended repeated many times prevue time easily via dom apis achieve edit know done pushing new numbers array using template new elements appended structure therefore expressed hmmm might able define possible structures new elements many components combine", "d": "12/2016"}, {"body": "idea know ahead time possible types content yes everything expressed templates render functions keeps component render output declarative predictable nt follow chains imperative code figure something happening nt know content use something like html careful xss though", "d": "12/2016"}, {"body": "also imperatively append empty element rendered vue wo nt throw away appended rerenders technically wanted recommended", "d": "12/2016"}, {"body": "got many thanks simplesmiler", "d": "12/2016"}, {"body": "cents alternative could", "d": "12/2016"}, {"body": "vue warnings thrown errors spy assert vue warnings", "d": "12/2016"}, {"body": "please move issue also reproduce issue make reproduction based fiddle", "d": "12/2016"}, {"body": "mistake yui compressor part illegal use keywords identifiers property names accessors reference mdn reserved word usage deal yui compressor quote keywords", "d": "12/2016"}, {"body": "ok thank hint may added docs default confusing property name anyway even allowed let return used instead", "d": "12/2016"}, {"body": "default confusing property name anyway feel way used define default value use value provided seems fitting descriptive", "d": "12/2016"}, {"body": "may like reuse reserved words absolutely necessary purpose define default value use value provided name defaultvalue make also syntaxhighlighter yui happy state somewhere notation fine also props default foo unfortunately seems clear frontend people least circles define props js object notation style obviuos comment simplesmiler admit though filing issue thanks simplesmiler", "d": "12/2016"}, {"body": "case conforming standard yui cater party tool fails comply standard", "d": "12/2016"}, {"body": "point using reserved words allowed context matter personal taste want argue decision use stick wish luckily workaround people work yui fine thanks", "d": "12/2016"}, {"body": "workaround people even workaround fully standard way define objects js correct", "d": "12/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "12/2016"}, {"body": "warning telling use body good practice let vue compile needed instead entire page inbrowser compile process completely eliminated precompile templates using really concerned performance make sure measure performance production build need information stack trace helpful really need full trace see bottleneck also need template compiling able diagnose problem", "d": "12/2016"}, {"body": "thanks reply use new vue div contains information good practice currently need vue directives lazyload difference big dev production build refactored nunjucks template multiple vue components resolved crash problem performance still looks good especially problematic phone may problem particular version ios safari safari problematic hope chrome timeline data helpful", "d": "12/2016"}, {"body": "hi maggiehe thanks reporting perused timeline data think irrelevant chrome extension javascript let ignore two main performance bottlenecks application vue template compilation parsing templates costs chrome probably desktop version guess seems quite large html corpse hot function compilation called repeatedly execution time naturally piles quite hard optimize without precompilation even squeeze last bit performance parsing performance gain might still fails match fattening dom size recommend consider precompilation selectively compiles part static page vue instance creation promising optimizing see graph time consumed largely composed series yellow block graph native dom call need vue directives lazyload might directives slow nt know specific situation would recommend extract directives vanilla javascript module provide callbacks notify vue instances hope helpful", "d": "12/2016"}, {"body": "thanks help resolved problem precompilation seems directives affect performance still frequent setattr updateattr operations pure static html want close issue tested large page another framework two frameworks order magnitude build time although case vue spent time far enough used measure performance", "d": "12/2016"}, {"body": "using variable later simply change", "d": "12/2016"}, {"body": "pass el instantiation time extension time", "d": "12/2016"}, {"body": "follow issue reporting guidelines provide enough information issue seems mount vue instance body element recommended could refer could bellow", "d": "12/2016"}, {"body": "use vue warning", "d": "12/2016"}, {"body": "specific properly reused ie replaced newlycreated elements indeed move operations necessary however based chrome timeline tracing seems moving similar renderingpainting costs would nt really consider failing maybe improved experiencing visible slow app complex item actual list", "d": "12/2016"}, {"body": "reasonably modern laptop ca nt see difference think see slight difference asus tablet one four years old use case virtual scroller shows couple rows viewport scrolling rows inserted deleted scroll view row li element contains divs img jpeg text trying optimize list rendering component noticed issue thought small bug algorithm reported hard fix correctly impossible fix without performance impact please nt bother thanks quick reply mike", "d": "12/2016"}, {"body": "supported", "d": "12/2016"}, {"body": "hi understanding tests supported transition component contains keepalive component contains dynamic components use transition request use case component contains different transition", "d": "12/2016"}, {"body": "ah sorry yes right currently possible", "d": "12/2016"}, {"body": "thought use case nt think would make sense really component switched instead make custom transition component communicates shared event bus use component base make variations different views share communication channel long belong note fix released yet including fiddle", "d": "12/2016"}, {"body": "thanks checked fiddle see mode works nicely think found bug navigate first time route transition triggered think solution bit hacky sure transition mode would possible using suggested approach think move feature request given mentioned belong component btw awesome response times", "d": "12/2016"}, {"body": "hack implement internally logic would largely similar doubt done differently given new transition system works", "d": "12/2016"}, {"body": "another possible solution instead using inside child components write higherorder component wraps slot child different transitions based child nametype might release separate component later", "d": "12/2016"}, {"body": "thank suggestions provided fiddle make use havent found documentation point right direction understand accomplished highorder component would awesome greets", "d": "12/2016"}, {"body": "property specific component api callback line actually avoided prefixing underscore", "d": "12/2016"}, {"body": "oh everything makes sense one question first transition triggered line enter transition triggered event received triggered first leave transition try improve fiddle better example future reference", "d": "12/2016"}, {"body": "updated fiddle initial enter working", "d": "12/2016"}, {"body": "awesome thank", "d": "12/2016"}, {"body": "thing sorry keeping busy clarify wanted make transition events dispatched inverted dispatching enter animation completed", "d": "12/2016"}, {"body": "supposed used together transition purposes entail conflicting startending states regarding use case use outer component instead", "d": "12/2016"}, {"body": "appreciate feedback thanks suggestion", "d": "12/2016"}, {"body": "hi thanks filling issue first thing extended template message extended view came empty empty extending template properties already defined first nt know view came empty changing template working fine maybe connection issues jsfiddle would received error message open console believe described error accurately helpful enough let fix", "d": "12/2016"}, {"body": "want point example edited order work edit fnlctrl beat", "d": "12/2016"}, {"body": "nt connection issue jsfiddler way described exactly works issue closed immediately", "d": "12/2016"}, {"body": "nt issue displayed first screenshot changing template nt cause view came empty", "d": "12/2016"}, {"body": "mean thing nt render expecting render something come entire model ignoredskipped unless fully defined nt make sense complex viewtemplate design starts introducing elements one one many may optional even see anything unless everythign defined declare properties later nt included original tiny demo example subject reactivity rules vue change detection system details", "d": "12/2016"}, {"body": "come empty mean extended thing nt render expecting render undefined something meant empty nothing comes even value variable demo refuses show anything try use property model nt declared yet nt understand worls side definitely issues using jsfiddle", "d": "12/2016"}, {"body": "meant empty nothing comes even value message variable demo refuses show anything try use property model nt declared yet ca nt reproduce issue working fine shown first screenshot jsfiddle provide info browsersystem", "d": "12/2016"}, {"body": "seeing errors console case", "d": "12/2016"}, {"body": "ok see problem default browser chrome switched latest chrome started working expected minimum chrome version support nt old", "d": "12/2016"}, {"body": "nt know failed chrome anyway able define data properties later development eliminate messages production work perfectly version chrome issue closed immediately respond fast new issues close issues appear us nonissues immediately also vue lowest issues count among major frameworks nt mean discourage discussions please feel free definitely reopen issues evidence provided later indeed issue", "d": "12/2016"}, {"body": "ok case still thrown browser compatibility backlog wo nt last one run", "d": "12/2016"}, {"body": "missing root properties case considered error resolved deploying app production assure browser compatibility production sorry wo nt main concern support old browsers development", "d": "12/2016"}, {"body": "something nt work dev perhaps work production somehow invites little trust surely cause issues testing", "d": "12/2016"}, {"body": "well reasoning explained follows reproduce behaviour currently supported browsers latestest autoupdated versions limited time resources reproduce problems possible system browser compbiantions chrome version version seem problem maybe combination extension currently market share error experience bug using vue intended happens use vue way explicitly error appear dev warning would appear place danger making way production take account seems worth limited resources try hunt bug reproducible us may happen users someone pushed wrong code production", "d": "12/2016"}, {"body": "issue assumption percentage users use chrome older much higher work banking industry know fact", "d": "12/2016"}, {"body": "latest npapi version", "d": "12/2016"}, {"body": "well would assume amount people develop chrome lt would small real issue developers use versions might still confirmed simpy chrome version issue see white screen development instead nice warning use nonexisting data property template neverever make production issue assumption percentage users use chrome older much higher work banking industry know fact specifically older yes still significantly nt even know weither affected failed errormessage market share across industrie customers may higher sure look general market", "d": "12/2016"}, {"body": "record work huge international bank chrome currently enforced default everyone without allowing upgrade stumbled upon issue makes care little browser usage percentage", "d": "12/2016"}, {"body": "makes care little browser usage percentage understand also understand prioritize global user marketshares especially issue lowimpact happens developers make mistake bug feature could appear users production even though dev followed vue api big problem always open prs", "d": "12/2016"}, {"body": "security related bugs chromium since version astonished scott", "d": "12/2016"}, {"body": "yes different angular intentional required explicitly declare rootlevel reactive properties upfront benefits serves schema component state maintaining later looking component definition able instantly see properties available simply dynamically add new properties random places would maintenance nightmare like maintaining database without schema results predictable behavior particular paired typechecking systems avoids excessive rerender might caused adding rootlevel properties finally developer able choose browser develop chrome browser use job seems like terrible decision companies part customers company use chrome probably", "d": "12/2016"}, {"body": "please check console warnings vue refusing render solution simply nt put style inside html body fontsize message var app new vue el app data message hello world", "d": "12/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "12/2016"}, {"body": "qianoop required boolean attribute according specification presence boolean attribute element represents true value absence attribute represents false value attribute present value must either empty string value ascii caseinsensitive match attribute canonical name leading trailing whitespace values true false allowed boolean attributes represent false value attribute omitted altogether could use custome attribute like", "d": "12/2016"}, {"body": "bug outdated comment feel free submit pr fix though", "d": "12/2016"}, {"body": "hi thanks filling issue supported though officially recommended noncomponent vue instances used vuex manage state also eventhub pattern global event hub", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "msg side effect every time component renders triggers new render ending infinite loop never use expression side effects template event handlers", "d": "12/2016"}, {"body": "oh yeah right thank much", "d": "12/2016"}, {"body": "defcc thanks works", "d": "12/2016"}, {"body": "closed need update relative doc track vuejsorg issues", "d": "12/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "12/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "12/2016"}, {"body": "temporary approach nt work based faulty assumption using props default function somebinding storeroot data different passing prop binding manually within templaterender first case nt reactive sets initial value latter reactive leaf value prop looks like efficient way work optimized manner immutable data structures entire root state atom change reference new one would use plain props pass manually dummy components cause changes detected leaf prop values since component nt reference root state detects need rerender upon change props", "d": "12/2016"}, {"body": "ktsn received props directlyhowever use official documents render invalid", "d": "12/2016"}, {"body": "provide reproduction example repository reproduce", "d": "12/2016"}, {"body": "component take inspiration use directly webpack", "d": "12/2016"}, {"body": "looking use case still nt think correct answer want essentially way let explicit make view state sync imo correct approach first place primarily offered performance optimization fully frameworkcompliant way deal also would suggest even react separate piece state represents input content sync model state updated want", "d": "12/2016"}, {"body": "\u65b9\u6cd5", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "remove", "d": "12/2016"}, {"body": "seen examples vue site articles data fetch part know ahead time property state fetch function going update however would spread newly acquired data data object react accomplished view set single property tried following even though knew would nt work get idea across know could set property data object called data place data within nested data object let user thisdatacommits nt want resist nesting say want spread data object mean one", "d": "12/2016"}, {"body": "got working add twitter send dm link code maybe review give tips things may done vue way twitter handle kennetpostigo", "d": "12/2016"}, {"body": "making public repo link sure community give lots feedback also understanding want hook vue graphql better choice hook vuex since prebuilt state management system vue chance also hope aware problem solved albeit vuex redux system apollo provides wanted point possible reinventing wheel already made scott", "d": "12/2016"}, {"body": "hi smolinari making public repo link sure community give lots feedback monorepo going make public soon finish bindings frameworkslibs also understanding want hook vue graphql better choice hook vuex since prebuilt state management system vue chance nt want depend specific state management libraries often times teams individuals choose different options different reasons makes sense use case however provide way let state management libraries hook client handle data actions also hope aware problem solved albeit vuex redux system apollo provides wanted point possible reinventing wheel already made aware apollo available however client working focused minimizing size similar projects like preact currently core vue bindings stand well developer experience keeping simple unopinionated work well tools step toes", "d": "12/2016"}, {"body": "well project sounds interesting looking forward seeing scott", "d": "12/2016"}, {"body": "ok thanks trim working first initialization ie page load input two letters one space class set hassuccess though terms start working start typing", "d": "12/2016"}, {"body": "please open another issue issue far list", "d": "12/2016"}, {"body": "possible make first second parameter dynamic example passing argument binding vueset vnodecontext datapropertysubproperty content elval", "d": "12/2016"}, {"body": "unfortunate though dynamic platform dom component written like someouterscopevariable somedynamicvariablename would add technical details outer dom technical reasons seems attribute evaluated static dom attribute change parsing template thought could use scoped slots requirement unfortunate", "d": "12/2016"}, {"body": "closed via", "d": "12/2016"}, {"body": "also major decision blocker react vuejs react plugin works perfectly allocate sometime next week look get workaround anyone progress use case please inform topic", "d": "12/2016"}, {"body": "severside rendering without node dependency would huge improvement us backend heavily depends python stack plugin would come handy", "d": "12/2016"}, {"body": "able get standalone version using path aliased webpackbrowserify", "d": "12/2016"}, {"body": "following official getting started guide could nt even get hello world saw previous comment following cli method", "d": "12/2016"}, {"body": "first forgive post going similar situation vuejs version vuexjs version file actionsjs export const addform dispatch gt dispatch addform export const deleteform dispatch gt dispatch deleteform componentvue lt template lt ul class dropdownmenu lt li lt click addform save lt lt li lt li lt click deleteform delete lt lt li lt ul lt template import addform deleteform vuexactions export default actions addform deleteform result vuecommonjs vue warn property method addform defined instance referenced render make sure declare reactive data properties data option vuecommonjs vue warn property method deleteform defined instance referenced render make sure declare reactive data properties data option correct warning", "d": "12/2016"}, {"body": "carvalhoviniciusluiz nt defining component please refer", "d": "12/2016"}, {"body": "going fixed thanks", "d": "12/2016"}, {"body": "issue modal window nt know wrong vuejs version steps reproduce use vueloader modalvue javascript export default mounted documentgetelementbyid app appendchild el javascript text show modal import modal uimodal export default data function return showmodal false components modal expected click close button close modal window actually happening console shows error", "d": "12/2016"}, {"body": "moonlik please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc open separate issue thanks", "d": "12/2016"}, {"body": "fnlctrl ok sorry", "d": "12/2016"}, {"body": "moonlik issue moved component call top template", "d": "12/2016"}, {"body": "problem storejs javascript const state forms const mutations addform state newform stateformspush newform const actions listform context gt vue gt respbody data gt const form id dataid data datadata html datahtml contextcommit addform form componentvue javascript export default created storedispatch listform computed forms return storestateeasyformsforms domexception failed execute insertbefore node node new node inserted child node solve problem", "d": "12/2016"}, {"body": "please dont comment old closed issues original issue fixed problem bug likely thing either ask help forum open new issue proper bug report interactive reproduction", "d": "12/2016"}, {"body": "also issue accessing sub properties nonexisting properties eg options yet defined imho would better follow angular way resolve string interpolations errors empty string log error nonrelease mode", "d": "12/2016"}, {"body": "joshglendenning curious made plugin way compatible vue vueelementdirective deprecated making solution longer work", "d": "12/2016"}, {"body": "scoped slots exists vue need plugin", "d": "12/2016"}, {"body": "ah cool right", "d": "12/2016"}, {"body": "oh man amazing nt know added vue great work always vue", "d": "12/2016"}, {"body": "nt know anybody reading still related problem put property vue instance name like imagesrc quoted valid javascript key vue code reason vuejs nt bind remove dash works section docs kebabcase camelcase seems unrelated idea nt work", "d": "12/2016"}, {"body": "fabd vbind expects javascript expression ca nt use identifiers really want use use accessible templates", "d": "12/2016"}, {"body": "fixed branch working project nt able upgrade yet known workaround setting implications", "d": "12/2016"}, {"body": "wormen find way seems nt possible yet feasibility depends way vdom used binding actual dom nodes also imposes code splitting since even vue capable rendering web worker legacy eg jquery stuff libraries would still render ui thread ps know discussed gitter chat room forum stackoverflow nobody answered far could find least question posted gitter", "d": "12/2016"}, {"body": "matthiasg yes found solution problem vuejs nothing", "d": "12/2016"}, {"body": "wormen may ask whether still usingconsidering vue vue community nt responsive inquiry needed rendering inside web workers look elsewhere", "d": "12/2016"}, {"body": "matthiasg point rendering inside workers missing something obvious something super complex render", "d": "12/2016"}, {"body": "matthiasg functionality would like take advantage vuejs web workers wrote vuejs use web workers", "d": "12/2016"}, {"body": "andreiglingeanu personally nt need right investigate since dom updates interactions angular took ms interfered scrolling speed caused intermittent slow downs planning move product angular vue next weeks need ssr necessarily web workers yet interested potentially rendering inside service worker experimental option would require similar architecture idea server could push certain data updates dormant devices every service worker would use prerender matching html client requested html would already prefilled uptodate data make full use streaming rendering", "d": "12/2016"}, {"body": "matthiasg hm set html actual dom via sort directive sure faster approach", "d": "12/2016"}, {"body": "andreiglingeanu number projects blog posts discussing merits example implementations basically render vdom worker transmit patch ui thread applies actual dom dom event handlers forward web worker work total spread across two threads even low level phones cores ui thread blocked easily xml parsing etc said priority right us either interested seeing vue succeed though concerned wormen question went totally without response kind glad found another solution issue course", "d": "12/2016"}, {"body": "hot reload working name modules version description main appjs scripts build webpackdevserver hot inline author license isc dependencies lodash vue vueifyinsertcss webpack devdependencies babelcore babelloader cssloader stylus stylusloader vuehotreloadapi vueloader vuetemplatecompiler webpack webpackdevserver could tell problem thanks", "d": "12/2016"}, {"body": "gon na drop link", "d": "12/2016"}, {"body": "plan bring tightly integration flow userland particularly interested plan bring static type checking components especially props computed way flow integrates well react box", "d": "12/2016"}, {"body": "feels like back backbone think change bit painful simple apps nt use vuex managing events difficult lot possible app benefits vuex anyways huge project work relied marionette attest lot views listening emitting events great making event listening pattern less magic explicit fine imho", "d": "12/2016"}, {"body": "implemented pretty simple global event bus vue developing vue ui kit fun wanted able open modals anywhere", "d": "12/2016"}, {"body": "using replacement problem child components still process event already destroyed", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fnlctrl thks tried method discard events channel finally found way solve simply make determination situations method would solve problem think caused method vuejs method parameter remove dom completely vuejs method remove parameter official document suggest nt destroy component method suggest us use could use method remove dom method destroy order avoid component destroyed processing bus simply make determination situations method would solve problem", "d": "12/2016"}, {"body": "sorry completely point destory nothing event hub global instance nothing lifecycle components use thks tried method addtodo discard events channel addtodo case simply forgot pass second parameter please refer docs locking issue since obsolete future references please refer docs support questions discussions please use gitter forum", "d": "12/2016"}, {"body": "sorry new coming angular filters feels really strange counter intuitive would better every developer develop set filters setting computed entries etc better build considered best practice filter really large array objects element angular one line code possible filter array search input would magic function framework", "d": "12/2016"}, {"body": "considered best practice filter really large array really large array theoretically computed property would good filtering would better every developer develop set filters setting computed entries etc better build used think way started thread since learned basically piece cake create kinds filters sooo many things developer might want filter computed property come realize nt big deal built filters scott", "d": "12/2016"}, {"body": "case equals gt lines json provided firebase database see might think way decide drop feature nonetheless quite additional hassle devs forked fiddle inline data structure need code search string object hand", "d": "12/2016"}, {"body": "nt understand question sorry fiddle looks like one posted scott", "d": "12/2016"}, {"body": "wanted share another solution provided user answer relative question stackoverflow note adding removing something original array call vmsetvalue method", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "since closed worth reiterating current decision short feature trivial implement observation mechanism level justifying use cases amount work tradeoffs would really appreciate feature hand observing data types becomes terribly hacky example compromise performance qualities people currently use maps sets vue might appreciate change", "d": "12/2016"}, {"body": "ended making bunch components drop slots something like header content mixin provide access common components set styling component drop need instead remember exact styling stuff use case decent compromise slotted component nt need know slotted nt keep dropping classes components time", "d": "12/2016"}, {"body": "would great nativescript support vue added vote vue support nativescript ideas site ideas idea vue look idea called vuejs support nativescript add vote votes time writing", "d": "12/2016"}, {"body": "would useful forms especially since nt support initial values", "d": "12/2016"}, {"body": "sure think however sure better explain mean nt support initial values scott", "d": "12/2016"}, {"body": "referring first notice red thing documentation refers attribute inputs", "d": "12/2016"}, {"body": "warning saying nt data initialized front vmodel wo nt know show form input fields words data initialized default value assign value property within data option form rendered vmodel also show initial value form fields scott", "d": "12/2016"}, {"body": "seems encounter similar issue solution use watch instead watch option watch return handler function call want stop watch watch value terrible", "d": "12/2016"}, {"body": "issue think fix simple use watch function decide would like call method", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "something like props validation events", "d": "12/2016"}, {"body": "see filters contextaware always way access inside filter function", "d": "12/2016"}, {"body": "xpepermint intentional change filters pure transforms try explicitly pass state filter arguments", "d": "12/2016"}, {"body": "thx", "d": "12/2016"}, {"body": "case anyone finds issue google searching thing vue figures interpolation props removed like proper way simply", "d": "12/2016"}, {"body": "helgesverre thanks lt", "d": "12/2016"}, {"body": "made example also importing templates could use async components templateurl property yet", "d": "12/2016"}, {"body": "using way way set watcher reactive data created dynamically", "d": "12/2016"}, {"body": "luqmanrom familiar inner workings vue watcher believe anything created vueset watched could add code watch dynamic props emit evens changes seep watch target object someone else might better suggestion", "d": "12/2016"}, {"body": "vue templates need valid html self closing tags xhtml syntax outdated never use see using tags selfclosing invalid though far know valid example even question link nt say never used able handle valid xhtml least wellformed xml actually quite important since still good serverside template engines tools rely xml xhtml xml actually help structure prepostprocessing depending overall build environment", "d": "12/2016"}, {"body": "harbulot fyi selfclosing tags works long nt use indom templates", "d": "12/2016"}, {"body": "looking feature well three variables binded three input elements form need listen changes three variables update canvas third party library using pass array variables would trigger single function seem like simplest solution anyone another solution nt want rely pluginown code modifying simple case", "d": "12/2016"}, {"body": "form seems sensible enough implement hard document", "d": "12/2016"}, {"body": "would build computed property derived desired properties watch update skip performance penalty allocating discarding array commaseparate dependent values finally return something always different taking comments linters might complain perfectly valid js", "d": "12/2016"}, {"body": "possible vuejs tried sample got datepicker displayed nt set data underlying model edit ok got okay nt get nt update die model", "d": "12/2016"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "12/2016"}, {"body": "try html script var datatableresult var columns var vm download table default data datatableresult articul dateadd discount groupid img price productid retail viewing visible wholesale wholesaleamount sorry english", "d": "12/2016"}, {"body": "another hack wait next tick", "d": "12/2016"}, {"body": "want change images get vueresource placeholder image use result blank space ok problem images link provide success got blank solution thanks", "d": "12/2016"}, {"body": "got solution link use vue directive anymore perfect solution espesially vuejs function imgerror source sourcesrc noimagegif sourceonerror return true", "d": "12/2016"}, {"body": "post old im similiar issue case im getting bad request image source binding images want load employees every property loads fine get image vue seems encoding string navigate url without image gets loaded reason tacking", "d": "12/2016"}, {"body": "surgiie images content white space first character url encode mean white space true try images load code looks like bellow methods vue scope vue directive", "d": "12/2016"}, {"body": "hello still new vuejs method nt work vue", "d": "12/2016"}, {"body": "available mediumeditor compatible greenapple need plugin", "d": "12/2016"}, {"title": "docs update event confusing documentation", "body": "current docs update event state update collection options single event triggered number models added removed collection interpreted events fired add remove ie merge however event also triggered merge sure docs incorrect implementation expected docs probably safer fix", "num": "4109", "d": "12/2016"}, {"title": "idea collection modelid functionality valid", "body": "running quite old version backbone production served well thank guys library requires newer version backbone small issue new version fix issue quite easily searched reason begun think functionality collection valid idea related commit found issue one use function backbonecollection property collection set models inside collection overridden eg following code logs although would expect log model object code works version define property collection works expect think collection need know models contains think functionality breaks quite fundamental behavior get id solve edge case issue functionality valid think api documentation mention collection must defined think thank work made world better", "num": "4108", "d": "12/2016"}, {"body": "would nice separate module quite useful builds custom modules optional dependencies", "d": "12/2016"}, {"body": "raymondji use router routes treat routes backbone gives tools choose interpret routes doc routes trailing slashes treated part url correctly treated unique route accessed fire different callbacks ca nt avoid generating types urls define matcher capture cases", "d": "12/2016"}, {"body": "think came across issue", "d": "12/2016"}, {"title": "ember helper errors ca nt add property super object extensible", "body": "roadblock upgrade ember glimmer keep getting error helper attempting get length array nt mater ember array soon attempt get length goes kaboom line code twiddle showing issue view issue open js error window twiddle running debug debug ember debug ember data debug jquery debug thought might related even canary build still shows", "num": "14769", "d": "12/2016"}, {"title": "unable assign dom attribute ember textarea component instances", "body": "seeing according docs able specify attribute applies ember textarea component instances following snippet corresponding integration test fails makes sense documentation needs reflect proper snippet correct way acheive behavior ember need use", "num": "14766", "d": "12/2016"}, {"title": "route paramsfor nt proper params deeply nested routes", "body": "screenshot summarizes issue better words scenario returns default values query params however correct values backed boiled ember twiddle issue seems either related deeply nested routes", "num": "14759", "d": "12/2016"}, {"title": "htmlbarscompile working ember", "body": "ember return ember return therefore make new component string template like embercomponentextend template htmlbarscompile stringtemplate container create appendto target", "num": "14758", "d": "12/2016"}, {"title": "include vendorapp cssjs inside indexhtml", "body": "hi know statements like wonder servingbuilding import target script inline rather pointing external file speed loading little also avoid abovethefold problem google pagespeed insights reports even without using fastboot thanks", "num": "14757", "d": "12/2016"}, {"title": "deprecate", "body": "questions many apps use perhaps deprecate rfc ca nt deprecate disable default make optin use cases custom suggest alternative solutions", "num": "14754", "d": "12/2016"}, {"title": "glimmer ember svg elements dynamic attribute fail render", "body": "replicated twiddle eerily similar inner element attempting render content separate svg either document somewhere else file system content wo nt render attribute computed dynamically shown demo though hardcoding value attribute works fine even curiously inspecting dom shows difference final markup directly twiddle errors thrown console either hunch admit familiar glimmer internals something fundamentally different state dom markup dynamicallycomputed attribute generated", "num": "14752", "d": "12/2016"}, {"title": "components computed tagname throw error trying render", "body": "computed property seems break recent ember versions later something like export default embercomponentextend isbutton true tagname embercomputed isbutton function return thisget isbutton button throws demonstrated embertwiddle digging looks like passed render instead computed string value tag name", "num": "14749", "d": "12/2016"}, {"title": "changes closure actions inputs longer propagate change action value", "body": "ember prior following template changed value would receive update meaning would called observers would execute computeds depending would invalidate ember longer happens guessing result fix twiddle clicking button updates action input triggers alert ember nt update use", "num": "14748", "d": "12/2016"}, {"title": "regression setter throws error object undefined", "body": "worked fine weird thing main project getting error productions build", "num": "14747", "d": "12/2016"}, {"title": "deprecate", "body": "rfc deprecate emberk merged pretty simple task implement one perfect new contributor perform since technically complex balanced documentation implementation tasks perform divided couple repositories x read rfc understand motivation outcome x amend deprecations guide website reporsitory information deprecation id explanation entry must explain automatically remove usages codebase using emberwatson must also explain two options command second compatible first probably want check addendum rfc information x create pr emberjs itselt deprecating stated previous point id deprecation must must point entry deprecation guide created familiar deprecations made good example id url used anyone wants go deprecate provide support guidance process feel free ping slack anytime", "num": "14746", "d": "12/2016"}, {"title": "jsonapiadapter sends fields patch", "body": "sure reporting appologies incorrect began using json api adapter app compliant backend running smooth issue found update property model see properties model sent server patch request understanding limited properties changed require update", "num": "14744", "d": "12/2016"}, {"title": "decamelize behaves incorrectly numbers", "body": "observe ember decamelize uses following regex azd az g probably additional end actually would work either", "num": "14743", "d": "12/2016"}, {"title": "work commented", "body": "commented followed javascript let controller emberarrayproxycreate content embermakearray controller controller true however true seems using handle arraylike object", "num": "14741", "d": "12/2016"}, {"title": "fail ember build", "body": "run command receive following error warning node currently tested ember cli may result unexpected behaviour could start watchman falling back nodewatcher file system events visit info cleaning build failed broccoli plugin sourcemapconcat concat vendor assetsvendorjs failed error enoent file directory stat broccoli plugin instantiated concatplugin concatcachingwriter constructor new concat moduleexports emberappconcatfiles emberappconcatfiles emberappjavascript emberapptoarray emberapptotree moduleexports npm bower installed run command", "num": "14740", "d": "12/2016"}, {"title": "glimmer read properties functions", "body": "encountered upgrading project uses ember trying bind properties scales twiddle change ember version twiddle property renders expected pr failing test", "num": "14739", "d": "12/2016"}, {"title": "convert object primitive value", "body": "similar reproduction ember addons critical ingredient seems taking object created helper putting inside passing array another component array hits causes exception hitting first place support assertion", "num": "14738", "d": "12/2016"}, {"title": "required input immediately marked invalid firefox ember", "body": "seems regression ember regards required input fields firefox input field immediately marked invalid showing red border around field case ember field marked invalid trying submit form field empty created ember twiddle reproduce", "num": "14737", "d": "12/2016"}, {"title": "emberjs input checkbox runs deplication error", "body": "got error modified inside didinsertelement hook click checkbox inside schedulerevalidate function thisenvrenderednodeshas node false manualrerender undefined thisdispatching didinsertelement makes always run deprecation issue try remove didinsertelement hook project nt help could please take look please let know need information stacktrace", "num": "14735", "d": "12/2016"}, {"title": "nt available module initialization", "body": "part currently embermetallibmetajs try use point default empty function meaning code never run even debug mode constructor later use function emberdebuglibindexjs set", "num": "14732", "d": "12/2016"}, {"title": "click helper makes tests failing", "body": "upgrading ember cli embercliqunit acceptence tests thats use helper throwing weird error skip everything works like expected import test qunit import moduleforacceptance apptestshelpersmoduleforacceptance moduleforacceptance acceptance posts test visiting loggain function assert visit posts click btn function assertok true works assertion final resolved ms source assertok isolate trycatch invokecallback publish works", "num": "14730", "d": "12/2016"}, {"title": "textfield component file type setting safari", "body": "ember version gt safari version tested reproducible every time issue rendering multiple textfield components page first type allowed page set test element type property successfully returns however type actually nt alter value property problem line possible solution lowering scope inputtypetestelement inside method resolves problem assume scoped performance reasons", "num": "14727", "d": "12/2016"}, {"title": "memory leaks emberjs openlayers", "body": "ran strange memory leaks using openlayers emberjs application certain conditions browsers unable release memory torn maps even full tab reload please refer repository information minimal example demonstrates behavior unable determine reason problems created issues link issue", "num": "14726", "d": "12/2016"}, {"title": "changed eachbehaviour indexed arrays", "body": "hey noticed ember introduces changed behaviour looping indexed arrays unset indexes let assume array hbs produces produces also made twiddle", "num": "14725", "d": "12/2016"}, {"title": "custom tostring needs work emberobject subclasses computed properties", "body": "hi creating custom object extends need override barfs object spews however want add computed properties set array property according stefanpenner explained custom tostring seems break ember computed properties wo nt notify changes properly either need fix properly stringify custom objects need support custom without breaking computed properties advice thanks", "num": "14724", "d": "12/2016"}, {"title": "sinonusefaketimers acceptance tests break runlater used", "body": "use sinonusefaketimers acceptance test use runlater application causes acceptance test time reproduction", "num": "14722", "d": "12/2016"}, {"title": "aborting transition clears resolved model", "body": "abort transition go intermediate route model previous route exist although resolved see console log", "num": "14721", "d": "12/2016"}, {"title": "nonsingleton registered dependencies working expected components since ember", "body": "behaviour component factory caching inconsistent cache factories dynamic injections whereas js initializersappinitjs import ember ember var id export function initialize application applicationregister foo bar emberobjectextend id embercomputed function return id singleton false applicationinject component foo foo bar export default name appinit initialize mycomponenthbs id fooid templatesapplicationhbs mycomponent mycomponent mycomponent ember output id id id ember output id id id see ember twiddle failing test refactoring code uses pattern nt expect issue affect us fyi", "num": "14719", "d": "12/2016"}, {"title": "ember failing route lookup container", "body": "route lookup container like test leads following error worked ember least stable releases beta releases glimmer enabled ember throws mentioned error lookups controllers still working reproduced twiddle", "num": "14716", "d": "12/2016"}, {"title": "query params arrays turned strings routerefresh used", "body": "query params containing arrays turned strings called another query param changed time put link twiddle using animated gif see testing process first button sets param initial value value well represented url query string second button calls action executes method route receiving array param third button shows issue calling action first changes different query param executes method route receiving instead value filters", "num": "14715", "d": "12/2016"}, {"title": "outdated observableaddobserver documentation", "body": "documentation observableaddobserver seems outdated optional context parameter nt seem exist anymore callback two arguments sender key arguments nt passed callback", "num": "14714", "d": "12/2016"}, {"title": "ember setting component template property working anymore", "body": "passing template property component working anymore reproduce appcomponentsfoobarjs import ember ember import hbs htmlbarsinlineprecompile embercomponentextend template hbs appcomponentsfoobarhbs ember output ember output", "num": "14713", "d": "12/2016"}, {"title": "possible radio input issue glimmer", "body": "want share found little problem glimmer ie see strange things happening radio inputs value computed property value gets set ie something page changes deeper search ends ie setting value gets set guess rerender causing set radio causing value change normally fix setting value right type set sure yet case glimmer anyone knows tested ie searching see ff may also causing behaviour update jsbin showing bug run ie click radio button see value changing", "num": "14712", "d": "12/2016"}, {"title": "improve backtracking rerender assertion", "body": "backtracking rerender issues solve app interested improving assertions make easier others issue serve place capture discussion progress current assertion message example looks like would nice improve include information property originally consumed well mutated something like would nice aim thoughts chancancode might useful links embermetallibtransactionjs every time consume every time set", "num": "14709", "d": "12/2016"}, {"title": "bug release issue observerscomputed properties switching ember", "body": "using ember without issues switching ember started seeing issues issue seeing seems happening observer computed property destroyed component triggered route transition demonstrate issue created github repo steps used recreate issue clone repo ember js console open go click name person press like go page two press link go page one expected errors web browsers console result error console cheers", "num": "14708", "d": "12/2016"}, {"title": "emberrun api documentation examples", "body": "examples api documentation emberrun seem little sayhi enclosed quotes run method invoked directly", "num": "14706", "d": "12/2016"}, {"title": "ember component subfolder work", "body": "upgrading ember ca nt usualy use components subfolder notation modaltestone working happening ember see happening embertwiddle", "num": "14705", "d": "12/2016"}, {"title": "ember component isvisible property broke inline styles", "body": "upgrading ember behaviour components changed every change isvisible property except null true inline styles component cleared happening ember also problem clearly visible using standart helper textarea resize change isvisible size textarea back default see happening embertwiddle", "num": "14704", "d": "12/2016"}, {"title": "feature request queryparams issticky option", "body": "feature request controller property love see issticky query parameter rather use hook explicitly pass default value inconvenient link used many places adapted seems less complex mysterious currently recommended guide controllersarticlesjs import ember ember export default embercontrollerextend queryparams page filter showmagnifyingglass scope controller glass routesarticlesjs import ember ember export default emberrouteextend resetcontroller controller isexiting transition isexiting isexiting would false route model changing controllerset glass thanks much", "num": "14703", "d": "12/2016"}, {"title": "ember emberformfor ca nt add property object extensible", "body": "per martndemus via martndemusemberformfor trying throw together quick form emberformfor hitting snag probably bleeding edge model javascript import ds emberdata export default dsmodelextend displayname dsattr realname dsattr email dsattr comments dshasmany posts dshasmany route javascript import ember ember export default emberrouteextend model return thisget store createrecord author template hbs formfor model f ftextfield email requiredtrue ftextfield realname ftextfield displayname fsubmit sign formfor error line formfieldjs", "num": "14702", "d": "12/2016"}, {"title": "ember using pods structure cause helpers register render", "body": "using ember cli pods structure updating ember cause helpers work errors given nothing returned helper seems though ember looks components directory components downgrading back emberjs helpers worked expected issues", "num": "14699", "d": "12/2016"}, {"title": "copied safestring safestring anymore", "body": "twiddle described twiddle output safestring becomes normal object suggestions make safestring implements copyable make returns original safestring", "num": "14697", "d": "12/2016"}, {"title": "problem nested route multiple outlet rendertemplate", "body": "multiple template nested route problem render take look twiddle", "num": "14696", "d": "12/2016"}, {"title": "compatible version found embersource", "body": "looks like forgot upload npm", "num": "14694", "d": "12/2016"}, {"title": "api docs often missing since tags", "body": "api docs currently versioned meaning publish recent ones website makes hard users figure things available ember version use available yuidoc handy since tag purpose used indicate release something introduced shows already using places occurrences obviously covering api use often assume answer yes figure version something introduced git blame one option still takes quite bit effort follow locations method property might moved better way require future prs add functionality include tag cc locks", "num": "14692", "d": "12/2016"}, {"title": "ember graphql", "body": "hello working graphql client called greed nt open sourced yet frameworklibrary agnostic wanted create ember bindings want base bindings signature got working react vue js container greed defaults queries mutations component using decorator container greed defaults queries mutations somecomponent greed greedinstance greed instance want use defaults function default data component render queries function queries run user input occurs mutations function mutations run user input occurs component component component enhance container essentially enhances whatever component receives data needed render methods executed run queries mutations user input occurs application familiar ember get knee deep ember wanted tips feedback best way go implementing ember", "num": "14691", "d": "12/2016"}, {"title": "ember component never becomes visible set", "body": "method ember component set property display expected however change true later moment component become visible weird part set property component definition happen simple twiddle reproduction sure something wrong bug documentation really specific property observed first using ember think continued happening", "num": "14690", "d": "12/2016"}, {"title": "html comment brakes template compilation exists ember version", "body": "insert hbs got error like ember twiddle example quickly tested different version ember error ember ember also looks official spec comments says number dashes multiplication four", "num": "14688", "d": "12/2016"}, {"title": "lazyget nt check cache correctly", "body": "use checks value present true cases nt actually cached since cache cleared undefined though returning undefined effect descend wiring chain", "num": "14686", "d": "12/2016"}, {"title": "regression isvisible property undefined component", "body": "switching ember causes example render", "num": "14683", "d": "12/2016"}, {"title": "unable install embefire connect etimedout", "body": "configuration embercli node os x tried following commands npm install save emberfire ember install emberfire npm cache clean tried get following error every time try install emberfire connect etimedout one provide causing issue resolve", "num": "14680", "d": "12/2016"}, {"title": "ember instllation issue", "body": "could anyone please help finding issue tried install latest node npm yet still get issue node v npm v ember proxy amp command ember found mean command enber package universe ember command found", "num": "14679", "d": "12/2016"}, {"title": "minor upgrade pain change variable shadowing behavior glimmer", "body": "lowpriority issue feel free close helpful reporting minor source upgrade pain confusion upgrading ember worth documenting save others time problem worked broken fix works really fault using variable name template said looks like something changed glimmer stop blockscoped shadowing parent component", "num": "14678", "d": "12/2016"}, {"title": "rendering aliases break rendering cp dependent", "body": "update nt yield attrs order rendering ref consumption whether cp rendered ref consumed updated fiddle ember component yields property defined computedreadonly certain circumstances production builds ember downstream usage updated property changes worked krisselden created isolated reproduction issue reproduction demonstrates order attributes passed consuming component determines property fails update oo", "num": "14672", "d": "12/2016"}, {"title": "using component inside route template name", "body": "using component inside route template name got following error console example using pod structure generate appcomponentsaaabbbcomponentjs appcomponentsaaabbbtemplatehbs generate appaaabbbroutejs appaaabbbtemplatehbs add component aaabbb route template navigate cause error", "num": "14669", "d": "12/2016"}, {"title": "ember emptyobject nt provide hasownproperty", "body": "looks like oversight since every js object descended object provide method emptyobject could implement via object prototype", "num": "14668", "d": "12/2016"}, {"title": "add blueprints emberclimocha gt", "body": "introduced new testing api deprecated old helpers blueprints repository need updated reflect changes instead updating make sure uses versions get right blueprints accomplish checking installed version using versionchecker deciding whether use blueprints folder tracking issue", "num": "14667", "d": "12/2016"}, {"title": "ember calling willdestroyelement hooks unit tests returns undefined", "body": "upgrading ember component unit tests started breaking runs returning happening ember see happening embertwiddle", "num": "14666", "d": "12/2016"}, {"title": "ember bind list attribute input", "body": "expectation attribute bound input component result error thrown chrome example check fiddle works safari chrome", "num": "14665", "d": "12/2016"}, {"title": "edit field backtracking rerender deprecation lts", "body": "given going keep assertion glimmer release patches lts indicate deprecation go away behavior stop working", "num": "14663", "d": "12/2016"}, {"title": "convenience property current route", "body": "string property available globally relay current route path resource usable create breadcrumbsstyle visualizations routespecific sections templates although workarounds would great something readily accessible developers new emberjs edit found currentpath router might need changed please document feature request", "num": "14662", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "things going array prototype extensions enabled meaning methods added main prototype first arg passed frozen array twiddle calls since calls wrapped standard super wrapper function see super wrapper function sets next super function works since frozen object calling results error shown think needed case argument passed always native instance removing method calls fix twiddle see", "d": "12/2016"}, {"body": "cool solves current problem thanks issue though nativearray methods cause error passed array type correct assuming called get length passing helper would nt error method inside helper understand technically mutating seems like end developer", "d": "12/2016"}, {"body": "ember switched glimmer rendering engine try instead see problem", "d": "12/2016"}, {"body": "working outside tests embercli packagejs component import hbs htmlbarsinlineprecompile consolelog hbs gt hbs defined consolelog hbs stringtemplate gt broccoli build error hbs invoked single argument template string", "d": "12/2016"}, {"body": "use something like coffeescript owner embergetowner component embercomponentcreate layout emberhtmlbarscompile template renderer ownerlookup renderer dom embersetowner component owner componentsetproperties b componentappendto destination seems work even ember sure much though", "d": "12/2016"}, {"body": "read guidelines moving rfc repo closing sorry mess new issue", "d": "12/2016"}, {"body": "many apps use checked tomdale apparently originally added allow views differentiate certain types touch input however addon originally used embertouch deprecated favor hammerjs perhaps deprecate rfc yes absolutely deprecate ca nt deprecate disable default make optin think make paygo either way apps nt pay cost feature never use", "d": "12/2016"}, {"body": "todos x make payasyougo rwjblue x create rfc deprecate gavinjoyce x deprecate", "d": "12/2016"}, {"body": "briansipple write like", "d": "12/2016"}, {"body": "nightire correct work however nt necessary even going back nt see documentation quotes required bound attributes fact current documentation suggests opposite", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "deprecated", "d": "12/2016"}, {"body": "see good know luckily app easily refactored thanks", "d": "12/2016"}, {"body": "thanks tracking gavinjoyce", "d": "12/2016"}, {"body": "mixonic rwjblue legit would make things lazy amazing perhaps acceptable impression api contractboundrary produce function works", "d": "12/2016"}, {"body": "give little context uncovered single place relying old behavior change easy work around realized happening given one else reported since came suspect practical standpoint would nt big deal new behavior stayed reason filed though change seems odds mental model actions component properties happen functions helper sugar binding value possibly parameter values guides around actions seem shifting toward view things since closure actions first introduced thinking output bound version input function correct expect binding new value parameter new function produce observably different output value would helper implemented userland mental model though happy adjust move", "d": "12/2016"}, {"body": "prs please let know changes make", "d": "12/2016"}, {"body": "believe done thanks helped", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "ah ok close open new one", "d": "12/2016"}, {"body": "suspect pointing relative path said nt seem like bug rather question stack overflow please feel open cross link", "d": "12/2016"}, {"body": "think know fix vacation anyone wants look places include functions well believe probably needs glimmer fix ember fix cover cases", "d": "12/2016"}, {"body": "primitivereference", "d": "12/2016"}, {"body": "provide twiddle replication component use mixins", "d": "12/2016"}, {"body": "conditionally require bottom embermetallibindexjs", "d": "12/2016"}, {"body": "work around issue", "d": "12/2016"}, {"body": "issue basically using closure scope version setup see comments around example bit us past", "d": "12/2016"}, {"body": "solution refactor build actually replaced completely instead conditionally including based prodnonprod krisselden talked nt time shove finish line", "d": "12/2016"}, {"body": "might refactor test visiting loggain function assert visit posts click btn andthen function assertok true works need tell qunit wait promise resolve finishing test test visiting loggain function assert let done assertasync visit posts click btn function assertok true works done", "d": "12/2016"}, {"body": "ah thanks maybe docs updated explain need id use click promise", "d": "12/2016"}, {"body": "investigation problem isolated file types safari allow creating input type changing file", "d": "12/2016"}, {"body": "seems like bug second input nt work safari chrome firefox brave also odd switch order inputs file inputs works search input seem issue problem file input type", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "steps taken debug memory leak perhaps reach see anyone help debug need info determine whether bug implementation bug ember", "d": "12/2016"}, {"body": "tanks looking pointing ember community slack unable determine issue implementation application deconstructed application find minimal configuration still leads memory leak minimal example find initially used different browsers dev tools track root problem sadly unable get anything firefox turned able release seemingly leaked memory eventually makes disappear heap snapshots ie dev tools unsuitable analyze memory leak simply opening seems lead ie leaking memory matter page visit really startled happens page reload even possible implementation causes leak case could ie bug could find anything direction known memory leaks allegedly fixed updates", "d": "12/2016"}, {"body": "excuse wrong button nt mean close issue", "d": "12/2016"}, {"body": "map shows single vector layer contains linestring elements leak across tabs perhaps browserlevel inlineparse cache", "d": "12/2016"}, {"body": "really startled happens page reload even possible implementation causes leak case could ie bug could find anything direction known memory leaks allegedly fixed updates memory leaks full page reloads associated memory persistent place localstore cookie indexdb etc without doubt browser bug", "d": "12/2016"}, {"body": "thank considered possibility doubt firefox almost leaks well actually believed also leaked page reload released memory several reloads process already allocated several megabytes ram", "d": "12/2016"}, {"body": "mariowilde ya debugging types leaks vs process keeping memory around tad tricky said memory stays around post reload ember issue rather browser issue may solvable user space", "d": "12/2016"}, {"body": "runspired sorry late response somehow missed comment admittedly knowledge browser internals quite poor browser internal cache suspicion caches grow like map put emberless html document memory released instantly page reload", "d": "12/2016"}, {"body": "nt seem bug ember closing said qa continue", "d": "12/2016"}, {"body": "runspired leak across tabs perhaps browserlevel inlineparse cache nt want bug would mind explaining statement would really appreciate hint", "d": "12/2016"}, {"body": "suven seems like bug perhaps implementation changed using loop guess cat changedeachjs js foo bar lt alength consolelog aforeach function v consolelog v node changedeachjs", "d": "12/2016"}, {"body": "yup might guess forloops tempting perfomance mind first little remark although guess obvious also happens value accessed ie", "d": "12/2016"}, {"body": "confirm bugged also using instead temporary solves problem", "d": "12/2016"}, {"body": "issue performance reasons using standard loop support prior versions used natively support sparse arrays one reasons known performance issues intend support sparse arrays prior versions making changes support would negatively impact performance usages acceptable trade us document fact support sparse arrays api docs add test likely tweak shows current behavior intentional folks definitely need support recommend using someone else mentioned", "d": "12/2016"}, {"body": "joelpresence like idea supporting custom method able use custom tostring method emberobject sure custom break ember comment seems indicate problem using set properties using properties custom method one thing differently prototype extending redefined set default properties calling instead using example providing links may provide workaround", "d": "12/2016"}, {"body": "thanks pixelhandler frequently create custom objects use set properties often array properties class instances class share copy huge aliasing bug would override cases newbie ember user reluctant start using forth really want able make custom classes set properties preferably emit text like custom object ca nt look properties custom class unknown straightforward extension nt get keeps thinking unknown mixin unknown mixin get work custom objects extend thanks", "d": "12/2016"}, {"body": "think underlying issue assertion code eagerly invokes strange periods mid get cp initialization may break cp pretty sure fix although approach needs discussion", "d": "12/2016"}, {"body": "think issue backburner", "d": "12/2016"}, {"body": "think problem sinonusefaketimers modifying environment timers vm js kindofeverything depends settimeout put lot let run normal async mechanisms acceptance utilities like etc ps fixed twiddle hardcoding little bit", "d": "12/2016"}, {"body": "fixed twiddle taking date parameter", "d": "12/2016"}, {"body": "believe addressed although merged yesterday still needs make way ember", "d": "12/2016"}, {"body": "morhook putting date sinonusefaketimers kind defeats point use case datenow returns predictable value allowing acceptance tests use date pass regardless date", "d": "12/2016"}, {"body": "stefanpenner need pr backburner update", "d": "12/2016"}, {"body": "pixelhandler happy make followup pr ember necessary", "d": "12/2016"}, {"body": "sounds fair thanks explaining", "d": "12/2016"}, {"body": "locks possible model kept application route since setup controller never reached also changed ember version last two lts releases think behavior", "d": "12/2016"}, {"body": "pixelhandler case test easily writing empty nt call set see still returns", "d": "12/2016"}, {"body": "seeing issue since upgrading seems related glimmer issue present beta disappeared stable", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "assume aware double private p use cases using api", "d": "12/2016"}, {"body": "issue instantiating something gets injections provided instance instance created usually lives generally better use anyways since mirros owner api public api breadcrumbs whomever works fix general injection trail types get injected gets injected gets injected gets injected setup application instance fully booted testing get created first call therefore lookup route first visit give error moment unsure right way deal", "d": "12/2016"}, {"body": "known issue duplicate", "d": "12/2016"}, {"body": "closing duplicate thank", "d": "12/2016"}, {"body": "believe api actually using work reproduction twiddle", "d": "12/2016"}, {"body": "thank locks yes right template replaced layout anything passed property yielded anyway seems property removed fix rendering dynamic template inside component one use helper followed template name fixed issue think deprecation message added past versions removing property api indications removed thank please let know need reproduction", "d": "12/2016"}, {"body": "confirm also see ie windows", "d": "12/2016"}, {"body": "part aim include data meta debug mode use detect set already rendered property looking available context currently set nt appear easy access anything would allow us identify source template easy access parent object meta reference transaction context includes immediately clear get source template details ideas going explore calculate last dom node rendered reference able work containing view rendering template higher level within reference store additional data new meta key", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "reference setting also easy access transaction context somewhere within context opcode also uses reference gives us access includes pointers dom determine view dom belongs use better assertion message possible next steps determine transaction context last rendered opcode uses reference work cases eg helpers nested references map dom node template identifier", "d": "12/2016"}, {"body": "gavinjoyce another idea potentially use pair keep stack current component currently use component instrumentation think could work least tell component template causing issues ie enough information report first read reading later modified rendering probably need add instrumentation hooks glimmer want get granular", "d": "12/2016"}, {"body": "chancancode thanks created quick spike using global track last rendered component works pretty well app modified twice single render unreliable slow ember longer supported see details assertion failed rendered modified single render unreliable slow ember longer supported see details next steps x also track route templates x tests implementation", "d": "12/2016"}, {"body": "thanks heaps mr joyce gavinjoyce", "d": "12/2016"}, {"body": "krisselden appears issue trying install chain watcher destroyed object tried canary well saw error", "d": "12/2016"}, {"body": "ember way destroyed objects meta handled changed lt object destroyed meta removed setting caused number issues would recreate meta destroyed object mark object meta destroyed keep around preventing wasteful work normal object destruction allowing things like get cp continue function properly change made added assertions prevent us changingmutating meta object destroyed seems case mostly background info try dig reproduction bit back family vacation tues", "d": "12/2016"}, {"body": "ok minutes play curious think bug ember case singleton controller state biting basic summary happening visit hook b query triggers application serializer fire contains destroys existing instances type question click name person action sets current controllers internal singleton state b display persons name template therefore add watcher ensure rerender needed click link pointing hook b causes serializer call code fired visit click link goes back attempt render persons name stashed however object destroyed serializer b boom", "d": "12/2016"}, {"body": "hello thank fast response use unloadall customer editing record route change customers see updates recommended way ember slack chanel could problem solved using intermediary component avoiding controller passing whole model loaded contain actual component passing selected person", "d": "12/2016"}, {"body": "guess question best behavior treat destroy object missing template layerbinding system b error tell users trying watchobserver destroyed object later current current preference helps catch strange issues sooner mean upgrading issues encounter issue explicitly rather via heisenbug later", "d": "12/2016"}, {"body": "hi stefanpenner think completely right b makes sense solution case would completely avoid controllers create one level components correct", "d": "12/2016"}, {"body": "could problem solved using intermediary component avoiding controller passing whole model loaded contain actual component passing selected person state stored component unload occurs component unrendered yes likely given provided context would insta solve problem persistent state controllers done may quite tricky controllers intended longlived state must manually managed possible try put state places live shorter life state placing live longer extra care required", "d": "12/2016"}, {"body": "thank makes perfect sense tested saving state components opposed controller issue gone committed change original issue repo case someone else using controllers store state could maybe make error currently thrown optional settings since make transitioning next ember version require lot refactoring", "d": "12/2016"}, {"body": "anijap usually talk namespaces without ember prefix soon wo nt need use rely globals pieces ember even today many devs choose use destructuring access parts ember need destructuring looks like js const run ember used nt need quotes method signature context invoke function provided case method defined immediately docs however convenience method use let pass name method available invoke given following class js class foo constructor thisname foo sayhello consolelog thisname could invoke method either following two ways js let foo new foo runscheduleonce afterrender foo foosayhello preferred way invoke runscheduleonce afterrender foo sayhello alternate way invoke lastly also invoke without context prebound context js let foo new foo let sayhi gt foosayhello runscheduleonce afterrender sayhi hope clears things", "d": "12/2016"}, {"body": "runspired thank tripped nt working sayhi alert hi init thissuper arguments emberrunscheduleonce afterrender sayhi explanation figured", "d": "12/2016"}, {"body": "kind comment really put formal api document even external reference link would great", "d": "12/2016"}, {"body": "nightire part open pr", "d": "12/2016"}, {"body": "type invocation never intentionally worked actually proper way invoke components subfolders", "d": "12/2016"}, {"body": "hmm thank", "d": "12/2016"}, {"body": "reference duplicate", "d": "12/2016"}, {"body": "confirm nt duplicate", "d": "12/2016"}, {"body": "locks issue nt duplicate", "d": "12/2016"}, {"body": "know use case probably far complex changing style property figured point set use cp seem viable workaround modified twiddle embertwiddle anyways figured point unlikely event nt aware definitely still issue though", "d": "12/2016"}, {"body": "workmanw hmm thanks simple improve workaround work sure solution lead new problems also code become difficult embertwiddle also problem clearly visible using standart helper textarea resize change isvisible size textarea back default", "d": "12/2016"}, {"body": "created failing test failing stylebindingreference nt update style changed directly using dom resizing textarea dragging certain nt believe direct dom manipulations like intended supported", "d": "12/2016"}, {"body": "nt believe direct dom manipulations like intended supported confirm", "d": "12/2016"}, {"body": "hi alexmiddeleer thanks interest propose new features file issue enough interest graduate proper rfc check readme explanation process could move issue gracias", "d": "12/2016"}, {"body": "thanks locks moved", "d": "12/2016"}, {"body": "realized new feature could cause", "d": "12/2016"}, {"body": "hacked formfieldjs fixed issue patch addoncomponentsformfieldjsorig addoncomponentsformfieldjs let classnames get classnames set classnames classnames concat fieldclasses get classnamebindings push let classnamebindings get classnamebindings slice classnamebindingspush set classnamebindings classnamebindings inputclasses", "d": "12/2016"}, {"body": "mwpastore solution", "d": "12/2016"}, {"body": "excellent closing issue thanks martndemus", "d": "12/2016"}, {"body": "hi rudymacias thank report pods currently considered eol actively supported current efforts directed towards module unification rfc time inclination chase bug please reach us channel slack group", "d": "12/2016"}, {"body": "rudymacias upgrade three ember app recently helpers projects behaving normally maybe pods use pods well", "d": "12/2016"}, {"body": "locks tad zealous eol label smilingimp please provide reproduction help", "d": "12/2016"}, {"body": "oops sorry hope nt sound dismissive advice reaching us still stands need help coming reproduction", "d": "12/2016"}, {"body": "rwjblue think one possible reason define like works nt work since version remember minor version provide full module path like know far sure helps cc rudymacias", "d": "12/2016"}, {"body": "good locks take wrong way definitely open new file structure think actually close issue since trying reproduce new project pods setup helpers work thought tested already sure happened original test continue troubleshoot project issue thanks everyone nightire rwjblue locks time", "d": "12/2016"}, {"body": "going close since project working updating ember addons one must caused helpers issue emberclifastclick emberclinotifications embercordova embertedselect updating dependencies latest versions seemed trick", "d": "12/2016"}, {"body": "thank follow list come handy issue pops try reach maintainers aware", "d": "12/2016"}, {"body": "pswai maybe need copy first call htmlsafe work around use case copy safe string make htmlsafe sure copy intended match type copy object properties instead thanks posting twiddle example explain use case detail twiddle represent use embercopy application", "d": "12/2016"}, {"body": "pixelhandler twiddle demo actual use case bit complicated created simplified version basically ember models computed property represents translated name translated strings returned safestring form uses models user options form cancel functionality reverts values back previously submitted values achieve form makes copy values submitted uses copied values cancel since copied strings safestring anymore shows instead string value currently workaround bit ugly component needs workaround copied safestring copy first htmlsafe desirable since form supports user input well imho safestring able used like primitive string copied safestring least equivalent original safestring", "d": "12/2016"}, {"body": "nathanhammond", "d": "12/2016"}, {"body": "skaor thanks posting twiddle example add details description issue eg use case expected result actual result", "d": "12/2016"}, {"body": "skaor nt know final purpose perhaps forgot call want", "d": "12/2016"}, {"body": "confirmed issue nominating closure", "d": "12/2016"}, {"body": "yes sorry answer morning worked test without super example works", "d": "12/2016"}, {"body": "enniel add description steps reproduce issue", "d": "12/2016"}, {"body": "pixelhandler sure really steps reproduce believe starting ember able use npm package instead bower package using embercli gt last two beta releases published npm", "d": "12/2016"}, {"body": "would even suggest older versions published least lts versions ease transition bower less addons tests", "d": "12/2016"}, {"body": "tchak could done would p checking unreleased betas", "d": "12/2016"}, {"body": "locks sure mean core team yet time deal older versions future plan release older versions good reason case much appreciated work intended asap request trying gather information plan", "d": "12/2016"}, {"body": "second case afraid release embersource package required bunch ecosystem changes unsure able backport bunch testing verification final", "d": "12/2016"}, {"body": "tchak oops nt realised ambiguous sounded changes necessary ember project could published npm packaged happened first alpha wo nt earlier versions released afaik betas though lack timelapse", "d": "12/2016"}, {"body": "seems release process would support another step feature flags removed someone would need add labels commit prior release", "d": "12/2016"}, {"body": "pixelhandler quite following argument would feature flag since", "d": "12/2016"}, {"body": "locks new features behind feature flags removed know feature landing specific release would time add since label going forward existing api blog posts releases announcements may way identify version parts api landed release channel", "d": "12/2016"}, {"body": "kennetpostigo think get best feedback chatrooms also since ember issue ember bug tracker bugs issues perhaps post forums ember addons similar topic using graphql see may good idea reach authors maybe even team", "d": "12/2016"}, {"body": "surprised work prior based visibility api activated believe needs present prior init changing twiddle set immediately prior super fixes", "d": "12/2016"}, {"body": "far tell twiddle working properly ember without modification runspired suggested", "d": "12/2016"}, {"body": "runspired sorry bad wording started using ember around project created version nt remember thanks fix rwjblue thanks good news reading around bit saw ember going towards dropping isvisible api support went custom api visibility instead classes thanks help guys", "d": "12/2016"}, {"body": "actually spec dashes comment content ember right close issue sorry wasting bytes", "d": "12/2016"}, {"body": "krisselden bug add label", "d": "12/2016"}, {"body": "yes bug long time", "d": "12/2016"}, {"body": "tzellman api docs indicates default value see based value would expect twiddle render using ember see perhaps need set isvisible true component pass true found tests describe isvisible property test adds isvisible binding style binding missing bindings exist test isvisible overwrite component style test toggle visibility isvisible understand behavior different best guess change glimmer seeing code changes isvisible true render seems like boolean property toggle display proper defined component recall comes back day views precomponent", "d": "12/2016"}, {"body": "thanks responsediscussion already aware documentation posted findings disagreed stated updated twiddle render string value never set agree expected value documentation states additionally done testing check value never appears set anything correct property using differentbetter option would like avoid setting bit components renderdestroy events fire thanks", "d": "12/2016"}, {"body": "value never changed unless application changes ember uses flag mechanism allows easily add given component element never sets property isvisible correct property using differentbetter option would like avoid setting bit components renderdestroy events fire well think answer question properly need able understand trying please describe use case", "d": "12/2016"}, {"body": "sure problem thanks really nt big deal use property within mixin maintained several years essentially window resize event handler type check really big deal thought found bug sounds like fact set ember previous versions prior extra unintended nicety thanks", "d": "12/2016"}, {"body": "perhaps api documentation clarify component property certain cases docs imply checking property reliable means testing whether component visible dom following check component worked upgraded fails every instance undefined", "d": "12/2016"}, {"body": "hello closing since emberjs bug please go help channel slack registered use slackin app seems problem connection since timing thank", "d": "12/2016"}, {"body": "hello anirudhzemoso reserved issues github bugs please use slack channel discourse asking questions case try installing ember dynamic fluid assistance please ask help channel slack thank", "d": "12/2016"}, {"body": "case try installing ember npm install g ember serabe", "d": "12/2016"}, {"body": "definitely something fix basically transform anything literal value different private api format", "d": "12/2016"}, {"body": "ideally tracking block params ensure breaking folks", "d": "12/2016"}, {"body": "kris hypothesis discussion race aliasproperty readonly uses adds dependent key consumption property something development build papers bug", "d": "12/2016"}, {"body": "seems consuming cp breaks rendering dependent keys aliases", "d": "12/2016"}, {"body": "lukemelia fixed", "d": "12/2016"}, {"body": "reproduce twiddle might podrelated", "d": "12/2016"}, {"body": "nt seem directly podsrelated could current resolver allows duplication various levels true even pods possible higher priority component lookup case likely something fix since actively pushing replacing resolver module unification support", "d": "12/2016"}, {"body": "reproduce pod project close rwjblue thank", "d": "12/2016"}, {"body": "ya seems unfortunate unavoidable current system resolution", "d": "12/2016"}, {"body": "anyone else maximum call stack size exceeded message trying destroy component ember pls let know thanks", "d": "12/2016"}, {"body": "definitely oversight intended emulate result definitely include", "d": "12/2016"}, {"body": "interesting getting last parameter helper attempting pass directly party library using decide passed parameter supports better solution explicitly detecting helper replace", "d": "12/2016"}, {"body": "firstly suggest third party lib updated made bit smarter pretty common technique ensure property collisions occur secondly use something like work around issue lib gets updated js export default emberhelperhelper function params hash let objectforlib emberassign objectforlib hash externallib objectforlib", "d": "12/2016"}, {"body": "great thanks help", "d": "12/2016"}, {"body": "sounds like good plan", "d": "12/2016"}, {"body": "rwjblue target branch change", "d": "12/2016"}, {"body": "assuming lands within next couple weeks yes would target branch commit prefixed", "d": "12/2016"}, {"body": "looks like bug able use especially remove event listeners", "d": "12/2016"}, {"body": "bug flow calls method contains function call link change link lookup ends finding state link created using state hand returns calls link", "d": "12/2016"}, {"body": "omarestrella kamilogorek fixed thanks reporting", "d": "12/2016"}, {"body": "ember ember", "d": "12/2016"}, {"body": "would consider bug given documentation one parameters accepted", "d": "12/2016"}, {"body": "serabe seems something fundamental nt work either", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "fixed glimmer", "d": "12/2016"}, {"body": "thanks gavinjoyce", "d": "12/2016"}, {"body": "serabe guess nt consider code documentation wink", "d": "12/2016"}, {"body": "filmknurd fwiw code definitely documentation", "d": "12/2016"}, {"body": "broke app well chance get point release includes glimmer fix", "d": "12/2016"}, {"body": "pwnall yep sure", "d": "12/2016"}, {"body": "closed", "d": "12/2016"}, {"body": "think would helpful confused seeing app test suite break despite deprecation warnings indicating", "d": "12/2016"}, {"body": "hi thanks feedback addressed router service rfc currently implemented moment resort shenanigans application controller", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "exelord twiddle link change release version still see object logged string representation model", "d": "12/2016"}, {"body": "gavinjoyce indeed problem ember twiddle changes gone tomorrow morning write new one", "d": "12/2016"}, {"body": "gavinjoyce ok objects queryparams serialized probably bug fix good understand pass optional object route", "d": "12/2016"}, {"body": "hello even though dot notation may never officially supported think would helpful community add note release notes change coworker spent mins figuring application throwing errors also rendering anything updating use dot notation also ember tutorials read use dot notation nested components also one best syntax highlighters found ember htmlbars languageemberhtmlbars nt even support syntax highlighting nested components using slash notation probably people use dot notation even never officially supported think fair say lot community uses dot syntax heads switch officially supported slash syntax easy probably save quite people debugging", "d": "12/2016"}, {"body": "ember tutorials read use dot notation nested components dhedgecock round list links articles tutorials seen would expect regardless list would help get scope issue allow us contact authors update content", "d": "12/2016"}, {"body": "well could nt find single tutorial example nested components guess projecting apologize sassy", "d": "12/2016"}, {"body": "crap app relies heavily hundreds templates defined syntax correct acceptable syntax agree saw dot style tutorials probably back pre days think people logically thought syntax routes defined nt understand upcoming routable components would require different definition syntax argue syntax valid consistency sake alone", "d": "12/2016"}, {"body": "exelord unrelated originally described bug bug specifically document default implementation requires modelnameid work box using custom field reimplement serializedeserialize respective route", "d": "12/2016"}, {"body": "exelord sidenote directly related issue sure documented nt think use identifier dynamic segment router avoid using id also avoid using modelnameid eg needed maybe use newmodelnameid something different", "d": "12/2016"}, {"body": "rwjblue appears clean workaround issue correct", "d": "12/2016"}, {"body": "arenoir make embertwiddle reproduction issue sounds like bug repo issue help diagnose issue also provide verification bug", "d": "12/2016"}, {"body": "locks pixelhandler right guys thanks help explanation indeed working guess bug unexpected behavior", "d": "12/2016"}, {"body": "pixelhandler okay twiddle", "d": "12/2016"}, {"body": "pointup looks like good reproduction label removed", "d": "12/2016"}, {"body": "kellyselden way reproduce issue input ember jquery aside complete addon trying boil root cause may help solution also identity whether bug ember", "d": "12/2016"}, {"body": "pixelhandler next step hoping something would jump someone high level debugging", "d": "12/2016"}, {"body": "figured object template helper makes handles object type changes success case fail case appears mild breaking change", "d": "12/2016"}, {"body": "hash argument passed helpers result emptyobject pattern meant emulate avoid bad performance characteristics certain platforms fwiw object also frozen creation specific check objects without prototype see instances qualify true object would pass check ultimately suggest working around issue specific addon via something like", "d": "12/2016"}, {"body": "ut avoid bad performance characteristics certain platforms new fixed old ones non upgrading mobile others may though suspect need thorough tests change", "d": "12/2016"}, {"body": "narrowed problem able quickly work around using guess question treated bug wontfix", "d": "12/2016"}, {"body": "likely sympathetic wontfix run others first closing anything", "d": "12/2016"}, {"body": "think may maybe fix talk", "d": "12/2016"}, {"body": "rwjblue stefanpenner anything get resolved", "d": "12/2016"}, {"body": "thanks reporting looking fixing one", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "fixed", "d": "12/2016"}, {"body": "tildeioglimmer parsed trying fix", "d": "12/2016"}, {"body": "serabe confirm issue referring", "d": "12/2016"}, {"body": "would say first case result user wants remove style completely style might bit useless interesting props", "d": "12/2016"}, {"body": "rwjblue sorry misunderstood", "d": "12/2016"}, {"body": "mmun think commented assignment html attribute results disappearing attribute act magic rather developers comment entire attribute vs special magical use case handlebars comment inline assignment html attribute", "d": "12/2016"}, {"body": "rwjblue think behavior ember would sufficient also nt introduce change behavior handlebars comments like error message seems helpful perhaps warning behavior still works", "d": "12/2016"}, {"body": "pixelhandler yeah agree nt know ruled fine syntactically", "d": "12/2016"}, {"body": "input helpers long life curious life close coming end still based original view objects actual components essentially helpers components workaround sometimes create component simply extends textfield view eg advances made htmlbars glimmer glimmer curious better use html input vs textfield view object find input helpers bit archaic ways making components using tagname input set type see fit also much enjoyed phantomjs browser computers humans app currently work use phantomjs run tests use firefox ci thinking phantomjs may near end relevance nt get wrong input helpers phantomjs excellent appreciate much find nt rely much used", "d": "12/2016"}, {"body": "crosslinking", "d": "12/2016"}, {"body": "nathanhammond thanks fixing quickly rwjblue labeled bug perhaps issue resolved upcoming release", "d": "12/2016"}, {"body": "fix pixelhandler bug introduced need point release fixed things address get back router things got open issues address", "d": "12/2016"}, {"body": "status guy", "d": "12/2016"}, {"body": "hit issue upgrading bustle app need either refactor root route named differently hold upgrading", "d": "12/2016"}, {"body": "chancancode issue closed", "d": "12/2016"}, {"body": "yup thanks pointing", "d": "12/2016"}, {"body": "stefanpenner run another issue regarding computed properties arrays using key works fine properties array elements changed adding new elements trigger recalculation computed property according current docs case", "d": "12/2016"}, {"body": "pestoney believe tested could provide reproduction", "d": "12/2016"}, {"body": "stefanpenner created small example export default embercontrollerextend values null init thisset values emberobjectcreate count emberobjectcreate count emberobjectcreate count consolelog array count thisget arraylength arraylength embercomputed values eachcount function return thisget valueslength console output looks like understand docs right second line already output instead", "d": "12/2016"}, {"body": "pestoney observed array mutations observed need use list methods observed believe look", "d": "12/2016"}, {"body": "stefanpenner awesome job digged docs sorry", "d": "12/2016"}, {"body": "see need create another object custom tostring emberinspect gives unhelpful unknown mixin ideas thanks", "d": "12/2016"}, {"body": "bcardarella think needs rfc issue contributingmd requestingafeature recommends creating rfc issue request featureenhancement need pr rfc issue repo", "d": "12/2016"}, {"body": "\u30c4 issue nt response core uncertain direction taken", "d": "12/2016"}, {"body": "think duplicates see issue workarounds may fine us workaround sure ember qunit test env change add config expecting fail perhaps using even possible", "d": "12/2016"}, {"body": "update demo detached dom trees changing routes also another snapshot", "d": "12/2016"}, {"body": "locks stefanpenner need twiddle order verfiy bug could try get example running twiddle", "d": "12/2016"}, {"body": "reproduction app form believe added enough chance loook nt comment midweek feel free pig", "d": "12/2016"}, {"body": "stefanpenner alles klar danke", "d": "12/2016"}, {"body": "fwiw unable find memory leaks employing threesnapshot method could find large number detached red nodes switching routes bunch times like could however looked heap snapshot file found nodes retained property called object grep nodemodules behold possible memory leak originating", "d": "12/2016"}, {"body": "robbiepitts thanks lot seems possible indeed file issue emberbasicdropdown keep guys updated", "d": "12/2016"}, {"body": "investigated ca nt pinpoint memory leak happen true hold reference trigger dropdown content components share parent destroyed time references garbage collected also checked nonlocal events added bodywindow cleaned ca nt pinpoint might causing problem remember point history bug hook invoked contextual components say fixed someone experience tracking memory leaks available happy pair see find leak", "d": "12/2016"}, {"body": "specific steps reliably reproduce demo repo able reproduce yet", "d": "12/2016"}, {"body": "robbiepitts sorry late respone using following steps open demo click click repeat step times take heapsnapshot", "d": "12/2016"}, {"body": "tests previously failing rebase fixed looking include tests part pr", "d": "12/2016"}, {"body": "test added ensured fails without change anything else required merge pr", "d": "12/2016"}, {"body": "note breaking change deprecation opinion cause working tests fail migrating requiring patch add ons relying prior behavior case addon embercliselectpicker", "d": "12/2016"}, {"body": "propose reopen following twiddle shows camelcase expressions resolve dasherized helper names surprising local camelcase property trying render switch twiddle ember see property name resolved expected", "d": "12/2016"}, {"body": "somewhat related", "d": "12/2016"}, {"body": "update discussed slack rwjblue next step add test coverage emberresolver define desired behavior going work", "d": "12/2016"}, {"body": "embercliemberresolver merged think good close", "d": "12/2016"}, {"body": "boss", "d": "12/2016"}, {"body": "progress issue maybe raising warning would relevant ca nt get application work ember issue", "d": "12/2016"}, {"body": "pr submitted", "d": "12/2016"}, {"body": "may even specific windows windows adamlawson versions js bin resolved version", "d": "12/2016"}, {"body": "adamknights tested jsbin windows yes resolved ember", "d": "12/2016"}, {"body": "keep older lts skip lts next one recommended way go", "d": "12/2016"}, {"body": "robishere gut feel platform specific bug fixed glimmer unlikely much priority answer yes could users appsite textareas would least wait see comes first either fix next lts", "d": "12/2016"}, {"body": "make use instead way could still iterate keys lookup keys still", "d": "12/2016"}, {"body": "stefanpenner work week", "d": "12/2016"}, {"body": "folded", "d": "12/2016"}, {"body": "anyone know specific lines code causing issue error bunch tests sure causing", "d": "12/2016"}, {"body": "currently ember bug seems still alive consider following twiddle notably following handlebars snippet behaves incorrectly", "d": "12/2016"}, {"body": "problem twiddle using different version match version see error furthermore template render text stated documentation aliased property falsey example false undefined null nan empty array block rendered thank", "d": "12/2016"}, {"body": "thanks serabe unaware doubles block", "d": "12/2016"}, {"body": "way forward people use dot syntax hundreds components templates utilize syntax use syntax well hundreds components things get little messy argue routes defined way components accessible way fyi related", "d": "12/2016"}, {"body": "way forward people use dot syntax rewrite", "d": "12/2016"}, {"body": "rwjblue thanks replies night search amp replace", "d": "12/2016"}, {"body": "jackellis happy help sorry bit", "d": "12/2016"}, {"body": "path forward", "d": "12/2016"}, {"body": "tomdale krisselden work deprecation rfc", "d": "12/2016"}, {"body": "rwjblue fixed use real events testing flag", "d": "12/2016"}, {"body": "mentioned blog post took surprise since deprecation warning previously said would supported mentioned", "d": "12/2016"}, {"body": "usage pattern affected sure problem must usage pattern particular change would love input good alternate usage pattern would basically page shows filterable set data achieve using ember computed value filter data based value several queryparams page however prevent invalid inputs eg letters numbers added queryparams user input following pattern basically computed filtered model look like filter values invalid characters strip last character become valid anyone suggestion cleaner way validitychecking inputs", "d": "12/2016"}, {"body": "caught us surprise well particularly nt see warning messages app running upgrade application load references error anyone else seen behavior", "d": "12/2016"}, {"body": "revanar could totally looks like cp actually two different things one cp return filtered model one update filters move updating filters part observable component passing query params component move logic hook experience running backtracking rerender error think moving operation cp make error go away", "d": "12/2016"}, {"body": "tough time well fixed lot issues one instance seeing deprecation error puzzling looks like failure happening ember internal property updated unfortunately reproduces selenium tests difficult debug selenium driver prevents dev tools working test running traced least one instance problem controllertransitiontoroute call made end signin process seems happen several different scenarios sure proceed troubleshooting chancancode mentioned feature flag disabling deprecation error nt see info anyone know flag", "d": "12/2016"}, {"body": "ember migration main pain point fixing lot issues well seems nt singleclear cut strategy fix errors tried following approaches depending use case wrapping code moving code lifecycle hooks wherever possible trying different combination lifecycle hooks components", "d": "12/2016"}, {"body": "alot difficulty well past years accumulated fair amount drop downs automatically select first element certain type ember data store cache causes rerender since parts page driven dropdown selection quite sure since nt want repeat code fill select first item list page dropdowns used", "d": "12/2016"}, {"body": "scottmessinger thanks feedback using component ended working fairly well managed rid backtracking error think code fair bit cleaner", "d": "12/2016"}, {"body": "kris selden useful tip debugging outlined steps details", "d": "12/2016"}, {"body": "working improving backtracking assertion message cut build includes better messages modified twice single render unreliable slow ember longer supported see details modified twice single render rendered modified unreliable slow ember longer supported see details things ready would really useful people tried app cc fivetanley bryanhickerson revanar phammers scottmessinger jakesjews please let know see nonideal assertion messages app try update include ember dependency follows see example application running build", "d": "12/2016"}, {"body": "cut build typo", "d": "12/2016"}, {"body": "rwjblue thanks typo updated", "d": "12/2016"}, {"body": "gavinjoyce thanks taking tried app definitely helpful previous message sadly us still nt make super easy remediate problem property notes modified obviously modified either location indicated error message exactly sure hope dig next year", "d": "12/2016"}, {"body": "dhaulagiri interested happy organise screenshare sometime dive exact problem keen error messages helpful possible would useful consider case likely able help identify root cause", "d": "12/2016"}, {"body": "fwiw found another issue related", "d": "12/2016"}, {"body": "also tried branch gavinjoyce trying find bug ongoing effort bring tabs control emberpaper referenced pr unfortunately seems case also get references components appear involved", "d": "12/2016"}, {"body": "bjornharrtell emberpaper branch try", "d": "12/2016"}, {"body": "took little time dive emberpaper issues seems new error messages useful current one nt perfect nt handle yielded content well component contained reported source useful useful perhaps could", "d": "12/2016"}, {"body": "serabe pixelhandler use case setting queryparams route visited yet visiting route action happened crashes app see console code beforemodel hook route fixes know supposed change private methods controller unable understand error occurring someone please shed light related trek stefanpenner rlivsey", "d": "12/2016"}, {"body": "case anyone else still issue sure fixed upgraded assertion came turns controller defined used multiple routes extended least managed resolve error eg query params property instead made injected utilise main controller logic hope helps others coming google", "d": "12/2016"}, {"body": "jameshoward got around lack model adding model hopefully helps someone finds thread looking solution", "d": "12/2016"}, {"body": "closed", "d": "12/2016"}, {"body": "trusting kellyselden call p", "d": "12/2016"}, {"body": "still workable solution really quite difficult height trick html body height etc", "d": "12/2016"}, {"body": "facing issue emberdialog plugin creating dialog component programmatically set target property component custom context passed user using closure actions wo nt bubble action component target element suggested solution issue call sendaction method targets implement method add following code", "d": "12/2016"}, {"body": "issue still present release", "d": "12/2016"}, {"title": "position offsetparent return incorrect results ff recent versions chrome", "body": "offsetparent algorithm changed includes ancestor elements css transform applied chrome maybe ff compliance new spec ie safari result position returning incorrect results browsers imo jquery probably need implement ancestor traversal rather relying domprovided offsetparent otherwise results forever depend browserversion client see", "num": "3479", "d": "12/2016"}, {"title": "caching camelcased strings", "body": "every time data attribute dataset accessed jquerycamelcase called adding cache camel cased strings would avoid running two regular expressions seeing decent performance improvement adding simple cache webapp somewhat abuses data calls", "num": "3477", "d": "12/2016"}, {"title": "using windowsetinterval unceasingly call api contextfind result glint element panel chrome dev tool", "body": "main javascript code follows see jsfiddle open chrome dev tools element panel find element diviframecontainercurrent blinking unceasingly using api children replace find solve problem also see next png image thx", "num": "3476", "d": "12/2016"}, {"title": "deprecate jquerynodename remove", "body": "description another undocumented utility function exposed jquery object remove probably long time link test case", "num": "3475", "d": "12/2016"}, {"title": "feature detection strategy illadvised", "body": "description historically type converting host object methods led problems strategy dismissed unviable almost ten years ago issue summed searching native serialization function also illadvised nothing beyond observations current browsers imply presence counted one example native localized link test case test case needed matter may fail future certainly past crossbrowser scripting often requires anticipating future browsers may rather observing patterns occur narrow set browsers today", "num": "3474", "d": "12/2016"}, {"title": "nesting tables results incorrect insert", "body": "description nesting tables results incorrect insert appears happen surrounding table tags provided static html inserting table body dynamically bug occur link test case test nested table td border solid bbb tr height minheight td width minwidth trnested height minheight document ready function function rows var var lt x n return var n var lt n rows n n main append nt happen dynamically add table body first body append n n div main html n n row gets appended nested main xx n main append", "num": "3472", "d": "12/2016"}, {"title": "ca nt set strokeopacity style svg elements", "body": "description ca nt set strokeopacity style svg elements strokeopacity included cssnumbers hash prevent automatically adding px property mysvgshape css strokeopacity fails set property mysvgshapecss strokeopacity correctly returns value link test case", "num": "3471", "d": "12/2016"}, {"title": "callbacks memory unlocked add", "body": "moved description erroneously unlocks callbacks memory link test case", "num": "3469", "d": "12/2016"}, {"title": "html method makes past string html show wrong order", "body": "hello passing string html function html shows page order string rendered html page button top page bottom page innerhtml equal string everything worked fine guess something strings used strings nt seem problem code", "num": "3468", "d": "12/2016"}, {"title": "statuscode parameter ajax nt work responses", "body": "expected print response observed nothing response actually observed network tab nothing happens handler nt seem triggered expected documentation awfully unclear interaction defined one following behavior could expected documented either handler called one two requests actually made api could defined handler returns false redirect followed otherwise additional setting whether follow redirects observed none success handler called adding end handler changes nothing cases", "num": "3467", "d": "12/2016"}, {"title": "jquery selector current event lose checked property checkbox input", "body": "description jquery selector current event eventcurrenttarget checkbox input lose checked property least nt find way retrieve boolean value checked property jquery link test case", "num": "3466", "d": "12/2016"}, {"title": "order deferred callback different older version promisea", "body": "description d\u00e9clare two deferreds one callback first deferred second callback wait callback resolve theses deferred order jquery order order resolve jquery callback wait always call first link test case jquery jquery native promisea", "num": "3465", "d": "12/2016"}, {"title": "jquery ajax response object contains number value", "body": "posted question stackoverflow valid json ajax seem handle first response either seems work curl", "num": "3461", "d": "12/2016"}, {"title": "accessing local binary file work", "body": "paste script local file get url foobinary processdata false complete function data success function data datatype binary expected enter success function wo nt least chrome chrome returns http code local successful file access incomplete fix patch applied line function done", "num": "3458", "d": "12/2016"}, {"title": "inconsistent event namespace property", "body": "description eventnamespace property available custom events namespaced standard events must accessed via eventhandleobjnamespace seems weirdly inconsistent ca nt tell oversight intended behavior javascript document testingtest function evt consolelog evtnamespace document trigger testingtest returns test document clicktest function evt consolelog evtnamespace returns undefined document clicktest function evt consolelog evthandleobjnamespace returns test link test case", "num": "3457", "d": "12/2016"}, {"title": "calling returns percentage width instead pixel width", "body": "calling expect get back width pixels get back width percentage seems effect browsers latest version jquery workaround problem using getting later time actually return pixel width using dom ready event seems effect tried create simple jsfiddle complex page unable reproduce problem far see also comments top answer stackoverflow question others problem", "num": "3455", "d": "12/2016"}, {"title": "restting file input ie", "body": "environment ie jquery description file input element file selected ie neither setting value resetting form reset file input empty value files solution maxmaxmaximus trick sideeffects solution nt found yet since bug ms wo nt maintain anymore think jquery handle link test case test case", "num": "3454", "d": "12/2016"}, {"title": "html working", "body": "html working", "num": "3453", "d": "12/2016"}, {"title": "method returns unexpected results", "body": "description expect happen passing array method work array contains selector strings jquery objects native dom elements references actually happens passing array method works array contains references native dom elements contains selector strings jquery objects browsers affected probably link test case fiddle test cases nt expected results however test cases seem correct results due coincidence relating reason cases unexpected results", "num": "3452", "d": "12/2016"}, {"title": "method returns unexpected results", "body": "description expect happen test cases following fiddle commented unexpected results actually happens wrong expected results browsers affected probably link test case fiddle test cases nt expected results however test cases seems correct result due coincidence relating reason cases unexpected results", "num": "3451", "d": "12/2016"}, {"title": "nt use computed styles get innerouter element dimensions", "body": "description tip iceberg heightwidthinnerheightinnerwidthouterheightouterwidth functions suffer usual problems trying deal elements html xml documents windows single interface javascript return value undefined get width height element requesting forcing parsefloat jquerycss elem type extra set width height element jquerystyle elem type value extra using outrageously complicated method get element dimensions inefficient simply begging trouble considering relies multiple calls also outrageously complicated occasionally buggy dom method provided browsers see issues related styles clear comment supposed mean digging deeper hooks computing various flavors height width pixel javascript jqueryeach height width function name jquerycsshooks name get function elem computed extra computed side note simply throw exception disembodied elements style never good idea try show latter measure rehide documentation alludes may even work even sure working would imply elements jquery attempt temporarily show rehide element order measure dimensions unreliable kidding considering arbitrarily decides temporary display style cases ca nt tell glance support comment supposed happen elements without parents part document fragments nothing good expect digress lot stuff every issue seems lead halfdozen regardless results less meaningless element display style completely confusing best get rid junk documentation also alludes showandrehide measurement feature may removed future version jquery deprecate practice immediately eg log warning going away future preferably near future drilling function javascript function getwidthorheight elem name extra consider comment nowhere check value property properties return anything expecting value subsequent check test negative numbers zero furthermore xml elements xhtml jquery never supported nt expected properties nt checked event see calls getclientrects getboundingclientrect work xml elements continuing happens conditions true uncomputed style clearly appropriate fallback computed style intrigue function think point made stop point ask code ever maintained even slightest degree confidence figure gathering evidence testing confirmation updates logic make sense evidence proves nothing browser scripting browsers perpetually updated almost constantly days old bugs fixed new bugs introduced etc anyway enough let start story course according documentation description get current computed inner width first element set matched elements including padding border use term computed computed styles confusing would imply string units goes say method returns width element including left right padding pixels combining information two statements ascertain returns number pixels including padding border words html elements seems really silly jump previous hoops try deal xml elements function event would much easier figure sort element dealing html xml act accordingly simply require different approaches realize much hoops described actually specific html elements example svg elements common xml elements found html doms css padding borders add subtract moving outerwidth documented returns width element including left right padding border optionally margin pixels words unless margin requested far optional margin outer methods clearly design mistake nt necessarily require computing styles either would require additional hoops figure reliably without deprecate option well ca nt imagine practical use case event see proposed solution issue html elements two oneliners standard mshtml since ie rendering engines standard since around turn century xml elements completely different approach required wo nt resemble anything existing code would much better idea separate constructor ie subclass xml elements well windows documents current design dates back cause many seemingly neverending issues jquery proper design simply would nt susceptible many issues see created year year situation wo nt change design problems addressed starting inside way go moment new constructors require complete reboot would jquery brand name also note setting dimension calling method without dimension may well return different number even going get setter bit point ps documentation states method applicable window document objects clearly case references entirely reliable indeed try get semblance outer width objects link test case test cases required logic clearly wrong documentation confirms code nt always work advertised", "num": "3450", "d": "12/2016"}, {"title": "offset module get rid getwindow function", "body": "description working deprecating ran internal function offset module comment incorrect returns reference passed reference node returns passed reference element node side note seems odd try derive reference considering many methods simply reference passed core initialization example perhaps bug see methods least attempt work multiple windows digress inappropriately named function used two places always reduce number one get rid function costs associated calling first one method obviously reduces javascript create scrollleft scrolltop methods jqueryeach scrollleft pagexoffset scrolltop pageyoffset function method prop var top pageyoffset prop confirms function expected return falsey value passed element reference something like replace call javascript var win elemwindow elem win elem else elemnodetype win elemdefaultview function deleted one less call bargain well one public deprecated rather deleted next hth ps consider large number issues related illadvised design object model tries deal elements documents windows among things using single constructor awkward interface users well similar mistake tried deal html properties xml attributes using single function link test case test case needed simply restructuring", "num": "3449", "d": "12/2016"}, {"title": "css hook left top styles makes sense", "body": "description nothing pointless browser scripting trying compute styles incorrectly referenced jquery method hideously complex black box virtually never needs opened twenty years browser scripting managed avoid almost entirely exception comes mind html editor regardless jquery aspires fix whole thing frequently gets trouble consider hook styles javascript support safari lt chrome lt add topleft csshooks using jqueryfnposition webkit bug blink bug getcomputedstyle returns percent specified topleftbottomright rather make css module depend offset module check jqueryeach top left function prop jquerycsshooks prop addgethookif supportpixelposition function elem computed computed computed curcss elem prop cryptically named flag refers test result percentagebased style fails compute pixel units issue dates back bad old days ie frequently used libraries slightlyoff substitute nt convert units pixels jquery certainly older versions problem familiar part attempts fix issue calls method instead attempts figure offset element document origin would equivalent computed styles small subset cases example element position style parent elements position would work hand element position would fail unless document scroll position origin furthermore element position would fail virtually every case hook simply cause browsers demonstrating quirk return nonsensical position values numerous cases even considering problems related rtl documents never bothered read p position primer old cinsoftnet site retired numerous usenet articles authored subject dating back least go general solution short save style eg get offset set style get offset find difference two offsets put old style back method pointless wrapper seems exist handle calls passing disembodied elements elements display style would advise simply calling documenting trying compute position styles offsets elements result undefined behavior recurring theme addition let callers know made mistake earliest possible time throw exception cases opposed returning zeros hth ps positions solution sits halffinished luckily archived related primer years ago pps old issue surely affects previous jquery versions curious old versions kept date bugs like fixed link test case test case needed logic clearly incorrect", "num": "3448", "d": "12/2016"}, {"title": "ready callbacks deferred", "body": "description hard imagine critical requirement running callbacks fast possible right order apps disorganized enough require one relation well calls intended happen last callback runs mention callbacks deal initial showing andor enabling ui components absolutely critical run call stack preventing browser anything eg processing user input example could well mashups assume listeners guaranteed run event fires know never true added sorts new bizarre possibilities javascript catch cases document ready called browser event already occurred support ie lt older ie sometimes signals interactive soon documentreadystate complete documentreadystate loading amp amp documentdocumentelementdoscroll else would also seem critical break compatibility previous jquery versions regard behavior short operation needs kept simple possible implementation jquery fails requirement words asking causing trouble multiple levels javascript deferred used dom ready var readylist jquerydeferred jqueryfnready function fn use complicated object perpetually causes unit tests fail due operations failing complete schedule hint enough tangle callbacks code furthermore callbacks wrapped timeouts unspecified delays begging trouble amount testing prove scheme work expected every time browsers already know simply make callbacks run correct order every time browsers ca nt imagine rationalization introducing slightest bit uncertainty added complexity incompatibility saying one browsers alleged supported easily coaxed running callbacks wrong order point browser buggy ever run callbacks wrong order timeouts used using timeouts pointless illadvised throw exceptions another timeout doubling pointlessness furthermore unneeded illadvised timeouts absolute poison debugging event exception obviously best break line failed intact aftermath environment inspect timed anonymous callback short getting way debugging good reason think debugger cop always better catch perpetrator crime unexpected occurrence causing exception scene evidence gathered immediately catching exception rethrowing delay like reviewing tape crime filing report later scene long since contaminated sometimes perp strikes predictable fashion sometimes nt best catch first time finally obvious fact critical behavior wildly changed would expected previous versions great examples consistency department read brief attempt explanation decision issue created debugging issues revisited buying consistent interface line nt even understand means neither consistent previous jquery versions browsers expected code like javascript documentaddeventlistener domcontentloaded function documentaddeventlistener domcontentloaded function think good form use two listeners expected called correct sequence nothing happen two calls hand timeouts thrown mix javascript documentaddeventlistener domcontentloaded function windowsettimeout function opens possibility browser handling asynchronous events two calls second example similar jquery say similar also extra complexity promiselike behavior course delays unspecified jquery presumably save extra two bytes would take much better explanation rationalize clearly wrong move nt bothered going back read related discussions know experience rational explanation possible please nt take word alone one ask around reputable forum ecmascript browser scripting ask anybody experience going back last decade ever heard weird things happening related timeout ordering wrapping callbacks trycatch throwing exceptions timeouts expected improve degrade debugging experience link test case test case needed nt need go looking trouble case", "num": "3447", "d": "12/2016"}, {"title": "redo jqueryextend clarity safety performance", "body": "description new javascript nt call jqueryextend inside core outside code could change delete extra dot operations affect performance well var extend extend jqueryextend jqueryfnextend function much easier read modulesafe certainly bit faster lessons learned refactoring apply much rest code let go bit bit javascript nt call jqueryextend inside core outside code could change delete extra dot operations affect performance well var extend extend jqueryextend jqueryfnextend function noted unsafe drag performance call methods inside module object exported tacking onto object adds global scope see create local function recursive calls another issue created address references eslint simply misconfigured extra redundant cases sides comparison type furthermore inconsistent loose inequality operator used throughout jquery without warnings disabling lint eg javascript jqueryisplainobject deprecated function isplainobject obj var proto last function reference deprecated moved slimmed version function parts original redundant use thrown see note objects passed foolish enough custom property constructor prototype supported squeamish change add another method check also note function longer susceptible meddling properties outside changes object eg overriding method finally note use instead method prototype would redundant already checked object prototype custom properties explicitly disallowed behavior prototypes undefined return inner function create closure containing private function note originally assigned made sense documentation method indicates first second deep usage object example original assignment would allow contradiction admonition documentation warning passing false first argument supported furthermore passing empty string number argument would undocumented effect behavior cases undefined ie pass nonsense risk expect exceptions best way help users quickly identify missteps scaffolding code removed production builds leave future issue afaik compiler capabilities time subject bit removed figure possible deep use case two recursive calls pass objects objects objects specific anyway one less call good deprecated future well like simply overly generalized crutch encourages poor designs suffered documented issues related poor design decisions trying handle host native objects single function digress trying put suggested changes context part unified vision takes account best practices ecmascript browser scripting well history issues project rest modifications mostly renamed variables simplified structures performance improvements aforementioned banishment exported object impossible could missed something seriously obfuscated undercommented code however passed unit tests first try something wrong refactoring unit tests insufficient either case something needs change changes fork starting diverge considerably trunk advise allot time daytoday issues concentrate improvements make code easier follow therefore likely help prevent future issues fact perpetual issues decade indicates need take step back look bigger picture treadmill due illadvised design decisions date back decade unclear code getting past eslint underdocumented overly complicated features leads users finding bugs either creating issues simply guessing get around continues cycle confusion busywork problems nt considered critical ascent library average web developer clue deal difference old ie versions varying degrees deviation dom standards furthermore alternative solutions minimal usually featured many mistakes days long gone library clearly muchdeserved decline nt clean act gone years gone web course take ages certainly considered irrelevant waste time mostly harmful present state link test case behavior unchanged performance mostly clarity", "num": "3444", "d": "12/2016"}, {"title": "deprecate isarraylike", "body": "description think code comments say javascript function isarraylike obj least one known issue ios bend rules handle ie quite predictable comes sorts methods clearly would much cleaner avoid thing would save time dealing obscure issues jquery needs method nothing dom certainly nt need call core three methods call clearly specific needs latter two internal use arguments middle dealing similar issues related simple enough untangle one even easier avoid sort issues dogged similarly illadvised method solid ecmascript code rely crutch functions history shows nothing trouble particularly try deal host native objects see reopened bugs discovered investigation refactoring must missed prematurely closed get done one untangle one similar fashion link test case test case required", "num": "3443", "d": "12/2016"}, {"title": "empty resolves undefined argument jquery arguments jquery", "body": "description use dynamic array deferreds load n things loop arguments done callback upgrading jquery code breaks link test case minimal test case call arguments resolve arguments correctly arguments done callback incorrectly argument done callback", "num": "3442", "d": "12/2016"}, {"title": "remove mystical incantations related selectedindex", "body": "description line example programming mystical incantation least one like logically expression noop comment indicates somebody saw cause side effect unspecified version safari reason lint pass line comment confirms lint forced ignore transgression fuse blows nt put tinfoil contacts trying tell something wrong furthermore makes us think parent could optgroup issue potential foul form input given high priority leave solution one exercise moment solution given resig several years ago discussed old jquery forum well usenet mentioned something wanting add extra line confirmed could nt find browser proved nt work ie show fails hint noop line answer discards link test case test case known sure might fail know elements without least one containing attribute vulnerable creates implicitly selected likely issue page loaded without reviewing dom standards ca nt say sure browsers required set property reflect implicit selection instead worrying testing let fix logic ps attempt feature test sets flag nt checked relation line checked areas code similar lines javascript var input documentcreateelement input select documentcreateelement select opt selectappendchild documentcreateelement option one problem test testing disembodied certainly guarantee pass based standard know would consult specifications false positives problem likely occur adding additional noop execution reason know jquery supposed work document fragments tested without even another problem nt test assumed solution see improves situation may problem result noop execution without reason expect anything useful third problem name flag descriptive supposed mean nt tacked object could make name long want minification process would reduce regardless saving bytes expense clarity bad trade mention http compression likely end saving bytes anyway fix logic half dozen related lines nt need test btw support ie lt imply see similar comments throughout nt make lot sense eg original hack case unspecified safari version", "num": "3441", "d": "12/2016"}, {"title": "stop calling methods exported object", "body": "description calling methods exported object currently add another reference called global scope core modules continue call methods object defeats purpose using modules outside code change methods potentially breaking code core modules modules using jquery sample line unless overwritten deleted function looks like javascript merge function first second var len secondlength j firstlength note reference function nt need called method extra reference jquery object dot operation unsafe selfimposed performance penalty one hundreds line makes unsafe deal exporting commonjs like module using jquery break module using jquery also note contradiction terms objects global abstain augmenting host object one several places terms window global used interchangeably sometimes line outside script simply something like related ticket particular see last comments related pull request link test case test case clear deleting overriding methods exported may cause code inside core modules break", "num": "3440", "d": "12/2016"}, {"title": "table tfoot inside plain table results weird dom", "body": "create simple table thead tfoot tbody tags insert plain table tr td get broken table example", "num": "3439", "d": "12/2016"}, {"title": "ajax always processes data requests without entity body", "body": "creating ticket based discussion pr litor nt forget review ajax requests using http methods request body get provided data always processed removed even caller specified seems contrary documentation says option contain either query string form object form latter form used data converted query string using jqueryparam sent processing circumvented setting behavior also present kind recent regression seem like bug suppose could argue processing circumvented refers serializing objects appending data url interpretation nt make sense would someone want appended url nt process would possible handler take object stringify url desired something like currently nonworking example", "num": "3438", "d": "12/2016"}, {"title": "feature request fncontents supports", "body": "todo return reference supported reference", "num": "3436", "d": "12/2016"}, {"title": "much recursion jquery firefox animate complete callback", "body": "versions firefox latest jquery thing loading bar animates lefttoright resets note uses complete callback animate fire repro load firefox run firefox minimize firefox window wait minutes get cup coffee come back drink coffee square stopped moving console shows much recursion note works wrap reset call settimeout speculation probably something requestanimationframe changes jquery leave window focused recursion error appear happen chromeie also nt happen jquery", "num": "3434", "d": "12/2016"}, {"title": "mouseenterleave changing mouseoverout", "body": "ca nt tell jquery browser issue forgive jquery looks like browsers changing mouseenter mouseleave event handlers mouseover mouseout looks like section jq library calls safari however done browsers go view event handlers bottom examples left div mouseovermouseout right div enterleave replaced mouseoutover comment code library issue nt happen lines code question", "num": "3433", "d": "12/2016"}, {"title": "jquery regression anchor working chrome", "body": "description criterias trigger issue pagea link pageb uses jquery pageb dynamically create element id foo opon document ready open pagea latest google chrome using ubuntu click link pageb brings pageb scroll element id foo viewport pageb repeat step replace jquery step issue happen code repro problem code pageb function body append lt idfoo gt foo lt gt jquery example good morninggood morninggood morninggood morning good morninggood morninggood morninggood morning good morninggood morninggood morninggood morning good morninggood morninggood morninggood morning good morninggood morninggood morninggood morning code pagea examples link test case", "num": "3432", "d": "12/2016"}, {"title": "multiple scripts dommanipulation appendto uidialog", "body": "opening issue file comment timmywil using jquery jqueryui post request appends result dom element nt manage get simpler function post function data data appendto container post requests returns function div thedialoguidialogcontent dialog destroy remove div thedialog dialog alert alert hello alert line prevent response running alert debug alert screenshot see scripts second one gets", "num": "3431", "d": "12/2016"}, {"title": "eliminate use isplainobject deprecate method", "body": "description function complicated unnecessary certainly internally count five cases used core one example javascript jqueryeach get post function method jquery method function url data callback type sort faux overloading generally illadvised ecmascript code make clear relatively inefficient hard follow wo nt clean entirely ca nt break compatibility one thing time case string object object mixed object created house various options obviously strange interface could pass twice named arguments object instead javascript jqueryeach get post function method jquery method function url data callback type let get rid call well method get treatment another issue foreshadowing javascript jqueryeach get post function method jquery method function url data callback type better right faster much easier follow enough going function start without adding calls odd functions important understand nt needed anywhere likely callback must object old callable object eg host objects object constructed objects result browsers one four go going bother rest indication agreement strategy sound much deal rest calls method deprecated nt encourage developers use functions either bigger picture lot core made easier follow similar restructuring link test case test case behavior remain existing test cases appropriate", "num": "3430", "d": "12/2016"}, {"title": "catching rethrowing ready exceptions", "body": "description catching rethrowing exceptions two issues makes finding correcting mistakes much harder need live stack trace paused code later report logged timeout nt much use debugging app code exists least starts ready callbacks absolutely crucial allows app continue know unknown state bad news development production exception stop show immediately already know counterargument answer simply method polyfill nt mimic browsers creates issues rethrow recent change little address issues always existing catching exceptions ready callbacks correct related code fork shortly link test case test case simply undesirable behavior corrected", "num": "3427", "d": "12/2016"}, {"title": "confusing code global object vs dom window vs fake dom window", "body": "description starting beginning code wrapperjs supposed browsers pass reference global object host object often least closely mimics global object nodejs reference module object passed ecmascript environment lacks global object global object passed also sure yet comment supposed mean moving start function javascript function global factory note first function argument called quite confusing may well reference host object nodejs module environments reference global object code continues javascript typeof module object amp amp typeof moduleexports object line checks global object browsers implies reference global object however seen may reference one three types objects object browsers sort module object nodejs surely property global object unspecified environments comments little help imply references object quite confusing inconsistency end know point object nt know whether object object jquery fail soon references argument name core adds additional confusion cleared three files nt even bothered run sure wasting time need understand changes accomplish offer feedback proceeding done much going point bigger issues require changes really allow passing global object reference object function global object passed object found property object made possible wrapperjs additional argument also added core script example likely used javascript var querynoconflict function deep window jquery window expose jquery identifiers even amd commonjs browser emulators noglobal windowjquery window jquery case would seem call global object whatever passing object happens browsers two usually equivalent environments link test case test case changes suggesting change behavior current unit tests suffice", "num": "3426", "d": "12/2016"}, {"title": "apply fix radio buttons checkbox", "body": "see fix also include buttons currently use jquery trigger click radio button event handlers get called state updated release notes change included say changed radio buttons even though nt", "num": "3423", "d": "12/2016"}, {"title": "replaceclass function", "body": "many times replace element class another one like instead", "num": "3419", "d": "12/2016"}, {"title": "emprovement css function", "body": "possibility add multiple css attribute name elemcss height fitcontent", "num": "3418", "d": "12/2016"}, {"body": "extremelyhighfrequency intended use case nt foresee us memoizing calls however noargument gives data object directly upon get set whatever properties like without worrying string manipulation", "d": "12/2016"}, {"body": "remember modify object directly still want able access via official api less performanceintensive parts code need use camelcased key names direct manipulation", "d": "12/2016"}, {"body": "break element see id added actually dont need id", "d": "12/2016"}, {"body": "experiencing chrome dev tools behavior jquery adds transient id make sure selection works properly", "d": "12/2016"}, {"body": "want remove deprecate", "d": "12/2016"}, {"body": "ca nt deprecate something documented deprecated", "d": "12/2016"}, {"body": "mgol still like give notice undocumented functions plan removing required might call courteous", "d": "12/2016"}, {"body": "concrete issue reported want us look please point examples pieces jquery code consider incorrect succint explanations wrong case", "d": "12/2016"}, {"body": "hard cut amp paste htmljs example htmlentitied example clearer using fixed width font still count pipes result amp test nested table td border solid bbb tr height minheight td width minwidth trnested height minheight document ready function function rows var var lt x n return var n var lt n rows n n main append nt happen dynamically add table body first body append n n div main html n n row gets appended nested main xx n main append", "d": "12/2016"}, {"body": "appears incorrect reference triggered plain tags inserted dom filling table one rows inserting dom reference still pointing previous table gets correctly updated static html tag template data gets provided insertion dom either adding inside triggers reference update used workaround", "d": "12/2016"}, {"body": "github uses markdown wrap code triple backticks even specify language", "d": "12/2016"}, {"body": "leonardjo instead create live example js binjsfiddleetc post link live examples better easily explore issue investigation", "d": "12/2016"}, {"body": "splitting example html css js parts works like charm jsbin cut paste whole thing cut css paste box cut js paste box paste remainder html box remove ref jquery add one drop please cut paste html file open browser hard wish create account jsbin required save bin get work jsfiddle immediately include jquery probably need account need jsbin please add testing jsbin appears bug also exists triggers adding plain tags either via static html append appending content always available adding tags seem cause table pointer correctly updated", "d": "12/2016"}, {"body": "used local includes nt think copy url jsbin provided example works jsfiddle", "d": "12/2016"}, {"body": "thank cleaned determined issue duplicate next release include fix", "d": "12/2016"}, {"body": "since svg nt focus jquery html library generally nt support nt think bug however want use jquery set svg property add cssnumber note nt maintaining branches anymore even add would go future branch writing code plugin needs work older versions would need add anyway", "d": "12/2016"}, {"body": "thanks patch jquery fillopacity svg specific believe cssnumber sure would nt strokeopacity well", "d": "12/2016"}, {"body": "large list svg css properties definitely others like strokemiterlimitfillopacity mistake imo unless going go add ticket added unit test nt use svg also clear list used pass real number rather string strings always unmolested always convert string discussion want avoid whole mess", "d": "12/2016"}, {"body": "thanks report future please post test cases jsfiddlenet jsbincom immediately see work however ca nt reproduce problem methods give identical results going close issue tweak test case show bug reopen", "d": "12/2016"}, {"body": "see browser automatically follows redirect jquery kind anything except seems new api wonder heck docs say request successful status code functions take parameters success callback results error including redirect take parameters error callback ever possibly happen", "d": "12/2016"}, {"body": "according xml follow redirects transparently cases jquery see instead see response status code redirect destination however spec also says redirect following limited origin url conveyed location header origin xml origin redirect violate infinite loop precautions transparently follow redirect observing sameorigin request event rules perhaps origin differs might infinite loop redirect status code would exposed", "d": "12/2016"}, {"body": "jquery properties objects retrieved via via ad bare dom read info", "d": "12/2016"}, {"body": "thanks report test cases modified log console instead alerting include performance metrics also swapped jquery really old jquery jquery native promise concerning jquery performance really suffers code simple yet first done callback invoked milliseconds chrome lot edit nt see performance issues locally maybe jsfiddle intervening somehow", "d": "12/2016"}, {"body": "impression sideeffect think edit right still leave issue open add proper test one", "d": "12/2016"}, {"body": "main issue mixing single multipleargument calls cf yet although great idea use legacy method callback registration care promisesa short answer nt guarantee callback execution order across deferreds case recovered dropping unnecessary jquerywhen introducing dummy argument", "d": "12/2016"}, {"body": "must something else switched back second also working", "d": "12/2016"}, {"body": "longer maintaining versions believe nonissue current codebase xml transport onload handler maps sending ajax callback please report back mistaken", "d": "12/2016"}, {"body": "namespace used event documented event originated browser never namespace namespace given event handler attached looking information part application probably deep jquery implementation details namespaces useful way selectively detach events without interfering handlers element rarely useful inspect discriminate namespace native events handled", "d": "12/2016"}, {"body": "without reproducible testcase nothing unfortunately note though node hidden might return incorrect result see additional notes value reported width guaranteed accurate element parent hidden get accurate value ensure element visible using width jquery attempt temporarily show rehide element order measure dimensions unreliable even accurate significantly impact page performance showandrehide measurement feature may removed future version jquery", "d": "12/2016"}, {"body": "seems like ca nt fix side fuweichin idea could fixed", "d": "12/2016"}, {"body": "suggested solution resetting type works considering ca nt reset form element using jquery api usually done natively nt think cover jquery solution thinking adding reset hook big side effect setting value think solution plugin best jquery plugins deal forms aware bug address nt think something address core", "d": "12/2016"}, {"body": "please look programming help stack overflow turns really bug jquery please create test case jsfiddlenet jsbincom link reporting issue", "d": "12/2016"}, {"body": "tldr support array input method work selectors dom element references jquery objects alike tests show array input works dom element references", "d": "12/2016"}, {"body": "added test cases show works", "d": "12/2016"}, {"body": "maybe best portability work level nested arrays see test case", "d": "12/2016"}, {"body": "behavior documented believe signature quite complex enough probably nt even mentioned since redundant want test array might include nonelements recommend converting jquery collection", "d": "12/2016"}, {"body": "agree confuses signature start accepting different things array case doubt works property wanted accept jquery collections", "d": "12/2016"}, {"body": "agreed cleaner explicit user convert array nt want make api even magical allowing mixed type arrays", "d": "12/2016"}, {"body": "please provide either test case demonstrating bug concise description requested change free side notes historical references note try return subpixel values applicable etc insufficient", "d": "12/2016"}, {"body": "please provide either test case demonstrating bug concise description requested change nt bug though clearly issues years including still exist mentioned documentation one performance clarity potential improving clear concise description requested change prolonged bits code big part described problem free side notes historical references benefit recurring theme issues opened last two weeks nutshell trying deal bugs taking time would better used analyzing causes perpetual presence bugs one code clarity main point making one example way tries handle html xml elements clearly need restructuring get shortly fork furthermore related comments obviously date note try return subpixel values applicable clientwidthoffsetwidthetc insufficient argue trying return values would make already muddled interface even worse leave wrapper example point method returns value redundant confusing particularly developers familiar would likely appreciate easy access properties like without tack array subscript something think future issues handled present even want add yet another wrinkle involving possible subpixel dimensions bulk arguments still valid really read including notes historical context wait update fork related changes", "d": "12/2016"}, {"body": "recurring theme issues opened last two weeks yes disincentivizing us consider offering remedy example point method returns value nt always return value ignores", "d": "12/2016"}, {"body": "yes disincentivizing us consider offering remedy completely backwards think really care whether actually use stuff trunk fork going diverge wildly point anyway idea carefully considering saying implementing recommended changes project benefit long run remain bug fix treadmill crystal clear ten years stuff making one last attempt get thing smoother path tired bad example behavior nt always return value css width ignores borderbox short unlike computed width computed width regardless box model cases others still others neither perfectly okay characterization ignoring particular box model wrong mentioned quoted comment either wires crossed something profoundly wrong andor methods look shortly certainly appears contradicting documentation difference css width width latter returns unitless pixel value example former returns value units intact example width method recommended element width needs used mathematical calculation edit see note width always return content width regardless value css boxsizing property side note documentation full little caveats like okay see getting though characterization issue backwards problem event cares used really need know dimensions simply get computed borders padding math suggested next line documentation jquery may require retrieving css width plus boxsizing property subtracting potential border padding element element boxsizing borderbox avoid penalty use css width rather width", "d": "12/2016"}, {"body": "idea considering saying implementing recommended changes benefit long run remain bug fix treadmill bugs matter ones users library reported appreciate help", "d": "12/2016"}, {"body": "bugs matter ones users library reported appreciate help sure would different agendas moment nt stand reason clean code fix things potential create bugs make fixing bugs precarious timeconsuming see gradual decrease number bugs reported less cases bug fixes lead new issues granted user library reports indeed contain bugs trouble getting closed bugs even discussed let alone understood lesser bugs nonuser reported anyway never set aside time deal bigger issues smaller issues become plentiful eventually overwhelm us seem know quandary trying help understand fix big picture long time", "d": "12/2016"}, {"body": "lesser bugs nonuser reported actually yes soon actually impact someone using library look pain causing determine priority impact compatibility", "d": "12/2016"}, {"body": "anyway never set aside time deal bigger issues smaller issues become plentiful eventually overwhelm us seem quite fair assessment one person overwhelming bug tracker moment manufactured situation fewer open bugs project installed base jquery pretty darned good", "d": "12/2016"}, {"body": "actually yes soon actually impact someone using library look pain causing determine priority impact compatibility bug bug regardless reports nt better squash bites others assuming nt already realize many bugs go unreported users simply go around getting try replies stackoverflow random experimentation discussing far present bugs talking profound easily correctable mistakes inhibit fixing present bugs well cause future bugs furthermore actually presenting solutions cases code", "d": "12/2016"}, {"body": "quite fair assessment one person overwhelming bug tracker moment manufactured situation got wrong end stick certainly referring reports rather rest asserted taking much time time left discuss anything else", "d": "12/2016"}, {"body": "see straighten mess remove odd caveat regarding methods documentation methods like simple enough require asides starts making simply parse number string returned function corresponding styles innerouter varieties way even involve fractions pixels mentioned left function also realize fractions pixels matter odd cases calculations may lead rounding errors ceiling single pixel worth making every dimensionrelated function slow complicated issueprone sake fractions pixels instead requiring user perform additional calculations results using border box model currently documented either use box models intended math results going grain eg trying find width element uses content box model clearly user nt know box model using implications results functions wo nt much meaning anyway demonstrate fork deprecate existing methods add others usual way preserve compatibility correcting longstanding design issues may break compatibility know changes nt going get merged anyway certainly calling parsing converting subtracting computed border widths nonstarter similar scenarios exist rest numbers wo nt add demonstrate trying simulate box model without padding results always differ weird fractional values chrome might expected trying calculate subpixels subtracting parsed styles simply useful", "d": "12/2016"}, {"body": "innerouter varieties way even involve fractions pixels mentioned left css function personal opinion people need subpixel values slightly slower integer ones going give already decided", "d": "12/2016"}, {"body": "agree proposed changes eliminate pull request welcome", "d": "12/2016"}, {"body": "sure fork current state would create another fork expect change came eliminating bigger issue dozen changes fork point might easier somebody else fix based suggestions case one closed due prematurely reason", "d": "12/2016"}, {"body": "calls method instead attempts figure offset element document origin would equivalent computed styles small subset cases see emphasis mine get current coordinates first element set matched elements relative offset parent test case needed logic clearly incorrect position tolerated claiming existence bug onus upon demonstrate", "d": "12/2016"}, {"body": "see emphasis mine get current coordinates first element set matched elements relative offset parent granted must method mind regardless invalidates portion issues raised ticket nt believe second method sufficient look add concerns related method side note method names confusing always vs clearly lead wasted time excuse certainly related lesson position tolerated claiming existence bug onus upon demonstrate something clearly wrong code logic eg function appropriate substitute rtl documents evidence gathering strictly secondary concern often close tickets prematurely without sufficient discussion points raised issues always bugs reproducible presently supported browsers may indicate potential future issues ca nt see wasting time test cases page agree address contained issues either understand code nt made one mistake one points still clearly valid ticket closed glad nt bother getting far example issue missing styles test case needed simply omission code nt quite sure nt miss writing test case prove code missing", "d": "12/2016"}, {"body": "quite sure nt miss writing test case prove code missing making noise recommend nt report bugs willing provide test cases", "d": "12/2016"}, {"body": "making noise figure simply hooks would take search jqueryjs right bottom one line know nothing issue hand test case needed prematurely closed ticket certainly going write one repeating comment hook emphasis mine side note wonder happens percentages would nt surprise leave speculation moment furthermore address previous objection see emphasis mine get current coordinates first element set matched elements relative offset parent nt even need look code realize inference fixes central issue raised false example elements style would finding offset relative offset parent help handle edge cases work coincidence obvious strategy fail far often works really need test prove regardless definitely writing test cases closed tickets ca nt see point closing tickets discussed point everyone understands issues raised well proposed solutions accounting thing recommend nt report bugs willing provide test cases told best place discuss proposed changes seeing seeing lot confused kneejerk reactions complaints taking time easy solution", "d": "12/2016"}, {"body": "told best place discuss proposed changes seeing unlike code reorganizations proposed ticket purports describe bug calls behavior change nothing sort would accepted without unit tests pointless even start changing code without demonstration problem willing provide test cases bug reports almost certainly closed makes sense file provide one reopen issue", "d": "12/2016"}, {"body": "unlike code reorganizations proposed ticket purports describe bug calls behavior change well adding code clearly nt exist look code jqueryjs see hooks styles code comment quoted indicates bug trying fix found exclusively styles nt take comment realize would case elements positioned percentage styles would also dig browser actually displays quirks alleged fixes try deal rest really need test determine finding offset positioned parent equivalent position style makes sense fallback much simpler agree logic cases wrong obviously wrong tests could ever disprove matter many browsers documents try test common theme browser scripting bugs inconsistencies come go time rtl issues clear styles reversed documents parts documents going account closing ticket indicates none issues valid amount testing prove problems result solutions never developed point try make issue tracker score look better like saying ca nt see bugs bugs ca nt see us hand ticket left open perhaps somebody undertake prove obvious stated repeatedly developing tests tickets prematurely closed nothing sort would accepted without unit tests unit tests added agree exactly trying fix agree code corrects problems logic done several tickets prematurely closed unit tests added insure regressions fixes result future changes", "d": "12/2016"}, {"body": "unit tests added agree exactly trying fix yeah trying fix user reported bug", "d": "12/2016"}, {"body": "yeah trying fix user reported bug see much explanation necessary summarize glaring omission style hooks way position elements obvious mistake using method fallback failed computing styles one example wo nt work another method going include margins whereas obviously separate styles another obvious mistake thinking appropriate figure styles rtl documents parts documents questions issues ask explanation discussing issues learn helps avoid repeated mistakes future fixing issues prevents compounded future closing tickets without much question productive previous comments conclude watching bug tracker scoreboard trying make score look respectable anyway best try fix bugs get users sort backwards quality control strategy waits customers already affected upgrade huge complicated monolithic dom library fix problem never mind may well pick new bugs process code constant state flux waiting around user complain pointless first look answer stackoverflow get dozen try responses involve jquery methods others bypass jquery entirely tacking subscript object calling dom methods event remain blissfully ignorant problem besides appears perpetual backlog count two people working issues currently open would nt try avoid queue go guess stackoverflow", "d": "12/2016"}, {"body": "see little evidence teamwork person reports issue nt work ticket simply closed without discussion nobody else bother pick ca nt see point sweeping bugs rug matter many open given time able prioritize allocate resources accordingly", "d": "12/2016"}, {"body": "see little evidence teamwork person reports issue nt work ticket simply closed without discussion nobody else bother pick agree work needs done matter many open given time able prioritize allocate resources accordingly encouraging focus bugs users library reporting theoretical bugs performance issues nobody encountered worth time triage fix", "d": "12/2016"}, {"body": "agree work needs done still nt agreement issues encouraging focus bugs users library reporting closing tickets instead prioritizing discourages others working bugs fall cracks likely big part code ended present state theoretical bugs performance issues nobody encountered worth time triage fix theoretical bugs nt understand nt make less real way know nobody encountered explained repeatedly well nt take time triage nt close somebody takes time understand", "d": "12/2016"}, {"body": "user reported bug fixing bug determined moment user report bug somebody find bug reported user means problem never occurred user trying understand process workflow experience see users including developers never report bugs instead fix locally need quite fast nt want wait specific ownersgroup people fix", "d": "12/2016"}, {"body": "user reported bug fixing bug determined moment user report bug biggest problem issue amp many others conflates many issues one clear effects requested changes really hard follow issues promote digressions discussion someone reports separate issue clearly requests one api change clear succint description preferably short code snippets showing change consider experience see users including developers never report bugs instead fix locally need quite fast nt want wait specific ownersgroup people fix true issue affects many people someone usually report end ca nt secondguessing users library", "d": "12/2016"}, {"body": "biggest problem issue amp many others conflates many issues one clear effects requested changes one hook related styles really hard follow issues promote digressions discussion jquery code tangled mess many places digressions occur feel free open additional issues see fit opposed closing door someone reports separate issue clearly requests one api change clear succint description preferably short code snippets showing change consider closing ticket precludes sort teamwork issue bother read closed users could expected provide code snippets potential solutions linked old primer demonstrates quite clearly figure styles without using problem hook question trying solve true issue affects many people someone usually report end end ca nt secondguessing users library mean coders therefore must able spot invalid logic makes way users least must proactive fixing bugs already made public nothing secondguessing sort guessing jquery users likely assume something wrong generally unlikely recognize bugs interfaces vague names often confusing results eg easily used misunderstood method furthermore even recognize odd result idea come straight report ridiculous users particularly jquery users often guessing rearranging patterns seem work fewer still able describe issues beyond nt work provide clear test cases ca nt abdicate responsibility finding reporting bugs users particularly silly case already found mistakes", "d": "12/2016"}, {"body": "ctomczyk davidmark anyone else provides test case demonstrating bug reopen issue", "d": "12/2016"}, {"body": "\uc624\ud6c4 richard gibson notifications githubcom\ub2d8\uc774 \uc791\uc131 closed receiving subscribed thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "davidmark anyone else provides test case demonstrating bug reopen issue still nt understand issues described one reopen issue perhaps somebody continue work tired nonsense leave closed assure nobody work", "d": "12/2016"}, {"body": "bug report finishes test case needed logic clearly incorrect already starting wrong foot start test case clearly fails talk whetherwhy code wrong fix test case end unit tests happy", "d": "12/2016"}, {"body": "bug report finishes test case needed logic clearly incorrect already starting wrong foot really able agree logic wrong without seeing fail test case recurring theme never mind starting long past starting ticket closed solution reopen maybe somebody work long stays closed nobody going work particularly closing ticket tells everyone may interested helping move nothing see start test case clearly fails talk whetherwhy code wrong fix particular case makes think supported browsers even run bs hook code already know test fails outside recent versions handful browsers rejected irrelevant result hook never even runs today remain code nt fail tests current browsers follow ca nt rely test results everything actually understand code analyze test results solution propose remove whole mess run current unit tests whatever narrow range browsers consider supported see happens nobody going anything closed ticket", "d": "12/2016"}, {"body": "nt bothered going back ready related discussions please explicit design decision good starting point", "d": "12/2016"}, {"body": "please explicit design decision know illadvised decision sure really justifying something like glance linked issue", "d": "12/2016"}, {"body": "looked expected still thoroughly disagree ready callback throws exception bets callbacks period point idea state application document developer debugger looking stopped code traversing stack trace looking variable values etc determine went wrong callbacks muddy waters", "d": "12/2016"}, {"body": "seems bundling together many opinionated changes interested reviewing core please submit pull request without reference changes comparison changes", "d": "12/2016"}, {"body": "seems bundling together many opinionated changes interested reviewing core please submit pull request without isarrayisplainobject reference changes comparison changes noted one directly related prematurely closed issue part rewrite involves embedding slimmed version last barrier deprecating method main point neither mentioned changed extant calls method surprise already using method expect jqueryisarray deprecated", "d": "12/2016"}, {"body": "part rewrite involves embedding slimmed version last barrier deprecating method main point may motivation embedding vs referencing extant independent change may well choose accept changes without anything regarding neither mentioned changed extant calls method surprise already using method expect jqueryisarray deprecated indeed mistake action required", "d": "12/2016"}, {"body": "may motivation embedding vs referencing extant independent change may well choose accept jqueryextend changes without anything regarding jqueryisplainobject agree could separated fork would backtracking also see changes made better deprecated", "d": "12/2016"}, {"body": "closing per davidmark comments", "d": "12/2016"}, {"body": "closing per davidmark comments simply said nt backtracking fork clearly free want trunk", "d": "12/2016"}, {"body": "optimizations always considered see need keep issue open external demand necessitating change", "d": "12/2016"}, {"body": "optimizations always considered see need keep issue open external demand necessitating change nt need wait user complaints make improvements one getting rid inappropriate overly complicated obviously troubleprone function motivation needs come within understand time limited due neverending stream bugs stopping moment consider deal root causes pay dividends helping prevent future issues might learn experience well", "d": "12/2016"}, {"body": "nice catch thanks", "d": "12/2016"}, {"body": "lines around long time remember least trying remove finding current safari webkit still needed review blame file determine history probably related tickets several years old may take time find person advocating nonessential change show safe", "d": "12/2016"}, {"body": "lines around long time remember least trying remove finding current safari webkit still needed aware around long time please nt shout spend time later trying see offending lines could removed problem nt fixed properly time identified iirc yet another case wanting add line two due file size concerns however related feature test would removed result net would push worst mentioned posted solution several years ago usenet relayed resig decided use famously went attack character repeatedly another sad story history project though result add extra line try support different area code javascript var parent elemparentnode get function elem look carefully bug getter setter agreement implement noop hack established old mystical incantations needing incorrect review blame file determine history probably related tickets several years old may take time find need provided enough information post fix code without going back searching original proposed answer provide fix nobody comes hint solution simply delete noop lines though certainly vanish along indirect feature test pulling back bit posted snippet see context provides another clue javascript selected function elem accessing property makes selectedbydefault options safari work properly elemparentnode elemparentnodeselectedindex terse ambiguous comment bit oddly stated well exactly mean makes selectedbydefault options safari work properly rhetorical question hopefully know exactly hack trying accomplish discussed forum several years ago person advocating nonessential change show safe answer posted clear assurances needed basic logic problem usually case browser scripting gathering empirical evidence evidence proves nothing certainly talking unevenly applied mystical incantation testing comes logic clearly fixed figure existing unit tests added bet house wo nt needed thoroughly disagree nonessential change identified inconsistency use feature test result well indirect nature test words existing hack nt even applied consistently indicates unit tests either incomplete never run environment featuring quirk trying spackle additionally would difficult determine anyone ever bitten bug actually took time complain stackoverflow usenet etc would likely taken form nt work perhaps try suggestion helped get around recurring themes", "d": "12/2016"}, {"body": "anyone anyone know effects", "d": "12/2016"}, {"body": "sorry let repeat asking want make changes code bugs currently open please homework go back look browser bugs caused seemingly meaningless lines put source longer needed browsers occurred longer supported remove otherwise check list bugs reported users library see help", "d": "12/2016"}, {"body": "sorry let repeat asking want make changes code bugs currently open nt listening analysis trumps evidence gathering ie nt release code seems work coincidence customers nt want guinea pigs ca nt relied upon report every odd quirk encounter please homework go back look browser bugs caused seemingly meaningless lines put source already said responded solution remove lines replace logic makes sense need homework posted solution discussed forums several years ago longer needed browsers occurred longer supported remove wrong end stick browser scripting done proactively anticipate issues tend come go browsers create fix inconsistencies otherwise check list bugs reported users library see help treadmill project decade big reason code state", "d": "12/2016"}, {"body": "current code base bit clear explanation thanks analysis though would help would nt verbose next time though", "d": "12/2016"}, {"body": "current code base bit clear explanation cited code certainly still appears exactly cited lacking check flag well consideration includes old comment unspecified safari version code looking please nt bother splitting hairs saying code technically part sizzle jquery included jquery build repo fact may need updated elsewhere irrelevant waste time bring stage guessing meant current codebase remark event code linked nonsense discussed resig others several years back cited nothing changed although look carefully hack even applied evenly also mentioned furthermore ridiculous think hack anything like required setting selection short bunch voodoo nt even consistent application correct logical solution discussed forum years ago gave enough hints somebody come beyond belief nobody made slightest effort understand issue let alone suggest look correct solution thanks analysis though would help would nt verbose next time though verbosity issue comes repeatedly explaining thing responses repeatedly miss point one cycle code complete nonsense regardless attempts rationalize correct solution posted several years ago dismissed might added line two responses far nobody addressed point ticket prematurely closed nt expect anybody else consider issue also correct code eliminate need flag associated code entire solution actually reduce code size seems major focus almost exclusion concerns", "d": "12/2016"}, {"body": "guess spell answer q trying fix example q missing none elements attribute first implicitly selected q issue browsers known delay setting property implicitly selected old problem typically nt issue unless trying reference property document ready q first lose indirect feature test using disembodied second get rid hack set property clearly longer issue third get rid hack well simply discards answer finally andor method change way check whether selected hinted hack references throws away property property answer problem determining whether selected javascript var isoptionselected elselect elemparentnode elselecttagnametolowercase optgroup elselect elselectparentnode isoptionselected elem elselectoptions elselectselectedindex see makes logical sense deducing value using property opposed throwing away correct solution long attribute solution required multiselect implicitly selected options controls leave check exercise could also add check elements parent would nt bother getting setting property element makes sense ps worried performance browsers display quirk add direct feature test use result andor duplicate sizzle", "d": "12/2016"}, {"body": "guessing meant current codebase remark meant still sizzle repo sizzle jquery different projects differences important case important planning remove sizzle dep entirely browsers known delay setting selected property implicitly selected option old problem typically nt issue unless trying reference property document ready start testcase jsbinjsfiddle others trying tell first lose indirect feature test using disembodied select second get rid set hack set property clearly longer issue third get rid get hack well simply discards answer pull requests new tests without falling old tests code linked nonsense discussed resig others several years back cited nothing changed although look carefully hack even applied evenly also mentioned avoided since important information tend get lost supply philosophy irrelevant stories etc see", "d": "12/2016"}, {"body": "meant still sizzle repo sizzle jquery different projects differences important case important planning remove sizzle dep entirely ticket definitely planned create dump sizzle eliminate obvious problem raised sync bit late course good finally dumping thing meant nt say last thing need riddles also importance jquery builds web incorrect code rather brush obvious bug technicality would suggest discussing fixed across three major versions regardless repo code originally comes worry removing sizzle doubt going happen time soon obviously never versions start testcase jsbinjsfiddle others trying tell others saying saying really nt think good idea remove hack closed ticket understanding nt suggesting tenth time new audience implying logic needed replaced something made sense need understand lack failing test nt imply code makes sense wo nt fail future browser scripting involves analysis anticipation reviewing test results current browsers pull requests new tests without falling old tests need new test cases behavior change suggested original unit tests confirm used browsers actually quirk end story ticket closed nobody seemed understand issue thought saying remove hack closed nobody going work including pull requests nothing get avoided avoided appear quoted wrong bit response avoided discussing issue resig several years back definitely important many arguments mention go back review history issue confusedly thought suggesting removing hack without replacement mentioned repeatedly see answers right pointed instead telling go back would better follow lead review original issue proposed solution already knew posted perhaps mean avoided posting answer everyone else else refused go back look history mentioned nt really matter ticket closed want learn something history thread starts turns issue post matt kruse note matt states quite clearly start thread relaying suggestions kept telling wasting time telling go back read history words course know wrote book find rationale even bug discussed anyone point curious resig answers posts later hmm nt remember bug offhand reproduction failing passing later matt resig discussed halfbaked fix issue hack discussing seven years later mentioned repeatedly new test cases needed even dmethvin mentioned tried remove replace hack got unit test errors mention new test cases needed tickets referenced well filed fixed filed fixed note resig took half suggestions rejecting one mentioned start ticket replace hack logic makes sense code right first post almost exactly suggested comes paragraph matt starts discussion colleagues better approach identified would whoever else related clj discussion yes clj group resig refused read refused hear times insisting nobody could mention suggested solutions originated usenet group one reason obvious junk code remains jquery day addition resig else present first thread none dmethvin yes dmethvin guy singlehandedly stalled ticket closed insisting go back find history would confused code back would roughly another three years main subject thread ahem fixed well attempted reverted never know even getting junk point learn opening exchange kruse resig matt opens recounting numerous issues one code reviews know ones resig never read warned others avoid matt provided links review old attributes primer resig responded much way others responded ticket three first four sentences specific examples see", "d": "12/2016"}, {"body": "jquery historically exposed guts allowed spiesmocksetc undocumented methods already made actually private explicit design decision point would valuable little", "d": "12/2016"}, {"body": "jquery historically exposed guts allowed spiesmocksetc undocumented methods already made actually private late jumping hoops work modular frameworks exposing way renders modularity moot developers may think creating apps safe meddling fact basement door wide open nt personally care one way nt rely frameworks personally nt see way make browser scripts immune meddling outside particularly rely dom ironic see jquery paired things angularjs", "d": "12/2016"}, {"body": "public function nt see need privatize call privatized version nt experienced many problems design decision", "d": "12/2016"}, {"body": "resolved", "d": "12/2016"}, {"body": "jquerymerge public function nt see need privatize call privatized version nt experienced many problems design decision completely missed point closed issue prematurely suggest read issue everything export object public nt mean reference functions way defeats purpose using modules similar situation exporting calls commonjs nodejs module break module example count ten calls clearly good idea allow outside code change behavior function delete use modules first place going reference global shared variables within module idea link documentation supposed prove certainly adds support assertion public function method somehow immune modularity rules unclear suggest ask questions rather simply closing issue recurring theme", "d": "12/2016"}, {"body": "resolved think", "d": "12/2016"}, {"body": "seems like thing would happen without jquery ca nt stop building invalid html however test case pretty large would possible reduce even lot going", "d": "12/2016"}, {"body": "ok one kind cool appended table contains inner table one try find contain incoming row mistakenly use one inner table straightforward fix", "d": "12/2016"}, {"body": "thanks digging", "d": "12/2016"}, {"body": "invalid tbody required tr comes right table", "d": "12/2016"}, {"body": "shyliontjmn first glance looked like unclosed tag something dug jquery bug", "d": "12/2016"}, {"body": "ok thanks", "d": "12/2016"}, {"body": "seems indeed duplicate issue commit fixes issue see thank", "d": "12/2016"}, {"body": "know return something different depending collection approach trademark jquery early design fan continuing tradition especially case get information via works way back jquery strong argument gettersetter api might make sense nt think applies case", "d": "12/2016"}, {"body": "dmethvin comment sensible hard argue kinda want argue anyway might worth like see examples return values", "d": "12/2016"}, {"body": "timmywil one example html name suggests running produces nodes", "d": "12/2016"}, {"body": "put together js templatenodechildnodes gt nodelist templatenodecontentchildnodes gt nodelist text elements templatenodecontentchildren gt htmlcollection", "d": "12/2016"}, {"body": "discussed one given solution short currently return empty list fix something like", "d": "12/2016"}, {"body": "techquery would like pr", "d": "12/2016"}, {"body": "note careful make contents stop inert running need test ensures happen example could create tag containing script onload handler making sure none fires", "d": "12/2016"}, {"body": "timmywil like make new pr issue one question branch commit", "d": "12/2016"}, {"body": "techquery master nt maintain versions amp anymore", "d": "12/2016"}, {"body": "thanks report safari first part comment applies browsers create mouseenterleave events using mouseoverout eventtime checks event delegation works jquery pointerenterpointerleave pointeroverpointerout see also", "d": "12/2016"}, {"body": "somewhat related question browser scrolls initialization sequence consistent standard across browsers test chrome firefox edge safari", "d": "12/2016"}, {"body": "also since expecting code run page load might well scroll element code work browsers", "d": "12/2016"}, {"body": "issue happen jquery firefox jquery chrome jquery firefox issue happen jquery chrome sample code demonstration creating dynamic element directly using angularjs create dynamic elements indirectly", "d": "12/2016"}, {"body": "might jquery ready callbacks fire little later changed deferreds implementation lot think dmethvin right even though worked fine jquery might coincidence maybe people nt work even think need wait element appear use angular anchorscroll service scroll proper element", "d": "12/2016"}, {"body": "interesting definition browser suppose scroll element represented fragment identifier document loaded however decide tell document loaded well defined cross browsers least nt see seems happens domcontentloaded events however seems things changed jquery yes agree even jquery safely say document ready saw jquery might chances ready function could triggered timer solution allow application handle fragment identifier instead rely browser behavior inconsistent wo nt call regression anymore", "d": "12/2016"}, {"body": "want programmatically scroll specific element use popular jqueryscrollto nt think need core would much code case since using angular anchorscroll service would better solution going close issue please see decide whether include something core thank time", "d": "12/2016"}, {"body": "works try tweaking fiddle recreate failure", "d": "12/2016"}, {"body": "since response owner ticket quite time closing", "d": "12/2016"}, {"body": "hello sorry toolong look fiddle sorry bad link", "d": "12/2016"}, {"body": "abridged summary happens construct nodes html text identify temporarily disable contained script elements insert nodes dom script order reenable indocument already evaluated evaluate case first script invokes jquery ui ancestor later scripts evaluated applies dom manipulation process assumes indocument script elements already evaluated case static content marks accordingly time outer call gets around looking later script inner call already marked evaluated skipped weight code required fix issue probably great us justify adding especially since script evaluation undesirable legacy behavior easily worked around moving scripts outside manipulated ancestor", "d": "12/2016"}, {"body": "ignoring second part logically separate issue fine switching type check object string provided nt increase gzipped size jqueryminjs", "d": "12/2016"}, {"body": "ignoring second part logically separate issue fine switching type check object string provided nt increase gzipped size jqueryminjs thanks yet done thing brain sample required changes deprecated eventually deleted easily make additions incurred idea checking every commit see whether added bytes file size wrong premature something call premature counting bytes like checking gas level ounce every time hit stop light leave trend develops likely downward one fork plenty fat trim project time increased factors weigh size increases eg code clarity performance anyway round two", "d": "12/2016"}, {"body": "second one easy well method javascript var prefix add function key valueorfunction clearly three possibilities though comments mention one infer two array object object object constructed jquery object object constructed jquery objects prototype chain objects bad variable name leave moment line checks either array something object constructed base object object constructor call fancy object truthy property fairly poor duck typing inference clearly require next line arraylike object apparently assumed contain references form controls direct inference get future issue fair enough still make assumption contents arraylike object simply documented passing variation jquery object eg containing document reference lead undefined behavior know come head frames short answer frameset unlikely document another jquery would required jquery deals single window time would simply use frame would nt make sense pass jquery object constructed one frame another frame event could documented though would nt bother function would still work provided frame object illadvisedly augmented words would take perfect storm incompetence part caller break hand trivially easy break original indirect inference finally let dump reference straightforward eliminate javascript var prefix add function key valueorfunction leaves three go one require little inspection thought first two due overloading involving host objects two appears variation old function expect two fixed first leave single function calling matter insidious function appears truly nightmarish code appropriate bits simply folded deprecate eventually drop yes may increase code size temporarily sometimes cost progress important get design right first time ultimately net decrease removed mention creeping towards extinction along though far slowly dozens references look next one time confirmation page changes", "d": "12/2016"}, {"body": "appropriate bits isplainobject simply folded nt boilerplate seems odds claim net size reduction willing proven wrong", "d": "12/2016"}, {"body": "also compatible separate instances jquery unacceptable canonical method detecting jquery collections", "d": "12/2016"}, {"body": "isplainobject nt boilerplate seems odds claim net size reduction willing proven wrong feel quite sure wo nt require every line function eliminate call hand wrong still leaves performance clarity benefits latter makes code easier debug maintain seriously doubt increase size due proposed changes overshadow benefits see let know round", "d": "12/2016"}, {"body": "also instanceof jquery compatible separate instances jquery unacceptable jquery canonical method detecting jquery collections read dueling scenarios existing one trivial break however canonical consider test would require bizarre turn events including using separate instances even worth considering clear makes sense furthermore allowed pass nonarraylike fancy objects truthy property seems complicated document name allowing one instance jquery call another method makes head hurt thinking regardless make direct inference determine arraylike object containing form control elements simply arraylike object clearly assuming contents perhaps validate jquery object something like note calling way cover odd chance lacks prototype case object would actually make sense think check tomorrow best luck ps one hint augmented jquery break many places due unsafe forin loops", "d": "12/2016"}, {"body": "canonical could check object property definitely require makes check explicit allow", "d": "12/2016"}, {"body": "jqueryparam makes isplainobject check explicit allow jqueryparam jquery value see edited response sorry nt notice new reply interim", "d": "12/2016"}, {"body": "found line interesting light previous discussions canon context context instanceof jquery context context clearly canon consistent throughout", "d": "12/2016"}, {"body": "three go snippet mistakenly said earlier two calls one remaining two javascript handle html array match context context instanceof jquery context context handle id else line play case html string representing single tag element fact object properties representing ahem attributes whatever names values days believe mostly dom properties html attributes xml another long complicated story irrelevant problem hand attempting discern clue line apparently document element something else allowed case appears possibilities beyond host object include object anything else would lead undefined behavior well throw jquery lumps two together type checking arguments let say something falsey eg values element document host object object representing properties attributes set single element idea sort test need example function indicates seems easy solution eliminate simply asserting truthy also know appropriate property attribute set element would seem like simplest straightforward solution also consistent previous duck typing function furthermore allows fancy objects ie constructed something house namevalue pairs passed nt seem like common use case ca nt imagine reason objects disallowed never like see boolean type conversion host object properties known throw exceptions past history guide host object reactions appropriate let knock unneeded call javascript handle html array match context context instanceof jquery context context handle id else updated comment well correct wrong know set properties attributes depending dom type nt right somewhere around realized alone impossible make work added companion leaves calling simply identify bits still required add deprecate wait make sure objections suggestions diving one certainly get biggest performance boost particularly extending deep", "d": "12/2016"}, {"body": "let take step back exactly changes intended accomplish generally revisit code users report bugs performance issues refactoring code nt problems introduce compatibility problems requires time attention multiple people team members best time type refactoring region code reported issues refactoring helps resolve issue process makes code better dozen issues would great starting point changing code would also fix real problems users reported", "d": "12/2016"}, {"body": "let take step back afaik yet take step forward proposing several steps forward see takes us exactly changes intended accomplish explained clarity performance eliminating crutch isplainobject soon followed functions encourage poor design seen untangling code best hemmed design decisions date back decade likely never changed regardless making good progress long term expect reduce amount code well code size seems major focus generally revisit code users report bugs performance issues say led state code exactly define performance issue looking code seeing sorts unneeded function calls expensive furthermore untangling process identified inconsistencies eg use instanceof one place duck typing another try sniff jquery object inefficiencies redundancies code harder follow less clear makes harder document refactoring code nt problems introduce compatibility problems requires time attention multiple people team members sure define problems goes without saying refactoring code break compatibility requires time attention providing consider obscure inconsistent code problem document harder maintain clear consistent code every time go patch bug chance creating bugs tied clarity consistency code also know experience well reading code jquery relatively slow virtually everything remember jsperf comparisons posted comparing library coincidence know improve performance dojo several years back balked urge follow footsteps certainly nt lead forward dozen issues would great starting point changing code would also fix real problems users reported good luck bug fixes moment feel free use use whatever want explaining everything detail go really feel pat hand nobody complaining advise reevaluate position recall users reported real problems ua sniffing hand never shortage issues related specific causes never pinpointed complaints nt work variety code clearly hard follow underdocumented supposed myriad unit tests testers nt helping identify problems either code simply made sense sure seemed work per prescribed tests five years became clear tests simply insufficient diagnose problems design much code meet vaguely documented expectations coincidence hard follow expectations murky deviations simply written edge cases another coincidence related select elements pointed years ago still code today sure unit tests users yet complain code either though may well caused issues also dismissed edge cases sun spots problems phase moon etc get one perhaps somebody else go deal issue hand problem solution discussed public numerous times years ironically solution dismissed may added extra line two sound familiar resig could nt see evidence extant code nt work ie complaints problems philosophy design ca nt patched fit neatly tickets piling patches without longterm vision exactly code ends convoluted inconsistent much harder patch without creating new issues nt expect users evaluate clarity code performance either though may compare latter get similar libraries way stay ahead curve proactive digress moment dealing mostly crutch unable deal design issues created happily appears one go away entirely without changing api similar methods may go quietly see idea future methods crutches available require designs appropriate ecmascript browser scripting stay tuned", "d": "12/2016"}, {"body": "inspecting clear logic convoluted iterative mixin mashed recursive clonedeep two classic js functions spin recursive bit make simpler follow yes sure break issue least two well nt care mess method present state much simpler see splitting wrap isplainobject abatement split issue one likely renamed something like reduce dependency isplainobject second final nail also restructures really need third replace calls fine seems like able go commits perhaps change issue name reflect", "d": "12/2016"}, {"body": "see point old nature inherent problems nt necessarily show issues tests still bug reports led us refactoring code way john wanted long time however doubt removing documented method without obvious native equivalent point nt want go ripping guts method without bug reports motivate us besides may right needs discussed given limited time work volunteers decided like focus important issues based practical use cases may perfect wo nt considering changes moment thank contributions love like pick existing issue help", "d": "12/2016"}, {"body": "see point old nature attr inherent problems nt necessarily show issues tests still bug reports led us refactoring code way john wanted long time nt write blog post five years first mentioned design problem usenet review think quote along lines always suspected something wrong design problem required adding companion method lumping attributes properties one odd method never going work suppose point listened back also users best source information odd failures tend provide enough details code nt work history repeating may well reports failures related issues kicked could fallen cracks stackoverflow usenet years past wait get coherent bug report users see bugs right john wanted fix long time deprecate method replace two new ones suggested repeatedly usenet nt solution arrived five years later result project sorts new issues deal rightly criticized result quarters personally dealt projects frozen time supporting ie best simply using old version jquery old would nt work ie whatever aspired upgrade also seen projects could nt upgrade jquery new broke old code nobody involved knew black box even cause problems nobody reported anything fix advice always remove jquery equation nobody ever needed get set properties first place digress however doubt removing jqueryisplainobject documented method without obvious native equivalent point point deprecated removed time soon reason us users rely crutch nt increase code size much address concern well several related concerns uncovered dealing think nothing api would one unneeded function simpler removed future simply extraneous function nobody ever want need granted using internally main issue surely users well detriment nt want go ripping guts method without bug reports motivate us never suggested ripping guts simply deprecating methods require ripping due inconsistencies redundancies inefficiencies uncovered investigation issue though impossible unlikely get motivation fix issues due bug reports simply rare cases cause performance issues motivation fix things needs come within best motivation keep issues multiplying easier code follow easier debug misunderstandings lead creation new bugs dealing reported issues particularly concerned bugs flying radar unit tests also realize bugs unclear code silent failures call implies passed value could anything one function two cases could used used one however good reason use either case value question handful allowed possibilities hard follow inconsistent therefore difficult document users complicated test also find redundancy example cases test truthy value moving rest test certainly one first checks falsey values besides may right needs discussed given limited time work volunteers decided like focus important issues based practical use cases nt understand need close issue allocate focus contend reopened least finish time chime isplainobject may perfect wo nt considering changes moment never suggested changing one line suggest changes eliminate use internally elsewhere thank contributions love like pick existing issue help thanks could happen also volunteer work motivated given time right motivated wrap issue paste code fork whether ever gets merged irrelevant may also add additional issues springing one eg breaking strongly suggest everybody reread discussions carefully several mistakes uncovered see sense waiting around users report matter obscure cases may obscure less likely users report yet virtually everything jquery relies lowlevel functions eg furthermore suggested fixes brief simple review provided understand exactly code differs documented best luck", "d": "12/2016"}, {"body": "redid without splitting two turns would nt made much difference expected nt need near amount code needed bits slightly rewritten clarity speed private method deprecated javascript isplainobject function obj function used soon follow methods javascript eslintdisable nounusedvars conditionally created function used inside functions exists var deprecated null typeof windowconsole undefined amp amp typeof windowconsolewarn undefined deprecated jquerydeprecated function feature alternative alternative alternative please find another way windowconsolewarn feature deprecated alternative though used similar function could find code like exception handling likely restructure code share common function mentioned new rehab issue lessons learned investigation adjustment affected code indicative sort work required throughout project get treadmill nagging bug fixes see way regain maintain semblance relevancy problems unrelated theme eg multibrowser builds would pointless get basic issues addressed strongly advise reopening ticket even buy none clear mistakes inconsistencies uncovered previous comments read carefully top apparent", "d": "12/2016"}, {"body": "since jquery always execute callback asynchronously previously sometimes synchronously sometimes makes confusing api decided make uniformly async nt plan change behavior back hard finding issue get less stack trace jquery still see line threw error debugging nt harder example running dom ready jquery see jquery jquery version nt hide important information imo", "d": "12/2016"}, {"body": "hard finding issue get less stack trace jquery still see line threw error debugging nt harder debugging code stop immediately event one ready callback goes time halt possible reason continue code gone expected path goes callbacks debugging far better catch bug act inspect variables consider exceptions may occur sporadically case luck nt recur immediately comes experience debugging complex applications practical break caught exceptions debuggers allow option sucks caught exception allows rest code proceed possibly obscure cause ultimately comes catch ca nt think good reasons know experience plenty reasons catch", "d": "12/2016"}, {"body": "debugging code stop immediately event lot javascript happens asynchronously rule uncaught error async code nt stop code execution outside current async context nt lot jquery language ultimately comes catch already answered question want callback always invoked asynchronously instead sometimes synchronously sometimes nt plan change back thanks suggestion since seems issue making ready back sometimes synchronous nt plan going close", "d": "12/2016"}, {"body": "lot javascript happens asynchronously rule uncaught error async code nt stop code execution outside current async context doesnt lot jquery language completely false debugging ecmascript singlethreaded production still silly wrap callbacks trycatch ca nt imagine calling ready callbacks asynchronously either another story call synchronously asynchronously sure managing call synchronously perhaps referring happens inside callbacks digress already answered question want callback always invoked asynchronously instead sometimes synchronously sometimes nt plan change back none anything catching exceptions fact even important catch asynchronous operations cause likely harder track later ones sporadic well thanks suggestion since seems issue making ready back gt sometimes synchronous nt plan going close afraid completely missed point", "d": "12/2016"}, {"body": "one ready callback goes time halt gack nt want ready handler single point failure entire page previous versions caused lot trouble note also native domcontentloaded events behave way continue run additional handlers even previous ones throw errors aligning behavior possible reason continue code gone expected path reason modern web page code often nt written one person combination plugins code fragments work independently different parts page different ready handlers face hostile code ad blockers browser addons good chance something break combination browser platform addons want charitable donation form break rare failure tooltip plugin essential functionality page", "d": "12/2016"}, {"body": "tested nodejs see yet referring comment obviously depends order calls works expected global object time called chance augment either global object flag always set sure intended way always global object time called one created calling exported factory function two possibilities pass object augmented pass global object reference augmented makes lot sense global referenced like global variables calling module finally object global passed exported factory function global object window passed results correspond two difference two arguments must passed get second outcome seems cover every previous possibility adds particular interest ability augment global object calling module allows script reference browser code makes lot sense global object kept separate reflects fact object every environment clearly thoroughly documented", "d": "12/2016"}, {"body": "thank providing full thought process agree wrapperjs parameter poorly would accurate separate parameters might even better happily accept behaviorpreserving pr clean regarding behavior see code leads astray line javascript moduleexports globaldocument checks global document object browsers implies global reference global object however seen global may reference one three types objects window object browsers sort module object nodejs surely document property global object unspecified environments comments little help imply global references window object primary use case window object poorly named right line intended detect property global object ie parameter split suggested would quite confusing inconsistency end javascript else factory global know point moduleexports object nt know whether global object document object jquery fail soon references windowdocument argument name window core adds additional confusion actually primary use case mentioned like see made explicit wrapperjs refactor regardless lack means definitely engaged commonjsnodejs initialization therefore must window object succeed bigger issues require changes really allow passing global object reference window object factory function global object passed window object found property object made possible wrapperjs additional argument also added core script example likely used javascript expose jquery identifiers even amd commonjs browser emulators noglobal windowjquery window jquery strongly disagree refer example wrapperjs call add properties provided window object affect context environment anyone wanting free make call like context object initially windowlike bottom line despite naming flaws wrapperjs initialization working intended noncommonjs browser environment attaches function alias global commonjs exports function associated global attach nodejs exports factory function returns function resulting executing noncommonjs browser initialization provided window developed somewhat organically people wanted jquery new environments sometimes form multiple coexisting instances even multiple versions changes question proposals would clear consider backwards compatibility said proposal changing initialization behavior", "d": "12/2016"}, {"body": "thank providing full thought process agree wrapperjs parameter poorly would accurate separate window global parameters might even better happily accept behaviorpreserving pr clean look three files changed changes add extra argument initial function call add one factory function initial call always gets global object argument called moment even would inaccurate eg nodejs regarding behavior see code leads astray primary use case global window object poorly named right yes obviously browsers virtually identical global object may even object browsers get reference global object nt led astray code massively confusing written commented particularly variable naming regardless lack moduleexports means definitely engaged commonjsnodejs initialization therefore global must window object succeed global object well virtually identical object browsers look code covered everything point missing event something else passed least document property strongly disagree refer var jquery require jquery window example wrapperjs call add jquery properties provided window object affect context environment covered case code tested nodejs well also created option pass global object nodejs makes ultimately work exactly like browsers extra exported factory function course currently asymmetry behavior nodejs browsers extra exported factory function bottom line despite naming flaws wrapperjs initialization working intended noncommonjs browser environment attaches jquery function alias global window augments global object odd indirect way using host object conflation addressing commonjs exports jquery function associated global window attach written case environment global object truthy property case think makes far sense augment global object understand even though currently augmenting browsers effect augmenting global object end result correct odd way get nodejs exports factory function returns jquery function resulting executing noncommonjs browser initialization provided window issue provided global object scenario third case different odd behavior however change behavior one bit added support passing global object nodejs makes three cases behave without caller anything special simply pass global object instead addition object global object case pass fake nothing changes big winwin simplest way understand problem realize though first two cases augmenting object called effect augmenting global object similar declaring global variables third case fake object nothing global object three objects called window third one imposter nt near power first two developed somewhat organically people wanted jquery new environments sometimes form multiple coexisting instances even multiple versions understand things grow organically like sometimes grow asymmetrically case anyone wanting free make call like thisjquery require jquery window assume mean better proposed preclude original use case simply added option make nodejs behave browsers passing object instead addition object read code notes various use cases see enabled scenario propose without requiring additional work developer nodejs code changes question proposals would clear consider backwards compatibility highly recommend everyone stake review linked code changes think clear definitely designed backwardly compatible expect know sure unit tests run made things much easier follow added new wrinkles nodejs nt possible fairly sure new wrinkles catch developers realize missing good options added agreement code changes make sense make sense create another pull request", "d": "12/2016"}, {"body": "seem convinced jquery attach global object goal attaches window happens correlate global browsers need even care object except getting window", "d": "12/2016"}, {"body": "problem easy way write code works browsers nodejs example create global object mimic browsers javascript typeof global undefined globalwindow window add window nodejsdom whatever require jquery like require jquery global flag set nothing gets augmented currently must something like javascript var jqueryfactory require jqueryjs globalwindow window jqueryfactory window augments object augment global object javascript var jqueryfactory require jqueryjs globalwindow window jqueryfactory global latter case differ browsers calling module reference jquery well properties global object nt see problem case first backward compatible example passed instead global object side note would much better nodejsdom left window object simply used global object properties make sense nodejs eg already settimeout cleartimeout etc virtually identical actually global object browsers windows nodejs simply use global object add global property nodejs scripts nt windows abstraction would make sense well", "d": "12/2016"}, {"body": "seem convinced jquery attach global object goal goal nt goal make jquery flexible possible ideally make work nonbrowsers eg nodejs closely browsers least provide option without breaking past use cases done attaches window happens correlate global browsers understand augments global object specific ramifications nt make one bit difference happen slightly offkilter browsers using object result become part global scope clearly goal related lines core add properties object need even care object except getting window let try explain way adding add global object therefore left global scope lines core add properties would make sense would way reference except properties would break virtually every jquery script existence clearly jquery trying augment happenstance behaves global object browsers absolutely mandatory case jquery work expected browsers nt appropriately augment global object instead clearly conflation global object common mistake found many libraries applications even popular ones recall saying since first pull request case impetus changes remains case confusion straightened fork among benefits let confusion persist affect us moving forward perhaps must case offering tips suggestions would like hear least one developer giving", "d": "12/2016"}, {"body": "virtually identical actually global object browsers windows nodejs simply use global object add global property nodejs scripts nt windows abstraction would make sense well jsdom nt automatically create globals good use jsdom create fake instance put variable pass jquery factory globals involved property also use etc would nodejs philosophy jsdom put global object good also use etc global object since environments global versions disallowed see refactoring wrapper code take account preserve behavior described also add nt require people pass object factory nt need jquery sympathize concern confusingly named variable sure actually using passed value defined changes must take mentioned restrictions account looked code nt pass tests invoke see hard see works nt version wrapper", "d": "12/2016"}, {"body": "jsdom nt automatically create globals good use jsdom create fake window instance put variable pass jquery factory globals involved aware nothing break use case document property also use getcomputedstyle location requestanimationframe domparser xml etc yes properties object fake though illadvised shortcut would nodejs philosophy jsdom put global object good beside point think would good option least also use settimeout setinterval etc window global object since environments global versions disallowed see problem nothing affect furthermore issue mozilla extension bug unrelated anything talking perhaps meant different issue refactoring wrapper code take account preserve behavior described comment nt break existing behavior added additional flexibility might want also add nt require people pass global object factory nt need jquery require passing global object exported factory function simply gave option thus make nodejs environment line browsers eg reference sympathize concern confusingly named global variable sure actually using passed value window defined changes must take mentioned restrictions account took everything account looked code nt pass tests invoke npm test see hard see works nt version wrapper would prefer discussing code concerns arise logic subjecting integration unit tests ran assume received sort integration error surprised probably left something lint directives create pull request see integration results please nt close monitoring results", "d": "12/2016"}, {"body": "bunch trailing whitespace tabs inserted github editor fixed one issue left related newly introduced globalobject argument passed core claims never used checking", "d": "12/2016"}, {"body": "installing dependencies locally play around would prefer guess issue unused variable obvious anyone experienced building thing edit duplicated integration errors locally see see built edit suspected build munged possibly due indentation issues mentioned pull requests edit yep pretty fragile indentation breaks build", "d": "12/2016"}, {"body": "set test away ps ca nt believe using tabs instead spaces indentation must ask", "d": "12/2016"}, {"body": "would nodejs philosophy jsdom put global object good looked philosophical part seems node changed philosophy back around made accessible modules saying think good thing prior variable per module makes sense regardless version node app using changes pr allow calling module closely mimic browserjquery environment chooses unit tests passed assuming comprehensive set unit tests change one error message match test expected nodedocumentmissing would much prefer split test two one check missing also cause jquery fail error message confusing selfreferencing missing passed object good luck", "d": "12/2016"}, {"body": "thank thinking wo nt considering changes code time like focus pressing issues conversation quite time sink please feel free tackle existing issue", "d": "12/2016"}, {"body": "thank thinking quite welcome guess agree disagree one nearly concerned issues whether reported considered yet like focus pressing issues conversation quite time sink please nt use time issues pressing concerns wait hopefully lessons learned process primarily augmenting object browsers done strictly side effect augmenting global object hence adding global scope words nobody references properties object seen side effect available nonbrowser environments eg nodejs creating asymmetry across platforms ie augment fake dom requires referencing properties object closing larger related issue consider jquery references object exports performance penalty allows outside scripts affect module create new issue future see last comment pull request details", "d": "12/2016"}, {"body": "started making adjustments fork obviously nt going like virtually every module changed global exported constructornamespace reference shared core modules bet extra argument passed wrapper core looking pretty good right thing changed anyway opening new issue related calling methods exported objects defeats whole purpose using modules see", "d": "12/2016"}, {"body": "yes appear problem using instead", "d": "12/2016"}, {"body": "hi think understand mean would mind providing testcase similar resource would clear behaviour expect", "d": "12/2016"}, {"body": "test case also necessary pr would like work mbest", "d": "12/2016"}, {"body": "jsbin linked knockout issue", "d": "12/2016"}, {"body": "thanks report api propose nt save lot code nt think worth adding afaik also native equivalent api one asked want always define plugin", "d": "12/2016"}, {"body": "hi specific details example think forgot quotes height", "d": "12/2016"}, {"body": "notified bug css designers use multiple assignment property example class height fitcontent trick sure feature works also old browsers", "d": "12/2016"}, {"body": "already work browsers", "d": "12/2016"}, {"body": "tried else", "d": "12/2016"}, {"body": "explain problem detail since markelog posted works scenario described far", "d": "12/2016"}, {"body": "would expensive implement know want track specific animations add complete handler use get promise", "d": "12/2016"}, {"body": "since response owner closing please ping us want continue discussion", "d": "12/2016"}, {"body": "closing favor", "d": "12/2016"}, {"body": "since response owner closing please ping us want continue discussion", "d": "12/2016"}, {"body": "since testcase presented quite time closing please ping us want continue discussion", "d": "12/2016"}, {"body": "thank opening issue seeing downgrade behavior responds faster http redirecting order logs might confusing", "d": "12/2016"}, {"body": "think something like would work documentreadystate complete windowsettimeout jqueryready else documentreadystate interactive documentonreadystatechange function documentreadystate complete windowsettimeout jqueryready else documentaddeventlistener domcontentloaded completed idea called ready handler would fire pretty much immediately would wait fire neither event would used think preserve desired behavior except cases used case would seems like might okay", "d": "12/2016"}, {"body": "hmmm offence sounds awkward follow standards delete method work says implicitly pass data via body url instead dmethvin following processdata supposed key thing particular server accept entity body ability encode data querystring rather body implement way around would harder", "d": "12/2016"}, {"body": "bsthomas please read ticket dmethvin linked following spec nt disallow sending body delete different eg head requests explicitly disallow nt send body head requests want us forbid sending body delete requests first convince standard bodies explicitly disallow spec surely follow", "d": "12/2016"}, {"body": "burned app offers whiteboardinglike tool dragdrop element resize scaling change definitely caught us guard lot great discussion thing add unexpected would painted size instead layout size dealing element dimensions way seems desirable layout dimensions definitely see kind quagmire nt want make breaking change would guys consider adding argument event another function optionally restore behavior", "d": "12/2016"}, {"body": "think know fix looks like matter someone volunteering time implement core contributors included pulled directions latter half year", "d": "12/2016"}, {"body": "code breaking due undocumented backwards incompatibility current best practice working around issue getting untransformed", "d": "12/2016"}, {"body": "vanderlee work around added following utility functions application javascript function jquerysize elem name typeof elem string elem jquery elem elem instanceof jquery elem elem let val jquerystyle elem name return parsefloat val export function outerwidth elem return jquerysize elem width export function outerheight elem return jquerysize elem height use javascript import outerwidth utilsjqueryjs outerwidth useritem let useritem useritem outerwidth useritem could probably even monkey patch jquery party libraries depend behavior felt bit dangerous", "d": "12/2016"}, {"body": "salaamun alekum anyone tell write alternate linkelement primarymenu ul li target blank href datalightbox", "d": "12/2016"}, {"body": "please ask help stackoverflow", "d": "12/2016"}, {"body": "work issue", "d": "12/2016"}, {"body": "pretty sure one else feel free", "d": "12/2016"}, {"body": "gnarf help little needs done see reported callback also results animation adding documentation creating unit tests check", "d": "12/2016"}, {"body": "documentation exist optional signature unit tested call results default duration animation something along lines calling checking nt called perhaps checking state element correct showhide animation first frame check last frame probably sufficient", "d": "12/2016"}, {"body": "gnarf ok thanks look", "d": "12/2016"}]