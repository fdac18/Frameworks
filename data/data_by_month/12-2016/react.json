[{"title": "able create new events", "body": "want feature able extend syntheticuievents add event required thank", "num": "8665", "d": "12/2016"}, {"title": "jquerybootstrap working", "body": "want request feature report bug current behavior run example jquerybootstrap working expected behavior jquerybootstrap working showing blank page version os windows", "num": "8664", "d": "12/2016"}, {"title": "facebook engineers thank", "body": "facebook engineers working open source reactiflux wanted take moment thank hard work job easy million requests coming time internal teams external community dan abramov compared managing issues pull requests juggling chainsaws fire yes know get paid really well open source full time work meets facebook needs think gone beyond way treated community way guys respond emails twitter mentions attention give issuepr time give different organizations podcasts amas list goes personally seen amazing humility pleasure around wonderful people thank excellence put efforts like invite react community reply thread thank comments team facebook let show grateful feel free include experiences team react ecosystem helped developer sincerely behalf reactiflux community gabegreenberg markerikson kyleamathews taion jquense vcarl benigeri phoenixmatrix", "num": "8663", "d": "12/2016"}, {"title": "using webpack", "body": "using webpack seems webpack becoming popular frontend module bundler wish react hug like angular", "num": "8660", "d": "12/2016"}, {"title": "webcomponents requires class syntax", "body": "want request feature report bug bug current behavior modern browsers longer permit means creating web components see possible use custom elements without classes domenic webcomponent demo uses nowremoved means creating webcomponents current behavior bug please provide steps reproduce possible minimal demo problem via similar template running linked webcomponent demo throw uncaught typeerror expected behavior demo executes amp renders versions react browser os affected issue work previous versions react sure change went force browsers chrome broken broken", "num": "8656", "d": "12/2016"}, {"title": "reactdommount reactdomrender flipped curried", "body": "would micro optimization appease functional gods order arguments always felt backwards say want app render want render might sound kind useless first actually built something rendering different components div based something happening outside react js import curry flip ramda const mount curry flip reactdomrender const render mount documentgetelementbyid content otherframeworktabindex render else otherframeworktabindex render else render", "num": "8654", "d": "12/2016"}, {"title": "infinite loop error thrown method", "body": "infinite loop components error render callback calls update parent component code run code unexpected infinite loop expect code stop thrown error suddenly change method component render works expected code correct behaviour get bug reactreactdom looks like version works correct cases", "num": "8653", "d": "12/2016"}, {"title": "featurerequest custom purecomponent comparelevel", "body": "want feature situation shallow compare one level us found common redux store long array filter get array b may pushremove object tofrom maymaynot change b since b always rebuilt purecomponent always rerender hope purecomponent shallow compare one level came idea js class mycomponent extends purecomponent let broke old code assert purecomponent purecomponent eh like maybe class mycomponent extends purecomponent level compare props level compare state hope consider", "num": "8643", "d": "12/2016"}, {"title": "textarea onfocus stoppropagation incorrect cursor rendering firefox", "body": "current behavior using event textarea parent causes cursor disappear render incorrect location firefox see vanishing cursor fiddle issues chrome edge firefox problem full app cursor nt vanish rather moves elsewhere italics placeholder text reproduced behavior fiddle expected behavior hard say expected behavior since real event bubble fiddle show cursor position affected event stopped vanillajs environment versions react browser os affected issue work previous versions react fiddle shows issue ff windows saw issue stoppropagation get eaten alive using say nonbubbling focus event simplifies one interactions setting specifically app bunch widgets marked active user clicks field widget widget marked active however widgets nested widgets innermost widget marked active", "num": "8642", "d": "12/2016"}, {"title": "isomorphic app throws incorrect error using legacy refs unstablehandleerror react dom tree root always node reference", "body": "building application renders react component server sends markup client client side react rendering takes wrapping root component react hot loader component component uses new method catch errors occur initial mount let say put code components render method guarenteed throw error client server maybe something like let say along side component another component uses legacy ref something like client calls following error thrown incorrect note using server side rendering correct error would thrown ie clearly solution use legacy refs bug string refs deprecated", "num": "8630", "d": "12/2016"}, {"title": "strange performance problem google chrome putlistener appears timeline", "body": "want request feature report bug performance problem latest chrome windows firefoxedge work fine current behavior chrome freezes seconds second render current behavior bug please provide steps reproduce possible minimal demo problem via similar template please open first input type cause items redrawn observe browser freezes seconds afterward everything works fine chrome inspector timeline reveals strange react behavior expected behavior happen versions react browser os affected issue work previous versions react tried react windows", "num": "8626", "d": "12/2016"}, {"title": "ca nt stoppropagation render subcomponents componentdidmount", "body": "js bin demo render dragging child parent triggers dragstart problem event tried estoppropagation enativeeventstoppropagation enativeeventstopimmediatepropagation useless ca nt stoppropagation render subcomponents componentdidmount render child parent mounted", "num": "8625", "d": "12/2016"}, {"title": "purecomponent working setstate inside interval", "body": "want request feature report bug report possible bug current behavior calling new state insider callback cause rerender using tried logging next previous state inside show identical even though nt current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior component update versions react browser os affected issue work previous versions react latest version", "num": "8624", "d": "12/2016"}, {"title": "refs callback called twice every render even component instance reused", "body": "want request feature report bug bug perhaps documentation current behavior documentation refs dom says ref attribute takes callback function callback executed immediately component mounted unmounted create stateful component like class scrollhelper extends reactpurecomponent componentdidmount consolelog scrollhelper componentdidmount componentwillunmount consolelog scrollhelper componentwillunmount render consolelog scrollhelper render return use via within app see behavior documented rather following pattern logs first render scrollhelper render scrollhelper componentdidmount scrollhelper ref lt props gt data changes elsewhere app scrollhelper ref scrollhelper render scrollhelper ref lt props gt data changes elsewhere app scrollhelper ref scrollhelper render scrollhelper ref lt props gt data changes causing scrollhelper actually unmount scrollhelper ref scrollhelper componentwillunmount expected behavior according docs would expect callback called exactly two times events component scrollhelper componentdidmount scrollhelper componentwillunmount instead gets reset basically every time page rerendered even though pretty clearly ending component instance time verified true via additional code well evident lack additional componentdidmount logs anyway versions react browser os affected issue work previous versions react react idea behavior earlier", "num": "8619", "d": "12/2016"}, {"title": "finddomnode work statelesscomponent", "body": "report work detail hello need hide component parent parent child writen others ca nt rewrite code resolve problems seems useless resolve code thanks lot class extends reactcomponent componentdidmount finddomnode styledisplay none render return const b gt return page b", "num": "8615", "d": "12/2016"}, {"title": "meta tags seo react", "body": "hello everyone used package dynamic meta tags react nt work made tools d\u00e9veloppement browser showing good made view source nt showing wrong thanks advance", "num": "8609", "d": "12/2016"}, {"title": "feature new jsx attributes", "body": "want request feature report bug feature current behavior tattoodo trying build rss feed delivering instant articles facebook rendering feed react setup unable provide needed attributes root tag expected behavior attribute probably rssfamiliar attributes transpiles versions react browser os affected issue work previous versions react react v", "num": "8603", "d": "12/2016"}, {"title": "dot notation shape props", "body": "short long lets class foo possible say sets addition saying would nt override defined possible think think please vote", "num": "8601", "d": "12/2016"}, {"title": "feature request support gestureevent api", "body": "gestureevent api currently nonstandard api target touch events nontouchscreen computers eg pinch gestures laptop trackpad safari supports starting version currently sole browser apple uses api enhancing apple maps widgets native gestures live example seen wwdc page currently seems impossible attach event handlers declaratively via react elements solution attach event handlers manually part ref callbacks proper implementation would highly appreciated nb microsoft rolls version usage seems less straightforward though msdn links usage api", "num": "8600", "d": "12/2016"}, {"title": "feature setstate without rerendering children", "body": "dev want able change state component without triggering rerender children better optimize app use cases imagine controlling visual state component defined state object inside render function effects display property nothing else form input element invisible label shows username invalid password short controlled true appends element calling trigger rerender components chain update way effecting visual update unless implemented nt make sense extra logic something could avoided first place useful function like propagates children components feedback welcome thanks", "num": "8598", "d": "12/2016"}, {"title": "unused function fiveargumentpooler", "body": "reference use fiveargumentpooler codebase deleted without issue sending pull request", "num": "8596", "d": "12/2016"}, {"title": "react missing files", "body": "throw err error find module reactlibreactdomserver functionmoduleresolvefilename functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload", "num": "8588", "d": "12/2016"}, {"title": "rfc testing browser compatibility", "body": "testing browser quirks challenging set page site local react repository made easier isolate browser differences document known issues example could start outstanding input issues like work way backward historical decision points adding additional rules support specific browsers speaking gaearon aweary see couple outstanding tasks x add pagesite local react repository includes test cases reproducing specific browser quirks x make easy switch versions react via cdn references local builds x catalog existing fixes outstanding issues start building test cases modify react flags via query strings mechanism quickly switch fiber standard dom renderer eventually could also great resource react handles dom manipulation obscure dom api concepts reference notes implementors dom rendering libraries test cases ie password fields nhunzaker backport input fix jquense change event fire ie edge certain circumstances jquense onchange randomly misses keys ie typing quickly jquense onclick firing disabled buttons aweary block change events disabled aweary mouse enter leave work consistently disabled elements aweary change event bubbling nt work controlled components ie", "num": "8583", "d": "12/2016"}, {"title": "ontouchend leads focus inputs rendered touch", "body": "want request feature report bug bug current behavior ontouchend event leads rendering input element location original touched element focus input element means touch reused new input element current behavior bug please provide steps reproduce possible minimal demo problem via similar template check following fiddle reproduce open mobile device mode chrome open fiddle touch device zoom touch click fully land theoretically input element behind double click somewhere touch click input element focused also see gif case repro steps unclear expected behavior input element focused exist touched yet versions react browser os affected issue work previous versions react also work chrome android chrome web view maybe browsers", "num": "8582", "d": "12/2016"}, {"title": "read property gethostnode null", "body": "feature request current behavior read property gethostnode null expected behavior error message tells wrong know fix react", "num": "8579", "d": "12/2016"}, {"title": "attempted update component", "body": "feature request current behavior expected behavior component would help error message would tell component react", "num": "8578", "d": "12/2016"}, {"title": "toplevel callback different semantics setstate callbacks", "body": "call callback state update enqueued separately callback called outside fiber parlance priority leads two separate flushes triggers synchronous render flushed ever called replicated behavior fiber well however toplevel callback passed semantics state update callback flushed end next render even outside see unit test example initial callback called initial mount whereas callback callback semantics would flushed updates scheduled inside fix inconsistency callbacks semantics opinion makes sense callback flushed right updatetoplevel render corresponds change callbacks behave way one way implement would unify et al accept callback could change toplevel callback behave way callbacks either way would require breaking change react question whether want make change possibly release version stack make fiber match current inconsistent behavior fix later facebookreactcore", "num": "8577", "d": "12/2016"}, {"title": "breaks default param behavior componentdidmount production build", "body": "want request feature report bug bug current behavior passed first argument becomes issue default param specified backtrace componentdidmount call seems like difference extra argument line repro clone project cd open supported browser open console log message kill wzrd process run refresh console log null expected behavior either log log development build production build nt differ regard versions react browser os affected issue work previous versions react everything ok", "num": "8576", "d": "12/2016"}, {"title": "proptype validation fails nesting validations", "body": "want request feature report bug bug current behavior app properly validate nest reactproptypes testing current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo expected behavior fail proptype validation versions react browser os affected issue work previous versions react react", "num": "8573", "d": "12/2016"}, {"title": "question support need way programmatically update field defaultvalue", "body": "support question looking robust performant way update input field text programmatically input field instead something like js render function return problem want sync database upon onblur event input field use instead get work two problems see using value instead defaultvalue much less performant gt updating react component state every keystroke b importantly makes database sync logic complex update react component state every keystroke sync database every onblur rather write logic possible asked question please let know ideas thanks", "num": "8571", "d": "12/2016"}, {"title": "dangerouslysetinnerhtml mark", "body": "want request feature report bug bug current behavior setting url contains text result current behavior bug please provide steps reproduce possible minimal demo problem via similar template problem expected behavior text amp reg replaced workaround versions react browser os affected issue work previous versions react tested chrome", "num": "8567", "d": "12/2016"}, {"title": "setstate inside setstate keeps unprocessed call queue", "body": "want request feature report bug bug current behavior nested setstate call queued executed next batch processing additionally callback param set executed immediately demo see console debug output expected behavior everything queue processed also attached execution tested current", "num": "8565", "d": "12/2016"}, {"title": "onchange registering state change paste delaying new state changes", "body": "bug report onchange registering state change paste delaying new state changes current behavior textinput box takes function prop sets state parent component onchange registering initial copy paste oddly type extra key pasted returns string count original paste count additional character appears react one change behind despite registering something changed make clear added consolelogs see behavior found initial paste triggering onchange event case despite explicitly setting state setting key pasting characters verified irb displaying type another character making characters triggering state change initiated step one returning original pasted key type yet another character one step behind printing printed step abridged code jsx import react component proptypes react import router reactrouter import authform componentsauthform import keyentry componentskeyentry export default class authorizationcontainer extends component constructor props context super props context thisstate accountkey thissetaccountkey thissetaccountkeybind thiskeylengthvalid thiskeylengthvalidbind setaccountkey event let text eventtargetvalue thissetstate accountkey text consolelog got got display initial paste thiskeylengthvalid consolelog thisstateaccountkey consolelog thiskeylengthvalid consolelog thisstateaccountkeylength keylengthvalid return thisstateaccountkeylength render return authorizationcontainercontexttypes router proptypesobjectisrequired import react proptypes component react export default class keyentry extends component constructor props super props render return keyentryproptypes setaccountkey proptypesfuncisrequired expected behavior paste accountkey state would key pasted length versions tested react version chrome version similar issue", "num": "8561", "d": "12/2016"}, {"title": "click handler get called twice nonprod mode", "body": "think bug happens nonprod mode noticed using reactdropzone library think found simple use case reproduce problem check fiddle see click handler called twice even though element clicked example showing working working believe something outer div click listener chunk code tested chromemac also seen behavior react", "num": "8559", "d": "12/2016"}, {"title": "error find module reactdomlibreactperf reactlibreactaddonsdomdependenciesjs", "body": "spotted issue regarding something like file exists brunch builds ok fails browser error nt know version using prior worked tried still luck", "num": "8556", "d": "12/2016"}, {"title": "form submitted click", "body": "want request feature report bug report bug current behavior strange behavior form submitted click following sequence induce behavior click call setstate button transformed form submission handler called expected behavior expected trigger form submit versions react browser os affected issue work previous versions react reproduced react google chrome firefox see fiddle behavior happen add unique property buttons", "num": "8554", "d": "12/2016"}, {"title": "update rendertostaticmarkup documentation", "body": "inconsistencies regarding use rendertostaticmarkup current documentation says similar rendertostring except nt create extra dom attributes datareactid react uses internally useful want use react simple static page generator stripping away extra attributes save lots bytes release statement suggests datareactid longer every node result using documentcreateelement prime node cache create dom nodes allowing us skip potential lookup used datareactid attribute root nodes datareactroot attribute server generated markup still contain datareactid looking optimize server render content removing extra markup thought something wrong still lot datareactid everywhere still possible render server without extra dom attributes", "num": "8553", "d": "12/2016"}, {"title": "version react reactdom nt work together", "body": "used version react reactdom together get following errors setup nt problem use code version instead", "num": "8551", "d": "12/2016"}, {"title": "failed find valid digest integrity", "body": "run build command upload files server error appears mobile browsers failed find valid digest integrity attribute resource computed integrity resource blocked", "num": "8549", "d": "12/2016"}, {"title": "requesting reviewfeedback blog inner workings virtual dom", "body": "wrote blog post make easy people learn virtual dom works using preact react explain wondering much similar react appreciate reviewfeedback thank", "num": "8547", "d": "12/2016"}, {"title": "textarea placeholder nt shown ie rendered using react", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template textarea display placeholder text initially placeholder text shown focus focusaway works browsers believe go figure believe issue solved seems come back pr originally fixed issue expected behavior placeholder text initial show render versions react browser os affected issue work previous versions react react looks like working", "num": "8546", "d": "12/2016"}, {"title": "documentation translations", "body": "hello plans including official communitysupported translations react docs translaitongang completed vuejs docs russian translation also progress react ones believe least japanese chinese communities would also like translations could integrate somehow upd see random translation files done document version display detected mean ca nt see header dropdown language choice something", "num": "8541", "d": "12/2016"}, {"title": "attach reacteventlistener ajaxdynamically loaded content", "body": "way attach onchange event listening like render function html loaded ajax inserted via example top render ondidmount ondidupdate ca nt get work callback issue called variable refs dynamically loaded nodes suggestion great edit possibly looks like want trigger react dom manually ps trying work native things suggest jquery documentaddeventlistener looking multibrowser multiinput types solutions like done react", "num": "8540", "d": "12/2016"}, {"title": "reacttestrenderer crashes rerendering reactnative textinput", "body": "want request feature report bug bug current behavior reacttestrenderer crashes rerendering component props change die javascript import reacttestrenderer reacttestrenderer import react component react import textinput view reactnative class example extends component constructor props super props thisstate query render const dosomething gt thissetstate query return die function const renderer reacttestrenderercreate renderertojson children propsonpress renderertojson expected behavior exception textinput value prop set versions react browser os affected issue work previous versions react react reactnative reacttestrenderer jest", "num": "8539", "d": "12/2016"}, {"title": "reactdom server still generate datareactid", "body": "still get attribute html using version react reactdom", "num": "8537", "d": "12/2016"}, {"title": "war peace bug scrolling embed font text special characters", "body": "use embed fonts text like war peace russian french characters programmatically scroll bottom component rendered componentdidmount excess gap bottom scrolling example code use separate window mode plnker editor example dos nt work maybe react rendering nt conform fonts rendering react chrome firefox windows ubuntu", "num": "8534", "d": "12/2016"}, {"title": "provide way external tools list nodes event info", "body": "would like add react event bubbles markup tree firefox developer tools need way get list nodes attached event listeners somebody provide way added within day possible moment done make possible", "num": "8533", "d": "12/2016"}, {"title": "triggers onchange twice replacing text selection", "body": "want request feature report bug bug current behavior type text input select whole text type key hitting key triggered twice one time second time happens behave correctly demo fiddle expected behavior hitting key triggered one time versions react browser os affected issue work previous versions react react possibly also older versions windows", "num": "8531", "d": "12/2016"}, {"title": "instances change state", "body": "want request feature report bug click instancea state visiable true click instanceb instancea visiable always true click visiable true click b b visiable true visiable false current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8530", "d": "12/2016"}, {"title": "feature request support auxclick event onauxclick", "body": "version starting chrome new event handle middle click nt trigger middle click anymore", "num": "8529", "d": "12/2016"}, {"title": "dx feature specific error render returns component instead element", "body": "version render function returns react component instead react element error message might quite cryptic like uncaught error element type invalid expected string builtin components classfunction composite components got undefined think react could try detect render function returning component instead element print something convenient like displayname useful example using lib api breaking change prop changed component element hard find cause problem even looking invarient stackvariables debugger see quite related seems react tries put component jsx like also simply swallowed think warning would useful see", "num": "8517", "d": "12/2016"}, {"title": "components need key attribute", "body": "want request feature report bug bug current behavior created component receives value array options props render multi step form saved object switch steps rendered component keeps state previous component instance example one step component giving options font family next step font size fixed bug setting etc component javascript export default class dropdown extends reactcomponent constructor props super props onchange e value epreventdefault thissetstate value value thispropsonchange thispropsonchange value getoptions const items thispropsoptionsforeach content value gt itemspush return items render const options thisgetoptions return thispropsoptionsget thisstatevalue options javascript export default class mycomponent extends reactcomponent constructor props super props thisstate step fontfamily arial fontsize thisgotostep e step gt epreventdefault thissetstate step step thisonfamilychange value gt thissetstate fontfamily value thisonsizechange value gt thissetstate fontsize value getfirststep return choose font family getsecondstep return choose font size render return thisstatestep thisgetfirststep thisgetsecondstep versions react browser os affected issue work previous versions react react chrome mac os sierra sure something wrong bug", "num": "8516", "d": "12/2016"}, {"title": "onchange event triggering mozilla ie typefile react jsredux", "body": "pretty new guy react jsi little bit confused input typefile action working mozilla ie working fine chromei nt working bug import react react import connect reactredux import uuid nodeuuid import headeraction actionsheaderactions import uploadactions actionsuploadactions import notificationactions actionsnotificationactions import shortid shortid header", "num": "8515", "d": "12/2016"}, {"title": "undo behavior controlled textareas works differently default behaviour chrome", "body": "control textarea value behaves differently use undo textarea controlled undo one letter time undo works normally uncontrolled component undo seems work expected input components controlled textarea component undo one letter time normal undo works kind algorithm much going un redone try difference codepen tested react chrome chrome canary works expected firefox safari might chrome bug", "num": "8514", "d": "12/2016"}, {"title": "perf reporting wrong wasted time connected component", "body": "redux state change perf reporting wasted time connected component even props changed example project using react reactdom reactredux redux reselect immutable reactaddonsperf gaearon note check later thanks", "num": "8513", "d": "12/2016"}, {"title": "performance monitoring record behaviour page reload", "body": "bug using appears correctly switch performance monitoring react measures show timeline reproduce chrome go page nonproduction react code add query string described example open chrome devtools click timeline tab refresh page page refreshed look timeline note nt reactspecific marks console get empty array get actual performance measures tested react chrome expect see reactspecific events eg events react components timeline able access performance measures console looking code appears recorded performance measures immediately deleted may causing issue see const markend function debugid marktype shouldmark debugid return immediately every measurement instruct browser clear measure name seems like measurements ever take place removing final two lines function restores expected behaviour", "num": "8504", "d": "12/2016"}, {"title": "call function start using thisfunctionname componentdidmount", "body": "want request feature report bug report bug current behavior call function start using thisfunctionname componentdidmount expected behavior versions react browser os affected issue work previous versions react windows react", "num": "8502", "d": "12/2016"}, {"title": "ca nt render meta tags server side", "body": "want request feature report bug reporting bug current behavior trying iterate array objects represent meta tags getting error javascript import react react let metas reactcreateclass proptypes metas reactproptypesarray render function return thispropsmetasmap function meta return moduleexports metas current behavior bug please provide steps reproduce possible minimal demo problem via similar template server side rendering issue express syntaxerror usersrobertdomainwatchdogviewsmetasjsx unterminated jsx contents thispropsmetasmap function meta return parserpp parserreadtoken parsernexttoken parsernext parsereat parserppexpect parserpp parserpp parserpp expected behavior react parser work correctly meta tags server side versions react browser os affected issue work previous versions react never tried seems lots libraries like reacthelmet use rewind api solve think right able render meta tags without jump hoops expressreactviews react reactaddonscreatefragment reactaddonscsstransitiongroup reactaddonslinkedstatemixin reactaddonsshallowcompare reactaddonsupdate reactclickoutside reactdaypicker reactdom reactmasonrycomponent reactpurerender reactredux reacttapeventplugin reactvirtualized redux reduxthunk", "num": "8501", "d": "12/2016"}, {"title": "make sure reacttestrenderer others depend objectassign", "body": "currently reacttestrenderer probably nt depend objectassign needs", "num": "8500", "d": "12/2016"}, {"title": "type property missing reactelement class ie", "body": "found bug debugging ie current behavior type property missing reactelement class ie present browsers including edge expected behavior type property present react version browser ie os windows reactelement issue interface reactelement type string componentclass sfc props p key key sample test code reactchildrenmap thispropschildren child index gt consolelog child type returns undefined ie", "num": "8499", "d": "12/2016"}, {"title": "add component stack contenteditable warning", "body": "feature warning component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional would help heaps would know component causing", "num": "8497", "d": "12/2016"}, {"title": "theadpropschildren always array", "body": "thead contain one tr elements contains theadpropschildren object contains gt array would make much simpler use always returned array", "num": "8494", "d": "12/2016"}, {"title": "best way add raw attribute values elements", "body": "using direct snippet personal website safely assume uses widely somewhere render function part larger code render wo nt work problem mailto react reencodes order avoid well known way use however makes sense use since part much larger element set attributes way set whole element phenomenon encountered quite often many scenarios personally think whole overengineered real use cases scenarios protecting vital stuff programmers generally use well known api encode anyway really pointless real life practical scenarios thing gives headaches often makes jump hoops perform simple stuff would greatly appreciate suggestion handle mentioned scenarios thanks ps entire address block cleanly abstracted one component found", "num": "8493", "d": "12/2016"}, {"title": "dist files built processenvnodeenvdevelopment", "body": "want request feature report bug bug current behavior appears files builtbundled wrong current behavior bug please provide steps reproduce possible minimal demo problem via similar template open files search expected behavior correctly set build time expectation would versions react browser os affected issue work previous versions react version affected along unknown versions similarly affected", "num": "8492", "d": "12/2016"}, {"title": "invariant violation rendering using reactdom reactdomserver", "body": "using reactdomrender reactdomserverrender w causes invariant violation react see console notice render completely different components render methods criteria met warning show like least two nested components seems like reactdomserver messing itemmap regular react ids components nt match", "num": "8487", "d": "12/2016"}, {"title": "webpack fails build react syntaxerror", "body": "found strange issue react packaged using webpack issue nt make sense browser used development mode webpack build pipeline throw syntaxerror ternary operator sure blame webpack react everything fails inside react go setup setup empty application shows uses react dependency everything bundled webpack exact config repository well current behavior try launch setup get syntaxerror points perfectly valid line react sources particular nt like ternary operators much replace ifs manually breaks somewhere else inside react looks disable uglifyjs expected behavior react work included dependency packaged webpack nt report issues", "num": "8484", "d": "12/2016"}, {"title": "using ref set htmlfor prop input label", "body": "nt know currently possible believe would useful able use refs rather ids setting htmlfor prop label something along lines something previously considered currently possible", "num": "8483", "d": "12/2016"}, {"title": "without handler rendertostaticmarkup", "body": "using get message nt wrong could find issue", "num": "8482", "d": "12/2016"}, {"title": "scrolldown event triggering twice make scroll infinity", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce bug open demos chrome version scrolldown table expected results open demos chrome version also tested scroll event component lifecycle componendidmount get result demos expected behavior scroll times scrolling triggered times stops versions react browser os affected issue work previous versions react react versions tested os windows browser google chrome version bug appeared version chrome", "num": "8481", "d": "12/2016"}, {"title": "strange caret behaviour text inputs chrome desktop", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce go facebook messenger web app found react input field chrome type string flflflflflflfl try move caret backwards using arrow keys see problem caret ignores every keystroke jumps two places every keystroke backspacing middle string also produces strange behaviour video behaviour get versions react browser os affected issue work previous versions react bug present chrome os x bug also present fresh install chrome dev channel windows sauce labs bug present firefox safari os x bug seems present controlled uncontrolled fields value vs defaultvalue react reactdom nt know version facebook messenger", "num": "8480", "d": "12/2016"}, {"title": "trycath render childrens", "body": "hi problem application use window various childrens card children problem occurs load data server runtime exception happens others childrens load believe problem would solved trycatch father component figure", "num": "8473", "d": "12/2016"}, {"title": "unstablehandleerror cause unmountcomponent null error", "body": "want request feature report bug bug current behavior trying handle errors happens render method example import react react export default class testcompoent reactcomponent component return error typeerror read property bar null know handle selectors proper tests etc aim dispatch action exception happens redirect certain page tried use function unstablehandleerror like unstablehandleerror e function dispatch thispropsfunctiontodispatch e browserhistorypush foobarerrorpage return null tried different type return luck receive another error solution found try catch block render function nt like hoping find better solution expected behavior dispatch action redirect page want versions react browser os affected issue work previous versions react react reactdom redux google chrome macos sierra", "num": "8472", "d": "12/2016"}, {"title": "react performance issues", "body": "found shoulddidupdate performance worse refs control shouddidupdate control udpate import react component proptypes cloneelement react import reactdom reactdom class extends component class extends component render let row columns thisprops return class extends component render let row columns thisprops return class extends component render let value thisprops thisvalue value return value function getdata cindex c vindex v let rows columns var ret getdata var rows retrows var columns retcolumns reactdomrender documentgetelementbyid root consoletime let lt consoletimeend import react component proptypes cloneelement react import reactdom reactdom class extends component class extends component render let row columns thisprops thisrow row thiscolumns columns return class extends component render let row columns thisprops thisrow row thiscolumns columns return columnsmap column gt return class extends component render let value thisprops thisvalue value return value function getdata cindex c vindex v let rows columns var ret getdata var rows retrows var columns retcolumns reactdomrender documentgetelementbyid root consoletime let lt consoletimeend computer macbook pro memory browser chrom ms b ms browser ie b better way deal scenario", "num": "8471", "d": "12/2016"}, {"body": "flik example examples uses build babel convert example code fly reason example works run little root react folder easiest way probably install globally within react folder run see example", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "thank pretty new react pretty fun far learning right quite excited work mobile apps learning react native react way knowing bit swift react really simplified way make ios apps familiar fast great make something like react react native would nt know start great job hope skills using react develop great apps thanks guys libraries various work help community", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thanks really appreciate keep", "d": "12/2016"}, {"body": "thanks much love", "d": "12/2016"}, {"body": "thanks work", "d": "12/2016"}, {"body": "thank react native helped finally get mobile development rn provided motivation level dev skills", "d": "12/2016"}, {"body": "awwww thanks", "d": "12/2016"}, {"body": "first brief experience react native blown away hours playing around baby steps step forward sincerely appreciate hard work everyone contributed react", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank caring beyond code going paying attention people saying thinking understanding community efforts truly appreciated", "d": "12/2016"}, {"body": "thank writing powerful yet easy work tool", "d": "12/2016"}, {"body": "nice way end year group hug grin", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "thanks cornerstone coolest job ever", "d": "12/2016"}, {"body": "seriously never found nicer helpful group people life guys best thank", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "absolutely agree amazing group people thank much guys", "d": "12/2016"}, {"body": "yall great react", "d": "12/2016"}, {"body": "thank guys super supportive bringing changes community wanted react also done wonderful job bringing changes make development easier", "d": "12/2016"}, {"body": "thanks guys", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "thank much react future doubt owe much success could nt grateful", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thank awesome work using react awesome contributing super cool enriching experience thanks great maintainers project loved contribute wink", "d": "12/2016"}, {"body": "thank react joy work since picked year ca nt wait go future huge part community seen core contributors take time discuss architecture decisions around react apps developers offer insight things work way nt ever seen movement strong thanks", "d": "12/2016"}, {"body": "react awesome thank", "d": "12/2016"}, {"body": "really thank amazing work", "d": "12/2016"}, {"body": "working react pleasure technology community things thank", "d": "12/2016"}, {"body": "thanks everything impact team made overstated", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "guys awesome absolute pleasure working learning", "d": "12/2016"}, {"body": "thank wonderful work working angularjs two years building next big project react simple reason adding html js allows failures compile time ca nt wait learn separate application state presentation redux brought new excitement incredibly thankful", "d": "12/2016"}, {"body": "thank", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "thanks facebook engineers work ed react many thanks rest contributors props gabegreenberg taking initiative start thread", "d": "12/2016"}, {"body": "seriously thank ca nt understated impact industry association livelihood community react reshaped thought frontend even people nt use react impacted virtually modern frameworks hints ideas popularized graphql rethinking backend going flow jest yarn reinventing fields pushing competition everything touched let forget talks community involvement createreactapp make things beginner friendly talks folks given including office hubspot keep", "d": "12/2016"}, {"body": "react view library work bundler including webpack said create react app cli uses webpack", "d": "12/2016"}, {"body": "please provide project reproducing problem", "d": "12/2016"}, {"body": "oops never mind try take look", "d": "12/2016"}, {"body": "yujiaze technically rendering child rendering root using separate render trees nt think events actually propagate one root get two separate trees events ca nt stoppropagation render subcomponents componentdidmount render child parent mounted render actual child returning render method need defer rendering sure parent mounted use state set flag js var parent reactcreateclass getinitialstate return mounted false ondragstart e consolelog parent edatatransfersetdata text parent componentdidmount thissetstate mounted true render return working example", "d": "12/2016"}, {"body": "thanks report unfortunately helpful without code example issue template includes line current behavior bug please provide steps reproduce possible minimal demo problem via similar template likely mutating state somewhere however without code impossible tell nt provide example close issue actionable", "d": "12/2016"}, {"body": "trying reproduce bug sandbox realized causing mutation thanks hint would possible add warning state mutations similar pretty tough one us debug cheers", "d": "12/2016"}, {"body": "attempt author nt continue working", "d": "12/2016"}, {"body": "closing since seem working fine would possible add warning state mutations similar reduximmutablestateinvariant pretty tough one us debug davegri track updates", "d": "12/2016"}, {"body": "think figured using clue code comments either sic owner changed make sure newest owner stored reference previous owner different forgotten reference change usage global purpose illustration function logref obj consolelog logref called obj within app render code get expected result happening every render new anonymous function instantiated code reactref logic treats new watcher feels obligated notify old new callback instances handoff workaround pass sort stable callback like prebound method longlived function instance leave open handoff behavior documented implication using inline functions highlighted potential pitfall", "d": "12/2016"}, {"body": "question help two subcomponents radio select parent container switch call two components need traverse component parent container call get number components within method try write following way wrong eg rendercoms let coms componentsmap component gt switch componenttype case return case return default return false thiscoms coms return coms clickfunction let com thiscoms let lt comlength consolelog thisrefscom getvalue get getvalue method inside subcomponent via error seem work way thisrefscom", "d": "12/2016"}, {"body": "also ran particularly problem parent component maintains array refs children one might expect code work properly however child goes away children refsetting function called times argument null resulting long unexpected null case notion old owner forget ref ironically reversed", "d": "12/2016"}, {"body": "resolved thank perhaps thisrefs behalf key", "d": "12/2016"}, {"body": "wrap div control", "d": "12/2016"}, {"body": "face developing react library wirte component users write wrapping solution think shouldnot change structure user code want resolve", "d": "12/2016"}, {"body": "provide realistic example clear want hide child something b would know would help explained use case detail", "d": "12/2016"}, {"body": "gaearon sorry replying late router library supports multiple pages mounting time need hide pages matched location instead unmounting using display none another way change style stateless components way supports hide component", "d": "12/2016"}, {"body": "hey thanks issue react able render tags fine made view source nt showing wrong unfortunately need information help please provide detail issue possible sample reproducing issue us use jsfiddle starting point", "d": "12/2016"}, {"body": "hey way find position document", "d": "12/2016"}, {"body": "sorry sure mean", "d": "12/2016"}, {"body": "thanks issue donlion far know react support rendering rss xml documents point future intend remove attribute whitelist together may allow render xml documents nt believe something intend explicitly support cc spicyj", "d": "12/2016"}, {"body": "look careless author responded code transpiled took liberty looking made carelessloader webpack use mostly generate enterprise fun time xmls builds might fit use case", "d": "12/2016"}, {"body": "react dom nt support xml even change attribute whitelist lots htmlspecific logic future someone could perhaps make react xml xmlspecific", "d": "12/2016"}, {"body": "already explicitly slightly verbose magic full control merging works example used immutablejs could something like general prefer generic ways something instead creating sugar requires lot learning unrolled whenever bump complex case therefore doubt implement something like proposal case ideas improving jsx please share instead react uses jsx grammar discussed hope helps", "d": "12/2016"}, {"body": "nt think would want adopt support nonstandard api specification proposed consider adoption specification reviewed long reliably performantly polyfilled browsers react supports point think early consider supporting appreciate issue going close since feel relatively confident rest react team feels similarly cc gaearon something guys want pursue let know", "d": "12/2016"}, {"body": "think react differentiate default component userdefined components differentiate parent children component would difficult distinguish globallocal renders", "d": "12/2016"}, {"body": "zeel think clear proposing assuming components render function looks like also assume react successfully completed first render everything dom later user interaction needs changed right call problem also call render functions turn call children render functions someone returns false know react says javascript fast computing diff performance hit think compute something nt changed actual data model proposal comes instead could definitions means notify react something component changed flow app first render using virtualdom components available work called called case since local change order generate vdom react wo nt call render functions instead use already available vdom knows exist otherwise call react compute diff old vdom new one apply changes", "d": "12/2016"}, {"body": "wrong using state child components unchanged easily checked", "d": "12/2016"}, {"body": "component b c shouldcomponentupdate already return false anyway fast fast state clear hacks like wish state would sync virtual dom make totally sense use jquery every visible toggled element want manipulate dom directly use refs finddomnode good use cases use", "d": "12/2016"}, {"body": "use instance variable like store data nt affect rendering", "d": "12/2016"}, {"body": "yaycmyk affect rendering children self", "d": "12/2016"}, {"body": "extend components b c instead way children method called props inner state change basically implemented way nt explicitly define", "d": "12/2016"}, {"body": "thanks issue neeksandhu appreciate time took write ideas going echo others said say extension provide exactly want update component render output without updating specific children component said going close existing solution generally pretty selective comes implementing new public apis feel free continue discussion thanks", "d": "12/2016"}, {"body": "found problem reactdomserverjs reactlib install react", "d": "12/2016"}, {"body": "got reactlib", "d": "12/2016"}, {"body": "miss files react works fine", "d": "12/2016"}, {"body": "deprecated since react removed change import instead", "d": "12/2016"}, {"body": "anything inside private implementation details change version please never use directly public api documented never need import something see react trying import failing likely incompatible versions installed make sure error go away hope helps", "d": "12/2016"}, {"body": "kovensky using import anything directly", "d": "12/2016"}, {"body": "please see second paragraph reply issue see versions matching supported", "d": "12/2016"}, {"body": "thanks", "d": "12/2016"}, {"body": "upgrade cause ok google itit material ui plugin version", "d": "12/2016"}, {"body": "modules like relied react internal apis need update nt officially recommend relying private apis keep changing way nt need run create problems later", "d": "12/2016"}, {"body": "thanks \uff9f\u0434\uff9f problem might cause later using sudo", "d": "12/2016"}, {"body": "problem might cause later using sudo may get wrong permissions files", "d": "12/2016"}, {"body": "thanks found article realize", "d": "12/2016"}, {"body": "cc jquense done lot work area think", "d": "12/2016"}, {"body": "thoughtsquestions highlevel structure page group test cases case page maintain central directory navigating keep page count put related tests single page want include exact steps reproduce check behavior looking validate easy new contributor look follow steps know working potentially use paths load arbitrary version react unpkg page example would load test react would make easy quick test regressions", "d": "12/2016"}, {"body": "would put everything single page switch top points cdn versions local build refreshes part page change", "d": "12/2016"}, {"body": "make easy switch versions react via cdn references local builds small set inbrowser tests reactvirtualized read query param toggle different versions react version number reactvirtualized either version number pulled cdn local runs local build useful checking regressions perf changes dan inpage switch suggestion common case probably compare local latest release npm", "d": "12/2016"}, {"body": "sounds really helpful general much knowledge either lost trapped tons jsfiddles many different issues love many many browser decisions made attend browser quirks better documented always tough try understand even starting point addressing dom issues without knowledge also add documenting minimal reqs certain changes would really helpful input components needing work imperative sets dom node well prop changes would also tool new issues wonder adding page would look like changes accompany associated fixes possible leverage existing code iteration tool codepenjsbinjsfiddle might make helpful beginning bits identifying new issues", "d": "12/2016"}, {"body": "see process would look something like user identifies new issue shares case reproducing jsfiddle whatever verify issue someone fixes includes changes test page pr like unit tests use test page validate fix supported browsers", "d": "12/2016"}, {"body": "long term stretch goal automatic deployment test page pr opened affects dom code would amazing", "d": "12/2016"}, {"body": "one item though okay excluding core part issue base line browser compatibility browsers target effort strip fixes unsupported browsers consider compatibility package think primarily pertains event plugin system though could wrong", "d": "12/2016"}, {"body": "btw event changed onclick onmouseup input receive focus clicktouch", "d": "12/2016"}, {"body": "workaround project always call interaction component button callback execute could possibly lead new site via reactrouter contains input components feel definitely comfortable quick solutions", "d": "12/2016"}, {"body": "little investigation chrome noticed react receiving events event triggers updates tree means time fires target ends input looks like spec says firing events okayexpected behavior user agent may dispatch touch events mouse events response user input existing workaround seem using like mentioned", "d": "12/2016"}, {"body": "please see usually means react inconsistent state caused earlier error code nt see error might block silently swallowing related explanations sure problem please provide reproducing example", "d": "12/2016"}, {"body": "closing update likely related kevart provide case reproducing issue look reopening identified different issue", "d": "12/2016"}, {"body": "makes sense would minified build code names would mangled", "d": "12/2016"}, {"body": "like likely issue code swallowing original error first result internal state gets corrupted get weird error later", "d": "12/2016"}, {"body": "makes sense sorry guys try find happens", "d": "12/2016"}, {"body": "thanks issue technically valid use case sounds bit confusing becomes issue default param specified componentdidmount specifying default param nt ever need call method react calls want share code two lifecycle hooks extract third method", "d": "12/2016"}, {"body": "yeah code would probably clearer shared code extracted third method manually calling inside reactrouter transitions params change call even though needs fetch data using new param", "d": "12/2016"}, {"body": "reactrouter transitions params change call componentdidmount even though needs fetch data using new param generally good place yea recommend calling lifecycle methods manually", "d": "12/2016"}, {"body": "change likely reverted since used passing around test options use", "d": "12/2016"}, {"body": "reserved meaning react end therefore fails check need remove validations additionally defined version works", "d": "12/2016"}, {"body": "work dom node anything", "d": "12/2016"}, {"body": "probably would put render method somewhere else probably put render method would think", "d": "12/2016"}, {"body": "major downside approach two different pieces rendering logic method updates method good right ideally rendering logic would render method might work super well", "d": "12/2016"}, {"body": "mean js reactcreateclass updaterefs function objectkeys input item gt thisrefs item input item render function return ideally render function could updaterefs without separate code one way achieve might conditionally use either defaultvalue value elements would also tricky thanks idea probably work", "d": "12/2016"}, {"body": "idea using placeholder instead defaultvalue might solve kind problem", "d": "12/2016"}, {"body": "particular performance problem trying avoid using tried using state", "d": "12/2016"}, {"body": "kinda complicated see question top think explains well basically use value instead defaultvalue use onchange use change component state every keystroke means default would also updating db every keystroke unnecessary amount requests one question moment setting call react component update calling line code", "d": "12/2016"}, {"body": "seems like defaultvalue set never update dom element first created bad news bears update user types field", "d": "12/2016"}, {"body": "gaearon example field wo nt update textfield stuck whatever", "d": "12/2016"}, {"body": "change component state every keystroke means default would also updating db every keystroke unnecessary amount requests seems like update db every time local state changes example could blur seems like defaultvalue set never update dom element first created might nt actually know dom nuances well worth looking mdn", "d": "12/2016"}, {"body": "oh shit one exception behaviour thisrefs points dom node refs html elements add ref custom component point component instance instead access dom case reactdomfinddomnode componentinstance probably problem dom updating actually html tag react component figure thanks input", "d": "12/2016"}, {"body": "gaearon fyi figured solution one use key uniquekey component elements update key want unmountremount component rerender new data defaultvalues reflect new data oherwise remounted component rerendered defaultvalue would still show original default value new values remounting crucial part get component show new values text fields using defaultvalue instead value without remounting programmatically change defaultvalue input field tmk best practice heavily used features use case remounting happens every seconds big deal terms performance got ta love fe dev", "d": "12/2016"}, {"body": "glad found solution satisfies mentioned earlier would recommend using state instead sending data db every state update", "d": "12/2016"}, {"body": "toyed day yesterday afaict react component solution seems good one use case nt believe react unmounts whole containing component components key eg js return guessing change unmount input element key components elements root element verify need sync db state change change child component state nothing syncing change parent component state right time sync db perhaps case changing parent component state frequently nt think nt think good coarser grain event text field input field child component", "d": "12/2016"}, {"body": "react issue please look", "d": "12/2016"}, {"body": "ah ok test safari firefox verify chrome bug thanks looking alejandro gonzalez dec mateusz burzy\u0144ski notifications githubcom wrote react issue please look receiving authored thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "bug need use proper html entities setting", "d": "12/2016"}, {"body": "thanks andarist exactly closing since react issue", "d": "12/2016"}, {"body": "makes sense use proper html entity escaping", "d": "12/2016"}, {"body": "think calling inside updater argument ever meant supported trying accomplish need return next state call ideally throw", "d": "12/2016"}, {"body": "tl dr imho react great job offering simple short complete documentation useful warnings dev runtime would great add warning note documentation behaviour maybe would easy fix hand prevent current situation ignore call thank gaearon quick reply totally agree cases wo nt necessary using media capture media stream api lot sometimes requires multiple actions taken receive result developing new feature colleagues recognized something processed figured nested setstate regarding documentation use function first argument ensure time state props hand guarantee function triggered meant used inside updater sure find proper solution", "d": "12/2016"}, {"body": "would great add warning note documentation behaviour agree list sometimes requires multiple actions taken receive result nt quite understand need call inside updater inside updater want change state need return next state show example think would necessary", "d": "12/2016"}, {"body": "thank lot used way take care avoid looking forward friendly reminder smile implementation requires nested setstate come example", "d": "12/2016"}, {"body": "looked depth yet expect updated immediately call case documentation immediately mutate creates pending state transition accessing calling method potentially return existing value guarantee synchronous operation calls calls may batched performance gains", "d": "12/2016"}, {"body": "thanks nt realize behavior going try callback see still issue", "d": "12/2016"}, {"body": "ok callback worked paste immediately bad wrote pretty bug report nothing thanks help gaearon", "d": "12/2016"}, {"body": "nothing helped respond quickly", "d": "12/2016"}, {"body": "changing stops counter incrementing two time also think might event bubbling happening since trigger click child bubble", "d": "12/2016"}, {"body": "im really aware react internals short debug seems culprit line button handler synchronously calling effect triggers top level dispatch click event button handler moment still finished probably internal queue programatically induced click handled calls handlers button div issue resolved would call dibs guidance internals somebody way experience react quite easily fixable think", "d": "12/2016"}, {"body": "edvinerikson changing click count fix added make issue called twice obvious look logs button click called twice yeah looks like issue event bubbling see working working working example invoking click also clear show minified prod version react would argue dev mode prod mode functional behavior", "d": "12/2016"}, {"body": "need look example closer say happening quick note mutate nt likely want believe something outer div click listener chunk code code used debugging purposes nt likely related actually dispatching event dispatching custom event turn event handler code executed", "d": "12/2016"}, {"body": "aweary fyi comment code mentioned nt see issue app uses", "d": "12/2016"}, {"body": "see whats stack trace second causes second run also verified second run caused programatically clicking input within button handler reaching lines run development mode causes handlers run sidenote full native also changing lines outcome proves causing pair button click div click said caused synchrosity setup event listener button dispatch event synchronously causing new happen meeting handle div click effectively listeners set moment wasnt released yet listeners fired finally removeeventlistener div onclick later higher call stack button onclick question properly set guarded callbacks development mode code benefit additionally fall synchronous bug", "d": "12/2016"}, {"body": "got working using something must changed make brunch fail provide info please ask", "d": "12/2016"}, {"body": "updated reactrelated packages", "d": "12/2016"}, {"body": "everything installs react component react fbjs corejs promise asap uaparserjs looseenvify jstokens objectassign reactaddonscsstransitiongroup reactdom reactformelements react envify jstransform commoner glob q recast asttypes esprima sourcemap esprimafb objectassign sourcemap reacthelmet deepequal reactsideeffect fbjs whatwgfetch reactredux hoistnonreactstatics invariant lodash reactrouter history querystring stricturiencode tbh nt know core nt", "d": "12/2016"}, {"body": "please publish standalone repo instructions reproduce thanks", "d": "12/2016"}, {"body": "problem probably use reactformelements depends react installing two versions react one incompatible installed version reactdom", "d": "12/2016"}, {"body": "well whadya know thanks intrigued however understand component nt using form elements nt used yet next list would cause failure npm node still little confusing", "d": "12/2016"}, {"body": "designermonkey hard tell exactly happening without repository demonstrating issue", "d": "12/2016"}, {"body": "sadly private pressure get done get example put together asap thanks help guys", "d": "12/2016"}, {"body": "spoke soon clearout morning start afresh reinstalled without forms module issue come back", "d": "12/2016"}, {"body": "maybe using custom npm registry broken npm cache invalid file exists somehow old version", "d": "12/2016"}, {"body": "close error demonstrably caused wrong npm package bundler file exist please let know wrong missed something", "d": "12/2016"}, {"body": "said initial comment know exists confusing spotted issue regarding something like file exists brunch builds ok fails browser error", "d": "12/2016"}, {"body": "yea trying argue pointing unactionable us use keeping open figure happening please post comment manage find time share project demonstrating happy dive cheers", "d": "12/2016"}, {"body": "know thought issue already file going missing older builds may tangibly related things tried clearing npm cache problem persists running problem goes away test repo", "d": "12/2016"}, {"body": "thanks reproducing case helpful either brunch bug issue packaging latter might related hard guess leave open confirm either", "d": "12/2016"}, {"body": "thanks man", "d": "12/2016"}, {"body": "confirm running brunch build production problem goes away probably brunch bug", "d": "12/2016"}, {"body": "seams brunch issue check thread", "d": "12/2016"}, {"body": "thanks report fbarrailla able reproduce issue latest release well mentioned using unique button solves issue forces react reuse existing element event handler supposed te removed look nt happening correctly", "d": "12/2016"}, {"body": "taking look updatedomproperties explicitly nothing old event handler familiar codebase yet sure prevent event bubbling like aweary said reusing dom node causes submit event fired get keyed example prevent node unmounting would love keep looking anyone could help point right direction", "d": "12/2016"}, {"body": "source code look rendertostaticmarkup nt find anything datareactid function control dom attributes checksumattrname datareactchecksum calling page think nt see", "d": "12/2016"}, {"body": "yes known regression please subscribe updates unfortunately clear fix help would appreciated closing duplicate", "d": "12/2016"}, {"body": "use create react app please file issues repository issue tracker react said solve problem closing issue since related react welcome reopen link nt help cheers", "d": "12/2016"}, {"body": "ohh sorry", "d": "12/2016"}, {"body": "think lot dependent implementation observable part works react described current implementation described detail although changing lot fiber hope helps", "d": "12/2016"}, {"body": "looks like great post rajaraodv try reserve issue tracker actual issues feature requests going close maybe try posting communityoriented platform like feedback great day", "d": "12/2016"}, {"body": "thanks report lkroner share small test case reproducing issue use starting point", "d": "12/2016"}, {"body": "go aweary", "d": "12/2016"}, {"body": "thanks os testing actually able reproduce issue windows reproduce windows", "d": "12/2016"}, {"body": "yep using browserstack windows", "d": "12/2016"}, {"body": "thanks looks like separate issue windows take look get chance", "d": "12/2016"}, {"body": "thank realize minor nuisance thanks taking peak", "d": "12/2016"}, {"body": "upd see random translation files docscommunity left overs never mind recently rewrote docs completely delete old translations avoid confusion planned integrate sort tool decouple translations main repo decided anything hope lacker give us guidance duplicate let discuss", "d": "12/2016"}, {"body": "hey angeiii thanks issue import changeeventplugin reactlibchangeeventplugin import eventconstants reactlibeventconstants recommend support using internal modules application code modules meant internal consumption subject change without notice trying work native things suggest jquery documentaddeventlistener looking multibrowser multiinput types solutions like done react available browsers react supports even used internally detect event support nothing wrong using attach event listeners well", "d": "12/2016"}, {"body": "aweary thanks reply understand opinion addeventlistener btw great reactplugins future separated npm libraries used standalone", "d": "12/2016"}, {"body": "thanks report donataswix issue appears component expecting receive ref native component calls setnativeprops ends throws see method native components never called ref never set entirely sure maybe spicyj cpojer insight", "d": "12/2016"}, {"body": "hm nt think support rendering rn components unless mock base ones sure offhand though get particular error", "d": "12/2016"}, {"body": "reread tutorial found however reactnative components third party components rely native code rendered guess invalidates bug report anyone stumbles upon maybe good enough", "d": "12/2016"}, {"body": "thanks following", "d": "12/2016"}, {"body": "yes mentioned post note note datareactid still present serverrendered content however much smaller simply autoincrementing counter", "d": "12/2016"}, {"body": "oh miss thanks", "d": "12/2016"}, {"body": "thanks report anything particular makes think react issue tried reproducing without react", "d": "12/2016"}, {"body": "yes bug nt repeat without react append element text container scroll bottom unfortunately nt know react good reproduce react live cycle native js", "d": "12/2016"}, {"body": "tamtakoe fwiw method works", "d": "12/2016"}, {"body": "add discovered way ca nt find way anything", "d": "12/2016"}, {"body": "spicyj told best person answer", "d": "12/2016"}, {"body": "nobody interested closing issue", "d": "12/2016"}, {"body": "sorry replying earlier nt really public devtools api currently inspecting react tree really want something like add future though actually reimplementing react developer tools soon maybe keep request mind cc gaearon sebmarkbage", "d": "12/2016"}, {"body": "yep able build react tree would awesome would access props hopefully event listeners worth code currently using get listeners function getreactlisteners node function getprops let key node keystartswith reactinternalinstance return node key currentelementprops return null node nodewrappedjsobject node let handlers let props getprops props let name props namestartswith let prop props name let listener propreactboundmethod prop return handlers", "d": "12/2016"}, {"body": "looks like using third party component like reactcolors color picker please file issue react provide color picker also would help provide fiddle reproducing issue use jsfiddle starting point", "d": "12/2016"}, {"body": "nt use reactcolors", "d": "12/2016"}, {"body": "got way control multiple instances react component class btn extends component constructor props super props thisstate state thispropsstate changestate gt const state thisstatestate thispropscloseall thisopenit class app extends component constructor props super props thisstate state componentdidmount ps dont say repeat btn another stage", "d": "12/2016"}, {"body": "see happens react initialize component steps switch reuse existing one therefor method called fixed adding method component way work without attribute right way", "d": "12/2016"}, {"body": "bajalovic expected behavior setstate updates since new props object render nt want could compare use", "d": "12/2016"}, {"body": "probably another sideeffect oh react updating valueattribute reflect valueproperty nt know issue numbers memory suggested valuereflecting behavior reverted cc jimfb spicyj", "d": "12/2016"}, {"body": "followed exact steps blog post particular nt see mentioning pressed record required measurements recorded", "d": "12/2016"}, {"body": "correct following reasons chrome timeline automatically starts recording reload page steps record events react ones fix described resolves problem update apologies right seems behave differently using record button idea might would really useful able record performance page load removing call seems fix problem", "d": "12/2016"}, {"body": "remember well overhead profiling mode keeping measurements likely eat memory especially larger apps often seen chrome crash completely measurements recorded long nt think would good default sure record button works differently record page load mode could chrome bug", "d": "12/2016"}, {"body": "using transpiling", "d": "12/2016"}, {"body": "babel recommend switching babel might relying old unsupported version class transform munging behavior method names using think fix adding file like case issues nt recommend relying", "d": "12/2016"}, {"body": "see works babel closing react bug likely issue using deprecated class transform special behavior", "d": "12/2016"}, {"body": "thank replying solution works", "d": "12/2016"}, {"body": "tried closed meta tags jsx requires closing tag", "d": "12/2016"}, {"body": "sorry forgot need closing tags whole content means overall approach incorrect breaking head section much links meta iterated react component abstracting entire dom head first last lines respectively tough morning brain stopped working", "d": "12/2016"}, {"body": "fixed nt cut", "d": "12/2016"}, {"body": "great", "d": "12/2016"}, {"body": "thanks report jashcool able reproduce ie tested latest release share full test case reproducing issue upgrade latest release project resolve issue", "d": "12/2016"}, {"body": "case child components actually reactcomponents check childtype gives undefined eg react component class name mycomponent component wrapped inside another react class expect see mycomponent value check childtype sample code var reactfoo reactcreateclass render function return something var hello reactcreateclass render function return reactchildrenmap thispropschildren child index gt consolelog childtype return child reactdomrender documentgetelementbyid container code children reactfoo expect type reactfoo yeah see something returned even chrome sample code strange real code using typescript could make difference", "d": "12/2016"}, {"body": "case child components actually reactcomponents check childtype gives undefined eg react component class name mycomponent component wrapped inside another react class expect see mycomponent value check childtype get results whether use functional component code children reactfoo expect type reactfoo string element html tag like element component reference function class used construct element real code using typescript could make difference could yes might want inspect compiled javascript see may issue typescript building app", "d": "12/2016"}, {"body": "looks issue typescript closing issue related react", "d": "12/2016"}, {"body": "thanks follow", "d": "12/2016"}, {"body": "thanks issue swamikevala applies elements current plans aware change api though may change future check toplevel api makes easier deal abstracting away specific data structure returned", "d": "12/2016"}, {"body": "setting property encoded string impossible htmldom entity encoding exists allow plain string representation html represented live dom feature suggesting would literally make sense work server renderingrender string whereas actual clientside uses using direct snippet personal website safely assume uses widely afaik everyone stopped ages ago trivial decode nt really stop email address getting harvested anymore", "d": "12/2016"}, {"body": "setting property encoded string impossible htmldom entity encoding exists allow plain string representation html represented live dom think attached specific case shown example issue able set raw attribute values without running react cleanup routines developer really need ps realized title may misleading changed appropriate afaik everyone stopped ages ago trivial decode nt really stop email address getting harvested anymore nt know getting every decent website still take look github profile perhaps yup easy decode nt mean uses infact email unencoded first moved react drastic increase spam levels please take look code link react component linked problem set single attribute encode whole thing string messy fortunately small module", "d": "12/2016"}, {"body": "think attached specific case shown example issue able set raw attribute values ca nt set raw attribute values htmldom nt allow", "d": "12/2016"}, {"body": "ca nt set raw attribute values htmldom nt allow probably nt clear enough nt relevant react promotes agnostic development able set raw attribute values parsed browser sees fit way react get way reencode since browser", "d": "12/2016"}, {"body": "prasannavl getting point think literally set raw attributes htmldom via js ca nt react encoding attributes clientside sets properties calls react encodes attribute values things rendering static markup serverside part process create serialized representation dom imho solution trying apply postprocess obfuscation step mailtoaddresses html generated react", "d": "12/2016"}, {"body": "thanks making clear react clientside makes clear mismatch comes nt look fact react simply passes client side trying agnostic good react encodes attribute values things rendering static markup serverside part process create serialized representation dom yup problem lies option simply bypass attribute values", "d": "12/2016"}, {"body": "popeindustries unminified files actually meant development use check minified versions built production mentioned using cdn section installation doc page hope helps", "d": "12/2016"}, {"body": "aha sorry erroneous issue", "d": "12/2016"}, {"body": "thanks report bsharou looks like related using uses single map store items one deletes item may throw error tries accessing", "d": "12/2016"}, {"body": "clear wo nt crash code since error caught need fix", "d": "12/2016"}, {"body": "exact line", "d": "12/2016"}, {"body": "gaearon looks like appjs browser shows syntaxerror", "d": "12/2016"}, {"body": "remper disable webpack config get error", "d": "12/2016"}, {"body": "aweary build succeeded get error open browser", "d": "12/2016"}, {"body": "remper alright cloned project think figured problem issue ternary operator issue replaced removed config assets would still emitted ran browser offending line issue coming problem replacing replacing object property ca nt property access object literal definition throws fix properly replacing instances changing tested locally built successfully", "d": "12/2016"}, {"body": "aweary thanks lot", "d": "12/2016"}, {"body": "joshfarrant issue meant reference attribute element react would read input instance prop pass happens pass node nt point add element anyway nt seem clear advantage passing first place", "d": "12/2016"}, {"body": "seems like somewhere code something like controlled input meaning chance changing therefore warning thrown letting know input instead ref", "d": "12/2016"}, {"body": "course chance change outputting pure html put readonly ca nt edit", "d": "12/2016"}, {"body": "yeah warning triggered static markup right triggered via internal proptype validation input mounted transaction object could check see using nt access transaction may nontrivial suppress warning though might easy passing transaction mountcomponent able avoid adding empty event handler", "d": "12/2016"}, {"body": "kevinsimper meant way input change user interacting directly input field controlled input field react controlling value meaning readonly input ever output code assigns prop", "d": "12/2016"}, {"body": "intregrisist yes meant using javascript frontend using nodejs output pure html aweary okay good hear error side could mistake suggest even though suboptimal", "d": "12/2016"}, {"body": "answer google problem chrome feature info someone look solution add overflowanchor none style table", "d": "12/2016"}, {"body": "problem handling data react", "d": "12/2016"}, {"body": "component throws need find happens fix error component code react provide ways recover errors future still crash application fix hope helps", "d": "12/2016"}, {"body": "hi abritinthebay various validations data render worked complex data ajax possible occur errors runtime", "d": "12/2016"}, {"body": "hi gaearon thanks response problem today application consume data client outsourced data json large complex validate data problem", "d": "12/2016"}, {"body": "may problem react problem validating data bets fix data check throws add checks", "d": "12/2016"}, {"body": "abritinthebay understand cases erros runtime occur components fail", "d": "12/2016"}, {"body": "emirdeliz always put inside components handle failures data may corrupted wo nt catch failures child components really worried need every component depends unreliable data method", "d": "12/2016"}, {"body": "unstable api provide guarantees around works point current implementation must inside error boundary prevent second rendering attempt example method could return exists however work many cases either moment really good solution right aware desire feature fully supported documented next versions react track interested support lands stable version", "d": "12/2016"}, {"body": "first thing know devbuild react significantly slower production build also recreating arrays rows columns every time shouldcomponentupdate currently implemented always return true benchmark thus effect", "d": "12/2016"}, {"body": "scenario example update entire list data time shouldcomponentupdate nextprops return nextpropsrows thispropsrows thispropscolumns nextpropscolumns returns true every time wrong key point implementation b program executed time shouldcomponentupdate call stack think better way solve problem", "d": "12/2016"}, {"body": "ah thanks quick response aweary noticed typo jsfiddle meant write nevertheless bug react turns one higher order components wrapping child nodes halting events whenever changed state passed props probably side effect hoc take closer look another time got working ordinary components thanks", "d": "12/2016"}, {"body": "reacttestrenderer shallowcompare explicit dependencies project subdependency another library nt control relying", "d": "12/2016"}, {"body": "library also depend react version harder use since might different version react seems like good solution would ask library move peer dependencies", "d": "12/2016"}, {"body": "thanks investigation aweary somehow chrome developer tools stops put breakpoint clipboard paste event react version try plain dom api example report bug webkit", "d": "12/2016"}, {"body": "fyi reported webkit ant chromium issues trakers", "d": "12/2016"}, {"body": "ah unmountcomponent reacttestrenderer needs call thisunmountchildren", "d": "12/2016"}, {"body": "take look", "d": "12/2016"}, {"body": "pr fix also added test regression", "d": "12/2016"}, {"body": "got problem using minified reactminjs minified reactdomminjs occasionally log fixed using unminified files wish problem fixed minified files", "d": "12/2016"}, {"body": "chaotyler please provide project reproducing problem", "d": "12/2016"}, {"body": "im new react js looking tutorials", "d": "12/2016"}, {"body": "gaearon kind finding reason using serverside rendering rerender hole page browserside simplest example reproduce problem get current time component constructor display current time html error comes time differs serverside browserside using error showed every time coding problem component error messages different using different react libs friendly example using reactjs reactdomjs error message really need using reactminjs reactdomjs using reactminjs reactdomminjs try demo", "d": "12/2016"}, {"body": "unfortunately providing project difficult point however get little closer root cause looks like remove babelpolyfill import component sets routes app get farther along app blows trying create promise hunt continues", "d": "12/2016"}, {"body": "duplicate please follow troubleshooting instructions", "d": "12/2016"}, {"body": "please see", "d": "12/2016"}, {"body": "appears introduced result line setting value node explicitly detach defaultvalue triggers validation firefox displays feedback immediately textareas also suffer problem happy spend time working solution considered actual react issue problem firefox", "d": "12/2016"}, {"body": "think cleanest solution would build addons separate file depend probably related course probably big change make minor version", "d": "12/2016"}, {"body": "yea would change", "d": "12/2016"}, {"body": "reverting restructuring led issues option guess", "d": "12/2016"}, {"body": "unfortunately crucial direction forward", "d": "12/2016"}, {"body": "necessarily right know lot open issues itsopensourcesofixityourself imho react claims work amd changes reverted solution found works environments", "d": "12/2016"}, {"body": "point going expensive ecosystem revert many packages relied internal apis bad already broke ca nt break also technically hard revert publicly asked feedback release month issue reported understand frustrating ship sailed like help us fix please obvious fix tried times stance submitting pr refuse sign cla nt helpful either", "d": "12/2016"}, {"body": "neither blaming users finding fixing issues project nt getting us anywhere btw frustrated react stopped working think issue get attention fine resolution say people use amd officially drop support try help comments tried come solution nt know much commonjs bundling madness offense need help probably come solution help someone create pr", "d": "12/2016"}, {"body": "apologize comments made look like blaming users intention yes bad broke fault said position revert need figure way fix forward trying fix found solution break something else yet welcome anyone else help thanks", "d": "12/2016"}, {"body": "share details try something similar approach something else entirely", "d": "12/2016"}, {"body": "something similar issues webpack recall correctly give another try later today push branch somewhere", "d": "12/2016"}, {"body": "tried first patch mentioned works browser globals well amd somebody try commonjs environment sure access like", "d": "12/2016"}, {"body": "btw also tried build something upon information nt get far problem assign add properties modules could export stuff wrapped additional objects", "d": "12/2016"}, {"body": "might even enough apply patch patch diff git areactjs breactjs index areactjs breactjs moduleexports react use strict exportsgetreactdom function return reactdom var getreactdom exportsgetreactdom function return typeof reactdom undefined reactdom require reactdom exportsgetreactinstancemap function return reactdomsecretinternalsdonotuseoryouwillbefiredreactinstancemap return getreactdom secretinternalsdonotuseoryouwillbefiredreactinstancemap development production exportsgetreactperf function return reactdomsecretinternalsdonotuseoryouwillbefiredreactperf return getreactdom secretinternalsdonotuseoryouwillbefiredreactperf exportsgetreacttestutils function return reactdomsecretinternalsdonotuseoryouwillbefiredreacttestutils return getreactdom secretinternalsdonotuseoryouwillbefiredreacttestutils function dereq module exports change would probably made", "d": "12/2016"}, {"body": "sorry time jump yet let list cases need checked browser amd systemjs amd requirejs commonjs webpack aliased umd builds best test case probably call build verify internal imports work ways", "d": "12/2016"}, {"body": "checked browser amd requirejs manually cases covered tests ran seemed succeed", "d": "12/2016"}, {"body": "nt really integration tests builds different environments yea contributions welcome runs internal tests packaging", "d": "12/2016"}, {"body": "codepen modified reactwithaddons bundle including patch", "d": "12/2016"}, {"body": "requirejs", "d": "12/2016"}, {"body": "fixed codepens use instead", "d": "12/2016"}, {"body": "update coworker able find workaround involved removing reactdom import inside jsx file instead listing plugins section webpackconfigjs original file contents webpackconfigjs routesjsx updated files webpackconfigjs routesjsx works still would like get root cause record devdependencies looks like", "d": "12/2016"}, {"body": "chance try suggestion comment", "d": "12/2016"}, {"body": "gaearon encountering issue well narrowed combination try get reduced test case going soon", "d": "12/2016"}, {"body": "would really help could follow suggestion let know findings thanks", "d": "12/2016"}, {"body": "ok change made spots result chrome result", "d": "12/2016"}, {"body": "great see different try look makes exist one case could polyfill loading late", "d": "12/2016"}, {"body": "fixed enforcing load order webpack bundle babelpolyfill react reactdom thanks patience infinite wisdom gaearon", "d": "12/2016"}, {"body": "going close appear bug unfortunate broke apps hard protect cases like general recommendation run global polyfills code bundle since polyfills effectively modifying environment one take care consistently", "d": "12/2016"}, {"body": "damonbauer whole babelpolyfill heavy add symbol polyfill", "d": "12/2016"}, {"body": "thank everyone thread esp gaearon damonbauer case helps someone else changes ended making", "d": "12/2016"}, {"body": "wondering move forward directions help capable developer try submit pull request", "d": "12/2016"}, {"body": "looking intro event system might helpful", "d": "12/2016"}, {"body": "need add dependencies event types tricky though plugin shared web native different event names may work always include mouse events sure causes problems rn", "d": "12/2016"}, {"body": "dependencies exactly set mouse dependencies rnw stopped working react", "d": "12/2016"}, {"body": "oh would thought works code run responder event handler cause deps listened", "d": "12/2016"}, {"body": "problem module longer exports key mirror event type values patch resolved issue rnw", "d": "12/2016"}, {"body": "stokemasterjack get lucky charset fix webpack still spits thanks anyway", "d": "12/2016"}, {"body": "got bit reactaddonstestutils compatible react makes wish npm shrinkwrapped dev dependencies well assumed backwards compatibility major versions goal reactaddonstestutils", "d": "12/2016"}, {"body": "react currently support using different versions packages one project working decouple point possible take us", "d": "12/2016"}, {"body": "hi gaearon sorry late response provide examples feature useful react storybook react storybook info addon info addon parses components story show table component prop types default props work correctly simple types number string node isrequired flag link proptypesmap generation implement requested feature addon work correctly prop types forgekit forgekit medium forgekit merge prop types default props component components features sometimes collision defined prop type names prop types defined features prop type also probably collision mean case ok case prop type collision prop types matching reachable", "d": "12/2016"}, {"body": "btw maybe save autogenerated attribute string good idea complex props nested shapes arrayofs etc ok feature request discuss", "d": "12/2016"}, {"body": "gaearon updates", "d": "12/2016"}, {"body": "worried something like wo nt scale nicely large codebases recursive deeply nested existing types happy take look pr tests get better idea want support sure something would want", "d": "12/2016"}, {"body": "lacker sure", "d": "12/2016"}, {"body": "lacker lucasaragno think example direct comparison added well link would helpful", "d": "12/2016"}, {"body": "sent", "d": "12/2016"}, {"body": "cool let close issue amp continue discussion pr thanks", "d": "12/2016"}, {"body": "longer valid way create webcomponent opened track rather cram spec behavior change", "d": "12/2016"}, {"body": "sounds right hocs produce components want elements creating new components extremely expensive also destroys state", "d": "12/2016"}, {"body": "want add error handling error thrown detachref callbacks umbrella maybe happy works already however believe case might problematic since unmount first throw second wo nt cleaned", "d": "12/2016"}, {"body": "closing since followup jeremywuuuuu still issue feel free provide fiddle reproducing issue look reopening", "d": "12/2016"}, {"body": "translationgang ready help russian translation soon infrastructure", "d": "12/2016"}, {"body": "pretty awesome keep posted", "d": "12/2016"}, {"body": "awesome tell littlebigprogramming infra ready jump korean translation", "d": "12/2016"}, {"body": "work integrating nonreact code show wrap jquery plugin react expose react component backbone view consume backbone models gaearon times jquery used backbone use well also use react components angular basics would fun", "d": "12/2016"}, {"body": "wondering example code nt really understand filtering producttable responsibility would nt make sense filtering filterableproducttable pass filtered products producttable", "d": "12/2016"}, {"body": "similar issue without need rerendering react components everything created separated documentfragment moved main document later events registered inside documentfragment never fire moved looked code react registers event pair event document comes across mounting process moved outside react event system idea listen event main document following singleline change would correct problem imagine needs completely different change hack possible could work correctly future diff diff git asrcrenderersdomstackclientreactdomcomponentjs bsrcrenderers index asrcrenderersdomstackclientreactdomcomponentjs bsrcrenderersdomstackclientreactdomcomponentjs function ensurelisteningto inst registrationname transacti var isdocumentfragment containerinfonode amp amp containerinfonodenodetype var doc isdocumentfragment containerinfonode containerinfoownerdocu listento registrationname doc listento registrationname document function inputpostmount", "d": "12/2016"}, {"body": "believe may misunderstood happens mount sorry frivolous ticket", "d": "12/2016"}, {"body": "import react component react class parent extends component constructor props super props thisstate internal msg default internalchange thissetstate internal new render binlog parent rerender return class child extends component shouldcomponentupdate nextprops nextstate consolelog insert break point find thisprops nextprops becuase parent gets rerendered triggered setstate builds new vdom reactelement nextprops prop passed new reactelement obviously nextprops thisprops points different object thus shalldow equal child gets rerendered render binlog child rerender const msg thisprops return msg msg export default parent", "d": "12/2016"}, {"body": "use case need hook fires timing perspective like order needs child first parent second need render style sheet component styles source order based specificity logic want able pass class name rendered parent child class name needs higher specificity class rendered child styles need always rendered component dom renders avoid recalcs repaints current state sheet rendered parent lifecycle lower specificity one child means ca nt override styles parent", "d": "12/2016"}, {"body": "zdila ever able reproduce", "d": "12/2016"}, {"body": "aweary since working part", "d": "12/2016"}, {"body": "since response going go ahead assume longer issue close", "d": "12/2016"}, {"body": "chrome seems fix experienced problem react chrome updating chrome ca nt reproduce", "d": "12/2016"}, {"body": "confirmed issue nt happened chrome", "d": "12/2016"}, {"body": "also confirm chrome warning goes away", "d": "12/2016"}, {"body": "still worked maybe try take stab", "d": "12/2016"}, {"body": "joelseq totally dropped ball one sorry please take like mon dec joel sequeira notifications githubcom wrote still worked maybe try take stab receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "looks like nt activity weeks anyone mind claim", "d": "12/2016"}, {"body": "think fixed improved thanks offer help though", "d": "12/2016"}, {"body": "wanted issue think would really help custom element interop nt know react needs watch instead could something like preact check property node much work default setting properties time custom element built polymer believe skatejs property setters autogenerated rely elements encouraging developers rely properties source truth building custom elements cc blasten sebmarkbage treshugart", "d": "12/2016"}, {"body": "leaning towards propertiesifavailable model", "d": "12/2016"}, {"body": "propertiesifavailable done skate incremental dom wrapper fwiw however recently messing around alternative approach similar proposed repo playground moment really like full control set properties attributes events special props definitely think worth considering error prone internal checks need done example proposed approach nt work custom element polyfill possible would nt upgraded yet thus upgraded props time check", "d": "12/2016"}, {"body": "robdodson custom element built polymer believe skatejs property setters autogenerated rely elements yup first class props", "d": "12/2016"}, {"body": "possibility raise condition upgrading custom element running dom reconciliation example dom initially serverside rendered app runs browser nt native ce react reconciles dom polyfill upgrades ces next micro task react might set attribute property depending order calls set attribute value object ce end similar issue time ce upgrades asynchronously react always set values properties ce constructor could check property defined instance eg instance prop remove call setter prototype instead great better thoughts", "d": "12/2016"}, {"body": "kweiberth ca nt find related change either nt think actually fixed like also able reproduce bug windows using react", "d": "12/2016"}, {"body": "yeah sure ping get definitive update", "d": "12/2016"}, {"body": "sure changes master supposed fixed nhunzaker know try using latest master builds available see issue actually resolved master changes may part major release clear yet", "d": "12/2016"}, {"body": "may part slated", "d": "12/2016"}, {"body": "yup fixes noted bunch places could backported anyone wanted act", "d": "12/2016"}, {"body": "getting phase unlikely spend effort need get fiber feature parity asap know frustrating also looking way spend time dom issues future right focus ensuring react continues relevant coming years think fiber best shot sorry kind stuff slipping cracks", "d": "12/2016"}, {"body": "first let say ya great work super hard thank everything totally understand priorities team however think illustrates team well resourced structured address large section majority react users frustrating spending time dom issues second order concern libraries whose main users web developers seems like team moved focusing core without setting empowering another group maintain work reactdom know plenty folks would happy work included tried work really little support feedback attention team primarily dom work gated review core team nt time spend great example offered work backporting fix wrote ca nt get core dev give feedback without conversation taking months", "d": "12/2016"}, {"body": "like say would happy work anyone keeping including backporting core team continues focusing fiber nt want overstate position able review approve prs would happy work others getting fixes like merged", "d": "12/2016"}, {"body": "aweary details may worth quick chat generally react discord monasticpanic time", "d": "12/2016"}, {"body": "interested well bad discord app start logging", "d": "12/2016"}, {"body": "going chat plan dom maintenance next meeting keep posted", "d": "12/2016"}, {"body": "experienced problem simple use case browser loads implicit tbody added ends react freaks found tbody tag instead tr tag seems way strict opinion also even sure getting noticed text selections persisting render indicating properly reusing elements anyways use rendertostaticmarkup work around issue said less efficient neither preserving text selections sure rendertostaticmarkup certainly less bytes transfer", "d": "12/2016"}, {"body": "hate pitch metoo pointed discussion encountering problem clojurescriptreact app use serverside rendering works great except pages lots static content hoping could avoid transferring static content twice already dom never change hope eventually become visible problem people start encountering limitation", "d": "12/2016"}, {"body": "jwr certainly possible means client perform different rendering logic server ie server component renders initial html client component provide value nt change really big problem hack quite easily", "d": "12/2016"}, {"body": "app print perfprintwasted one component instance count around render count around looks like quite scary component contains components fetching data rest api redux calls overall start optimizing generally would criteria considered making much rerendering", "d": "12/2016"}, {"body": "app feels slow production mode good time look optimizing feels fine nt need worry focus user experience render count", "d": "12/2016"}, {"body": "got pls report bug request console using warning appears use web audio object component children frame frame static dom", "d": "12/2016"}, {"body": "norm share small test case reproducing issue use starting point", "d": "12/2016"}, {"body": "aweary probably investigated made comment mistake part actually typeerror react warning use web audio object inside iframe component stateful one holding frame updates iframe component gets new key thus unmounts fresh frame component rendered audio lib using howler requires initialized array strings passed one time got warning still reproduce want would broken code", "d": "12/2016"}, {"body": "reproducing case would still nice would nt expect warning even code throws fix", "d": "12/2016"}, {"body": "able reproduce issue simple indication generated exception op error ensured", "d": "12/2016"}, {"body": "looks like may still issue rearing ugly head using react seeing behavior", "d": "12/2016"}, {"body": "likely using babel trouble importing mutable field using import export syntax see want change way import following replace occurences fixes issue", "d": "12/2016"}, {"body": "updates might fixed", "d": "12/2016"}, {"body": "heads still seems issue even struggling reproduce seems sort ninja bug nevertheless wondering anyone still dealing problem", "d": "12/2016"}, {"body": "nt seen anything", "d": "12/2016"}, {"body": "useful fixed", "d": "12/2016"}, {"body": "run behaviour think docs could elaborate little bit specific case setting subscription calling keep track subscribed part app would immediately figure redirect needed component would unmount change state fully applied guess docs could mention referencesids sideeffects kept state", "d": "12/2016"}, {"body": "martijnhols careful using operator workaround state variable set comparison evaluate empty string overwrite field value workaround use helper function check using operator wrap variables like", "d": "12/2016"}, {"body": "cool thank", "d": "12/2016"}, {"body": "randscullard think fits use case", "d": "12/2016"}, {"body": "byronmwong thanks actually found good solution see discussion pr details", "d": "12/2016"}, {"body": "workaround triggers react warning calling proptypes directly nice could something like looks like proptypesshape using reference object validation const node value proptypesany const nodeshape proptypesshape node nodechildren proptypesarrayof nodeshape isrequired fine arbitrarily slow since proptype checking dev builds", "d": "12/2016"}, {"body": "workaround triggers react warning calling proptypes directly chance read page linked warning describes exactly avoid false positives", "d": "12/2016"}, {"body": "ah think copied example code wrong converted arrow functions habit secret argument already getting passed posted workaround via functionprototypeapply thanks edit also seems like context relevant proptype function since tried use arrow functions caused problems", "d": "12/2016"}, {"body": "hmm would nt expect share repro case", "d": "12/2016"}, {"body": "recursive shape import proptypes react nested proptypes function lazyfunction f return function return f apply arguments let gameshape const teamshape proptypesshape side proptypesoneof home visitor isrequired score proptypesshape score proptypesnumberisrequired seed proptypesshape displayname proptypesstringisrequired rank proptypesnumberisrequired sourcegame lazyfunction gt gameshape team proptypesshape id proptypesstringisrequired name proptypesstringisrequired gameshape proptypesshape name proptypesstringisrequired teams proptypesarrayof teamshape isrequired export default gameshape wrote lazyfunction using arrow functions first time think actually arguments coming inner function babel since version works", "d": "12/2016"}, {"body": "alangpierce close correct quite synchronously throws reason resolved promise handlers called solution use pattern js const makecancelable promise gt let hascanceled false const wrappedpromise new promise resolve reject gt promisethen val gt hascanceled reject iscanceled true resolve val error gt hascanceled reject iscanceled true reject error return promise wrappedpromise cancel hascanceled true", "d": "12/2016"}, {"body": "still get error", "d": "12/2016"}, {"body": "marktani looks like error type system react using flow looks like included dom lib nt playsinline", "d": "12/2016"}, {"body": "use typescript case nt really need curious thanks clarification", "d": "12/2016"}, {"body": "gaearon could added documentation sure matters help understand set field ref callback nt think please correct wrong whenever new instance component mounted presence old instance callback old component instance called right problem becomes apparent multiple instances component mounted one logic inside component dependent component instance set callback learned hard way", "d": "12/2016"}, {"body": "fatman show minimal example demonstrating problem long nt change type key get instance ref right getting cases unobservable code ref callback", "d": "12/2016"}, {"body": "gaearon right get instance took time wrap head around right getting part noticed came across piece code assigned component instance class variable say instance somewhere inside click handler check see event target child mounted instance multiple instances component error message took digging understand reason behind problem refs per se code written without completely understanding refs regard might great idea information somewhere docs", "d": "12/2016"}, {"body": "also css workaroud updated corydanielson fiddle", "d": "12/2016"}, {"body": "besides easy workaround replicate behaviour element native events behave way moving slider around triggers event releasing triggers", "d": "12/2016"}, {"body": "hoc like example calling super example seems work fact whole benefit missing something", "d": "12/2016"}, {"body": "think case points rather sure", "d": "12/2016"}, {"body": "calling super example seems work fact whole benefit sure recommend pattern anywhere also traditionally called hoc technically rarely good idea experience read", "d": "12/2016"}, {"body": "gaearon possible react without component tree could reconsider please public api component tree traversal would allow writing de serializers rehydrate without resorting global state", "d": "12/2016"}, {"body": "aware use see place discuss right middle react rewrite good time us expose internals", "d": "12/2016"}, {"body": "one thing promises ca nt easily callbacks return js function foohappens foo return thissetstate foo foo function barhappens bar return thisfoohappens barfoo function consolelog bar", "d": "12/2016"}, {"body": "news thank", "d": "12/2016"}, {"body": "also lost time debugging please support important part css protocol support entire protocol pieces like would expensive check every value important would cheap check every value ending space ending important would also leadin supporting advanced css directives", "d": "12/2016"}, {"body": "looks like could closed explanation", "d": "12/2016"}, {"body": "case somebody needs functionality published module", "d": "12/2016"}, {"body": "looks like issue resolved", "d": "12/2016"}, {"body": "trying create hoc nt seem work unless add timeout expected js import react proptypes react export default class checkbox extends reactcomponent static proptypes indeterminate proptypesbool checked proptypesbool", "d": "12/2016"}, {"body": "let elaborate vancoding example maybe initialize nt good name name kindof make clear intended used server environment rendering delayed function returns aka client ideas also would good hear core team whether technical otherwise impediments developing rendertostringasync method", "d": "12/2016"}, {"body": "nmaro well think function nt return anything prefer name start get apart still think would best way nt mind called end besides done proof concept lines code intended production use tests various components successful react team still want happen would hard party library", "d": "12/2016"}, {"body": "alternatively could add option rendertostring", "d": "12/2016"}, {"body": "nmaro would make return type function dependent provided options nt consider good practice think function always return result type", "d": "12/2016"}, {"body": "vancoding example use code thirdparty lib", "d": "12/2016"}, {"body": "vancoding cool honestly think going hard integrate react internal rendering algorithm check get lost react internals imo really need opinion someone core", "d": "12/2016"}, {"body": "sedubois use function like would use normal rendertostring function returns promise resolves string instead returning string directly using would look like var react require react var renderasync require reactrenderasync var mycomponent require mycomponent renderasync reactcreateelement mycomponent props function html consolelog html theory able render existing react component way normal rendertostring difference async components supported well nmaro right would helpful", "d": "12/2016"}, {"body": "getting problem somewhat exotic environment though overloading gmail via chrome extension event propagation stop sure good reason hijacking event system creating syntheticevents kinda takes away something really like react fact always tophatch let plugnplay environment", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "", "d": "12/2016"}, {"body": "please stop adding comments want support issue add reaction original post", "d": "12/2016"}, {"body": "attribute supported see", "d": "12/2016"}, {"body": "spicyj support dropped close", "d": "12/2016"}, {"body": "feel free especially since nt regression sat dec brandon dail notifications githubcom wrote spicyj support dropped close receiving mentioned reply email directly view github mute thread", "d": "12/2016"}, {"body": "gaearon plan still deprecate addons would possible add deprecation notice react docs page still comes high search results indication addon deprecated happened stumble issue trying get work adding deprecation notice might save people time future", "d": "12/2016"}, {"body": "extract solution issue javascript export default class input extends component static proptypes value proptypesstring onfieldchange proptypesfunc static defaultprops value componentdidmount thislistener setinterval gt thisinput thispreviousvalue thisinputvalue return componentwillunmount clearinterval thislistener refinput input gt thisinput input render const label value onfieldchange thisprops valueonfieldchange updates state new value setinterval code", "d": "12/2016"}, {"body": "anyone confirm issue fixed ios ca nt reproduce", "d": "12/2016"}, {"body": "simplest approach able come", "d": "12/2016"}, {"body": "met problem made example try write something like modify middle text problem find new cursor translate cursor pos line many important chars many unimportant chars apply rules new text suitable textformaters since may add spaces wo nt change line count generally importtant chars nonspaces unimportant chars spaces", "d": "12/2016"}, {"body": "adding two cents able work around adding following top processenvnodeenv production require reactdistreactminjs requirecache requireresolve react requirecache requireresolve reactdistreactminjs previously wrapped react using local modules suggested caused lot issues seems get job done without much overhead complexity", "d": "12/2016"}, {"body": "code performs build step main react repo spicyj link leads tried repo search avail like idea lot big plus readability", "d": "12/2016"}, {"body": "moved transform facebookfbjs repo", "d": "12/2016"}, {"body": "awesome found thanks spicyj", "d": "12/2016"}, {"body": "following gaearon willdady suggestions simple dropdown implementation could like following one note dropdown remains open user clicks input field outside dropdown dropdownjs js import react component proptypes react class dropdown extends component constructor props super props thishandleclick thishandleclickbind componentdidmount documentaddeventlistener click thispropsonbodyclick componentwillunmount documentremoveeventlistener click thispropsonbodyclick handleclick e enativeeventstopimmediatepropagation render return dropdownproptypes children proptypesnode onbodyclick proptypesfunc dropdowndefaultprops onbodyclick gt export default dropdown js import react component proptypes react import cx classnames import dropdown dropdown class mycomponent extends component constructor props super props thisstate ismenuopen false thishandleinputclick thishandleinputclickbind thishandlebodyclick thishandlebodyclickbind handleinputclick thissetstate ismenuopen true handlebodyclick documentactiveelement thistextinput return thissetstate ismenuopen false render return option option option export default mycomponent", "d": "12/2016"}, {"body": "also note reactonclickoutside library seen tons contributions people last months constant modernization cycle comment implemented higher order component turn anything throw component onclickoutside monitoring making dropdown menus really easy implement", "d": "12/2016"}, {"body": "update addingremoving pointer event listeners component lifecycle", "d": "12/2016"}, {"body": "question love see implemented soon", "d": "12/2016"}, {"body": "really needed since pointer events chrome going shipped ff", "d": "12/2016"}, {"body": "wrote component allows declarative pointer event binding working easy substitute react officially supports update lives repo npm great chrome ff shipping pointer events safari biggest worry end component plays well official pointer events polyfill project wide support", "d": "12/2016"}, {"body": "many valid use cases described possible add custom attributes came across another one attach track starts loading embedded page since element nt accessible starts loading attribute parsed edit event fired attached html element", "d": "12/2016"}, {"body": "removing whitelist need give people time clean existing codebases warning added wait future major release understand frustration would agree slight inconvenience worth keeping ecosystem diverging", "d": "12/2016"}, {"body": "sebmarkbage talking slight inconvenience hindering many developers development forcing workarounds hacks nearly three half years suffice say divergence standards best practices order ensure development continue projects entirely acceptable sideeffect something imperative would agree contributed thread among many many others eagerly waiting future major release", "d": "12/2016"}, {"body": "swivelgames refer section stability design principles know people want change added deprecation warning spreading nondom props generated ton negative feedback people relied spreading props know important people thread deprecating necessary step introduce breakage deprecation happened react deployed half year hope agree reasonable timeframe wait projects update including open source projects many people rely example react bootstrap similar libraries", "d": "12/2016"}, {"body": "better late never guess sadly issue raised years ago deprecation cycle would necessary feedback taken count immediately blaming anyone giving input decided use react production projects since noticed move done issue", "d": "12/2016"}, {"body": "would indeed great issues could taken account immediately however software developed time always pressing issues try best prioritize work likely help people particular request lot support many things working appreciate sharing concerns let keep thread topic yes change wanted make yes took us get add warning open popular issue find comments saying particular issue urgent one sorry particular change prevented using react hope found alternative better suits needs meantime also hope reconsider make change cheers", "d": "12/2016"}]